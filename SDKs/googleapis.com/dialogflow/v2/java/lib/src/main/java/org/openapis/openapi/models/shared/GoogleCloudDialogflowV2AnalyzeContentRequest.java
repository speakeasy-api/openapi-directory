/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDialogflowV2AnalyzeContentRequest - The request message for Participants.AnalyzeContent.
 */
public class GoogleCloudDialogflowV2AnalyzeContentRequest {
    /**
     * Represents the parameters of human assist query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assistQueryParams")
    public GoogleCloudDialogflowV2AssistQueryParameters assistQueryParams;
    public GoogleCloudDialogflowV2AnalyzeContentRequest withAssistQueryParams(GoogleCloudDialogflowV2AssistQueryParameters assistQueryParams) {
        this.assistQueryParams = assistQueryParams;
        return this;
    }
    
    /**
     * Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cxParameters")
    public java.util.Map<String, Object> cxParameters;
    public GoogleCloudDialogflowV2AnalyzeContentRequest withCxParameters(java.util.Map<String, Object> cxParameters) {
        this.cxParameters = cxParameters;
        return this;
    }
    
    /**
     * Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `"Hello #welcome_event.name! What can I do for you today?"`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventInput")
    public GoogleCloudDialogflowV2EventInput eventInput;
    public GoogleCloudDialogflowV2AnalyzeContentRequest withEventInput(GoogleCloudDialogflowV2EventInput eventInput) {
        this.eventInput = eventInput;
        return this;
    }
    
    /**
     * Represents the parameters of the conversational query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryParams")
    public GoogleCloudDialogflowV2QueryParameters queryParams;
    public GoogleCloudDialogflowV2AnalyzeContentRequest withQueryParams(GoogleCloudDialogflowV2QueryParameters queryParams) {
        this.queryParams = queryParams;
        return this;
    }
    
    /**
     * Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replyAudioConfig")
    public GoogleCloudDialogflowV2OutputAudioConfig replyAudioConfig;
    public GoogleCloudDialogflowV2AnalyzeContentRequest withReplyAudioConfig(GoogleCloudDialogflowV2OutputAudioConfig replyAudioConfig) {
        this.replyAudioConfig = replyAudioConfig;
        return this;
    }
    
    /**
     * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestId")
    public String requestId;
    public GoogleCloudDialogflowV2AnalyzeContentRequest withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    /**
     * ============================================================================ Auxiliary proto messages. Represents the natural language text to be processed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textInput")
    public GoogleCloudDialogflowV2TextInput textInput;
    public GoogleCloudDialogflowV2AnalyzeContentRequest withTextInput(GoogleCloudDialogflowV2TextInput textInput) {
        this.textInput = textInput;
        return this;
    }
    
}
