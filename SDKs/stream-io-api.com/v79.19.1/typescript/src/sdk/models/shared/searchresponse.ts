/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SearchResult } from "./searchresult";
import { SearchWarning } from "./searchwarning";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class SearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: string;

  /**
   * Value to pass to the next search query in order to paginate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  /**
   * Value that points to the previous page. Pass as the next value in a search query to paginate backwards
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  /**
   * Search results
   */
  @SpeakeasyMetadata({ elemType: SearchResult })
  @Expose({ name: "results" })
  @Type(() => SearchResult)
  results: SearchResult[];

  @SpeakeasyMetadata()
  @Expose({ name: "results_warning" })
  @Type(() => SearchWarning)
  resultsWarning?: SearchWarning;
}
