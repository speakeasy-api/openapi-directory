"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import recipeoutputformat_enum as shared_recipeoutputformat_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetComponentResponse:
    r"""Success"""
    
    recipe: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipe') }})  
    recipe_output_format: shared_recipeoutputformat_enum.RecipeOutputFormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipeOutputFormat') }})  
    tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})  
    