// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RoleKindEnum - Role type.
type RoleKindEnum string

const (
	RoleKindEnumKindUnspecified RoleKindEnum = "KIND_UNSPECIFIED"
	RoleKindEnumRole            RoleKindEnum = "ROLE"
	RoleKindEnumClusterRole     RoleKindEnum = "CLUSTER_ROLE"
)

func (e RoleKindEnum) ToPointer() *RoleKindEnum {
	return &e
}

func (e *RoleKindEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KIND_UNSPECIFIED":
		fallthrough
	case "ROLE":
		fallthrough
	case "CLUSTER_ROLE":
		*e = RoleKindEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RoleKindEnum: %v", v)
	}
}

// Role - Kubernetes Role or ClusterRole.
type Role struct {
	// Role type.
	Kind *RoleKindEnum `json:"kind,omitempty"`
	// Role name.
	Name *string `json:"name,omitempty"`
	// Role namespace.
	Ns *string `json:"ns,omitempty"`
}
