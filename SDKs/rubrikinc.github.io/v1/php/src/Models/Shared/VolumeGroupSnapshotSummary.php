<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VolumeGroupSnapshotSummary - Returns details about a snapshot.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VolumeGroupSnapshotSummary
{
    /**
     * $archivalLocationIds
     * 
     * @var ?array<string> $archivalLocationIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('archivalLocationIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $archivalLocationIds = null;
    
    /**
     * Integer value that represents the archival state of a snapshot. 0 means the snapshot is not archived. 2 means the snapshot is archived. 3 means the snapshot is downloaded from the archival location. 4 means the snapshot is in the process of being downloaded from the archival location. 6 means the snapshot is stored locally and at the archival location.
     * 
     * 
     * 
     * @var ?int $cloudState
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudState')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cloudState = null;
    
    /**
     * The current cloud storage tier of a snapshot. A snapshot's cloud storage tier determines how the cloud provider will determine storage and retrieval costs, as well as retrieval latency. Accepted values are Hot, Cool, AzureArchive (with Azure locations), Glacier, and GlacierDeepArchive (for AWS S3 locations). The value Cold has been deprecated in favor of AzureArchive, which is the recommended replacement value.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SnapshotCloudStorageTierEnum $cloudStorageTier
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudStorageTier')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SnapshotCloudStorageTierEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SnapshotCloudStorageTierEnum $cloudStorageTier = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('consistencyLevel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $consistencyLevel = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $date;
    
	#[\JMS\Serializer\Annotation\SerializedName('expirationDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expirationDate = null;
    
    /**
     * The logical size of the Volume Group snapshot in bytes.
     * 
     * @var ?int $fileSizeInBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileSizeInBytes')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fileSizeInBytes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Configuration details of the volume(s) included in the snapshot.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\VolumeGroupSnapshotVolumeSummary> $includedVolumes
     */
	#[\JMS\Serializer\Annotation\SerializedName('includedVolumes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VolumeGroupSnapshotVolumeSummary>')]
    public array $includedVolumes;
    
    /**
     * Integer value representing the state of the indexing job for a snapshot. 0 means that the indexing has not begun or is in progress. 1 means indexing completed successfully. 2 means that the indexer failed to process this snapshot.
     * 
     * 
     * 
     * @var ?int $indexState
     */
	#[\JMS\Serializer\Annotation\SerializedName('indexState')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $indexState = null;
    
    /**
     * A Boolean that indicates whether or not custom retention is applied to the snapshot.
     * 
     * 
     * 
     * @var bool $isCustomRetentionApplied
     */
	#[\JMS\Serializer\Annotation\SerializedName('isCustomRetentionApplied')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isCustomRetentionApplied;
    
	#[\JMS\Serializer\Annotation\SerializedName('isOnDemandSnapshot')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isOnDemandSnapshot;
    
    /**
     * A Boolean that indicates whether the snapshot is placed on Legal Hold. When this value is 'true', the snapshot is placed on Legal Hold.
     * 
     * @var ?bool $isPlacedOnLegalHold
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPlacedOnLegalHold')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPlacedOnLegalHold = null;
    
    /**
     * A Boolean that indicates whether the snapshot is being retained under a Retention Lock SLA Domain. When this value is 'true', the snapshot is being retained under a Retention Lock SLA Domain.
     * 
     * @var ?bool $isRetainedByRetentionLockSla
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRetainedByRetentionLockSla')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isRetainedByRetentionLockSla = null;
    
    /**
     * A human-readable name of the mount points included in the snapshot.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * ID of the parent snapshot if the current snapshot is a child snapshot. Child snapshots are snapshots of objects that are part of an app, either a vCloud Director vApp or an AppBlueprint. Snapshots of the app are parent snapshots.
     * 
     * 
     * 
     * @var ?string $parentSnapshotId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentSnapshotId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentSnapshotId = null;
    
    /**
     * $replicationLocationIds
     * 
     * @var array<string> $replicationLocationIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('replicationLocationIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $replicationLocationIds;
    
    /**
     * (Deprecated) For a policy based snapshot this parameter contains the ID of the SLA Domain currently assigned to the data source of that snapshot. For an on demand snapshot this field corresponds to the SLA Domain that was assigned when the snapshot was taken. A data source, and individual snapshots, can be reassigned to a different SLA Domain, or the SLA Domain can be modified. In any of these cases this parameter can contain a stale and incorrect value. To view retention information for this snapshot, use snapshotRetentionInfo instead.
     * 
     * @var string $slaId
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $slaId;
    
    /**
     * (Deprecated) For a policy based snapshot this parameter contains the name of the SLA Domain currently assigned to the data source of that snapshot. For an on demand snapshot this field corresponds to the SLA Domain that was assigned when the snapshot was taken. A data source, and individual snapshots, can be reassigned to a different SLA Domain, or the SLA Domain can be modified. In any of these cases this parameter can contain a stale and incorrect value. To view retention information for this snapshot, use snapshotRetentionInfo instead.
     * 
     * @var string $slaName
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $slaName;
    
	#[\JMS\Serializer\Annotation\SerializedName('snapshotRetentionInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SnapshotRetentionInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SnapshotRetentionInfo $snapshotRetentionInfo = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceObjectType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceObjectType = null;
    
    /**
     * Specifies whether the snapshot was taken using the fast VHDX builder, which became available in the Rubrik CDM 5.1 release.
     * 
     * @var ?bool $usedFastVhdx
     */
	#[\JMS\Serializer\Annotation\SerializedName('usedFastVhdx')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $usedFastVhdx = null;
    
    /**
     * The unique ID of the Volume Group that was snapshoted.
     * 
     * @var string $volumeGroupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumeGroupId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $volumeGroupId;
    
	public function __construct()
	{
		$this->archivalLocationIds = null;
		$this->cloudState = null;
		$this->cloudStorageTier = null;
		$this->consistencyLevel = null;
		$this->date = new \DateTime();
		$this->expirationDate = null;
		$this->fileSizeInBytes = null;
		$this->id = "";
		$this->includedVolumes = [];
		$this->indexState = null;
		$this->isCustomRetentionApplied = false;
		$this->isOnDemandSnapshot = false;
		$this->isPlacedOnLegalHold = null;
		$this->isRetainedByRetentionLockSla = null;
		$this->name = "";
		$this->parentSnapshotId = null;
		$this->replicationLocationIds = [];
		$this->slaId = "";
		$this->slaName = "";
		$this->snapshotRetentionInfo = null;
		$this->sourceObjectType = null;
		$this->usedFastVhdx = null;
		$this->volumeGroupId = "";
	}
}
