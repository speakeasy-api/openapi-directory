"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2detectintentresponse as shared_googleclouddialogflowv2detectintentresponse
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowV2AutomatedAgentReplyAutomatedAgentReplyTypeEnum(str, Enum):
    r"""AutomatedAgentReply type."""
    AUTOMATED_AGENT_REPLY_TYPE_UNSPECIFIED = 'AUTOMATED_AGENT_REPLY_TYPE_UNSPECIFIED'
    PARTIAL = 'PARTIAL'
    FINAL = 'FINAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2AutomatedAgentReply:
    r"""Represents a response from an automated agent."""
    
    allow_cancellation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowCancellation'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the partial automated agent reply is interruptible when a later reply message arrives. e.g. if the agent specified some music as partial response, it can be cancelled."""  
    automated_agent_reply_type: Optional[GoogleCloudDialogflowV2AutomatedAgentReplyAutomatedAgentReplyTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('automatedAgentReplyType'), 'exclude': lambda f: f is None }})
    r"""AutomatedAgentReply type."""  
    cx_current_page: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cxCurrentPage'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the current Dialogflow CX conversation page. Format: `projects//locations//agents//flows//pages/`."""  
    detect_intent_response: Optional[shared_googleclouddialogflowv2detectintentresponse.GoogleCloudDialogflowV2DetectIntentResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detectIntentResponse'), 'exclude': lambda f: f is None }})
    r"""The message returned from the DetectIntent method."""  
    