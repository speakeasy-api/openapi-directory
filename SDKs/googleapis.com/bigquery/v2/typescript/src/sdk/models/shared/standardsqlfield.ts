/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StandardSqlDataType } from "./standardsqldatatype";
import { Expose, Type } from "class-transformer";

/**
 * A field or a column.
 */
export class StandardSqlField extends SpeakeasyBase {
  /**
   * Optional. The name of this field. Can be absent for struct fields.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The data type of a variable such as a function argument. Examples include: * INT64: `{"typeKind": "INT64"}` * ARRAY: { "typeKind": "ARRAY", "arrayElementType": {"typeKind": "STRING"} } * STRUCT>: { "typeKind": "STRUCT", "structType": { "fields": [ { "name": "x", "type": {"typeKind": "STRING"} }, { "name": "y", "type": { "typeKind": "ARRAY", "arrayElementType": {"typeKind": "DATE"} } } ] } }
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => StandardSqlDataType)
  type?: StandardSqlDataType;
}
