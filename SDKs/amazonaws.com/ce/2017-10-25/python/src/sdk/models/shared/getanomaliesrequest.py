"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import anomalydateinterval as shared_anomalydateinterval
from ..shared import anomalyfeedbacktype_enum as shared_anomalyfeedbacktype_enum
from ..shared import totalimpactfilter as shared_totalimpactfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAnomaliesRequest:
    
    date_interval: shared_anomalydateinterval.AnomalyDateInterval = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DateInterval') }})  
    feedback: Optional[shared_anomalyfeedbacktype_enum.AnomalyFeedbackTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Feedback'), 'exclude': lambda f: f is None }})  
    max_results: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxResults'), 'exclude': lambda f: f is None }})  
    monitor_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitorArn'), 'exclude': lambda f: f is None }})  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextPageToken'), 'exclude': lambda f: f is None }})  
    total_impact: Optional[shared_totalimpactfilter.TotalImpactFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalImpact'), 'exclude': lambda f: f is None }})  
    