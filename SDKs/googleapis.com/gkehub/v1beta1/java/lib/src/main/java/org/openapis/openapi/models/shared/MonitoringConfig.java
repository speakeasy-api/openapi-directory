/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MonitoringConfig - This field informs Fleet-based applications/services/UIs with the necessary information for where each underlying Cluster reports its metrics.
 */
public class MonitoringConfig {
    /**
     * Immutable. Cluster name used to report metrics. For Anthos on VMWare/Baremetal, it would be in format `memberClusters/cluster_name`; And for Anthos on MultiCloud, it would be in format `{azureClusters, awsClusters}/cluster_name`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cluster")
    public String cluster;

    public MonitoringConfig withCluster(String cluster) {
        this.cluster = cluster;
        return this;
    }
    
    /**
     * Immutable. Cluster hash, this is a unique string generated by google code, which does not contain any PII, which we can use to reference the cluster. This is expected to be created by the monitoring stack and persisted into the Cluster object as well as to GKE-Hub.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterHash")
    public String clusterHash;

    public MonitoringConfig withClusterHash(String clusterHash) {
        this.clusterHash = clusterHash;
        return this;
    }
    
    /**
     * Kubernetes system metrics, if available, are written to this prefix. This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for Anthos eventually. Noted: Anthos MultiCloud will have kubernetes.io prefix today but will migration to be under kubernetes.io/anthos
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kubernetesMetricsPrefix")
    public String kubernetesMetricsPrefix;

    public MonitoringConfig withKubernetesMetricsPrefix(String kubernetesMetricsPrefix) {
        this.kubernetesMetricsPrefix = kubernetesMetricsPrefix;
        return this;
    }
    
    /**
     * Immutable. Location used to report Metrics
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;

    public MonitoringConfig withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Immutable. Project used to report Metrics
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectId")
    public String projectId;

    public MonitoringConfig withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    public MonitoringConfig(){}
}
