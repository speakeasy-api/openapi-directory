"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class SelectedHTML:
    r"""Get HTML content of selected page areas (like price, search results, page title, etc.)"""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_selected(self, request: operations.GetSelectedRequest) -> operations.GetSelectedResponse:
        r"""HTML of a selected page area by URL and CSS selector
        Returns just HTML on success, JSON on error
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/selected'
        
        query_params = utils.get_query_params(operations.GetSelectedRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSelectedResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'text/html'):
                res.get_selected_200_text_html_string = http_res.content
        elif http_res.status_code in [400, 402, 403, 429, 500, 504]:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Error])
                res.error = out
        elif http_res.status_code == 502:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.PageError])
                res.page_error = out

        return res

    def get_selected_multiple(self, request: operations.GetSelectedMultipleRequest) -> operations.GetSelectedMultipleResponse:
        r"""HTML of multiple page areas by URL and CSS selectors
        Always returns JSON
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/selected-multiple'
        
        query_params = utils.get_query_params(operations.GetSelectedMultipleRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSelectedMultipleResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[list[str]])
                res.selected_areas = out
        elif http_res.status_code in [400, 402, 403, 429, 500, 504]:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Error])
                res.error = out
        elif http_res.status_code == 502:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.PageError])
                res.page_error = out

        return res

    