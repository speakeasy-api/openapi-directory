// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisassociateIPGroupsXAmzTargetEnum
type DisassociateIPGroupsXAmzTargetEnum string

const (
	DisassociateIPGroupsXAmzTargetEnumWorkspacesServiceDisassociateIPGroups DisassociateIPGroupsXAmzTargetEnum = "WorkspacesService.DisassociateIpGroups"
)

func (e *DisassociateIPGroupsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkspacesService.DisassociateIpGroups":
		*e = DisassociateIPGroupsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateIPGroupsXAmzTargetEnum: %s", s)
	}
}

type DisassociateIPGroupsRequest struct {
	DisassociateIPGroupsRequest shared.DisassociateIPGroupsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DisassociateIPGroupsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisassociateIPGroupsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DisassociateIPGroupsResult map[string]interface{}
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// InvalidResourceStateException
	InvalidResourceStateException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
