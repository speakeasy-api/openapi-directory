/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CollectionStatusDestinationStatus } from "./collectionstatusdestinationstatus";
import { CollectionStatusItemLevelIssue } from "./collectionstatusitemlevelissue";
import { Expose, Type } from "class-transformer";

/**
 * The collectionstatus message.
 */
export class CollectionStatus extends SpeakeasyBase {
  /**
   * A list of all issues associated with the collection.
   */
  @SpeakeasyMetadata({ elemType: CollectionStatusItemLevelIssue })
  @Expose({ name: "collectionLevelIssuses" })
  @Type(() => CollectionStatusItemLevelIssue)
  collectionLevelIssuses?: CollectionStatusItemLevelIssue[];

  /**
   * Date on which the collection has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  creationDate?: string;

  /**
   * The intended destinations for the collection.
   */
  @SpeakeasyMetadata({ elemType: CollectionStatusDestinationStatus })
  @Expose({ name: "destinationStatuses" })
  @Type(() => CollectionStatusDestinationStatus)
  destinationStatuses?: CollectionStatusDestinationStatus[];

  /**
   * Required. The ID of the collection for which status is reported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Date on which the collection has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateDate" })
  lastUpdateDate?: string;
}
