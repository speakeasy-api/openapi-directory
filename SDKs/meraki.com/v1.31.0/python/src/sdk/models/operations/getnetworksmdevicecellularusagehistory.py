"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetNetworkSmDeviceCellularUsageHistoryRequest:
    
    device_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'deviceId', 'style': 'simple', 'explode': False }})  
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetNetworkSmDeviceCellularUsageHistory200ApplicationJSON:
    
    received: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('received'), 'exclude': lambda f: f is None }})
    r"""The amount of cellular data received by the device."""  
    sent: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sent'), 'exclude': lambda f: f is None }})
    r"""The amount of cellular sent received by the device."""  
    ts: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ts'), 'exclude': lambda f: f is None }})
    r"""When the cellular usage data was collected."""  
    

@dataclasses.dataclass
class GetNetworkSmDeviceCellularUsageHistoryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_network_sm_device_cellular_usage_history_200_application_json_objects: Optional[list[GetNetworkSmDeviceCellularUsageHistory200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    