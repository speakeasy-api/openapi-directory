<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GoalEventDetailsEventConditions
{
    /**
     * Type of comparison. Possible values are LESS_THAN, GREATER_THAN or EQUAL.
     * 
     * @var ?string $comparisonType
     */
	#[\JMS\Serializer\Annotation\SerializedName('comparisonType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comparisonType = null;
    
    /**
     * Value used for this comparison.
     * 
     * @var ?string $comparisonValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('comparisonValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comparisonValue = null;
    
    /**
     * Expression used for this match.
     * 
     * @var ?string $expression
     */
	#[\JMS\Serializer\Annotation\SerializedName('expression')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expression = null;
    
    /**
     * Type of the match to be performed. Possible values are REGEXP, BEGINS_WITH, or EXACT.
     * 
     * @var ?string $matchType
     */
	#[\JMS\Serializer\Annotation\SerializedName('matchType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $matchType = null;
    
    /**
     * Type of this event condition. Possible values are CATEGORY, ACTION, LABEL, or VALUE.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->comparisonType = null;
		$this->comparisonValue = null;
		$this->expression = null;
		$this->matchType = null;
		$this->type = null;
	}
}
