"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import mediatypeholderwrapped as shared_mediatypeholderwrapped
from typing import Optional


@dataclasses.dataclass
class GetResourcesMediaTypesFormatRequest:
    
    format: str = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Automatically added"""  
    

@dataclasses.dataclass
class GetResourcesMediaTypesFormatResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    media_type_holder_wrappeds: Optional[list[shared_mediatypeholderwrapped.MediaTypeHolderWrapped]] = dataclasses.field(default=None)
    r"""Returns the list of available MediaTypes."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    