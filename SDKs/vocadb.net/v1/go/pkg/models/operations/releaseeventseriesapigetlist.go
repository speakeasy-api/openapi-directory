// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReleaseEventSeriesAPIGetListFieldsEnum - Optional fields to include.
type ReleaseEventSeriesAPIGetListFieldsEnum string

const (
	ReleaseEventSeriesAPIGetListFieldsEnumNone            ReleaseEventSeriesAPIGetListFieldsEnum = "None"
	ReleaseEventSeriesAPIGetListFieldsEnumAdditionalNames ReleaseEventSeriesAPIGetListFieldsEnum = "AdditionalNames"
	ReleaseEventSeriesAPIGetListFieldsEnumDescription     ReleaseEventSeriesAPIGetListFieldsEnum = "Description"
	ReleaseEventSeriesAPIGetListFieldsEnumEvents          ReleaseEventSeriesAPIGetListFieldsEnum = "Events"
	ReleaseEventSeriesAPIGetListFieldsEnumMainPicture     ReleaseEventSeriesAPIGetListFieldsEnum = "MainPicture"
	ReleaseEventSeriesAPIGetListFieldsEnumNames           ReleaseEventSeriesAPIGetListFieldsEnum = "Names"
	ReleaseEventSeriesAPIGetListFieldsEnumWebLinks        ReleaseEventSeriesAPIGetListFieldsEnum = "WebLinks"
)

func (e *ReleaseEventSeriesAPIGetListFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Description":
		fallthrough
	case "Events":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "WebLinks":
		*e = ReleaseEventSeriesAPIGetListFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventSeriesAPIGetListFieldsEnum: %s", s)
	}
}

// ReleaseEventSeriesAPIGetListLangEnum - Content language preference (optional).
type ReleaseEventSeriesAPIGetListLangEnum string

const (
	ReleaseEventSeriesAPIGetListLangEnumDefault  ReleaseEventSeriesAPIGetListLangEnum = "Default"
	ReleaseEventSeriesAPIGetListLangEnumJapanese ReleaseEventSeriesAPIGetListLangEnum = "Japanese"
	ReleaseEventSeriesAPIGetListLangEnumRomaji   ReleaseEventSeriesAPIGetListLangEnum = "Romaji"
	ReleaseEventSeriesAPIGetListLangEnumEnglish  ReleaseEventSeriesAPIGetListLangEnum = "English"
)

func (e *ReleaseEventSeriesAPIGetListLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = ReleaseEventSeriesAPIGetListLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventSeriesAPIGetListLangEnum: %s", s)
	}
}

// ReleaseEventSeriesAPIGetListNameMatchModeEnum - Match mode for event name (optional).
type ReleaseEventSeriesAPIGetListNameMatchModeEnum string

const (
	ReleaseEventSeriesAPIGetListNameMatchModeEnumAuto       ReleaseEventSeriesAPIGetListNameMatchModeEnum = "Auto"
	ReleaseEventSeriesAPIGetListNameMatchModeEnumPartial    ReleaseEventSeriesAPIGetListNameMatchModeEnum = "Partial"
	ReleaseEventSeriesAPIGetListNameMatchModeEnumStartsWith ReleaseEventSeriesAPIGetListNameMatchModeEnum = "StartsWith"
	ReleaseEventSeriesAPIGetListNameMatchModeEnumExact      ReleaseEventSeriesAPIGetListNameMatchModeEnum = "Exact"
	ReleaseEventSeriesAPIGetListNameMatchModeEnumWords      ReleaseEventSeriesAPIGetListNameMatchModeEnum = "Words"
)

func (e *ReleaseEventSeriesAPIGetListNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = ReleaseEventSeriesAPIGetListNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventSeriesAPIGetListNameMatchModeEnum: %s", s)
	}
}

type ReleaseEventSeriesAPIGetListQueryParams struct {
	// Optional fields to include.
	Fields *ReleaseEventSeriesAPIGetListFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Whether to load total number of items (optional).
	GetTotalCount *bool `queryParam:"style=form,explode=true,name=getTotalCount"`
	// Content language preference (optional).
	Lang *ReleaseEventSeriesAPIGetListLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// Maximum number of results to be loaded (optional).
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Match mode for event name (optional).
	NameMatchMode *ReleaseEventSeriesAPIGetListNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Text query.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// First item to be retrieved (optional).
	Start *int `queryParam:"style=form,explode=true,name=start"`
}

type ReleaseEventSeriesAPIGetListRequest struct {
	QueryParams ReleaseEventSeriesAPIGetListQueryParams
}

type ReleaseEventSeriesAPIGetListResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultReleaseEventSeriesForAPIContract *shared.PartialFindResultReleaseEventSeriesForAPIContract
	StatusCode                                        int
	RawResponse                                       *http.Response
}
