/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CallBroadcastSounds - A set of sounds assigned to a voice broadcast to play according to an answering machine configuration. You can add the existing sounds from the account's sound library or to provide a text which will be converted into a speech. There are four sound options available for a Voice Broadcast campaign
 */
public class CallBroadcastSounds {
    /**
     * Digit pressed to place contact in DNC list
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dncDigit")
    public String dncDigit;
    public CallBroadcastSounds withDncDigit(String dncDigit) {
        this.dncDigit = dncDigit;
        return this;
    }
    
    /**
     * An id of sound file to play when recipient decided to opt out and pressed DNC digit
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dncSoundId")
    public Long dncSoundId;
    public CallBroadcastSounds withDncSoundId(Long dncSoundId) {
        this.dncSoundId = dncSoundId;
        return this;
    }
    
    /**
     * Text to be turned into sound, plays to notify that Do Not Call digit has been pressed and inform your contact of their placement on the Do Not Call list
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dncSoundText")
    public String dncSoundText;
    public CallBroadcastSounds withDncSoundText(String dncSoundText) {
        this.dncSoundText = dncSoundText;
        return this;
    }
    
    /**
     * The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dncSoundTextVoice")
    public CallBroadcastSoundsDncSoundTextVoiceEnum dncSoundTextVoice;
    public CallBroadcastSounds withDncSoundTextVoice(CallBroadcastSoundsDncSoundTextVoiceEnum dncSoundTextVoice) {
        this.dncSoundTextVoice = dncSoundTextVoice;
        return this;
    }
    
    /**
     * An id of sound file to play if phone is answered
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liveSoundId")
    public Long liveSoundId;
    public CallBroadcastSounds withLiveSoundId(Long liveSoundId) {
        this.liveSoundId = liveSoundId;
        return this;
    }
    
    /**
     * Text to be used to turned into a sound. This text will be played when the phone is answered
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liveSoundText")
    public String liveSoundText;
    public CallBroadcastSounds withLiveSoundText(String liveSoundText) {
        this.liveSoundText = liveSoundText;
        return this;
    }
    
    /**
     * The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1) for a live sound
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liveSoundTextVoice")
    public CallBroadcastSoundsLiveSoundTextVoiceEnum liveSoundTextVoice;
    public CallBroadcastSounds withLiveSoundTextVoice(CallBroadcastSoundsLiveSoundTextVoiceEnum liveSoundTextVoice) {
        this.liveSoundTextVoice = liveSoundTextVoice;
        return this;
    }
    
    /**
     * An id of a sound file to play if answering machine is detected
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineSoundId")
    public Long machineSoundId;
    public CallBroadcastSounds withMachineSoundId(Long machineSoundId) {
        this.machineSoundId = machineSoundId;
        return this;
    }
    
    /**
     * Text to be turned into a sound. This text will be played when answering machine is detected
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineSoundText")
    public String machineSoundText;
    public CallBroadcastSounds withMachineSoundText(String machineSoundText) {
        this.machineSoundText = machineSoundText;
        return this;
    }
    
    /**
     * The voice to be used (MALE1, FEMALE1 , FEMALE2, SPANISH1, FRENCHCANADIAN1) for a machine sound
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineSoundTextVoice")
    public CallBroadcastSoundsMachineSoundTextVoiceEnum machineSoundTextVoice;
    public CallBroadcastSounds withMachineSoundTextVoice(CallBroadcastSoundsMachineSoundTextVoiceEnum machineSoundTextVoice) {
        this.machineSoundTextVoice = machineSoundTextVoice;
        return this;
    }
    
    /**
     * Digit pressed to initiate a transfer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferDigit")
    public String transferDigit;
    public CallBroadcastSounds withTransferDigit(String transferDigit) {
        this.transferDigit = transferDigit;
        return this;
    }
    
    /**
     * Phone number in E.164 format (11-digit) to transfer call to.  Example: 12132000384, 67076
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferNumber")
    public String transferNumber;
    public CallBroadcastSounds withTransferNumber(String transferNumber) {
        this.transferNumber = transferNumber;
        return this;
    }
    
    /**
     * An id of a file to play if call is transferred
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferSoundId")
    public Long transferSoundId;
    public CallBroadcastSounds withTransferSoundId(Long transferSoundId) {
        this.transferSoundId = transferSoundId;
        return this;
    }
    
    /**
     * Text to be turned into a sound. This text will be played when the transfer digit is played
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferSoundText")
    public String transferSoundText;
    public CallBroadcastSounds withTransferSoundText(String transferSoundText) {
        this.transferSoundText = transferSoundText;
        return this;
    }
    
    /**
     * The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1) for a sound transfer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferSoundTextVoice")
    public CallBroadcastSoundsTransferSoundTextVoiceEnum transferSoundTextVoice;
    public CallBroadcastSounds withTransferSoundTextVoice(CallBroadcastSoundsTransferSoundTextVoiceEnum transferSoundTextVoice) {
        this.transferSoundTextVoice = transferSoundTextVoice;
        return this;
    }
    
}
