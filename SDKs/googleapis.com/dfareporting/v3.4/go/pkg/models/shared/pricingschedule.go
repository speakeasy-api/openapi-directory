// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// PricingScheduleCapCostOptionEnum - Placement cap cost option.
type PricingScheduleCapCostOptionEnum string

const (
	PricingScheduleCapCostOptionEnumCapCostNone       PricingScheduleCapCostOptionEnum = "CAP_COST_NONE"
	PricingScheduleCapCostOptionEnumCapCostMonthly    PricingScheduleCapCostOptionEnum = "CAP_COST_MONTHLY"
	PricingScheduleCapCostOptionEnumCapCostCumulative PricingScheduleCapCostOptionEnum = "CAP_COST_CUMULATIVE"
)

func (e *PricingScheduleCapCostOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAP_COST_NONE":
		fallthrough
	case "CAP_COST_MONTHLY":
		fallthrough
	case "CAP_COST_CUMULATIVE":
		*e = PricingScheduleCapCostOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PricingScheduleCapCostOptionEnum: %s", s)
	}
}

// PricingSchedulePricingTypeEnum - Placement pricing type. This field is required on insertion.
type PricingSchedulePricingTypeEnum string

const (
	PricingSchedulePricingTypeEnumPricingTypeCpm                 PricingSchedulePricingTypeEnum = "PRICING_TYPE_CPM"
	PricingSchedulePricingTypeEnumPricingTypeCpc                 PricingSchedulePricingTypeEnum = "PRICING_TYPE_CPC"
	PricingSchedulePricingTypeEnumPricingTypeCpa                 PricingSchedulePricingTypeEnum = "PRICING_TYPE_CPA"
	PricingSchedulePricingTypeEnumPricingTypeFlatRateImpressions PricingSchedulePricingTypeEnum = "PRICING_TYPE_FLAT_RATE_IMPRESSIONS"
	PricingSchedulePricingTypeEnumPricingTypeFlatRateClicks      PricingSchedulePricingTypeEnum = "PRICING_TYPE_FLAT_RATE_CLICKS"
	PricingSchedulePricingTypeEnumPricingTypeCpmActiveview       PricingSchedulePricingTypeEnum = "PRICING_TYPE_CPM_ACTIVEVIEW"
)

func (e *PricingSchedulePricingTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PRICING_TYPE_CPM":
		fallthrough
	case "PRICING_TYPE_CPC":
		fallthrough
	case "PRICING_TYPE_CPA":
		fallthrough
	case "PRICING_TYPE_FLAT_RATE_IMPRESSIONS":
		fallthrough
	case "PRICING_TYPE_FLAT_RATE_CLICKS":
		fallthrough
	case "PRICING_TYPE_CPM_ACTIVEVIEW":
		*e = PricingSchedulePricingTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PricingSchedulePricingTypeEnum: %s", s)
	}
}

// PricingSchedule - Pricing Schedule
type PricingSchedule struct {
	// Placement cap cost option.
	CapCostOption *PricingScheduleCapCostOptionEnum `json:"capCostOption,omitempty"`
	EndDate       *types.Date                       `json:"endDate,omitempty"`
	// Whether this placement is flighted. If true, pricing periods will be computed automatically.
	Flighted *bool `json:"flighted,omitempty"`
	// Floodlight activity ID associated with this placement. This field should be set when placement pricing type is set to PRICING_TYPE_CPA.
	FloodlightActivityID *string `json:"floodlightActivityId,omitempty"`
	// Pricing periods for this placement.
	PricingPeriods []PricingSchedulePricingPeriod `json:"pricingPeriods,omitempty"`
	// Placement pricing type. This field is required on insertion.
	PricingType      *PricingSchedulePricingTypeEnum `json:"pricingType,omitempty"`
	StartDate        *types.Date                     `json:"startDate,omitempty"`
	TestingStartDate *types.Date                     `json:"testingStartDate,omitempty"`
}
