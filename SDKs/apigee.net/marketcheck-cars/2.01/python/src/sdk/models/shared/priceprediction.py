"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import predictedspecs as shared_predictedspecs
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PricePredictionPriceRange:
    r"""Price range around the predicted price, estimating the error in predicted price"""
    
    lower_bound: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lower_bound'), 'exclude': lambda f: f is None }})
    r"""Lower bound"""  
    upper_bound: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upper_bound'), 'exclude': lambda f: f is None }})
    r"""Upper bound"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PricePrediction:
    r"""Predicted price of a car"""
    
    predicted_price: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predicted_price'), 'exclude': lambda f: f is None }})
    r"""Actual predicted price of a car"""  
    price_range: Optional[PricePredictionPriceRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_range'), 'exclude': lambda f: f is None }})
    r"""Price range around the predicted price, estimating the error in predicted price"""  
    specs: Optional[shared_predictedspecs.PredictedSpecs] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('specs'), 'exclude': lambda f: f is None }})
    r"""Specs of predicted vehicle"""  
    