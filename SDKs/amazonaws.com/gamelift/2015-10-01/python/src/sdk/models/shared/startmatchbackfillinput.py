"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import player as shared_player
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartMatchBackfillInput:
    
    configuration_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationName') }})  
    players: list[shared_player.Player] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Players') }})  
    game_session_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GameSessionArn'), 'exclude': lambda f: f is None }})  
    ticket_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TicketId'), 'exclude': lambda f: f is None }})  
    