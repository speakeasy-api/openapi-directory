/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VirtualMachineArchitectureDetails - Details of the VM architecture.
 */
public class VirtualMachineArchitectureDetails {
    /**
     * Details about the BIOS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bios")
    public BiosDetails bios;

    public VirtualMachineArchitectureDetails withBios(BiosDetails bios) {
        this.bios = bios;
        return this;
    }
    
    /**
     * CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuArchitecture")
    public String cpuArchitecture;

    public VirtualMachineArchitectureDetails withCpuArchitecture(String cpuArchitecture) {
        this.cpuArchitecture = cpuArchitecture;
        return this;
    }
    
    /**
     * CPU manufacturer, e.g., "Intel", "AMD".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuManufacturer")
    public String cpuManufacturer;

    public VirtualMachineArchitectureDetails withCpuManufacturer(String cpuManufacturer) {
        this.cpuManufacturer = cpuManufacturer;
        return this;
    }
    
    /**
     * CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuName")
    public String cpuName;

    public VirtualMachineArchitectureDetails withCpuName(String cpuName) {
        this.cpuName = cpuName;
        return this;
    }
    
    /**
     * Number of processor sockets allocated to the machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuSocketCount")
    public Integer cpuSocketCount;

    public VirtualMachineArchitectureDetails withCpuSocketCount(Integer cpuSocketCount) {
        this.cpuSocketCount = cpuSocketCount;
        return this;
    }
    
    /**
     * Number of CPU threads allocated to the machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuThreadCount")
    public Integer cpuThreadCount;

    public VirtualMachineArchitectureDetails withCpuThreadCount(Integer cpuThreadCount) {
        this.cpuThreadCount = cpuThreadCount;
        return this;
    }
    
    /**
     * Firmware (BIOS/efi).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firmware")
    public String firmware;

    public VirtualMachineArchitectureDetails withFirmware(String firmware) {
        this.firmware = firmware;
        return this;
    }
    
    /**
     * CPU hyperthreading support.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hyperthreading")
    public VirtualMachineArchitectureDetailsHyperthreadingEnum hyperthreading;

    public VirtualMachineArchitectureDetails withHyperthreading(VirtualMachineArchitectureDetailsHyperthreadingEnum hyperthreading) {
        this.hyperthreading = hyperthreading;
        return this;
    }
    
    /**
     * Hardware vendor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vendor")
    public String vendor;

    public VirtualMachineArchitectureDetails withVendor(String vendor) {
        this.vendor = vendor;
        return this;
    }
    
    public VirtualMachineArchitectureDetails(){}
}
