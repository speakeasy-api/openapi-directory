<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CollectionCapabilities - Capabilities the current user has on this collection. Each capability corresponds to a fine-grained action that a user may take.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CollectionCapabilities
{
    /**
     * Whether the current user can add scores to the collection
     * 
     * 
     * If this collection has the `type` `trash`, this property will be set to `false`. Use `DELETE /v2/scores/{score}` to trash a score.
     * 
     * 
     * @var ?bool $canAddScores
     */
	#[\JMS\Serializer\Annotation\SerializedName('canAddScores')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canAddScores = null;
    
    /**
     * Whether the current user can delete the collection
     * 
     * 
     * 
     * @var ?bool $canDelete
     */
	#[\JMS\Serializer\Annotation\SerializedName('canDelete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDelete = null;
    
    /**
     * Whether the current user can delete scores from the collection
     * 
     * 
     * If this collection has the `type` `trash`, this property will be set to `false`. Use `POST /v2/scores/{score}/untrash` to restore a score.
     * 
     * 
     * @var ?bool $canDeleteScores
     */
	#[\JMS\Serializer\Annotation\SerializedName('canDeleteScores')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDeleteScores = null;
    
    /**
     * Whether the current user can modify the metadata for the collection
     * 
     * 
     * 
     * @var ?bool $canEdit
     */
	#[\JMS\Serializer\Annotation\SerializedName('canEdit')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canEdit = null;
    
    /**
     * Whether the current user can modify the sharing settings for the collection
     * 
     * 
     * 
     * @var ?bool $canShare
     */
	#[\JMS\Serializer\Annotation\SerializedName('canShare')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canShare = null;
    
	public function __construct()
	{
		$this->canAddScores = null;
		$this->canDelete = null;
		$this->canDeleteScores = null;
		$this->canEdit = null;
		$this->canShare = null;
	}
}
