"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRetailV2alphaRuleReplacementAction:
    r"""Replaces a term in the query. Multiple replacement candidates can be specified. All `query_terms` will be replaced with the replacement term. Example: Replace \\"gShoe\\" with \\"google shoe\\"."""
    
    query_terms: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryTerms'), 'exclude': lambda f: f is None }})
    r"""Terms from the search query. Will be replaced by replacement term. Can specify up to 100 terms."""  
    replacement_term: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replacementTerm'), 'exclude': lambda f: f is None }})
    r"""Term that will be used for replacement."""  
    term: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('term'), 'exclude': lambda f: f is None }})
    r"""Will be [deprecated = true] post migration;"""  
    