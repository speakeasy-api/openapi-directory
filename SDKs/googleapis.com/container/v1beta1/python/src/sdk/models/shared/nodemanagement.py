"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autoupgradeoptions as shared_autoupgradeoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NodeManagement:
    r"""NodeManagement defines the set of node management services turned on for the node pool."""
    
    auto_repair: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoRepair'), 'exclude': lambda f: f is None }})
    r"""Whether the nodes will be automatically repaired."""  
    auto_upgrade: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoUpgrade'), 'exclude': lambda f: f is None }})
    r"""Whether the nodes will be automatically upgraded."""  
    upgrade_options: Optional[shared_autoupgradeoptions.AutoUpgradeOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upgradeOptions'), 'exclude': lambda f: f is None }})
    r"""AutoUpgradeOptions defines the set of options for the user to control how the Auto Upgrades will proceed."""  
    