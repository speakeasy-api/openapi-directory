/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmFrontendsEventbusProtoEventParameters } from "./enterprisecrmfrontendseventbusprotoeventparameters";
import { EnterpriseCrmFrontendsEventbusProtoParameterEntry } from "./enterprisecrmfrontendseventbusprotoparameterentry";
import { Expose, Type } from "class-transformer";

/**
 * The response for executing an integration.
 */
export class GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse extends SpeakeasyBase {
  /**
   * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventParameters" })
  @Type(() => EnterpriseCrmFrontendsEventbusProtoEventParameters)
  eventParameters?: EnterpriseCrmFrontendsEventbusProtoEventParameters;

  /**
   * Is true if any execution in the integration failed. False otherwise.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionFailed" })
  executionFailed?: boolean;

  /**
   * The id of the execution corresponding to this run of integration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionId" })
  executionId?: string;

  /**
   * OUTPUT parameters in format of Map. Where Key is the name of the parameter. Note: Name of the system generated parameters are wrapped by backtick(`) to distinguish them from the user defined parameters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outputParameters" })
  outputParameters?: Record<string, any>;

  /**
   * Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
   */
  @SpeakeasyMetadata({
    elemType: EnterpriseCrmFrontendsEventbusProtoParameterEntry,
  })
  @Expose({ name: "parameterEntries" })
  @Type(() => EnterpriseCrmFrontendsEventbusProtoParameterEntry)
  parameterEntries?: EnterpriseCrmFrontendsEventbusProtoParameterEntry[];
}
