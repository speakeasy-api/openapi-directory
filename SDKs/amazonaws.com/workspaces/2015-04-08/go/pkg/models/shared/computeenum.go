// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComputeEnum string

const (
	ComputeEnumValue           ComputeEnum = "VALUE"
	ComputeEnumStandard        ComputeEnum = "STANDARD"
	ComputeEnumPerformance     ComputeEnum = "PERFORMANCE"
	ComputeEnumPower           ComputeEnum = "POWER"
	ComputeEnumGraphics        ComputeEnum = "GRAPHICS"
	ComputeEnumPowerpro        ComputeEnum = "POWERPRO"
	ComputeEnumGraphicspro     ComputeEnum = "GRAPHICSPRO"
	ComputeEnumGraphicsG4Dn    ComputeEnum = "GRAPHICS_G4DN"
	ComputeEnumGraphicsproG4Dn ComputeEnum = "GRAPHICSPRO_G4DN"
)

func (e ComputeEnum) ToPointer() *ComputeEnum {
	return &e
}

func (e *ComputeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VALUE":
		fallthrough
	case "STANDARD":
		fallthrough
	case "PERFORMANCE":
		fallthrough
	case "POWER":
		fallthrough
	case "GRAPHICS":
		fallthrough
	case "POWERPRO":
		fallthrough
	case "GRAPHICSPRO":
		fallthrough
	case "GRAPHICS_G4DN":
		fallthrough
	case "GRAPHICSPRO_G4DN":
		*e = ComputeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComputeEnum: %v", v)
	}
}
