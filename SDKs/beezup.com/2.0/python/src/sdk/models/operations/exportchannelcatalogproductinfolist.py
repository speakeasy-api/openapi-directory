"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import beezup_common_errorresponsemessage as shared_beezup_common_errorresponsemessage
from ..shared import beezup_common_link3 as shared_beezup_common_link3
from ..shared import exportformatinquerygeneralparameter_enum as shared_exportformatinquerygeneralparameter_enum
from ..shared import getchannelcatalogproductinfolistrequest as shared_getchannelcatalogproductinfolistrequest
from typing import Optional


@dataclasses.dataclass
class ExportChannelCatalogProductInfoListRequest:
    
    channel_catalog_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'channelCatalogId', 'style': 'simple', 'explode': False }})
    r"""The channel catalog identifier"""  
    format: shared_exportformatinquerygeneralparameter_enum.ExportFormatInQueryGeneralParameterEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""The file type of the exportation"""  
    get_channel_catalog_product_info_list_request: shared_getchannelcatalogproductinfolistrequest.GetChannelCatalogProductInfoListRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The channel catalog product list filter"""  
    

@dataclasses.dataclass
class ExportChannelCatalogProductInfoListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    beez_up_common_error_response_message: Optional[shared_beezup_common_errorresponsemessage.BeezUPCommonErrorResponseMessage] = dataclasses.field(default=None)
    r"""ChannelCatalogId not found or not authorized"""  
    beez_up_common_link3: Optional[shared_beezup_common_link3.BeezUPCommonLink3] = dataclasses.field(default=None)
    r"""Channel catalog product information list exported"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    