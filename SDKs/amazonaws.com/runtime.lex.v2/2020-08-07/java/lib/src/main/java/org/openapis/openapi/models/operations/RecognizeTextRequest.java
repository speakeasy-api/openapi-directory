/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class RecognizeTextRequest {
    @SpeakeasyMetadata("request:mediaType=application/json")
    public RecognizeTextRequestBody requestBody;

    public RecognizeTextRequest withRequestBody(RecognizeTextRequestBody requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;

    public RecognizeTextRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;

    public RecognizeTextRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;

    public RecognizeTextRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;

    public RecognizeTextRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;

    public RecognizeTextRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;

    public RecognizeTextRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;

    public RecognizeTextRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    /**
     * The alias identifier in use for the bot that processes the request.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=botAliasId")
    public String botAliasId;

    public RecognizeTextRequest withBotAliasId(String botAliasId) {
        this.botAliasId = botAliasId;
        return this;
    }
    
    /**
     * The identifier of the bot that processes the request.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=botId")
    public String botId;

    public RecognizeTextRequest withBotId(String botId) {
        this.botId = botId;
        return this;
    }
    
    /**
     * The locale where the session is in use.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=localeId")
    public String localeId;

    public RecognizeTextRequest withLocaleId(String localeId) {
        this.localeId = localeId;
        return this;
    }
    
    /**
     * The identifier of the user session that is having the conversation.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=sessionId")
    public String sessionId;

    public RecognizeTextRequest withSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }
    
    public RecognizeTextRequest(@JsonProperty("RequestBody") RecognizeTextRequestBody requestBody, @JsonProperty("botAliasId") String botAliasId, @JsonProperty("botId") String botId, @JsonProperty("localeId") String localeId, @JsonProperty("sessionId") String sessionId) {
        this.requestBody = requestBody;
        this.botAliasId = botAliasId;
        this.botId = botId;
        this.localeId = localeId;
        this.sessionId = sessionId;
  }
}
