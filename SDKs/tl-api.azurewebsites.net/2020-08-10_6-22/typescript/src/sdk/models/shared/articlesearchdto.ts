/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The ArticleSearchDTO Class.
 *
 * @remarks
 * Contains relevant fields of ArticleSearch DTO by masking actual Article entity's fields in application.
 *
 */
export class ArticleSearchDTO extends SpeakeasyBase {
  /**
   * Active Status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activeStatus" })
  activeStatus?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "applyForAllGyms" })
  applyForAllGyms?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "articleId" })
  articleId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "createdDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "createdUser" })
  createdUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * MeasureUnit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "measureUnit" })
  measureUnit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "modifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "modifiedUser" })
  modifiedUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Actual Selling price of the article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellingPrice" })
  sellingPrice?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string;

  /**
   * total number of recode for particular search
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;

  /**
   * article type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
