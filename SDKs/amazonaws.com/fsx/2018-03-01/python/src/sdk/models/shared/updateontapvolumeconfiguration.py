"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import securitystyle_enum as shared_securitystyle_enum
from ..shared import tieringpolicy as shared_tieringpolicy
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOntapVolumeConfiguration:
    r"""Used to specify changes to the ONTAP configuration for the volume you are updating."""
    
    copy_tags_to_backups: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CopyTagsToBackups'), 'exclude': lambda f: f is None }})  
    junction_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JunctionPath'), 'exclude': lambda f: f is None }})  
    security_style: Optional[shared_securitystyle_enum.SecurityStyleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityStyle'), 'exclude': lambda f: f is None }})  
    size_in_megabytes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SizeInMegabytes'), 'exclude': lambda f: f is None }})  
    snapshot_policy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SnapshotPolicy'), 'exclude': lambda f: f is None }})  
    storage_efficiency_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageEfficiencyEnabled'), 'exclude': lambda f: f is None }})  
    tiering_policy: Optional[shared_tieringpolicy.TieringPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TieringPolicy'), 'exclude': lambda f: f is None }})  
    