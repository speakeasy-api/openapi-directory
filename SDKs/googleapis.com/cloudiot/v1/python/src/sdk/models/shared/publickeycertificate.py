"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import x509certificatedetails as shared_x509certificatedetails
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PublicKeyCertificateFormatEnum(str, Enum):
    r"""The certificate format."""
    UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT = 'UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT'
    X509_CERTIFICATE_PEM = 'X509_CERTIFICATE_PEM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PublicKeyCertificate:
    r"""A public key certificate format and data."""
    
    certificate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificate'), 'exclude': lambda f: f is None }})
    r"""The certificate data."""  
    format: Optional[PublicKeyCertificateFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""The certificate format."""  
    x509_details: Optional[shared_x509certificatedetails.X509CertificateDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('x509Details'), 'exclude': lambda f: f is None }})
    r"""Details of an X.509 certificate. For informational purposes only."""  
    