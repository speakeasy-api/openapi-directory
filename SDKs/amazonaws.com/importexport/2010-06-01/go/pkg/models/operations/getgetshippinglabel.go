// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETShippingLabelActionEnum
type GETGETShippingLabelActionEnum string

const (
	GETGETShippingLabelActionEnumGetShippingLabel GETGETShippingLabelActionEnum = "GetShippingLabel"
)

func (e *GETGETShippingLabelActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetShippingLabel":
		*e = GETGETShippingLabelActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETShippingLabelActionEnum: %s", s)
	}
}

// GETGETShippingLabelOperationEnum
type GETGETShippingLabelOperationEnum string

const (
	GETGETShippingLabelOperationEnumGetShippingLabel GETGETShippingLabelOperationEnum = "GetShippingLabel"
)

func (e *GETGETShippingLabelOperationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetShippingLabel":
		*e = GETGETShippingLabelOperationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETShippingLabelOperationEnum: %s", s)
	}
}

// GETGETShippingLabelVersionEnum
type GETGETShippingLabelVersionEnum string

const (
	GETGETShippingLabelVersionEnumTwoThousandAndTen0601 GETGETShippingLabelVersionEnum = "2010-06-01"
)

func (e *GETGETShippingLabelVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-06-01":
		*e = GETGETShippingLabelVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETShippingLabelVersionEnum: %s", s)
	}
}

type GETGETShippingLabelQueryParams struct {
	APIVersion       *string                          `queryParam:"style=form,explode=true,name=APIVersion"`
	AWSAccessKeyID   string                           `queryParam:"style=form,explode=true,name=AWSAccessKeyId"`
	Action           GETGETShippingLabelActionEnum    `queryParam:"style=form,explode=true,name=Action"`
	Operation        GETGETShippingLabelOperationEnum `queryParam:"style=form,explode=true,name=Operation"`
	Signature        string                           `queryParam:"style=form,explode=true,name=Signature"`
	SignatureMethod  string                           `queryParam:"style=form,explode=true,name=SignatureMethod"`
	SignatureVersion string                           `queryParam:"style=form,explode=true,name=SignatureVersion"`
	Timestamp        string                           `queryParam:"style=form,explode=true,name=Timestamp"`
	Version          GETGETShippingLabelVersionEnum   `queryParam:"style=form,explode=true,name=Version"`
	City             *string                          `queryParam:"style=form,explode=true,name=city"`
	Company          *string                          `queryParam:"style=form,explode=true,name=company"`
	Country          *string                          `queryParam:"style=form,explode=true,name=country"`
	JobIds           []string                         `queryParam:"style=form,explode=true,name=jobIds"`
	Name             *string                          `queryParam:"style=form,explode=true,name=name"`
	PhoneNumber      *string                          `queryParam:"style=form,explode=true,name=phoneNumber"`
	PostalCode       *string                          `queryParam:"style=form,explode=true,name=postalCode"`
	StateOrProvince  *string                          `queryParam:"style=form,explode=true,name=stateOrProvince"`
	Street1          *string                          `queryParam:"style=form,explode=true,name=street1"`
	Street2          *string                          `queryParam:"style=form,explode=true,name=street2"`
	Street3          *string                          `queryParam:"style=form,explode=true,name=street3"`
}

type GETGETShippingLabelRequest struct {
	QueryParams GETGETShippingLabelQueryParams
}

type GETGETShippingLabelResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
