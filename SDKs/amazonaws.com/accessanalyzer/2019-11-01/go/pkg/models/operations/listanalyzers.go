// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListAnalyzersTypeEnum - The type of analyzer.
type ListAnalyzersTypeEnum string

const (
	ListAnalyzersTypeEnumAccount      ListAnalyzersTypeEnum = "ACCOUNT"
	ListAnalyzersTypeEnumOrganization ListAnalyzersTypeEnum = "ORGANIZATION"
)

func (e ListAnalyzersTypeEnum) ToPointer() *ListAnalyzersTypeEnum {
	return &e
}

func (e *ListAnalyzersTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT":
		fallthrough
	case "ORGANIZATION":
		*e = ListAnalyzersTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAnalyzersTypeEnum: %v", v)
	}
}

type ListAnalyzersRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The maximum number of results to return in the response.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// A token used for pagination of results returned.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The type of analyzer.
	Type *ListAnalyzersTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type ListAnalyzersResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListAnalyzersResponse *shared.ListAnalyzersResponse
	StatusCode            int
	RawResponse           *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
