// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListSimServerList = []string{
	"https://wireless.twilio.com",
}

type ListSimSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListSimRequest struct {
	// Deprecated.
	EID *string `queryParam:"style=form,explode=true,name=EId"`
	// Only return Sim resources with this ICCID. This will return a list with a maximum size of 1.
	Iccid *string `queryParam:"style=form,explode=true,name=Iccid"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The SID or unique name of a [RatePlan resource](https://www.twilio.com/docs/wireless/api/rateplan-resource). Only return Sim resources assigned to this RatePlan resource.
	RatePlan *string `queryParam:"style=form,explode=true,name=RatePlan"`
	// Only return Sim resources with this registration code. This will return a list with a maximum size of 1.
	SimRegistrationCode *string `queryParam:"style=form,explode=true,name=SimRegistrationCode"`
	// Only return Sim resources with this status.
	Status *shared.SimEnumStatusEnum `queryParam:"style=form,explode=true,name=Status"`
}

type ListSimListSimResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListSimListSimResponse - OK
type ListSimListSimResponse struct {
	Meta *ListSimListSimResponseMeta `json:"meta,omitempty"`
	Sims []shared.WirelessV1Sim      `json:"sims,omitempty"`
}

type ListSimResponse struct {
	ContentType string
	// OK
	ListSimResponse *ListSimListSimResponse
	StatusCode      int
	RawResponse     *http.Response
}
