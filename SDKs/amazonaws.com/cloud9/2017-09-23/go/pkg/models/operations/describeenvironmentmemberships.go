// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeEnvironmentMembershipsXAmzTargetEnum
type DescribeEnvironmentMembershipsXAmzTargetEnum string

const (
	DescribeEnvironmentMembershipsXAmzTargetEnumAwsCloud9WorkspaceManagementServiceDescribeEnvironmentMemberships DescribeEnvironmentMembershipsXAmzTargetEnum = "AWSCloud9WorkspaceManagementService.DescribeEnvironmentMemberships"
)

func (e DescribeEnvironmentMembershipsXAmzTargetEnum) ToPointer() *DescribeEnvironmentMembershipsXAmzTargetEnum {
	return &e
}

func (e *DescribeEnvironmentMembershipsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSCloud9WorkspaceManagementService.DescribeEnvironmentMemberships":
		*e = DescribeEnvironmentMembershipsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeEnvironmentMembershipsXAmzTargetEnum: %v", v)
	}
}

type DescribeEnvironmentMembershipsRequest struct {
	DescribeEnvironmentMembershipsRequest shared.DescribeEnvironmentMembershipsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            DescribeEnvironmentMembershipsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type DescribeEnvironmentMembershipsResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	DescribeEnvironmentMembershipsResult *shared.DescribeEnvironmentMembershipsResult
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
