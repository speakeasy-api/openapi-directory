/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateFilterRequestBody {
    /**
     * Defines the action that is to be applied to the findings that match the filter.
     */
    @JsonProperty("action")
    public CreateFilterRequestBodyActionEnum action;

    public CreateFilterRequestBody withAction(CreateFilterRequestBodyActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * A description of the filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CreateFilterRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Details on the criteria used to define the filter.
     */
    @JsonProperty("filterCriteria")
    public CreateFilterRequestBodyFilterCriteria filterCriteria;

    public CreateFilterRequestBody withFilterCriteria(CreateFilterRequestBodyFilterCriteria filterCriteria) {
        this.filterCriteria = filterCriteria;
        return this;
    }
    
    /**
     * The name of the filter. Minimum length of 3. Maximum length of 64. Valid characters include alphanumeric characters, dot (.), underscore (_), and dash (-). Spaces are not allowed.
     */
    @JsonProperty("name")
    public String name;

    public CreateFilterRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The reason for creating the filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public CreateFilterRequestBody withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * A list of tags for the filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateFilterRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateFilterRequestBody(@JsonProperty("action") CreateFilterRequestBodyActionEnum action, @JsonProperty("filterCriteria") CreateFilterRequestBodyFilterCriteria filterCriteria, @JsonProperty("name") String name) {
        this.action = action;
        this.filterCriteria = filterCriteria;
        this.name = name;
  }
}
