/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetWebhookSubscriptionsRequest {
    /**
     * Filters to be applied to the query.
     * 
     * Query params in the url must look like this: "filter[attributeName_*matcher*]"
     * 
     * (i.e. filter[name_eq]=chimp%20into%20space)
     * 
     * Available matchers can be found here: https://activerecord-hackery.github.io/ransack/getting-started/search-matches/
     * 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=filter")
    public java.util.Map<String, Object> filter;

    public GetWebhookSubscriptionsRequest withFilter(java.util.Map<String, Object> filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * Sorting to be applied to the query. For more info: https://jsonapi.org/format/#fetching-sorting
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public GetWebhookSubscriptionsSortEnum sort;

    public GetWebhookSubscriptionsRequest withSort(GetWebhookSubscriptionsSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
    public GetWebhookSubscriptionsRequest(){}
}
