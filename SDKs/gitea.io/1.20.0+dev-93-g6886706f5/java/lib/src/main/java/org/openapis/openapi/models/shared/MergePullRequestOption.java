/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MergePullRequestOption - MergePullRequestForm form for merging Pull Request
 */
public class MergePullRequestOption {
    @JsonProperty("Do")
    public MergePullRequestOptionDoEnum do_;
    public MergePullRequestOption withDo(MergePullRequestOptionDoEnum do_) {
        this.do_ = do_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MergeCommitID")
    public String mergeCommitID;
    public MergePullRequestOption withMergeCommitID(String mergeCommitID) {
        this.mergeCommitID = mergeCommitID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MergeMessageField")
    public String mergeMessageField;
    public MergePullRequestOption withMergeMessageField(String mergeMessageField) {
        this.mergeMessageField = mergeMessageField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MergeTitleField")
    public String mergeTitleField;
    public MergePullRequestOption withMergeTitleField(String mergeTitleField) {
        this.mergeTitleField = mergeTitleField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delete_branch_after_merge")
    public Boolean deleteBranchAfterMerge;
    public MergePullRequestOption withDeleteBranchAfterMerge(Boolean deleteBranchAfterMerge) {
        this.deleteBranchAfterMerge = deleteBranchAfterMerge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("force_merge")
    public Boolean forceMerge;
    public MergePullRequestOption withForceMerge(Boolean forceMerge) {
        this.forceMerge = forceMerge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("head_commit_id")
    public String headCommitId;
    public MergePullRequestOption withHeadCommitId(String headCommitId) {
        this.headCommitId = headCommitId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merge_when_checks_succeed")
    public Boolean mergeWhenChecksSucceed;
    public MergePullRequestOption withMergeWhenChecksSucceed(Boolean mergeWhenChecksSucceed) {
        this.mergeWhenChecksSucceed = mergeWhenChecksSucceed;
        return this;
    }
    
}
