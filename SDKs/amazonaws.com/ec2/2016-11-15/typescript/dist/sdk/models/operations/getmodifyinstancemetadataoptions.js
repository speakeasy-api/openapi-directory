"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETModifyInstanceMetadataOptionsResponse = exports.GETModifyInstanceMetadataOptionsRequest = exports.GETModifyInstanceMetadataOptionsVersionEnum = exports.GETModifyInstanceMetadataOptionsInstanceMetadataTagsEnum = exports.GETModifyInstanceMetadataOptionsHTTPTokensEnum = exports.GETModifyInstanceMetadataOptionsHTTPProtocolIpv6Enum = exports.GETModifyInstanceMetadataOptionsHTTPEndpointEnum = exports.GETModifyInstanceMetadataOptionsActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETModifyInstanceMetadataOptionsActionEnum;
(function (GETModifyInstanceMetadataOptionsActionEnum) {
    GETModifyInstanceMetadataOptionsActionEnum["ModifyInstanceMetadataOptions"] = "ModifyInstanceMetadataOptions";
})(GETModifyInstanceMetadataOptionsActionEnum = exports.GETModifyInstanceMetadataOptionsActionEnum || (exports.GETModifyInstanceMetadataOptionsActionEnum = {}));
/**
 * <p>Enables or disables the HTTP metadata endpoint on your instances. If this parameter is not specified, the existing state is maintained.</p> <p>If you specify a value of <code>disabled</code>, you cannot access your instance metadata.</p>
 */
var GETModifyInstanceMetadataOptionsHTTPEndpointEnum;
(function (GETModifyInstanceMetadataOptionsHTTPEndpointEnum) {
    GETModifyInstanceMetadataOptionsHTTPEndpointEnum["Disabled"] = "disabled";
    GETModifyInstanceMetadataOptionsHTTPEndpointEnum["Enabled"] = "enabled";
})(GETModifyInstanceMetadataOptionsHTTPEndpointEnum = exports.GETModifyInstanceMetadataOptionsHTTPEndpointEnum || (exports.GETModifyInstanceMetadataOptionsHTTPEndpointEnum = {}));
/**
 * Enables or disables the IPv6 endpoint for the instance metadata service. This setting applies only if you have enabled the HTTP metadata endpoint.
 */
var GETModifyInstanceMetadataOptionsHTTPProtocolIpv6Enum;
(function (GETModifyInstanceMetadataOptionsHTTPProtocolIpv6Enum) {
    GETModifyInstanceMetadataOptionsHTTPProtocolIpv6Enum["Disabled"] = "disabled";
    GETModifyInstanceMetadataOptionsHTTPProtocolIpv6Enum["Enabled"] = "enabled";
})(GETModifyInstanceMetadataOptionsHTTPProtocolIpv6Enum = exports.GETModifyInstanceMetadataOptionsHTTPProtocolIpv6Enum || (exports.GETModifyInstanceMetadataOptionsHTTPProtocolIpv6Enum = {}));
/**
 * <p>IMDSv2 uses token-backed sessions. Set the use of HTTP tokens to <code>optional</code> (in other words, set the use of IMDSv2 to <code>optional</code>) or <code>required</code> (in other words, set the use of IMDSv2 to <code>required</code>).</p> <ul> <li> <p> <code>optional</code> - When IMDSv2 is optional, you can choose to retrieve instance metadata with or without a session token in your request. If you retrieve the IAM role credentials without a token, the IMDSv1 role credentials are returned. If you retrieve the IAM role credentials using a valid session token, the IMDSv2 role credentials are returned.</p> </li> <li> <p> <code>required</code> - When IMDSv2 is required, you must send a session token with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns IMDSv2 credentials; IMDSv1 credentials are not available.</p> </li> </ul> <p>Default: <code>optional</code> </p>
 */
var GETModifyInstanceMetadataOptionsHTTPTokensEnum;
(function (GETModifyInstanceMetadataOptionsHTTPTokensEnum) {
    GETModifyInstanceMetadataOptionsHTTPTokensEnum["Optional"] = "optional";
    GETModifyInstanceMetadataOptionsHTTPTokensEnum["Required"] = "required";
})(GETModifyInstanceMetadataOptionsHTTPTokensEnum = exports.GETModifyInstanceMetadataOptionsHTTPTokensEnum || (exports.GETModifyInstanceMetadataOptionsHTTPTokensEnum = {}));
/**
 * <p>Set to <code>enabled</code> to allow access to instance tags from the instance metadata. Set to <code>disabled</code> to turn off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.</p> <p>Default: <code>disabled</code> </p>
 */
var GETModifyInstanceMetadataOptionsInstanceMetadataTagsEnum;
(function (GETModifyInstanceMetadataOptionsInstanceMetadataTagsEnum) {
    GETModifyInstanceMetadataOptionsInstanceMetadataTagsEnum["Disabled"] = "disabled";
    GETModifyInstanceMetadataOptionsInstanceMetadataTagsEnum["Enabled"] = "enabled";
})(GETModifyInstanceMetadataOptionsInstanceMetadataTagsEnum = exports.GETModifyInstanceMetadataOptionsInstanceMetadataTagsEnum || (exports.GETModifyInstanceMetadataOptionsInstanceMetadataTagsEnum = {}));
var GETModifyInstanceMetadataOptionsVersionEnum;
(function (GETModifyInstanceMetadataOptionsVersionEnum) {
    GETModifyInstanceMetadataOptionsVersionEnum["TwoThousandAndSixteen1115"] = "2016-11-15";
})(GETModifyInstanceMetadataOptionsVersionEnum = exports.GETModifyInstanceMetadataOptionsVersionEnum || (exports.GETModifyInstanceMetadataOptionsVersionEnum = {}));
var GETModifyInstanceMetadataOptionsRequest = /** @class */ (function (_super) {
    __extends(GETModifyInstanceMetadataOptionsRequest, _super);
    function GETModifyInstanceMetadataOptionsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DryRun",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "dryRun", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HttpEndpoint",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "httpEndpoint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HttpProtocolIpv6",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "httpProtocolIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HttpPutResponseHopLimit",
        }),
        __metadata("design:type", Number)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "httpPutResponseHopLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=HttpTokens",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "httpTokens", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=InstanceId",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=InstanceMetadataTags",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "instanceMetadataTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETModifyInstanceMetadataOptionsRequest;
}(utils_1.SpeakeasyBase));
exports.GETModifyInstanceMetadataOptionsRequest = GETModifyInstanceMetadataOptionsRequest;
var GETModifyInstanceMetadataOptionsResponse = /** @class */ (function (_super) {
    __extends(GETModifyInstanceMetadataOptionsResponse, _super);
    function GETModifyInstanceMetadataOptionsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETModifyInstanceMetadataOptionsResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETModifyInstanceMetadataOptionsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETModifyInstanceMetadataOptionsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETModifyInstanceMetadataOptionsResponse.prototype, "rawResponse", void 0);
    return GETModifyInstanceMetadataOptionsResponse;
}(utils_1.SpeakeasyBase));
exports.GETModifyInstanceMetadataOptionsResponse = GETModifyInstanceMetadataOptionsResponse;
