// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GiftCardActivity - Represents an action performed on a gift card that affects its state or balance.
type GiftCardActivity struct {
	// Describes a gift card activity of the ACTIVATE type.
	ActivateActivityDetails *GiftCardActivityActivate `json:"activate_activity_details,omitempty"`
	// Describes a gift card activity of the ADJUST_DECREMENT type.
	AdjustDecrementActivityDetails *GiftCardActivityAdjustDecrement `json:"adjust_decrement_activity_details,omitempty"`
	// Describes a gift card activity of the ADJUST_INCREMENT type.
	AdjustIncrementActivityDetails *GiftCardActivityAdjustIncrement `json:"adjust_increment_activity_details,omitempty"`
	// Describes a gift card activity of the BLOCK type.
	BlockActivityDetails *GiftCardActivityBlock `json:"block_activity_details,omitempty"`
	// Describes a gift card activity of the CLEAR_BALANCE type.
	ClearBalanceActivityDetails *GiftCardActivityClearBalance `json:"clear_balance_activity_details,omitempty"`
	// The timestamp when the gift card activity was created, in RFC 3339 format.
	CreatedAt *string `json:"created_at,omitempty"`
	// Describes a gift card activity of the DEACTIVATE type.
	DeactivateActivityDetails *GiftCardActivityDeactivate `json:"deactivate_activity_details,omitempty"`
	// Represents an amount of money. `Money` fields can be signed or unsigned.
	// Fields that do not explicitly define whether they are signed or unsigned are
	// considered unsigned and can only hold positive amounts. For signed fields, the
	// sign of the value indicates the purpose of the money transfer. See
	// [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
	// for more information.
	GiftCardBalanceMoney *Money `json:"gift_card_balance_money,omitempty"`
	// The gift card GAN. The GAN is not required if `gift_card_id` is present.
	GiftCardGan *string `json:"gift_card_gan,omitempty"`
	// The gift card ID. The ID is not required if a GAN is present.
	GiftCardID *string `json:"gift_card_id,omitempty"`
	// The unique ID of the gift card activity.
	ID *string `json:"id,omitempty"`
	// Describes a gift card activity of the IMPORT type and the `GiftCardGANSource` is OTHER
	// (a third-party gift card).
	ImportActivityDetails *GiftCardActivityImport `json:"import_activity_details,omitempty"`
	// Present only when GiftCardActivityType is IMPORT_REVERSAL and GiftCardGANSource is OTHER
	ImportReversalActivityDetails *GiftCardActivityImportReversal `json:"import_reversal_activity_details,omitempty"`
	// Present only when `GiftCardActivityType` is LOAD.
	LoadActivityDetails *GiftCardActivityLoad `json:"load_activity_details,omitempty"`
	// The ID of the location at which the activity occurred.
	LocationID string `json:"location_id"`
	// Present only when `GiftCardActivityType` is REDEEM.
	RedeemActivityDetails *GiftCardActivityRedeem `json:"redeem_activity_details,omitempty"`
	// Present only when `GiftCardActivityType` is REFUND.
	RefundActivityDetails *GiftCardActivityRefund `json:"refund_activity_details,omitempty"`
	Type                  interface{}             `json:"type"`
	// Present only when `GiftCardActivityType` is UNBLOCK.
	UnblockActivityDetails *GiftCardActivityUnblock `json:"unblock_activity_details,omitempty"`
	// Present only when `GiftCardActivityType` is UNLINKED_ACTIVITY_REFUND.
	UnlinkedActivityRefundActivityDetails *GiftCardActivityUnlinkedActivityRefund `json:"unlinked_activity_refund_activity_details,omitempty"`
}
