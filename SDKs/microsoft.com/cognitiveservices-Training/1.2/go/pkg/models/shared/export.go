// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExportPlatformEnum string

const (
	ExportPlatformEnumCoreMl     ExportPlatformEnum = "CoreML"
	ExportPlatformEnumTensorFlow ExportPlatformEnum = "TensorFlow"
)

func (e ExportPlatformEnum) ToPointer() *ExportPlatformEnum {
	return &e
}

func (e *ExportPlatformEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CoreML":
		fallthrough
	case "TensorFlow":
		*e = ExportPlatformEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportPlatformEnum: %v", v)
	}
}

type ExportStatusEnum string

const (
	ExportStatusEnumExporting ExportStatusEnum = "Exporting"
	ExportStatusEnumFailed    ExportStatusEnum = "Failed"
	ExportStatusEnumDone      ExportStatusEnum = "Done"
)

func (e ExportStatusEnum) ToPointer() *ExportStatusEnum {
	return &e
}

func (e *ExportStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Exporting":
		fallthrough
	case "Failed":
		fallthrough
	case "Done":
		*e = ExportStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportStatusEnum: %v", v)
	}
}

// Export - OK
type Export struct {
	DownloadURI *string             `json:"DownloadUri,omitempty"`
	Platform    *ExportPlatformEnum `json:"Platform,omitempty"`
	Status      *ExportStatusEnum   `json:"Status,omitempty"`
}
