/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Group } from "./group";
import { Link } from "./link";
import { Expose, Transform, Type } from "class-transformer";

export class FhirCondition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "asserter" })
  asserter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fullDescription" })
  fullDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => Group)
  group?: Group;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  @SpeakeasyMetadata({ elemType: Link })
  @Expose({ name: "links" })
  @Type(() => Link)
  links?: Link[];

  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
