// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ClusterStateEnum string

const (
	ClusterStateEnumStarting             ClusterStateEnum = "STARTING"
	ClusterStateEnumBootstrapping        ClusterStateEnum = "BOOTSTRAPPING"
	ClusterStateEnumRunning              ClusterStateEnum = "RUNNING"
	ClusterStateEnumWaiting              ClusterStateEnum = "WAITING"
	ClusterStateEnumTerminating          ClusterStateEnum = "TERMINATING"
	ClusterStateEnumTerminated           ClusterStateEnum = "TERMINATED"
	ClusterStateEnumTerminatedWithErrors ClusterStateEnum = "TERMINATED_WITH_ERRORS"
)

func (e *ClusterStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STARTING":
		fallthrough
	case "BOOTSTRAPPING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "WAITING":
		fallthrough
	case "TERMINATING":
		fallthrough
	case "TERMINATED":
		fallthrough
	case "TERMINATED_WITH_ERRORS":
		*e = ClusterStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterStateEnum: %s", s)
	}
}
