/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetStyleGuideWithEnum {
  Preview = "preview",
}

export class GetStyleGuideRequest extends SpeakeasyBase {
  /**
   * Project ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: number;

  /**
   * Style Guide ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=styleGuideId",
  })
  styleGuideId: number;

  /**
   * Attach further information. Possible values 'preview' to fetch temporary preview URLs. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=with[]",
  })
  with?: GetStyleGuideWithEnum[];
}

export class GetStyleGuideResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * StyleGuideNotFound
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Style guide model
   */
  @SpeakeasyMetadata()
  styleGuide?: shared.StyleGuide;
}
