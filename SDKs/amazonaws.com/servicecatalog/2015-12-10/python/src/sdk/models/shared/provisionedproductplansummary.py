"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import provisionedproductplantype_enum as shared_provisionedproductplantype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProvisionedProductPlanSummary:
    r"""Summary information about a plan."""
    
    plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PlanId'), 'exclude': lambda f: f is None }})  
    plan_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PlanName'), 'exclude': lambda f: f is None }})  
    plan_type: Optional[shared_provisionedproductplantype_enum.ProvisionedProductPlanTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PlanType'), 'exclude': lambda f: f is None }})  
    provisioning_artifact_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisioningArtifactId'), 'exclude': lambda f: f is None }})  
    provision_product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisionProductId'), 'exclude': lambda f: f is None }})  
    provision_product_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisionProductName'), 'exclude': lambda f: f is None }})  
    