<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UpcomingMaintenance - Upcoming Maintenance notification information.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UpcomingMaintenance
{
    /**
     * Indicates if the maintenance can be customer triggered. From more detail, see go/sf-ctm-design.
     * 
     * @var ?bool $canReschedule
     */
	#[\JMS\Serializer\Annotation\SerializedName('canReschedule')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canReschedule = null;
    
    /**
     * [Output Only] The date when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
     * 
     * @var ?string $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $date = null;
    
    /**
     * The latest time for the planned maintenance window to start. This timestamp value is in RFC3339 text format.
     * 
     * @var ?string $latestWindowStartTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('latestWindowStartTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $latestWindowStartTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('maintenanceStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UpcomingMaintenanceMaintenanceStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpcomingMaintenanceMaintenanceStatusEnum $maintenanceStatus = null;
    
    /**
     * Represents a window of time using two timestamps: `earliest` and `latest`. This timestamp values are in RFC3339 text format.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UpcomingMaintenanceTimeWindow $startTimeWindow
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTimeWindow')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UpcomingMaintenanceTimeWindow')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpcomingMaintenanceTimeWindow $startTimeWindow = null;
    
    /**
     * [Output Only] The time when the maintenance will take place. This value is in RFC3339 text format. DEPRECATED: Use window_start_time instead.
     * 
     * @var ?string $time
     */
	#[\JMS\Serializer\Annotation\SerializedName('time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $time = null;
    
    /**
     * Defines the type of maintenance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UpcomingMaintenanceTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UpcomingMaintenanceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpcomingMaintenanceTypeEnum $type = null;
    
    /**
     * The time by which the maintenance disruption will be completed. This timestamp value is in RFC3339 text format.
     * 
     * @var ?string $windowEndTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('windowEndTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $windowEndTime = null;
    
    /**
     * The current start time of the maintenance window. This timestamp value is in RFC3339 text format.
     * 
     * @var ?string $windowStartTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('windowStartTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $windowStartTime = null;
    
	public function __construct()
	{
		$this->canReschedule = null;
		$this->date = null;
		$this->latestWindowStartTime = null;
		$this->maintenanceStatus = null;
		$this->startTimeWindow = null;
		$this->time = null;
		$this->type = null;
		$this->windowEndTime = null;
		$this->windowStartTime = null;
	}
}
