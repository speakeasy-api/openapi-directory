"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class TransportationIncentivesLawsCategoriesOutputFormatEnum(str, Enum):
    r"""Response format"""
    JSON = 'json'
    XML = 'xml'

class TransportationIncentivesLawsCategoriesTypeEnum(str, Enum):
    r"""Search by the category type."""
    TECH = 'tech'
    USER = 'user'
    REGULATION = 'regulation'
    INCENTIVE = 'incentive'


@dataclasses.dataclass
class TransportationIncentivesLawsCategoriesRequest:
    
    api_key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""API Key"""  
    output_format: TransportationIncentivesLawsCategoriesOutputFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'output_format', 'style': 'simple', 'explode': False }})
    r"""Response format"""  
    type: Optional[TransportationIncentivesLawsCategoriesTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Search by the category type."""  
    

@dataclasses.dataclass
class TransportationIncentivesLawsCategoriesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    