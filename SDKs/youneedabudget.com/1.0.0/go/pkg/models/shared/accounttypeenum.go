// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountTypeEnum - The type of account
type AccountTypeEnum string

const (
	AccountTypeEnumChecking       AccountTypeEnum = "checking"
	AccountTypeEnumSavings        AccountTypeEnum = "savings"
	AccountTypeEnumCash           AccountTypeEnum = "cash"
	AccountTypeEnumCreditCard     AccountTypeEnum = "creditCard"
	AccountTypeEnumLineOfCredit   AccountTypeEnum = "lineOfCredit"
	AccountTypeEnumOtherAsset     AccountTypeEnum = "otherAsset"
	AccountTypeEnumOtherLiability AccountTypeEnum = "otherLiability"
	AccountTypeEnumMortgage       AccountTypeEnum = "mortgage"
	AccountTypeEnumAutoLoan       AccountTypeEnum = "autoLoan"
	AccountTypeEnumStudentLoan    AccountTypeEnum = "studentLoan"
	AccountTypeEnumPersonalLoan   AccountTypeEnum = "personalLoan"
	AccountTypeEnumMedicalDebt    AccountTypeEnum = "medicalDebt"
	AccountTypeEnumOtherDebt      AccountTypeEnum = "otherDebt"
)

func (e AccountTypeEnum) ToPointer() *AccountTypeEnum {
	return &e
}

func (e *AccountTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checking":
		fallthrough
	case "savings":
		fallthrough
	case "cash":
		fallthrough
	case "creditCard":
		fallthrough
	case "lineOfCredit":
		fallthrough
	case "otherAsset":
		fallthrough
	case "otherLiability":
		fallthrough
	case "mortgage":
		fallthrough
	case "autoLoan":
		fallthrough
	case "studentLoan":
		fallthrough
	case "personalLoan":
		fallthrough
	case "medicalDebt":
		fallthrough
	case "otherDebt":
		*e = AccountTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountTypeEnum: %v", v)
	}
}
