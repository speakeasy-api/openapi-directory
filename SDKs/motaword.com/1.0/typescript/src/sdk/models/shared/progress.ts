/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ProgressLink } from "./progresslink";
import { ProgressSub } from "./progresssub";
import { ProjectStatusEnum } from "./projectstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Progress information
 */
export class Progress extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ProgressSub })
  @Expose({ name: "languages" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ProgressSub> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ProgressSub);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  languages?: Record<string, ProgressSub>;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => ProgressLink)
  links?: ProgressLink;

  @SpeakeasyMetadata()
  @Expose({ name: "project_status" })
  projectStatus?: ProjectStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "proofreading" })
  proofreading?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "translation" })
  translation?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "word_count" })
  wordCount?: number;
}
