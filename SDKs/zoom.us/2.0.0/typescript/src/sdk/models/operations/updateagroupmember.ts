/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class UpdateAGroupMemberSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Specify the type of action to be performed:<br><br>
 *
 * @remarks
 * `move`: Simultaneously remove a member from one group and move the member to a different group.<br>
 * `set_primary`: Set a primary group for the user.
 *
 */
export enum UpdateAGroupMemberApplicationJSONActionEnum {
  Move = "move",
  SetPrimary = "set_primary",
}

export class UpdateAGroupMemberApplicationJSON extends SpeakeasyBase {
  /**
   * Specify the type of action to be performed:<br><br>
   *
   * @remarks
   * `move`: Simultaneously remove a member from one group and move the member to a different group.<br>
   * `set_primary`: Set a primary group for the user.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: UpdateAGroupMemberApplicationJSONActionEnum;

  /**
   * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br>
   *
   * @remarks
   *
   * To move a user, use this field to specify the groupId of the group where the member is to be moved.<br>
   *
   * To set a primary group for the user, provide the groupId of the group which is going to be the primary group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_group_id" })
  targetGroupId?: string;
}

export class UpdateAGroupMemberRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateAGroupMemberApplicationJSON;

  /**
   * Unique Identifier of the group. Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br> To change a member's primary group, provide the groupId of the member's current primary group as the value of this field.<br> To remove a member from one group and move the member to another group, provide the groupId of the group from which the member is to be moved.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=groupId",
  })
  groupId: string;

  /**
   * Unique Identifier of the group member. Can be retrieved by calling the [List Group Members](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groupmembers) API.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=memberId",
  })
  memberId: string;
}

export class UpdateAGroupMemberResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `204` **No Content**<br>
   *
   * @remarks
   * Group member updated.
   */
  @SpeakeasyMetadata()
  updateAGroupMember204ApplicationJSONAny?: any;
}
