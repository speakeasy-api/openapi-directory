/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MediaUsage } from "./mediausage";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Assignment created
 */
export class Assignment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowsAnonymousContributions" })
  allowsAnonymousContributions?: boolean;

  /**
   * An optional call to action specific to this assignment. ie. Submit your snow pictures.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callToAction" })
  callToAction?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cover" })
  @Type(() => MediaUsage)
  cover?: MediaUsage;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "embargo" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  embargo?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ends" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  ends?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "featured" })
  featured?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mediaRequired" })
  mediaRequired?: boolean;

  /**
   * Optional credential id of the moderator who owns this particular assignment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "moderator" })
  moderator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Helper value. Is this assignment currently open? Based on the value of the ends field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "open" })
  open?: boolean;

  /**
   * An optional assignment specific message to be displayed on successful contribution submission. For example, this might be used to inform contributors of assignment specific moderation time frames.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiptMessage" })
  receiptMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "starts" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  starts?: Date;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "urlWords" })
  urlWords?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "webUrl" })
  webUrl?: string;
}
