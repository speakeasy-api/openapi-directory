"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deployedimage as shared_deployedimage
from ..shared import productionvariantserverlessconfig as shared_productionvariantserverlessconfig
from ..shared import productionvariantstatus as shared_productionvariantstatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductionVariantSummary:
    r"""Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateEndpointWeightsAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values."""
    
    variant_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VariantName') }})  
    current_instance_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrentInstanceCount'), 'exclude': lambda f: f is None }})  
    current_serverless_config: Optional[shared_productionvariantserverlessconfig.ProductionVariantServerlessConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrentServerlessConfig'), 'exclude': lambda f: f is None }})  
    current_weight: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrentWeight'), 'exclude': lambda f: f is None }})  
    deployed_images: Optional[list[shared_deployedimage.DeployedImage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeployedImages'), 'exclude': lambda f: f is None }})  
    desired_instance_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DesiredInstanceCount'), 'exclude': lambda f: f is None }})  
    desired_serverless_config: Optional[shared_productionvariantserverlessconfig.ProductionVariantServerlessConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DesiredServerlessConfig'), 'exclude': lambda f: f is None }})  
    desired_weight: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DesiredWeight'), 'exclude': lambda f: f is None }})  
    variant_status: Optional[list[shared_productionvariantstatus.ProductionVariantStatus]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VariantStatus'), 'exclude': lambda f: f is None }})  
    