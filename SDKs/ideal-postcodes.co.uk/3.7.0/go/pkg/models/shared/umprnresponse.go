// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
)

type UMPRNResponseCodeEnum string

const (
	UMPRNResponseCodeEnumTwoThousand UMPRNResponseCodeEnum = "2000"
)

func (e *UMPRNResponseCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2000":
		*e = UMPRNResponseCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UMPRNResponseCodeEnum: %s", s)
	}
}

type UMPRNResponseMessageEnum string

const (
	UMPRNResponseMessageEnumSuccess UMPRNResponseMessageEnum = "Success"
)

func (e *UMPRNResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Success":
		*e = UMPRNResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UMPRNResponseMessageEnum: %s", s)
	}
}

type UMPRNResponseResultType string

const (
	UMPRNResponseResultTypeMrAddress UMPRNResponseResultType = "MrAddress"
)

type UMPRNResponseResult struct {
	MrAddress *MrAddress

	Type UMPRNResponseResultType
}

func CreateUMPRNResponseResultMrAddress(mrAddress MrAddress) UMPRNResponseResult {
	typ := UMPRNResponseResultTypeMrAddress

	return UMPRNResponseResult{
		MrAddress: &mrAddress,
		Type:      typ,
	}
}

func (u *UMPRNResponseResult) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	mrAddress := new(MrAddress)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&mrAddress); err == nil {
		u.MrAddress = mrAddress
		u.Type = UMPRNResponseResultTypeMrAddress
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u UMPRNResponseResult) MarshalJSON() ([]byte, error) {
	if u.MrAddress != nil {
		return json.Marshal(u.MrAddress)
	}

	return nil, nil
}

// UMPRNResponse - Success
type UMPRNResponse struct {
	Code    UMPRNResponseCodeEnum    `json:"code"`
	Message UMPRNResponseMessageEnum `json:"message"`
	Result  UMPRNResponseResult      `json:"result"`
}
