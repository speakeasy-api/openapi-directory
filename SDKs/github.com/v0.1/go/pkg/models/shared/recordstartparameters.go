// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecordStartParametersFileFormatEnum - File format (extension)
type RecordStartParametersFileFormatEnum string

const (
	RecordStartParametersFileFormatEnumWav RecordStartParametersFileFormatEnum = "wav"
	RecordStartParametersFileFormatEnumMp3 RecordStartParametersFileFormatEnum = "mp3"
)

func (e *RecordStartParametersFileFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "wav":
		fallthrough
	case "mp3":
		*e = RecordStartParametersFileFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RecordStartParametersFileFormatEnum: %s", s)
	}
}

// RecordStartParameters - POST parameters
type RecordStartParameters struct {
	// Unique identifier of the call to be recorded
	CallUUID *string `form:"name=CallUUID"`
	// File format (extension)
	FileFormat *RecordStartParametersFileFormatEnum `form:"name=FileFormat"`
	// Recording file name (without extension); if empty, a timestamp based file name will be generated
	FileName *string `form:"name=FileName"`
	// Directory path/URI where the recording file will be saved
	FilePath *string `form:"name=FilePath"`
	// Maximum recording length, in seconds
	TimeLimit *int64 `form:"name=TimeLimit"`
}
