/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContactStatusEnum } from "./contactstatusenum";
import { Elevation } from "./elevation";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Data describing a contact.
 */
export class ContactData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "contactId" })
  contactId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contactStatus" })
  contactStatus?: ContactStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "groundStation" })
  groundStation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "maximumElevation" })
  @Type(() => Elevation)
  maximumElevation?: Elevation;

  @SpeakeasyMetadata()
  @Expose({ name: "missionProfileArn" })
  missionProfileArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "postPassEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  postPassEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "prePassStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  prePassStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "satelliteArn" })
  satelliteArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
