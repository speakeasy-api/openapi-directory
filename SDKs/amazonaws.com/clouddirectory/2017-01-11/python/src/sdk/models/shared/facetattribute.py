"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import facetattributedefinition as shared_facetattributedefinition
from ..shared import facetattributereference as shared_facetattributereference
from ..shared import requiredattributebehavior_enum as shared_requiredattributebehavior_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FacetAttribute:
    r"""An attribute that is associated with the <a>Facet</a>."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    attribute_definition: Optional[shared_facetattributedefinition.FacetAttributeDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttributeDefinition'), 'exclude': lambda f: f is None }})  
    attribute_reference: Optional[shared_facetattributereference.FacetAttributeReference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttributeReference'), 'exclude': lambda f: f is None }})  
    required_behavior: Optional[shared_requiredattributebehavior_enum.RequiredAttributeBehaviorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequiredBehavior'), 'exclude': lambda f: f is None }})  
    