/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NodesChildrenCreateNodeAttributesInput - The properties of the node entity.
 */
public class NodesChildrenCreateNodeAttributesInput {
    /**
     * The category of the node, as selected by project contributors.
     */
    @JsonProperty("category")
    public NodesChildrenCreateNodeAttributesCategoryEnum category;

    public NodesChildrenCreateNodeAttributesInput withCategory(NodesChildrenCreateNodeAttributesCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * The description of the node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public NodesChildrenCreateNodeAttributesInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("node_license")
    public String nodeLicense;

    public NodesChildrenCreateNodeAttributesInput withNodeLicense(String nodeLicense) {
        this.nodeLicense = nodeLicense;
        return this;
    }
    
    /**
     * Whether or not the node is publicly visible. This field is only editable by project administrators.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public")
    public Boolean public_;

    public NodesChildrenCreateNodeAttributesInput withPublic(Boolean public_) {
        this.public_ = public_;
        return this;
    }
    
    /**
     * A list of strings that describe this node, as entered by project contributors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;

    public NodesChildrenCreateNodeAttributesInput withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The unique ID of the node from which this node was templated, if this node was created from a template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template_from")
    public String templateFrom;

    public NodesChildrenCreateNodeAttributesInput withTemplateFrom(String templateFrom) {
        this.templateFrom = templateFrom;
        return this;
    }
    
    /**
     * The title of the node.
     */
    @JsonProperty("title")
    public String title;

    public NodesChildrenCreateNodeAttributesInput withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public NodesChildrenCreateNodeAttributesInput(@JsonProperty("category") NodesChildrenCreateNodeAttributesCategoryEnum category, @JsonProperty("title") String title) {
        this.category = category;
        this.title = title;
  }
}
