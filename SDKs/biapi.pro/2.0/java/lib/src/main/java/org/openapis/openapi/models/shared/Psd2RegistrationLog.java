/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Psd2RegistrationLog - Keep traces of PSD2 registration calls.
 *     The table is used by the plugin `psd2registration` to know:
 *      - whether it must call `update` or `create` routes on the PSD2 APIs when the config is updated
 *      - the list of PSD2 API to create (needed when a new connector is added)
 *      - the list of broken connectors
 */
public class Psd2RegistrationLog {
    /**
     * When this row was created
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public Psd2RegistrationLog withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * If fail, error message received from connector
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error_message")
    public String errorMessage;
    public Psd2RegistrationLog withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;
    public Psd2RegistrationLog withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * ID of the psd2 registration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_psd2registration")
    public Long idPsd2registration;
    public Psd2RegistrationLog withIdPsd2registration(Long idPsd2registration) {
        this.idPsd2registration = idPsd2registration;
        return this;
    }
    
    /**
     * Action done: create, update, delete
     */
    @JsonProperty("type")
    public String type;
    public Psd2RegistrationLog withType(String type) {
        this.type = type;
        return this;
    }
    
}
