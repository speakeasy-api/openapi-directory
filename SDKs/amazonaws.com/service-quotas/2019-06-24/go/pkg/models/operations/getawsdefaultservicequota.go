// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetAWSDefaultServiceQuotaXAmzTargetEnum
type GetAWSDefaultServiceQuotaXAmzTargetEnum string

const (
	GetAWSDefaultServiceQuotaXAmzTargetEnumServiceQuotasV20190624GetAwsDefaultServiceQuota GetAWSDefaultServiceQuotaXAmzTargetEnum = "ServiceQuotasV20190624.GetAWSDefaultServiceQuota"
)

func (e GetAWSDefaultServiceQuotaXAmzTargetEnum) ToPointer() *GetAWSDefaultServiceQuotaXAmzTargetEnum {
	return &e
}

func (e *GetAWSDefaultServiceQuotaXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ServiceQuotasV20190624.GetAWSDefaultServiceQuota":
		*e = GetAWSDefaultServiceQuotaXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAWSDefaultServiceQuotaXAmzTargetEnum: %v", v)
	}
}

type GetAWSDefaultServiceQuotaRequest struct {
	GetAWSDefaultServiceQuotaRequest shared.GetAWSDefaultServiceQuotaRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       GetAWSDefaultServiceQuotaXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetAWSDefaultServiceQuotaResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetAWSDefaultServiceQuotaResponse *shared.GetAWSDefaultServiceQuotaResponse
	// IllegalArgumentException
	IllegalArgumentException interface{}
	// NoSuchResourceException
	NoSuchResourceException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
