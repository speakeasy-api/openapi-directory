// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeMonitorXAmzTargetEnum
type DescribeMonitorXAmzTargetEnum string

const (
	DescribeMonitorXAmzTargetEnumAmazonForecastDescribeMonitor DescribeMonitorXAmzTargetEnum = "AmazonForecast.DescribeMonitor"
)

func (e DescribeMonitorXAmzTargetEnum) ToPointer() *DescribeMonitorXAmzTargetEnum {
	return &e
}

func (e *DescribeMonitorXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonForecast.DescribeMonitor":
		*e = DescribeMonitorXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeMonitorXAmzTargetEnum: %v", v)
	}
}

type DescribeMonitorRequest struct {
	DescribeMonitorRequest shared.DescribeMonitorRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             DescribeMonitorXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeMonitorResponse struct {
	ContentType string
	// Success
	DescribeMonitorResponse *shared.DescribeMonitorResponse
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
