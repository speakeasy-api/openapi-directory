/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionCategoryEnum } from "./actioncategoryenum";
import { ActionConfigurationProperty } from "./actionconfigurationproperty";
import { ActionTypeSettings } from "./actiontypesettings";
import { ArtifactDetails } from "./artifactdetails";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * Represents the input of a CreateCustomActionType operation.
 */
export class CreateCustomActionTypeInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category: ActionCategoryEnum;

  @SpeakeasyMetadata({ elemType: ActionConfigurationProperty })
  @Expose({ name: "configurationProperties" })
  @Type(() => ActionConfigurationProperty)
  configurationProperties?: ActionConfigurationProperty[];

  @SpeakeasyMetadata()
  @Expose({ name: "inputArtifactDetails" })
  @Type(() => ArtifactDetails)
  inputArtifactDetails: ArtifactDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "outputArtifactDetails" })
  @Type(() => ArtifactDetails)
  outputArtifactDetails: ArtifactDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "provider" })
  provider: string;

  @SpeakeasyMetadata()
  @Expose({ name: "settings" })
  @Type(() => ActionTypeSettings)
  settings?: ActionTypeSettings;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: string;
}
