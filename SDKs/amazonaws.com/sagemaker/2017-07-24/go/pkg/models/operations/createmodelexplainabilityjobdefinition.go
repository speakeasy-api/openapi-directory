// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateModelExplainabilityJobDefinitionXAmzTargetEnum
type CreateModelExplainabilityJobDefinitionXAmzTargetEnum string

const (
	CreateModelExplainabilityJobDefinitionXAmzTargetEnumSageMakerCreateModelExplainabilityJobDefinition CreateModelExplainabilityJobDefinitionXAmzTargetEnum = "SageMaker.CreateModelExplainabilityJobDefinition"
)

func (e CreateModelExplainabilityJobDefinitionXAmzTargetEnum) ToPointer() *CreateModelExplainabilityJobDefinitionXAmzTargetEnum {
	return &e
}

func (e *CreateModelExplainabilityJobDefinitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.CreateModelExplainabilityJobDefinition":
		*e = CreateModelExplainabilityJobDefinitionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateModelExplainabilityJobDefinitionXAmzTargetEnum: %v", v)
	}
}

type CreateModelExplainabilityJobDefinitionRequest struct {
	CreateModelExplainabilityJobDefinitionRequest shared.CreateModelExplainabilityJobDefinitionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                 *string                                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                             *string                                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                                *string                                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                      *string                                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                             *string                                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                 *string                                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                             *string                                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                    CreateModelExplainabilityJobDefinitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateModelExplainabilityJobDefinitionResponse struct {
	ContentType string
	// Success
	CreateModelExplainabilityJobDefinitionResponse *shared.CreateModelExplainabilityJobDefinitionResponse
	// ResourceInUse
	ResourceInUse interface{}
	// ResourceLimitExceeded
	ResourceLimitExceeded interface{}
	StatusCode            int
	RawResponse           *http.Response
}
