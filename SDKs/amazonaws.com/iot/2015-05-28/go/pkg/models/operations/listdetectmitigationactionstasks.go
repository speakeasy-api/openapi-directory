// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListDetectMitigationActionsTasksQueryParams struct {
	//  The end of the time period for which ML Detect mitigation actions tasks are returned.
	EndTime time.Time `queryParam:"style=form,explode=true,name=endTime"`
	// The maximum number of results to return at one time. The default is 25.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	//  The token for the next set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	//  A filter to limit results to those found after the specified time. You must specify either the startTime and endTime or the taskId, but not both.
	StartTime time.Time `queryParam:"style=form,explode=true,name=startTime"`
}

type ListDetectMitigationActionsTasksHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListDetectMitigationActionsTasksRequest struct {
	QueryParams ListDetectMitigationActionsTasksQueryParams
	Headers     ListDetectMitigationActionsTasksHeaders
}

type ListDetectMitigationActionsTasksResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListDetectMitigationActionsTasksResponse *shared.ListDetectMitigationActionsTasksResponse
	StatusCode                               int
	RawResponse                              *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
