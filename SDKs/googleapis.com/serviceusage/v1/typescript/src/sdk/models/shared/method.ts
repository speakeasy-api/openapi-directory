/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Option } from "./option";
import { Expose, Type } from "class-transformer";

/**
 * The source syntax of this method.
 */
export enum MethodSyntaxEnum {
  SyntaxProto2 = "SYNTAX_PROTO2",
  SyntaxProto3 = "SYNTAX_PROTO3",
  SyntaxEditions = "SYNTAX_EDITIONS",
}

/**
 * Method represents a method of an API interface.
 */
export class Method extends SpeakeasyBase {
  /**
   * The simple name of this method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Any metadata attached to the method.
   */
  @SpeakeasyMetadata({ elemType: Option })
  @Expose({ name: "options" })
  @Type(() => Option)
  options?: Option[];

  /**
   * If true, the request is streamed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestStreaming" })
  requestStreaming?: boolean;

  /**
   * A URL of the input message type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestTypeUrl" })
  requestTypeUrl?: string;

  /**
   * If true, the response is streamed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "responseStreaming" })
  responseStreaming?: boolean;

  /**
   * The URL of the output message type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "responseTypeUrl" })
  responseTypeUrl?: string;

  /**
   * The source syntax of this method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syntax" })
  syntax?: MethodSyntaxEnum;
}
