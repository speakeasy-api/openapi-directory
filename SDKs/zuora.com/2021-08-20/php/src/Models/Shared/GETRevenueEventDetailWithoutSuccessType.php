<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GETRevenueEventDetailWithoutSuccessType - Container for custom fields of a Revenue Event object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GETRevenueEventDetailWithoutSuccessType
{
    /**
     * An account ID.
     * 
     * 
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * The date when the record was created in YYYY-MM-DD HH:MM:SS format.
     * 
     * 
     * 
     * @var ?\DateTime $createdOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdOn = null;
    
    /**
     * The type of currency used.
     * 
     * @var ?string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
    /**
     * Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.
     * 
     * 
     * Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETRevenueEventDetailWithoutSuccessTypeEventTypeEnum $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETRevenueEventDetailWithoutSuccessTypeEventTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETRevenueEventDetailWithoutSuccessTypeEventTypeEnum $eventType = null;
    
    /**
     * Additional information about this record.
     * 
     * 
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * The revenue event number created when a revenue event occurs.
     * 
     * 
     * 
     * @var ?string $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $number = null;
    
    /**
     * The end date of a recognition period in YYYY-MM-DD format. 
     * 
     * 
     * The maximum difference of the recognitionStart and recognitionEnd date fields is equal to 250 multiplied by the length of an accounting period.
     * 
     * 
     * @var ?\DateTime $recognitionEnd
     */
	#[\JMS\Serializer\Annotation\SerializedName('recognitionEnd')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $recognitionEnd = null;
    
    /**
     * The start date of a recognition period in YYYY-MM-DD format.
     * 
     * 
     * 
     * @var ?\DateTime $recognitionStart
     */
	#[\JMS\Serializer\Annotation\SerializedName('recognitionStart')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $recognitionStart = null;
    
    /**
     * Revenue items are listed in ascending order by the accounting period start date.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GETRevenueItemType> $revenueItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('revenueItems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GETRevenueItemType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $revenueItems = null;
    
    /**
     * The original subscription charge ID.
     * 
     * 
     * 
     * @var ?string $subscriptionChargeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriptionChargeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionChargeId = null;
    
    /**
     * The original subscription ID.
     * 
     * 
     * 
     * @var ?string $subscriptionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriptionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionId = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->createdOn = null;
		$this->currency = null;
		$this->eventType = null;
		$this->notes = null;
		$this->number = null;
		$this->recognitionEnd = null;
		$this->recognitionStart = null;
		$this->revenueItems = null;
		$this->subscriptionChargeId = null;
		$this->subscriptionId = null;
	}
}
