<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ResourceId - A resource id is a generic reference that points to another YouTube resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ResourceId
{
    /**
     * The ID that YouTube uses to uniquely identify the referred resource, if that resource is a channel. This property is only present if the resourceId.kind value is youtube#channel.
     * 
     * @var ?string $channelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelId = null;
    
    /**
     * The type of the API resource.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The ID that YouTube uses to uniquely identify the referred resource, if that resource is a playlist. This property is only present if the resourceId.kind value is youtube#playlist.
     * 
     * @var ?string $playlistId
     */
	#[\JMS\Serializer\Annotation\SerializedName('playlistId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $playlistId = null;
    
    /**
     * The ID that YouTube uses to uniquely identify the referred resource, if that resource is a video. This property is only present if the resourceId.kind value is youtube#video.
     * 
     * @var ?string $videoId
     */
	#[\JMS\Serializer\Annotation\SerializedName('videoId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $videoId = null;
    
	public function __construct()
	{
		$this->channelId = null;
		$this->kind = null;
		$this->playlistId = null;
		$this->videoId = null;
	}
}
