"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleChromeManagementV1NetworkDeviceTypeEnum(str, Enum):
    r"""Output only. Network device type."""
    NETWORK_DEVICE_TYPE_UNSPECIFIED = 'NETWORK_DEVICE_TYPE_UNSPECIFIED'
    CELLULAR_DEVICE = 'CELLULAR_DEVICE'
    ETHERNET_DEVICE = 'ETHERNET_DEVICE'
    WIFI_DEVICE = 'WIFI_DEVICE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleChromeManagementV1NetworkDevice:
    r"""Details about the network device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportNetworkDeviceConfiguration](https://chromeenterprise.google/policies/#ReportNetworkDeviceConfiguration) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A"""
    
    iccid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iccid'), 'exclude': lambda f: f is None }})
    r"""Output only. The integrated circuit card ID associated with the device's sim card."""  
    imei: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imei'), 'exclude': lambda f: f is None }})
    r"""Output only. IMEI (if applicable) of the corresponding network device."""  
    mac_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('macAddress'), 'exclude': lambda f: f is None }})
    r"""Output only. MAC address (if applicable) of the corresponding network device."""  
    mdn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mdn'), 'exclude': lambda f: f is None }})
    r"""Output only. The mobile directory number associated with the device's sim card."""  
    meid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meid'), 'exclude': lambda f: f is None }})
    r"""Output only. MEID (if applicable) of the corresponding network device."""  
    type: Optional[GoogleChromeManagementV1NetworkDeviceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Output only. Network device type."""  
    