// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Quota - Limits associated with a Project.
type Quota struct {
	// Maximum allowed number of DnsKeys per ManagedZone.
	DNSKeysPerManagedZone *int `json:"dnsKeysPerManagedZone,omitempty"`
	// Maximum allowed number of GKE clusters to which a privately scoped zone can be attached.
	GkeClustersPerManagedZone *int `json:"gkeClustersPerManagedZone,omitempty"`
	// Maximum allowed number of GKE clusters per policy.
	GkeClustersPerPolicy *int `json:"gkeClustersPerPolicy,omitempty"`
	// Maximum allowed number of GKE clusters per response policy.
	GkeClustersPerResponsePolicy *int `json:"gkeClustersPerResponsePolicy,omitempty"`
	// Maximum allowed number of items per routing policy.
	ItemsPerRoutingPolicy *int    `json:"itemsPerRoutingPolicy,omitempty"`
	Kind                  *string `json:"kind,omitempty"`
	// Maximum allowed number of managed zones in the project.
	ManagedZones *int `json:"managedZones,omitempty"`
	// Maximum allowed number of managed zones which can be attached to a GKE cluster.
	ManagedZonesPerGkeCluster *int `json:"managedZonesPerGkeCluster,omitempty"`
	// Maximum allowed number of managed zones which can be attached to a network.
	ManagedZonesPerNetwork *int `json:"managedZonesPerNetwork,omitempty"`
	// Maximum allowed number of networks to which a privately scoped zone can be attached.
	NetworksPerManagedZone *int `json:"networksPerManagedZone,omitempty"`
	// Maximum allowed number of networks per policy.
	NetworksPerPolicy *int `json:"networksPerPolicy,omitempty"`
	// Maximum allowed number of networks per response policy.
	NetworksPerResponsePolicy *int `json:"networksPerResponsePolicy,omitempty"`
	// Maximum allowed number of consumer peering zones per target network owned by this producer project
	PeeringZonesPerTargetNetwork *int `json:"peeringZonesPerTargetNetwork,omitempty"`
	// Maximum allowed number of policies per project.
	Policies *int `json:"policies,omitempty"`
	// Maximum allowed number of ResourceRecords per ResourceRecordSet.
	ResourceRecordsPerRrset *int `json:"resourceRecordsPerRrset,omitempty"`
	// Maximum allowed number of response policies per project.
	ResponsePolicies *int `json:"responsePolicies,omitempty"`
	// Maximum allowed number of rules per response policy.
	ResponsePolicyRulesPerResponsePolicy *int `json:"responsePolicyRulesPerResponsePolicy,omitempty"`
	// Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.
	RrsetAdditionsPerChange *int `json:"rrsetAdditionsPerChange,omitempty"`
	// Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.
	RrsetDeletionsPerChange *int `json:"rrsetDeletionsPerChange,omitempty"`
	// Maximum allowed number of ResourceRecordSets per zone in the project.
	RrsetsPerManagedZone *int `json:"rrsetsPerManagedZone,omitempty"`
	// Maximum allowed number of target name servers per managed forwarding zone.
	TargetNameServersPerManagedZone *int `json:"targetNameServersPerManagedZone,omitempty"`
	// Maximum allowed number of alternative target name servers per policy.
	TargetNameServersPerPolicy *int `json:"targetNameServersPerPolicy,omitempty"`
	// Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes.
	TotalRrdataSizePerChange *int `json:"totalRrdataSizePerChange,omitempty"`
	// DNSSEC algorithm and key length types that can be used for DnsKeys.
	WhitelistedKeySpecs []DNSKeySpec `json:"whitelistedKeySpecs,omitempty"`
}
