// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PutLexiconPathParams struct {
	// Name of the lexicon. The name must follow the regular express format [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric string up to 20 characters long.
	LexiconName string `pathParam:"style=simple,explode=false,name=LexiconName"`
}

type PutLexiconHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutLexiconRequestBody struct {
	// Content of the PLS lexicon as string data.
	Content string `json:"Content"`
}

type PutLexiconRequest struct {
	PathParams PutLexiconPathParams
	Headers    PutLexiconHeaders
	Request    PutLexiconRequestBody `request:"mediaType=application/json"`
}

type PutLexiconResponse struct {
	ContentType string
	// InvalidLexiconException
	InvalidLexiconException interface{}
	// LexiconSizeExceededException
	LexiconSizeExceededException interface{}
	// MaxLexemeLengthExceededException
	MaxLexemeLengthExceededException interface{}
	// MaxLexiconsNumberExceededException
	MaxLexiconsNumberExceededException interface{}
	// Success
	PutLexiconOutput map[string]interface{}
	StatusCode       int
	RawResponse      *http.Response
	// ServiceFailureException
	ServiceFailureException interface{}
	// UnsupportedPlsAlphabetException
	UnsupportedPlsAlphabetException interface{}
	// UnsupportedPlsLanguageException
	UnsupportedPlsLanguageException interface{}
}
