/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class AnalyticsEventsRequest {
    /**
     * Controls whether or not to include a count of all the items across all pages.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$inlinecount")
    public AnalyticsEventsDollarInlinecountEnum dollarInlinecount;

    public AnalyticsEventsRequest withDollarInlinecount(AnalyticsEventsDollarInlinecountEnum dollarInlinecount) {
        this.dollarInlinecount = dollarInlinecount;
        return this;
    }
    
    /**
     * controls the sorting order and sorting based on which column
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$orderby")
    public String dollarOrderby;

    public AnalyticsEventsRequest withDollarOrderby(String dollarOrderby) {
        this.dollarOrderby = dollarOrderby;
        return this;
    }
    
    /**
     * The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$skip")
    public Long dollarSkip;

    public AnalyticsEventsRequest withDollarSkip(Long dollarSkip) {
        this.dollarSkip = dollarSkip;
        return this;
    }
    
    /**
     * The maximum number of results to return. (0 will fetch all results)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$top")
    public Long dollarTop;

    public AnalyticsEventsRequest withDollarTop(Long dollarTop) {
        this.dollarTop = dollarTop;
        return this;
    }
    
    /**
     * The name of the application
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=app_name")
    public String appName;

    public AnalyticsEventsRequest withAppName(String appName) {
        this.appName = appName;
        return this;
    }
    
    /**
     * Last date time in data in ISO 8601 date time format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end")
    public OffsetDateTime end;

    public AnalyticsEventsRequest withEnd(OffsetDateTime end) {
        this.end = end;
        return this;
    }
    
    /**
     * To select the specific events.
     */
    @SpeakeasyMetadata("queryParam:style=pipeDelimited,explode=true,name=event_name")
    public String[] eventName;

    public AnalyticsEventsRequest withEventName(String[] eventName) {
        this.eventName = eventName;
        return this;
    }
    
    /**
     * The name of the owner
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=owner_name")
    public String ownerName;

    public AnalyticsEventsRequest withOwnerName(String ownerName) {
        this.ownerName = ownerName;
        return this;
    }
    
    /**
     * Start date time in data in ISO 8601 date time format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start")
    public OffsetDateTime start;

    public AnalyticsEventsRequest withStart(OffsetDateTime start) {
        this.start = start;
        return this;
    }
    
    /**
     * To select specific application versions
     */
    @SpeakeasyMetadata("queryParam:style=pipeDelimited,explode=true,name=versions")
    public String[] versions;

    public AnalyticsEventsRequest withVersions(String[] versions) {
        this.versions = versions;
        return this;
    }
    
    public AnalyticsEventsRequest(@JsonProperty("app_name") String appName, @JsonProperty("owner_name") String ownerName, @JsonProperty("start") OffsetDateTime start) {
        this.appName = appName;
        this.ownerName = ownerName;
        this.start = start;
  }
}
