// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstancePatchStateOperatorTypeEnum string

const (
	InstancePatchStateOperatorTypeEnumEqual       InstancePatchStateOperatorTypeEnum = "Equal"
	InstancePatchStateOperatorTypeEnumNotEqual    InstancePatchStateOperatorTypeEnum = "NotEqual"
	InstancePatchStateOperatorTypeEnumLessThan    InstancePatchStateOperatorTypeEnum = "LessThan"
	InstancePatchStateOperatorTypeEnumGreaterThan InstancePatchStateOperatorTypeEnum = "GreaterThan"
)

func (e *InstancePatchStateOperatorTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Equal":
		fallthrough
	case "NotEqual":
		fallthrough
	case "LessThan":
		fallthrough
	case "GreaterThan":
		*e = InstancePatchStateOperatorTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstancePatchStateOperatorTypeEnum: %s", s)
	}
}
