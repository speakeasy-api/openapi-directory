// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SlackConnectorOperatorEnum string

const (
	SlackConnectorOperatorEnumProjection           SlackConnectorOperatorEnum = "PROJECTION"
	SlackConnectorOperatorEnumLessThan             SlackConnectorOperatorEnum = "LESS_THAN"
	SlackConnectorOperatorEnumGreaterThan          SlackConnectorOperatorEnum = "GREATER_THAN"
	SlackConnectorOperatorEnumBetween              SlackConnectorOperatorEnum = "BETWEEN"
	SlackConnectorOperatorEnumLessThanOrEqualTo    SlackConnectorOperatorEnum = "LESS_THAN_OR_EQUAL_TO"
	SlackConnectorOperatorEnumGreaterThanOrEqualTo SlackConnectorOperatorEnum = "GREATER_THAN_OR_EQUAL_TO"
	SlackConnectorOperatorEnumEqualTo              SlackConnectorOperatorEnum = "EQUAL_TO"
	SlackConnectorOperatorEnumAddition             SlackConnectorOperatorEnum = "ADDITION"
	SlackConnectorOperatorEnumMultiplication       SlackConnectorOperatorEnum = "MULTIPLICATION"
	SlackConnectorOperatorEnumDivision             SlackConnectorOperatorEnum = "DIVISION"
	SlackConnectorOperatorEnumSubtraction          SlackConnectorOperatorEnum = "SUBTRACTION"
	SlackConnectorOperatorEnumMaskAll              SlackConnectorOperatorEnum = "MASK_ALL"
	SlackConnectorOperatorEnumMaskFirstN           SlackConnectorOperatorEnum = "MASK_FIRST_N"
	SlackConnectorOperatorEnumMaskLastN            SlackConnectorOperatorEnum = "MASK_LAST_N"
	SlackConnectorOperatorEnumValidateNonNull      SlackConnectorOperatorEnum = "VALIDATE_NON_NULL"
	SlackConnectorOperatorEnumValidateNonZero      SlackConnectorOperatorEnum = "VALIDATE_NON_ZERO"
	SlackConnectorOperatorEnumValidateNonNegative  SlackConnectorOperatorEnum = "VALIDATE_NON_NEGATIVE"
	SlackConnectorOperatorEnumValidateNumeric      SlackConnectorOperatorEnum = "VALIDATE_NUMERIC"
	SlackConnectorOperatorEnumNoOp                 SlackConnectorOperatorEnum = "NO_OP"
)

func (e *SlackConnectorOperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROJECTION":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "BETWEEN":
		fallthrough
	case "LESS_THAN_OR_EQUAL_TO":
		fallthrough
	case "GREATER_THAN_OR_EQUAL_TO":
		fallthrough
	case "EQUAL_TO":
		fallthrough
	case "ADDITION":
		fallthrough
	case "MULTIPLICATION":
		fallthrough
	case "DIVISION":
		fallthrough
	case "SUBTRACTION":
		fallthrough
	case "MASK_ALL":
		fallthrough
	case "MASK_FIRST_N":
		fallthrough
	case "MASK_LAST_N":
		fallthrough
	case "VALIDATE_NON_NULL":
		fallthrough
	case "VALIDATE_NON_ZERO":
		fallthrough
	case "VALIDATE_NON_NEGATIVE":
		fallthrough
	case "VALIDATE_NUMERIC":
		fallthrough
	case "NO_OP":
		*e = SlackConnectorOperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SlackConnectorOperatorEnum: %s", s)
	}
}
