/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETModifyGlobalReplicationGroupQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETModifyGlobalReplicationGroupActionEnum action;
    public GETModifyGlobalReplicationGroupQueryParams withAction(GETModifyGlobalReplicationGroupActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * This parameter causes the modifications in this request and any pending modifications to be applied, asynchronously and as soon as possible. Modifications to Global Replication Groups cannot be requested to be applied in PreferredMaintenceWindow. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ApplyImmediately")
    public Boolean applyImmediately;
    public GETModifyGlobalReplicationGroupQueryParams withApplyImmediately(Boolean applyImmediately) {
        this.applyImmediately = applyImmediately;
        return this;
    }
    
    /**
     * Determines whether a read replica is automatically promoted to read/write primary if the existing primary encounters a failure. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AutomaticFailoverEnabled")
    public Boolean automaticFailoverEnabled;
    public GETModifyGlobalReplicationGroupQueryParams withAutomaticFailoverEnabled(Boolean automaticFailoverEnabled) {
        this.automaticFailoverEnabled = automaticFailoverEnabled;
        return this;
    }
    
    /**
     * A valid cache node type that you want to scale this Global datastore to.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CacheNodeType")
    public String cacheNodeType;
    public GETModifyGlobalReplicationGroupQueryParams withCacheNodeType(String cacheNodeType) {
        this.cacheNodeType = cacheNodeType;
        return this;
    }
    
    /**
     * The name of the cache parameter group to use with the Global datastore. It must be compatible with the major engine version used by the Global datastore.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CacheParameterGroupName")
    public String cacheParameterGroupName;
    public GETModifyGlobalReplicationGroupQueryParams withCacheParameterGroupName(String cacheParameterGroupName) {
        this.cacheParameterGroupName = cacheParameterGroupName;
        return this;
    }
    
    /**
     * The upgraded version of the cache engine to be run on the clusters in the Global datastore. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EngineVersion")
    public String engineVersion;
    public GETModifyGlobalReplicationGroupQueryParams withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }
    
    /**
     * A description of the Global datastore
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=GlobalReplicationGroupDescription")
    public String globalReplicationGroupDescription;
    public GETModifyGlobalReplicationGroupQueryParams withGlobalReplicationGroupDescription(String globalReplicationGroupDescription) {
        this.globalReplicationGroupDescription = globalReplicationGroupDescription;
        return this;
    }
    
    /**
     * The name of the Global datastore
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=GlobalReplicationGroupId")
    public String globalReplicationGroupId;
    public GETModifyGlobalReplicationGroupQueryParams withGlobalReplicationGroupId(String globalReplicationGroupId) {
        this.globalReplicationGroupId = globalReplicationGroupId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETModifyGlobalReplicationGroupVersionEnum version;
    public GETModifyGlobalReplicationGroupQueryParams withVersion(GETModifyGlobalReplicationGroupVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
