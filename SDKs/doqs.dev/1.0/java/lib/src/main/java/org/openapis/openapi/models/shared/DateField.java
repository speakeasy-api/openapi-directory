/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DateField {
    @JsonProperty("bbox")
    public BoundingBox bbox;

    public DateField withBbox(BoundingBox bbox) {
        this.bbox = bbox;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cell_count")
    public Long cellCount;

    public DateField withCellCount(Long cellCount) {
        this.cellCount = cellCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cell_offset")
    public Long cellOffset;

    public DateField withCellOffset(Long cellOffset) {
        this.cellOffset = cellOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cells")
    public Boolean cells;

    public DateField withCells(Boolean cells) {
        this.cells = cells;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public String color;

    public DateField withColor(String color) {
        this.color = color;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("font")
    public DateFieldFontEnum font;

    public DateField withFont(DateFieldFontEnum font) {
        this.font = font;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("font_size")
    public Long fontSize;

    public DateField withFontSize(Long fontSize) {
        this.fontSize = fontSize;
        return this;
    }
    
    @JsonProperty("format")
    public String format;

    public DateField withFormat(String format) {
        this.format = format;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("h_align")
    public DateFieldHorizontalAlignEnum hAlign;

    public DateField withHAlign(DateFieldHorizontalAlignEnum hAlign) {
        this.hAlign = hAlign;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    public String locale;

    public DateField withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public DateField withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("page")
    public Long page;

    public DateField withPage(Long page) {
        this.page = page;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required")
    public Boolean required;

    public DateField withRequired(Boolean required) {
        this.required = required;
        return this;
    }
    
    @JsonProperty("type")
    public DateFieldTypeEnum type;

    public DateField withType(DateFieldTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("v_align")
    public DateFieldVerticalAlignEnum vAlign;

    public DateField withVAlign(DateFieldVerticalAlignEnum vAlign) {
        this.vAlign = vAlign;
        return this;
    }
    
    public DateField(@JsonProperty("bbox") BoundingBox bbox, @JsonProperty("format") String format, @JsonProperty("name") String name, @JsonProperty("page") Long page, @JsonProperty("type") DateFieldTypeEnum type) {
        this.bbox = bbox;
        this.format = format;
        this.name = name;
        this.page = page;
        this.type = type;
  }
}
