"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import chat_v2_service_channel_message as shared_chat_v2_service_channel_message
from ..shared import message_enum_webhook_enabled_type_enum as shared_message_enum_webhook_enabled_type_enum
from datetime import datetime
from typing import Optional

UPDATE_MESSAGE_SERVERS = [
	"https://chat.twilio.com",
]


@dataclasses.dataclass
class UpdateMessageSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateMessageUpdateMessageRequest:
    
    attributes: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Attributes' }})
    r"""A valid JSON string that contains application-specific data."""  
    body: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Body' }})
    r"""The message to send to the channel. Can be an empty string or `null`, which sets the value as an empty string. You can send structured data in the body by serializing it as a string."""  
    date_created: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DateCreated' }})
    r"""The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was created. The default value is the current time set by the Chat service. This parameter should only be used when a Chat's history is being recreated from a backup/separate source."""  
    date_updated: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DateUpdated' }})
    r"""The date, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, to assign to the resource as the date it was last updated."""  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'From' }})
    r"""The [Identity](https://www.twilio.com/docs/chat/identity) of the message's author."""  
    last_updated_by: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'LastUpdatedBy' }})
    r"""The [Identity](https://www.twilio.com/docs/chat/identity) of the User who last updated the Message, if applicable."""  
    

@dataclasses.dataclass
class UpdateMessageRequest:
    
    channel_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ChannelSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Channel](https://www.twilio.com/docs/chat/channels) the Message resource to update belongs to. This value can be the Channel resource's `sid` or `unique_name`."""  
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Service](https://www.twilio.com/docs/chat/rest/service-resource) to update the Message resource in."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Message resource to update."""  
    request_body: Optional[UpdateMessageUpdateMessageRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    x_twilio_webhook_enabled: Optional[shared_message_enum_webhook_enabled_type_enum.MessageEnumWebhookEnabledTypeEnum] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Twilio-Webhook-Enabled', 'style': 'simple', 'explode': False }})
    r"""The X-Twilio-Webhook-Enabled HTTP request header"""  
    

@dataclasses.dataclass
class UpdateMessageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    chat_v2_service_channel_message: Optional[shared_chat_v2_service_channel_message.ChatV2ServiceChannelMessage] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    