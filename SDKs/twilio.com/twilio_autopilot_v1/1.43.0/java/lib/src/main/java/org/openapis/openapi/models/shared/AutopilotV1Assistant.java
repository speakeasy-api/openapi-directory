/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AutopilotV1Assistant - Created
 */
public class AutopilotV1Assistant {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Assistant resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public AutopilotV1Assistant withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * Reserved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callback_events")
    public String callbackEvents;

    public AutopilotV1Assistant withCallbackEvents(String callbackEvents) {
        this.callbackEvents = callbackEvents;
        return this;
    }
    
    /**
     * Reserved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callback_url")
    public String callbackUrl;

    public AutopilotV1Assistant withCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public AutopilotV1Assistant withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public AutopilotV1Assistant withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * A string describing the state of the assistant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("development_stage")
    public String developmentStage;

    public AutopilotV1Assistant withDevelopmentStage(String developmentStage) {
        this.developmentStage = developmentStage;
        return this;
    }
    
    /**
     * The string that you assigned to describe the resource. It is not unique and can be up to 255 characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;

    public AutopilotV1Assistant withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * Reserved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latest_model_build_sid")
    public String latestModelBuildSid;

    public AutopilotV1Assistant withLatestModelBuildSid(String latestModelBuildSid) {
        this.latestModelBuildSid = latestModelBuildSid;
        return this;
    }
    
    /**
     * A list of the URLs of the Assistant's related resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public AutopilotV1Assistant withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * Whether queries should be logged and kept after training. Can be: `true` or `false` and defaults to `true`. If `true`, queries are stored for 30 days, and then deleted. If `false`, no queries are stored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("log_queries")
    public Boolean logQueries;

    public AutopilotV1Assistant withLogQueries(Boolean logQueries) {
        this.logQueries = logQueries;
        return this;
    }
    
    /**
     * Whether model needs to be rebuilt.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("needs_model_build")
    public Boolean needsModelBuild;

    public AutopilotV1Assistant withNeedsModelBuild(Boolean needsModelBuild) {
        this.needsModelBuild = needsModelBuild;
        return this;
    }
    
    /**
     * The unique string that we created to identify the Assistant resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public AutopilotV1Assistant withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource. It can be up to 64 characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unique_name")
    public String uniqueName;

    public AutopilotV1Assistant withUniqueName(String uniqueName) {
        this.uniqueName = uniqueName;
        return this;
    }
    
    /**
     * The absolute URL of the Assistant resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public AutopilotV1Assistant withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public AutopilotV1Assistant(){}
}
