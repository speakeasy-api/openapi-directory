"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateEventlogConfig:
    r"""Request model for updating eventlog settings"""
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Is eventlog enabled?"""  
    log_ip_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logIpEnabled'), 'exclude': lambda f: f is None }})
    r"""Determines whether userâ€™s IP address is logged."""  
    retention_period: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retentionPeriod'), 'exclude': lambda f: f is None }})
    r"""Retention period (in days) of event log entries.
    
    After that period, all entries are deleted.
    
    Recommended value: 7
    """  
    