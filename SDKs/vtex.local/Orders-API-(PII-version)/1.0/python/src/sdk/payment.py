"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Payment:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def send_payment_notification2(self, request: operations.SendPaymentNotification2Request) -> operations.SendPaymentNotification2Response:
        r"""Send payment notification
        Send a payment notification of a given order, by order ID and payment ID.
        
        
        > The `Notify payment` resource is needed to use this API request. This is included in `OMS - Full access` and `IntegrationProfile - Fulfillment Oms`, among other default roles available in the Admin. Learn more about the [License manager roles and resources](https://help.vtex.com/en/tutorial/roles--7HKK5Uau2H6wxE1rH5oRbc#).
        
        
        > Learn more about [Transaction Details](https://help.vtex.com/en/tutorial/how-to-view-the-orders-details).
        
        
        ## Request body properties
        
        | Attribute    | Type        | Description |
        | --------------- |:---------:| --------------------------------------:|
        | `orderId` | string | Order Id |
        | `paymentId` | string | Payment ID |
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.SendPaymentNotification2Request, base_url, '/api/orders/pvt/document/{orderId}/payment/{paymentId}/notify-payment', request)
        
        headers = utils.get_headers(request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.SendPaymentNotification2Response(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    