// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateTrustXAmzTargetEnum
type CreateTrustXAmzTargetEnum string

const (
	CreateTrustXAmzTargetEnumDirectoryService20150416CreateTrust CreateTrustXAmzTargetEnum = "DirectoryService_20150416.CreateTrust"
)

func (e CreateTrustXAmzTargetEnum) ToPointer() *CreateTrustXAmzTargetEnum {
	return &e
}

func (e *CreateTrustXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DirectoryService_20150416.CreateTrust":
		*e = CreateTrustXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTrustXAmzTargetEnum: %v", v)
	}
}

type CreateTrustRequest struct {
	CreateTrustRequest shared.CreateTrustRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         CreateTrustXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateTrustResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	CreateTrustResult *shared.CreateTrustResult
	// EntityAlreadyExistsException
	EntityAlreadyExistsException interface{}
	// EntityDoesNotExistException
	EntityDoesNotExistException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
