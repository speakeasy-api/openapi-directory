// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisconnectCustomKeyStoreXAmzTargetEnum
type DisconnectCustomKeyStoreXAmzTargetEnum string

const (
	DisconnectCustomKeyStoreXAmzTargetEnumTrentServiceDisconnectCustomKeyStore DisconnectCustomKeyStoreXAmzTargetEnum = "TrentService.DisconnectCustomKeyStore"
)

func (e DisconnectCustomKeyStoreXAmzTargetEnum) ToPointer() *DisconnectCustomKeyStoreXAmzTargetEnum {
	return &e
}

func (e *DisconnectCustomKeyStoreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TrentService.DisconnectCustomKeyStore":
		*e = DisconnectCustomKeyStoreXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisconnectCustomKeyStoreXAmzTargetEnum: %v", v)
	}
}

type DisconnectCustomKeyStoreRequest struct {
	DisconnectCustomKeyStoreRequest shared.DisconnectCustomKeyStoreRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      DisconnectCustomKeyStoreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisconnectCustomKeyStoreResponse struct {
	ContentType string
	// CustomKeyStoreInvalidStateException
	CustomKeyStoreInvalidStateException interface{}
	// CustomKeyStoreNotFoundException
	CustomKeyStoreNotFoundException interface{}
	// Success
	DisconnectCustomKeyStoreResponse map[string]interface{}
	// KMSInternalException
	KMSInternalException interface{}
	StatusCode           int
	RawResponse          *http.Response
}
