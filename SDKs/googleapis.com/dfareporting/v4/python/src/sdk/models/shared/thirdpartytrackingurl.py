"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ThirdPartyTrackingURLThirdPartyURLTypeEnum(str, Enum):
    r"""Third-party URL type for in-stream video and in-stream audio creatives."""
    IMPRESSION = 'IMPRESSION'
    CLICK_TRACKING = 'CLICK_TRACKING'
    VIDEO_START = 'VIDEO_START'
    VIDEO_FIRST_QUARTILE = 'VIDEO_FIRST_QUARTILE'
    VIDEO_MIDPOINT = 'VIDEO_MIDPOINT'
    VIDEO_THIRD_QUARTILE = 'VIDEO_THIRD_QUARTILE'
    VIDEO_COMPLETE = 'VIDEO_COMPLETE'
    VIDEO_MUTE = 'VIDEO_MUTE'
    VIDEO_PAUSE = 'VIDEO_PAUSE'
    VIDEO_REWIND = 'VIDEO_REWIND'
    VIDEO_FULLSCREEN = 'VIDEO_FULLSCREEN'
    VIDEO_STOP = 'VIDEO_STOP'
    VIDEO_CUSTOM = 'VIDEO_CUSTOM'
    SURVEY = 'SURVEY'
    RICH_MEDIA_IMPRESSION = 'RICH_MEDIA_IMPRESSION'
    RICH_MEDIA_RM_IMPRESSION = 'RICH_MEDIA_RM_IMPRESSION'
    RICH_MEDIA_BACKUP_IMPRESSION = 'RICH_MEDIA_BACKUP_IMPRESSION'
    VIDEO_SKIP = 'VIDEO_SKIP'
    VIDEO_PROGRESS = 'VIDEO_PROGRESS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ThirdPartyTrackingURL:
    r"""Third-party Tracking URL."""
    
    third_party_url_type: Optional[ThirdPartyTrackingURLThirdPartyURLTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thirdPartyUrlType'), 'exclude': lambda f: f is None }})
    r"""Third-party URL type for in-stream video and in-stream audio creatives."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""URL for the specified third-party URL type."""  
    