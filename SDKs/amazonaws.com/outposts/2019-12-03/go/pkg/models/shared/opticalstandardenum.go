// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OpticalStandardEnum string

const (
	OpticalStandardEnumOptic10GbaseSr      OpticalStandardEnum = "OPTIC_10GBASE_SR"
	OpticalStandardEnumOptic10GbaseIr      OpticalStandardEnum = "OPTIC_10GBASE_IR"
	OpticalStandardEnumOptic10GbaseLr      OpticalStandardEnum = "OPTIC_10GBASE_LR"
	OpticalStandardEnumOptic40GbaseSr      OpticalStandardEnum = "OPTIC_40GBASE_SR"
	OpticalStandardEnumOptic40GbaseEsr     OpticalStandardEnum = "OPTIC_40GBASE_ESR"
	OpticalStandardEnumOptic40GbaseIr4Lr4L OpticalStandardEnum = "OPTIC_40GBASE_IR4_LR4L"
	OpticalStandardEnumOptic40GbaseLr4     OpticalStandardEnum = "OPTIC_40GBASE_LR4"
	OpticalStandardEnumOptic100GbaseSr4    OpticalStandardEnum = "OPTIC_100GBASE_SR4"
	OpticalStandardEnumOptic100GbaseCwdm4  OpticalStandardEnum = "OPTIC_100GBASE_CWDM4"
	OpticalStandardEnumOptic100GbaseLr4    OpticalStandardEnum = "OPTIC_100GBASE_LR4"
	OpticalStandardEnumOptic100GPsm4Msa    OpticalStandardEnum = "OPTIC_100G_PSM4_MSA"
	OpticalStandardEnumOptic1000BaseLx     OpticalStandardEnum = "OPTIC_1000BASE_LX"
	OpticalStandardEnumOptic1000BaseSx     OpticalStandardEnum = "OPTIC_1000BASE_SX"
)

func (e OpticalStandardEnum) ToPointer() *OpticalStandardEnum {
	return &e
}

func (e *OpticalStandardEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPTIC_10GBASE_SR":
		fallthrough
	case "OPTIC_10GBASE_IR":
		fallthrough
	case "OPTIC_10GBASE_LR":
		fallthrough
	case "OPTIC_40GBASE_SR":
		fallthrough
	case "OPTIC_40GBASE_ESR":
		fallthrough
	case "OPTIC_40GBASE_IR4_LR4L":
		fallthrough
	case "OPTIC_40GBASE_LR4":
		fallthrough
	case "OPTIC_100GBASE_SR4":
		fallthrough
	case "OPTIC_100GBASE_CWDM4":
		fallthrough
	case "OPTIC_100GBASE_LR4":
		fallthrough
	case "OPTIC_100G_PSM4_MSA":
		fallthrough
	case "OPTIC_1000BASE_LX":
		fallthrough
	case "OPTIC_1000BASE_SX":
		*e = OpticalStandardEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OpticalStandardEnum: %v", v)
	}
}
