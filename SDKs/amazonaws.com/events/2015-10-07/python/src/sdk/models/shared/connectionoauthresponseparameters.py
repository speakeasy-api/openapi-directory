"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import connectionhttpparameters as shared_connectionhttpparameters
from ..shared import connectionoauthclientresponseparameters as shared_connectionoauthclientresponseparameters
from ..shared import connectionoauthhttpmethod_enum as shared_connectionoauthhttpmethod_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectionOAuthResponseParameters:
    r"""Contains the response parameters when OAuth is specified as the authorization type."""
    
    authorization_endpoint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuthorizationEndpoint'), 'exclude': lambda f: f is None }})  
    client_parameters: Optional[shared_connectionoauthclientresponseparameters.ConnectionOAuthClientResponseParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientParameters'), 'exclude': lambda f: f is None }})  
    http_method: Optional[shared_connectionoauthhttpmethod_enum.ConnectionOAuthHTTPMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpMethod'), 'exclude': lambda f: f is None }})  
    o_auth_http_parameters: Optional[shared_connectionhttpparameters.ConnectionHTTPParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OAuthHttpParameters'), 'exclude': lambda f: f is None }})  
    