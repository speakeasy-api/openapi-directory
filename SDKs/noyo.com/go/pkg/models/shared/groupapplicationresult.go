// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GroupApplicationResultApplicationTypeEnum - Type of application for the group with this carrier
type GroupApplicationResultApplicationTypeEnum string

const (
	GroupApplicationResultApplicationTypeEnumNew     GroupApplicationResultApplicationTypeEnum = "new"
	GroupApplicationResultApplicationTypeEnumRenewal GroupApplicationResultApplicationTypeEnum = "renewal"
	GroupApplicationResultApplicationTypeEnumUpsell  GroupApplicationResultApplicationTypeEnum = "upsell"
)

func (e *GroupApplicationResultApplicationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "new":
		fallthrough
	case "renewal":
		fallthrough
	case "upsell":
		*e = GroupApplicationResultApplicationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupApplicationResultApplicationTypeEnum: %s", s)
	}
}

// GroupApplicationResultStatusEnum - Status of the application for the group
type GroupApplicationResultStatusEnum string

const (
	GroupApplicationResultStatusEnumActionRequired     GroupApplicationResultStatusEnum = "action_required"
	GroupApplicationResultStatusEnumCanceled           GroupApplicationResultStatusEnum = "canceled"
	GroupApplicationResultStatusEnumInProgress         GroupApplicationResultStatusEnum = "in_progress"
	GroupApplicationResultStatusEnumInstalledAtCarrier GroupApplicationResultStatusEnum = "installed_at_carrier"
	GroupApplicationResultStatusEnumNoyoReview         GroupApplicationResultStatusEnum = "noyo_review"
	GroupApplicationResultStatusEnumReadyForRequests   GroupApplicationResultStatusEnum = "ready_for_requests"
	GroupApplicationResultStatusEnumUnableToInstall    GroupApplicationResultStatusEnum = "unable_to_install"
	GroupApplicationResultStatusEnumWaitingOnCarrier   GroupApplicationResultStatusEnum = "waiting_on_carrier"
)

func (e *GroupApplicationResultStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "action_required":
		fallthrough
	case "canceled":
		fallthrough
	case "in_progress":
		fallthrough
	case "installed_at_carrier":
		fallthrough
	case "noyo_review":
		fallthrough
	case "ready_for_requests":
		fallthrough
	case "unable_to_install":
		fallthrough
	case "waiting_on_carrier":
		*e = GroupApplicationResultStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupApplicationResultStatusEnum: %s", s)
	}
}

// GroupApplicationResult - Successful Response - Returns a single Group Application
type GroupApplicationResult struct {
	// Type of application for the group with this carrier
	ApplicationType GroupApplicationResultApplicationTypeEnum `json:"application_type"`
	// An id given by the carrier to identify the group
	CarrierGroupID string `json:"carrier_group_id"`
	// Unique identifier of the associated carrier in Noyo
	CarrierID string `json:"carrier_id"`
	// The date the record was created
	Created int64 `json:"created"`
	// Unique identifier of the associated group in Noyo
	GroupID string `json:"group_id"`
	// Unique identifier of the record in Noyo
	ID string `json:"id"`
	// The date the record was last updated
	Modified int64 `json:"modified"`
	// General platform notes about the group application
	Notes string `json:"notes"`
	// Status of the application for the group
	Status GroupApplicationResultStatusEnum `json:"status"`
	// Additional notes about the application status with the carrier
	StatusNotes string `json:"status_notes"`
	// Current version of the record
	Version string `json:"version"`
}
