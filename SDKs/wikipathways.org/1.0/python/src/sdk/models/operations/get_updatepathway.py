"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetUpdatePathwayFormatEnum(str, Enum):
    JSON = 'json'
    XML = 'xml'
    HTML = 'html'
    DUMP = 'dump'
    JPG = 'jpg'
    PDF = 'pdf'


@dataclasses.dataclass
class GetUpdatePathwayRequest:
    
    auth: str = dataclasses.field(metadata={'query_param': { 'field_name': 'auth', 'style': 'form', 'explode': True }})
    r"""The authentication key"""  
    description: str = dataclasses.field(metadata={'query_param': { 'field_name': 'description', 'style': 'form', 'explode': True }})
    r"""A description of the modifications"""  
    gpml: str = dataclasses.field(metadata={'query_param': { 'field_name': 'gpml', 'style': 'form', 'explode': True }})
    r"""The updated GPML code"""  
    pw_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'pwId', 'style': 'form', 'explode': True }})
    r"""The pathway identifier"""  
    revision: int = dataclasses.field(metadata={'query_param': { 'field_name': 'revision', 'style': 'form', 'explode': True }})
    r"""The revision the GPML code is based on"""  
    username: str = dataclasses.field(metadata={'query_param': { 'field_name': 'username', 'style': 'form', 'explode': True }})
    r"""The username"""  
    format: Optional[GetUpdatePathwayFormatEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetUpdatePathwayResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    