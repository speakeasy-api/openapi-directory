"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProvisioningIssueReasonEnum(str, Enum):
    r"""Output only. Reason for provisioning failures."""
    REASON_UNSPECIFIED = 'REASON_UNSPECIFIED'
    AUTHORIZATION_ISSUE = 'AUTHORIZATION_ISSUE'
    RATE_LIMITED = 'RATE_LIMITED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProvisioningIssue:
    r"""Information about issues with provisioning a Managed Certificate."""
    
    details: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('details'), 'exclude': lambda f: f is None }})
    r"""Output only. Human readable explanation about the issue. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use Reason enum."""  
    reason: Optional[ProvisioningIssueReasonEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""Output only. Reason for provisioning failures."""  
    