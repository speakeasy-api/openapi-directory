"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import locationidset as shared_locationidset
from ..shared import price as shared_price
from ..shared import weight as shared_weight
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Headers:
    r"""A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set."""
    
    locations: Optional[list[shared_locationidset.LocationIDSet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locations'), 'exclude': lambda f: f is None }})
    r"""A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set."""  
    number_of_items: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfItems'), 'exclude': lambda f: f is None }})
    r"""A list of inclusive number of items upper bounds. The last value can be `\\"infinity\\"`. For example `[\\"10\\", \\"50\\", \\"infinity\\"]` represents the headers \\"<= 10 items\\", \\"<= 50 items\\", and \\"> 50 items\\". Must be non-empty. Can only be set if all other fields are not set."""  
    postal_code_group_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postalCodeGroupNames'), 'exclude': lambda f: f is None }})
    r"""A list of postal group names. The last value can be `\\"all other locations\\"`. Example: `[\\"zone 1\\", \\"zone 2\\", \\"all other locations\\"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set."""  
    prices: Optional[list[shared_price.Price]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prices'), 'exclude': lambda f: f is None }})
    r"""A list of inclusive order price upper bounds. The last price's value can be `\\"infinity\\"`. For example `[{\\"value\\": \\"10\\", \\"currency\\": \\"USD\\"}, {\\"value\\": \\"500\\", \\"currency\\": \\"USD\\"}, {\\"value\\": \\"infinity\\", \\"currency\\": \\"USD\\"}]` represents the headers \\"<= $10\\", \\"<= $500\\", and \\"> $500\\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set."""  
    weights: Optional[list[shared_weight.Weight]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weights'), 'exclude': lambda f: f is None }})
    r"""A list of inclusive order weight upper bounds. The last weight's value can be `\\"infinity\\"`. For example `[{\\"value\\": \\"10\\", \\"unit\\": \\"kg\\"}, {\\"value\\": \\"50\\", \\"unit\\": \\"kg\\"}, {\\"value\\": \\"infinity\\", \\"unit\\": \\"kg\\"}]` represents the headers \\"<= 10kg\\", \\"<= 50kg\\", and \\"> 50kg\\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set."""  
    