"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import collectionconfiguration as shared_collectionconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DebugHookConfig:
    r"""Configuration information for the Amazon SageMaker Debugger hook parameters, metric and tensor collections, and storage paths. To learn more about how to configure the <code>DebugHookConfig</code> parameter, see <a href=\\"https://docs.aws.amazon.com/sagemaker/latest/dg/debugger-createtrainingjob-api.html\\">Use the SageMaker and Debugger Configuration API Operations to Create, Update, and Debug Your Training Job</a>."""
    
    s3_output_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3OutputPath') }})  
    collection_configurations: Optional[list[shared_collectionconfiguration.CollectionConfiguration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CollectionConfigurations'), 'exclude': lambda f: f is None }})  
    hook_parameters: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HookParameters'), 'exclude': lambda f: f is None }})  
    local_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalPath'), 'exclude': lambda f: f is None }})  
    