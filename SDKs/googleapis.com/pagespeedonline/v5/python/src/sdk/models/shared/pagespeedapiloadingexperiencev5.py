"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import userpageloadmetricv5 as shared_userpageloadmetricv5
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PagespeedAPILoadingExperienceV5:
    r"""The CrUX loading experience object that contains CrUX data breakdowns."""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The url, pattern or origin which the metrics are on."""  
    initial_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initial_url'), 'exclude': lambda f: f is None }})
    r"""The requested URL, which may differ from the resolved \\"id\\"."""  
    metrics: Optional[dict[str, shared_userpageloadmetricv5.UserPageLoadMetricV5]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics'), 'exclude': lambda f: f is None }})
    r"""The map of ."""  
    origin_fallback: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin_fallback'), 'exclude': lambda f: f is None }})
    r"""True if the result is an origin fallback from a page, false otherwise."""  
    overall_category: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('overall_category'), 'exclude': lambda f: f is None }})
    r"""The human readable speed \\"category\\" of the id."""  
    