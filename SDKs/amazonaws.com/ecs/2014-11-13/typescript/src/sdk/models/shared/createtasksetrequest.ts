/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CapacityProviderStrategyItem } from "./capacityproviderstrategyitem";
import { LaunchTypeEnum } from "./launchtypeenum";
import { LoadBalancer } from "./loadbalancer";
import { NetworkConfiguration } from "./networkconfiguration";
import { Scale } from "./scale";
import { ServiceRegistry } from "./serviceregistry";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateTaskSetRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CapacityProviderStrategyItem })
  @Expose({ name: "capacityProviderStrategy" })
  @Type(() => CapacityProviderStrategyItem)
  capacityProviderStrategy?: CapacityProviderStrategyItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "clientToken" })
  clientToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cluster" })
  cluster: string;

  @SpeakeasyMetadata()
  @Expose({ name: "externalId" })
  externalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "launchType" })
  launchType?: LaunchTypeEnum;

  @SpeakeasyMetadata({ elemType: LoadBalancer })
  @Expose({ name: "loadBalancers" })
  @Type(() => LoadBalancer)
  loadBalancers?: LoadBalancer[];

  @SpeakeasyMetadata()
  @Expose({ name: "networkConfiguration" })
  @Type(() => NetworkConfiguration)
  networkConfiguration?: NetworkConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "platformVersion" })
  platformVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "scale" })
  @Type(() => Scale)
  scale?: Scale;

  @SpeakeasyMetadata()
  @Expose({ name: "service" })
  service: string;

  @SpeakeasyMetadata({ elemType: ServiceRegistry })
  @Expose({ name: "serviceRegistries" })
  @Type(() => ServiceRegistry)
  serviceRegistries?: ServiceRegistry[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "taskDefinition" })
  taskDefinition: string;
}
