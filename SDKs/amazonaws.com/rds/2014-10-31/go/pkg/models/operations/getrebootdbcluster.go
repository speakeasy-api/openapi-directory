// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRebootDBClusterActionEnum
type GETRebootDBClusterActionEnum string

const (
	GETRebootDBClusterActionEnumRebootDbCluster GETRebootDBClusterActionEnum = "RebootDBCluster"
)

func (e *GETRebootDBClusterActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RebootDBCluster":
		*e = GETRebootDBClusterActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRebootDBClusterActionEnum: %s", s)
	}
}

// GETRebootDBClusterVersionEnum
type GETRebootDBClusterVersionEnum string

const (
	GETRebootDBClusterVersionEnumTwoThousandAndFourteen1031 GETRebootDBClusterVersionEnum = "2014-10-31"
)

func (e *GETRebootDBClusterVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETRebootDBClusterVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRebootDBClusterVersionEnum: %s", s)
	}
}

type GETRebootDBClusterRequest struct {
	Action GETRebootDBClusterActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The DB cluster identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must match the identifier of an existing DBCluster.</p> </li> </ul>
	DBClusterIdentifier string                        `queryParam:"style=form,explode=true,name=DBClusterIdentifier"`
	Version             GETRebootDBClusterVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm       *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRebootDBClusterResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
