"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import labelfieldmodification as shared_labelfieldmodification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LabelModification:
    r"""A modification to a label on a file. A LabelModification can be used to apply a label to a file, update an existing label on a file, or remove a label from a file."""
    
    field_modifications: Optional[list[shared_labelfieldmodification.LabelFieldModification]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldModifications'), 'exclude': lambda f: f is None }})
    r"""The list of modifications to this label's fields."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""This is always drive#labelModification."""  
    label_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelId'), 'exclude': lambda f: f is None }})
    r"""The ID of the label to modify."""  
    remove_label: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removeLabel'), 'exclude': lambda f: f is None }})
    r"""If true, the label will be removed from the file."""  
    