// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteExpressionActionEnum
type POSTDeleteExpressionActionEnum string

const (
	POSTDeleteExpressionActionEnumDeleteExpression POSTDeleteExpressionActionEnum = "DeleteExpression"
)

func (e POSTDeleteExpressionActionEnum) ToPointer() *POSTDeleteExpressionActionEnum {
	return &e
}

func (e *POSTDeleteExpressionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteExpression":
		*e = POSTDeleteExpressionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteExpressionActionEnum: %v", v)
	}
}

// POSTDeleteExpressionVersionEnum
type POSTDeleteExpressionVersionEnum string

const (
	POSTDeleteExpressionVersionEnumTwoThousandAndThirteen0101 POSTDeleteExpressionVersionEnum = "2013-01-01"
)

func (e POSTDeleteExpressionVersionEnum) ToPointer() *POSTDeleteExpressionVersionEnum {
	return &e
}

func (e *POSTDeleteExpressionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = POSTDeleteExpressionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteExpressionVersionEnum: %v", v)
	}
}

type POSTDeleteExpressionRequest struct {
	Action            POSTDeleteExpressionActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                          `request:"mediaType=text/xml"`
	Version           POSTDeleteExpressionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteExpressionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
