// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SendSSHPublicKeyXAmzTargetEnum
type SendSSHPublicKeyXAmzTargetEnum string

const (
	SendSSHPublicKeyXAmzTargetEnumAwsec2InstanceConnectServiceSendSSHPublicKey SendSSHPublicKeyXAmzTargetEnum = "AWSEC2InstanceConnectService.SendSSHPublicKey"
)

func (e SendSSHPublicKeyXAmzTargetEnum) ToPointer() *SendSSHPublicKeyXAmzTargetEnum {
	return &e
}

func (e *SendSSHPublicKeyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSEC2InstanceConnectService.SendSSHPublicKey":
		*e = SendSSHPublicKeyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SendSSHPublicKeyXAmzTargetEnum: %v", v)
	}
}

type SendSSHPublicKeyRequest struct {
	SendSSHPublicKeyRequest shared.SendSSHPublicKeyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              SendSSHPublicKeyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SendSSHPublicKeyResponse struct {
	// AuthException
	AuthException interface{}
	ContentType   string
	// EC2InstanceNotFoundException
	Ec2InstanceNotFoundException interface{}
	// EC2InstanceStateInvalidException
	Ec2InstanceStateInvalidException interface{}
	// EC2InstanceUnavailableException
	Ec2InstanceUnavailableException interface{}
	// InvalidArgsException
	InvalidArgsException interface{}
	// Success
	SendSSHPublicKeyResponse *shared.SendSSHPublicKeyResponse
	StatusCode               int
	RawResponse              *http.Response
	// ServiceException
	ServiceException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
