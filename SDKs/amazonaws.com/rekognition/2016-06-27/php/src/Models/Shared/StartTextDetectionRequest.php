<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class StartTextDetectionRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('ClientRequestToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientRequestToken = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Filters')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StartTextDetectionFilters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StartTextDetectionFilters $filters = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('JobTag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jobTag = null;
    
    /**
     * The Amazon Simple Notification Service topic to which Amazon Rekognition publishes the completion status of a video analysis operation. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/api-video.html">Calling Amazon Rekognition Video operations</a>. Note that the Amazon SNS topic must have a topic name that begins with <i>AmazonRekognition</i> if you are using the AmazonRekognitionServiceRole permissions policy to access the topic. For more information, see <a href="https://docs.aws.amazon.com/rekognition/latest/dg/api-video-roles.html#api-video-roles-all-topics">Giving access to multiple Amazon SNS topics</a>.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NotificationChannel $notificationChannel
     */
	#[\JMS\Serializer\Annotation\SerializedName('NotificationChannel')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NotificationChannel')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NotificationChannel $notificationChannel = null;
    
    /**
     * Video file stored in an Amazon S3 bucket. Amazon Rekognition video start operations such as <a>StartLabelDetection</a> use <code>Video</code> to specify a video for analysis. The supported file formats are .mp4, .mov and .avi.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Video $video
     */
	#[\JMS\Serializer\Annotation\SerializedName('Video')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Video')]
    public Video $video;
    
	public function __construct()
	{
		$this->clientRequestToken = null;
		$this->filters = null;
		$this->jobTag = null;
		$this->notificationChannel = null;
		$this->video = new \OpenAPI\OpenAPI\Models\Shared\Video();
	}
}
