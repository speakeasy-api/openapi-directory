"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import containerdefinition as shared_containerdefinition
from ..shared import inferenceexecutionconfig as shared_inferenceexecutionconfig
from ..shared import tag as shared_tag
from ..shared import vpcconfig as shared_vpcconfig
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Model:
    r"""The properties of a model as returned by the <a>Search</a> API."""
    
    containers: Optional[list[shared_containerdefinition.ContainerDefinition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Containers'), 'exclude': lambda f: f is None }})  
    creation_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    enable_network_isolation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnableNetworkIsolation'), 'exclude': lambda f: f is None }})  
    execution_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionRoleArn'), 'exclude': lambda f: f is None }})  
    inference_execution_config: Optional[shared_inferenceexecutionconfig.InferenceExecutionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InferenceExecutionConfig'), 'exclude': lambda f: f is None }})
    r"""Specifies details about how containers in a multi-container endpoint are run."""  
    model_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelArn'), 'exclude': lambda f: f is None }})  
    model_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelName'), 'exclude': lambda f: f is None }})  
    primary_container: Optional[shared_containerdefinition.ContainerDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrimaryContainer'), 'exclude': lambda f: f is None }})
    r"""Describes the container, as part of model definition."""  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    vpc_config: Optional[shared_vpcconfig.VpcConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcConfig'), 'exclude': lambda f: f is None }})
    r"""Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href=\\"https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html\\">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href=\\"https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html\\">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>."""  
    