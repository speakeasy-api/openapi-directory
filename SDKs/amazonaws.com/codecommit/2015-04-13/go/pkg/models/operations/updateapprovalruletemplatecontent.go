// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateApprovalRuleTemplateContentXAmzTargetEnum
type UpdateApprovalRuleTemplateContentXAmzTargetEnum string

const (
	UpdateApprovalRuleTemplateContentXAmzTargetEnumCodeCommit20150413UpdateApprovalRuleTemplateContent UpdateApprovalRuleTemplateContentXAmzTargetEnum = "CodeCommit_20150413.UpdateApprovalRuleTemplateContent"
)

func (e *UpdateApprovalRuleTemplateContentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeCommit_20150413.UpdateApprovalRuleTemplateContent":
		*e = UpdateApprovalRuleTemplateContentXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApprovalRuleTemplateContentXAmzTargetEnum: %s", s)
	}
}

type UpdateApprovalRuleTemplateContentRequest struct {
	UpdateApprovalRuleTemplateContentInput shared.UpdateApprovalRuleTemplateContentInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                          *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                      *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                         *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                               *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                      *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                          *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                      *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                             UpdateApprovalRuleTemplateContentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateApprovalRuleTemplateContentResponse struct {
	// ApprovalRuleTemplateContentRequiredException
	ApprovalRuleTemplateContentRequiredException interface{}
	// ApprovalRuleTemplateDoesNotExistException
	ApprovalRuleTemplateDoesNotExistException interface{}
	// ApprovalRuleTemplateNameRequiredException
	ApprovalRuleTemplateNameRequiredException interface{}
	ContentType                               string
	// InvalidApprovalRuleTemplateContentException
	InvalidApprovalRuleTemplateContentException interface{}
	// InvalidApprovalRuleTemplateNameException
	InvalidApprovalRuleTemplateNameException interface{}
	// InvalidRuleContentSha256Exception
	InvalidRuleContentSha256Exception interface{}
	StatusCode                        int
	RawResponse                       *http.Response
	// Success
	UpdateApprovalRuleTemplateContentOutput *shared.UpdateApprovalRuleTemplateContentOutput
}
