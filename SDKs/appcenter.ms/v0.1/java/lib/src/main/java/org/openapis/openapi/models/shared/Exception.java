/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Exception - a exception
 */
public class Exception {
    /**
     * frames of the excetpion
     */
    @JsonProperty("frames")
    public ExceptionFrames[] frames;

    public Exception withFrames(ExceptionFrames[] frames) {
        this.frames = frames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inner_exceptions")
    public Exception[] innerExceptions;

    public Exception withInnerExceptions(Exception[] innerExceptions) {
        this.innerExceptions = innerExceptions;
        return this;
    }
    
    /**
     * SDK/Platform this thread is beeing generated from
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public ExceptionPlatformEnum platform;

    public Exception withPlatform(ExceptionPlatformEnum platform) {
        this.platform = platform;
        return this;
    }
    
    /**
     * Reason of the exception
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public Exception withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * relevant exception (crashed)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relevant")
    public Boolean relevant;

    public Exception withRelevant(Boolean relevant) {
        this.relevant = relevant;
        return this;
    }
    
    /**
     * Type of the exception (NSSomethingException, NullPointerException)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public Exception withType(String type) {
        this.type = type;
        return this;
    }
    
    public Exception(@JsonProperty("frames") ExceptionFrames[] frames) {
        this.frames = frames;
  }
}
