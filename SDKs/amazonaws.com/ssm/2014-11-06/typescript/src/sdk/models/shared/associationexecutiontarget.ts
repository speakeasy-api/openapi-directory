/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OutputSource } from "./outputsource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Includes information about the specified association execution.
 */
export class AssociationExecutionTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssociationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationVersion" })
  associationVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DetailedStatus" })
  detailedStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionId" })
  executionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastExecutionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastExecutionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputSource" })
  @Type(() => OutputSource)
  outputSource?: OutputSource;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceId" })
  resourceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceType" })
  resourceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;
}
