// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAggregateDiscoveredResourceCountsQueryParams struct {
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=Limit"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// GetAggregateDiscoveredResourceCountsXAmzTargetEnum
type GetAggregateDiscoveredResourceCountsXAmzTargetEnum string

const (
	GetAggregateDiscoveredResourceCountsXAmzTargetEnumStarlingDoveServiceGetAggregateDiscoveredResourceCounts GetAggregateDiscoveredResourceCountsXAmzTargetEnum = "StarlingDoveService.GetAggregateDiscoveredResourceCounts"
)

func (e *GetAggregateDiscoveredResourceCountsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "StarlingDoveService.GetAggregateDiscoveredResourceCounts":
		*e = GetAggregateDiscoveredResourceCountsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAggregateDiscoveredResourceCountsXAmzTargetEnum: %s", s)
	}
}

type GetAggregateDiscoveredResourceCountsHeaders struct {
	XAmzAlgorithm     *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetAggregateDiscoveredResourceCountsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetAggregateDiscoveredResourceCountsRequest struct {
	QueryParams GetAggregateDiscoveredResourceCountsQueryParams
	Headers     GetAggregateDiscoveredResourceCountsHeaders
	Request     shared.GetAggregateDiscoveredResourceCountsRequest `request:"mediaType=application/json"`
}

type GetAggregateDiscoveredResourceCountsResponse struct {
	ContentType string
	// Success
	GetAggregateDiscoveredResourceCountsResponse *shared.GetAggregateDiscoveredResourceCountsResponse
	// InvalidLimitException
	InvalidLimitException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// NoSuchConfigurationAggregatorException
	NoSuchConfigurationAggregatorException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
	// ValidationException
	ValidationException interface{}
}
