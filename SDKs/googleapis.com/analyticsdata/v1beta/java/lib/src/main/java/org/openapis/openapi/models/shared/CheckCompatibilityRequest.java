/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CheckCompatibilityRequest - The request for compatibility information for a report's dimensions and metrics. Check compatibility provides a preview of the compatibility of a report; fields shared with the `runReport` request should be the same values as in your `runReport` request.
 */
public class CheckCompatibilityRequest {
    /**
     * Filters the dimensions and metrics in the response to just this compatibility. Commonly used as `\u201dcompatibilityFilter\u201d: \u201cCOMPATIBLE\u201d` to only return compatible dimensions &amp; metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compatibilityFilter")
    public CheckCompatibilityRequestCompatibilityFilterEnum compatibilityFilter;
    public CheckCompatibilityRequest withCompatibilityFilter(CheckCompatibilityRequestCompatibilityFilterEnum compatibilityFilter) {
        this.compatibilityFilter = compatibilityFilter;
        return this;
    }
    
    /**
     * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensionFilter")
    public FilterExpression dimensionFilter;
    public CheckCompatibilityRequest withDimensionFilter(FilterExpression dimensionFilter) {
        this.dimensionFilter = dimensionFilter;
        return this;
    }
    
    /**
     * The dimensions in this report. `dimensions` should be the same value as in your `runReport` request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensions")
    public Dimension[] dimensions;
    public CheckCompatibilityRequest withDimensions(Dimension[] dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricFilter")
    public FilterExpression metricFilter;
    public CheckCompatibilityRequest withMetricFilter(FilterExpression metricFilter) {
        this.metricFilter = metricFilter;
        return this;
    }
    
    /**
     * The metrics in this report. `metrics` should be the same value as in your `runReport` request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metrics")
    public Metric[] metrics;
    public CheckCompatibilityRequest withMetrics(Metric[] metrics) {
        this.metrics = metrics;
        return this;
    }
    
}
