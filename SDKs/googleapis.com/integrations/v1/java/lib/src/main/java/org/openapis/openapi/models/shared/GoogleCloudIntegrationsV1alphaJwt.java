/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudIntegrationsV1alphaJwt - Represents JSON web token(JWT), which is a compact, URL-safe means of representing claims to be transferred between two parties, enabling the claims to be digitally signed or integrity protected.
 */
public class GoogleCloudIntegrationsV1alphaJwt {
    /**
     * The token calculated by the header, payload and signature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jwt")
    public String jwt;
    public GoogleCloudIntegrationsV1alphaJwt withJwt(String jwt) {
        this.jwt = jwt;
        return this;
    }
    
    /**
     * Identifies which algorithm is used to generate the signature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jwtHeader")
    public String jwtHeader;
    public GoogleCloudIntegrationsV1alphaJwt withJwtHeader(String jwtHeader) {
        this.jwtHeader = jwtHeader;
        return this;
    }
    
    /**
     * Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the standard fields commonly included in tokens. Custom claims are usually also included, depending on the purpose of the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jwtPayload")
    public String jwtPayload;
    public GoogleCloudIntegrationsV1alphaJwt withJwtPayload(String jwtPayload) {
        this.jwtPayload = jwtPayload;
        return this;
    }
    
    /**
     * User's pre-shared secret to sign the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;
    public GoogleCloudIntegrationsV1alphaJwt withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
}
