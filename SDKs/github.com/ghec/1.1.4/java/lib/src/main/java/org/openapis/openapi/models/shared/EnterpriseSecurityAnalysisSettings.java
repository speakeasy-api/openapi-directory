/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EnterpriseSecurityAnalysisSettings - Response
 */
public class EnterpriseSecurityAnalysisSettings {
    /**
     * Whether GitHub advanced security is automatically enabled for new repositories and repositories transferred to
     * this enterprise.
     */
    @JsonProperty("advanced_security_enabled_for_new_repositories")
    public Boolean advancedSecurityEnabledForNewRepositories;
    public EnterpriseSecurityAnalysisSettings withAdvancedSecurityEnabledForNewRepositories(Boolean advancedSecurityEnabledForNewRepositories) {
        this.advancedSecurityEnabledForNewRepositories = advancedSecurityEnabledForNewRepositories;
        return this;
    }
    
    /**
     * Whether Dependabot alerts are automatically enabled for new repositories and repositories transferred to this
     * enterprise.
     */
    @JsonProperty("dependabot_alerts_enabled_for_new_repositories")
    public Boolean dependabotAlertsEnabledForNewRepositories;
    public EnterpriseSecurityAnalysisSettings withDependabotAlertsEnabledForNewRepositories(Boolean dependabotAlertsEnabledForNewRepositories) {
        this.dependabotAlertsEnabledForNewRepositories = dependabotAlertsEnabledForNewRepositories;
        return this;
    }
    
    /**
     * Whether secret scanning is automatically enabled for new repositories and repositories transferred to this
     * enterprise.
     */
    @JsonProperty("secret_scanning_enabled_for_new_repositories")
    public Boolean secretScanningEnabledForNewRepositories;
    public EnterpriseSecurityAnalysisSettings withSecretScanningEnabledForNewRepositories(Boolean secretScanningEnabledForNewRepositories) {
        this.secretScanningEnabledForNewRepositories = secretScanningEnabledForNewRepositories;
        return this;
    }
    
    /**
     * An optional URL string to display to contributors who are blocked from pushing a secret.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret_scanning_push_protection_custom_link")
    public String secretScanningPushProtectionCustomLink;
    public EnterpriseSecurityAnalysisSettings withSecretScanningPushProtectionCustomLink(String secretScanningPushProtectionCustomLink) {
        this.secretScanningPushProtectionCustomLink = secretScanningPushProtectionCustomLink;
        return this;
    }
    
    /**
     * Whether secret scanning push protection is automatically enabled for new repositories and repositories
     * transferred to this enterprise.
     */
    @JsonProperty("secret_scanning_push_protection_enabled_for_new_repositories")
    public Boolean secretScanningPushProtectionEnabledForNewRepositories;
    public EnterpriseSecurityAnalysisSettings withSecretScanningPushProtectionEnabledForNewRepositories(Boolean secretScanningPushProtectionEnabledForNewRepositories) {
        this.secretScanningPushProtectionEnabledForNewRepositories = secretScanningPushProtectionEnabledForNewRepositories;
        return this;
    }
    
}
