"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class UpdateNetworkAppliancePrefixesDelegatedStaticRequestBodyOriginTypeEnum(str, Enum):
    r"""Type of the origin"""
    INDEPENDENT = 'independent'
    INTERNET = 'internet'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkAppliancePrefixesDelegatedStaticRequestBodyOrigin:
    r"""The origin of the prefix"""
    
    interfaces: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interfaces'), 'exclude': lambda f: f is None }})
    r"""Interfaces associated with the prefix"""  
    type: Optional[UpdateNetworkAppliancePrefixesDelegatedStaticRequestBodyOriginTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the origin"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkAppliancePrefixesDelegatedStaticRequestBody:
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A name or description for the prefix"""  
    origin: Optional[UpdateNetworkAppliancePrefixesDelegatedStaticRequestBodyOrigin] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin'), 'exclude': lambda f: f is None }})
    r"""The origin of the prefix"""  
    prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prefix'), 'exclude': lambda f: f is None }})
    r"""A static IPv6 prefix"""  
    

@dataclasses.dataclass
class UpdateNetworkAppliancePrefixesDelegatedStaticRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    static_delegated_prefix_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'staticDelegatedPrefixId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkAppliancePrefixesDelegatedStaticRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkAppliancePrefixesDelegatedStaticResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_appliance_prefixes_delegated_static_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    