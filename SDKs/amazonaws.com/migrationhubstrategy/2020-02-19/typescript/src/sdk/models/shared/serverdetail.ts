/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AntipatternReportStatusEnum } from "./antipatternreportstatusenum";
import { AntipatternSeveritySummary } from "./antipatternseveritysummary";
import { RecommendationSet } from "./recommendationset";
import { RunTimeAssessmentStatusEnum } from "./runtimeassessmentstatusenum";
import { S3Object } from "./s3object";
import { ServerError } from "./servererror";
import { StrategySummary } from "./strategysummary";
import { SystemInfo } from "./systeminfo";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  Detailed information about a server.
 */
export class ServerDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "antipatternReportS3Object" })
  @Type(() => S3Object)
  antipatternReportS3Object?: S3Object;

  @SpeakeasyMetadata()
  @Expose({ name: "antipatternReportStatus" })
  antipatternReportStatus?: AntipatternReportStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "antipatternReportStatusMessage" })
  antipatternReportStatusMessage?: string;

  @SpeakeasyMetadata({ elemType: StrategySummary })
  @Expose({ name: "applicationComponentStrategySummary" })
  @Type(() => StrategySummary)
  applicationComponentStrategySummary?: StrategySummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "dataCollectionStatus" })
  dataCollectionStatus?: RunTimeAssessmentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastAnalyzedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAnalyzedTimestamp?: Date;

  @SpeakeasyMetadata({ elemType: AntipatternSeveritySummary })
  @Expose({ name: "listAntipatternSeveritySummary" })
  @Type(() => AntipatternSeveritySummary)
  listAntipatternSeveritySummary?: AntipatternSeveritySummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendationSet" })
  @Type(() => RecommendationSet)
  recommendationSet?: RecommendationSet;

  @SpeakeasyMetadata()
  @Expose({ name: "serverError" })
  @Type(() => ServerError)
  serverError?: ServerError;

  @SpeakeasyMetadata()
  @Expose({ name: "serverType" })
  serverType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "systemInfo" })
  @Type(() => SystemInfo)
  systemInfo?: SystemInfo;
}
