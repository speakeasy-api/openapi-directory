/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`
 */
export enum ReposListForUserDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * Can be one of `created`, `updated`, `pushed`, `full_name`.
 */
export enum ReposListForUserSortEnum {
  Created = "created",
  Updated = "updated",
  Pushed = "pushed",
  FullName = "full_name",
}

/**
 * Can be one of `all`, `owner`, `member`.
 */
export enum ReposListForUserTypeEnum {
  All = "all",
  Owner = "owner",
  Member = "member",
}

export class ReposListForUserRequest extends SpeakeasyBase {
  /**
   * Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: ReposListForUserDirectionEnum;

  /**
   * Page number of the results to fetch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Results per page (max 100)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Can be one of `created`, `updated`, `pushed`, `full_name`.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: ReposListForUserSortEnum;

  /**
   * Can be one of `all`, `owner`, `member`.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: ReposListForUserTypeEnum;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

export class ReposListForUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata({ elemType: shared.MinimalRepository })
  minimalRepositories?: shared.MinimalRepository[];
}
