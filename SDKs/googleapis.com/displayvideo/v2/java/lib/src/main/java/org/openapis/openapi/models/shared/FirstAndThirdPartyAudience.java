/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FirstAndThirdPartyAudience - Describes a first or third party audience list used for targeting. First party audiences are created via usage of client data. Third party audiences are provided by Third Party data providers and can only be licensed to customers.
 */
public class FirstAndThirdPartyAudience {
    /**
     * Output only. The estimated audience size for the Display network in the past month. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only returned in GET request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeDisplayAudienceSize")
    public String activeDisplayAudienceSize;
    public FirstAndThirdPartyAudience withActiveDisplayAudienceSize(String activeDisplayAudienceSize) {
        this.activeDisplayAudienceSize = activeDisplayAudienceSize;
        return this;
    }
    
    /**
     * The app_id matches with the type of the mobile_device_ids being uploaded. Only applicable to audience_type `CUSTOMER_MATCH_DEVICE_ID`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appId")
    public String appId;
    public FirstAndThirdPartyAudience withAppId(String appId) {
        this.appId = appId;
        return this;
    }
    
    /**
     * Output only. The source of the audience.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceSource")
    public FirstAndThirdPartyAudienceAudienceSourceEnum audienceSource;
    public FirstAndThirdPartyAudience withAudienceSource(FirstAndThirdPartyAudienceAudienceSourceEnum audienceSource) {
        this.audienceSource = audienceSource;
        return this;
    }
    
    /**
     * The type of the audience.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceType")
    public FirstAndThirdPartyAudienceAudienceTypeEnum audienceType;
    public FirstAndThirdPartyAudience withAudienceType(FirstAndThirdPartyAudienceAudienceTypeEnum audienceType) {
        this.audienceType = audienceType;
        return this;
    }
    
    /**
     * Wrapper message for a list of contact information defining Customer Match audience members.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactInfoList")
    public ContactInfoList contactInfoList;
    public FirstAndThirdPartyAudience withContactInfoList(ContactInfoList contactInfoList) {
        this.contactInfoList = contactInfoList;
        return this;
    }
    
    /**
     * The user-provided description of the audience. Only applicable to first party audiences.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public FirstAndThirdPartyAudience withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. The estimated audience size for the Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only returned in GET request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayAudienceSize")
    public String displayAudienceSize;
    public FirstAndThirdPartyAudience withDisplayAudienceSize(String displayAudienceSize) {
        this.displayAudienceSize = displayAudienceSize;
        return this;
    }
    
    /**
     * Output only. The estimated desktop audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayDesktopAudienceSize")
    public String displayDesktopAudienceSize;
    public FirstAndThirdPartyAudience withDisplayDesktopAudienceSize(String displayDesktopAudienceSize) {
        this.displayDesktopAudienceSize = displayDesktopAudienceSize;
        return this;
    }
    
    /**
     * Output only. The estimated mobile app audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayMobileAppAudienceSize")
    public String displayMobileAppAudienceSize;
    public FirstAndThirdPartyAudience withDisplayMobileAppAudienceSize(String displayMobileAppAudienceSize) {
        this.displayMobileAppAudienceSize = displayMobileAppAudienceSize;
        return this;
    }
    
    /**
     * Output only. The estimated mobile web audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayMobileWebAudienceSize")
    public String displayMobileWebAudienceSize;
    public FirstAndThirdPartyAudience withDisplayMobileWebAudienceSize(String displayMobileWebAudienceSize) {
        this.displayMobileWebAudienceSize = displayMobileWebAudienceSize;
        return this;
    }
    
    /**
     * The display name of the first and third party audience.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public FirstAndThirdPartyAudience withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Output only. The unique ID of the first and third party audience. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstAndThirdPartyAudienceId")
    public String firstAndThirdPartyAudienceId;
    public FirstAndThirdPartyAudience withFirstAndThirdPartyAudienceId(String firstAndThirdPartyAudienceId) {
        this.firstAndThirdPartyAudienceId = firstAndThirdPartyAudienceId;
        return this;
    }
    
    /**
     * Whether the audience is a first or third party audience.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstAndThirdPartyAudienceType")
    public FirstAndThirdPartyAudienceFirstAndThirdPartyAudienceTypeEnum firstAndThirdPartyAudienceType;
    public FirstAndThirdPartyAudience withFirstAndThirdPartyAudienceType(FirstAndThirdPartyAudienceFirstAndThirdPartyAudienceTypeEnum firstAndThirdPartyAudienceType) {
        this.firstAndThirdPartyAudienceType = firstAndThirdPartyAudienceType;
        return this;
    }
    
    /**
     * Output only. The estimated audience size for Gmail network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gmailAudienceSize")
    public String gmailAudienceSize;
    public FirstAndThirdPartyAudience withGmailAudienceSize(String gmailAudienceSize) {
        this.gmailAudienceSize = gmailAudienceSize;
        return this;
    }
    
    /**
     * The duration in days that an entry remains in the audience after the qualifying event. If the audience has no expiration, set the value of this field to 10000. Otherwise, the set value must be greater than 0 and less than or equal to 540. Only applicable to first party audiences. This field is required if one of the following audience_type is used: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("membershipDurationDays")
    public String membershipDurationDays;
    public FirstAndThirdPartyAudience withMembershipDurationDays(String membershipDurationDays) {
        this.membershipDurationDays = membershipDurationDays;
        return this;
    }
    
    /**
     * Wrapper message for a list of mobile device IDs defining Customer Match audience members.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobileDeviceIdList")
    public MobileDeviceIdList mobileDeviceIdList;
    public FirstAndThirdPartyAudience withMobileDeviceIdList(MobileDeviceIdList mobileDeviceIdList) {
        this.mobileDeviceIdList = mobileDeviceIdList;
        return this;
    }
    
    /**
     * Output only. The resource name of the first and third party audience.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public FirstAndThirdPartyAudience withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The estimated audience size for YouTube network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("youtubeAudienceSize")
    public String youtubeAudienceSize;
    public FirstAndThirdPartyAudience withYoutubeAudienceSize(String youtubeAudienceSize) {
        this.youtubeAudienceSize = youtubeAudienceSize;
        return this;
    }
    
}
