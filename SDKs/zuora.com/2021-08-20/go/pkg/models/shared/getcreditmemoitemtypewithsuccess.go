// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum - The type of the credit from item.
type GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum string

const (
	GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnumInvoiceItem    GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum = "InvoiceItem"
	GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnumCreditMemoItem GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum = "CreditMemoItem"
)

func (e *GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "InvoiceItem":
		fallthrough
	case "CreditMemoItem":
		*e = GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum: %s", s)
	}
}

// GETCreditMemoItemTypewithSuccessFinanceInformation - Container for the finance information related to the credit memo item.
type GETCreditMemoItemTypewithSuccessFinanceInformation struct {
	// The accounting code for the deferred revenue, such as Monthly Recurring Liability.
	//
	DeferredRevenueAccountingCode *string `json:"deferredRevenueAccountingCode,omitempty"`
	// The type of the deferred revenue accounting code, such as Deferred Revenue.
	//
	DeferredRevenueAccountingCodeType *string `json:"deferredRevenueAccountingCodeType,omitempty"`
	// The accounting code that maps to an on account in your accounting system.
	//
	OnAccountAccountingCode *string `json:"onAccountAccountingCode,omitempty"`
	// The type of the accounting code that maps to an on account in your accounting system.
	//
	OnAccountAccountingCodeType *string `json:"onAccountAccountingCodeType,omitempty"`
	// The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges.
	//
	RecognizedRevenueAccountingCode *string `json:"recognizedRevenueAccountingCode,omitempty"`
	// The type of the recognized revenue accounting code, such as Sales Revenue or Sales Discount.
	//
	RecognizedRevenueAccountingCodeType *string `json:"recognizedRevenueAccountingCodeType,omitempty"`
	// The name of the revenue recognition rule governing the revenue schedule.
	//
	RevenueRecognitionRuleName *string `json:"revenueRecognitionRuleName,omitempty"`
	// Revenue schedule number. The revenue schedule number is always prefixed with "RS", for example, RS-00000001.
	//
	RevenueScheduleNumber *string `json:"revenueScheduleNumber,omitempty"`
}

// GETCreditMemoItemTypewithSuccessSourceItemTypeEnum - The type of the source item.
//
// - If a credit memo is not created from an invoice or a product rate plan charge, the value of this field is `SubscriptionComponent`.
// - If a credit memo is created from an invoice, the value of this field is `InvoiceDetail`.
// - If a credit memo is created from a product rate plan charge, the value of this field is `ProductRatePlanCharge`.
type GETCreditMemoItemTypewithSuccessSourceItemTypeEnum string

const (
	GETCreditMemoItemTypewithSuccessSourceItemTypeEnumSubscriptionComponent GETCreditMemoItemTypewithSuccessSourceItemTypeEnum = "SubscriptionComponent"
	GETCreditMemoItemTypewithSuccessSourceItemTypeEnumInvoiceDetail         GETCreditMemoItemTypewithSuccessSourceItemTypeEnum = "InvoiceDetail"
	GETCreditMemoItemTypewithSuccessSourceItemTypeEnumProductRatePlanCharge GETCreditMemoItemTypewithSuccessSourceItemTypeEnum = "ProductRatePlanCharge"
)

func (e *GETCreditMemoItemTypewithSuccessSourceItemTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SubscriptionComponent":
		fallthrough
	case "InvoiceDetail":
		fallthrough
	case "ProductRatePlanCharge":
		*e = GETCreditMemoItemTypewithSuccessSourceItemTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreditMemoItemTypewithSuccessSourceItemTypeEnum: %s", s)
	}
}

// GETCreditMemoItemTypewithSuccessTaxModeEnum - The tax mode of the credit memo item, indicating whether the amount of the credit memo item includes tax.
type GETCreditMemoItemTypewithSuccessTaxModeEnum string

const (
	GETCreditMemoItemTypewithSuccessTaxModeEnumTaxExclusive GETCreditMemoItemTypewithSuccessTaxModeEnum = "TaxExclusive"
	GETCreditMemoItemTypewithSuccessTaxModeEnumTaxInclusive GETCreditMemoItemTypewithSuccessTaxModeEnum = "TaxInclusive"
)

func (e *GETCreditMemoItemTypewithSuccessTaxModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TaxExclusive":
		fallthrough
	case "TaxInclusive":
		*e = GETCreditMemoItemTypewithSuccessTaxModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreditMemoItemTypewithSuccessTaxModeEnum: %s", s)
	}
}

// GETCreditMemoItemTypewithSuccessTaxationItems - Container for the taxation items of the credit memo item.
//
// **Note**: This field is only available if you set the `zuora-version` request header to `239.0` or later.
type GETCreditMemoItemTypewithSuccessTaxationItems struct {
	// List of taxation items.
	//
	Data []GETCMTaxItemTypeNew `json:"data,omitempty"`
	// URL to retrieve the next page of the response if it exists; otherwise absent.
	//
	NextPage *string `json:"nextPage,omitempty"`
}

// GETCreditMemoItemTypewithSuccess - Container for custom fields of a Credit Memo Item object.
type GETCreditMemoItemTypewithSuccess struct {
	// The amount of the credit memo item. For tax-inclusive credit memo items, the amount indicates the credit memo item amount including tax. For tax-exclusive credit memo items, the amount indicates the credit memo item amount excluding tax.
	//
	Amount *float64 `json:"amount,omitempty"`
	// The credit memo item amount excluding tax.
	//
	AmountWithoutTax *float64 `json:"amountWithoutTax,omitempty"`
	// The applied amount of the credit memo item.
	//
	AppliedAmount *float64 `json:"appliedAmount,omitempty"`
	// The unique ID of the credit memo item that the discount charge is applied to.
	//
	AppliedToItemID *string `json:"appliedToItemId,omitempty"`
	// Comments about the credit memo item.
	//
	// **Note**: This field is not available if you set the `zuora-version` request header to `257.0` or later.
	//
	Comment *string `json:"comment,omitempty"`
	// The ID of the Zuora user who created the credit memo item.
	//
	CreatedByID *string `json:"createdById,omitempty"`
	// The date and time when the credit memo item was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
	//
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// The ID of the credit from item.
	//
	CreditFromItemID *string `json:"creditFromItemId,omitempty"`
	// The type of the credit from item.
	//
	CreditFromItemSource *GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum `json:"creditFromItemSource,omitempty"`
	// Container for the taxation items of the credit memo item.
	//
	// **Note**: This field is not available if you set the `zuora-version` request header to `239.0` or later.
	//
	CreditTaxItems []GETCMTaxItemType `json:"creditTaxItems,omitempty"`
	// The description of the credit memo item.
	//
	// **Note**: This field is only available if you set the `zuora-version` request header to `257.0` or later.
	//
	Description *string `json:"description,omitempty"`
	// Container for the finance information related to the credit memo item.
	//
	FinanceInformation *GETCreditMemoItemTypewithSuccessFinanceInformation `json:"financeInformation,omitempty"`
	// The ID of the credit memo item.
	//
	ID *string `json:"id,omitempty"`
	// The kind of the charge for the credit memo item. Its possible values are `Charge` and `Discount`.
	//
	ProcessingType *string `json:"processingType,omitempty"`
	// The number of units for the credit memo item.
	//
	Quantity *float64 `json:"quantity,omitempty"`
	// The amount of the refund on the credit memo item.
	//
	RefundAmount *float64 `json:"refundAmount,omitempty"`
	// The service end date of the credit memo item.
	//
	ServiceEndDate *types.Date `json:"serviceEndDate,omitempty"`
	// The service start date of the credit memo item.
	//
	ServiceStartDate *types.Date `json:"serviceStartDate,omitempty"`
	// The SKU for the product associated with the credit memo item.
	//
	Sku *string `json:"sku,omitempty"`
	// The name of the SKU.
	//
	SkuName *string `json:"skuName,omitempty"`
	// The ID of the source item.
	//
	// - If the value of the `sourceItemType` field is `SubscriptionComponent` , the value of this field is the ID of the corresponding rate plan charge.
	// - If the value of the `sourceItemType` field is `InvoiceDetail`, the value of this field is the ID of the corresponding invoice item.
	// - If the value of the `sourceItemType` field is `ProductRatePlanCharge` , the value of this field is the ID of the corresponding product rate plan charge.
	//
	SourceItemID *string `json:"sourceItemId,omitempty"`
	// The type of the source item.
	//
	// - If a credit memo is not created from an invoice or a product rate plan charge, the value of this field is `SubscriptionComponent`.
	// - If a credit memo is created from an invoice, the value of this field is `InvoiceDetail`.
	// - If a credit memo is created from a product rate plan charge, the value of this field is `ProductRatePlanCharge`.
	//
	//
	SourceItemType *GETCreditMemoItemTypewithSuccessSourceItemTypeEnum `json:"sourceItemType,omitempty"`
	// The ID of the subscription associated with the credit memo item.
	//
	SubscriptionID *string `json:"subscriptionId,omitempty"`
	// The tax mode of the credit memo item, indicating whether the amount of the credit memo item includes tax.
	//
	TaxMode *GETCreditMemoItemTypewithSuccessTaxModeEnum `json:"taxMode,omitempty"`
	// Container for the taxation items of the credit memo item.
	//
	// **Note**: This field is only available if you set the `zuora-version` request header to `239.0` or later.
	//
	TaxationItems *GETCreditMemoItemTypewithSuccessTaxationItems `json:"taxationItems,omitempty"`
	// The unapplied amount of the credit memo item.
	//
	UnappliedAmount *float64 `json:"unappliedAmount,omitempty"`
	// The units to measure usage.
	//
	UnitOfMeasure *string `json:"unitOfMeasure,omitempty"`
	// The per-unit price of the credit memo item.
	//
	UnitPrice *float64 `json:"unitPrice,omitempty"`
	// The ID of the Zuora user who last updated the credit memo item.
	//
	UpdatedByID *string `json:"updatedById,omitempty"`
	// The date and time when the credit memo item was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
	//
	UpdatedDate *time.Time `json:"updatedDate,omitempty"`
}
