// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConversionsGetStatusEnum - Status of conversion ("deleted"/"active")
type ConversionsGetStatusEnum string

const (
	ConversionsGetStatusEnumDeleted ConversionsGetStatusEnum = "deleted"
	ConversionsGetStatusEnumActive  ConversionsGetStatusEnum = "active"
)

func (e ConversionsGetStatusEnum) ToPointer() *ConversionsGetStatusEnum {
	return &e
}

func (e *ConversionsGetStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deleted":
		fallthrough
	case "active":
		*e = ConversionsGetStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetStatusEnum: %v", v)
	}
}

type ConversionsGetRequest struct {
	// Exclude conversions created before this date (YYYYMMDD)
	CreatedAfter *string `queryParam:"style=form,explode=true,name=createdAfter"`
	// Exclude conversions created after this date (YYYYMMDD)
	CreatedBefore *string `queryParam:"style=form,explode=true,name=createdBefore"`
	// Limit results to this number
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset where to start from
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Status of conversion ("deleted"/"active")
	Status *ConversionsGetStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Filter fields by this pattern
	TextSearch *string `queryParam:"style=form,explode=true,name=textSearch"`
}

type ConversionsGetResponse struct {
	APICoreResponsesEntitiesResponseAPICoreResponsesEntityURISystemInt64 *shared.APICoreResponsesEntitiesResponseAPICoreResponsesEntityURISystemInt64
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
