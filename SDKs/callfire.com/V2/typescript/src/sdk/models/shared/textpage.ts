/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Text } from "./text";
import { Expose, Type } from "class-transformer";

/**
 * Represents a page with results returned by query operation. Check [pagination](https://developers.callfire.com/docs.html#pagination) page for more information about pagination in CallFire API.
 */
export class TextPage extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Text })
  @Expose({ name: "items" })
  @Type(() => Text)
  items?: Text[];

  /**
   * A maximum number of returned items. If items.size() < limit assume no more items
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * An offset from a start of paging source
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  /**
   * Total count of available results. -1 if unknown
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalCount" })
  totalCount?: number;
}
