"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoadBalancerTlsCertificate = void 0;
var utils_1 = require("../../../internal/utils");
var loadbalancertlscertificatedomainvalidationrecord_1 = require("./loadbalancertlscertificatedomainvalidationrecord");
var loadbalancertlscertificatefailurereasonenum_1 = require("./loadbalancertlscertificatefailurereasonenum");
var loadbalancertlscertificaterenewalsummary_1 = require("./loadbalancertlscertificaterenewalsummary");
var loadbalancertlscertificaterevocationreasonenum_1 = require("./loadbalancertlscertificaterevocationreasonenum");
var loadbalancertlscertificatestatusenum_1 = require("./loadbalancertlscertificatestatusenum");
var resourcelocation_1 = require("./resourcelocation");
var resourcetypeenum_1 = require("./resourcetypeenum");
var tag_1 = require("./tag");
var class_transformer_1 = require("class-transformer");
/**
 * <p>Describes a load balancer SSL/TLS certificate.</p> <p>TLS is just an updated, more secure version of Secure Socket Layer (SSL).</p>
 */
var LoadBalancerTlsCertificate = /** @class */ (function (_super) {
    __extends(LoadBalancerTlsCertificate, _super);
    function LoadBalancerTlsCertificate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "arn" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "arn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], LoadBalancerTlsCertificate.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "domainName" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "domainName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: loadbalancertlscertificatedomainvalidationrecord_1.LoadBalancerTlsCertificateDomainValidationRecord,
        }),
        (0, class_transformer_1.Expose)({ name: "domainValidationRecords" }),
        (0, class_transformer_1.Type)(function () { return loadbalancertlscertificatedomainvalidationrecord_1.LoadBalancerTlsCertificateDomainValidationRecord; }),
        __metadata("design:type", Array)
    ], LoadBalancerTlsCertificate.prototype, "domainValidationRecords", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "failureReason" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "failureReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isAttached" }),
        __metadata("design:type", Boolean)
    ], LoadBalancerTlsCertificate.prototype, "isAttached", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issuedAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], LoadBalancerTlsCertificate.prototype, "issuedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "issuer" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "issuer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyAlgorithm" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "keyAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "loadBalancerName" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "loadBalancerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        (0, class_transformer_1.Type)(function () { return resourcelocation_1.ResourceLocation; }),
        __metadata("design:type", resourcelocation_1.ResourceLocation)
    ], LoadBalancerTlsCertificate.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notAfter" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], LoadBalancerTlsCertificate.prototype, "notAfter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notBefore" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], LoadBalancerTlsCertificate.prototype, "notBefore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "renewalSummary" }),
        (0, class_transformer_1.Type)(function () { return loadbalancertlscertificaterenewalsummary_1.LoadBalancerTlsCertificateRenewalSummary; }),
        __metadata("design:type", loadbalancertlscertificaterenewalsummary_1.LoadBalancerTlsCertificateRenewalSummary)
    ], LoadBalancerTlsCertificate.prototype, "renewalSummary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resourceType" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revocationReason" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "revocationReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "revokedAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], LoadBalancerTlsCertificate.prototype, "revokedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serial" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "serial", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "signatureAlgorithm" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "signatureAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subject" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "subject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subjectAlternativeNames" }),
        __metadata("design:type", Array)
    ], LoadBalancerTlsCertificate.prototype, "subjectAlternativeNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportCode" }),
        __metadata("design:type", String)
    ], LoadBalancerTlsCertificate.prototype, "supportCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: tag_1.Tag }),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        (0, class_transformer_1.Type)(function () { return tag_1.Tag; }),
        __metadata("design:type", Array)
    ], LoadBalancerTlsCertificate.prototype, "tags", void 0);
    return LoadBalancerTlsCertificate;
}(utils_1.SpeakeasyBase));
exports.LoadBalancerTlsCertificate = LoadBalancerTlsCertificate;
