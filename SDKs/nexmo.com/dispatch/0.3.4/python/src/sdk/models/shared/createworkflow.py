"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class CreateWorkflowTemplateEnum(str, Enum):
    r"""The template that the Dispatch API will execute. For the initial version of the API the only available value will be failover"""
    FAILOVER = 'failover'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateWorkflow:
    r"""Please note that last message does not have failover attribute inside it. All other messages must contain a failover attribute."""
    
    template: Optional[CreateWorkflowTemplateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('template'), 'exclude': lambda f: f is None }})
    r"""The template that the Dispatch API will execute. For the initial version of the API the only available value will be failover"""  
    workflow: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflow'), 'exclude': lambda f: f is None }})
    r"""Contains a message object that must reflect the current /messages resource. All parameters within the content object reflect the /messages docs."""  
    