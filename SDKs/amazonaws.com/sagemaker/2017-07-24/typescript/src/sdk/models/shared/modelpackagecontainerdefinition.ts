/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ModelInput } from "./modelinput";
import { Expose, Type } from "class-transformer";

/**
 * Describes the Docker container for the model package.
 */
export class ModelPackageContainerDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ContainerHostname" })
  containerHostname?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Environment" })
  environment?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Framework" })
  framework?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FrameworkVersion" })
  frameworkVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Image" })
  image: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImageDigest" })
  imageDigest?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelDataUrl" })
  modelDataUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelInput" })
  @Type(() => ModelInput)
  modelInput?: ModelInput;

  @SpeakeasyMetadata()
  @Expose({ name: "NearestModelName" })
  nearestModelName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId?: string;
}
