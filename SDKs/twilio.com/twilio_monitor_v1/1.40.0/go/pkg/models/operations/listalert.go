// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListAlertServerList = []string{
	"https://monitor.twilio.com",
}

type ListAlertSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type ListAlertQueryParams struct {
	// Only include alerts that occurred on or before this date and time. Specify the date and time in GMT and format as `YYYY-MM-DD` or `YYYY-MM-DDThh:mm:ssZ`. Queries for alerts older than 30 days are not supported.
	EndDate *time.Time `queryParam:"style=form,explode=true,name=EndDate"`
	// Only show alerts for this log-level.  Can be: `error`, `warning`, `notice`, or `debug`.
	LogLevel *string `queryParam:"style=form,explode=true,name=LogLevel"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// Only include alerts that occurred on or after this date and time. Specify the date and time in GMT and format as `YYYY-MM-DD` or `YYYY-MM-DDThh:mm:ssZ`. Queries for alerts older than 30 days are not supported.
	StartDate *time.Time `queryParam:"style=form,explode=true,name=StartDate"`
}

type ListAlertRequest struct {
	QueryParams ListAlertQueryParams
	Security    ListAlertSecurity
	ServerURL   *string
}

type ListAlertListAlertResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListAlertListAlertResponse - OK
type ListAlertListAlertResponse struct {
	Alerts []shared.MonitorV1Alert         `json:"alerts,omitempty"`
	Meta   *ListAlertListAlertResponseMeta `json:"meta,omitempty"`
}

type ListAlertResponse struct {
	ContentType string
	// OK
	ListAlertResponse *ListAlertListAlertResponse
	StatusCode        int
	RawResponse       *http.Response
}
