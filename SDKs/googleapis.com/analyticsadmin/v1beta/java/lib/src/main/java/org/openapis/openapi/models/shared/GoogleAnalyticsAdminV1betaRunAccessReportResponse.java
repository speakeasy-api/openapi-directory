/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleAnalyticsAdminV1betaRunAccessReportResponse - The customized Data Access Record Report response.
 */
public class GoogleAnalyticsAdminV1betaRunAccessReportResponse {
    /**
     * The header for a column in the report that corresponds to a specific dimension. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensionHeaders")
    public GoogleAnalyticsAdminV1betaAccessDimensionHeader[] dimensionHeaders;
    public GoogleAnalyticsAdminV1betaRunAccessReportResponse withDimensionHeaders(GoogleAnalyticsAdminV1betaAccessDimensionHeader[] dimensionHeaders) {
        this.dimensionHeaders = dimensionHeaders;
        return this;
    }
    
    /**
     * The header for a column in the report that corresponds to a specific metric. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricHeaders")
    public GoogleAnalyticsAdminV1betaAccessMetricHeader[] metricHeaders;
    public GoogleAnalyticsAdminV1betaRunAccessReportResponse withMetricHeaders(GoogleAnalyticsAdminV1betaAccessMetricHeader[] metricHeaders) {
        this.metricHeaders = metricHeaders;
        return this;
    }
    
    /**
     * Current state of all quotas for this Analytics property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quota")
    public GoogleAnalyticsAdminV1betaAccessQuota quota;
    public GoogleAnalyticsAdminV1betaRunAccessReportResponse withQuota(GoogleAnalyticsAdminV1betaAccessQuota quota) {
        this.quota = quota;
        return this;
    }
    
    /**
     * The total number of rows in the query result. `rowCount` is independent of the number of rows returned in the response, the `limit` request parameter, and the `offset` request parameter. For example if a query returns 175 rows and includes `limit` of 50 in the API request, the response will contain `rowCount` of 175 but only 50 rows. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rowCount")
    public Integer rowCount;
    public GoogleAnalyticsAdminV1betaRunAccessReportResponse withRowCount(Integer rowCount) {
        this.rowCount = rowCount;
        return this;
    }
    
    /**
     * Rows of dimension value combinations and metric values in the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public GoogleAnalyticsAdminV1betaAccessRow[] rows;
    public GoogleAnalyticsAdminV1betaRunAccessReportResponse withRows(GoogleAnalyticsAdminV1betaAccessRow[] rows) {
        this.rows = rows;
        return this;
    }
    
}
