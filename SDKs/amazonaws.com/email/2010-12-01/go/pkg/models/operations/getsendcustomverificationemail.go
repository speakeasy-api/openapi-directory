// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETSendCustomVerificationEmailActionEnum
type GETSendCustomVerificationEmailActionEnum string

const (
	GETSendCustomVerificationEmailActionEnumSendCustomVerificationEmail GETSendCustomVerificationEmailActionEnum = "SendCustomVerificationEmail"
)

func (e GETSendCustomVerificationEmailActionEnum) ToPointer() *GETSendCustomVerificationEmailActionEnum {
	return &e
}

func (e *GETSendCustomVerificationEmailActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SendCustomVerificationEmail":
		*e = GETSendCustomVerificationEmailActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSendCustomVerificationEmailActionEnum: %v", v)
	}
}

// GETSendCustomVerificationEmailVersionEnum
type GETSendCustomVerificationEmailVersionEnum string

const (
	GETSendCustomVerificationEmailVersionEnumTwoThousandAndTen1201 GETSendCustomVerificationEmailVersionEnum = "2010-12-01"
)

func (e GETSendCustomVerificationEmailVersionEnum) ToPointer() *GETSendCustomVerificationEmailVersionEnum {
	return &e
}

func (e *GETSendCustomVerificationEmailVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETSendCustomVerificationEmailVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETSendCustomVerificationEmailVersionEnum: %v", v)
	}
}

type GETSendCustomVerificationEmailRequest struct {
	Action GETSendCustomVerificationEmailActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Name of a configuration set to use when sending the verification email.
	ConfigurationSetName *string `queryParam:"style=form,explode=true,name=ConfigurationSetName"`
	// The email address to verify.
	EmailAddress string `queryParam:"style=form,explode=true,name=EmailAddress"`
	// The name of the custom verification email template to use when sending the verification email.
	TemplateName      string                                    `queryParam:"style=form,explode=true,name=TemplateName"`
	Version           GETSendCustomVerificationEmailVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETSendCustomVerificationEmailResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
