/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserContext - &lt;p&gt;Provides information about the user context for an Amazon Kendra index.&lt;/p&gt; &lt;p&gt;User context filtering is a kind of personalized search with the benefit of controlling access to documents. For example, not all teams that search the company portal for information should access top-secret company documents, nor are these documents relevant to all users. Only specific users or groups of teams given access to top-secret documents should see these documents in their search results.&lt;/p&gt; &lt;p&gt;You provide one of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;User token&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;User ID, the groups the user belongs to, and any data sources the groups can access.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;If you provide both, an exception is thrown.&lt;/p&gt;
 */
public class UserContext {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataSourceGroups")
    public DataSourceGroup[] dataSourceGroups;

    public UserContext withDataSourceGroups(DataSourceGroup[] dataSourceGroups) {
        this.dataSourceGroups = dataSourceGroups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Groups")
    public String[] groups;

    public UserContext withGroups(String[] groups) {
        this.groups = groups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Token")
    public String token;

    public UserContext withToken(String token) {
        this.token = token;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserId")
    public String userId;

    public UserContext withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public UserContext(){}
}
