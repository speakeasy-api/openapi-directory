// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type CreateEphemerisHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateEphemerisRequestBodyEphemeris - Ephemeris data.
type CreateEphemerisRequestBodyEphemeris struct {
	// Ephemeris data in Orbit Ephemeris Message (OEM) format.
	Oem *shared.OEMEphemeris `json:"oem,omitempty"`
	// Two-line element set (TLE) ephemeris.
	Tle *shared.TLEEphemeris `json:"tle,omitempty"`
}

type CreateEphemerisRequestBody struct {
	// <p>Whether to set the ephemeris status to <code>ENABLED</code> after validation.</p> <p>Setting this to false will set the ephemeris status to <code>DISABLED</code> after validation.</p>
	Enabled *bool `json:"enabled,omitempty"`
	// Ephemeris data.
	Ephemeris *CreateEphemerisRequestBodyEphemeris `json:"ephemeris,omitempty"`
	// An overall expiration time for the ephemeris in UTC, after which it will become <code>EXPIRED</code>.
	ExpirationTime *time.Time `json:"expirationTime,omitempty"`
	// The ARN of a KMS key used to encrypt the ephemeris in Ground Station.
	KmsKeyArn *string `json:"kmsKeyArn,omitempty"`
	// A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.
	Name string `json:"name"`
	// <p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p> <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p> <p>Priority must be 1 or greater</p>
	Priority *int64 `json:"priority,omitempty"`
	// AWS Ground Station satellite ID for this ephemeris.
	SatelliteID string `json:"satelliteId"`
	// Tags assigned to an ephemeris.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateEphemerisRequest struct {
	Headers CreateEphemerisHeaders
	Request CreateEphemerisRequestBody `request:"mediaType=application/json"`
}

type CreateEphemerisResponse struct {
	ContentType string
	// DependencyException
	DependencyException interface{}
	// Success
	EphemerisIDResponse *shared.EphemerisIDResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
