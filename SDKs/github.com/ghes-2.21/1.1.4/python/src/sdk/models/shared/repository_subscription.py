"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RepositorySubscription:
    r"""Repository invitations let you manage who you collaborate with."""
    
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    ignored: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ignored') }})
    r"""Determines if all notifications should be blocked from this repository."""  
    reason: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason') }})  
    repository_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repository_url') }})  
    subscribed: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscribed') }})
    r"""Determines if notifications should be received from this repository."""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})  
    