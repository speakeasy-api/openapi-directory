// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum - The state of the CIDR block.
type DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum string

const (
	DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnumAssociating    DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum = "associating"
	DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnumAssociated     DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum = "associated"
	DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnumDisassociating DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum = "disassociating"
	DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnumDisassociated  DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum = "disassociated"
	DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnumFailing        DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum = "failing"
	DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnumFailed         DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum = "failed"
)

func (e DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum) ToPointer() *DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum {
	return &e
}

func (e *DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		fallthrough
	case "failing":
		fallthrough
	case "failed":
		*e = DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum: %v", v)
	}
}

// DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockState - Information about the state of the CIDR block.
type DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockState struct {
	State         *DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockStateStateEnum
	StatusMessage *string
}

// DisassociateVpcCidrBlockResultCidrBlockAssociation - Information about the IPv4 CIDR block association.
type DisassociateVpcCidrBlockResultCidrBlockAssociation struct {
	AssociationID  *string
	CidrBlock      *string
	CidrBlockState *DisassociateVpcCidrBlockResultCidrBlockAssociationCidrBlockState
}

// DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum - The state of the CIDR block.
type DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum string

const (
	DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnumAssociating    DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum = "associating"
	DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnumAssociated     DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum = "associated"
	DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnumDisassociating DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum = "disassociating"
	DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnumDisassociated  DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum = "disassociated"
	DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnumFailing        DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum = "failing"
	DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnumFailed         DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum = "failed"
)

func (e DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum) ToPointer() *DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum {
	return &e
}

func (e *DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		fallthrough
	case "failing":
		fallthrough
	case "failed":
		*e = DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum: %v", v)
	}
}

// DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockState - Information about the state of the CIDR block.
type DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockState struct {
	State         *DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockStateStateEnum
	StatusMessage *string
}

// DisassociateVpcCidrBlockResultIpv6CidrBlockAssociation - Information about the IPv6 CIDR block association.
type DisassociateVpcCidrBlockResultIpv6CidrBlockAssociation struct {
	AssociationID      *string
	Ipv6CidrBlock      *string
	Ipv6CidrBlockState *DisassociateVpcCidrBlockResultIpv6CidrBlockAssociationIpv6CidrBlockState
	Ipv6Pool           *string
	NetworkBorderGroup *string
}

// DisassociateVpcCidrBlockResult - Success
type DisassociateVpcCidrBlockResult struct {
	CidrBlockAssociation     *DisassociateVpcCidrBlockResultCidrBlockAssociation
	Ipv6CidrBlockAssociation *DisassociateVpcCidrBlockResultIpv6CidrBlockAssociation
	VpcID                    *string
}
