"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sortdirection_enum as shared_sortdirection_enum
from enum import Enum
from typing import Optional

class OpportunitiesSortByEnum(str, Enum):
    r"""The field on which to sort the Opportunities"""
    CREATED_AT = 'created_at'
    UPDATED_AT = 'updated_at'
    TITLE = 'title'
    WIN_PROBABILITY = 'win_probability'
    MONETARY_AMOUNT = 'monetary_amount'
    STATUS = 'status'


@dataclasses.dataclass
class OpportunitiesSort:
    r"""Apply sorting"""
    
    by: Optional[OpportunitiesSortByEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'by' }})
    r"""The field on which to sort the Opportunities"""  
    direction: Optional[shared_sortdirection_enum.SortDirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction' }})
    r"""The direction in which to sort the results"""  
    