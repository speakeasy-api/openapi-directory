/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class Event extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "critic_name" })
  criticName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "event_detail_url" })
  eventDetailUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "event_id" })
  eventId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "event_name" })
  eventName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "event_schedule_id" })
  eventScheduleId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "festival" })
  festival?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "film_rating" })
  filmRating?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "free" })
  free?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "kid_friendly" })
  kidFriendly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_chance" })
  lastChance?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_modified" })
  lastModified?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "long_running_show" })
  longRunningShow?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "previews_and_openings" })
  previewsAndOpenings?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "recur_days" })
  recurDays?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "recurring_start_date" })
  recurringStartDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "times_pick" })
  timesPick?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "web_description" })
  webDescription?: string;
}
