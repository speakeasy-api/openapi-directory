"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instance as shared_instance
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListInstancesResponse:
    r"""ListInstancesResponse is the result of ListInstancesRequest."""
    
    instances: Optional[list[shared_instance.Instance]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instances'), 'exclude': lambda f: f is None }})
    r"""A list of instances in the project for the specified location. If the `{location}` value in the request is \\"-\\", the response contains a list of instances from all locations. If any location is unreachable, the response will only return instances in reachable locations and the \\"unreachable\\" field will be populated with a list of unreachable locations."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""The token you can use to retrieve the next page of results. Not returned if there are no more results in the list."""  
    unreachable: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unreachable'), 'exclude': lambda f: f is None }})
    r"""Locations that could not be reached."""  
    