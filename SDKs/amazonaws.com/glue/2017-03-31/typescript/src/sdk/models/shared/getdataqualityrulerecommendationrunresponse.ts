/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataSource } from "./datasource";
import { TaskStatusTypeEnum } from "./taskstatustypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetDataQualityRuleRecommendationRunResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CompletedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedRulesetName" })
  createdRulesetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataSource" })
  @Type(() => DataSource)
  dataSource?: DataSource;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorString" })
  errorString?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionTime" })
  executionTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfWorkers" })
  numberOfWorkers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RecommendedRuleset" })
  recommendedRuleset?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Role" })
  role?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RunId" })
  runId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: TaskStatusTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Timeout" })
  timeout?: number;
}
