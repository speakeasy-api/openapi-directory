/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionClassEnum } from "./executionclassenum";
import { NotificationProperty } from "./notificationproperty";
import { WorkerTypeEnum } from "./workertypeenum";
import { Expose, Type } from "class-transformer";

export class StartJobRunRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllocatedCapacity" })
  allocatedCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Arguments" })
  arguments?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionClass" })
  executionClass?: ExecutionClassEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "JobName" })
  jobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobRunId" })
  jobRunId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxCapacity" })
  maxCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationProperty" })
  @Type(() => NotificationProperty)
  notificationProperty?: NotificationProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfWorkers" })
  numberOfWorkers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityConfiguration" })
  securityConfiguration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Timeout" })
  timeout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkerType" })
  workerType?: WorkerTypeEnum;
}
