// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LocalizedStringContractLanguageEnum string

const (
	LocalizedStringContractLanguageEnumUnspecified LocalizedStringContractLanguageEnum = "Unspecified"
	LocalizedStringContractLanguageEnumJapanese    LocalizedStringContractLanguageEnum = "Japanese"
	LocalizedStringContractLanguageEnumRomaji      LocalizedStringContractLanguageEnum = "Romaji"
	LocalizedStringContractLanguageEnumEnglish     LocalizedStringContractLanguageEnum = "English"
)

func (e *LocalizedStringContractLanguageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unspecified":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = LocalizedStringContractLanguageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LocalizedStringContractLanguageEnum: %s", s)
	}
}

type LocalizedStringContract struct {
	Language *LocalizedStringContractLanguageEnum `json:"language,omitempty"`
	Value    *string                              `json:"value,omitempty"`
}
