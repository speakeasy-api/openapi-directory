/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ImageOccurrence - Details of the derived image portion of the DockerImage relationship. This image would be produced from a Dockerfile with FROM .
 */
public class ImageOccurrence {
    /**
     * Output only. This contains the base image URL for the derived image occurrence.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseResourceUrl")
    public String baseResourceUrl;
    public ImageOccurrence withBaseResourceUrl(String baseResourceUrl) {
        this.baseResourceUrl = baseResourceUrl;
        return this;
    }
    
    /**
     * Output only. The number of layers by which this image differs from the associated image basis.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distance")
    public Integer distance;
    public ImageOccurrence withDistance(Integer distance) {
        this.distance = distance;
        return this;
    }
    
    /**
     * A set of properties that uniquely identify a given Docker image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public Fingerprint fingerprint;
    public ImageOccurrence withFingerprint(Fingerprint fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * This contains layer-specific metadata, if populated it has length "distance" and is ordered with [distance] being the layer immediately following the base image and [1] being the final layer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("layerInfo")
    public Layer[] layerInfo;
    public ImageOccurrence withLayerInfo(Layer[] layerInfo) {
        this.layerInfo = layerInfo;
        return this;
    }
    
}
