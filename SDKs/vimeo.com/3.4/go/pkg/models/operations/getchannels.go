// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetChannelsDirectionEnum - The sort direction of the results.
type GetChannelsDirectionEnum string

const (
	GetChannelsDirectionEnumAsc  GetChannelsDirectionEnum = "asc"
	GetChannelsDirectionEnumDesc GetChannelsDirectionEnum = "desc"
)

func (e *GetChannelsDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetChannelsDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelsDirectionEnum: %s", s)
	}
}

// GetChannelsFilterEnum - The attribute by which to filter the results.
type GetChannelsFilterEnum string

const (
	GetChannelsFilterEnumFeatured GetChannelsFilterEnum = "featured"
)

func (e *GetChannelsFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "featured":
		*e = GetChannelsFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelsFilterEnum: %s", s)
	}
}

// GetChannelsSortEnum - The way to sort the results.
//
// Option descriptions:
//   - `relevant` - Relevant sorting is available only for search queries.
type GetChannelsSortEnum string

const (
	GetChannelsSortEnumAlphabetical GetChannelsSortEnum = "alphabetical"
	GetChannelsSortEnumDate         GetChannelsSortEnum = "date"
	GetChannelsSortEnumFollowers    GetChannelsSortEnum = "followers"
	GetChannelsSortEnumRelevant     GetChannelsSortEnum = "relevant"
	GetChannelsSortEnumVideos       GetChannelsSortEnum = "videos"
)

func (e *GetChannelsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "followers":
		fallthrough
	case "relevant":
		fallthrough
	case "videos":
		*e = GetChannelsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelsSortEnum: %s", s)
	}
}

type GetChannelsRequest struct {
	// The sort direction of the results.
	Direction *GetChannelsDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetChannelsFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	//
	// Option descriptions:
	//  * `relevant` - Relevant sorting is available only for search queries.
	//
	Sort *GetChannelsSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetChannelsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The channels were returned.
	Channels []shared.Channel
	// The relevant sort has no search query.
	LegacyError *shared.LegacyError
}
