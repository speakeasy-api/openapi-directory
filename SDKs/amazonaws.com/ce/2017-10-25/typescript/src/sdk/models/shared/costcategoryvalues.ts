/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MatchOptionEnum } from "./matchoptionenum";
import { Expose } from "class-transformer";

/**
 * <p>The Cost Categories values used for filtering the costs.</p> <p>If <code>Values</code> and <code>Key</code> are not specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to all Cost Categories. That is, it filters on resources that aren't mapped to any Cost Categories.</p> <p>If <code>Values</code> is provided and <code>Key</code> isn't specified, the <code>ABSENT</code> <code>MatchOption</code> is applied to the Cost Categories <code>Key</code> only. That is, it filters on resources without the given Cost Categories key.</p>
 */
export class CostCategoryValues extends SpeakeasyBase {
  /**
   * The unique name of the Cost Category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MatchOptions" })
  matchOptions?: MatchOptionEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "Values" })
  values?: string[];
}
