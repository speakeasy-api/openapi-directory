"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetWorkspaceSlugOrganizationsOrganizationIDActivitiesSecurity:
    
    bearer: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class GetWorkspaceSlugOrganizationsOrganizationIDActivitiesActivityTypeEnum(str, Enum):
    CONTENT = 'content'
    CUSTOM = 'custom'
    DISCORD = 'discord'
    DISCOURSE = 'discourse'
    GITHUB = 'github'
    SLACK = 'slack'
    TWITTER = 'twitter'

class GetWorkspaceSlugOrganizationsOrganizationIDActivitiesDirectionEnum(str, Enum):
    ASC = 'ASC'
    DESC = 'DESC'

class GetWorkspaceSlugOrganizationsOrganizationIDActivitiesItemsEnum(str, Enum):
    TEN = '10'
    FIFTY = '50'
    ONE_HUNDRED = '100'

class GetWorkspaceSlugOrganizationsOrganizationIDActivitiesSortEnum(str, Enum):
    OCCURRED_AT = 'occurred_at'
    MEMBER = 'member'


@dataclasses.dataclass
class GetWorkspaceSlugOrganizationsOrganizationIDActivitiesRequest:
    
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organization_id', 'style': 'simple', 'explode': False }})  
    workspace_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace_slug', 'style': 'simple', 'explode': False }})  
    activity_type: Optional[GetWorkspaceSlugOrganizationsOrganizationIDActivitiesActivityTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'activity_type', 'style': 'form', 'explode': True }})  
    direction: Optional[GetWorkspaceSlugOrganizationsOrganizationIDActivitiesDirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})  
    items: Optional[GetWorkspaceSlugOrganizationsOrganizationIDActivitiesItemsEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'items', 'style': 'form', 'explode': True }})  
    page: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})  
    sort: Optional[GetWorkspaceSlugOrganizationsOrganizationIDActivitiesSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetWorkspaceSlugOrganizationsOrganizationIDActivitiesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    