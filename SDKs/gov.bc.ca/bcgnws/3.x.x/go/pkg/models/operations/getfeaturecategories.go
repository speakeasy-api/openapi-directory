// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetFeatureCategoriesOutputFormatEnum - The format of the output.
type GetFeatureCategoriesOutputFormatEnum string

const (
	GetFeatureCategoriesOutputFormatEnumJSON GetFeatureCategoriesOutputFormatEnum = "json"
	GetFeatureCategoriesOutputFormatEnumXML  GetFeatureCategoriesOutputFormatEnum = "xml"
)

func (e GetFeatureCategoriesOutputFormatEnum) ToPointer() *GetFeatureCategoriesOutputFormatEnum {
	return &e
}

func (e *GetFeatureCategoriesOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = GetFeatureCategoriesOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFeatureCategoriesOutputFormatEnum: %v", v)
	}
}

type GetFeatureCategoriesRequest struct {
	// The format of the output.
	OutputFormat GetFeatureCategoriesOutputFormatEnum `queryParam:"style=form,explode=true,name=outputFormat"`
}

type GetFeatureCategoriesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
