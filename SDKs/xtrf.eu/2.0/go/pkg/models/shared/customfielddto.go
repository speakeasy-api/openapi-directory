// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CustomFieldDTOTypeEnum string

const (
	CustomFieldDTOTypeEnumText           CustomFieldDTOTypeEnum = "TEXT"
	CustomFieldDTOTypeEnumDate           CustomFieldDTOTypeEnum = "DATE"
	CustomFieldDTOTypeEnumDateAndTime    CustomFieldDTOTypeEnum = "DATE_AND_TIME"
	CustomFieldDTOTypeEnumNumber         CustomFieldDTOTypeEnum = "NUMBER"
	CustomFieldDTOTypeEnumCheckbox       CustomFieldDTOTypeEnum = "CHECKBOX"
	CustomFieldDTOTypeEnumSelection      CustomFieldDTOTypeEnum = "SELECTION"
	CustomFieldDTOTypeEnumMultiSelection CustomFieldDTOTypeEnum = "MULTI_SELECTION"
)

func (e *CustomFieldDTOTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TEXT":
		fallthrough
	case "DATE":
		fallthrough
	case "DATE_AND_TIME":
		fallthrough
	case "NUMBER":
		fallthrough
	case "CHECKBOX":
		fallthrough
	case "SELECTION":
		fallthrough
	case "MULTI_SELECTION":
		*e = CustomFieldDTOTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomFieldDTOTypeEnum: %s", s)
	}
}

// CustomFieldDTO - Success
type CustomFieldDTO struct {
	Key   *string                 `json:"key,omitempty"`
	Name  *string                 `json:"name,omitempty"`
	Type  *CustomFieldDTOTypeEnum `json:"type,omitempty"`
	Value map[string]interface{}  `json:"value,omitempty"`
}
