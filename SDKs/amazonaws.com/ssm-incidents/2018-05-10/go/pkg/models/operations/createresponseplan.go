// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateResponsePlanRequestBodyChatChannel - The Chatbot chat channel used for collaboration during an incident.
type CreateResponsePlanRequestBodyChatChannel struct {
	ChatbotSns []string               `json:"chatbotSns,omitempty"`
	Empty      map[string]interface{} `json:"empty,omitempty"`
}

// CreateResponsePlanRequestBodyIncidentTemplate - Basic details used in creating a response plan. The response plan is then used to create an incident record.
type CreateResponsePlanRequestBodyIncidentTemplate struct {
	DedupeString        *string                         `json:"dedupeString,omitempty"`
	Impact              *int64                          `json:"impact,omitempty"`
	IncidentTags        map[string]string               `json:"incidentTags,omitempty"`
	NotificationTargets []shared.NotificationTargetItem `json:"notificationTargets,omitempty"`
	Summary             *string                         `json:"summary,omitempty"`
	Title               *string                         `json:"title,omitempty"`
}

type CreateResponsePlanRequestBody struct {
	// The actions that the response plan starts at the beginning of an incident.
	Actions []shared.Action `json:"actions,omitempty"`
	// The Chatbot chat channel used for collaboration during an incident.
	ChatChannel *CreateResponsePlanRequestBodyChatChannel `json:"chatChannel,omitempty"`
	// A token ensuring that the operation is called only once with the specified details.
	ClientToken *string `json:"clientToken,omitempty"`
	// The long format of the response plan name. This field can contain spaces.
	DisplayName *string `json:"displayName,omitempty"`
	// The Amazon Resource Name (ARN) for the contacts and escalation plans that the response plan engages during an incident.
	Engagements []string `json:"engagements,omitempty"`
	// Basic details used in creating a response plan. The response plan is then used to create an incident record.
	IncidentTemplate CreateResponsePlanRequestBodyIncidentTemplate `json:"incidentTemplate"`
	// Information about third-party services integrated into the response plan.
	Integrations []shared.Integration `json:"integrations,omitempty"`
	// The short format name of the response plan. Can't include spaces.
	Name string `json:"name"`
	// A list of tags that you are adding to the response plan.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateResponsePlanRequest struct {
	RequestBody       CreateResponsePlanRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateResponsePlanResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateResponsePlanOutput *shared.CreateResponsePlanOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
