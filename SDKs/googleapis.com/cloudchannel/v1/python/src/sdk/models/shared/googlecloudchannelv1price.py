"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googletypemoney as shared_googletypemoney
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudChannelV1Price:
    r"""Represents the price of the Offer."""
    
    base_price: Optional[shared_googletypemoney.GoogleTypeMoney] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('basePrice'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money with its currency type."""  
    discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discount'), 'exclude': lambda f: f is None }})
    r"""Discount percentage, represented as decimal. For example, a 20% discount will be represent as 0.2."""  
    effective_price: Optional[shared_googletypemoney.GoogleTypeMoney] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effectivePrice'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money with its currency type."""  
    external_price_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalPriceUri'), 'exclude': lambda f: f is None }})
    r"""Link to external price list, such as link to Google Voice rate card."""  
    