"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lifecyclepolicypreviewresult as shared_lifecyclepolicypreviewresult
from ..shared import lifecyclepolicypreviewstatus_enum as shared_lifecyclepolicypreviewstatus_enum
from ..shared import lifecyclepolicypreviewsummary as shared_lifecyclepolicypreviewsummary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetLifecyclePolicyPreviewResponse:
    r"""Success"""
    
    lifecycle_policy_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lifecyclePolicyText'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextToken'), 'exclude': lambda f: f is None }})  
    preview_results: Optional[list[shared_lifecyclepolicypreviewresult.LifecyclePolicyPreviewResult]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previewResults'), 'exclude': lambda f: f is None }})  
    registry_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registryId'), 'exclude': lambda f: f is None }})  
    repository_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repositoryName'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_lifecyclepolicypreviewstatus_enum.LifecyclePolicyPreviewStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    summary: Optional[shared_lifecyclepolicypreviewsummary.LifecyclePolicyPreviewSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summary'), 'exclude': lambda f: f is None }})  
    