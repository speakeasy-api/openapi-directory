/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateRecordingServerList = [
  "https://trunking.twilio.com",
] as const;

export class UpdateRecordingSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateRecordingUpdateRecordingRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "form, name=Mode" })
  mode?: shared.RecordingEnumRecordingModeEnum;

  @SpeakeasyMetadata({ data: "form, name=Trim" })
  trim?: shared.RecordingEnumRecordingTrimEnum;
}

export class UpdateRecordingRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateRecordingUpdateRecordingRequest;

  /**
   * The SID of the Trunk that will have its recording settings updated.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=TrunkSid",
  })
  trunkSid: string;
}

export class UpdateRecordingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Accepted
   */
  @SpeakeasyMetadata()
  trunkingV1TrunkRecording?: shared.TrunkingV1TrunkRecording;
}
