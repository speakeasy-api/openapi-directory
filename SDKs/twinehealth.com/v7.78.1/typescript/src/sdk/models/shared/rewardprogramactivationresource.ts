/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class RewardProgramActivationResourceAttributes extends SpeakeasyBase {
  /**
   * Date at which the reward program was activated for the patient. (Must be between the start_at and end_at dates for the reward program)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activated_at" })
  activatedAt: string;

  /**
   * If true, the reward program is currently active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Number of rewards allocated. (Read-only property)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allocated_count" })
  allocatedCount?: number;

  /**
   * Unit of the reward program budget. (Read-only property)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "budget_unit" })
  budgetUnit?: string;

  /**
   * Date at which the reward program was deactivated. (Must be after the activated_at date)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deactivated_at" })
  deactivatedAt?: string;

  /**
   * Number of reward earnings. (Read-only property)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "earned_count" })
  earnedCount?: number;

  /**
   * Date at which the reward program activation expires. (Read-only property set by adding the days_active from the reward program to the activated_at date)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  expiresAt?: string;

  /**
   * If true, the rewards created for a patient for the program can be fulfulled as they are earned. If false, the rewards should only be fulfilled when the program is deactivated. (Read-only property denormalized from the reward program)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fulfill_as_earned" })
  fulfillAsEarned?: boolean;

  /**
   * Total value of reward allocated. (Read-only property)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_allocated_value" })
  totalAllocatedValue?: number;

  /**
   * Total value of reward earnings. (Read-only property)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_earned_value" })
  totalEarnedValue?: number;
}

export class RewardProgramActivationResourceRelationshipsPatientData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class RewardProgramActivationResourceRelationshipsPatient extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => RewardProgramActivationResourceRelationshipsPatientData)
  data?: RewardProgramActivationResourceRelationshipsPatientData;
}

export class RewardProgramActivationResourceRelationshipsRewardProgramData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class RewardProgramActivationResourceRelationshipsRewardProgram extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => RewardProgramActivationResourceRelationshipsRewardProgramData)
  data?: RewardProgramActivationResourceRelationshipsRewardProgramData;
}

export class RewardProgramActivationResourceRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  @Type(() => RewardProgramActivationResourceRelationshipsPatient)
  patient: RewardProgramActivationResourceRelationshipsPatient;

  @SpeakeasyMetadata()
  @Expose({ name: "reward_program" })
  @Type(() => RewardProgramActivationResourceRelationshipsRewardProgram)
  rewardProgram: RewardProgramActivationResourceRelationshipsRewardProgram;
}

export class RewardProgramActivationResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => RewardProgramActivationResourceAttributes)
  attributes?: RewardProgramActivationResourceAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => RewardProgramActivationResourceRelationships)
  relationships?: RewardProgramActivationResourceRelationships;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class RewardProgramActivationResourceAttributesInput extends SpeakeasyBase {
  /**
   * Date at which the reward program was activated for the patient. (Must be between the start_at and end_at dates for the reward program)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activated_at" })
  activatedAt: string;

  /**
   * If true, the reward program is currently active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Date at which the reward program was deactivated. (Must be after the activated_at date)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deactivated_at" })
  deactivatedAt?: string;
}

export class RewardProgramActivationResourceInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => RewardProgramActivationResourceAttributesInput)
  attributes?: RewardProgramActivationResourceAttributesInput;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => RewardProgramActivationResourceRelationships)
  relationships?: RewardProgramActivationResourceRelationships;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
