/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SyslogExportRuleSummary - Summary of the newly added syslog export rule.
 */
public class SyslogExportRuleSummary {
    /**
     * The ID corresponding to the imported certificate used by the syslog server.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificateId")
    public String certificateId;

    public SyslogExportRuleSummary withCertificateId(String certificateId) {
        this.certificateId = certificateId;
        return this;
    }
    
    /**
     * Specifies whether TLS should be used to communicate with the syslog server.
     * 
     */
    @JsonProperty("enableTls")
    public Boolean enableTls;

    public SyslogExportRuleSummary withEnableTls(Boolean enableTls) {
        this.enableTls = enableTls;
        return this;
    }
    
    /**
     * The syslog message classification based on RFC 5424.
     */
    @JsonProperty("facility")
    public SyslogFacilityEnum facility;

    public SyslogExportRuleSummary withFacility(SyslogFacilityEnum facility) {
        this.facility = facility;
        return this;
    }
    
    @JsonProperty("hostname")
    public String hostname;

    public SyslogExportRuleSummary withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * ID corresponding to the syslog export rule.
     */
    @JsonProperty("id")
    public String id;

    public SyslogExportRuleSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("port")
    public Integer port;

    public SyslogExportRuleSummary withPort(Integer port) {
        this.port = port;
        return this;
    }
    
    /**
     * The network protocol to use, either UDP or TCP.
     */
    @JsonProperty("protocol")
    public TransportLayerProtocolEnum protocol;

    public SyslogExportRuleSummary withProtocol(TransportLayerProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * The syslog message severity based on RFC 5424.
     */
    @JsonProperty("severity")
    public SyslogSeverityEnum severity;

    public SyslogExportRuleSummary withSeverity(SyslogSeverityEnum severity) {
        this.severity = severity;
        return this;
    }
    
    public SyslogExportRuleSummary(@JsonProperty("enableTls") Boolean enableTls, @JsonProperty("facility") SyslogFacilityEnum facility, @JsonProperty("hostname") String hostname, @JsonProperty("id") String id, @JsonProperty("port") Integer port, @JsonProperty("protocol") TransportLayerProtocolEnum protocol, @JsonProperty("severity") SyslogSeverityEnum severity) {
        this.enableTls = enableTls;
        this.facility = facility;
        this.hostname = hostname;
        this.id = id;
        this.port = port;
        this.protocol = protocol;
        this.severity = severity;
  }
}
