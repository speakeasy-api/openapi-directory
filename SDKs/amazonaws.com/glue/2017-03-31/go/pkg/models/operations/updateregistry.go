// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateRegistryXAmzTargetEnum
type UpdateRegistryXAmzTargetEnum string

const (
	UpdateRegistryXAmzTargetEnumAwsGlueUpdateRegistry UpdateRegistryXAmzTargetEnum = "AWSGlue.UpdateRegistry"
)

func (e UpdateRegistryXAmzTargetEnum) ToPointer() *UpdateRegistryXAmzTargetEnum {
	return &e
}

func (e *UpdateRegistryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.UpdateRegistry":
		*e = UpdateRegistryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateRegistryXAmzTargetEnum: %v", v)
	}
}

type UpdateRegistryRequest struct {
	UpdateRegistryInput shared.UpdateRegistryInput   `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          UpdateRegistryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateRegistryResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// Success
	UpdateRegistryResponse *shared.UpdateRegistryResponse
}
