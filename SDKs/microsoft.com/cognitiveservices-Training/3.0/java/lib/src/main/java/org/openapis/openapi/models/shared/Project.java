/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Project - Represents a project.
 */
public class Project {
    /**
     * Gets the date this project was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public Project withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * Gets or sets the description of the project.
     */
    @JsonProperty("description")
    public String description;

    public Project withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Gets if the DR mode is on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drModeEnabled")
    public Boolean drModeEnabled;

    public Project withDrModeEnabled(Boolean drModeEnabled) {
        this.drModeEnabled = drModeEnabled;
        return this;
    }
    
    /**
     * Gets the project id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Project withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets the date this project was last modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastModified")
    public OffsetDateTime lastModified;

    public Project withLastModified(OffsetDateTime lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * Gets or sets the name of the project.
     */
    @JsonProperty("name")
    public String name;

    public Project withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Represents settings associated with a project.
     */
    @JsonProperty("settings")
    public ProjectSettings settings;

    public Project withSettings(ProjectSettings settings) {
        this.settings = settings;
        return this;
    }
    
    /**
     * Gets the thumbnail url representing the image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailUri")
    public String thumbnailUri;

    public Project withThumbnailUri(String thumbnailUri) {
        this.thumbnailUri = thumbnailUri;
        return this;
    }
    
    public Project(@JsonProperty("description") String description, @JsonProperty("name") String name, @JsonProperty("settings") ProjectSettings settings) {
        this.description = description;
        this.name = name;
        this.settings = settings;
  }
}
