"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TextEntryTypeEnum(str, Enum):
    r"""Type of the text field."""
    TEXT_TYPE_UNSPECIFIED = 'TEXT_TYPE_UNSPECIFIED'
    PLAIN_TEXT = 'PLAIN_TEXT'
    HTML = 'HTML'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TextEntry:
    r"""Represents a body of text."""
    
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""UTF-8 encoded text."""  
    type: Optional[TextEntryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the text field."""  
    