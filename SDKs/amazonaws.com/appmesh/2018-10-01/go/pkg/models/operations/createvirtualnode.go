// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateVirtualNodePathParams struct {
	// The name of the service mesh in which to create the virtual node.
	MeshName string `pathParam:"style=simple,explode=false,name=meshName"`
}

type CreateVirtualNodeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateVirtualNodeRequestBodySpec - An object representing the specification of a virtual node.
type CreateVirtualNodeRequestBodySpec struct {
	Backends         []string                 `json:"backends,omitempty"`
	Listeners        []shared.Listener        `json:"listeners,omitempty"`
	ServiceDiscovery *shared.ServiceDiscovery `json:"serviceDiscovery,omitempty"`
}

type CreateVirtualNodeRequestBody struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the
	// request. Up to 36 letters, numbers, hyphens, and underscores are allowed.
	ClientToken *string `json:"clientToken,omitempty"`
	// An object representing the specification of a virtual node.
	Spec CreateVirtualNodeRequestBodySpec `json:"spec"`
	// The name to use for the virtual node.
	VirtualNodeName string `json:"virtualNodeName"`
}

type CreateVirtualNodeRequest struct {
	PathParams CreateVirtualNodePathParams
	Headers    CreateVirtualNodeHeaders
	Request    CreateVirtualNodeRequestBody `request:"mediaType=application/json"`
}

type CreateVirtualNodeResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateVirtualNodeOutput *shared.CreateVirtualNodeOutput
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
