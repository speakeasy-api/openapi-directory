/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Solution } from "./solution";
import { Expose, Type } from "class-transformer";

/**
 * Indicates the current status of the job
 */
export enum ResponseStatusEnum {
  WaitingInQueue = "waiting_in_queue",
  Processing = "processing",
  Finished = "finished",
}

/**
 * A response containing the solution
 */
export class Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyrights" })
  copyrights?: string[];

  /**
   * Processing time in ms. If job is still waiting in queue, processing_time is 0
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processing_time" })
  processingTime?: number;

  /**
   * Only available if status field indicates `finished`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "solution" })
  @Type(() => Solution)
  solution?: Solution;

  /**
   * Indicates the current status of the job
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ResponseStatusEnum;

  /**
   * Waiting time in ms
   */
  @SpeakeasyMetadata()
  @Expose({ name: "waiting_time_in_queue" })
  waitingTimeInQueue?: number;
}
