// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PlaceFieldsParameterEnum string

const (
	PlaceFieldsParameterEnumID              PlaceFieldsParameterEnum = "id"
	PlaceFieldsParameterEnumName            PlaceFieldsParameterEnum = "name"
	PlaceFieldsParameterEnumCountryCode     PlaceFieldsParameterEnum = "country_code"
	PlaceFieldsParameterEnumPlaceType       PlaceFieldsParameterEnum = "place_type"
	PlaceFieldsParameterEnumFullName        PlaceFieldsParameterEnum = "full_name"
	PlaceFieldsParameterEnumCountry         PlaceFieldsParameterEnum = "country"
	PlaceFieldsParameterEnumContainedWithin PlaceFieldsParameterEnum = "contained_within"
	PlaceFieldsParameterEnumGeo             PlaceFieldsParameterEnum = "geo"
)

func (e *PlaceFieldsParameterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "id":
		fallthrough
	case "name":
		fallthrough
	case "country_code":
		fallthrough
	case "place_type":
		fallthrough
	case "full_name":
		fallthrough
	case "country":
		fallthrough
	case "contained_within":
		fallthrough
	case "geo":
		*e = PlaceFieldsParameterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlaceFieldsParameterEnum: %s", s)
	}
}
