"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lensreviewsummary as shared_lensreviewsummary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListLensReviewsOutput:
    r"""Output of a list lens reviews call."""
    
    lens_review_summaries: Optional[list[shared_lensreviewsummary.LensReviewSummary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LensReviewSummaries'), 'exclude': lambda f: f is None }})
    r"""List of lens summaries of lens reviews of a workload."""  
    milestone_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MilestoneNumber'), 'exclude': lambda f: f is None }})
    r"""<p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>"""  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})
    r"""The token to use to retrieve the next set of results."""  
    workload_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkloadId'), 'exclude': lambda f: f is None }})
    r"""The ID assigned to the workload. This ID is unique within an Amazon Web Services Region."""  
    