"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDocumentaiV1EvaluationMetrics:
    r"""Evaluation metrics, either in aggregate or about a specific entity."""
    
    f1_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('f1Score'), 'exclude': lambda f: f is None }})
    r"""The calculated f1 score."""  
    false_negatives_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('falseNegativesCount'), 'exclude': lambda f: f is None }})
    r"""The amount of false negatives."""  
    false_positives_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('falsePositivesCount'), 'exclude': lambda f: f is None }})
    r"""The amount of false positives."""  
    ground_truth_document_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groundTruthDocumentCount'), 'exclude': lambda f: f is None }})
    r"""The amount of documents with a ground truth occurrence."""  
    ground_truth_occurrences_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groundTruthOccurrencesCount'), 'exclude': lambda f: f is None }})
    r"""The amount of occurrences in ground truth documents."""  
    precision: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('precision'), 'exclude': lambda f: f is None }})
    r"""The calculated precision."""  
    predicted_document_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedDocumentCount'), 'exclude': lambda f: f is None }})
    r"""The amount of documents with a predicted occurrence."""  
    predicted_occurrences_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedOccurrencesCount'), 'exclude': lambda f: f is None }})
    r"""The amount of occurrences in predicted documents."""  
    recall: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recall'), 'exclude': lambda f: f is None }})
    r"""The calculated recall."""  
    total_documents_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalDocumentsCount'), 'exclude': lambda f: f is None }})
    r"""The amount of documents that had an occurrence of this label."""  
    true_positives_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('truePositivesCount'), 'exclude': lambda f: f is None }})
    r"""The amount of true positives."""  
    