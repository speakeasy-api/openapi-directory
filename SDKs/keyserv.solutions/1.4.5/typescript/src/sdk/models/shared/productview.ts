/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SubscriptionView } from "./subscriptionview";
import { Expose, Transform, Type } from "class-transformer";

export class ProductView extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom" })
  custom?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  @SpeakeasyMetadata({ elemType: SubscriptionView })
  @Expose({ name: "subscriptions" })
  @Type(() => SubscriptionView)
  subscriptions?: SubscriptionView[];

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;
}
