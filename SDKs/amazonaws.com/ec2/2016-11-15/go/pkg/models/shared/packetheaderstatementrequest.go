// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PacketHeaderStatementRequestProtocolsEnum string

const (
	PacketHeaderStatementRequestProtocolsEnumTCP PacketHeaderStatementRequestProtocolsEnum = "tcp"
	PacketHeaderStatementRequestProtocolsEnumUDP PacketHeaderStatementRequestProtocolsEnum = "udp"
)

func (e *PacketHeaderStatementRequestProtocolsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tcp":
		fallthrough
	case "udp":
		*e = PacketHeaderStatementRequestProtocolsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PacketHeaderStatementRequestProtocolsEnum: %s", s)
	}
}

// PacketHeaderStatementRequest - Describes a packet header statement.
type PacketHeaderStatementRequest struct {
	DestinationAddresses   []string
	DestinationPorts       []string
	DestinationPrefixLists []string
	Protocols              []PacketHeaderStatementRequestProtocolsEnum
	SourceAddresses        []string
	SourcePorts            []string
	SourcePrefixLists      []string
}
