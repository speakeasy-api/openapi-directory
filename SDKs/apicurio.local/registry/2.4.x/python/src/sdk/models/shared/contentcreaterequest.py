"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import artifactreference as shared_artifactreference
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContentCreateRequest:
    r"""The content of the artifact being created. This is often, but not always, JSON data
    representing one of the supported artifact types:
    
    * Avro (`AVRO`)
    * Protobuf (`PROTOBUF`)
    * JSON Schema (`JSON`)
    * Kafka Connect (`KCONNECT`)
    * OpenAPI (`OPENAPI`)
    * AsyncAPI (`ASYNCAPI`)
    * GraphQL (`GRAPHQL`)
    * Web Services Description Language (`WSDL`)
    * XML Schema (`XSD`)
    """
    
    content: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content') }})
    r"""Raw content of the artifact or a valid (and accessible) URL where the content can be found."""  
    references: list[shared_artifactreference.ArtifactReference] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('references') }})
    r"""Collection of references to other artifacts."""  
    