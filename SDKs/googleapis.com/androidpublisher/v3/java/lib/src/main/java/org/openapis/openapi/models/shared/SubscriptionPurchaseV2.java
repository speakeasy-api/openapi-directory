/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SubscriptionPurchaseV2 - Indicates the status of a user's subscription purchase.
 */
public class SubscriptionPurchaseV2 {
    /**
     * The acknowledgement state of the subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acknowledgementState")
    public SubscriptionPurchaseV2AcknowledgementStateEnum acknowledgementState;

    public SubscriptionPurchaseV2 withAcknowledgementState(SubscriptionPurchaseV2AcknowledgementStateEnum acknowledgementState) {
        this.acknowledgementState = acknowledgementState;
        return this;
    }
    
    /**
     * Information specific to a subscription in canceled state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canceledStateContext")
    public CanceledStateContext canceledStateContext;

    public SubscriptionPurchaseV2 withCanceledStateContext(CanceledStateContext canceledStateContext) {
        this.canceledStateContext = canceledStateContext;
        return this;
    }
    
    /**
     * User account identifier in the third-party service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalAccountIdentifiers")
    public ExternalAccountIdentifiers externalAccountIdentifiers;

    public SubscriptionPurchaseV2 withExternalAccountIdentifiers(ExternalAccountIdentifiers externalAccountIdentifiers) {
        this.externalAccountIdentifiers = externalAccountIdentifiers;
        return this;
    }
    
    /**
     * This kind represents a SubscriptionPurchaseV2 object in the androidpublisher service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public SubscriptionPurchaseV2 withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The order id of the latest order associated with the purchase of the subscription. For autoRenewing subscription, this is the order id of signup order if it is not renewed yet, or the last recurring order id (success, pending, or declined order). For prepaid subscription, this is the order id associated with the queried purchase token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latestOrderId")
    public String latestOrderId;

    public SubscriptionPurchaseV2 withLatestOrderId(String latestOrderId) {
        this.latestOrderId = latestOrderId;
        return this;
    }
    
    /**
     * Item-level info for a subscription purchase. The items in the same purchase should be either all with AutoRenewingPlan or all with PrepaidPlan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineItems")
    public SubscriptionPurchaseLineItem[] lineItems;

    public SubscriptionPurchaseV2 withLineItems(SubscriptionPurchaseLineItem[] lineItems) {
        this.lineItems = lineItems;
        return this;
    }
    
    /**
     * The purchase token of the old subscription if this subscription is one of the following: * Re-signup of a canceled but non-lapsed subscription * Upgrade/downgrade from a previous subscription. * Convert from prepaid to auto renewing subscription. * Convert from an auto renewing subscription to prepaid. * Topup a prepaid subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedPurchaseToken")
    public String linkedPurchaseToken;

    public SubscriptionPurchaseV2 withLinkedPurchaseToken(String linkedPurchaseToken) {
        this.linkedPurchaseToken = linkedPurchaseToken;
        return this;
    }
    
    /**
     * Information specific to a subscription in paused state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pausedStateContext")
    public PausedStateContext pausedStateContext;

    public SubscriptionPurchaseV2 withPausedStateContext(PausedStateContext pausedStateContext) {
        this.pausedStateContext = pausedStateContext;
        return this;
    }
    
    /**
     * ISO 3166-1 alpha-2 billing country/region code of the user at the time the subscription was granted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionCode")
    public String regionCode;

    public SubscriptionPurchaseV2 withRegionCode(String regionCode) {
        this.regionCode = regionCode;
        return this;
    }
    
    /**
     * Time at which the subscription was granted. Not set for pending subscriptions (subscription was created but awaiting payment during signup).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public SubscriptionPurchaseV2 withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Information associated with purchases made with 'Subscribe with Google'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscribeWithGoogleInfo")
    public SubscribeWithGoogleInfo subscribeWithGoogleInfo;

    public SubscriptionPurchaseV2 withSubscribeWithGoogleInfo(SubscribeWithGoogleInfo subscribeWithGoogleInfo) {
        this.subscribeWithGoogleInfo = subscribeWithGoogleInfo;
        return this;
    }
    
    /**
     * The current state of the subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionState")
    public SubscriptionPurchaseV2SubscriptionStateEnum subscriptionState;

    public SubscriptionPurchaseV2 withSubscriptionState(SubscriptionPurchaseV2SubscriptionStateEnum subscriptionState) {
        this.subscriptionState = subscriptionState;
        return this;
    }
    
    /**
     * Whether this subscription purchase is a test purchase.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testPurchase")
    public java.util.Map<String, Object> testPurchase;

    public SubscriptionPurchaseV2 withTestPurchase(java.util.Map<String, Object> testPurchase) {
        this.testPurchase = testPurchase;
        return this;
    }
    
    public SubscriptionPurchaseV2(){}
}
