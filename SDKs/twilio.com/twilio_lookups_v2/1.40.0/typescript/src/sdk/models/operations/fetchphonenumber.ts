/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const FetchPhoneNumberServerList = [
  "https://lookups.twilio.com",
] as const;

export class FetchPhoneNumberSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class FetchPhoneNumberRequest extends SpeakeasyBase {
  /**
   * User’s country, up to two characters. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AddressCountryCode",
  })
  addressCountryCode?: string;

  /**
   * User’s first address line. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AddressLine1",
  })
  addressLine1?: string;

  /**
   * User’s second address line. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AddressLine2",
  })
  addressLine2?: string;

  /**
   * User’s city. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=City" })
  city?: string;

  /**
   * The [country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) used if the phone number provided is in national format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=CountryCode",
  })
  countryCode?: string;

  /**
   * User’s date of birth, in YYYYMMDD format. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateOfBirth",
  })
  dateOfBirth?: string;

  /**
   * A comma-separated list of fields to return. Possible values are caller_name, sim_swap, call_forwarding, live_activity, line_type_intelligence, identity_match.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Fields",
  })
  fields?: string;

  /**
   * User’s first name. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FirstName",
  })
  firstName?: string;

  /**
   * User’s last name. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=LastName",
  })
  lastName?: string;

  /**
   * User’s national ID, such as SSN or Passport ID. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NationalId",
  })
  nationalId?: string;

  /**
   * The phone number to lookup in E.164 or national format. Default country code is +1 (North America).
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=PhoneNumber",
  })
  phoneNumber: string;

  /**
   * User’s postal zip code. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PostalCode",
  })
  postalCode?: string;

  /**
   * User’s country subdivision, such as state, province, or locality. This query parameter is only used (optionally) for identity_match package requests.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=State" })
  state?: string;
}

export class FetchPhoneNumberResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  lookupsV2PhoneNumber?: shared.LookupsV2PhoneNumber;
}
