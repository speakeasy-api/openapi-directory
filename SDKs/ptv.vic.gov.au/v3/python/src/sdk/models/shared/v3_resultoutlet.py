"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V3ResultOutlet:
    
    outlet_business: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_business'), 'exclude': lambda f: f is None }})
    r"""The business name of the outlet"""  
    outlet_business_hour_fri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_business_hour_fri'), 'exclude': lambda f: f is None }})
    r"""The business hours on Friday"""  
    outlet_business_hour_mon: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_business_hour_mon'), 'exclude': lambda f: f is None }})
    r"""The business hours on Monday"""  
    outlet_business_hour_sat: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_business_hour_sat'), 'exclude': lambda f: f is None }})
    r"""The business hours on Saturday"""  
    outlet_business_hour_sun: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_business_hour_sun'), 'exclude': lambda f: f is None }})
    r"""The business hours on Sunday"""  
    outlet_business_hour_thur: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_business_hour_thur'), 'exclude': lambda f: f is None }})
    r"""The business hours on Thursday"""  
    outlet_business_hour_tue: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_business_hour_tue'), 'exclude': lambda f: f is None }})
    r"""The business hours on Tuesday"""  
    outlet_business_hour_wed: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_business_hour_wed'), 'exclude': lambda f: f is None }})
    r"""The business hours on Wednesday"""  
    outlet_distance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_distance'), 'exclude': lambda f: f is None }})
    r"""Distance of outlet from input location (in metres); returns 0 if no location is input"""  
    outlet_latitude: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_latitude'), 'exclude': lambda f: f is None }})
    r"""Geographic coordinate of latitude at outlet"""  
    outlet_longitude: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_longitude'), 'exclude': lambda f: f is None }})
    r"""Geographic coordinate of longitude at outlet"""  
    outlet_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_name'), 'exclude': lambda f: f is None }})
    r"""The location name of the outlet"""  
    outlet_notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_notes'), 'exclude': lambda f: f is None }})
    r"""Any additional notes for the outlet such as 'Buy pre-loaded myki cards only'. May be null/empty."""  
    outlet_postcode: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_postcode'), 'exclude': lambda f: f is None }})
    r"""The postcode for the outlet"""  
    outlet_slid_spid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_slid_spid'), 'exclude': lambda f: f is None }})
    r"""The SLID / SPID"""  
    outlet_suburb: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outlet_suburb'), 'exclude': lambda f: f is None }})
    r"""The city/municipality the outlet is in"""  
    