"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetDeviceSwitchPortResponse = exports.GetDeviceSwitchPort200ApplicationJSON = exports.GetDeviceSwitchPort200ApplicationJSONUdldEnum = exports.GetDeviceSwitchPort200ApplicationJSONTypeEnum = exports.GetDeviceSwitchPort200ApplicationJSONStpGuardEnum = exports.GetDeviceSwitchPort200ApplicationJSONProfile = exports.GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum = exports.GetDeviceSwitchPortRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetDeviceSwitchPortRequest = /** @class */ (function (_super) {
    __extends(GetDeviceSwitchPortRequest, _super);
    function GetDeviceSwitchPortRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=portId",
        }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPortRequest.prototype, "portId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=serial",
        }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPortRequest.prototype, "serial", void 0);
    return GetDeviceSwitchPortRequest;
}(utils_1.SpeakeasyBase));
exports.GetDeviceSwitchPortRequest = GetDeviceSwitchPortRequest;
/**
 * The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
 */
var GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum;
(function (GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum) {
    GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum["CustomAccessPolicy"] = "Custom access policy";
    GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum["MACAllowList"] = "MAC allow list";
    GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum["Open"] = "Open";
    GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum["StickyMACAllowList"] = "Sticky MAC allow list";
})(GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum = exports.GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum || (exports.GetDeviceSwitchPort200ApplicationJSONAccessPolicyTypeEnum = {}));
/**
 * Profile attributes
 */
var GetDeviceSwitchPort200ApplicationJSONProfile = /** @class */ (function (_super) {
    __extends(GetDeviceSwitchPort200ApplicationJSONProfile, _super);
    function GetDeviceSwitchPort200ApplicationJSONProfile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSONProfile.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSONProfile.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iname" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSONProfile.prototype, "iname", void 0);
    return GetDeviceSwitchPort200ApplicationJSONProfile;
}(utils_1.SpeakeasyBase));
exports.GetDeviceSwitchPort200ApplicationJSONProfile = GetDeviceSwitchPort200ApplicationJSONProfile;
/**
 * The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
 */
var GetDeviceSwitchPort200ApplicationJSONStpGuardEnum;
(function (GetDeviceSwitchPort200ApplicationJSONStpGuardEnum) {
    GetDeviceSwitchPort200ApplicationJSONStpGuardEnum["BpduGuard"] = "bpdu guard";
    GetDeviceSwitchPort200ApplicationJSONStpGuardEnum["Disabled"] = "disabled";
    GetDeviceSwitchPort200ApplicationJSONStpGuardEnum["LoopGuard"] = "loop guard";
    GetDeviceSwitchPort200ApplicationJSONStpGuardEnum["RootGuard"] = "root guard";
})(GetDeviceSwitchPort200ApplicationJSONStpGuardEnum = exports.GetDeviceSwitchPort200ApplicationJSONStpGuardEnum || (exports.GetDeviceSwitchPort200ApplicationJSONStpGuardEnum = {}));
/**
 * The type of the switch port ('trunk' or 'access').
 */
var GetDeviceSwitchPort200ApplicationJSONTypeEnum;
(function (GetDeviceSwitchPort200ApplicationJSONTypeEnum) {
    GetDeviceSwitchPort200ApplicationJSONTypeEnum["Access"] = "access";
    GetDeviceSwitchPort200ApplicationJSONTypeEnum["Trunk"] = "trunk";
})(GetDeviceSwitchPort200ApplicationJSONTypeEnum = exports.GetDeviceSwitchPort200ApplicationJSONTypeEnum || (exports.GetDeviceSwitchPort200ApplicationJSONTypeEnum = {}));
/**
 * The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
 */
var GetDeviceSwitchPort200ApplicationJSONUdldEnum;
(function (GetDeviceSwitchPort200ApplicationJSONUdldEnum) {
    GetDeviceSwitchPort200ApplicationJSONUdldEnum["AlertOnly"] = "Alert only";
    GetDeviceSwitchPort200ApplicationJSONUdldEnum["Enforce"] = "Enforce";
})(GetDeviceSwitchPort200ApplicationJSONUdldEnum = exports.GetDeviceSwitchPort200ApplicationJSONUdldEnum || (exports.GetDeviceSwitchPort200ApplicationJSONUdldEnum = {}));
/**
 * Successful operation
 */
var GetDeviceSwitchPort200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetDeviceSwitchPort200ApplicationJSON, _super);
    function GetDeviceSwitchPort200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyNumber" }),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "accessPolicyNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accessPolicyType" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "accessPolicyType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adaptivePolicyGroupId" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "adaptivePolicyGroupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowedVlans" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "allowedVlans", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "daiTrusted" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "daiTrusted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "flexibleStackingEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "flexibleStackingEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isolationEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "isolationEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkNegotiation" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "linkNegotiation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linkNegotiationCapabilities" }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "linkNegotiationCapabilities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "macAllowList" }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "macAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peerSgtCapable" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "peerSgtCapable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "poeEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "poeEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "portId" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "portId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "portScheduleId" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "portScheduleId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "profile" }),
        (0, class_transformer_1.Type)(function () { return GetDeviceSwitchPort200ApplicationJSONProfile; }),
        __metadata("design:type", GetDeviceSwitchPort200ApplicationJSONProfile)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "profile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rstpEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "rstpEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowList" }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "stickyMacAllowList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stickyMacAllowListLimit" }),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "stickyMacAllowListLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stormControlEnabled" }),
        __metadata("design:type", Boolean)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "stormControlEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stpGuard" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "stpGuard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        __metadata("design:type", Array)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "udld" }),
        __metadata("design:type", String)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "udld", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vlan" }),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "vlan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "voiceVlan" }),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPort200ApplicationJSON.prototype, "voiceVlan", void 0);
    return GetDeviceSwitchPort200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetDeviceSwitchPort200ApplicationJSON = GetDeviceSwitchPort200ApplicationJSON;
var GetDeviceSwitchPortResponse = /** @class */ (function (_super) {
    __extends(GetDeviceSwitchPortResponse, _super);
    function GetDeviceSwitchPortResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetDeviceSwitchPortResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetDeviceSwitchPortResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetDeviceSwitchPortResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetDeviceSwitchPort200ApplicationJSON)
    ], GetDeviceSwitchPortResponse.prototype, "getDeviceSwitchPort200ApplicationJSONObject", void 0);
    return GetDeviceSwitchPortResponse;
}(utils_1.SpeakeasyBase));
exports.GetDeviceSwitchPortResponse = GetDeviceSwitchPortResponse;
