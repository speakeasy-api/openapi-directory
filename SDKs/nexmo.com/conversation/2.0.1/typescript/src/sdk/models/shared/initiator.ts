/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class InitiatorJoined extends SpeakeasyBase {
  /**
   * `true` if the user was invited by an admin JWT. `user_id` and `member_id` will not exist if `true`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSystem" })
  isSystem?: boolean;

  /**
   * Member ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member_id" })
  memberId?: string;

  /**
   * User ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;
}

export class Initiator extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "joined" })
  @Type(() => InitiatorJoined)
  joined?: InitiatorJoined;
}
