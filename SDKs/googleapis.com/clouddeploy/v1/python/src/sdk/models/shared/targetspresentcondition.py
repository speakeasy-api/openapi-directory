"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetsPresentCondition:
    r"""TargetsPresentCondition contains information on any Targets defined in the Delivery Pipeline that do not actually exist."""
    
    missing_targets: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('missingTargets'), 'exclude': lambda f: f is None }})
    r"""The list of Target names that do not exist. For example, projects/{project_id}/locations/{location_name}/targets/{target_name}."""  
    status: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""True if there aren't any missing Targets."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Last time the condition was updated."""  
    