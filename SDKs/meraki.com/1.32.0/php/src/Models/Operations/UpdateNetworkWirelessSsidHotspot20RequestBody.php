<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateNetworkWirelessSsidHotspot20RequestBody
{
    /**
     * An array of domain names
     * 
     * @var ?array<string> $domains
     */
	#[\JMS\Serializer\Annotation\SerializedName('domains')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $domains = null;
    
    /**
     * Whether or not Hotspot 2.0 for this SSID is enabled
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * An array of MCC/MNC pairs
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyMccMncs> $mccMncs
     */
	#[\JMS\Serializer\Annotation\SerializedName('mccMncs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyMccMncs>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $mccMncs = null;
    
    /**
     * An array of NAI realms
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyNaiRealms> $naiRealms
     */
	#[\JMS\Serializer\Annotation\SerializedName('naiRealms')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyNaiRealms>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $naiRealms = null;
    
    /**
     * The network type of this SSID ('Private network', 'Private network with guest access', 'Chargeable public network', 'Free public network', 'Personal device network', 'Emergency services only network', 'Test or experimental', 'Wildcard')
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyNetworkAccessTypeEnum $networkAccessType
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkAccessType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyNetworkAccessTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidHotspot20RequestBodyNetworkAccessTypeEnum $networkAccessType = null;
    
    /**
     * Operator settings for this SSID
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyOperator $operator
     */
	#[\JMS\Serializer\Annotation\SerializedName('operator')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyOperator')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidHotspot20RequestBodyOperator $operator = null;
    
    /**
     * An array of roaming consortium OIs (hexadecimal number 3-5 octets in length)
     * 
     * @var ?array<string> $roamConsortOis
     */
	#[\JMS\Serializer\Annotation\SerializedName('roamConsortOis')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $roamConsortOis = null;
    
    /**
     * Venue settings for this SSID
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyVenue $venue
     */
	#[\JMS\Serializer\Annotation\SerializedName('venue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWirelessSsidHotspot20RequestBodyVenue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateNetworkWirelessSsidHotspot20RequestBodyVenue $venue = null;
    
	public function __construct()
	{
		$this->domains = null;
		$this->enabled = null;
		$this->mccMncs = null;
		$this->naiRealms = null;
		$this->networkAccessType = null;
		$this->operator = null;
		$this->roamConsortOis = null;
		$this->venue = null;
	}
}
