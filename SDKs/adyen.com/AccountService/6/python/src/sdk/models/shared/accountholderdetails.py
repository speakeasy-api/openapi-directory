"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bankaccountdetail as shared_bankaccountdetail
from ..shared import businessdetails as shared_businessdetails
from ..shared import individualdetails as shared_individualdetails
from ..shared import legalarrangementdetail as shared_legalarrangementdetail
from ..shared import payoutmethod as shared_payoutmethod
from ..shared import storedetail as shared_storedetail
from ..shared import viasaddress as shared_viasaddress
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountHolderDetails:
    
    address: Optional[shared_viasaddress.ViasAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    bank_account_details: Optional[list[shared_bankaccountdetail.BankAccountDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankAccountDetails'), 'exclude': lambda f: f is None }})
    r"""Array of bank accounts associated with the account holder. For details about the required `bankAccountDetail` fields, see [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information)."""  
    bank_aggregator_data_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankAggregatorDataReference'), 'exclude': lambda f: f is None }})
    r"""The opaque reference value returned by the Adyen API during bank account login."""  
    business_details: Optional[shared_businessdetails.BusinessDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessDetails'), 'exclude': lambda f: f is None }})  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""The email address of the account holder."""  
    full_phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullPhoneNumber'), 'exclude': lambda f: f is None }})
    r"""The phone number of the account holder provided as a single string. It will be handled as a landline phone.
    **Examples:** \"0031 6 11 22 33 44\", \"+316/1122-3344\", \"(0031) 611223344\" 
    """  
    individual_details: Optional[shared_individualdetails.IndividualDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('individualDetails'), 'exclude': lambda f: f is None }})  
    last_review_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastReviewDate'), 'exclude': lambda f: f is None }})
    r"""Date when you last reviewed the account holder's information, in ISO-8601 YYYY-MM-DD format. For example, **2020-01-31**."""  
    legal_arrangements: Optional[list[shared_legalarrangementdetail.LegalArrangementDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalArrangements'), 'exclude': lambda f: f is None }})
    r"""An array containing information about the account holder's [legal arrangements](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/legal-arrangements)."""  
    merchant_category_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantCategoryCode'), 'exclude': lambda f: f is None }})
    r"""The Merchant Category Code of the account holder.
    > If not specified in the request, this will be derived from the platform account (which is configured by Adyen).
    """  
    metadata: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""A set of key and value pairs for general use by the account holder or merchant.
    The keys do not have specific names and may be used for storing miscellaneous data as desired.
    > The values being stored have a maximum length of eighty (80) characters and will be truncated if necessary.
    > Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.
    """  
    payout_methods: Optional[list[shared_payoutmethod.PayoutMethod]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payoutMethods'), 'exclude': lambda f: f is None }})
    r"""Array of tokenized card details associated with the account holder. For details about how you can use the tokens to pay out, refer to [Pay out to cards](https://docs.adyen.com/marketplaces-and-platforms/classic/payout-to-cards)."""  
    principal_business_address: Optional[shared_viasaddress.ViasAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('principalBusinessAddress'), 'exclude': lambda f: f is None }})  
    store_details: Optional[list[shared_storedetail.StoreDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storeDetails'), 'exclude': lambda f: f is None }})
    r"""Array of stores associated with the account holder. Required when onboarding account holders that have an Adyen [point of sale](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-pos)."""  
    web_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webAddress'), 'exclude': lambda f: f is None }})
    r"""The URL of the website of the account holder."""  
    