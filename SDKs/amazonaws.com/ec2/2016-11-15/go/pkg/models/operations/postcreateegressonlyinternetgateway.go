// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateEgressOnlyInternetGatewayActionEnum
type POSTCreateEgressOnlyInternetGatewayActionEnum string

const (
	POSTCreateEgressOnlyInternetGatewayActionEnumCreateEgressOnlyInternetGateway POSTCreateEgressOnlyInternetGatewayActionEnum = "CreateEgressOnlyInternetGateway"
)

func (e POSTCreateEgressOnlyInternetGatewayActionEnum) ToPointer() *POSTCreateEgressOnlyInternetGatewayActionEnum {
	return &e
}

func (e *POSTCreateEgressOnlyInternetGatewayActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateEgressOnlyInternetGateway":
		*e = POSTCreateEgressOnlyInternetGatewayActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateEgressOnlyInternetGatewayActionEnum: %v", v)
	}
}

// POSTCreateEgressOnlyInternetGatewayVersionEnum
type POSTCreateEgressOnlyInternetGatewayVersionEnum string

const (
	POSTCreateEgressOnlyInternetGatewayVersionEnumTwoThousandAndSixteen1115 POSTCreateEgressOnlyInternetGatewayVersionEnum = "2016-11-15"
)

func (e POSTCreateEgressOnlyInternetGatewayVersionEnum) ToPointer() *POSTCreateEgressOnlyInternetGatewayVersionEnum {
	return &e
}

func (e *POSTCreateEgressOnlyInternetGatewayVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTCreateEgressOnlyInternetGatewayVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateEgressOnlyInternetGatewayVersionEnum: %v", v)
	}
}

type POSTCreateEgressOnlyInternetGatewayRequest struct {
	Action            POSTCreateEgressOnlyInternetGatewayActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                         `request:"mediaType=text/xml"`
	Version           POSTCreateEgressOnlyInternetGatewayVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateEgressOnlyInternetGatewayResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
