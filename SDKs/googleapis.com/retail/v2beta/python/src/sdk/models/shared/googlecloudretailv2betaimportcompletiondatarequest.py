"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudretailv2betacompletiondatainputconfig as shared_googlecloudretailv2betacompletiondatainputconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRetailV2betaImportCompletionDataRequest:
    r"""Request message for ImportCompletionData methods."""
    
    input_config: Optional[shared_googlecloudretailv2betacompletiondatainputconfig.GoogleCloudRetailV2betaCompletionDataInputConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputConfig'), 'exclude': lambda f: f is None }})
    r"""The input config source for completion data."""  
    notification_pubsub_topic: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notificationPubsubTopic'), 'exclude': lambda f: f is None }})
    r"""Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`."""  
    