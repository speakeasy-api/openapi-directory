/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StudioV1FlowEngagementEngagementContext - OK
 */
public class StudioV1FlowEngagementEngagementContext {
    /**
     * The SID of the Account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public StudioV1FlowEngagementEngagementContext withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * As your flow executes, we save the state in what's called the Flow Context. Any data in the flow context can be accessed by your widgets as variables, either in configuration fields or in text areas as variable substitution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public Object context;
    public StudioV1FlowEngagementEngagementContext withContext(Object context) {
        this.context = context;
        return this;
    }
    
    /**
     * The SID of the Engagement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("engagement_sid")
    public String engagementSid;
    public StudioV1FlowEngagementEngagementContext withEngagementSid(String engagementSid) {
        this.engagementSid = engagementSid;
        return this;
    }
    
    /**
     * The SID of the Flow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flow_sid")
    public String flowSid;
    public StudioV1FlowEngagementEngagementContext withFlowSid(String flowSid) {
        this.flowSid = flowSid;
        return this;
    }
    
    /**
     * The URL of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public StudioV1FlowEngagementEngagementContext withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
