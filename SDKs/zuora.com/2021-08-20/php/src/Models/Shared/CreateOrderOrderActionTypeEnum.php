<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Type of order action.
 * 
 * 
 * Unless the type of order action is `RenewSubscription`, you must use the corresponding field to provide information about the order action. For example, if the type of order action is `AddProduct`, you must set the `addProduct` field.
 * 
 * Zuora returns an error if you set a field that corresponds to a different type of order action. For example, if the type of order action is `AddProduct`, Zuora returns an error if you set the `updateProduct` field.
 * 
 * A [pending order](https://knowledgecenter.zuora.com/BC_Subscription_Management/Orders/Pending_Order_and_Subscription) supports the following order actions:
 *  * CreateSubscription
 *  * AddProduct
 *  * UpdateProduct
 *  * RemoveProduct
 *  * RenewSubscription
 *  * TermsAndConditions
 * 
 * However, pending orders created through all order actions except for "Create new subscription":
 *  * Do not impact the subscription status.
 *  * Are in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). 
 * 
 * A pending order is created in either of the following conditions:
 *  * [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the service activation date is not set in your "Create an order" call.
 *  * [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the customer acceptance date is not set in your "Create an order" call.
 *  * When a charge in the subscription has its `triggerEvent` field set as `SpecificDate` and the `specificTriggerDate` field is not set in your "Create an order" API call.
 * 
 */
enum CreateOrderOrderActionTypeEnum: string
{
    case CREATE_SUBSCRIPTION = 'CreateSubscription';
    case TERMS_AND_CONDITIONS = 'TermsAndConditions';
    case ADD_PRODUCT = 'AddProduct';
    case UPDATE_PRODUCT = 'UpdateProduct';
    case REMOVE_PRODUCT = 'RemoveProduct';
    case RENEW_SUBSCRIPTION = 'RenewSubscription';
    case CANCEL_SUBSCRIPTION = 'CancelSubscription';
    case OWNER_TRANSFER = 'OwnerTransfer';
    case SUSPEND = 'Suspend';
    case RESUME = 'Resume';
}
