/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { License } from "./license";
import { Location } from "./location";
import { Version } from "./version";
import { Expose, Type } from "class-transformer";

/**
 * Output only. The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.
 */
export enum PackageOccurrenceArchitectureEnum {
  ArchitectureUnspecified = "ARCHITECTURE_UNSPECIFIED",
  X86 = "X86",
  X64 = "X64",
}

/**
 * Details on how a particular software package was installed on a system.
 */
export class PackageOccurrence extends SpeakeasyBase {
  /**
   * Output only. The CPU architecture for which packages in this distribution channel were built. Architecture will be blank for language packages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "architecture" })
  architecture?: PackageOccurrenceArchitectureEnum;

  /**
   * Output only. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/) denoting the package manager version distributing a package. The cpe_uri will be blank for language packages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cpeUri" })
  cpeUri?: string;

  /**
   * License information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "license" })
  @Type(() => License)
  license?: License;

  /**
   * All of the places within the filesystem versions of this package have been found.
   */
  @SpeakeasyMetadata({ elemType: Location })
  @Expose({ name: "location" })
  @Type(() => Location)
  location?: Location[];

  /**
   * Required. Output only. The name of the installed package.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "packageType" })
  packageType?: string;

  /**
   * Version contains structured information about the version of a package.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  @Type(() => Version)
  version?: Version;
}
