"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timeduration as shared_timeduration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReturnPolicyDetails:
    r"""This container defines the category policies that relate to domestic and international return policies (the return shipping is made via a domestic or an international shipping service, respectively)."""
    
    policy_description_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policyDescriptionEnabled'), 'exclude': lambda f: f is None }})
    r"""If set to <code>true</code>, this flag indicates you can supply a detailed return policy description within your return policy (for example, by populating the <b>returnInstructions</b> field in the Account API's <b>createReturnPolicy</b>). User-supplied return policy details are allowed only in the DE, ES, FR, and IT marketplaces."""  
    refund_methods: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refundMethods'), 'exclude': lambda f: f is None }})
    r"""A list of refund methods allowed for the associated category."""  
    return_methods: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnMethods'), 'exclude': lambda f: f is None }})
    r"""A list of return methods allowed for the associated category."""  
    return_periods: Optional[list[shared_timeduration.TimeDuration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnPeriods'), 'exclude': lambda f: f is None }})
    r"""A list of return periods allowed for the associated category.  <br><br>Note that different APIs require you to enter the return period in different ways. For example, the Account API uses the complex <b>TimeDuration</b> type, which takes two values (a <b>unit</b> and a <b>value</b>), whereas the Trading API takes a single value (such as <code>Days_30</code>)."""  
    returns_acceptance_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnsAcceptanceEnabled'), 'exclude': lambda f: f is None }})
    r"""If set to <code>true</code>, this flag indicates the seller can configure how they handle domestic returns."""  
    return_shipping_cost_payers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnShippingCostPayers'), 'exclude': lambda f: f is None }})
    r"""A list of allowed values for who pays for the return shipping cost.  <br><br>Note that for SNAD returns, the seller is always responsible for the return shipping cost."""  
    