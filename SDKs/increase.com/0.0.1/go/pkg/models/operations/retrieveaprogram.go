// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveAProgramRequest struct {
	ProgramID string `pathParam:"style=simple,explode=false,name=program_id"`
}

type RetrieveAProgramDefaultApplicationJSON13StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveAProgramDefaultApplicationJSON13StatusEnum = 429
)

func (e RetrieveAProgramDefaultApplicationJSON13StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = RetrieveAProgramDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON13TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveAProgramDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e RetrieveAProgramDefaultApplicationJSON13TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = RetrieveAProgramDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON13 struct {
	Detail     string                                             `json:"detail"`
	RetryAfter *int64                                             `json:"retry_after,omitempty"`
	Status     RetrieveAProgramDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                             `json:"title"`
	Type       RetrieveAProgramDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON12StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveAProgramDefaultApplicationJSON12StatusEnum = 403
)

func (e RetrieveAProgramDefaultApplicationJSON12StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAProgramDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON12TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveAProgramDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e RetrieveAProgramDefaultApplicationJSON12TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = RetrieveAProgramDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON12 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON11StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveAProgramDefaultApplicationJSON11StatusEnum = 404
)

func (e RetrieveAProgramDefaultApplicationJSON11StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAProgramDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON11TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveAProgramDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e RetrieveAProgramDefaultApplicationJSON11TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = RetrieveAProgramDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON11 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON10StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON10StatusEnumFourHundred RetrieveAProgramDefaultApplicationJSON10StatusEnum = 400
)

func (e RetrieveAProgramDefaultApplicationJSON10StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAProgramDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON10TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveAProgramDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e RetrieveAProgramDefaultApplicationJSON10TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = RetrieveAProgramDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON10 struct {
	Detail string                                             `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON9StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON9StatusEnumFourHundred RetrieveAProgramDefaultApplicationJSON9StatusEnum = 400
)

func (e RetrieveAProgramDefaultApplicationJSON9StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAProgramDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON9TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveAProgramDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e RetrieveAProgramDefaultApplicationJSON9TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = RetrieveAProgramDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                          `json:"errors"`
	Status RetrieveAProgramDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON8StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveAProgramDefaultApplicationJSON8StatusEnum = 409
)

func (e RetrieveAProgramDefaultApplicationJSON8StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAProgramDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON8TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveAProgramDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e RetrieveAProgramDefaultApplicationJSON8TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = RetrieveAProgramDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON8 struct {
	Detail string                                            `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON7StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveAProgramDefaultApplicationJSON7StatusEnum = 401
)

func (e RetrieveAProgramDefaultApplicationJSON7StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = RetrieveAProgramDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON7TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveAProgramDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e RetrieveAProgramDefaultApplicationJSON7TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = RetrieveAProgramDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON7 struct {
	Detail string                                            `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON6StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON6StatusEnumFiveHundred RetrieveAProgramDefaultApplicationJSON6StatusEnum = 500
)

func (e RetrieveAProgramDefaultApplicationJSON6StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = RetrieveAProgramDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON6TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON6TypeEnumInternalServerError RetrieveAProgramDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e RetrieveAProgramDefaultApplicationJSON6TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = RetrieveAProgramDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON6 struct {
	Detail string                                            `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON5StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveAProgramDefaultApplicationJSON5StatusEnum = 403
)

func (e RetrieveAProgramDefaultApplicationJSON5StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAProgramDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON5TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveAProgramDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e RetrieveAProgramDefaultApplicationJSON5TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = RetrieveAProgramDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON5 struct {
	Detail string                                            `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON4StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveAProgramDefaultApplicationJSON4StatusEnum = 422
)

func (e RetrieveAProgramDefaultApplicationJSON4StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = RetrieveAProgramDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON4TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveAProgramDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e RetrieveAProgramDefaultApplicationJSON4TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = RetrieveAProgramDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON4 struct {
	Detail string                                            `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON3StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveAProgramDefaultApplicationJSON3StatusEnum = 409
)

func (e RetrieveAProgramDefaultApplicationJSON3StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAProgramDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON3TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveAProgramDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e RetrieveAProgramDefaultApplicationJSON3TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = RetrieveAProgramDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON3 struct {
	Detail string                                            `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON2StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveAProgramDefaultApplicationJSON2StatusEnum = 403
)

func (e RetrieveAProgramDefaultApplicationJSON2StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAProgramDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON2TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveAProgramDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e RetrieveAProgramDefaultApplicationJSON2TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = RetrieveAProgramDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON2 struct {
	Detail string                                            `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveAProgramDefaultApplicationJSON1StatusEnum int64

const (
	RetrieveAProgramDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveAProgramDefaultApplicationJSON1StatusEnum = 404
)

func (e RetrieveAProgramDefaultApplicationJSON1StatusEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAProgramDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON1TypeEnum string

const (
	RetrieveAProgramDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveAProgramDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e RetrieveAProgramDefaultApplicationJSON1TypeEnum) ToPointer() *RetrieveAProgramDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *RetrieveAProgramDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = RetrieveAProgramDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAProgramDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type RetrieveAProgramDefaultApplicationJSON1 struct {
	Detail string                                            `json:"detail"`
	Status RetrieveAProgramDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   RetrieveAProgramDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveAProgramResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Program
	Program *shared.Program
}
