"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class PostV1VerificationSendFormatEnum(str, Enum):
    r"""Returns the API response in json (default) or xml format."""
    JSON = 'json'
    XML = 'xml'


@dataclasses.dataclass
class PostV1VerificationSendRequest:
    
    key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""FraudLabs Pro API key."""  
    tel: str = dataclasses.field(metadata={'query_param': { 'field_name': 'tel', 'style': 'form', 'explode': True }})
    r"""The recipient mobile phone number in E164 format which is a plus followed by just numbers with no spaces or parentheses."""  
    country_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'country_code', 'style': 'form', 'explode': True }})
    r"""ISO 3166 country code for the recipient mobile phone number. If parameter is supplied, then some basic telephone number validation is done."""  
    format: Optional[PostV1VerificationSendFormatEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""Returns the API response in json (default) or xml format."""  
    mesg: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'mesg', 'style': 'form', 'explode': True }})
    r"""The message template for the SMS. Add <otp> as placeholder for the actual OTP to be generated. Max length is 140 characters."""  
    

@dataclasses.dataclass
class PostV1VerificationSendResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_v1_verification_send_200_application_json_string: Optional[str] = dataclasses.field(default=None)
    r"""send verification response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    