// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VolumeBackupFormatEnum - Output only. The format used for the volume backup.
type VolumeBackupFormatEnum string

const (
	VolumeBackupFormatEnumVolumeBackupFormatUnspecified VolumeBackupFormatEnum = "VOLUME_BACKUP_FORMAT_UNSPECIFIED"
	VolumeBackupFormatEnumGcePersistentDisk             VolumeBackupFormatEnum = "GCE_PERSISTENT_DISK"
)

func (e VolumeBackupFormatEnum) ToPointer() *VolumeBackupFormatEnum {
	return &e
}

func (e *VolumeBackupFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VOLUME_BACKUP_FORMAT_UNSPECIFIED":
		fallthrough
	case "GCE_PERSISTENT_DISK":
		*e = VolumeBackupFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VolumeBackupFormatEnum: %v", v)
	}
}

// VolumeBackupStateEnum - Output only. The current state of this VolumeBackup.
type VolumeBackupStateEnum string

const (
	VolumeBackupStateEnumStateUnspecified VolumeBackupStateEnum = "STATE_UNSPECIFIED"
	VolumeBackupStateEnumCreating         VolumeBackupStateEnum = "CREATING"
	VolumeBackupStateEnumSnapshotting     VolumeBackupStateEnum = "SNAPSHOTTING"
	VolumeBackupStateEnumUploading        VolumeBackupStateEnum = "UPLOADING"
	VolumeBackupStateEnumSucceeded        VolumeBackupStateEnum = "SUCCEEDED"
	VolumeBackupStateEnumFailed           VolumeBackupStateEnum = "FAILED"
	VolumeBackupStateEnumDeleting         VolumeBackupStateEnum = "DELETING"
)

func (e VolumeBackupStateEnum) ToPointer() *VolumeBackupStateEnum {
	return &e
}

func (e *VolumeBackupStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "SNAPSHOTTING":
		fallthrough
	case "UPLOADING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		*e = VolumeBackupStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VolumeBackupStateEnum: %v", v)
	}
}

// VolumeBackup - Represents the backup of a specific persistent volume as a component of a Backup - both the record of the operation and a pointer to the underlying storage-specific artifacts. Next id: 14
type VolumeBackup struct {
	// Output only. The timestamp when the associated underlying volume backup operation completed.
	CompleteTime *string `json:"completeTime,omitempty"`
	// Output only. The timestamp when this VolumeBackup resource was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The minimum size of the disk to which this VolumeBackup can be restored.
	DiskSizeBytes *string `json:"diskSizeBytes,omitempty"`
	// Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume backup from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume backup updates in order to avoid race conditions.
	Etag *string `json:"etag,omitempty"`
	// Output only. The format used for the volume backup.
	Format *VolumeBackupFormatEnum `json:"format,omitempty"`
	// Output only. The full name of the VolumeBackup resource. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.
	Name *string `json:"name,omitempty"`
	// A reference to a namespaced resource in Kubernetes.
	SourcePvc *NamespacedName `json:"sourcePvc,omitempty"`
	// Output only. The current state of this VolumeBackup.
	State *VolumeBackupStateEnum `json:"state,omitempty"`
	// Output only. A human readable message explaining why the VolumeBackup is in its current state.
	StateMessage *string `json:"stateMessage,omitempty"`
	// Output only. The aggregate size of the underlying artifacts associated with this VolumeBackup in the backup storage. This may change over time when multiple backups of the same volume share the same backup storage location. In particular, this is likely to increase in size when the immediately preceding backup of the same volume is deleted.
	StorageBytes *string `json:"storageBytes,omitempty"`
	// Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
	UID *string `json:"uid,omitempty"`
	// Output only. The timestamp when this VolumeBackup resource was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Output only. A storage system-specific opaque handle to the underlying volume backup.
	VolumeBackupHandle *string `json:"volumeBackupHandle,omitempty"`
}
