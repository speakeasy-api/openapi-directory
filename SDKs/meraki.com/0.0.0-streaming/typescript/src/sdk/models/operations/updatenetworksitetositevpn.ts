/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateNetworkSiteToSiteVpnRequestBodyHubs extends SpeakeasyBase {
  /**
   * The network ID of the hub.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hubId" })
  hubId: string;

  /**
   * Only valid in 'spoke' mode. Indicates whether default route traffic should be sent to this hub.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useDefaultRoute" })
  useDefaultRoute?: boolean;
}

/**
 * The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
 */
export enum UpdateNetworkSiteToSiteVpnRequestBodyModeEnum {
  Hub = "hub",
  None = "none",
  Spoke = "spoke",
}

export class UpdateNetworkSiteToSiteVpnRequestBodySubnets extends SpeakeasyBase {
  /**
   * The CIDR notation subnet used within the VPN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localSubnet" })
  localSubnet: string;

  /**
   * Indicates the presence of the subnet in the VPN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useVpn" })
  useVpn?: boolean;
}

export class UpdateNetworkSiteToSiteVpnRequestBody extends SpeakeasyBase {
  /**
   * The list of VPN hubs, in order of preference. In spoke mode, at least 1 hub is required.
   */
  @SpeakeasyMetadata({ elemType: UpdateNetworkSiteToSiteVpnRequestBodyHubs })
  @Expose({ name: "hubs" })
  @Type(() => UpdateNetworkSiteToSiteVpnRequestBodyHubs)
  hubs?: UpdateNetworkSiteToSiteVpnRequestBodyHubs[];

  /**
   * The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mode" })
  mode: UpdateNetworkSiteToSiteVpnRequestBodyModeEnum;

  /**
   * The list of subnets and their VPN presence.
   */
  @SpeakeasyMetadata({ elemType: UpdateNetworkSiteToSiteVpnRequestBodySubnets })
  @Expose({ name: "subnets" })
  @Type(() => UpdateNetworkSiteToSiteVpnRequestBodySubnets)
  subnets?: UpdateNetworkSiteToSiteVpnRequestBodySubnets[];
}

export class UpdateNetworkSiteToSiteVpnRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateNetworkSiteToSiteVpnRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class UpdateNetworkSiteToSiteVpnResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkSiteToSiteVpn200ApplicationJSONObject?: Record<string, any>;
}
