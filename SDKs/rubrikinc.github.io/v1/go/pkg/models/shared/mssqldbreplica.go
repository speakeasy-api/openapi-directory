// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MssqlDbReplicaRecoveryModelEnum - The recovery model of the replica.
type MssqlDbReplicaRecoveryModelEnum string

const (
	MssqlDbReplicaRecoveryModelEnumSimple     MssqlDbReplicaRecoveryModelEnum = "SIMPLE"
	MssqlDbReplicaRecoveryModelEnumFull       MssqlDbReplicaRecoveryModelEnum = "FULL"
	MssqlDbReplicaRecoveryModelEnumBulkLogged MssqlDbReplicaRecoveryModelEnum = "BULK_LOGGED"
)

func (e MssqlDbReplicaRecoveryModelEnum) ToPointer() *MssqlDbReplicaRecoveryModelEnum {
	return &e
}

func (e *MssqlDbReplicaRecoveryModelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIMPLE":
		fallthrough
	case "FULL":
		fallthrough
	case "BULK_LOGGED":
		*e = MssqlDbReplicaRecoveryModelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MssqlDbReplicaRecoveryModelEnum: %v", v)
	}
}

type MssqlDbReplica struct {
	AvailabilityInfo *MssqlDbReplicaAvailabilityInfo `json:"availabilityInfo,omitempty"`
	// `True` when the Rubrik cluster has sufficient permissions to perform all necessary operations.
	HasPermissions bool `json:"hasPermissions"`
	// ID of the SQL Server instance managing the replica.
	InstanceID string `json:"instanceId"`
	// Name of the SQL Server instance managing the replica.
	InstanceName string `json:"instanceName"`
	// Deprecated. Please use 'isDeleted' instead.
	IsArchived bool `json:"isArchived"`
	// `True` when the replica is deleted.
	IsDeleted bool `json:"isDeleted"`
	// `True` when the replica is in standby mode.
	IsStandby bool `json:"isStandby"`
	// The recovery fork GUID of the replica.
	RecoveryForkGUID *string `json:"recoveryForkGuid,omitempty"`
	// The recovery model of the replica.
	RecoveryModel  MssqlDbReplicaRecoveryModelEnum `json:"recoveryModel"`
	RootProperties MssqlRootProperties             `json:"rootProperties"`
	// The state of the replica.
	State string `json:"state"`
}
