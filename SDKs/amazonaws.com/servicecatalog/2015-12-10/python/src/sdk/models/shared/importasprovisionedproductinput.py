"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportAsProvisionedProductInput:
    
    idempotency_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IdempotencyToken') }})  
    physical_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PhysicalId') }})  
    product_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProductId') }})  
    provisioned_product_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisionedProductName') }})  
    provisioning_artifact_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisioningArtifactId') }})  
    accept_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceptLanguage'), 'exclude': lambda f: f is None }})  
    