// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RequestPhoneVerificationRequestPhoneVerificationMethodEnum - Verification method to receive verification code.
type RequestPhoneVerificationRequestPhoneVerificationMethodEnum string

const (
	RequestPhoneVerificationRequestPhoneVerificationMethodEnumPhoneVerificationMethodUnspecified RequestPhoneVerificationRequestPhoneVerificationMethodEnum = "PHONE_VERIFICATION_METHOD_UNSPECIFIED"
	RequestPhoneVerificationRequestPhoneVerificationMethodEnumSms                                RequestPhoneVerificationRequestPhoneVerificationMethodEnum = "SMS"
	RequestPhoneVerificationRequestPhoneVerificationMethodEnumPhoneCall                          RequestPhoneVerificationRequestPhoneVerificationMethodEnum = "PHONE_CALL"
)

func (e RequestPhoneVerificationRequestPhoneVerificationMethodEnum) ToPointer() *RequestPhoneVerificationRequestPhoneVerificationMethodEnum {
	return &e
}

func (e *RequestPhoneVerificationRequestPhoneVerificationMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PHONE_VERIFICATION_METHOD_UNSPECIFIED":
		fallthrough
	case "SMS":
		fallthrough
	case "PHONE_CALL":
		*e = RequestPhoneVerificationRequestPhoneVerificationMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestPhoneVerificationRequestPhoneVerificationMethodEnum: %v", v)
	}
}

// RequestPhoneVerificationRequest - Request message for the RequestPhoneVerification method.
type RequestPhoneVerificationRequest struct {
	// Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) (for example, en-US). Language code is used to provide localized `SMS` and `PHONE_CALL`. Default language used is en-US if not provided.
	LanguageCode *string `json:"languageCode,omitempty"`
	// Phone number to be verified.
	PhoneNumber *string `json:"phoneNumber,omitempty"`
	// Required. Two letter country code for the phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.
	PhoneRegionCode *string `json:"phoneRegionCode,omitempty"`
	// Verification method to receive verification code.
	PhoneVerificationMethod *RequestPhoneVerificationRequestPhoneVerificationMethodEnum `json:"phoneVerificationMethod,omitempty"`
}
