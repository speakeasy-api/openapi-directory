"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fixedorpercent as shared_fixedorpercent
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PatchRolloutModeEnum(str, Enum):
    r"""Mode of the patch rollout."""
    MODE_UNSPECIFIED = 'MODE_UNSPECIFIED'
    ZONE_BY_ZONE = 'ZONE_BY_ZONE'
    CONCURRENT_ZONES = 'CONCURRENT_ZONES'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchRollout:
    r"""Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs."""
    
    disruption_budget: Optional[shared_fixedorpercent.FixedOrPercent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disruptionBudget'), 'exclude': lambda f: f is None }})
    r"""Message encapsulating a value that can be either absolute (\\"fixed\\") or relative (\\"percent\\") to a value."""  
    mode: Optional[PatchRolloutModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mode'), 'exclude': lambda f: f is None }})
    r"""Mode of the patch rollout."""  
    