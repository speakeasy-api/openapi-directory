/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Feedback comment added to an assignment submission
 */
export class AssignmentSubmissionComment extends SpeakeasyBase {
  /**
   * The comment text
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * The date when the comment was posted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  /**
   * The comment unique identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The date of the last comment modification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modificationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modificationDate?: Date;

  /**
   * The submission unique identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "submission" })
  submission?: string;

  /**
   * True if the comment is unread by the current user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unread" })
  unread?: boolean;

  /**
   * The author unique identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}
