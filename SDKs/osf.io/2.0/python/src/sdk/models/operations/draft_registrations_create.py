"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DraftRegistrationsCreateDraftRegistrationAttributesNodeLicense:
    
    copyright_holders: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('copyright_holders'), 'exclude': lambda f: f is None }})
    r"""A list of names of copyright holders for the license."""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year'), 'exclude': lambda f: f is None }})
    r"""The year the copyright was made."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DraftRegistrationsCreateDraftRegistrationAttributesInput:
    r"""The properties of the Draft Registration entity."""
    
    category: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""The category of the Draft Registration."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of the Draft Registration."""  
    node_license: Optional[DraftRegistrationsCreateDraftRegistrationAttributesNodeLicense] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('node_license'), 'exclude': lambda f: f is None }})  
    registration_metadata: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registration_metadata'), 'exclude': lambda f: f is None }})
    r"""This is a legacy format for `registration_responses`."""  
    registration_responses: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registration_responses'), 'exclude': lambda f: f is None }})
    r"""A dictionary of question IDs and responses from the registration schema."""  
    tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    r"""The searchable tags of the Draft Registration."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The title of the Draft Registration."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DraftRegistrationsCreateDraftRegistrationInput:
    
    attributes: DraftRegistrationsCreateDraftRegistrationAttributesInput = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributes') }})
    r"""The properties of the Draft Registration entity."""  
    

@dataclasses.dataclass
class DraftRegistrationsCreateDraftRegistrationAttributes:
    r"""The properties of the Draft Registration entity."""
    
    category: Optional[str] = dataclasses.field(default=None)
    r"""The category of the Draft Registration."""  
    current_user_permissions: Optional[list[str]] = dataclasses.field(default=None)
    r"""The current users permission level for the Draft Registration."""  
    datetime_initiated: Optional[datetime] = dataclasses.field(default=None)
    r"""The time at which the draft registration was first initiated, as an iso8601 formatted timestamp."""  
    datetime_updated: Optional[datetime] = dataclasses.field(default=None)
    r"""The time at which the draft registration was last updated, as an iso8601 formatted timestamp."""  
    description: Optional[str] = dataclasses.field(default=None)
    r"""The description of the Draft Registration."""  
    has_project: Optional[bool] = dataclasses.field(default=None)
    r"""This indicates whether a Draft Registration was branched from a project."""  
    node_license: Optional[DraftRegistrationsCreateDraftRegistrationAttributesNodeLicense] = dataclasses.field(default=None)  
    registration_metadata: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""This is a legacy format for `registration_responses`."""  
    registration_responses: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""A dictionary of question IDs and responses from the registration schema."""  
    tags: Optional[list[str]] = dataclasses.field(default=None)
    r"""The searchable tags of the Draft Registration."""  
    title: Optional[str] = dataclasses.field(default=None)
    r"""The title of the Draft Registration."""  
    

@dataclasses.dataclass
class DraftRegistrationsCreateDraftRegistrationLinks:
    r"""URLs to alternative representations of the draft registration entity."""
    
    html: str = dataclasses.field()
    r"""A link to the draft registration's page on the OSF."""  
    

@dataclasses.dataclass
class DraftRegistrationsCreateDraftRegistrationRelationships:
    r"""URLs to other entities or entity collections that have a relationship to the draft registration entity."""
    
    branched_from: Optional[str] = dataclasses.field(default=None)
    r"""A link to the node that this draft registration was created from."""  
    initiator: Optional[str] = dataclasses.field(default=None)
    r"""A link to the user who initiated the draft registration."""  
    registration_schema: Optional[str] = dataclasses.field(default=None)
    r"""A link to the detailed registration schema that this draft conforms to."""  
    

@dataclasses.dataclass
class DraftRegistrationsCreateDraftRegistration:
    r"""Created"""
    
    attributes: DraftRegistrationsCreateDraftRegistrationAttributes = dataclasses.field()
    r"""The properties of the Draft Registration entity."""  
    id: str = dataclasses.field()
    r"""The unique identifier of the draft registration entity."""  
    links: DraftRegistrationsCreateDraftRegistrationLinks = dataclasses.field()
    r"""URLs to alternative representations of the draft registration entity."""  
    relationships: DraftRegistrationsCreateDraftRegistrationRelationships = dataclasses.field()
    r"""URLs to other entities or entity collections that have a relationship to the draft registration entity."""  
    type: str = dataclasses.field()
    r"""The type identifier of the draft registration entity (`draft_registrations`)."""  
    

@dataclasses.dataclass
class DraftRegistrationsCreateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    