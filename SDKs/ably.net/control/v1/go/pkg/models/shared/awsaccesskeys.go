// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AwsAccessKeysAuthenticationModeEnum string

const (
	AwsAccessKeysAuthenticationModeEnumCredentials AwsAccessKeysAuthenticationModeEnum = "credentials"
)

func (e AwsAccessKeysAuthenticationModeEnum) ToPointer() *AwsAccessKeysAuthenticationModeEnum {
	return &e
}

func (e *AwsAccessKeysAuthenticationModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "credentials":
		*e = AwsAccessKeysAuthenticationModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AwsAccessKeysAuthenticationModeEnum: %v", v)
	}
}

type AwsAccessKeys struct {
	AccessKeyID        string                               `json:"accessKeyId"`
	AuthenticationMode *AwsAccessKeysAuthenticationModeEnum `json:"authenticationMode,omitempty"`
	SecretAccessKey    string                               `json:"secretAccessKey"`
}
