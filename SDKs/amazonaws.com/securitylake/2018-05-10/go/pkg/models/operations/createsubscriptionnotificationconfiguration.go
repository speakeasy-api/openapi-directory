// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnum - The HTTPS method used for the notification subscription.
type CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnum string

const (
	CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnumPost CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnum = "POST"
	CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnumPut  CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnum = "PUT"
)

func (e *CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "POST":
		fallthrough
	case "PUT":
		*e = CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnum: %s", s)
	}
}

type CreateSubscriptionNotificationConfigurationRequestBody struct {
	// Create an Amazon Simple Queue Service queue.
	CreateSqs *bool `json:"createSqs,omitempty"`
	// The key name for the notification subscription.
	HTTPSAPIKeyName *string `json:"httpsApiKeyName,omitempty"`
	// The key value for the notification subscription.
	HTTPSAPIKeyValue *string `json:"httpsApiKeyValue,omitempty"`
	// The HTTPS method used for the notification subscription.
	HTTPSMethod *CreateSubscriptionNotificationConfigurationRequestBodyHTTPSMethodEnum `json:"httpsMethod,omitempty"`
	// The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created. For more information about ARNs and how to use them in policies, see <a href="https://docs.aws.amazon.com//security-lake/latest/userguide/subscriber-data-access.html">Managing data access</a> and <a href="https://docs.aws.amazon.com/security-lake/latest/userguide/security-iam-awsmanpol.html">Amazon Web Services Managed Policies</a> in the Amazon Security Lake User Guide.
	RoleArn *string `json:"roleArn,omitempty"`
	// The subscription endpoint in Security Lake. If you prefer notification with an HTTPs endpoint, populate this field.
	SubscriptionEndpoint *string `json:"subscriptionEndpoint,omitempty"`
}

type CreateSubscriptionNotificationConfigurationRequest struct {
	RequestBody       CreateSubscriptionNotificationConfigurationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The subscription ID for the notification subscription.
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionId"`
}

type CreateSubscriptionNotificationConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountNotFoundException
	AccountNotFoundException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	CreateSubscriptionNotificationConfigurationResponse *shared.CreateSubscriptionNotificationConfigurationResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
