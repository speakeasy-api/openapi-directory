/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GsiDispatch200ApplicationJSON - Success
 */
public class GsiDispatch200ApplicationJSON {
    /**
     * Averaged geospatial distance in kilometers between energy generation and usage at requested location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("avg_distance_km")
    public Double avgDistanceKm;

    public GsiDispatch200ApplicationJSON withAvgDistanceKm(Double avgDistanceKm) {
        this.avgDistanceKm = avgDistanceKm;
        return this;
    }
    
    /**
     * List of current sources of green energy (into requested location)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dispatch_from")
    public org.openapis.openapi.models.shared.DispatchLocation[] dispatchFrom;

    public GsiDispatch200ApplicationJSON withDispatchFrom(org.openapis.openapi.models.shared.DispatchLocation[] dispatchFrom) {
        this.dispatchFrom = dispatchFrom;
        return this;
    }
    
    /**
     * List of current targets of green energy (out of requested location)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dispatch_target")
    public org.openapis.openapi.models.shared.DispatchLocation[] dispatchTarget;

    public GsiDispatch200ApplicationJSON withDispatchTarget(org.openapis.openapi.models.shared.DispatchLocation[] dispatchTarget) {
        this.dispatchTarget = dispatchTarget;
        return this;
    }
    
    /**
     * Green Energy Mix after dispatch of given city
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postmix")
    public java.util.Map<String, Object> postmix;

    public GsiDispatch200ApplicationJSON withPostmix(java.util.Map<String, Object> postmix) {
        this.postmix = postmix;
        return this;
    }
    
    /**
     * Green Energy Mix prior to dispatch of given city
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("premix")
    public java.util.Map<String, Object> premix;

    public GsiDispatch200ApplicationJSON withPremix(java.util.Map<String, Object> premix) {
        this.premix = premix;
        return this;
    }
    
    /**
     * Evaluated timeframe for this request
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeframe")
    public GsiDispatch200ApplicationJSONTimeframe timeframe;

    public GsiDispatch200ApplicationJSON withTimeframe(GsiDispatch200ApplicationJSONTimeframe timeframe) {
        this.timeframe = timeframe;
        return this;
    }
    
    public GsiDispatch200ApplicationJSON(){}
}
