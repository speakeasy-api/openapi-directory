/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PutAccountsAccountOrdersCustomerOrderIdRequestBody - Order Parameters
 */
public class PutAccountsAccountOrdersCustomerOrderIdRequestBody {
    /**
     * Required Price to support Stop and Stop Limit orders
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Aux Price")
    public Double auxPrice;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withAuxPrice(Double auxPrice) {
        this.auxPrice = auxPrice;
        return this;
    }
    
    /**
     * The new order ID assigned by the customer for the modification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerOrderId")
    public String customerOrderId;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withCustomerOrderId(String customerOrderId) {
        this.customerOrderId = customerOrderId;
        return this;
    }
    
    /**
     * By setting this bool to false the customer attests that the order is not subject to German HFT Act, was not generated using any automated algorithm, and no algorithm determined or changed financial instrument, side, quantity, order type, limit or other price, trading venue or timing of this order. Currently we cannot accept orders where this flag is set to true. Such orders will be rejected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GermanHftAlgo")
    public Boolean germanHftAlgo;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withGermanHftAlgo(Boolean germanHftAlgo) {
        this.germanHftAlgo = germanHftAlgo;
        return this;
    }
    
    /**
     * This field permits specification of the user's preregistered (via account management) MiFID II short code for algos that are responsible for investment decisions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Mifid2Algo")
    public String mifid2Algo;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withMifid2Algo(String mifid2Algo) {
        this.mifid2Algo = mifid2Algo;
        return this;
    }
    
    /**
     * This field permits specification of the user's preregistered (via account management) MiFID II short code for decision makers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Mifid2DecisionMaker")
    public String mifid2DecisionMaker;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withMifid2DecisionMaker(String mifid2DecisionMaker) {
        this.mifid2DecisionMaker = mifid2DecisionMaker;
        return this;
    }
    
    /**
     * This field permits specification of the user's preregistered (via account management) MiFID II short code for algos that are responsible for handling/routing of the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Mifid2ExecutionAlgo")
    public String mifid2ExecutionAlgo;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withMifid2ExecutionAlgo(String mifid2ExecutionAlgo) {
        this.mifid2ExecutionAlgo = mifid2ExecutionAlgo;
        return this;
    }
    
    /**
     * This field permits specification of the user's preregistered (via account management) MiFID II person responsible for handling/routing of the order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Mifid2ExecutionTrader")
    public String mifid2ExecutionTrader;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withMifid2ExecutionTrader(String mifid2ExecutionTrader) {
        this.mifid2ExecutionTrader = mifid2ExecutionTrader;
        return this;
    }
    
    /**
     * Market = '1'
     * Limit = '2'
     * Stop = '3'
     * StopLimit = '4'
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Order Type")
    public org.openapis.openapi.models.shared.OrderTypeEnum orderType;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withOrderType(org.openapis.openapi.models.shared.OrderTypeEnum orderType) {
        this.orderType = orderType;
        return this;
    }
    
    /**
     * The order ID assigned by the customer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrigCustomerOrderId")
    public String origCustomerOrderId;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withOrigCustomerOrderId(String origCustomerOrderId) {
        this.origCustomerOrderId = origCustomerOrderId;
        return this;
    }
    
    /**
     * Indicates if order is active outside regular trading hours, where defined. 0 = no (default), 1 = yes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Outside RTH")
    public Double outsideRTH;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withOutsideRTH(Double outsideRTH) {
        this.outsideRTH = outsideRTH;
        return this;
    }
    
    /**
     * The order price
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Price")
    public Double price;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * The number of units in the order; contracts or shares
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Quantity")
    public Double quantity;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Buy = '1', Sell = '2'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Side")
    public PutAccountsAccountOrdersCustomerOrderIdRequestBodySideEnum side;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withSide(PutAccountsAccountOrdersCustomerOrderIdRequestBodySideEnum side) {
        this.side = side;
        return this;
    }
    
    /**
     * Defines order's active lifetime.
     * Day = '0'
     * GTC (Good till Cancel) = '1'
     * IOC (Immediate or Cancel) = '3'
     * Open = '2'
     * Close = '7'
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Time in Force")
    public org.openapis.openapi.models.shared.TimeInForceEnum timeInForce;
    public PutAccountsAccountOrdersCustomerOrderIdRequestBody withTimeInForce(org.openapis.openapi.models.shared.TimeInForceEnum timeInForce) {
        this.timeInForce = timeInForce;
        return this;
    }
    
}
