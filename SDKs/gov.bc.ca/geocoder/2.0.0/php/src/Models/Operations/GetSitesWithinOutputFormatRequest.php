<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSitesWithinOutputFormatRequest
{
    /**
     * A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a>
     * 
     * @var string $bbox
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=bbox')]
    public string $bbox;
    
    /**
     * If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
     * 
     * @var ?bool $brief
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=brief')]
    public ?bool $brief = null;
    
    /**
     * If true, excludes sites that are units of a parent site
     * 
     * @var ?bool $excludeUnits
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=excludeUnits')]
    public ?bool $excludeUnits = null;
    
    /**
     * Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetSitesWithinOutputFormatLocationDescriptorEnum $locationDescriptor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=locationDescriptor')]
    public ?GetSitesWithinOutputFormatLocationDescriptorEnum $locationDescriptor = null;
    
    /**
     * The maximum number of search results to return.
     * 
     * @var ?int $maxResults
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxResults')]
    public ?int $maxResults = null;
    
    /**
     * If true, excludes sites without a civic address
     * 
     * @var ?bool $onlyCivic
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=onlyCivic')]
    public ?bool $onlyCivic = null;
    
    /**
     * Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>. 
     * 
     * 
     * Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetSitesWithinOutputFormatOutputFormatEnum $outputFormat
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=outputFormat')]
    public GetSitesWithinOutputFormatOutputFormatEnum $outputFormat;
    
    /**
     * The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetSitesWithinOutputFormatOutputSrsEnum $outputSRS
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=outputSRS')]
    public ?GetSitesWithinOutputFormatOutputSrsEnum $outputSRS = null;
    
    /**
     * The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
     * 
     * @var ?int $setBack
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=setBack')]
    public ?int $setBack = null;
    
	public function __construct()
	{
		$this->bbox = "";
		$this->brief = null;
		$this->excludeUnits = null;
		$this->locationDescriptor = null;
		$this->maxResults = null;
		$this->onlyCivic = null;
		$this->outputFormat = \OpenAPI\OpenAPI\Models\Operations\GetSitesWithinOutputFormatOutputFormatEnum::JSON;
		$this->outputSRS = null;
		$this->setBack = null;
	}
}
