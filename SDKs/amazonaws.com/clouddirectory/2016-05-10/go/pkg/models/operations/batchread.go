// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BatchReadRequestBody struct {
	// A list of operations that are part of the batch.
	Operations []shared.BatchReadOperation `json:"Operations"`
}

// BatchReadXAmzConsistencyLevelEnum - Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
type BatchReadXAmzConsistencyLevelEnum string

const (
	BatchReadXAmzConsistencyLevelEnumSerializable BatchReadXAmzConsistencyLevelEnum = "SERIALIZABLE"
	BatchReadXAmzConsistencyLevelEnumEventual     BatchReadXAmzConsistencyLevelEnum = "EVENTUAL"
)

func (e BatchReadXAmzConsistencyLevelEnum) ToPointer() *BatchReadXAmzConsistencyLevelEnum {
	return &e
}

func (e *BatchReadXAmzConsistencyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SERIALIZABLE":
		fallthrough
	case "EVENTUAL":
		*e = BatchReadXAmzConsistencyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchReadXAmzConsistencyLevelEnum: %v", v)
	}
}

type BatchReadRequest struct {
	RequestBody       BatchReadRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Represents the manner and timing in which the successful write or update of an object is reflected in a subsequent read operation of that same object.
	XAmzConsistencyLevel *BatchReadXAmzConsistencyLevelEnum `header:"style=simple,explode=false,name=x-amz-consistency-level"`
	// The Amazon Resource Name (ARN) that is associated with the <a>Directory</a>. For more information, see <a>arns</a>.
	XAmzDataPartition string `header:"style=simple,explode=false,name=x-amz-data-partition"`
}

type BatchReadResponse struct {
	// AccessDeniedException
	AccessDeniedException *shared.AccessDeniedException
	// Success
	BatchReadResponse *shared.BatchReadResponse
	ContentType       string
	// DirectoryNotEnabledException
	DirectoryNotEnabledException *shared.DirectoryNotEnabledException
	// InternalServiceException
	InternalServiceException *shared.InternalServiceException
	// InvalidArnException
	InvalidArnException *shared.InvalidArnException
	// LimitExceededException
	LimitExceededException *shared.LimitExceededException
	StatusCode             int
	RawResponse            *http.Response
	// RetryableConflictException
	RetryableConflictException *shared.RetryableConflictException
	// ValidationException
	ValidationException *shared.ValidationException
}
