/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WorkerHealthReportResponse } from "./workerhealthreportresponse";
import { WorkerThreadScalingReportResponse } from "./workerthreadscalingreportresponse";
import { Expose, Type } from "class-transformer";

/**
 * A worker_message response allows the server to pass information to the sender.
 */
export class WorkerMessageResponse extends SpeakeasyBase {
  /**
   * WorkerHealthReportResponse contains information returned to the worker in response to a health ping.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workerHealthReportResponse" })
  @Type(() => WorkerHealthReportResponse)
  workerHealthReportResponse?: WorkerHealthReportResponse;

  /**
   * Service-side response to WorkerMessage reporting resource utilization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workerMetricsResponse" })
  workerMetricsResponse?: Record<string, any>;

  /**
   * Service-side response to WorkerMessage issuing shutdown notice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workerShutdownNoticeResponse" })
  workerShutdownNoticeResponse?: Record<string, any>;

  /**
   * Contains the thread scaling recommendation for a worker from the backend.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workerThreadScalingReportResponse" })
  @Type(() => WorkerThreadScalingReportResponse)
  workerThreadScalingReportResponse?: WorkerThreadScalingReportResponse;
}
