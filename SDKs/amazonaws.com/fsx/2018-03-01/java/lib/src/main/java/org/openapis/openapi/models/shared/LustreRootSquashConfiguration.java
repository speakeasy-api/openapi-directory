/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LustreRootSquashConfiguration - &lt;p&gt;The configuration for Lustre root squash used to restrict root-level access from clients that try to access your FSx for Lustre file system as root. Use the &lt;code&gt;RootSquash&lt;/code&gt; parameter to enable root squash. To learn more about Lustre root squash, see &lt;a href="https://docs.aws.amazon.com/fsx/latest/LustreGuide/root-squash.html"&gt;Lustre root squash&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;You can also use the &lt;code&gt;NoSquashNids&lt;/code&gt; parameter to provide an array of clients who are not affected by the root squash setting. These clients will access the file system as root, with unrestricted privileges.&lt;/p&gt;
 */
public class LustreRootSquashConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NoSquashNids")
    public String[] noSquashNids;
    public LustreRootSquashConfiguration withNoSquashNids(String[] noSquashNids) {
        this.noSquashNids = noSquashNids;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RootSquash")
    public String rootSquash;
    public LustreRootSquashConfiguration withRootSquash(String rootSquash) {
        this.rootSquash = rootSquash;
        return this;
    }
    
}
