// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum - <p>The resource discovery status.</p> <ul> <li> <p> <code>active</code> - Connection or permissions required to read the results of the resource discovery are intact.</p> </li> <li> <p> <code>not-found</code> - Connection or permissions required to read the results of the resource discovery are broken. This may happen if the owner of the resource discovery stopped sharing it or deleted the resource discovery. Verify the resource discovery still exists and the Amazon Web Services RAM resource share is still intact.</p> </li> </ul>
type AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum string

const (
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnumActive   AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum = "active"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnumNotFound AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum = "not-found"
)

func (e AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum) ToPointer() *AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum {
	return &e
}

func (e *AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "not-found":
		*e = AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum: %v", v)
	}
}

// AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum - <p>The lifecycle state of the association when you associate or disassociate a resource discovery.</p> <ul> <li> <p> <code>associate-in-progress</code> - Resource discovery is being associated.</p> </li> <li> <p> <code>associate-complete</code> - Resource discovery association is complete.</p> </li> <li> <p> <code>associate-failed</code> - Resource discovery association has failed.</p> </li> <li> <p> <code>disassociate-in-progress</code> - Resource discovery is being disassociated.</p> </li> <li> <p> <code>disassociate-complete</code> - Resource discovery disassociation is complete.</p> </li> <li> <p> <code>disassociate-failed </code> - Resource discovery disassociation has failed.</p> </li> <li> <p> <code>isolate-in-progress</code> - Amazon Web Services account that created the resource discovery association has been removed and the resource discovery associatation is being isolated.</p> </li> <li> <p> <code>isolate-complete</code> - Resource discovery isolation is complete..</p> </li> <li> <p> <code>restore-in-progress</code> - Resource discovery is being restored.</p> </li> </ul>
type AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum string

const (
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumAssociateInProgress    AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "associate-in-progress"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumAssociateComplete      AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "associate-complete"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumAssociateFailed        AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "associate-failed"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumDisassociateInProgress AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "disassociate-in-progress"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumDisassociateComplete   AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "disassociate-complete"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumDisassociateFailed     AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "disassociate-failed"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumIsolateInProgress      AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "isolate-in-progress"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumIsolateComplete        AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "isolate-complete"
	AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnumRestoreInProgress      AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum = "restore-in-progress"
)

func (e AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum) ToPointer() *AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum {
	return &e
}

func (e *AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associate-in-progress":
		fallthrough
	case "associate-complete":
		fallthrough
	case "associate-failed":
		fallthrough
	case "disassociate-in-progress":
		fallthrough
	case "disassociate-complete":
		fallthrough
	case "disassociate-failed":
		fallthrough
	case "isolate-in-progress":
		fallthrough
	case "isolate-complete":
		fallthrough
	case "restore-in-progress":
		*e = AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum: %v", v)
	}
}

// AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationTags - Describes a tag.
type AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationTags struct {
	Key   *string
	Value *string
}

// AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociation - A resource discovery association. An associated resource discovery is a resource discovery that has been associated with an IPAM.
type AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociation struct {
	IpamArn                             *string
	IpamID                              *string
	IpamRegion                          *string
	IpamResourceDiscoveryAssociationArn *string
	IpamResourceDiscoveryAssociationID  *string
	IpamResourceDiscoveryID             *string
	IsDefault                           *bool
	OwnerID                             *string
	ResourceDiscoveryStatus             *AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationResourceDiscoveryStatusEnum
	State                               *AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationStateEnum
	Tags                                []AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociationTags
}

// AssociateIpamResourceDiscoveryResult - Success
type AssociateIpamResourceDiscoveryResult struct {
	IpamResourceDiscoveryAssociation *AssociateIpamResourceDiscoveryResultIpamResourceDiscoveryAssociation
}
