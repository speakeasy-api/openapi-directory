/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MeterFolderInformation - Container Class for the Web API
 */
public class MeterFolderInformation {
    /**
     * The Version of the Communication Module (if exists)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CommunicationModuleFirmwareVersion")
    public Integer communicationModuleFirmwareVersion;
    public MeterFolderInformation withCommunicationModuleFirmwareVersion(Integer communicationModuleFirmwareVersion) {
        this.communicationModuleFirmwareVersion = communicationModuleFirmwareVersion;
        return this;
    }
    
    /**
     * The Version of the Communication Module (if exists)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CommunicationModuleHardwareVersion")
    public Integer communicationModuleHardwareVersion;
    public MeterFolderInformation withCommunicationModuleHardwareVersion(Integer communicationModuleHardwareVersion) {
        this.communicationModuleHardwareVersion = communicationModuleHardwareVersion;
        return this;
    }
    
    /**
     * The Firmware Version of a Meter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FirmwareVersion")
    public Integer firmwareVersion;
    public MeterFolderInformation withFirmwareVersion(Integer firmwareVersion) {
        this.firmwareVersion = firmwareVersion;
        return this;
    }
    
    /**
     * The Hardware Version of a Meter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HardwareVersion")
    public Integer hardwareVersion;
    public MeterFolderInformation withHardwareVersion(Integer hardwareVersion) {
        this.hardwareVersion = hardwareVersion;
        return this;
    }
    
    /**
     * Informations about the available Inputs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InputInformations")
    public InputInformation[] inputInformations;
    public MeterFolderInformation withInputInformations(InputInformation[] inputInformations) {
        this.inputInformations = inputInformations;
        return this;
    }
    
    /**
     * Flag if it's a Folder or a Meter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsFolder")
    public Boolean isFolder;
    public MeterFolderInformation withIsFolder(Boolean isFolder) {
        this.isFolder = isFolder;
        return this;
    }
    
    /**
     * Name of the Meter or Folder
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public MeterFolderInformation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Informations about the available Outputs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputInformations")
    public OutputInformation[] outputInformations;
    public MeterFolderInformation withOutputInformations(OutputInformation[] outputInformations) {
        this.outputInformations = outputInformations;
        return this;
    }
    
}
