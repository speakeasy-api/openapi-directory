"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OmidAssignedTargetingOptionDetailsOmidEnum(str, Enum):
    r"""The type of Open Measurement enabled inventory. Output only in v1. Required in v2."""
    OMID_UNSPECIFIED = 'OMID_UNSPECIFIED'
    OMID_FOR_MOBILE_DISPLAY_ADS = 'OMID_FOR_MOBILE_DISPLAY_ADS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OmidAssignedTargetingOptionDetails:
    r"""Represents a targetable Open Measurement enabled inventory type. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_OMID`."""
    
    omid: Optional[OmidAssignedTargetingOptionDetailsOmidEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('omid'), 'exclude': lambda f: f is None }})
    r"""The type of Open Measurement enabled inventory. Output only in v1. Required in v2."""  
    targeting_option_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetingOptionId'), 'exclude': lambda f: f is None }})
    r"""Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_OMID`."""  
    