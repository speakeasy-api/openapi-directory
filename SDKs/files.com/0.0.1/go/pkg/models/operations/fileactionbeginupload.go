// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FileActionBeginUploadPathParams struct {
	// Path to operate on.
	Path string `pathParam:"style=simple,explode=false,name=path"`
}

type FileActionBeginUploadRequestBody struct {
	// Create parent directories if they do not exist?
	MkdirParents *bool `multipartForm:"name=mkdir_parents"`
	// Part if uploading a part.
	Part *int `multipartForm:"name=part"`
	// How many parts to fetch?
	Parts *int    `multipartForm:"name=parts"`
	Ref   *string `multipartForm:"name=ref"`
	// File byte offset to restart from.
	Restart *int `multipartForm:"name=restart"`
	// Total bytes of file being uploaded (include bytes being retained if appending/restarting).
	Size *int `multipartForm:"name=size"`
	// Allow file rename instead of overwrite?
	WithRename *bool `multipartForm:"name=with_rename"`
}

type FileActionBeginUploadRequest struct {
	PathParams FileActionBeginUploadPathParams
	Request    *FileActionBeginUploadRequestBody `request:"mediaType=multipart/form-data"`
}

type FileActionBeginUploadResponse struct {
	ContentType string
	// The FileActions object.
	FileUploadPartEntities []shared.FileUploadPartEntity
	StatusCode             int
	RawResponse            *http.Response
}
