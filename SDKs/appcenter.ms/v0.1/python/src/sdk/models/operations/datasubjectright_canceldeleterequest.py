"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequestSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequestRequestBody:
    
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""Email used for cancel delete with x-authz-bypass headers"""  
    

@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequestRequest:
    
    token: str = dataclasses.field(metadata={'path_param': { 'field_name': 'token', 'style': 'simple', 'explode': False }})
    r"""Unique request ID (GUID)"""  
    request_body: Optional[DataSubjectRightCancelDeleteRequestRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    
class DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequestDefaultApplicationJSONError:
    
    code: DataSubjectRightCancelDeleteRequestDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequestDefaultApplicationJSON:
    r"""Error code with reason"""
    
    error: DataSubjectRightCancelDeleteRequestDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    
class DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequest503ApplicationJSONError:
    
    code: DataSubjectRightCancelDeleteRequest503ApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequest503ApplicationJSON:
    r"""Cancel delete request cannot be processed yet."""
    
    error: DataSubjectRightCancelDeleteRequest503ApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequest202ApplicationJSON:
    r"""Data subject right cancel delete request has been accepted."""
    
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""ISO 8601 format timestamp of when request was created."""  
    token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token') }})
    r"""Unique request identifier"""  
    

@dataclasses.dataclass
class DataSubjectRightCancelDeleteRequestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    data_subject_right_cancel_delete_request_202_application_json_object: Optional[DataSubjectRightCancelDeleteRequest202ApplicationJSON] = dataclasses.field(default=None)
    r"""Data subject right cancel delete request has been accepted."""  
    data_subject_right_cancel_delete_request_503_application_json_object: Optional[DataSubjectRightCancelDeleteRequest503ApplicationJSON] = dataclasses.field(default=None)
    r"""Cancel delete request cannot be processed yet."""  
    data_subject_right_cancel_delete_request_default_application_json_object: Optional[DataSubjectRightCancelDeleteRequestDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error code with reason"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    