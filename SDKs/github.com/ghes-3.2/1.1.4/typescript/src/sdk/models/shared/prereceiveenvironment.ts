/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class PreReceiveEnvironmentDownload extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "downloaded_at" })
  downloadedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Response
 */
export class PreReceiveEnvironment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_environment" })
  defaultEnvironment?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "download" })
  @Type(() => PreReceiveEnvironmentDownload)
  download?: PreReceiveEnvironmentDownload;

  @SpeakeasyMetadata()
  @Expose({ name: "hooks_count" })
  hooksCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "image_url" })
  imageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
