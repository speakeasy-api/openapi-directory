/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Facets - List of facets for the given query.
 */
public class Facets {
    /**
     * Generated breadcrumb for the given query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("breadcrumb")
    public FacetsBreadcrumb[] breadcrumb;

    public Facets withBreadcrumb(FacetsBreadcrumb[] breadcrumb) {
        this.breadcrumb = breadcrumb;
        return this;
    }
    
    /**
     * List of facets
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("facets")
    public FacetsFacets[] facets;

    public Facets withFacets(FacetsFacets[] facets) {
        this.facets = facets;
        return this;
    }
    
    /**
     * Term and facets used in the query
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryArgs")
    public FacetsQueryArgs queryArgs;

    public Facets withQueryArgs(FacetsQueryArgs queryArgs) {
        this.queryArgs = queryArgs;
        return this;
    }
    
    /**
     * Indicates whether there was sampling in the aggregation of facets or not. In search results that have many products, only the first 30000 will be aggregated to avoid performance issues.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sampling")
    public Boolean sampling;

    public Facets withSampling(Boolean sampling) {
        this.sampling = sampling;
        return this;
    }
    
    public Facets(){}
}
