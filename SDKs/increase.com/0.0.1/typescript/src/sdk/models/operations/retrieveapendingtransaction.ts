/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RetrieveAPendingTransactionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pending_transaction_id",
  })
  pendingTransactionId: string;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson13StatusEnum {
  FourHundredAndTwentyNine = "429",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson13TypeEnum {
  RateLimitedError = "rate_limited_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson13 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "retry_after" })
  retryAfter?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson13StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson13TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson12StatusEnum {
  FourHundredAndThree = "403",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson12TypeEnum {
  PrivateFeatureError = "private_feature_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson12 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson12StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson12TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson11StatusEnum {
  FourHundredAndFour = "404",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson11TypeEnum {
  ObjectNotFoundError = "object_not_found_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson11 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson11StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson11TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson10StatusEnum {
  FourHundred = "400",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson10TypeEnum {
  MalformedRequestError = "malformed_request_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson10 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson10StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson10TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson9StatusEnum {
  FourHundred = "400",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson9TypeEnum {
  InvalidParametersError = "invalid_parameters_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson9 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  /**
   * All errors related to parsing the request parameters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson9StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson9TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson8StatusEnum {
  FourHundredAndNine = "409",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson8TypeEnum {
  InvalidOperationError = "invalid_operation_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson8 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson8StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson8TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson7StatusEnum {
  FourHundredAndOne = "401",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson7TypeEnum {
  InvalidApiKeyError = "invalid_api_key_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson7 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson7StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson7TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson6StatusEnum {
  FiveHundred = "500",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson6TypeEnum {
  InternalServerError = "internal_server_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson6 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson6StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson6TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson5StatusEnum {
  FourHundredAndThree = "403",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson5TypeEnum {
  InsufficientPermissionsError = "insufficient_permissions_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson5 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson5StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson5TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson4StatusEnum {
  FourHundredAndTwentyTwo = "422",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson4TypeEnum {
  IdempotencyUnprocessableError = "idempotency_unprocessable_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson4 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson4StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson4TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson3StatusEnum {
  FourHundredAndNine = "409",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson3TypeEnum {
  IdempotencyConflictError = "idempotency_conflict_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson3 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson3StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson3TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson2StatusEnum {
  FourHundredAndThree = "403",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson2TypeEnum {
  EnvironmentMismatchError = "environment_mismatch_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson2StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson2TypeEnum;
}

export enum RetrieveAPendingTransactionDefaultApplicationJson1StatusEnum {
  FourHundredAndFour = "404",
}

export enum RetrieveAPendingTransactionDefaultApplicationJson1TypeEnum {
  ApiMethodNotFoundError = "api_method_not_found_error",
}

export class RetrieveAPendingTransactionDefaultApplicationJson1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RetrieveAPendingTransactionDefaultApplicationJson1StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RetrieveAPendingTransactionDefaultApplicationJson1TypeEnum;
}

export class RetrieveAPendingTransactionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  error?: any;

  /**
   * Pending Transaction
   */
  @SpeakeasyMetadata()
  pendingTransaction?: shared.PendingTransaction;
}
