/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RepoSource - Location of the source in a Google Cloud Source Repository.
 */
public class RepoSource {
    /**
     * Regex matching branches to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branchName")
    public String branchName;

    public RepoSource withBranchName(String branchName) {
        this.branchName = branchName;
        return this;
    }
    
    /**
     * Explicit commit SHA to build.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commitSha")
    public String commitSha;

    public RepoSource withCommitSha(String commitSha) {
        this.commitSha = commitSha;
        return this;
    }
    
    /**
     * Directory, relative to the source root, in which to run the build. This must be a relative path. If a step's `dir` is specified and is an absolute path, this value is ignored for that step's execution. eg. helloworld (no leading slash allowed)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dir")
    public String dir;

    public RepoSource withDir(String dir) {
        this.dir = dir;
        return this;
    }
    
    /**
     * Only trigger a build if the revision regex does NOT match the revision regex.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invertRegex")
    public Boolean invertRegex;

    public RepoSource withInvertRegex(Boolean invertRegex) {
        this.invertRegex = invertRegex;
        return this;
    }
    
    /**
     * ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectId")
    public String projectId;

    public RepoSource withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    /**
     * Name of the Cloud Source Repository.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repoName")
    public String repoName;

    public RepoSource withRepoName(String repoName) {
        this.repoName = repoName;
        return this;
    }
    
    /**
     * Regex matching tags to build. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagName")
    public String tagName;

    public RepoSource withTagName(String tagName) {
        this.tagName = tagName;
        return this;
    }
    
    public RepoSource(){}
}
