/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Which direction to traverse (used only if relationship_type is defined)
 */
export enum GetEdgeResourceDirectionEnum {
  Incoming = "INCOMING",
  Outgoing = "OUTGOING",
  Both = "BOTH",
}

/**
 * Which monarch graph to query
 */
export enum GetEdgeResourceGraphEnum {
  Data = "data",
  Ontology = "ontology",
}

export class GetEdgeResourceRequest extends SpeakeasyBase {
  /**
   * How far to traverse for neighbors
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=depth" })
  depth?: number;

  /**
   * Which direction to traverse (used only if relationship_type is defined)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: GetEdgeResourceDirectionEnum;

  /**
   * Include sub-properties and equivalent properties
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=entail",
  })
  entail?: boolean;

  /**
   * Which monarch graph to query
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=graph" })
  graph?: GetEdgeResourceGraphEnum;

  /**
   * CURIE e.g. HP:0000465
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Relationship type to traverse
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=relationship_type",
  })
  relationshipType?: string[];
}

export class GetEdgeResourceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: shared.Graph })
  graphs?: shared.Graph[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
