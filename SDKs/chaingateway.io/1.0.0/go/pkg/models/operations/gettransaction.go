// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GettransactionRequest struct {
	// Transaction hash
	Transaction string `pathParam:"style=simple,explode=false,name=transaction"`
}

type Gettransaction200ApplicationJSONDataLogs struct {
	Address          *string  `json:"address,omitempty"`
	BlockHash        *string  `json:"blockHash,omitempty"`
	BlockNumber      *string  `json:"blockNumber,omitempty"`
	Data             *string  `json:"data,omitempty"`
	LogIndex         *string  `json:"logIndex,omitempty"`
	Removed          *bool    `json:"removed,omitempty"`
	Topics           []string `json:"topics,omitempty"`
	TransactionHash  *string  `json:"transactionHash,omitempty"`
	TransactionIndex *string  `json:"transactionIndex,omitempty"`
}

type Gettransaction200ApplicationJSONData struct {
	BlockHash         *string                                    `json:"blockHash,omitempty"`
	BlockNumber       *string                                    `json:"blockNumber,omitempty"`
	CumulativeGasUsed *string                                    `json:"cumulativeGasUsed,omitempty"`
	EffectiveGasPrice *string                                    `json:"effectiveGasPrice,omitempty"`
	From              *string                                    `json:"from,omitempty"`
	GasUsed           *string                                    `json:"gasUsed,omitempty"`
	Logs              []Gettransaction200ApplicationJSONDataLogs `json:"logs,omitempty"`
	LogsBloom         *string                                    `json:"logsBloom,omitempty"`
	Status            *bool                                      `json:"status,omitempty"`
	To                *string                                    `json:"to,omitempty"`
	TransactionHash   *string                                    `json:"transactionHash,omitempty"`
	TransactionIndex  *string                                    `json:"transactionIndex,omitempty"`
	Type              *string                                    `json:"type,omitempty"`
}

// Gettransaction200ApplicationJSON - getTransactionReceipt (encoded)
type Gettransaction200ApplicationJSON struct {
	Data    []Gettransaction200ApplicationJSONData `json:"data,omitempty"`
	Message *string                                `json:"message,omitempty"`
	Ok      *bool                                  `json:"ok,omitempty"`
	Status  *float64                               `json:"status,omitempty"`
}

type GettransactionResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// getTransactionReceipt (encoded)
	Gettransaction200ApplicationJSONObject *Gettransaction200ApplicationJSON
}
