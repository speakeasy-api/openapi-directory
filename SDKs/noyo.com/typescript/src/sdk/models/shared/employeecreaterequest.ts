/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Employee employment dates
 */
export class EmployeeCreateRequestEmploymentEmploymentDates extends SpeakeasyBase {
  /**
   * ISO-8601 date string for start date as a full time employee with the group (if applicable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "full_time_start" })
  fullTimeStart?: string;

  /**
   * ISO-8601 date string for the hire date of the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hire_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  hireDate?: Date;

  /**
   * ISO-8601 date string for the rehire date of the employee (if applicable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rehire" })
  rehire?: string;

  /**
   * ISO-8601 date string for the retirement date of the employee (if applicable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retirement" })
  retirement?: string;

  /**
   * ISO-8601 date string for the termination date of the employee (if applicable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "terminated" })
  terminated?: string;
}

/**
 * Employee employment status at the company
 */
export enum EmployeeCreateRequestEmploymentEmploymentStatusEnum {
  Contract = "contract",
  Disabled = "disabled",
  FullTime = "full-time",
  PartTime = "part-time",
  Retired = "retired",
  Terminated = "terminated",
}

/**
 * Type of salary earned by the employee
 */
export enum EmployeeCreateRequestEmploymentSalaryTypeEnum {
  Hourly = "hourly",
  Salary = "salary",
}

/**
 * Unit of salary earned by the employee
 */
export enum EmployeeCreateRequestEmploymentSalaryUnitEnum {
  Annual = "annual",
  Hour = "hour",
  Month = "month",
  SemiMonthly = "semi-monthly",
  Week = "week",
}

/**
 * Employee salary information
 */
export class EmployeeCreateRequestEmploymentSalary extends SpeakeasyBase {
  /**
   * Amount of salary earned by the employee in US dollars
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * Type of salary earned by the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: EmployeeCreateRequestEmploymentSalaryTypeEnum;

  /**
   * Unit of salary earned by the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: EmployeeCreateRequestEmploymentSalaryUnitEnum;
}

/**
 * Employment information for the employee
 */
export class EmployeeCreateRequestEmployment extends SpeakeasyBase {
  /**
   * Employee employment dates
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employment_dates" })
  @Type(() => EmployeeCreateRequestEmploymentEmploymentDates)
  employmentDates?: EmployeeCreateRequestEmploymentEmploymentDates;

  /**
   * Employee employment status at the company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employment_status" })
  employmentStatus?: EmployeeCreateRequestEmploymentEmploymentStatusEnum;

  /**
   * Number of hours worked per week by the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hours_worked" })
  hoursWorked?: number;

  /**
   * Employee occupation or job title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "occupation" })
  occupation?: string;

  /**
   * Employee salary information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "salary" })
  @Type(() => EmployeeCreateRequestEmploymentSalary)
  salary?: EmployeeCreateRequestEmploymentSalary;
}

/**
 * Type of email address
 */
export enum EmployeeCreateRequestPersonContactEmailAddressTypeEnum {
  Home = "home",
  Work = "work",
}

/**
 * Preferred method of contact for the person
 */
export enum EmployeeCreateRequestPersonContactPreferredMethodEnum {
  Email = "email",
  HomePhone = "home-phone",
  Mail = "mail",
  Other = "other",
  WorkPhone = "work-phone",
}

/**
 * Contact information for the person
 */
export class EmployeeCreateRequestPersonContact extends SpeakeasyBase {
  /**
   * Email address of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email_address" })
  emailAddress?: string;

  /**
   * Type of email address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email_address_type" })
  emailAddressType?: EmployeeCreateRequestPersonContactEmailAddressTypeEnum;

  /**
   * Home phone number in E.164 format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "home_phone" })
  homePhone?: string;

  /**
   * Preferred written or spoken language of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preferred_language" })
  preferredLanguage?: string;

  /**
   * Preferred method of contact for the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preferred_method" })
  preferredMethod?: EmployeeCreateRequestPersonContactPreferredMethodEnum;

  /**
   * True if the person can speak or communicate in English
   */
  @SpeakeasyMetadata()
  @Expose({ name: "speaks_english" })
  speaksEnglish?: boolean;

  /**
   * Work phone number in E.164 format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "work_phone" })
  workPhone?: string;
}

/**
 * Primary state of the federally-recognized American Indian or Alaska Native tribe, if applicable
 */
export enum EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum {
  Ak = "AK",
  Al = "AL",
  Ar = "AR",
  As = "AS",
  Az = "AZ",
  Ca = "CA",
  Co = "CO",
  Ct = "CT",
  Dc = "DC",
  De = "DE",
  Fl = "FL",
  Fm = "FM",
  Ga = "GA",
  Gu = "GU",
  Hi = "HI",
  Ia = "IA",
  Id = "ID",
  Il = "IL",
  In = "IN",
  Ks = "KS",
  Ky = "KY",
  La = "LA",
  Ma = "MA",
  Md = "MD",
  Me = "ME",
  Mh = "MH",
  Mi = "MI",
  Mn = "MN",
  Mo = "MO",
  Mp = "MP",
  Ms = "MS",
  Mt = "MT",
  Nc = "NC",
  Nd = "ND",
  Ne = "NE",
  Nh = "NH",
  Nj = "NJ",
  Nm = "NM",
  Nv = "NV",
  Ny = "NY",
  Oh = "OH",
  Ok = "OK",
  Or = "OR",
  Pa = "PA",
  Pr = "PR",
  Pw = "PW",
  Ri = "RI",
  Sc = "SC",
  Sd = "SD",
  Tn = "TN",
  Tx = "TX",
  Um = "UM",
  Ut = "UT",
  Va = "VA",
  Vi = "VI",
  Vt = "VT",
  Wa = "WA",
  Wi = "WI",
  Wv = "WV",
  Wy = "WY",
}

/**
 * American Indian status details (if applicable)
 */
export class EmployeeCreateRequestPersonDetailsAmericanIndian extends SpeakeasyBase {
  /**
   * Primary state of the federally-recognized American Indian or Alaska Native tribe, if applicable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: EmployeeCreateRequestPersonDetailsAmericanIndianStateEnum;

  /**
   * Name of the federally-recognized American Indian or Alaska Native tribe, if applicable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tribe" })
  tribe?: string;
}

/**
 * Disability details (if applicable)
 */
export class EmployeeCreateRequestPersonDetailsDisability extends SpeakeasyBase {
  /**
   * True if the disability impacts the ability to communicate or read
   */
  @SpeakeasyMetadata()
  @Expose({ name: "communication" })
  communication?: boolean;

  /**
   * True if the member has a disability
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  /**
   * Description of the disability
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

/**
 * Type of tobacco use
 */
export enum EmployeeCreateRequestPersonDetailsTobaccoTypesEnum {
  ChewingTobacco = "chewing-tobacco",
  Cigarettes = "cigarettes",
  Pipe = "pipe",
}

/**
 * Tobacco usage details (if applicable)
 */
export class EmployeeCreateRequestPersonDetailsTobacco extends SpeakeasyBase {
  /**
   * Duration of tobacco use
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: string;

  /**
   * Frequency of tobacco use
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  frequency?: string;

  /**
   * List of types of tobacco use
   */
  @SpeakeasyMetadata()
  @Expose({ name: "types" })
  types?: EmployeeCreateRequestPersonDetailsTobaccoTypesEnum[];

  /**
   * True if the person uses tobacco of any kind
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: boolean;
}

/**
 * Additional personal details of the person
 */
export class EmployeeCreateRequestPersonDetails extends SpeakeasyBase {
  /**
   * American Indian status details (if applicable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "american_indian" })
  @Type(() => EmployeeCreateRequestPersonDetailsAmericanIndian)
  americanIndian?: EmployeeCreateRequestPersonDetailsAmericanIndian;

  /**
   * Disability details (if applicable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disability" })
  @Type(() => EmployeeCreateRequestPersonDetailsDisability)
  disability?: EmployeeCreateRequestPersonDetailsDisability;

  /**
   * True if the person is in the military
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_military" })
  isMilitary?: boolean;

  /**
   * True if the person is a student
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_student" })
  isStudent?: boolean;

  /**
   * Tobacco usage details (if applicable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tobacco" })
  @Type(() => EmployeeCreateRequestPersonDetailsTobacco)
  tobacco?: EmployeeCreateRequestPersonDetailsTobacco;
}

/**
 * State postal code of the address
 */
export enum EmployeeCreateRequestPersonHomeAddressStateEnum {
  Ak = "AK",
  Al = "AL",
  Ar = "AR",
  As = "AS",
  Az = "AZ",
  Ca = "CA",
  Co = "CO",
  Ct = "CT",
  Dc = "DC",
  De = "DE",
  Fl = "FL",
  Fm = "FM",
  Ga = "GA",
  Gu = "GU",
  Hi = "HI",
  Ia = "IA",
  Id = "ID",
  Il = "IL",
  In = "IN",
  Ks = "KS",
  Ky = "KY",
  La = "LA",
  Ma = "MA",
  Md = "MD",
  Me = "ME",
  Mh = "MH",
  Mi = "MI",
  Mn = "MN",
  Mo = "MO",
  Mp = "MP",
  Ms = "MS",
  Mt = "MT",
  Nc = "NC",
  Nd = "ND",
  Ne = "NE",
  Nh = "NH",
  Nj = "NJ",
  Nm = "NM",
  Nv = "NV",
  Ny = "NY",
  Oh = "OH",
  Ok = "OK",
  Or = "OR",
  Pa = "PA",
  Pr = "PR",
  Pw = "PW",
  Ri = "RI",
  Sc = "SC",
  Sd = "SD",
  Tn = "TN",
  Tx = "TX",
  Um = "UM",
  Ut = "UT",
  Va = "VA",
  Vi = "VI",
  Vt = "VT",
  Wa = "WA",
  Wi = "WI",
  Wv = "WV",
  Wy = "WY",
}

/**
 * Home address of the person
 */
export class EmployeeCreateRequestPersonHomeAddress extends SpeakeasyBase {
  /**
   * City of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  /**
   * County of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "county" })
  county?: string;

  /**
   * State postal code of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: EmployeeCreateRequestPersonHomeAddressStateEnum;

  /**
   * Line one of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street_one" })
  streetOne: string;

  /**
   * Line two of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street_two" })
  streetTwo?: string;

  /**
   * Zip code of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zip_code" })
  zipCode: string;
}

/**
 * State postal code of the address
 */
export enum EmployeeCreateRequestPersonMailingAddressStateEnum {
  Ak = "AK",
  Al = "AL",
  Ar = "AR",
  As = "AS",
  Az = "AZ",
  Ca = "CA",
  Co = "CO",
  Ct = "CT",
  Dc = "DC",
  De = "DE",
  Fl = "FL",
  Fm = "FM",
  Ga = "GA",
  Gu = "GU",
  Hi = "HI",
  Ia = "IA",
  Id = "ID",
  Il = "IL",
  In = "IN",
  Ks = "KS",
  Ky = "KY",
  La = "LA",
  Ma = "MA",
  Md = "MD",
  Me = "ME",
  Mh = "MH",
  Mi = "MI",
  Mn = "MN",
  Mo = "MO",
  Mp = "MP",
  Ms = "MS",
  Mt = "MT",
  Nc = "NC",
  Nd = "ND",
  Ne = "NE",
  Nh = "NH",
  Nj = "NJ",
  Nm = "NM",
  Nv = "NV",
  Ny = "NY",
  Oh = "OH",
  Ok = "OK",
  Or = "OR",
  Pa = "PA",
  Pr = "PR",
  Pw = "PW",
  Ri = "RI",
  Sc = "SC",
  Sd = "SD",
  Tn = "TN",
  Tx = "TX",
  Um = "UM",
  Ut = "UT",
  Va = "VA",
  Vi = "VI",
  Vt = "VT",
  Wa = "WA",
  Wi = "WI",
  Wv = "WV",
  Wy = "WY",
}

/**
 * Mailing address of the person
 */
export class EmployeeCreateRequestPersonMailingAddress extends SpeakeasyBase {
  /**
   * City of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  /**
   * County of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "county" })
  county?: string;

  /**
   * State postal code of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: EmployeeCreateRequestPersonMailingAddressStateEnum;

  /**
   * Line one of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street_one" })
  streetOne: string;

  /**
   * Line two of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street_two" })
  streetTwo?: string;

  /**
   * Zip code of the address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zip_code" })
  zipCode: string;
}

/**
 * Marital status of the person
 */
export enum EmployeeCreateRequestPersonMaritalStatusEnum {
  Divorced = "divorced",
  DomesticPartner = "domestic-partner",
  LegallySeparated = "legally-separated",
  Married = "married",
  Single = "single",
  Widowed = "widowed",
}

/**
 * Sex of the person
 */
export enum EmployeeCreateRequestPersonSexEnum {
  F = "F",
  M = "M",
  U = "U",
  X = "X",
}

/**
 * Personal information for the employee
 */
export class EmployeeCreateRequestPerson extends SpeakeasyBase {
  /**
   * Contact information for the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  @Type(() => EmployeeCreateRequestPersonContact)
  contact?: EmployeeCreateRequestPersonContact;

  /**
   * ISO-8601 date string for the date of birth of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_of_birth" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateOfBirth: Date;

  /**
   * Additional personal details of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  @Type(() => EmployeeCreateRequestPersonDetails)
  details?: EmployeeCreateRequestPersonDetails;

  /**
   * First name of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName: string;

  /**
   * Home address of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "home_address" })
  @Type(() => EmployeeCreateRequestPersonHomeAddress)
  homeAddress?: EmployeeCreateRequestPersonHomeAddress;

  /**
   * Last name of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName: string;

  /**
   * Mailing address of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mailing_address" })
  @Type(() => EmployeeCreateRequestPersonMailingAddress)
  mailingAddress?: EmployeeCreateRequestPersonMailingAddress;

  /**
   * Marital status of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marital_status" })
  maritalStatus?: EmployeeCreateRequestPersonMaritalStatusEnum;

  /**
   * Middle name of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "middle_name" })
  middleName?: string;

  /**
   * Sex of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sex" })
  sex: EmployeeCreateRequestPersonSexEnum;

  /**
   * Social Security Number of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ssn" })
  ssn?: string;

  /**
   * Suffix of the person
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suffix" })
  suffix?: string;
}

export class EmployeeCreateRequest extends SpeakeasyBase {
  /**
   * Employment information for the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employment" })
  @Type(() => EmployeeCreateRequestEmployment)
  employment?: EmployeeCreateRequestEmployment;

  /**
   * Personal information for the employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "person" })
  @Type(() => EmployeeCreateRequestPerson)
  person: EmployeeCreateRequestPerson;
}
