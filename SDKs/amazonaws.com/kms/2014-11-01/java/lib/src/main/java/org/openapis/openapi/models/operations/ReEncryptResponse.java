/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class ReEncryptResponse {
    
    public String contentType;

    public ReEncryptResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DependencyTimeoutException
     */
    
    public Object dependencyTimeoutException;

    public ReEncryptResponse withDependencyTimeoutException(Object dependencyTimeoutException) {
        this.dependencyTimeoutException = dependencyTimeoutException;
        return this;
    }
    
    /**
     * DisabledException
     */
    
    public Object disabledException;

    public ReEncryptResponse withDisabledException(Object disabledException) {
        this.disabledException = disabledException;
        return this;
    }
    
    /**
     * IncorrectKeyException
     */
    
    public Object incorrectKeyException;

    public ReEncryptResponse withIncorrectKeyException(Object incorrectKeyException) {
        this.incorrectKeyException = incorrectKeyException;
        return this;
    }
    
    /**
     * InvalidCiphertextException
     */
    
    public Object invalidCiphertextException;

    public ReEncryptResponse withInvalidCiphertextException(Object invalidCiphertextException) {
        this.invalidCiphertextException = invalidCiphertextException;
        return this;
    }
    
    /**
     * InvalidGrantTokenException
     */
    
    public Object invalidGrantTokenException;

    public ReEncryptResponse withInvalidGrantTokenException(Object invalidGrantTokenException) {
        this.invalidGrantTokenException = invalidGrantTokenException;
        return this;
    }
    
    /**
     * InvalidKeyUsageException
     */
    
    public Object invalidKeyUsageException;

    public ReEncryptResponse withInvalidKeyUsageException(Object invalidKeyUsageException) {
        this.invalidKeyUsageException = invalidKeyUsageException;
        return this;
    }
    
    /**
     * KMSInternalException
     */
    
    public Object kmsInternalException;

    public ReEncryptResponse withKMSInternalException(Object kmsInternalException) {
        this.kmsInternalException = kmsInternalException;
        return this;
    }
    
    /**
     * KMSInvalidStateException
     */
    
    public Object kmsInvalidStateException;

    public ReEncryptResponse withKMSInvalidStateException(Object kmsInvalidStateException) {
        this.kmsInvalidStateException = kmsInvalidStateException;
        return this;
    }
    
    /**
     * KeyUnavailableException
     */
    
    public Object keyUnavailableException;

    public ReEncryptResponse withKeyUnavailableException(Object keyUnavailableException) {
        this.keyUnavailableException = keyUnavailableException;
        return this;
    }
    
    /**
     * NotFoundException
     */
    
    public Object notFoundException;

    public ReEncryptResponse withNotFoundException(Object notFoundException) {
        this.notFoundException = notFoundException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.ReEncryptResponse reEncryptResponse;

    public ReEncryptResponse withReEncryptResponse(org.openapis.openapi.models.shared.ReEncryptResponse reEncryptResponse) {
        this.reEncryptResponse = reEncryptResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public ReEncryptResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public ReEncryptResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public ReEncryptResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
