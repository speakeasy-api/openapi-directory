"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScheduleBByRecipient:
    
    committee_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('committee_id') }})
    r"""A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits."""  
    cycle: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cycle') }})
    r"""Filter records to only those that were applicable to a given
    two-year period.The cycle begins with an odd year and is named
    for its ending, even year.
    """  
    recipient_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipient_name') }})
    r"""Name of the entity receiving the disbursement"""  
    committee_total_disbursements: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('committee_total_disbursements'), 'exclude': lambda f: f is None }})
    r"""Disbursements"""  
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Number of records making up the total."""  
    memo_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memo_count'), 'exclude': lambda f: f is None }})
    r"""Number of records making up the total."""  
    memo_total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memo_total'), 'exclude': lambda f: f is None }})
    r"""Schedule B disbursements aggregated by memoed items only"""  
    recipient_disbursement_percent: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipient_disbursement_percent'), 'exclude': lambda f: f is None }})  
    total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""Schedule B disbursements aggregated by non-memoed items only"""  
    