"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Optional

class Applications:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_network_insight_application_health_by_time(self, request: operations.GetNetworkInsightApplicationHealthByTimeRequest) -> operations.GetNetworkInsightApplicationHealthByTimeResponse:
        r"""Get application health by time
        Get application health by time
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetNetworkInsightApplicationHealthByTimeRequest, base_url, '/networks/{networkId}/insight/applications/{applicationId}/healthByTime', request)
        
        query_params = utils.get_query_params(operations.GetNetworkInsightApplicationHealthByTimeRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetNetworkInsightApplicationHealthByTimeResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[list[operations.GetNetworkInsightApplicationHealthByTime200ApplicationJSON]])
                res.get_network_insight_application_health_by_time_200_application_json_objects = out

        return res

    def get_organization_insight_applications(self, request: operations.GetOrganizationInsightApplicationsRequest) -> operations.GetOrganizationInsightApplicationsResponse:
        r"""List all Insight tracked applications
        List all Insight tracked applications
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetOrganizationInsightApplicationsRequest, base_url, '/organizations/{organizationId}/insight/applications', request)
        
        
        client = self._security_client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetOrganizationInsightApplicationsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[list[operations.GetOrganizationInsightApplications200ApplicationJSON]])
                res.get_organization_insight_applications_200_application_json_objects = out

        return res

    