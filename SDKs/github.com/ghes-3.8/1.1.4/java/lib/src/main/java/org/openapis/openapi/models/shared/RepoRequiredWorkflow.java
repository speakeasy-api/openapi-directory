/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * RepoRequiredWorkflow - A GitHub Actions required workflow
 */
public class RepoRequiredWorkflow {
    @JsonProperty("badge_url")
    public String badgeUrl;
    public RepoRequiredWorkflow withBadgeUrl(String badgeUrl) {
        this.badgeUrl = badgeUrl;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public RepoRequiredWorkflow withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;
    public RepoRequiredWorkflow withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;
    public RepoRequiredWorkflow withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public RepoRequiredWorkflow withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;
    public RepoRequiredWorkflow withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    @JsonProperty("path")
    public String path;
    public RepoRequiredWorkflow withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Minimal Repository
     */
    @JsonProperty("source_repository")
    public MinimalRepository sourceRepository;
    public RepoRequiredWorkflow withSourceRepository(MinimalRepository sourceRepository) {
        this.sourceRepository = sourceRepository;
        return this;
    }
    
    @JsonProperty("state")
    public RepoRequiredWorkflowStateEnum state;
    public RepoRequiredWorkflow withState(RepoRequiredWorkflowStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public RepoRequiredWorkflow withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("url")
    public String url;
    public RepoRequiredWorkflow withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
