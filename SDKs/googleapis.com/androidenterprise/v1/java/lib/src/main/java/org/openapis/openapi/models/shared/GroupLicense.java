/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GroupLicense - Group license objects allow you to keep track of licenses (called entitlements) for both free and paid apps. For a free app, a group license is created when an enterprise admin first approves the product in Google Play or when the first entitlement for the product is created for a user via the API. For a paid app, a group license object is only created when an enterprise admin purchases the product in Google Play for the first time. Use the API to query group licenses. A Grouplicenses resource includes the total number of licenses purchased (paid apps only) and the total number of licenses currently in use. In other words, the total number of Entitlements that exist for the product. Only one group license object is created per product and group license objects are never deleted. If a product is unapproved, its group license remains. This allows enterprise admins to keep track of any remaining entitlements for the product.
 */
public class GroupLicense {
    /**
     * How this group license was acquired. "bulkPurchase" means that this Grouplicenses resource was created because the enterprise purchased licenses for this product; otherwise, the value is "free" (for free products).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acquisitionKind")
    public GroupLicenseAcquisitionKindEnum acquisitionKind;

    public GroupLicense withAcquisitionKind(GroupLicenseAcquisitionKindEnum acquisitionKind) {
        this.acquisitionKind = acquisitionKind;
        return this;
    }
    
    /**
     * Whether the product to which this group license relates is currently approved by the enterprise. Products are approved when a group license is first created, but this approval may be revoked by an enterprise admin via Google Play. Unapproved products will not be visible to end users in collections, and new entitlements to them should not normally be created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approval")
    public GroupLicenseApprovalEnum approval;

    public GroupLicense withApproval(GroupLicenseApprovalEnum approval) {
        this.approval = approval;
        return this;
    }
    
    /**
     * The total number of provisioned licenses for this product. Returned by read operations, but ignored in write operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numProvisioned")
    public Integer numProvisioned;

    public GroupLicense withNumProvisioned(Integer numProvisioned) {
        this.numProvisioned = numProvisioned;
        return this;
    }
    
    /**
     * The number of purchased licenses (possibly in multiple purchases). If this field is omitted, then there is no limit on the number of licenses that can be provisioned (for example, if the acquisition kind is "free").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numPurchased")
    public Integer numPurchased;

    public GroupLicense withNumPurchased(Integer numPurchased) {
        this.numPurchased = numPurchased;
        return this;
    }
    
    /**
     * The permission approval status of the product. This field is only set if the product is approved. Possible states are: - "currentApproved", the current set of permissions is approved, but additional permissions will require the administrator to reapprove the product (If the product was approved without specifying the approved permissions setting, then this is the default behavior.), - "needsReapproval", the product has unapproved permissions. No additional product licenses can be assigned until the product is reapproved, - "allCurrentAndFutureApproved", the current permissions are approved and any future permission updates will be automatically approved without administrator review. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public GroupLicensePermissionsEnum permissions;

    public GroupLicense withPermissions(GroupLicensePermissionsEnum permissions) {
        this.permissions = permissions;
        return this;
    }
    
    /**
     * The ID of the product that the license is for. For example, "app:com.google.android.gm".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productId")
    public String productId;

    public GroupLicense withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    public GroupLicense(){}
}
