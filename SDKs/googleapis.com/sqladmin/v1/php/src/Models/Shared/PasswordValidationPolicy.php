<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PasswordValidationPolicy - Database instance local user password validation policy
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PasswordValidationPolicy
{
    /**
     * The complexity of the password.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PasswordValidationPolicyComplexityEnum $complexity
     */
	#[\JMS\Serializer\Annotation\SerializedName('complexity')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PasswordValidationPolicyComplexityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PasswordValidationPolicyComplexityEnum $complexity = null;
    
    /**
     * Disallow username as a part of the password.
     * 
     * @var ?bool $disallowUsernameSubstring
     */
	#[\JMS\Serializer\Annotation\SerializedName('disallowUsernameSubstring')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disallowUsernameSubstring = null;
    
    /**
     * Whether the password policy is enabled or not.
     * 
     * @var ?bool $enablePasswordPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('enablePasswordPolicy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enablePasswordPolicy = null;
    
    /**
     * Minimum number of characters allowed.
     * 
     * @var ?int $minLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('minLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minLength = null;
    
    /**
     * Minimum interval after which the password can be changed. This flag is only supported for PostgreSQL.
     * 
     * @var ?string $passwordChangeInterval
     */
	#[\JMS\Serializer\Annotation\SerializedName('passwordChangeInterval')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $passwordChangeInterval = null;
    
    /**
     * Number of previous passwords that cannot be reused.
     * 
     * @var ?int $reuseInterval
     */
	#[\JMS\Serializer\Annotation\SerializedName('reuseInterval')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $reuseInterval = null;
    
	public function __construct()
	{
		$this->complexity = null;
		$this->disallowUsernameSubstring = null;
		$this->enablePasswordPolicy = null;
		$this->minLength = null;
		$this->passwordChangeInterval = null;
		$this->reuseInterval = null;
	}
}
