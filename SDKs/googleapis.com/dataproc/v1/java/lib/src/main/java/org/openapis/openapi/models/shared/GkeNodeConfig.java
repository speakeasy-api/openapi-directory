/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GkeNodeConfig - Parameters that describe cluster nodes.
 */
public class GkeNodeConfig {
    /**
     * Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accelerators")
    public GkeNodePoolAcceleratorConfig[] accelerators;

    public GkeNodeConfig withAccelerators(GkeNodePoolAcceleratorConfig[] accelerators) {
        this.accelerators = accelerators;
        return this;
    }
    
    /**
     * Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/KEY_PROJECT_ID/locations/LOCATION /keyRings/RING_NAME/cryptoKeys/KEY_NAME.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bootDiskKmsKey")
    public String bootDiskKmsKey;

    public GkeNodeConfig withBootDiskKmsKey(String bootDiskKmsKey) {
        this.bootDiskKmsKey = bootDiskKmsKey;
        return this;
    }
    
    /**
     * Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localSsdCount")
    public Integer localSsdCount;

    public GkeNodeConfig withLocalSsdCount(Integer localSsdCount) {
        this.localSsdCount = localSsdCount;
        return this;
    }
    
    /**
     * Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineType")
    public String machineType;

    public GkeNodeConfig withMachineType(String machineType) {
        this.machineType = machineType;
        return this;
    }
    
    /**
     * Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minCpuPlatform")
    public String minCpuPlatform;

    public GkeNodeConfig withMinCpuPlatform(String minCpuPlatform) {
        this.minCpuPlatform = minCpuPlatform;
        return this;
    }
    
    /**
     * Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preemptible")
    public Boolean preemptible;

    public GkeNodeConfig withPreemptible(Boolean preemptible) {
        this.preemptible = preemptible;
        return this;
    }
    
    /**
     * Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spot")
    public Boolean spot;

    public GkeNodeConfig withSpot(Boolean spot) {
        this.spot = spot;
        return this;
    }
    
    public GkeNodeConfig(){}
}
