/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DimensionGroup - &lt;p&gt;A logical grouping of Performance Insights metrics for a related subject area. For example, the &lt;code&gt;db.sql&lt;/code&gt; dimension group consists of the following dimensions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;db.sql.id&lt;/code&gt; - The hash of a running SQL statement, generated by Performance Insights.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;db.sql.db_id&lt;/code&gt; - Either the SQL ID generated by the database engine, or a value generated by Performance Insights that begins with &lt;code&gt;pi-&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;db.sql.statement&lt;/code&gt; - The full text of the SQL statement that is running, for example, &lt;code&gt;SELECT * FROM employees&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;db.sql_tokenized.id&lt;/code&gt; - The hash of the SQL digest generated by Performance Insights.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements, only the first 500 bytes are returned.&lt;/p&gt; &lt;/note&gt;
 */
public class DimensionGroup {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Dimensions")
    public String[] dimensions;
    public DimensionGroup withDimensions(String[] dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    @JsonProperty("Group")
    public String group;
    public DimensionGroup withGroup(String group) {
        this.group = group;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Limit")
    public Long limit;
    public DimensionGroup withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
}
