"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import additionalartifact_enum as shared_additionalartifact_enum
from ..shared import awsregion_enum as shared_awsregion_enum
from ..shared import compressionformat_enum as shared_compressionformat_enum
from ..shared import reportformat_enum as shared_reportformat_enum
from ..shared import reportversioning_enum as shared_reportversioning_enum
from ..shared import schemaelement_enum as shared_schemaelement_enum
from ..shared import timeunit_enum as shared_timeunit_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportDefinition:
    r"""The definition of AWS Cost and Usage Report. You can specify the report name, time unit, report format, compression format, S3 bucket, additional artifacts, and schema elements in the definition."""
    
    additional_schema_elements: list[shared_schemaelement_enum.SchemaElementEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalSchemaElements') }})  
    compression: shared_compressionformat_enum.CompressionFormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Compression') }})
    r"""The compression format that AWS uses for the report."""  
    format: shared_reportformat_enum.ReportFormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Format') }})
    r"""The format that AWS saves the report in."""  
    report_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReportName') }})
    r"""The name of the report that you want to create. The name must be unique, is case sensitive, and can't include spaces."""  
    s3_bucket: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Bucket') }})
    r"""The S3 bucket where AWS delivers the report."""  
    s3_prefix: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Prefix') }})
    r"""The prefix that AWS adds to the report name when AWS delivers the report. Your prefix can't include spaces."""  
    s3_region: shared_awsregion_enum.AWSRegionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Region') }})
    r"""The region of the S3 bucket that AWS delivers the report into."""  
    time_unit: shared_timeunit_enum.TimeUnitEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimeUnit') }})
    r"""The length of time covered by the report."""  
    additional_artifacts: Optional[list[shared_additionalartifact_enum.AdditionalArtifactEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalArtifacts'), 'exclude': lambda f: f is None }})  
    billing_view_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillingViewArn'), 'exclude': lambda f: f is None }})  
    refresh_closed_reports: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RefreshClosedReports'), 'exclude': lambda f: f is None }})  
    report_versioning: Optional[shared_reportversioning_enum.ReportVersioningEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReportVersioning'), 'exclude': lambda f: f is None }})  
    