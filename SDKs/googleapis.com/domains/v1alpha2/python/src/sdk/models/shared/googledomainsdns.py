"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dsrecord as shared_dsrecord
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleDomainsDNSDsStateEnum(str, Enum):
    r"""Required. The state of DS records for this domain. Used to enable or disable automatic DNSSEC."""
    DS_STATE_UNSPECIFIED = 'DS_STATE_UNSPECIFIED'
    DS_RECORDS_UNPUBLISHED = 'DS_RECORDS_UNPUBLISHED'
    DS_RECORDS_PUBLISHED = 'DS_RECORDS_PUBLISHED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleDomainsDNSInput:
    r"""Configuration for using the free DNS zone provided by Google Domains as a `Registration`'s `dns_provider`. You cannot configure the DNS zone itself using the API. To configure the DNS zone, go to [Google Domains](https://domains.google/)."""
    
    ds_state: Optional[GoogleDomainsDNSDsStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dsState'), 'exclude': lambda f: f is None }})
    r"""Required. The state of DS records for this domain. Used to enable or disable automatic DNSSEC."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleDomainsDNS:
    r"""Configuration for using the free DNS zone provided by Google Domains as a `Registration`'s `dns_provider`. You cannot configure the DNS zone itself using the API. To configure the DNS zone, go to [Google Domains](https://domains.google/)."""
    
    ds_records: Optional[list[shared_dsrecord.DsRecord]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dsRecords'), 'exclude': lambda f: f is None }})
    r"""Output only. The list of DS records published for this domain. The list is automatically populated when `ds_state` is `DS_RECORDS_PUBLISHED`, otherwise it remains empty."""  
    ds_state: Optional[GoogleDomainsDNSDsStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dsState'), 'exclude': lambda f: f is None }})
    r"""Required. The state of DS records for this domain. Used to enable or disable automatic DNSSEC."""  
    name_servers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameServers'), 'exclude': lambda f: f is None }})
    r"""Output only. A list of name servers that store the DNS zone for this domain. Each name server is a domain name, with Unicode domain names expressed in Punycode format. This field is automatically populated with the name servers assigned to the Google Domains DNS zone."""  
    