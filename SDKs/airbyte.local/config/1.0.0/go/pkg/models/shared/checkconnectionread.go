// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CheckConnectionReadStatusEnum string

const (
	CheckConnectionReadStatusEnumSucceeded CheckConnectionReadStatusEnum = "succeeded"
	CheckConnectionReadStatusEnumFailed    CheckConnectionReadStatusEnum = "failed"
)

func (e *CheckConnectionReadStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "succeeded":
		fallthrough
	case "failed":
		*e = CheckConnectionReadStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckConnectionReadStatusEnum: %s", s)
	}
}

// CheckConnectionRead - Successful operation
type CheckConnectionRead struct {
	JobInfo SynchronousJobRead            `json:"jobInfo"`
	Message *string                       `json:"message,omitempty"`
	Status  CheckConnectionReadStatusEnum `json:"status"`
}
