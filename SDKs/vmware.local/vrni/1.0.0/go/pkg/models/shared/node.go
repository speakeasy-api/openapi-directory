// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NodeNodeTypeEnum string

const (
	NodeNodeTypeEnumProxyVM    NodeNodeTypeEnum = "PROXY_VM"
	NodeNodeTypeEnumPlatformVM NodeNodeTypeEnum = "PLATFORM_VM"
)

func (e *NodeNodeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROXY_VM":
		fallthrough
	case "PLATFORM_VM":
		*e = NodeNodeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeNodeTypeEnum: %s", s)
	}
}

// Node - OK
type Node struct {
	EntityType *NodeTypeEnum     `json:"entity_type,omitempty"`
	ID         *string           `json:"id,omitempty"`
	IPAddress  *string           `json:"ip_address,omitempty"`
	Name       *string           `json:"name,omitempty"`
	NodeID     *string           `json:"node_id,omitempty"`
	NodeType   *NodeNodeTypeEnum `json:"node_type,omitempty"`
}
