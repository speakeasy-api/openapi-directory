// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConferenceParticipantEnumCallStatusEnum string

const (
	ConferenceParticipantEnumCallStatusEnumAnswered  ConferenceParticipantEnumCallStatusEnum = "answered"
	ConferenceParticipantEnumCallStatusEnumCompleted ConferenceParticipantEnumCallStatusEnum = "completed"
	ConferenceParticipantEnumCallStatusEnumBusy      ConferenceParticipantEnumCallStatusEnum = "busy"
	ConferenceParticipantEnumCallStatusEnumFail      ConferenceParticipantEnumCallStatusEnum = "fail"
	ConferenceParticipantEnumCallStatusEnumNoanswer  ConferenceParticipantEnumCallStatusEnum = "noanswer"
	ConferenceParticipantEnumCallStatusEnumRinging   ConferenceParticipantEnumCallStatusEnum = "ringing"
	ConferenceParticipantEnumCallStatusEnumCanceled  ConferenceParticipantEnumCallStatusEnum = "canceled"
)

func (e ConferenceParticipantEnumCallStatusEnum) ToPointer() *ConferenceParticipantEnumCallStatusEnum {
	return &e
}

func (e *ConferenceParticipantEnumCallStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "answered":
		fallthrough
	case "completed":
		fallthrough
	case "busy":
		fallthrough
	case "fail":
		fallthrough
	case "noanswer":
		fallthrough
	case "ringing":
		fallthrough
	case "canceled":
		*e = ConferenceParticipantEnumCallStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConferenceParticipantEnumCallStatusEnum: %v", v)
	}
}
