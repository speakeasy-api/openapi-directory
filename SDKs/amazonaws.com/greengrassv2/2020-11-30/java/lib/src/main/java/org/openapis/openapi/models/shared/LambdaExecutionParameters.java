/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LambdaExecutionParameters - Contains parameters for a Lambda function that runs on IoT Greengrass.
 */
public class LambdaExecutionParameters {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentVariables")
    public java.util.Map<String, String> environmentVariables;
    public LambdaExecutionParameters withEnvironmentVariables(java.util.Map<String, String> environmentVariables) {
        this.environmentVariables = environmentVariables;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventSources")
    public LambdaEventSource[] eventSources;
    public LambdaExecutionParameters withEventSources(LambdaEventSource[] eventSources) {
        this.eventSources = eventSources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("execArgs")
    public String[] execArgs;
    public LambdaExecutionParameters withExecArgs(String[] execArgs) {
        this.execArgs = execArgs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputPayloadEncodingType")
    public LambdaInputPayloadEncodingTypeEnum inputPayloadEncodingType;
    public LambdaExecutionParameters withInputPayloadEncodingType(LambdaInputPayloadEncodingTypeEnum inputPayloadEncodingType) {
        this.inputPayloadEncodingType = inputPayloadEncodingType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linuxProcessParams")
    public LambdaLinuxProcessParams linuxProcessParams;
    public LambdaExecutionParameters withLinuxProcessParams(LambdaLinuxProcessParams linuxProcessParams) {
        this.linuxProcessParams = linuxProcessParams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxIdleTimeInSeconds")
    public Long maxIdleTimeInSeconds;
    public LambdaExecutionParameters withMaxIdleTimeInSeconds(Long maxIdleTimeInSeconds) {
        this.maxIdleTimeInSeconds = maxIdleTimeInSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxInstancesCount")
    public Long maxInstancesCount;
    public LambdaExecutionParameters withMaxInstancesCount(Long maxInstancesCount) {
        this.maxInstancesCount = maxInstancesCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxQueueSize")
    public Long maxQueueSize;
    public LambdaExecutionParameters withMaxQueueSize(Long maxQueueSize) {
        this.maxQueueSize = maxQueueSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pinned")
    public Boolean pinned;
    public LambdaExecutionParameters withPinned(Boolean pinned) {
        this.pinned = pinned;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusTimeoutInSeconds")
    public Long statusTimeoutInSeconds;
    public LambdaExecutionParameters withStatusTimeoutInSeconds(Long statusTimeoutInSeconds) {
        this.statusTimeoutInSeconds = statusTimeoutInSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeoutInSeconds")
    public Long timeoutInSeconds;
    public LambdaExecutionParameters withTimeoutInSeconds(Long timeoutInSeconds) {
        this.timeoutInSeconds = timeoutInSeconds;
        return this;
    }
    
}
