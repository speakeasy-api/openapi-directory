// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MessageCode401PISEnum - Message codes defined for PIS for HTTP Error code 401 (UNAUTHORIZED).
type MessageCode401PISEnum string

const (
	MessageCode401PISEnumCertificateInvalid    MessageCode401PISEnum = "CERTIFICATE_INVALID"
	MessageCode401PISEnumRoleInvalid           MessageCode401PISEnum = "ROLE_INVALID"
	MessageCode401PISEnumCertificateExpired    MessageCode401PISEnum = "CERTIFICATE_EXPIRED"
	MessageCode401PISEnumCertificateBlocked    MessageCode401PISEnum = "CERTIFICATE_BLOCKED"
	MessageCode401PISEnumCertificateRevoke     MessageCode401PISEnum = "CERTIFICATE_REVOKE"
	MessageCode401PISEnumCertificateMissing    MessageCode401PISEnum = "CERTIFICATE_MISSING"
	MessageCode401PISEnumSignatureInvalid      MessageCode401PISEnum = "SIGNATURE_INVALID"
	MessageCode401PISEnumSignatureMissing      MessageCode401PISEnum = "SIGNATURE_MISSING"
	MessageCode401PISEnumCorporateIDInvalid    MessageCode401PISEnum = "CORPORATE_ID_INVALID"
	MessageCode401PISEnumPsuCredentialsInvalid MessageCode401PISEnum = "PSU_CREDENTIALS_INVALID"
	MessageCode401PISEnumConsentInvalid        MessageCode401PISEnum = "CONSENT_INVALID"
	MessageCode401PISEnumConsentExpired        MessageCode401PISEnum = "CONSENT_EXPIRED"
	MessageCode401PISEnumTokenUnknown          MessageCode401PISEnum = "TOKEN_UNKNOWN"
	MessageCode401PISEnumTokenInvalid          MessageCode401PISEnum = "TOKEN_INVALID"
	MessageCode401PISEnumTokenExpired          MessageCode401PISEnum = "TOKEN_EXPIRED"
	MessageCode401PISEnumRequiredKidMissing    MessageCode401PISEnum = "REQUIRED_KID_MISSING"
)

func (e *MessageCode401PISEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CERTIFICATE_INVALID":
		fallthrough
	case "ROLE_INVALID":
		fallthrough
	case "CERTIFICATE_EXPIRED":
		fallthrough
	case "CERTIFICATE_BLOCKED":
		fallthrough
	case "CERTIFICATE_REVOKE":
		fallthrough
	case "CERTIFICATE_MISSING":
		fallthrough
	case "SIGNATURE_INVALID":
		fallthrough
	case "SIGNATURE_MISSING":
		fallthrough
	case "CORPORATE_ID_INVALID":
		fallthrough
	case "PSU_CREDENTIALS_INVALID":
		fallthrough
	case "CONSENT_INVALID":
		fallthrough
	case "CONSENT_EXPIRED":
		fallthrough
	case "TOKEN_UNKNOWN":
		fallthrough
	case "TOKEN_INVALID":
		fallthrough
	case "TOKEN_EXPIRED":
		fallthrough
	case "REQUIRED_KID_MISSING":
		*e = MessageCode401PISEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageCode401PISEnum: %s", s)
	}
}
