/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RunReportResponse - The response report table corresponding to a request.
 */
public class RunReportResponse {
    /**
     * Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensionHeaders")
    public DimensionHeader[] dimensionHeaders;

    public RunReportResponse withDimensionHeaders(DimensionHeader[] dimensionHeaders) {
        this.dimensionHeaders = dimensionHeaders;
        return this;
    }
    
    /**
     * Identifies what kind of resource this message is. This `kind` is always the fixed string "analyticsData#runReport". Useful to distinguish between response types in JSON.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public RunReportResponse withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * If requested, the maximum values of metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximums")
    public Row[] maximums;

    public RunReportResponse withMaximums(Row[] maximums) {
        this.maximums = maximums;
        return this;
    }
    
    /**
     * Response's metadata carrying additional information about the report content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public ResponseMetaData metadata;

    public RunReportResponse withMetadata(ResponseMetaData metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricHeaders")
    public MetricHeader[] metricHeaders;

    public RunReportResponse withMetricHeaders(MetricHeader[] metricHeaders) {
        this.metricHeaders = metricHeaders;
        return this;
    }
    
    /**
     * If requested, the minimum values of metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimums")
    public Row[] minimums;

    public RunReportResponse withMinimums(Row[] minimums) {
        this.minimums = minimums;
        return this;
    }
    
    /**
     * Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("propertyQuota")
    public PropertyQuota propertyQuota;

    public RunReportResponse withPropertyQuota(PropertyQuota propertyQuota) {
        this.propertyQuota = propertyQuota;
        return this;
    }
    
    /**
     * The total number of rows in the query result. `rowCount` is independent of the number of rows returned in the response, the `limit` request parameter, and the `offset` request parameter. For example if a query returns 175 rows and includes `limit` of 50 in the API request, the response will contain `rowCount` of 175 but only 50 rows. To learn more about this pagination parameter, see [Pagination](https://developers.google.com/analytics/devguides/reporting/data/v1/basics#pagination).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rowCount")
    public Integer rowCount;

    public RunReportResponse withRowCount(Integer rowCount) {
        this.rowCount = rowCount;
        return this;
    }
    
    /**
     * Rows of dimension value combinations and metric values in the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public Row[] rows;

    public RunReportResponse withRows(Row[] rows) {
        this.rows = rows;
        return this;
    }
    
    /**
     * If requested, the totaled values of metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totals")
    public Row[] totals;

    public RunReportResponse withTotals(Row[] totals) {
        this.totals = totals;
        return this;
    }
    
    public RunReportResponse(){}
}
