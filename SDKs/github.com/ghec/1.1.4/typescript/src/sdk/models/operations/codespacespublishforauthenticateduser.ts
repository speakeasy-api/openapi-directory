/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CodespacesPublishForAuthenticatedUserRequestBody extends SpeakeasyBase {
  /**
   * A name for the new repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Whether the new repository should be private.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "private" })
  private?: boolean;
}

export class CodespacesPublishForAuthenticatedUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CodespacesPublishForAuthenticatedUserRequestBody;

  /**
   * The name of the codespace.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=codespace_name",
  })
  codespaceName: string;
}

export class CodespacesPublishForAuthenticatedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  codespaceWithFullRepository?: shared.CodespaceWithFullRepository;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
