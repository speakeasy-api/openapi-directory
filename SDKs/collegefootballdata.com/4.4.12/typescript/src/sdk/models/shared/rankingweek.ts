/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class RankingWeekPollsRanks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "conference" })
  conference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstPlaceVotes" })
  firstPlaceVotes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "points" })
  points?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "rank" })
  rank?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "school" })
  school?: string;
}

export class RankingWeekPolls extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "poll" })
  poll?: string;

  @SpeakeasyMetadata({ elemType: RankingWeekPollsRanks })
  @Expose({ name: "ranks" })
  @Type(() => RankingWeekPollsRanks)
  ranks?: RankingWeekPollsRanks[];
}

export class RankingWeek extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: RankingWeekPolls })
  @Expose({ name: "polls" })
  @Type(() => RankingWeekPolls)
  polls?: RankingWeekPolls[];

  @SpeakeasyMetadata()
  @Expose({ name: "season" })
  season?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "seasonType" })
  seasonType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "week" })
  week?: number;
}
