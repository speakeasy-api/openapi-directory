/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QuerySchedule - Information on when and how frequently to run a query.
 */
public class QuerySchedule {
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endDate")
    public Date endDate;

    public QuerySchedule withEndDate(Date endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * How often the query is run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frequency")
    public QueryScheduleFrequencyEnum frequency;

    public QuerySchedule withFrequency(QueryScheduleFrequencyEnum frequency) {
        this.frequency = frequency;
        return this;
    }
    
    /**
     * Canonical timezone code for report generation time. Defaults to `America/New_York`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextRunTimezoneCode")
    public String nextRunTimezoneCode;

    public QuerySchedule withNextRunTimezoneCode(String nextRunTimezoneCode) {
        this.nextRunTimezoneCode = nextRunTimezoneCode;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startDate")
    public Date startDate;

    public QuerySchedule withStartDate(Date startDate) {
        this.startDate = startDate;
        return this;
    }
    
    public QuerySchedule(){}
}
