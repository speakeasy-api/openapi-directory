// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListPastMeetingFilesSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ListPastMeetingFilesRequest struct {
	// The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
	//
	// While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
	MeetingID int64 `pathParam:"style=simple,explode=false,name=meetingId"`
}

type ListPastMeetingFiles200ApplicationXMLInMeetingFiles struct {
	// URL to download the file.
	DownloadURL *string
	// Name of the file.
	FileName *string
	// Size of the file in bytes.
	FileSize *int64
}

// ListPastMeetingFiles200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// Files retrieved successfully.
type ListPastMeetingFiles200ApplicationXML struct {
	InMeetingFiles []ListPastMeetingFiles200ApplicationXMLInMeetingFiles
	// The total number of files found.
	TotalRecords *int64
}

type ListPastMeetingFiles200ApplicationJSONInMeetingFiles struct {
	// URL to download the file.
	DownloadURL *string `json:"download_url,omitempty"`
	// Name of the file.
	FileName *string `json:"file_name,omitempty"`
	// Size of the file in bytes.
	FileSize *int64 `json:"file_size,omitempty"`
}

// ListPastMeetingFiles200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// Files retrieved successfully.
type ListPastMeetingFiles200ApplicationJSON struct {
	InMeetingFiles []ListPastMeetingFiles200ApplicationJSONInMeetingFiles `json:"in_meeting_files,omitempty"`
	// The total number of files found.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type ListPastMeetingFilesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// Files retrieved successfully.
	ListPastMeetingFiles200ApplicationJSONObject *ListPastMeetingFiles200ApplicationJSON
}
