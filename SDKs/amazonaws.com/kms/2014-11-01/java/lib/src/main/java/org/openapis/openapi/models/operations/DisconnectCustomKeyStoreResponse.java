/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DisconnectCustomKeyStoreResponse {
    
    public String contentType;

    public DisconnectCustomKeyStoreResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * CustomKeyStoreInvalidStateException
     */
    
    public Object customKeyStoreInvalidStateException;

    public DisconnectCustomKeyStoreResponse withCustomKeyStoreInvalidStateException(Object customKeyStoreInvalidStateException) {
        this.customKeyStoreInvalidStateException = customKeyStoreInvalidStateException;
        return this;
    }
    
    /**
     * CustomKeyStoreNotFoundException
     */
    
    public Object customKeyStoreNotFoundException;

    public DisconnectCustomKeyStoreResponse withCustomKeyStoreNotFoundException(Object customKeyStoreNotFoundException) {
        this.customKeyStoreNotFoundException = customKeyStoreNotFoundException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> disconnectCustomKeyStoreResponse;

    public DisconnectCustomKeyStoreResponse withDisconnectCustomKeyStoreResponse(java.util.Map<String, Object> disconnectCustomKeyStoreResponse) {
        this.disconnectCustomKeyStoreResponse = disconnectCustomKeyStoreResponse;
        return this;
    }
    
    /**
     * KMSInternalException
     */
    
    public Object kmsInternalException;

    public DisconnectCustomKeyStoreResponse withKMSInternalException(Object kmsInternalException) {
        this.kmsInternalException = kmsInternalException;
        return this;
    }
    
    
    public Integer statusCode;

    public DisconnectCustomKeyStoreResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DisconnectCustomKeyStoreResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public DisconnectCustomKeyStoreResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
