"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionOffer = exports.SubscriptionOfferStateEnum = exports.SubscriptionOfferInput = void 0;
var utils_1 = require("../../../internal/utils");
var offertag_1 = require("./offertag");
var otherregionssubscriptionofferconfig_1 = require("./otherregionssubscriptionofferconfig");
var regionalsubscriptionofferconfig_1 = require("./regionalsubscriptionofferconfig");
var subscriptionofferphase_1 = require("./subscriptionofferphase");
var subscriptionoffertargeting_1 = require("./subscriptionoffertargeting");
var class_transformer_1 = require("class-transformer");
/**
 * A single, temporary offer
 */
var SubscriptionOfferInput = /** @class */ (function (_super) {
    __extends(SubscriptionOfferInput, _super);
    function SubscriptionOfferInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "basePlanId" }),
        __metadata("design:type", String)
    ], SubscriptionOfferInput.prototype, "basePlanId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "offerId" }),
        __metadata("design:type", String)
    ], SubscriptionOfferInput.prototype, "offerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: offertag_1.OfferTag }),
        (0, class_transformer_1.Expose)({ name: "offerTags" }),
        (0, class_transformer_1.Type)(function () { return offertag_1.OfferTag; }),
        __metadata("design:type", Array)
    ], SubscriptionOfferInput.prototype, "offerTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "otherRegionsConfig" }),
        (0, class_transformer_1.Type)(function () { return otherregionssubscriptionofferconfig_1.OtherRegionsSubscriptionOfferConfig; }),
        __metadata("design:type", otherregionssubscriptionofferconfig_1.OtherRegionsSubscriptionOfferConfig)
    ], SubscriptionOfferInput.prototype, "otherRegionsConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packageName" }),
        __metadata("design:type", String)
    ], SubscriptionOfferInput.prototype, "packageName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: subscriptionofferphase_1.SubscriptionOfferPhase }),
        (0, class_transformer_1.Expose)({ name: "phases" }),
        (0, class_transformer_1.Type)(function () { return subscriptionofferphase_1.SubscriptionOfferPhase; }),
        __metadata("design:type", Array)
    ], SubscriptionOfferInput.prototype, "phases", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "productId" }),
        __metadata("design:type", String)
    ], SubscriptionOfferInput.prototype, "productId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: regionalsubscriptionofferconfig_1.RegionalSubscriptionOfferConfig }),
        (0, class_transformer_1.Expose)({ name: "regionalConfigs" }),
        (0, class_transformer_1.Type)(function () { return regionalsubscriptionofferconfig_1.RegionalSubscriptionOfferConfig; }),
        __metadata("design:type", Array)
    ], SubscriptionOfferInput.prototype, "regionalConfigs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targeting" }),
        (0, class_transformer_1.Type)(function () { return subscriptionoffertargeting_1.SubscriptionOfferTargeting; }),
        __metadata("design:type", subscriptionoffertargeting_1.SubscriptionOfferTargeting)
    ], SubscriptionOfferInput.prototype, "targeting", void 0);
    return SubscriptionOfferInput;
}(utils_1.SpeakeasyBase));
exports.SubscriptionOfferInput = SubscriptionOfferInput;
/**
 * Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active.
 */
var SubscriptionOfferStateEnum;
(function (SubscriptionOfferStateEnum) {
    SubscriptionOfferStateEnum["StateUnspecified"] = "STATE_UNSPECIFIED";
    SubscriptionOfferStateEnum["Draft"] = "DRAFT";
    SubscriptionOfferStateEnum["Active"] = "ACTIVE";
    SubscriptionOfferStateEnum["Inactive"] = "INACTIVE";
})(SubscriptionOfferStateEnum = exports.SubscriptionOfferStateEnum || (exports.SubscriptionOfferStateEnum = {}));
/**
 * A single, temporary offer
 */
var SubscriptionOffer = /** @class */ (function (_super) {
    __extends(SubscriptionOffer, _super);
    function SubscriptionOffer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "basePlanId" }),
        __metadata("design:type", String)
    ], SubscriptionOffer.prototype, "basePlanId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "offerId" }),
        __metadata("design:type", String)
    ], SubscriptionOffer.prototype, "offerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: offertag_1.OfferTag }),
        (0, class_transformer_1.Expose)({ name: "offerTags" }),
        (0, class_transformer_1.Type)(function () { return offertag_1.OfferTag; }),
        __metadata("design:type", Array)
    ], SubscriptionOffer.prototype, "offerTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "otherRegionsConfig" }),
        (0, class_transformer_1.Type)(function () { return otherregionssubscriptionofferconfig_1.OtherRegionsSubscriptionOfferConfig; }),
        __metadata("design:type", otherregionssubscriptionofferconfig_1.OtherRegionsSubscriptionOfferConfig)
    ], SubscriptionOffer.prototype, "otherRegionsConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packageName" }),
        __metadata("design:type", String)
    ], SubscriptionOffer.prototype, "packageName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: subscriptionofferphase_1.SubscriptionOfferPhase }),
        (0, class_transformer_1.Expose)({ name: "phases" }),
        (0, class_transformer_1.Type)(function () { return subscriptionofferphase_1.SubscriptionOfferPhase; }),
        __metadata("design:type", Array)
    ], SubscriptionOffer.prototype, "phases", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "productId" }),
        __metadata("design:type", String)
    ], SubscriptionOffer.prototype, "productId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: regionalsubscriptionofferconfig_1.RegionalSubscriptionOfferConfig }),
        (0, class_transformer_1.Expose)({ name: "regionalConfigs" }),
        (0, class_transformer_1.Type)(function () { return regionalsubscriptionofferconfig_1.RegionalSubscriptionOfferConfig; }),
        __metadata("design:type", Array)
    ], SubscriptionOffer.prototype, "regionalConfigs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], SubscriptionOffer.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targeting" }),
        (0, class_transformer_1.Type)(function () { return subscriptionoffertargeting_1.SubscriptionOfferTargeting; }),
        __metadata("design:type", subscriptionoffertargeting_1.SubscriptionOfferTargeting)
    ], SubscriptionOffer.prototype, "targeting", void 0);
    return SubscriptionOffer;
}(utils_1.SpeakeasyBase));
exports.SubscriptionOffer = SubscriptionOffer;
