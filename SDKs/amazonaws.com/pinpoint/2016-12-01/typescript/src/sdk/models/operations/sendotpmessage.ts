/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Send OTP message request parameters.
 */
export class SendOTPMessageRequestBodySendOTPMessageRequestParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowedAttempts" })
  allowedAttempts?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "BrandName" })
  brandName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Channel" })
  channel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CodeLength" })
  codeLength?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationIdentity" })
  destinationIdentity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EntityId" })
  entityId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OriginationIdentity" })
  originationIdentity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReferenceId" })
  referenceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateId" })
  templateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidityPeriod" })
  validityPeriod?: number;
}

export class SendOTPMessageRequestBody extends SpeakeasyBase {
  /**
   * Send OTP message request parameters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SendOTPMessageRequestParameters" })
  @Type(() => SendOTPMessageRequestBodySendOTPMessageRequestParameters)
  sendOTPMessageRequestParameters: SendOTPMessageRequestBodySendOTPMessageRequestParameters;
}

export class SendOTPMessageRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: SendOTPMessageRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The unique ID of your Amazon Pinpoint application.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=application-id",
  })
  applicationId: string;
}

export class SendOTPMessageResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ForbiddenException
   */
  @SpeakeasyMetadata()
  forbiddenException?: any;

  /**
   * InternalServerErrorException
   */
  @SpeakeasyMetadata()
  internalServerErrorException?: any;

  /**
   * MethodNotAllowedException
   */
  @SpeakeasyMetadata()
  methodNotAllowedException?: any;

  /**
   * NotFoundException
   */
  @SpeakeasyMetadata()
  notFoundException?: any;

  /**
   * PayloadTooLargeException
   */
  @SpeakeasyMetadata()
  payloadTooLargeException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  sendOTPMessageResponse?: shared.SendOTPMessageResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;
}
