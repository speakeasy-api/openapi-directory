/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class UpdatePullRequestApprovalStateResponse {
    /**
     * ApprovalStateRequiredException
     */
    
    public Object approvalStateRequiredException;

    public UpdatePullRequestApprovalStateResponse withApprovalStateRequiredException(Object approvalStateRequiredException) {
        this.approvalStateRequiredException = approvalStateRequiredException;
        return this;
    }
    
    
    public String contentType;

    public UpdatePullRequestApprovalStateResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * EncryptionIntegrityChecksFailedException
     */
    
    public Object encryptionIntegrityChecksFailedException;

    public UpdatePullRequestApprovalStateResponse withEncryptionIntegrityChecksFailedException(Object encryptionIntegrityChecksFailedException) {
        this.encryptionIntegrityChecksFailedException = encryptionIntegrityChecksFailedException;
        return this;
    }
    
    /**
     * EncryptionKeyAccessDeniedException
     */
    
    public Object encryptionKeyAccessDeniedException;

    public UpdatePullRequestApprovalStateResponse withEncryptionKeyAccessDeniedException(Object encryptionKeyAccessDeniedException) {
        this.encryptionKeyAccessDeniedException = encryptionKeyAccessDeniedException;
        return this;
    }
    
    /**
     * EncryptionKeyDisabledException
     */
    
    public Object encryptionKeyDisabledException;

    public UpdatePullRequestApprovalStateResponse withEncryptionKeyDisabledException(Object encryptionKeyDisabledException) {
        this.encryptionKeyDisabledException = encryptionKeyDisabledException;
        return this;
    }
    
    /**
     * EncryptionKeyNotFoundException
     */
    
    public Object encryptionKeyNotFoundException;

    public UpdatePullRequestApprovalStateResponse withEncryptionKeyNotFoundException(Object encryptionKeyNotFoundException) {
        this.encryptionKeyNotFoundException = encryptionKeyNotFoundException;
        return this;
    }
    
    /**
     * EncryptionKeyUnavailableException
     */
    
    public Object encryptionKeyUnavailableException;

    public UpdatePullRequestApprovalStateResponse withEncryptionKeyUnavailableException(Object encryptionKeyUnavailableException) {
        this.encryptionKeyUnavailableException = encryptionKeyUnavailableException;
        return this;
    }
    
    /**
     * InvalidApprovalStateException
     */
    
    public Object invalidApprovalStateException;

    public UpdatePullRequestApprovalStateResponse withInvalidApprovalStateException(Object invalidApprovalStateException) {
        this.invalidApprovalStateException = invalidApprovalStateException;
        return this;
    }
    
    /**
     * InvalidPullRequestIdException
     */
    
    public Object invalidPullRequestIdException;

    public UpdatePullRequestApprovalStateResponse withInvalidPullRequestIdException(Object invalidPullRequestIdException) {
        this.invalidPullRequestIdException = invalidPullRequestIdException;
        return this;
    }
    
    /**
     * InvalidRevisionIdException
     */
    
    public Object invalidRevisionIdException;

    public UpdatePullRequestApprovalStateResponse withInvalidRevisionIdException(Object invalidRevisionIdException) {
        this.invalidRevisionIdException = invalidRevisionIdException;
        return this;
    }
    
    /**
     * MaximumNumberOfApprovalsExceededException
     */
    
    public Object maximumNumberOfApprovalsExceededException;

    public UpdatePullRequestApprovalStateResponse withMaximumNumberOfApprovalsExceededException(Object maximumNumberOfApprovalsExceededException) {
        this.maximumNumberOfApprovalsExceededException = maximumNumberOfApprovalsExceededException;
        return this;
    }
    
    /**
     * PullRequestAlreadyClosedException
     */
    
    public Object pullRequestAlreadyClosedException;

    public UpdatePullRequestApprovalStateResponse withPullRequestAlreadyClosedException(Object pullRequestAlreadyClosedException) {
        this.pullRequestAlreadyClosedException = pullRequestAlreadyClosedException;
        return this;
    }
    
    /**
     * PullRequestCannotBeApprovedByAuthorException
     */
    
    public Object pullRequestCannotBeApprovedByAuthorException;

    public UpdatePullRequestApprovalStateResponse withPullRequestCannotBeApprovedByAuthorException(Object pullRequestCannotBeApprovedByAuthorException) {
        this.pullRequestCannotBeApprovedByAuthorException = pullRequestCannotBeApprovedByAuthorException;
        return this;
    }
    
    /**
     * PullRequestDoesNotExistException
     */
    
    public Object pullRequestDoesNotExistException;

    public UpdatePullRequestApprovalStateResponse withPullRequestDoesNotExistException(Object pullRequestDoesNotExistException) {
        this.pullRequestDoesNotExistException = pullRequestDoesNotExistException;
        return this;
    }
    
    /**
     * PullRequestIdRequiredException
     */
    
    public Object pullRequestIdRequiredException;

    public UpdatePullRequestApprovalStateResponse withPullRequestIdRequiredException(Object pullRequestIdRequiredException) {
        this.pullRequestIdRequiredException = pullRequestIdRequiredException;
        return this;
    }
    
    /**
     * RevisionIdRequiredException
     */
    
    public Object revisionIdRequiredException;

    public UpdatePullRequestApprovalStateResponse withRevisionIdRequiredException(Object revisionIdRequiredException) {
        this.revisionIdRequiredException = revisionIdRequiredException;
        return this;
    }
    
    
    public Integer statusCode;

    public UpdatePullRequestApprovalStateResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public UpdatePullRequestApprovalStateResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * RevisionNotCurrentException
     */
    
    public Object revisionNotCurrentException;

    public UpdatePullRequestApprovalStateResponse withRevisionNotCurrentException(Object revisionNotCurrentException) {
        this.revisionNotCurrentException = revisionNotCurrentException;
        return this;
    }
    
    public UpdatePullRequestApprovalStateResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
