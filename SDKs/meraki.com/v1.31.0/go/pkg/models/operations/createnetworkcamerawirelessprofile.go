// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CreateNetworkCameraWirelessProfileRequestBodyIdentity - The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
type CreateNetworkCameraWirelessProfileRequestBodyIdentity struct {
	// The password of the identity.
	Password *string `json:"password,omitempty"`
	// The username of the identity.
	Username *string `json:"username,omitempty"`
}

// CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum - The auth mode of the SSID. It can be set to ('psk', '8021x-radius').
type CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum string

const (
	CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnumEightThousandAndTwentyOnexRadius CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum = "8021x-radius"
	CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnumPsk                              CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum = "psk"
)

func (e *CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "8021x-radius":
		fallthrough
	case "psk":
		*e = CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum: %s", s)
	}
}

// CreateNetworkCameraWirelessProfileRequestBodySsid - The details of the SSID config.
type CreateNetworkCameraWirelessProfileRequestBodySsid struct {
	// The auth mode of the SSID. It can be set to ('psk', '8021x-radius').
	AuthMode *CreateNetworkCameraWirelessProfileRequestBodySsidAuthModeEnum `json:"authMode,omitempty"`
	// The encryption mode of the SSID. It can be set to ('wpa', 'wpa-eap'). With 'wpa' mode, the authMode should be 'psk' and with 'wpa-eap' the authMode should be '8021x-radius'
	EncryptionMode *string `json:"encryptionMode,omitempty"`
	// The name of the SSID.
	Name *string `json:"name,omitempty"`
	// The pre-shared key of the SSID.
	Psk *string `json:"psk,omitempty"`
}

type CreateNetworkCameraWirelessProfileRequestBody struct {
	// The identity of the wireless profile. Required for creating wireless profiles in 8021x-radius auth mode.
	Identity *CreateNetworkCameraWirelessProfileRequestBodyIdentity `json:"identity,omitempty"`
	// The name of the camera wireless profile. This parameter is required.
	Name string `json:"name"`
	// The details of the SSID config.
	Ssid CreateNetworkCameraWirelessProfileRequestBodySsid `json:"ssid"`
}

type CreateNetworkCameraWirelessProfileRequest struct {
	RequestBody CreateNetworkCameraWirelessProfileRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                        `pathParam:"style=simple,explode=false,name=networkId"`
}

type CreateNetworkCameraWirelessProfileResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateNetworkCameraWirelessProfile200ApplicationJSONObject map[string]interface{}
}
