/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class RetrieveConfigurationValuesRequest {
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public RetrieveConfigurationValuesRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The name of the configuration option. Applies a filter to the configuration updates for the specified option.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public RetrieveConfigurationValuesRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The configuration namespace. Applies a filter to the configuration updates for the specified namespace.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=namespace")
    public String namespace;

    public RetrieveConfigurationValuesRequest withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }
    
    /**
     * The name of the node that require configuration values. Applies a filter specific to the name of node. When no node_id is specified, the filter shows both local and cluster-wide configurations.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=node_id")
    public String nodeId;

    public RetrieveConfigurationValuesRequest withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * Ignore these many matches in the beginning.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public RetrieveConfigurationValuesRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The timestamp for which to retrieve configuration values.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=on_date")
    public OffsetDateTime onDate;

    public RetrieveConfigurationValuesRequest withOnDate(OffsetDateTime onDate) {
        this.onDate = onDate;
        return this;
    }
    
    public RetrieveConfigurationValuesRequest(@JsonProperty("namespace") String namespace, @JsonProperty("on_date") OffsetDateTime onDate) {
        this.namespace = namespace;
        this.onDate = onDate;
  }
}
