// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ExportConfigurationsDeleteSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type ExportConfigurationsDeleteRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The id of the export configuration.
	ExportConfigurationID string `pathParam:"style=simple,explode=false,name=export_configuration_id"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum string

const (
	ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnumBadRequest          ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnumConflict            ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum = "Conflict"
	ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnumNotAcceptable       ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnumNotFound            ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum = "NotFound"
	ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnumInternalServerError ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnumUnauthorized        ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnumTooManyRequests     ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type ExportConfigurationsDeleteDefaultApplicationJSONError struct {
	Code    ExportConfigurationsDeleteDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                        `json:"message"`
}

// ExportConfigurationsDeleteDefaultApplicationJSON - Error code with reason
type ExportConfigurationsDeleteDefaultApplicationJSON struct {
	Error ExportConfigurationsDeleteDefaultApplicationJSONError `json:"error"`
}

type ExportConfigurationsDeleteResponse struct {
	ContentType string
	// Error code with reason
	ExportConfigurationsDeleteDefaultApplicationJSONObject *ExportConfigurationsDeleteDefaultApplicationJSON
	StatusCode                                             int
	RawResponse                                            *http.Response
}
