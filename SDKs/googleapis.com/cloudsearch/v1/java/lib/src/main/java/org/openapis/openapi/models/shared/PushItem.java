/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PushItem - Represents an item to be pushed to the indexing queue.
 */
public class PushItem {
    /**
     * Content hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentHash")
    public String contentHash;
    public PushItem withContentHash(String contentHash) {
        this.contentHash = contentHash;
        return this;
    }
    
    /**
     * The metadata hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadataHash")
    public String metadataHash;
    public PushItem withMetadataHash(String metadataHash) {
        this.metadataHash = metadataHash;
        return this;
    }
    
    /**
     * Provides additional document state information for the connector, such as an alternate repository ID and other metadata. The maximum length is 8192 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payload")
    public String payload;
    public PushItem withPayload(String payload) {
        this.payload = payload;
        return this;
    }
    
    /**
     * Queue to which this item belongs. The `default` queue is chosen if this field is not specified. The maximum length is 512 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queue")
    public String queue;
    public PushItem withQueue(String queue) {
        this.queue = queue;
        return this;
    }
    
    /**
     * Errors when the connector is communicating to the source repository.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repositoryError")
    public RepositoryError repositoryError;
    public PushItem withRepositoryError(RepositoryError repositoryError) {
        this.repositoryError = repositoryError;
        return this;
    }
    
    /**
     * Structured data hash of the item according to the repository. If specified, this is used to determine how to modify this item's status. Setting this field and the type field results in argument error. The maximum length is 2048 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("structuredDataHash")
    public String structuredDataHash;
    public PushItem withStructuredDataHash(String structuredDataHash) {
        this.structuredDataHash = structuredDataHash;
        return this;
    }
    
    /**
     * The type of the push operation that defines the push behavior.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public PushItemTypeEnum type;
    public PushItem withType(PushItemTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
