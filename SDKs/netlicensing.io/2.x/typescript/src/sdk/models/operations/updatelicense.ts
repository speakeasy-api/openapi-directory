/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class UpdateLicenseSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateLicenseRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "form, name=active" })
  active?: boolean;

  /**
   * Specifies currency for the License price. Check data types to discover which currencies are supported. Read-only, set from License Template on creation
   */
  @SpeakeasyMetadata({ data: "form, name=currency" })
  currency?: string;

  /**
   * If set to 'true', this License is not shown in NetLicensing Shop as purchased License. Set from License Template on creation, if not specified explicitly
   */
  @SpeakeasyMetadata({ data: "form, name=hidden" })
  hidden?: boolean;

  /**
   * Name for the Licensed item. Set from License Template on creation, if not specified explicitly.
   */
  @SpeakeasyMetadata({ data: "form, name=name" })
  name?: string;

  /**
   * Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
   */
  @SpeakeasyMetadata({ data: "form, name=number" })
  number?: string;

  @SpeakeasyMetadata({ data: "form, name=parentfeature" })
  parentfeature?: string;

  /**
   * Price for the License. If > 0, it must always be accompanied by the currency specification. Read-only, set from License Template on creation
   */
  @SpeakeasyMetadata({ data: "form, name=price" })
  price?: number;

  /**
   * Mandatory for 'Pay-per-Use' License Model.
   */
  @SpeakeasyMetadata({ data: "form, name=quantity" })
  quantity?: string;

  /**
   * For 'TIMEVOLUME' License type
   */
  @SpeakeasyMetadata({
    data: "form, name=startDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startDate?: Date;

  /**
   * Mandatory for 'TIMEVOLUME' License Type.
   */
  @SpeakeasyMetadata({ data: "form, name=timeVolume" })
  timeVolume?: string;

  /**
   * For 'TIMEVOLUME' License Type.
   */
  @SpeakeasyMetadata({ data: "form, name=timeVolumePeriod" })
  timeVolumePeriod?: string;

  /**
   * Mandatory for 'Pay-per-Use' License Model.
   */
  @SpeakeasyMetadata({ data: "form, name=usedQuantity" })
  usedQuantity?: string;
}

export class UpdateLicenseRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateLicenseRequestBody;

  /**
   * Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=licenseNumber",
  })
  licenseNumber: string;
}

export class UpdateLicenseResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful request
   */
  @SpeakeasyMetadata()
  netlicensing?: shared.Netlicensing;
}
