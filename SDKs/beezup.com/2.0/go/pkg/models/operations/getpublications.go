// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetPublicationsPublicationTypesEnum string

const (
	GetPublicationsPublicationTypesEnumPublishProducts          GetPublicationsPublicationTypesEnum = "PublishProducts"
	GetPublicationsPublicationTypesEnumPublishOffers            GetPublicationsPublicationTypesEnum = "PublishOffers"
	GetPublicationsPublicationTypesEnumUnpublish                GetPublicationsPublicationTypesEnum = "Unpublish"
	GetPublicationsPublicationTypesEnumPublishRelationshipsEnum GetPublicationsPublicationTypesEnum = "PublishRelationshipsEnum"
	GetPublicationsPublicationTypesEnumPublishProductImagesEnum GetPublicationsPublicationTypesEnum = "PublishProductImagesEnum"
	GetPublicationsPublicationTypesEnumPublishInventoryEnum     GetPublicationsPublicationTypesEnum = "PublishInventoryEnum"
	GetPublicationsPublicationTypesEnumPublishPricingEnum       GetPublicationsPublicationTypesEnum = "PublishPricingEnum"
)

func (e *GetPublicationsPublicationTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PublishProducts":
		fallthrough
	case "PublishOffers":
		fallthrough
	case "Unpublish":
		fallthrough
	case "PublishRelationshipsEnum":
		fallthrough
	case "PublishProductImagesEnum":
		fallthrough
	case "PublishInventoryEnum":
		fallthrough
	case "PublishPricingEnum":
		*e = GetPublicationsPublicationTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPublicationsPublicationTypesEnum: %s", s)
	}
}

type GetPublicationsRequest struct {
	// Account Id to query (required)
	AccountID int `pathParam:"style=simple,explode=false,name=accountId"`
	// Channel Catalog Id by which to filter (optional)
	ChannelCatalogID *string `queryParam:"style=form,explode=true,name=channelCatalogId"`
	// Amount of entries to fetch (optional, default set to 10)
	Count *int `queryParam:"style=form,explode=true,name=count"`
	// Marketplace Technical Code to query (required)
	MarketplaceTechnicalCode string `pathParam:"style=simple,explode=false,name=marketplaceTechnicalCode"`
	// Publication types by which to filter (optional)
	PublicationTypes []GetPublicationsPublicationTypesEnum `queryParam:"style=form,explode=false,name=publicationTypes"`
}

type GetPublicationsResponse struct {
	// Occurs when something goes wrong
	BeezUPCommonErrorResponseMessage *shared.BeezUPCommonErrorResponseMessage
	ContentType                      string
	Headers                          map[string][]string
	StatusCode                       int
	RawResponse                      *http.Response
	// Successfully fetched channel catalog settings
	AccountPublications *shared.AccountPublications
}
