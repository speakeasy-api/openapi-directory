// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SearchReposSortEnum - Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `updated`. Default: [best match](https://docs.github.com/enterprise-cloud@latest//rest/reference/search#ranking-search-results)
type SearchReposSortEnum string

const (
	SearchReposSortEnumStars            SearchReposSortEnum = "stars"
	SearchReposSortEnumForks            SearchReposSortEnum = "forks"
	SearchReposSortEnumHelpWantedIssues SearchReposSortEnum = "help-wanted-issues"
	SearchReposSortEnumUpdated          SearchReposSortEnum = "updated"
)

func (e *SearchReposSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "stars":
		fallthrough
	case "forks":
		fallthrough
	case "help-wanted-issues":
		fallthrough
	case "updated":
		*e = SearchReposSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchReposSortEnum: %s", s)
	}
}

type SearchReposRequest struct {
	// Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.
	Order *shared.OrderEnum `queryParam:"style=form,explode=true,name=order"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub Enterprise Cloud. The REST API supports the same qualifiers as the web interface for GitHub Enterprise Cloud. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-cloud@latest//rest/reference/search#constructing-a-search-query). See "[Searching for repositories](https://docs.github.com/enterprise-cloud@latest//articles/searching-for-repositories/)" for a detailed list of qualifiers.
	Q string `queryParam:"style=form,explode=true,name=q"`
	// Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `updated`. Default: [best match](https://docs.github.com/enterprise-cloud@latest//rest/reference/search#ranking-search-results)
	Sort *SearchReposSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

// SearchRepos503ApplicationJSON - Service unavailable
type SearchRepos503ApplicationJSON struct {
	Code             *string `json:"code,omitempty"`
	DocumentationURL *string `json:"documentation_url,omitempty"`
	Message          *string `json:"message,omitempty"`
}

// SearchRepos200ApplicationJSON - Response
type SearchRepos200ApplicationJSON struct {
	IncompleteResults bool                          `json:"incomplete_results"`
	Items             []shared.RepoSearchResultItem `json:"items"`
	TotalCount        int64                         `json:"total_count"`
}

type SearchReposResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	SearchRepos200ApplicationJSONObject *SearchRepos200ApplicationJSON
	// Service unavailable
	SearchRepos503ApplicationJSONObject *SearchRepos503ApplicationJSON
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
