<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PostApiRnbPvtImportCalculatorConfigurationRequest
{
    /**
     * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
     * 
     * @var string $accept
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Accept')]
    public string $accept;
    
    /**
     * Type of the content being sent.
     * 
     * @var string $contentType
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Content-Type')]
    public string $contentType;
    
	#[SpeakeasyMetadata('request:mediaType=text/csv')]
    public ?string $requestBody = null;
    
    /**
     * Condition that will accumulate the Promotion with manual prices or not.
     * 
     * @var bool $xVTEXAccumulateWithManualPrices
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-VTEX-accumulate-with-manual-prices')]
    public bool $xVTEXAccumulateWithManualPrices;
    
    /**
     * Promotion Name.
     * 
     * @var string $xVTEXCalculatorName
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-VTEX-calculator-name')]
    public string $xVTEXCalculatorName;
    
    /**
     * Cluster that will be included in the Promotion. To add multiple clusters, create a header for each one of them.
     * 
     * @var ?string $xVTEXClusterExpression
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-VTEX-cluster-expression')]
    public ?string $xVTEXClusterExpression = null;
    
    /**
     * This header allows implementing the Promotion in multiples client clusters. You can set the value as `all` - the Promotion will be valid to all the clusters - or `any` - the Promotion will be valid to any of the clusters.
     * 
     * @var ?string $xVTEXClusterOperator
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-VTEX-cluster-operator')]
    public ?string $xVTEXClusterOperator = null;
    
    /**
     * Defines if the Promotion is cumulative with other promotions.
     * 
     * @var ?bool $xVTEXCumulative
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-VTEX-cumulative')]
    public ?bool $xVTEXCumulative = null;
    
    /**
     * Promotion end date.
     * 
     * @var string $xVTEXEndDate
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-VTEX-end-date')]
    public string $xVTEXEndDate;
    
    /**
     * Promotion start date.
     * 
     * @var string $xVTEXStartDate
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-VTEX-start-date')]
    public string $xVTEXStartDate;
    
	public function __construct()
	{
		$this->accept = "";
		$this->contentType = "";
		$this->requestBody = null;
		$this->xVTEXAccumulateWithManualPrices = false;
		$this->xVTEXCalculatorName = "";
		$this->xVTEXClusterExpression = null;
		$this->xVTEXClusterOperator = null;
		$this->xVTEXCumulative = null;
		$this->xVTEXEndDate = "";
		$this->xVTEXStartDate = "";
	}
}
