/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NfsExport - A NFS export entry.
 */
public class NfsExport {
    /**
     * Allow dev flag in NfsShare AllowedClientsRequest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowDev")
    public Boolean allowDev;

    public NfsExport withAllowDev(Boolean allowDev) {
        this.allowDev = allowDev;
        return this;
    }
    
    /**
     * Allow the setuid flag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowSuid")
    public Boolean allowSuid;

    public NfsExport withAllowSuid(Boolean allowSuid) {
        this.allowSuid = allowSuid;
        return this;
    }
    
    /**
     * A CIDR range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cidr")
    public String cidr;

    public NfsExport withCidr(String cidr) {
        this.cidr = cidr;
        return this;
    }
    
    /**
     * Either a single machine, identified by an ID, or a comma-separated list of machine IDs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineId")
    public String machineId;

    public NfsExport withMachineId(String machineId) {
        this.machineId = machineId;
        return this;
    }
    
    /**
     * Network to use to publish the export.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkId")
    public String networkId;

    public NfsExport withNetworkId(String networkId) {
        this.networkId = networkId;
        return this;
    }
    
    /**
     * Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noRootSquash")
    public Boolean noRootSquash;

    public NfsExport withNoRootSquash(Boolean noRootSquash) {
        this.noRootSquash = noRootSquash;
        return this;
    }
    
    /**
     * Export permissions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public NfsExportPermissionsEnum permissions;

    public NfsExport withPermissions(NfsExportPermissionsEnum permissions) {
        this.permissions = permissions;
        return this;
    }
    
    public NfsExport(){}
}
