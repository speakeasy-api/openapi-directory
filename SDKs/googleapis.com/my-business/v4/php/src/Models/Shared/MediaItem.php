<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MediaItem - A single media item.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MediaItem
{
    /**
     * Attribution information for customer media items, such as the contributor's name and profile picture.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Attribution $attribution
     */
	#[\JMS\Serializer\Annotation\SerializedName('attribution')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Attribution')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Attribution $attribution = null;
    
    /**
     * Output only. Creation time of this media item.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Reference to the photo binary data of a `MediaItem` uploaded through the Google My Business API. Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and subsequently calling CreateMediaItem.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MediaItemDataRef $dataRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataRef')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MediaItemDataRef')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MediaItemDataRef $dataRef = null;
    
    /**
     * Description for this media item. Descriptions cannot be modified through the Google My Business API, but can be set when creating a new media item that is not a cover photo.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Dimensions of the media item.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Dimensions $dimensions
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Dimensions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Dimensions $dimensions = null;
    
    /**
     * Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon.
     * 
     * @var ?string $googleUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('googleUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $googleUrl = null;
    
    /**
     * Insights and statistics for the media item.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MediaInsights $insights
     */
	#[\JMS\Serializer\Annotation\SerializedName('insights')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MediaInsights')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MediaInsights $insights = null;
    
    /**
     * How the media item is associated with its location.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LocationAssociation $locationAssociation
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationAssociation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LocationAssociation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LocationAssociation $locationAssociation = null;
    
    /**
     * The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MediaItemMediaFormatEnum $mediaFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('mediaFormat')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MediaItemMediaFormatEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MediaItemMediaFormatEnum $mediaFormat = null;
    
    /**
     * The resource name for this media item. `accounts/{account_id}/locations/{location_id}/media/{media_key}`
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If `source_url` was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated.
     * 
     * @var ?string $sourceUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceUrl = null;
    
    /**
     * Output only. Where provided, the URL of a thumbnail image for this media item.
     * 
     * @var ?string $thumbnailUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumbnailUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $thumbnailUrl = null;
    
	public function __construct()
	{
		$this->attribution = null;
		$this->createTime = null;
		$this->dataRef = null;
		$this->description = null;
		$this->dimensions = null;
		$this->googleUrl = null;
		$this->insights = null;
		$this->locationAssociation = null;
		$this->mediaFormat = null;
		$this->name = null;
		$this->sourceUrl = null;
		$this->thumbnailUrl = null;
	}
}
