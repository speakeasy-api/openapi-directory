"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import isdefinedinjob_enum as shared_isdefinedinjob_enum
from ..shared import ismonitoredbyjob_enum as shared_ismonitoredbyjob_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobDetails:
    r"""Specifies whether any one-time or recurring classification jobs are configured to analyze data in an S3 bucket, and, if so, the details of the job that ran most recently."""
    
    is_defined_in_job: Optional[shared_isdefinedinjob_enum.IsDefinedInJobEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDefinedInJob'), 'exclude': lambda f: f is None }})  
    is_monitored_by_job: Optional[shared_ismonitoredbyjob_enum.IsMonitoredByJobEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isMonitoredByJob'), 'exclude': lambda f: f is None }})  
    last_job_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastJobId'), 'exclude': lambda f: f is None }})  
    last_job_run_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastJobRunTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    