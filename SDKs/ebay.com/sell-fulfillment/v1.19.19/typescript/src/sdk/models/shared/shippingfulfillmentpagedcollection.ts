/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { ShippingFulfillment } from "./shippingfulfillment";
import { Expose, Type } from "class-transformer";

/**
 * This type contains the specifications for the entire collection of shipping fulfillments that are associated with the order specified by a <b>getShippingFulfillments</b> call. The <b>fulfillments</b> container returns an array of all the fulfillments in the collection.
 */
export class ShippingFulfillmentPagedCollection extends SpeakeasyBase {
  /**
   * This array contains one or more fulfillments required for the order that was specified in method endpoint.
   */
  @SpeakeasyMetadata({ elemType: ShippingFulfillment })
  @Expose({ name: "fulfillments" })
  @Type(() => ShippingFulfillment)
  fulfillments?: ShippingFulfillment[];

  /**
   * The total number of fulfillments in the specified order.<br><br><span class="tablenote"><strong>Note:</strong> If no fulfillments are found for the order, this field is returned with a value of <code>0</code>.</span>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  /**
   * This array is only returned if one or more errors or warnings occur with the call request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "warnings" })
  @Type(() => ErrorT)
  warnings?: ErrorT[];
}
