/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobAssignment - An object describing a job that a team member is assigned to.
 */
public class JobAssignment {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annual_rate")
    public Money annualRate;

    public JobAssignment withAnnualRate(Money annualRate) {
        this.annualRate = annualRate;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hourly_rate")
    public Money hourlyRate;

    public JobAssignment withHourlyRate(Money hourlyRate) {
        this.hourlyRate = hourlyRate;
        return this;
    }
    
    /**
     * The title of the job.
     */
    @JsonProperty("job_title")
    public String jobTitle;

    public JobAssignment withJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
        return this;
    }
    
    /**
     * The current pay type for the job assignment used to
     * calculate the pay amount in a pay period.
     */
    @JsonProperty("pay_type")
    public String payType;

    public JobAssignment withPayType(String payType) {
        this.payType = payType;
        return this;
    }
    
    /**
     * The planned hours per week for the job. Set if the job `PayType` is `SALARY`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weekly_hours")
    public Long weeklyHours;

    public JobAssignment withWeeklyHours(Long weeklyHours) {
        this.weeklyHours = weeklyHours;
        return this;
    }
    
    public JobAssignment(@JsonProperty("job_title") String jobTitle, @JsonProperty("pay_type") String payType) {
        this.jobTitle = jobTitle;
        this.payType = payType;
  }
}
