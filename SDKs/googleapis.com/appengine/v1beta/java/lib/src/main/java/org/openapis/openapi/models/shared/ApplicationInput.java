/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApplicationInput - An Application resource contains the top-level configuration of an App Engine application.
 */
public class ApplicationInput {
    /**
     * Google Apps authentication domain that controls which users can access this application.Defaults to open access for any Google Account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authDomain")
    public String authDomain;

    public ApplicationInput withAuthDomain(String authDomain) {
        this.authDomain = authDomain;
        return this;
    }
    
    /**
     * The type of the Cloud Firestore or Cloud Datastore database associated with this application.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseType")
    public ApplicationDatabaseTypeEnum databaseType;

    public ApplicationInput withDatabaseType(ApplicationDatabaseTypeEnum databaseType) {
        this.databaseType = databaseType;
        return this;
    }
    
    /**
     * Cookie expiration policy for this application.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultCookieExpiration")
    public String defaultCookieExpiration;

    public ApplicationInput withDefaultCookieExpiration(String defaultCookieExpiration) {
        this.defaultCookieExpiration = defaultCookieExpiration;
        return this;
    }
    
    /**
     * HTTP path dispatch rules for requests to the application that do not explicitly target a service or version. Rules are order-dependent. Up to 20 dispatch rules can be supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dispatchRules")
    public UrlDispatchRule[] dispatchRules;

    public ApplicationInput withDispatchRules(UrlDispatchRule[] dispatchRules) {
        this.dispatchRules = dispatchRules;
        return this;
    }
    
    /**
     * The feature specific settings to be used in the application. These define behaviors that are user configurable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("featureSettings")
    public FeatureSettings featureSettings;

    public ApplicationInput withFeatureSettings(FeatureSettings featureSettings) {
        this.featureSettings = featureSettings;
        return this;
    }
    
    /**
     * Identity-Aware Proxy
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iap")
    public IdentityAwareProxyInput iap;

    public ApplicationInput withIap(IdentityAwareProxyInput iap) {
        this.iap = iap;
        return this;
    }
    
    /**
     * Identifier of the Application resource. This identifier is equivalent to the project ID of the Google Cloud Platform project where you want to deploy your application. Example: myapp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public ApplicationInput withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Location from which this application runs. Application instances run out of the data centers in the specified location, which is also where all of the application's end user content is stored.Defaults to us-central.View the list of supported locations (https://cloud.google.com/appengine/docs/locations).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationId")
    public String locationId;

    public ApplicationInput withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * The service account associated with the application. This is the app-level default identity. If no identity provided during create version, Admin API will fallback to this one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;

    public ApplicationInput withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Serving status of this application.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servingStatus")
    public ApplicationServingStatusEnum servingStatus;

    public ApplicationInput withServingStatus(ApplicationServingStatusEnum servingStatus) {
        this.servingStatus = servingStatus;
        return this;
    }
    
    public ApplicationInput(){}
}
