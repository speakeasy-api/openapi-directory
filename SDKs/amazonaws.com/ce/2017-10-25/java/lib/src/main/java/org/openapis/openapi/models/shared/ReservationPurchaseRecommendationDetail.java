/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReservationPurchaseRecommendationDetail - Details about your recommended reservation purchase.
 */
public class ReservationPurchaseRecommendationDetail {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountId")
    public String accountId;

    public ReservationPurchaseRecommendationDetail withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AverageNormalizedUnitsUsedPerHour")
    public String averageNormalizedUnitsUsedPerHour;

    public ReservationPurchaseRecommendationDetail withAverageNormalizedUnitsUsedPerHour(String averageNormalizedUnitsUsedPerHour) {
        this.averageNormalizedUnitsUsedPerHour = averageNormalizedUnitsUsedPerHour;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AverageNumberOfInstancesUsedPerHour")
    public String averageNumberOfInstancesUsedPerHour;

    public ReservationPurchaseRecommendationDetail withAverageNumberOfInstancesUsedPerHour(String averageNumberOfInstancesUsedPerHour) {
        this.averageNumberOfInstancesUsedPerHour = averageNumberOfInstancesUsedPerHour;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AverageUtilization")
    public String averageUtilization;

    public ReservationPurchaseRecommendationDetail withAverageUtilization(String averageUtilization) {
        this.averageUtilization = averageUtilization;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrencyCode")
    public String currencyCode;

    public ReservationPurchaseRecommendationDetail withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EstimatedBreakEvenInMonths")
    public String estimatedBreakEvenInMonths;

    public ReservationPurchaseRecommendationDetail withEstimatedBreakEvenInMonths(String estimatedBreakEvenInMonths) {
        this.estimatedBreakEvenInMonths = estimatedBreakEvenInMonths;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EstimatedMonthlyOnDemandCost")
    public String estimatedMonthlyOnDemandCost;

    public ReservationPurchaseRecommendationDetail withEstimatedMonthlyOnDemandCost(String estimatedMonthlyOnDemandCost) {
        this.estimatedMonthlyOnDemandCost = estimatedMonthlyOnDemandCost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EstimatedMonthlySavingsAmount")
    public String estimatedMonthlySavingsAmount;

    public ReservationPurchaseRecommendationDetail withEstimatedMonthlySavingsAmount(String estimatedMonthlySavingsAmount) {
        this.estimatedMonthlySavingsAmount = estimatedMonthlySavingsAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EstimatedMonthlySavingsPercentage")
    public String estimatedMonthlySavingsPercentage;

    public ReservationPurchaseRecommendationDetail withEstimatedMonthlySavingsPercentage(String estimatedMonthlySavingsPercentage) {
        this.estimatedMonthlySavingsPercentage = estimatedMonthlySavingsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EstimatedReservationCostForLookbackPeriod")
    public String estimatedReservationCostForLookbackPeriod;

    public ReservationPurchaseRecommendationDetail withEstimatedReservationCostForLookbackPeriod(String estimatedReservationCostForLookbackPeriod) {
        this.estimatedReservationCostForLookbackPeriod = estimatedReservationCostForLookbackPeriod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceDetails")
    public InstanceDetails instanceDetails;

    public ReservationPurchaseRecommendationDetail withInstanceDetails(InstanceDetails instanceDetails) {
        this.instanceDetails = instanceDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaximumNormalizedUnitsUsedPerHour")
    public String maximumNormalizedUnitsUsedPerHour;

    public ReservationPurchaseRecommendationDetail withMaximumNormalizedUnitsUsedPerHour(String maximumNormalizedUnitsUsedPerHour) {
        this.maximumNormalizedUnitsUsedPerHour = maximumNormalizedUnitsUsedPerHour;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaximumNumberOfInstancesUsedPerHour")
    public String maximumNumberOfInstancesUsedPerHour;

    public ReservationPurchaseRecommendationDetail withMaximumNumberOfInstancesUsedPerHour(String maximumNumberOfInstancesUsedPerHour) {
        this.maximumNumberOfInstancesUsedPerHour = maximumNumberOfInstancesUsedPerHour;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinimumNormalizedUnitsUsedPerHour")
    public String minimumNormalizedUnitsUsedPerHour;

    public ReservationPurchaseRecommendationDetail withMinimumNormalizedUnitsUsedPerHour(String minimumNormalizedUnitsUsedPerHour) {
        this.minimumNormalizedUnitsUsedPerHour = minimumNormalizedUnitsUsedPerHour;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinimumNumberOfInstancesUsedPerHour")
    public String minimumNumberOfInstancesUsedPerHour;

    public ReservationPurchaseRecommendationDetail withMinimumNumberOfInstancesUsedPerHour(String minimumNumberOfInstancesUsedPerHour) {
        this.minimumNumberOfInstancesUsedPerHour = minimumNumberOfInstancesUsedPerHour;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecommendedNormalizedUnitsToPurchase")
    public String recommendedNormalizedUnitsToPurchase;

    public ReservationPurchaseRecommendationDetail withRecommendedNormalizedUnitsToPurchase(String recommendedNormalizedUnitsToPurchase) {
        this.recommendedNormalizedUnitsToPurchase = recommendedNormalizedUnitsToPurchase;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecommendedNumberOfInstancesToPurchase")
    public String recommendedNumberOfInstancesToPurchase;

    public ReservationPurchaseRecommendationDetail withRecommendedNumberOfInstancesToPurchase(String recommendedNumberOfInstancesToPurchase) {
        this.recommendedNumberOfInstancesToPurchase = recommendedNumberOfInstancesToPurchase;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecurringStandardMonthlyCost")
    public String recurringStandardMonthlyCost;

    public ReservationPurchaseRecommendationDetail withRecurringStandardMonthlyCost(String recurringStandardMonthlyCost) {
        this.recurringStandardMonthlyCost = recurringStandardMonthlyCost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpfrontCost")
    public String upfrontCost;

    public ReservationPurchaseRecommendationDetail withUpfrontCost(String upfrontCost) {
        this.upfrontCost = upfrontCost;
        return this;
    }
    
    public ReservationPurchaseRecommendationDetail(){}
}
