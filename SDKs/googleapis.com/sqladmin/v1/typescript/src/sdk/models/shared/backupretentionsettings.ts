/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The unit that 'retained_backups' represents.
 */
export enum BackupRetentionSettingsRetentionUnitEnum {
  RetentionUnitUnspecified = "RETENTION_UNIT_UNSPECIFIED",
  Count = "COUNT",
}

/**
 * We currently only support backup retention by specifying the number of backups we will retain.
 */
export class BackupRetentionSettings extends SpeakeasyBase {
  /**
   * Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retainedBackups" })
  retainedBackups?: number;

  /**
   * The unit that 'retained_backups' represents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retentionUnit" })
  retentionUnit?: BackupRetentionSettingsRetentionUnitEnum;
}
