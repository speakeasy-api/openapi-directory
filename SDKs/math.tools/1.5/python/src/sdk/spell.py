"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Spell:
    r"""Spell out a number ordinal, cardinal or currency. This API is free (rate limited)."""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_numbers_cardinal(self, request: operations.GetNumbersCardinalRequest, security: operations.GetNumbersCardinalSecurity) -> operations.GetNumbersCardinalResponse:
        r"""Get the cardinal of the given number"""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/numbers/cardinal'
        
        query_params = utils.get_query_params(operations.GetNumbersCardinalRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetNumbersCardinalResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_numbers_currency(self, request: operations.GetNumbersCurrencyRequest, security: operations.GetNumbersCurrencySecurity) -> operations.GetNumbersCurrencyResponse:
        r"""Spells out the number as a currency"""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/numbers/currency'
        
        query_params = utils.get_query_params(operations.GetNumbersCurrencyRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetNumbersCurrencyResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_numbers_ordinal(self, request: operations.GetNumbersOrdinalRequest, security: operations.GetNumbersOrdinalSecurity) -> operations.GetNumbersOrdinalResponse:
        r"""Get the ordinal of the given number"""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/numbers/ordinal'
        
        query_params = utils.get_query_params(operations.GetNumbersOrdinalRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetNumbersOrdinalResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    