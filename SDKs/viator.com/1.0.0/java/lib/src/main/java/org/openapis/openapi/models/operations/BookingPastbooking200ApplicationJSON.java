/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BookingPastbooking200ApplicationJSON - Success
 */
public class BookingPastbooking200ApplicationJSON {
    /**
     * **object** containing pricing matrix information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public BookingPastbooking200ApplicationJSONData data;
    public BookingPastbooking200ApplicationJSON withData(BookingPastbooking200ApplicationJSONData data) {
        this.data = data;
        return this;
    }
    
    /**
     * **timestamp** of *this* response
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateStamp")
    public String dateStamp;
    public BookingPastbooking200ApplicationJSON withDateStamp(String dateStamp) {
        this.dateStamp = dateStamp;
        return this;
    }
    
    /**
     * **array** of error codes pertaining to *this* error
     * - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorCodes")
    public String[] errorCodes;
    public BookingPastbooking200ApplicationJSON withErrorCodes(String[] errorCodes) {
        this.errorCodes = errorCodes;
        return this;
    }
    
    /**
     * **array** of error message strings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public Object[] errorMessage;
    public BookingPastbooking200ApplicationJSON withErrorMessage(Object[] errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * **array** of error message strings in plain text
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessageText")
    public String errorMessageText;
    public BookingPastbooking200ApplicationJSON withErrorMessageText(String errorMessageText) {
        this.errorMessageText = errorMessageText;
        return this;
    }
    
    /**
     * **name** of *this* type of error
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorName")
    public String errorName;
    public BookingPastbooking200ApplicationJSON withErrorName(String errorName) {
        this.errorName = errorName;
        return this;
    }
    
    /**
     * **reference number** of *this* error
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorReference")
    public String errorReference;
    public BookingPastbooking200ApplicationJSON withErrorReference(String errorReference) {
        this.errorReference = errorReference;
        return this;
    }
    
    /**
     * **code** specifying the type of error
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorType")
    public String errorType;
    public BookingPastbooking200ApplicationJSON withErrorType(String errorType) {
        this.errorType = errorType;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extraInfo")
    public java.util.Map<String, Object> extraInfo;
    public BookingPastbooking200ApplicationJSON withExtraInfo(java.util.Map<String, Object> extraInfo) {
        this.extraInfo = extraInfo;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extraObject")
    public java.util.Map<String, Object> extraObject;
    public BookingPastbooking200ApplicationJSON withExtraObject(java.util.Map<String, Object> extraObject) {
        this.extraObject = extraObject;
        return this;
    }
    
    /**
     * **boolean indicator** of *this* request's outcome
     * - `true`: the request was successful with no errors
     * - `false`: an error was encountered
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public BookingPastbooking200ApplicationJSON withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * **number** of results available for *this* service
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalCount")
    public Long totalCount;
    public BookingPastbooking200ApplicationJSON withTotalCount(Long totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    
    /**
     * **unique numeric id** of the server that processed *this* request
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmid")
    public String vmid;
    public BookingPastbooking200ApplicationJSON withVmid(String vmid) {
        this.vmid = vmid;
        return this;
    }
    
}
