// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdatePullRequestStatusXAmzTargetEnum
type UpdatePullRequestStatusXAmzTargetEnum string

const (
	UpdatePullRequestStatusXAmzTargetEnumCodeCommit20150413UpdatePullRequestStatus UpdatePullRequestStatusXAmzTargetEnum = "CodeCommit_20150413.UpdatePullRequestStatus"
)

func (e *UpdatePullRequestStatusXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeCommit_20150413.UpdatePullRequestStatus":
		*e = UpdatePullRequestStatusXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePullRequestStatusXAmzTargetEnum: %s", s)
	}
}

type UpdatePullRequestStatusRequest struct {
	UpdatePullRequestStatusInput shared.UpdatePullRequestStatusInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   UpdatePullRequestStatusXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdatePullRequestStatusResponse struct {
	ContentType string
	// EncryptionIntegrityChecksFailedException
	EncryptionIntegrityChecksFailedException interface{}
	// EncryptionKeyAccessDeniedException
	EncryptionKeyAccessDeniedException interface{}
	// EncryptionKeyDisabledException
	EncryptionKeyDisabledException interface{}
	// EncryptionKeyNotFoundException
	EncryptionKeyNotFoundException interface{}
	// EncryptionKeyUnavailableException
	EncryptionKeyUnavailableException interface{}
	// InvalidPullRequestIdException
	InvalidPullRequestIDException interface{}
	// InvalidPullRequestStatusException
	InvalidPullRequestStatusException interface{}
	// InvalidPullRequestStatusUpdateException
	InvalidPullRequestStatusUpdateException interface{}
	// PullRequestDoesNotExistException
	PullRequestDoesNotExistException interface{}
	// PullRequestIdRequiredException
	PullRequestIDRequiredException interface{}
	// PullRequestStatusRequiredException
	PullRequestStatusRequiredException interface{}
	StatusCode                         int
	RawResponse                        *http.Response
	// Success
	UpdatePullRequestStatusOutput *shared.UpdatePullRequestStatusOutput
}
