"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProcessBatchRequestBody = exports.ProcessBatchRequestBodyLabelLayoutEnum = exports.ProcessBatchRequestBodyLabelFormatEnum = exports.ProcessBatchRequestBodyDisplaySchemeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The display format that the label should be shown in.
 */
var ProcessBatchRequestBodyDisplaySchemeEnum;
(function (ProcessBatchRequestBodyDisplaySchemeEnum) {
    ProcessBatchRequestBodyDisplaySchemeEnum["Label"] = "label";
    ProcessBatchRequestBodyDisplaySchemeEnum["QrCode"] = "qr_code";
    ProcessBatchRequestBodyDisplaySchemeEnum["LabelAndQrCode"] = "label_and_qr_code";
})(ProcessBatchRequestBodyDisplaySchemeEnum = exports.ProcessBatchRequestBodyDisplaySchemeEnum || (exports.ProcessBatchRequestBodyDisplaySchemeEnum = {}));
/**
 * The possible file formats in which shipping labels can be downloaded.  We recommend `pdf` format because it is supported by all carriers, whereas some carriers do not support the `png` or `zpl` formats.
 *
 * @remarks
 *
 * |Label Format  | Supported Carriers
 * |--------------|-----------------------------------
 * |`pdf`         | All carriers
 * |`png`         | `fedex` <br> `stamps_com` <br> `ups` <br> `usps`
 * |`zpl`         | `access_worldwide` <br> `apc` <br> `asendia` <br> `dhl_global_mail` <br> `dhl_express` <br> `dhl_express_australia` <br> `dhl_express_canada` <br> `dhl_express_worldwide` <br> `dhl_express_uk` <br> `dpd` <br> `endicia` <br> `fedex` <br> `fedex_uk` <br> `firstmile` <br> `imex` <br> `newgistics` <br> `ontrac` <br> `rr_donnelley` <br> `stamps_com` <br> `ups` <br> `usps`
 *
 */
var ProcessBatchRequestBodyLabelFormatEnum;
(function (ProcessBatchRequestBodyLabelFormatEnum) {
    ProcessBatchRequestBodyLabelFormatEnum["Pdf"] = "pdf";
    ProcessBatchRequestBodyLabelFormatEnum["Png"] = "png";
    ProcessBatchRequestBodyLabelFormatEnum["Zpl"] = "zpl";
})(ProcessBatchRequestBodyLabelFormatEnum = exports.ProcessBatchRequestBodyLabelFormatEnum || (exports.ProcessBatchRequestBodyLabelFormatEnum = {}));
/**
 * The available layouts (sizes) in which shipping labels can be downloaded.  The label format determines which sizes are supported.  `4x6` is supported for all label formats, whereas `letter` (8.5" x 11") is only supported for `pdf` format.
 *
 * @remarks
 *
 */
var ProcessBatchRequestBodyLabelLayoutEnum;
(function (ProcessBatchRequestBodyLabelLayoutEnum) {
    ProcessBatchRequestBodyLabelLayoutEnum["Fourx6"] = "4x6";
    ProcessBatchRequestBodyLabelLayoutEnum["Letter"] = "letter";
})(ProcessBatchRequestBodyLabelLayoutEnum = exports.ProcessBatchRequestBodyLabelLayoutEnum || (exports.ProcessBatchRequestBodyLabelLayoutEnum = {}));
/**
 * A process batch request body
 */
var ProcessBatchRequestBody = /** @class */ (function (_super) {
    __extends(ProcessBatchRequestBody, _super);
    function ProcessBatchRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "display_scheme" }),
        __metadata("design:type", String)
    ], ProcessBatchRequestBody.prototype, "displayScheme", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "label_format" }),
        __metadata("design:type", String)
    ], ProcessBatchRequestBody.prototype, "labelFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "label_layout" }),
        __metadata("design:type", String)
    ], ProcessBatchRequestBody.prototype, "labelLayout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ship_date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ProcessBatchRequestBody.prototype, "shipDate", void 0);
    return ProcessBatchRequestBody;
}(utils_1.SpeakeasyBase));
exports.ProcessBatchRequestBody = ProcessBatchRequestBody;
