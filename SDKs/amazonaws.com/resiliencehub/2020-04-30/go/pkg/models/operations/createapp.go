// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAppRequestBodyAssessmentScheduleEnum -  Assessment execution schedule with 'Daily' or 'Disabled' values.
type CreateAppRequestBodyAssessmentScheduleEnum string

const (
	CreateAppRequestBodyAssessmentScheduleEnumDisabled CreateAppRequestBodyAssessmentScheduleEnum = "Disabled"
	CreateAppRequestBodyAssessmentScheduleEnumDaily    CreateAppRequestBodyAssessmentScheduleEnum = "Daily"
)

func (e *CreateAppRequestBodyAssessmentScheduleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Disabled":
		fallthrough
	case "Daily":
		*e = CreateAppRequestBodyAssessmentScheduleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAppRequestBodyAssessmentScheduleEnum: %s", s)
	}
}

type CreateAppRequestBody struct {
	//  Assessment execution schedule with 'Daily' or 'Disabled' values.
	AssessmentSchedule *CreateAppRequestBodyAssessmentScheduleEnum `json:"assessmentSchedule,omitempty"`
	// Used for an idempotency token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. You should not reuse the same client token for other API requests.
	ClientToken *string `json:"clientToken,omitempty"`
	// The optional description for an app.
	Description *string `json:"description,omitempty"`
	// The name for the application.
	Name string `json:"name"`
	// The Amazon Resource Name (ARN) of the resiliency policy. The format for this ARN is: arn:<code>partition</code>:resiliencehub:<code>region</code>:<code>account</code>:resiliency-policy/<code>policy-id</code>. For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"> Amazon Resource Names (ARNs)</a> in the <i>AWS General Reference</i> guide.
	PolicyArn *string `json:"policyArn,omitempty"`
	// The tags assigned to the resource. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key/value pair.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateAppRequest struct {
	RequestBody       CreateAppRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateAppResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateAppResponse *shared.CreateAppResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
