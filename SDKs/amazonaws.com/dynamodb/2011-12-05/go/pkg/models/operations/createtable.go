// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateTableXAmzTargetEnum
type CreateTableXAmzTargetEnum string

const (
	CreateTableXAmzTargetEnumDynamoDb20111205CreateTable CreateTableXAmzTargetEnum = "DynamoDB_20111205.CreateTable"
)

func (e *CreateTableXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDB_20111205.CreateTable":
		*e = CreateTableXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTableXAmzTargetEnum: %s", s)
	}
}

type CreateTableHeaders struct {
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateTableXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateTableRequest struct {
	Headers CreateTableHeaders
	Request shared.CreateTableInput `request:"mediaType=application/json"`
}

type CreateTableResponse struct {
	ContentType string
	// Success
	CreateTableOutput *shared.CreateTableOutput
	// InternalServerError
	InternalServerError interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	StatusCode             int
	RawResponse            *http.Response
}
