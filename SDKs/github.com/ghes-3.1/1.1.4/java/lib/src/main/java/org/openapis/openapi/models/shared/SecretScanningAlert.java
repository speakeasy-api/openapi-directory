/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SecretScanningAlert - Response
 */
public class SecretScanningAlert {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public SecretScanningAlert withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The GitHub URL of the alert resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_url")
    public String htmlUrl;
    public SecretScanningAlert withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    /**
     * The REST API URL of the code locations for this alert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locations_url")
    public String locationsUrl;
    public SecretScanningAlert withLocationsUrl(String locationsUrl) {
        this.locationsUrl = locationsUrl;
        return this;
    }
    
    /**
     * The security alert number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public Long number;
    public SecretScanningAlert withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    /**
     * **Required when the `state` is `resolved`.** The reason for resolving the alert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolution")
    public SecretScanningAlertResolutionEnum resolution;
    public SecretScanningAlert withResolution(SecretScanningAlertResolutionEnum resolution) {
        this.resolution = resolution;
        return this;
    }
    
    /**
     * The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("resolved_at")
    public OffsetDateTime resolvedAt;
    public SecretScanningAlert withResolvedAt(OffsetDateTime resolvedAt) {
        this.resolvedAt = resolvedAt;
        return this;
    }
    
    /**
     * Simple User
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolved_by")
    public NullableSimpleUser resolvedBy;
    public SecretScanningAlert withResolvedBy(NullableSimpleUser resolvedBy) {
        this.resolvedBy = resolvedBy;
        return this;
    }
    
    /**
     * The secret that was detected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;
    public SecretScanningAlert withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * The type of secret that secret scanning detected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret_type")
    public String secretType;
    public SecretScanningAlert withSecretType(String secretType) {
        this.secretType = secretType;
        return this;
    }
    
    /**
     * Sets the state of the secret scanning alert. Can be either `open` or `resolved`. You must provide `resolution` when you set the state to `resolved`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public SchemassecretScanningAlertStateEnum state;
    public SecretScanningAlert withState(SchemassecretScanningAlertStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public SecretScanningAlert withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The REST API URL of the alert resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public SecretScanningAlert withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
