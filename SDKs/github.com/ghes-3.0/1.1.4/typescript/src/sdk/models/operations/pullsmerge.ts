/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Merge method to use. Possible values are `merge`, `squash` or `rebase`. Default is `merge`.
 */
export enum PullsMergeRequestBodyMergeMethodEnum {
  Merge = "merge",
  Squash = "squash",
  Rebase = "rebase",
}

export class PullsMergeRequestBody extends SpeakeasyBase {
  /**
   * Extra detail to append to automatic commit message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commit_message" })
  commitMessage?: string;

  /**
   * Title for the automatic commit message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commit_title" })
  commitTitle?: string;

  /**
   * Merge method to use. Possible values are `merge`, `squash` or `rebase`. Default is `merge`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merge_method" })
  mergeMethod?: PullsMergeRequestBodyMergeMethodEnum;

  /**
   * SHA that pull request head must match to allow merge.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sha" })
  sha?: string;
}

export class PullsMergeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PullsMergeRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pull_number",
  })
  pullNumber: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

/**
 * Conflict if sha was provided and pull request head did not match
 */
export class PullsMerge409ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

/**
 * Method Not Allowed if merge cannot be performed
 */
export class PullsMerge405ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class PullsMergeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * if merge was successful
   */
  @SpeakeasyMetadata()
  pullRequestMergeResult?: shared.PullRequestMergeResult;

  /**
   * Method Not Allowed if merge cannot be performed
   */
  @SpeakeasyMetadata()
  pullsMerge405ApplicationJSONObject?: PullsMerge405ApplicationJSON;

  /**
   * Conflict if sha was provided and pull request head did not match
   */
  @SpeakeasyMetadata()
  pullsMerge409ApplicationJSONObject?: PullsMerge409ApplicationJSON;

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
