// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListAccessPoliciesIdentityTypeEnum - The type of identity (IAM Identity Center user, IAM Identity Center group, or IAM user). This parameter is required if you specify <code>identityId</code>.
type ListAccessPoliciesIdentityTypeEnum string

const (
	ListAccessPoliciesIdentityTypeEnumUser  ListAccessPoliciesIdentityTypeEnum = "USER"
	ListAccessPoliciesIdentityTypeEnumGroup ListAccessPoliciesIdentityTypeEnum = "GROUP"
	ListAccessPoliciesIdentityTypeEnumIam   ListAccessPoliciesIdentityTypeEnum = "IAM"
)

func (e *ListAccessPoliciesIdentityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USER":
		fallthrough
	case "GROUP":
		fallthrough
	case "IAM":
		*e = ListAccessPoliciesIdentityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccessPoliciesIdentityTypeEnum: %s", s)
	}
}

// ListAccessPoliciesResourceTypeEnum - The type of resource (portal or project). This parameter is required if you specify <code>resourceId</code>.
type ListAccessPoliciesResourceTypeEnum string

const (
	ListAccessPoliciesResourceTypeEnumPortal  ListAccessPoliciesResourceTypeEnum = "PORTAL"
	ListAccessPoliciesResourceTypeEnumProject ListAccessPoliciesResourceTypeEnum = "PROJECT"
)

func (e *ListAccessPoliciesResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PORTAL":
		fallthrough
	case "PROJECT":
		*e = ListAccessPoliciesResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccessPoliciesResourceTypeEnum: %s", s)
	}
}

type ListAccessPoliciesRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The ARN of the IAM user. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html">IAM ARNs</a> in the <i>IAM User Guide</i>. This parameter is required if you specify <code>IAM</code> for <code>identityType</code>.
	IamArn *string `queryParam:"style=form,explode=true,name=iamArn"`
	// The ID of the identity. This parameter is required if you specify <code>USER</code> or <code>GROUP</code> for <code>identityType</code>.
	IdentityID *string `queryParam:"style=form,explode=true,name=identityId"`
	// The type of identity (IAM Identity Center user, IAM Identity Center group, or IAM user). This parameter is required if you specify <code>identityId</code>.
	IdentityType *ListAccessPoliciesIdentityTypeEnum `queryParam:"style=form,explode=true,name=identityType"`
	// <p>The maximum number of results to return for each paginated request.</p> <p>Default: 50</p>
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token to be used for the next set of paginated results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The ID of the resource. This parameter is required if you specify <code>resourceType</code>.
	ResourceID *string `queryParam:"style=form,explode=true,name=resourceId"`
	// The type of resource (portal or project). This parameter is required if you specify <code>resourceId</code>.
	ResourceType *ListAccessPoliciesResourceTypeEnum `queryParam:"style=form,explode=true,name=resourceType"`
}

type ListAccessPoliciesResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListAccessPoliciesResponse *shared.ListAccessPoliciesResponse
	StatusCode                 int
	RawResponse                *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
