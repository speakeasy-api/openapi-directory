"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contact as shared_contact
from ..shared import order as shared_order
from ..shared import packagespecification as shared_packagespecification
from ..shared import purchasedrate as shared_purchasedrate
from ..shared import shipmentcancellation as shared_shipmentcancellation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Shipment:
    r"""This complex type defines a shipment for a specific package (for example, a box or letter). Shipments are always linked to a purchased shipping label."""
    
    cancellation: Optional[shared_shipmentcancellation.ShipmentCancellation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancellation'), 'exclude': lambda f: f is None }})
    r"""This type defines a shipment cancellation by the date and time the cancellation request was made and the current status of the request."""  
    creation_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDate'), 'exclude': lambda f: f is None }})
    r"""The date and time the shipment was created, formatted as an <a href=\"https://www.iso.org/iso-8601-date-and-time-format.html\" title=\"https://www.iso.org\" target=\"_blank\">ISO 8601</a> string, which is based on the 24-hour Coordinated Universal Time (UTC) clock.  <br><br><b>Format:</b> <code>[YYYY]-[MM]-[DD]T[HH]:[MM]:[SS].[SSS]Z</code> <br><b>Example:</b> <code>2018-08-20T07:09:00.000Z</code>"""  
    label_custom_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelCustomMessage'), 'exclude': lambda f: f is None }})
    r"""If supported by the selected shipping carrier, this field can contain optional seller text to be printed on the shipping label."""  
    label_download_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelDownloadUrl'), 'exclude': lambda f: f is None }})
    r"""The direct URL the seller can use to download an image of the shipping label. By default, the file format is PDF. See <a href=\"/api-docs/sell/logistics/resources/shipment/methods/downloadLabelFile\">downloadLabelFile</a> for requesting different response file formats."""  
    label_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelSize'), 'exclude': lambda f: f is None }})
    r"""The seller's desired label size. The support for multi-sized labels is shipping-carrier specific and if the size requested in the <b>creaateFromShippingQuote</b> call matches a size the carrier supports, the value will be represented here in the shipment. <br><br>Currently, the only valid value is: <code>4\"x6\"</code>"""  
    orders: Optional[list[shared_order.Order]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orders'), 'exclude': lambda f: f is None }})
    r"""This list value is optionally assigned by the seller. When present, each element in the returned list contains seller-assigned information about an order (such as an order number). Because a package can contain all or part of one or more orders, this field provides a way for sellers to identify the packages that contain specific orders."""  
    package_specification: Optional[shared_packagespecification.PackageSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packageSpecification'), 'exclude': lambda f: f is None }})
    r"""This complex type specifies the dimensions and weight of a package."""  
    rate: Optional[shared_purchasedrate.PurchasedRate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rate'), 'exclude': lambda f: f is None }})
    r"""The \"rate\" that has been selected and purchased for the shipment, as referenced by the <b>rateId</b> value."""  
    return_to: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnTo'), 'exclude': lambda f: f is None }})
    r"""This complex type contains contact information for an individual buyer or seller."""  
    ship_from: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipFrom'), 'exclude': lambda f: f is None }})
    r"""This complex type contains contact information for an individual buyer or seller."""  
    shipment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipmentId'), 'exclude': lambda f: f is None }})
    r"""The unique eBay-assigned ID for the shipment. The ID is generated when the shipment is created by a call to <b>createFromShippingQuote</b>."""  
    shipment_tracking_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipmentTrackingNumber'), 'exclude': lambda f: f is None }})
    r"""A unique carrier-assigned ID string that can be used to track the shipment."""  
    ship_to: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipTo'), 'exclude': lambda f: f is None }})
    r"""This complex type contains contact information for an individual buyer or seller."""  
    