/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ValuesInPastMultipleGetRequest extends SpeakeasyBase {
  /**
   * The date when the last value should start
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=endDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  endDate: Date;

  /**
   * The ID of the device
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * The interval in minutes betwenn the values. 0 means as fast as possible. Only 1000 values can be get in one call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=interval",
  })
  interval: number;

  /**
   * The date when the first value should start
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startDate: Date;
}

export class ValuesInPastMultipleGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.ValuesData })
  valuesData?: shared.ValuesData[];
}
