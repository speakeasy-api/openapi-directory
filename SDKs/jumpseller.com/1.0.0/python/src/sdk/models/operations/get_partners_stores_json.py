"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import partnererror as shared_partnererror
from ..shared import type as shared_type
from typing import Optional


@dataclasses.dataclass
class GetPartnersStoresJSONRequest:
    
    auth_token: str = dataclasses.field(metadata={'query_param': { 'field_name': 'auth_token', 'style': 'form', 'explode': True }})
    r"""Partner authentication token."""  
    from_: str = dataclasses.field(metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})
    r"""Statistics start date. Should be in format 'Y-m-d'."""  
    partner_code: str = dataclasses.field(metadata={'query_param': { 'field_name': 'partner_code', 'style': 'form', 'explode': True }})
    r"""Partner code."""  
    to: str = dataclasses.field(metadata={'query_param': { 'field_name': 'to', 'style': 'form', 'explode': True }})
    r"""Statistics end date. Should be in format 'Y-m-d'."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""List page"""  
    

@dataclasses.dataclass
class GetPartnersStoresJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    partner_error: Optional[shared_partnererror.PartnerError] = dataclasses.field(default=None)
    r"""Bad Request."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    types: Optional[list[shared_type.Type]] = dataclasses.field(default=None)
    r"""Array of partner stores statistics."""  
    