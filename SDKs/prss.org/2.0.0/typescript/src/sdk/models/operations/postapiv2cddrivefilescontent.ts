/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostApiV2CddriveFilesContentSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  cdOauth2: string;
}

export class PostApiV2CddriveFilesContentRequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

/**
 * Form data defining the file to create.
 */
export class PostApiV2CddriveFilesContentRequestBody extends SpeakeasyBase {
  /**
   * The file content being uploaded.
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file?: PostApiV2CddriveFilesContentRequestBodyFile;

  /**
   * The name of the file, including extension.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=name" })
  name?: string;

  /**
   * The ID of the parent folder or 0 for the root folder.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=parent-id" })
  parentId?: number;
}

export class PostApiV2CddriveFilesContentRequest extends SpeakeasyBase {
  /**
   * If present, the MD5 will be compared against the file received as a message integrity check.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-MD5",
  })
  contentMd5?: string;

  /**
   * Form data defining the file to create.
   */
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PostApiV2CddriveFilesContentRequestBody;
}

export class PostApiV2CddriveFilesContentResponse extends SpeakeasyBase {
  /**
   * The file was created successfully. The response contains the file metadata.
   */
  @SpeakeasyMetadata()
  cdDriveFile?: shared.CDDriveFile;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
