<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
/**
 * RecordingSettingsUpdateRecordingSettings - Meeting recording Settings
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class RecordingSettingsUpdateRecordingSettings
{
    /**
     * Approval type for the registration.<br>
     * 
     * `0`- Automatically approve the registration when a user registers.<br>
     * `1` - Manually approve or deny the registration of a user.<br>
     * `2` - No registration required to view the recording.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\RecordingSettingsUpdateRecordingSettingsApprovalTypeEnum $approvalType
     */
	#[\JMS\Serializer\Annotation\SerializedName('approval_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\RecordingSettingsUpdateRecordingSettingsApprovalTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=approval_type')]
    public ?RecordingSettingsUpdateRecordingSettingsApprovalTypeEnum $approvalType = null;
    
    /**
     * Authentication domains.
     * 
     * @var ?string $authenticationDomains
     */
	#[\JMS\Serializer\Annotation\SerializedName('authentication_domains')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=authentication_domains')]
    public ?string $authenticationDomains = null;
    
    /**
     * Authentication Options.
     * 
     * @var ?string $authenticationOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('authentication_option')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=authentication_option')]
    public ?string $authenticationOption = null;
    
    /**
     * Determine whether registration  isrequired to view the recording.
     * 
     * @var ?bool $onDemand
     */
	#[\JMS\Serializer\Annotation\SerializedName('on_demand')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=on_demand')]
    public ?bool $onDemand = null;
    
    /**
     * Enable password protection for the recording by setting a password. The password must have a minimum of **eight** characters with a mix of numbers, letters and special characters.<br><br>
     * 
     * **Note:** If the account owner or the admin has set minimum password strength requirements for recordings via Account Settings, the password value provided here must meet those requirements. <br><br>If the requirements are enabled, you can view those requirements by calling either the [Get User Settings API](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/usersettings) or the [Get Account Settings](https://marketplace.zoom.us/docs/api-reference/zoom-api/accounts/accountsettings) API. 
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=password')]
    public ?string $password = null;
    
    /**
     * Only authenticated users can view.
     * 
     * @var ?bool $recordingAuthentication
     */
	#[\JMS\Serializer\Annotation\SerializedName('recording_authentication')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=recording_authentication')]
    public ?bool $recordingAuthentication = null;
    
    /**
     * Send an email to host when someone registers to view the recording. This applies for On-demand recordings only.
     * 
     * @var ?bool $sendEmailToHost
     */
	#[\JMS\Serializer\Annotation\SerializedName('send_email_to_host')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=send_email_to_host')]
    public ?bool $sendEmailToHost = null;
    
    /**
     * Determine how the meeting recording is shared.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\RecordingSettingsUpdateRecordingSettingsShareRecordingEnum $shareRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('share_recording')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\RecordingSettingsUpdateRecordingSettingsShareRecordingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=share_recording')]
    public ?RecordingSettingsUpdateRecordingSettingsShareRecordingEnum $shareRecording = null;
    
    /**
     * Show social share buttons on registration page. This applies for On-demand recordings only.
     * 
     * @var ?bool $showSocialShareButtons
     */
	#[\JMS\Serializer\Annotation\SerializedName('show_social_share_buttons')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=show_social_share_buttons')]
    public ?bool $showSocialShareButtons = null;
    
    /**
     * Name of the recording.
     * 
     * @var ?string $topic
     */
	#[\JMS\Serializer\Annotation\SerializedName('topic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=topic')]
    public ?string $topic = null;
    
    /**
     * Determine whether a viewer can download the recording file or not.
     * 
     * @var ?bool $viewerDownload
     */
	#[\JMS\Serializer\Annotation\SerializedName('viewer_download')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=viewer_download')]
    public ?bool $viewerDownload = null;
    
	public function __construct()
	{
		$this->approvalType = null;
		$this->authenticationDomains = null;
		$this->authenticationOption = null;
		$this->onDemand = null;
		$this->password = null;
		$this->recordingAuthentication = null;
		$this->sendEmailToHost = null;
		$this->shareRecording = null;
		$this->showSocialShareButtons = null;
		$this->topic = null;
		$this->viewerDownload = null;
	}
}
