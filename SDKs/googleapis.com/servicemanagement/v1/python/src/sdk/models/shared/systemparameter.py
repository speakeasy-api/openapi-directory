"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SystemParameter:
    r"""Define a parameter's name and location. The parameter may be passed as either an HTTP header or a URL query parameter, and if both are passed the behavior is implementation-dependent."""
    
    http_header: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('httpHeader'), 'exclude': lambda f: f is None }})
    r"""Define the HTTP header name to use for the parameter. It is case insensitive."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Define the name of the parameter, such as \\"api_key\\" . It is case sensitive."""  
    url_query_parameter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('urlQueryParameter'), 'exclude': lambda f: f is None }})
    r"""Define the URL query parameter name to use for the parameter. It is case sensitive."""  
    