"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScoreCommentsCounts:
    r"""A computed version of the total, unique, weekly and monthly number of
    comments added on the documents (this doesn't include inline comments).
    """
    
    monthly: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monthly'), 'exclude': lambda f: f is None }})
    r"""The monthly unique number of comments added to the score"""  
    total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""The total number of comments added to the score"""  
    unique: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unique'), 'exclude': lambda f: f is None }})
    r"""The unique (1/user) number of comments added to the score"""  
    weekly: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weekly'), 'exclude': lambda f: f is None }})
    r"""The weekly unique number of comments added to the score"""  
    