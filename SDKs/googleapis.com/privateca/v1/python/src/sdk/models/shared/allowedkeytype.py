"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eckeytype as shared_eckeytype
from ..shared import rsakeytype as shared_rsakeytype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AllowedKeyType:
    r"""Describes a \\"type\\" of key that may be used in a Certificate issued from a CaPool. Note that a single AllowedKeyType may refer to either a fully-qualified key algorithm, such as RSA 4096, or a family of key algorithms, such as any RSA key."""
    
    elliptic_curve: Optional[shared_eckeytype.EcKeyType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ellipticCurve'), 'exclude': lambda f: f is None }})
    r"""Describes an Elliptic Curve key that may be used in a Certificate issued from a CaPool."""  
    rsa: Optional[shared_rsakeytype.RsaKeyType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rsa'), 'exclude': lambda f: f is None }})
    r"""Describes an RSA key that may be used in a Certificate issued from a CaPool."""  
    