"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PostCustomGatewayRefundOwnershipIDRequest:
    
    amount: int = dataclasses.field(metadata={'query_param': { 'field_name': 'amount', 'style': 'form', 'explode': True }})
    r"""The total amount refunded in cents"""  
    ownership_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ownershipId', 'style': 'simple', 'explode': False }})
    r"""The id of the ownership record involved in this transaction"""  
    custom_data: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'customData', 'style': 'form', 'explode': True }})
    r"""A custom JSON object to attach to this transaction"""  
    date_: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date', 'style': 'form', 'explode': True }})
    r"""The date (in milliseconds) of when this refund was made"""  
    developer_amount: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'developerAmount', 'style': 'form', 'explode': True }})
    r"""The amount (in cents) recovered from the owner of the app"""  
    fee_amount: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'feeAmount', 'style': 'form', 'explode': True }})
    r"""The fee (in cents) recovered from a payment processor or third party to process this payment. The default value is 0"""  
    marketplace_amount: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'marketplaceAmount', 'style': 'form', 'explode': True }})
    r"""The amount (in cents) recovered from the marketplace owner as a commission refund for the purchase of this app"""  
    

@dataclasses.dataclass
class PostCustomGatewayRefundOwnershipIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    