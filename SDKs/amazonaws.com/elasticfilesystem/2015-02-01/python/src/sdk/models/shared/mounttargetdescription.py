"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lifecyclestate_enum as shared_lifecyclestate_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MountTargetDescription:
    r"""Provides a description of a mount target."""
    
    file_system_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FileSystemId') }})  
    life_cycle_state: shared_lifecyclestate_enum.LifeCycleStateEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LifeCycleState') }})  
    mount_target_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MountTargetId') }})  
    subnet_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubnetId') }})  
    availability_zone_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AvailabilityZoneId'), 'exclude': lambda f: f is None }})  
    availability_zone_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AvailabilityZoneName'), 'exclude': lambda f: f is None }})  
    ip_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpAddress'), 'exclude': lambda f: f is None }})  
    network_interface_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetworkInterfaceId'), 'exclude': lambda f: f is None }})  
    owner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OwnerId'), 'exclude': lambda f: f is None }})  
    vpc_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcId'), 'exclude': lambda f: f is None }})  
    