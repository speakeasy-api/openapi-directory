/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EmbeddedAttendeeResource } from "./embeddedattendeeresource";
import { EmbeddedResource } from "./embeddedresource";
import { EventMeetingSetting } from "./eventmeetingsetting";

/**
 * Success
 */
export class Meeting extends SpeakeasyBase {
  /**
   * ID of the account the recipient associated to
   */
  @SpeakeasyMetadata()
  accountId?: string;

  /**
   * Whether the meeting is an all-day meeting
   */
  @SpeakeasyMetadata()
  allDay?: boolean;

  /**
   * The attendees of the meeting. Each attendee includes the following fields: status, email, name, organizer
   */
  @SpeakeasyMetadata({ elemType: EmbeddedAttendeeResource })
  attendees?: EmbeddedAttendeeResource[];

  @SpeakeasyMetadata()
  bookedByMeetingsSettings?: EventMeetingSetting;

  @SpeakeasyMetadata()
  bookedByUser?: EmbeddedResource;

  @SpeakeasyMetadata()
  cadence?: EmbeddedResource;

  /**
   * Calendar ID of the meeting owner
   */
  @SpeakeasyMetadata()
  calendarId?: string;

  /**
   * Calendar type of the meeting owner. Possible values are: gmail, azure, nylas, linkedin_azure, cerebro, external
   */
  @SpeakeasyMetadata()
  calendarType?: string;

  /**
   * Datetime of when the meeting was canceled
   */
  @SpeakeasyMetadata()
  canceledAt?: Date;

  /**
   * Datetime of when the meeting was created
   */
  @SpeakeasyMetadata()
  createdAt?: Date;

  /**
   * List of crm custom fields which will be logged to SFDC
   */
  @SpeakeasyMetadata()
  crmCustomFields?: Record<string, any>;

  /**
   * List of crm references associated with the meeting
   */
  @SpeakeasyMetadata()
  crmReferences?: Record<string, any>;

  /**
   * Description of the meeting
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * End time of the meeting
   */
  @SpeakeasyMetadata()
  endTime?: Date;

  /**
   * ID of the meeting created by target calendar
   */
  @SpeakeasyMetadata()
  eventId?: string;

  /**
   * Source of the meeting. Possible values are: 'external' - The event was synced to Salesloft platform via Calendar Sync, 'internal' - The event was created via Salesloft platform
   */
  @SpeakeasyMetadata()
  eventSource?: string;

  /**
   * The list of attendees emails of the meeting
   */
  @SpeakeasyMetadata()
  guests?: string[];

  /**
   * UID of the meeting provided by target calendar provider
   */
  @SpeakeasyMetadata()
  iCalUid?: string;

  /**
   * ID of the meeting
   */
  @SpeakeasyMetadata()
  id?: number;

  /**
   * Location of the meeting
   */
  @SpeakeasyMetadata()
  location?: string;

  /**
   * Meeting type
   */
  @SpeakeasyMetadata()
  meetingType?: string;

  /**
   * Whether the meeting is a No Show meeting
   */
  @SpeakeasyMetadata()
  noShow?: boolean;

  @SpeakeasyMetadata()
  ownedByMeetingsSettings?: EventMeetingSetting;

  @SpeakeasyMetadata()
  person?: EmbeddedResource;

  /**
   * Email of the meeting invite recipient
   */
  @SpeakeasyMetadata()
  recipientEmail?: string;

  /**
   * Name of the meeting invite recipient
   */
  @SpeakeasyMetadata()
  recipientName?: string;

  /**
   * Start time of the meeting
   */
  @SpeakeasyMetadata()
  startTime?: Date;

  /**
   * Status of the meeting. Possible values are: pending, booked, failed, retry
   */
  @SpeakeasyMetadata()
  status?: string;

  @SpeakeasyMetadata()
  step?: EmbeddedResource;

  /**
   * Strict attribution means that we 100% sure which cadence generate the meeting
   */
  @SpeakeasyMetadata()
  strictAttribution?: boolean;

  /**
   * ID of the created task
   */
  @SpeakeasyMetadata()
  taskId?: string;

  /**
   * Title of the meeting
   */
  @SpeakeasyMetadata()
  title?: string;

  /**
   * Datetime of when the meeting was last updated
   */
  @SpeakeasyMetadata()
  updatedAt?: Date;
}
