/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetResourcesMediaJsonRequest extends SpeakeasyBase {
  /**
   * Restrict filtering to media items in a specific collection.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=collectionId",
  })
  collectionId?: number;

  /**
   * Find all media items authored before the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentAuthoredBeforeDate;dateTimeFormat=YYYY-MM-DD",
  })
  contentAuthoredBeforeDate?: Date;

  /**
   * Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentAuthoredInRange",
  })
  contentAuthoredInRange?: string;

  /**
   * Find all media items authored since the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentAuthoredSinceDate;dateTimeFormat=YYYY-MM-DD",
  })
  contentAuthoredSinceDate?: Date;

  /**
   * Find all media items published before the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentPublishedBeforeDate;dateTimeFormat=YYYY-MM-DD",
  })
  contentPublishedBeforeDate?: Date;

  /**
   * Find all media items published between the provided start and end days (RFC 3339, comma separated, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentPublishedInRange",
  })
  contentPublishedInRange?: string;

  /**
   * Find all media items updated since the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentPublishedSinceDate;dateTimeFormat=YYYY-MM-DD",
  })
  contentPublishedSinceDate?: Date;

  /**
   * Find all media items reviewed before the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentReviewedBeforeDate;dateTimeFormat=YYYY-MM-DD",
  })
  contentReviewedBeforeDate?: Date;

  /**
   * Find all media items reviewed between the provided start and end days (RFC 3339, comma separated, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentReviewedInRange",
  })
  contentReviewedInRange?: string;

  /**
   * Find all media items reviewed since the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentReviewedSinceDate;dateTimeFormat=YYYY-MM-DD",
  })
  contentReviewedSinceDate?: Date;

  /**
   * Find all media items updated before the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentUpdatedBeforeDate;dateTimeFormat=YYYY-MM-DD",
  })
  contentUpdatedBeforeDate?: Date;

  /**
   * Find all media items updated between the provided start and end days (RFC 3339, comma separated, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentUpdatedInRange",
  })
  contentUpdatedInRange?: string;

  /**
   * Find all media items updated since the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=contentUpdatedSinceDate;dateTimeFormat=YYYY-MM-DD",
  })
  contentUpdatedSinceDate?: Date;

  /**
   * Find all media items containing the createdBy value.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=createdBy",
  })
  createdBy?: string;

  /**
   * Find all media items which have the provided customThumbnailUrl, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=customThumbnailUrl",
  })
  customThumbnailUrl?: string;

  /**
   * Find all media items which contain the provided partial customThumbnailUrl, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=customThumbnailUrlContains",
  })
  customThumbnailUrlContains?: string;

  /**
   * Find all media items authored on the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=dateContentAuthored;dateTimeFormat=YYYY-MM-DD",
  })
  dateContentAuthored?: Date;

  /**
   * Find all media items published on the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=dateContentPublished;dateTimeFormat=YYYY-MM-DD",
  })
  dateContentPublished?: Date;

  /**
   * Find all media items reviewed on the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=dateContentReviewed;dateTimeFormat=YYYY-MM-DD",
  })
  dateContentReviewed?: Date;

  /**
   * Find all media items updated on the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=dateContentUpdated;dateTimeFormat=YYYY-MM-DD",
  })
  dateContentUpdated?: Date;

  /**
   * Find all media items syndicated on the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=dateSyndicationCaptured;dateTimeFormat=YYYY-MM-DD",
  })
  dateSyndicationCaptured?: Date;

  /**
   * Find all media items updated through the syndication system on the provided day, (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=dateSyndicationUpdated;dateTimeFormat=YYYY-MM-DD",
  })
  dateSyndicationUpdated?: Date;

  /**
   * Find all media items containing the provided partial description, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=descriptionContains",
  })
  descriptionContains?: string;

  /**
   * Find all media items which match the provided hash, case insensitive.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=hash" })
  hash?: string;

  /**
   * Find all media items which match the provided partial hash, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=hashContains",
  })
  hashContains?: string;

  /**
   * Find all media items written in the language specified by Id.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=languageId",
  })
  languageId?: number;

  /**
   * Find all media items written in the language specified by 639-2 isoCode , case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=languageIsoCode",
  })
  languageIsoCode?: string;

  /**
   * Find all media items written in the language specified by name, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=languageName",
  })
  languageName?: string;

  /**
   * The maximum number of records to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=max" })
  max?: number;

  /**
   * Find all media items belonging to the specified media type[s].
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=mediaTypes",
  })
  mediaTypes?: string;

  /**
   * Find all media items containing the provided name, case insensitive.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=name" })
  name?: string;

  /**
   * Find all media items containing the partial name, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=nameContains",
  })
  nameContains?: string;

  /**
   * The offset of the records set to return for pagination.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=offset",
  })
  offset?: number;

  /**
   * * The ascending or descending order.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=order",
  })
  order?: string;

  /**
   * Find only media from within the supplied list of Ids.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=restrictToSet",
  })
  restrictToSet?: string;

  /**
   * * Set of fields to sort the records by.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=sort" })
  sort?: string;

  /**
   * Find all media items that belong to the source specified by acronym, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=sourceAcronym",
  })
  sourceAcronym?: string;

  /**
   * Find all media items that belong to the source specified by partial acronym, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=sourceAcronymContains",
  })
  sourceAcronymContains?: string;

  /**
   * Find all media items that belong to the source specified by Id.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=sourceId",
  })
  sourceId?: number;

  /**
   * Find all media items that belong to the source specified by name, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=sourceName",
  })
  sourceName?: string;

  /**
   * Find all media items that belong to the source specified by partial name, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=sourceNameContains",
  })
  sourceNameContains?: string;

  /**
   * Find all media items which have the provided sourceUrl, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=sourceUrl",
  })
  sourceUrl?: string;

  /**
   * Find all media items which contain the provided partial sourceUrl, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=sourceUrlContains",
  })
  sourceUrlContains?: string;

  /**
   * Find all media items authored before the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationCapturedBeforeDate;dateTimeFormat=YYYY-MM-DD",
  })
  syndicationCapturedBeforeDate?: Date;

  /**
   * Find all media items authored between the provided start and end days (RFC 3339, comma separated, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationCapturedInRange",
  })
  syndicationCapturedInRange?: string;

  /**
   * Find all media items authored since the provided day (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationCapturedSinceDate;dateTimeFormat=YYYY-MM-DD",
  })
  syndicationCapturedSinceDate?: Date;

  /**
   * Find all media items updated before the provided day, (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationUpdatedBeforeDate;dateTimeFormat=YYYY-MM-DD",
  })
  syndicationUpdatedBeforeDate?: Date;

  /**
   * Find all media items updated between the provided start and end days, (RFC 3339, comma separated, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationUpdatedInRange",
  })
  syndicationUpdatedInRange?: string;

  /**
   * Find all media items updated since the provided day, (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationUpdatedSinceDate;dateTimeFormat=YYYY-MM-DD",
  })
  syndicationUpdatedSinceDate?: Date;

  /**
   * Find all media items visible before the provided day, (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationVisibleBeforeDate;dateTimeFormat=YYYY-MM-DD",
  })
  syndicationVisibleBeforeDate?: Date;

  /**
   * Find all media items visible between the provided start and end days, (RFC 3339, comma separated, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationVisibleInRange;dateTimeFormat=YYYY-MM-DD",
  })
  syndicationVisibleInRange?: Date;

  /**
   * Find all media items visible since the provided day, (RFC 3339, time ignored).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=syndicationVisibleSinceDate;dateTimeFormat=YYYY-MM-DD",
  })
  syndicationVisibleSinceDate?: Date;

  /**
   * Find only media items tagged with the specified tag Ids.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=tagIds",
  })
  tagIds?: string;
}

export class GetResourcesMediaJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Returns the list of MediaItems matching the specified query parameters.
   */
  @SpeakeasyMetadata({ elemType: shared.MediaItemWrapped })
  mediaItemWrappeds?: shared.MediaItemWrapped[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
