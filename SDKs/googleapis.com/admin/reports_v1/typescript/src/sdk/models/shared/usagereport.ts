/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Output only. Information about the type of the item.
 */
export class UsageReportEntity extends SpeakeasyBase {
  /**
   * Output only. The unique identifier of the customer's account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerId" })
  customerId?: string;

  /**
   * Output only. Object key. Only relevant if entity.type = "OBJECT" Note: external-facing name of report is "Entities" rather than "Objects".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityId" })
  entityId?: string;

  /**
   * Output only. The user's immutable Google Workspace profile identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileId" })
  profileId?: string;

  /**
   * Output only. The type of item. The value is `user`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Output only. The user's email address. Only relevant if entity.type = "USER"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userEmail" })
  userEmail?: string;
}

export class UsageReportParameters extends SpeakeasyBase {
  /**
   * Output only. Boolean value of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boolValue" })
  boolValue?: boolean;

  /**
   * The RFC 3339 formatted value of the parameter, for example 2010-10-28T10:26:35.000Z.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "datetimeValue" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  datetimeValue?: Date;

  /**
   * Output only. Integer value of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intValue" })
  intValue?: string;

  /**
   * Output only. Nested message value of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "msgValue" })
  msgValue?: Record<string, any>[];

  /**
   * The name of the parameter. For the User Usage Report parameter names, see the User Usage parameters reference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. String value of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;
}

/**
 * JSON template for a usage report.
 */
export class UsageReport extends SpeakeasyBase {
  /**
   * Output only. The date of the report request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date?: string;

  /**
   * Output only. Information about the type of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entity" })
  @Type(() => UsageReportEntity)
  entity?: UsageReportEntity;

  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The type of API resource. For a usage report, the value is `admin#reports#usageReport`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Output only. Parameter value pairs for various applications. For the Entity Usage Report parameters and values, see [the Entity Usage parameters reference](/admin-sdk/reports/v1/reference/usage-ref-appendix-a/entities).
   */
  @SpeakeasyMetadata({ elemType: UsageReportParameters })
  @Expose({ name: "parameters" })
  @Type(() => UsageReportParameters)
  parameters?: UsageReportParameters[];
}
