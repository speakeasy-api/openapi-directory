// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetNodesComplianceQueryParams struct {
	// Number of depth level of compliance objects to display (1:rules, 2:directives, 3:components, 4:nodes, 5:values, 6:reports)
	Level *int64 `queryParam:"style=form,explode=true,name=level"`
}

type GetNodesComplianceRequest struct {
	QueryParams GetNodesComplianceQueryParams
}

// GetNodesCompliance200ApplicationJSONActionEnum - The id of the action
type GetNodesCompliance200ApplicationJSONActionEnum string

const (
	GetNodesCompliance200ApplicationJSONActionEnumGetNodesCompliance GetNodesCompliance200ApplicationJSONActionEnum = "getNodesCompliance"
)

func (e *GetNodesCompliance200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "getNodesCompliance":
		*e = GetNodesCompliance200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNodesCompliance200ApplicationJSONActionEnum: %s", s)
	}
}

type GetNodesCompliance200ApplicationJSONDataNodesComplianceDetails struct {
	Error                      *float32 `json:"error,omitempty"`
	NoReport                   *float32 `json:"noReport,omitempty"`
	SuccessAlreadyOK           *float32 `json:"successAlreadyOK,omitempty"`
	SuccessNotApplicable       *float32 `json:"successNotApplicable,omitempty"`
	SuccessRepaired            *float32 `json:"successRepaired,omitempty"`
	UnexpectedMissingComponent *float32 `json:"unexpectedMissingComponent,omitempty"`
	UnexpectedUnknownComponent *float32 `json:"unexpectedUnknownComponent,omitempty"`
}

type GetNodesCompliance200ApplicationJSONDataNodesModeEnum string

const (
	GetNodesCompliance200ApplicationJSONDataNodesModeEnumFullCompliance  GetNodesCompliance200ApplicationJSONDataNodesModeEnum = "full-compliance"
	GetNodesCompliance200ApplicationJSONDataNodesModeEnumChangesOnly     GetNodesCompliance200ApplicationJSONDataNodesModeEnum = "changes-only"
	GetNodesCompliance200ApplicationJSONDataNodesModeEnumReportsDisabled GetNodesCompliance200ApplicationJSONDataNodesModeEnum = "reports-disabled"
)

func (e *GetNodesCompliance200ApplicationJSONDataNodesModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full-compliance":
		fallthrough
	case "changes-only":
		fallthrough
	case "reports-disabled":
		*e = GetNodesCompliance200ApplicationJSONDataNodesModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNodesCompliance200ApplicationJSONDataNodesModeEnum: %s", s)
	}
}

type GetNodesCompliance200ApplicationJSONDataNodes struct {
	// Rule compliance level
	Compliance        float32                                                        `json:"compliance"`
	ComplianceDetails GetNodesCompliance200ApplicationJSONDataNodesComplianceDetails `json:"complianceDetails"`
	// id of the node
	ID   string                                                `json:"id"`
	Mode GetNodesCompliance200ApplicationJSONDataNodesModeEnum `json:"mode"`
}

type GetNodesCompliance200ApplicationJSONData struct {
	Nodes []GetNodesCompliance200ApplicationJSONDataNodes `json:"nodes"`
}

// GetNodesCompliance200ApplicationJSONResultEnum - Result of the request
type GetNodesCompliance200ApplicationJSONResultEnum string

const (
	GetNodesCompliance200ApplicationJSONResultEnumSuccess GetNodesCompliance200ApplicationJSONResultEnum = "success"
	GetNodesCompliance200ApplicationJSONResultEnumError   GetNodesCompliance200ApplicationJSONResultEnum = "error"
)

func (e *GetNodesCompliance200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = GetNodesCompliance200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNodesCompliance200ApplicationJSONResultEnum: %s", s)
	}
}

// GetNodesCompliance200ApplicationJSON - Success
type GetNodesCompliance200ApplicationJSON struct {
	// The id of the action
	Action GetNodesCompliance200ApplicationJSONActionEnum `json:"action"`
	Data   GetNodesCompliance200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result GetNodesCompliance200ApplicationJSONResultEnum `json:"result"`
}

type GetNodesComplianceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	GetNodesCompliance200ApplicationJSONObject *GetNodesCompliance200ApplicationJSON
}
