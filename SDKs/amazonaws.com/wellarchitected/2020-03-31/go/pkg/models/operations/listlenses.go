// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListLensesLensStatusEnum - The status of lenses to be returned.
type ListLensesLensStatusEnum string

const (
	ListLensesLensStatusEnumAll       ListLensesLensStatusEnum = "ALL"
	ListLensesLensStatusEnumDraft     ListLensesLensStatusEnum = "DRAFT"
	ListLensesLensStatusEnumPublished ListLensesLensStatusEnum = "PUBLISHED"
)

func (e *ListLensesLensStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALL":
		fallthrough
	case "DRAFT":
		fallthrough
	case "PUBLISHED":
		*e = ListLensesLensStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListLensesLensStatusEnum: %s", s)
	}
}

// ListLensesLensTypeEnum - The type of lenses to be returned.
type ListLensesLensTypeEnum string

const (
	ListLensesLensTypeEnumAwsOfficial  ListLensesLensTypeEnum = "AWS_OFFICIAL"
	ListLensesLensTypeEnumCustomShared ListLensesLensTypeEnum = "CUSTOM_SHARED"
	ListLensesLensTypeEnumCustomSelf   ListLensesLensTypeEnum = "CUSTOM_SELF"
)

func (e *ListLensesLensTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS_OFFICIAL":
		fallthrough
	case "CUSTOM_SHARED":
		fallthrough
	case "CUSTOM_SELF":
		*e = ListLensesLensTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListLensesLensTypeEnum: %s", s)
	}
}

type ListLensesRequest struct {
	LensName *string `queryParam:"style=form,explode=true,name=LensName"`
	// The status of lenses to be returned.
	LensStatus *ListLensesLensStatusEnum `queryParam:"style=form,explode=true,name=LensStatus"`
	// The type of lenses to be returned.
	LensType          *ListLensesLensTypeEnum `queryParam:"style=form,explode=true,name=LensType"`
	MaxResults        *int64                  `queryParam:"style=form,explode=true,name=MaxResults"`
	NextToken         *string                 `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListLensesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListLensesOutput *shared.ListLensesOutput
	StatusCode       int
	RawResponse      *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
