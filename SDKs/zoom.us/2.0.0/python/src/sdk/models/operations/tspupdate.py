"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TspUpdateApplicationJSONTspBridgeEnum(str, Enum):
    r"""Telephony bridge"""
    US_TSP_TB = 'US_TSP_TB'
    EU_TSP_TB = 'EU_TSP_TB'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TspUpdateApplicationJSON:
    r"""TSP Account"""
    
    dial_in_number_unrestricted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dial_in_number_unrestricted'), 'exclude': lambda f: f is None }})
    r"""Control restriction on account users adding a TSP number outside of account's dial in numbers."""  
    enable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enable'), 'exclude': lambda f: f is None }})
    r"""Enable 3rd party audio conferencing for account users"""  
    master_account_setting_extended: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('master_account_setting_extended'), 'exclude': lambda f: f is None }})
    r"""For master account, extend its TSP setting to all sub accounts. For sub account, extend TSP setting from master account."""  
    modify_credential_forbidden: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modify_credential_forbidden'), 'exclude': lambda f: f is None }})
    r"""Control restriction on account users being able to modify their TSP credentials."""  
    tsp_bridge: Optional[TspUpdateApplicationJSONTspBridgeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tsp_bridge'), 'exclude': lambda f: f is None }})
    r"""Telephony bridge"""  
    tsp_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tsp_enabled'), 'exclude': lambda f: f is None }})
    r"""Enable TSP feature for account. This has to be enabled to use any other tsp settings/features."""  
    tsp_provider: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tsp_provider'), 'exclude': lambda f: f is None }})
    r"""3rd party audio conferencing provider"""  
    

@dataclasses.dataclass
class TspUpdateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    