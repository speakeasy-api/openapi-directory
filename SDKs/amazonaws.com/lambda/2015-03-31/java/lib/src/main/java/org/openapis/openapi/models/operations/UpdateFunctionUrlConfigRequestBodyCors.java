/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateFunctionUrlConfigRequestBodyCors - The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;cross-origin resource sharing (CORS)&lt;/a&gt; settings for your Lambda function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.
 */
public class UpdateFunctionUrlConfigRequestBodyCors {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowCredentials")
    public Boolean allowCredentials;
    public UpdateFunctionUrlConfigRequestBodyCors withAllowCredentials(Boolean allowCredentials) {
        this.allowCredentials = allowCredentials;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowHeaders")
    public String[] allowHeaders;
    public UpdateFunctionUrlConfigRequestBodyCors withAllowHeaders(String[] allowHeaders) {
        this.allowHeaders = allowHeaders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowMethods")
    public String[] allowMethods;
    public UpdateFunctionUrlConfigRequestBodyCors withAllowMethods(String[] allowMethods) {
        this.allowMethods = allowMethods;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowOrigins")
    public String[] allowOrigins;
    public UpdateFunctionUrlConfigRequestBodyCors withAllowOrigins(String[] allowOrigins) {
        this.allowOrigins = allowOrigins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExposeHeaders")
    public String[] exposeHeaders;
    public UpdateFunctionUrlConfigRequestBodyCors withExposeHeaders(String[] exposeHeaders) {
        this.exposeHeaders = exposeHeaders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxAge")
    public Long maxAge;
    public UpdateFunctionUrlConfigRequestBodyCors withMaxAge(Long maxAge) {
        this.maxAge = maxAge;
        return this;
    }
    
}
