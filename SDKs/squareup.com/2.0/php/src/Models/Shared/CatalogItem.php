<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CatalogItem - A [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) instance of the `ITEM` type, also referred to as an item, in the catalog.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CatalogItem
{
    /**
     * The text of the item's display label in the Square Point of Sale app. Only up to the first five characters of the string are used.
     * 
     * This attribute is searchable, and its value length is of Unicode code points.
     * 
     * @var ?string $abbreviation
     */
	#[\JMS\Serializer\Annotation\SerializedName('abbreviation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $abbreviation = null;
    
    /**
     * If `true`, the item can be added to electronically fulfilled orders from the merchant's online store.
     * 
     * @var ?bool $availableElectronically
     */
	#[\JMS\Serializer\Annotation\SerializedName('available_electronically')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $availableElectronically = null;
    
    /**
     * If `true`, the item can be added to pickup orders from the merchant's online store.
     * 
     * @var ?bool $availableForPickup
     */
	#[\JMS\Serializer\Annotation\SerializedName('available_for_pickup')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $availableForPickup = null;
    
    /**
     * If `true`, the item can be added to shipping orders from the merchant's online store.
     * 
     * @var ?bool $availableOnline
     */
	#[\JMS\Serializer\Annotation\SerializedName('available_online')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $availableOnline = null;
    
    /**
     * The ID of the item's category, if any.
     * 
     * @var ?string $categoryId
     */
	#[\JMS\Serializer\Annotation\SerializedName('category_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $categoryId = null;
    
    /**
     * The item's description. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * List of item options IDs for this item. Used to manage and group item
     * 
     * variations in a specified order.
     * 
     * Maximum: 6 item options.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CatalogItemOptionForItem> $itemOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('item_options')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CatalogItemOptionForItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $itemOptions = null;
    
    /**
     * The color of the item's display label in the Square Point of Sale app. This must be a valid hex color code.
     * 
     * @var ?string $labelColor
     */
	#[\JMS\Serializer\Annotation\SerializedName('label_color')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $labelColor = null;
    
    /**
     * A set of `CatalogItemModifierListInfo` objects
     * 
     * representing the modifier lists that apply to this item, along with the overrides and min
     * and max limits that are specific to this item. Modifier lists
     * may also be added to or deleted from an item using `UpdateItemModifierLists`.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CatalogItemModifierListInfo> $modifierListInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifier_list_info')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CatalogItemModifierListInfo>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $modifierListInfo = null;
    
    /**
     * The item's name. This is a searchable attribute for use in applicable query filters, its value must not be empty, and the length is of Unicode code points.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The product type of the item. May not be changed once an item has been created.
     * 
     * 
     * Only items of product type `REGULAR` or `APPOINTMENTS_SERVICE` may be created by this API; items with other product
     * types are read-only.
     * 
     * @var ?string $productType
     */
	#[\JMS\Serializer\Annotation\SerializedName('product_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $productType = null;
    
    /**
     * If `false`, the Square Point of Sale app will present the `CatalogItem`'s
     * 
     * details screen immediately, allowing the merchant to choose `CatalogModifier`s
     * before adding the item to the cart.  This is the default behavior.
     * 
     * If `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected
     * modifiers, and merchants can edit modifiers by drilling down onto the item's details.
     * 
     * Third-party clients are encouraged to implement similar behaviors.
     * 
     * @var ?bool $skipModifierScreen
     */
	#[\JMS\Serializer\Annotation\SerializedName('skip_modifier_screen')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $skipModifierScreen = null;
    
    /**
     * A name to sort the item by. If this name is unspecified, namely, the `sort_name` field is absent, the regular `name` field is used for sorting.
     * 
     * 
     * It is currently supported for sellers of the Japanese locale only.
     * 
     * @var ?string $sortName
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sortName = null;
    
    /**
     * A set of IDs indicating the taxes enabled for
     * 
     * this item. When updating an item, any taxes listed here will be added to the item.
     * Taxes may also be added to or deleted from an item using `UpdateItemTaxes`.
     * 
     * @var ?array<string> $taxIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taxIds = null;
    
    /**
     * A list of [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) objects for this item. An item must have
     * 
     * at least one variation.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CatalogObject> $variations
     */
	#[\JMS\Serializer\Annotation\SerializedName('variations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CatalogObject>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $variations = null;
    
	public function __construct()
	{
		$this->abbreviation = null;
		$this->availableElectronically = null;
		$this->availableForPickup = null;
		$this->availableOnline = null;
		$this->categoryId = null;
		$this->description = null;
		$this->itemOptions = null;
		$this->labelColor = null;
		$this->modifierListInfo = null;
		$this->name = null;
		$this->productType = null;
		$this->skipModifierScreen = null;
		$this->sortName = null;
		$this->taxIds = null;
		$this->variations = null;
	}
}
