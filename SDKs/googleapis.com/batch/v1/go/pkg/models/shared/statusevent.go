// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StatusEventTaskStateEnum - Task State
type StatusEventTaskStateEnum string

const (
	StatusEventTaskStateEnumStateUnspecified StatusEventTaskStateEnum = "STATE_UNSPECIFIED"
	StatusEventTaskStateEnumPending          StatusEventTaskStateEnum = "PENDING"
	StatusEventTaskStateEnumAssigned         StatusEventTaskStateEnum = "ASSIGNED"
	StatusEventTaskStateEnumRunning          StatusEventTaskStateEnum = "RUNNING"
	StatusEventTaskStateEnumFailed           StatusEventTaskStateEnum = "FAILED"
	StatusEventTaskStateEnumSucceeded        StatusEventTaskStateEnum = "SUCCEEDED"
	StatusEventTaskStateEnumUnexecuted       StatusEventTaskStateEnum = "UNEXECUTED"
)

func (e StatusEventTaskStateEnum) ToPointer() *StatusEventTaskStateEnum {
	return &e
}

func (e *StatusEventTaskStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "ASSIGNED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "UNEXECUTED":
		*e = StatusEventTaskStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusEventTaskStateEnum: %v", v)
	}
}

// StatusEvent - Status event
type StatusEvent struct {
	// Description of the event.
	Description *string `json:"description,omitempty"`
	// The time this event occurred.
	EventTime *string `json:"eventTime,omitempty"`
	// This Task Execution field includes detail information for task execution procedures, based on StatusEvent types.
	TaskExecution *TaskExecution `json:"taskExecution,omitempty"`
	// Task State
	TaskState *StatusEventTaskStateEnum `json:"taskState,omitempty"`
	// Type of the event.
	Type *string `json:"type,omitempty"`
}
