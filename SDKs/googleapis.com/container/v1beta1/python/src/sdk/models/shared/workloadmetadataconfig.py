"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class WorkloadMetadataConfigModeEnum(str, Enum):
    r"""Mode is the configuration for how to expose metadata to workloads running on the node pool."""
    MODE_UNSPECIFIED = 'MODE_UNSPECIFIED'
    GCE_METADATA = 'GCE_METADATA'
    GKE_METADATA = 'GKE_METADATA'

class WorkloadMetadataConfigNodeMetadataEnum(str, Enum):
    r"""NodeMetadata is the configuration for how to expose metadata to the workloads running on the node."""
    UNSPECIFIED = 'UNSPECIFIED'
    SECURE = 'SECURE'
    EXPOSE = 'EXPOSE'
    GKE_METADATA_SERVER = 'GKE_METADATA_SERVER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkloadMetadataConfig:
    r"""WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool."""
    
    mode: Optional[WorkloadMetadataConfigModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mode'), 'exclude': lambda f: f is None }})
    r"""Mode is the configuration for how to expose metadata to workloads running on the node pool."""  
    node_metadata: Optional[WorkloadMetadataConfigNodeMetadataEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeMetadata'), 'exclude': lambda f: f is None }})
    r"""NodeMetadata is the configuration for how to expose metadata to the workloads running on the node."""  
    