"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class PreprintsReadRequest:
    
    preprint_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'preprint_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the preprint."""  
    

@dataclasses.dataclass
class PreprintsReadPreprintAttributes:
    r"""The properties of the preprint entity."""
    
    date_created: Optional[datetime] = dataclasses.field(default=None)
    r"""The time at which the preprint was created, as an iso8601 formatted timestamp."""  
    date_modified: Optional[datetime] = dataclasses.field(default=None)
    r"""The time at which the preprint was last modified, as an iso8601 formatted timestamp."""  
    date_published: Optional[datetime] = dataclasses.field(default=None)
    r"""The time at which the preprint was published, as an iso8601 formatted timestamp."""  
    doi: Optional[str] = dataclasses.field(default=None)
    r"""The DOI of the associated journal article, as entered by the user, if the preprint is published."""  
    is_preprint_orphan: Optional[bool] = dataclasses.field(default=None)
    r"""Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions."""  
    license_record: Optional[str] = dataclasses.field(default=None)
    r"""The metadata (copyright year and holder) associated with a license, required for certain licenses."""  
    subjects: Optional[list[str]] = dataclasses.field(default=None)
    r"""A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject."""  
    

@dataclasses.dataclass
class PreprintsReadPreprintLinks:
    r"""URLs to alternative representations of the preprint entity."""
    
    doi: Optional[str] = dataclasses.field(default=None)
    r"""The URL representation of the DOI entered by the user for the preprint manuscript."""  
    html: Optional[str] = dataclasses.field(default=None)
    r"""A link to the project on the OSF that was created for the preprint, or from which the preprint was created."""  
    preprint_doi: Optional[str] = dataclasses.field(default=None)
    r"""The URL representation of the OSF assigned DOI for the preprint."""  
    self_: Optional[str] = dataclasses.field(default=None)
    r"""A link to the detail page for the preprint."""  
    

@dataclasses.dataclass
class PreprintsReadPreprintRelationships:
    r"""URLs to other entities or entity collections that have a relationship to the preprint entity."""
    
    node: str = dataclasses.field()
    r"""A relationship to the node that was created for the preprint, or from which the preprint was created."""  
    primary_file: str = dataclasses.field()
    r"""A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint."""  
    provider: str = dataclasses.field()
    r"""A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.)."""  
    bibliographic_contributors: Optional[str] = dataclasses.field(default=None)
    r"""A relationship to the bibliographic contributors that are listed as contributing to this preprint."""  
    citation: Optional[str] = dataclasses.field(default=None)
    r"""A relationship to the citation of the preprint."""  
    identifiers: Optional[str] = dataclasses.field(default=None)
    r"""A relationship to the identifiers associated with the preprint."""  
    license: Optional[str] = dataclasses.field(default=None)
    r"""A relationship to the license that has been applied to the preprint."""  
    

@dataclasses.dataclass
class PreprintsReadPreprint:
    r"""OK"""
    
    relationships: PreprintsReadPreprintRelationships = dataclasses.field()
    r"""URLs to other entities or entity collections that have a relationship to the preprint entity."""  
    type: str = dataclasses.field()
    r"""The type identifier of the preprint entity (`preprints`)."""  
    attributes: Optional[PreprintsReadPreprintAttributes] = dataclasses.field(default=None)
    r"""The properties of the preprint entity."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""The identifier of the preprint entity."""  
    links: Optional[PreprintsReadPreprintLinks] = dataclasses.field(default=None)
    r"""URLs to alternative representations of the preprint entity."""  
    

@dataclasses.dataclass
class PreprintsReadResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    