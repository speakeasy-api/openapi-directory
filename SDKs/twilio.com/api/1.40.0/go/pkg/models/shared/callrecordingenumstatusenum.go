// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CallRecordingEnumStatusEnum string

const (
	CallRecordingEnumStatusEnumInProgress CallRecordingEnumStatusEnum = "in-progress"
	CallRecordingEnumStatusEnumPaused     CallRecordingEnumStatusEnum = "paused"
	CallRecordingEnumStatusEnumStopped    CallRecordingEnumStatusEnum = "stopped"
	CallRecordingEnumStatusEnumProcessing CallRecordingEnumStatusEnum = "processing"
	CallRecordingEnumStatusEnumCompleted  CallRecordingEnumStatusEnum = "completed"
	CallRecordingEnumStatusEnumAbsent     CallRecordingEnumStatusEnum = "absent"
)

func (e *CallRecordingEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "in-progress":
		fallthrough
	case "paused":
		fallthrough
	case "stopped":
		fallthrough
	case "processing":
		fallthrough
	case "completed":
		fallthrough
	case "absent":
		*e = CallRecordingEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CallRecordingEnumStatusEnum: %s", s)
	}
}
