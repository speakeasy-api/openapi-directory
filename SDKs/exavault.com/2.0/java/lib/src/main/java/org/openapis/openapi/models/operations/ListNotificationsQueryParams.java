/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListNotificationsQueryParams {
    /**
     * The kind of action which triggers the notification. Valid choices are **connect** (only for delivery receipts), **download**, **upload**, **delete**, or **all** 
     * 
     * **Note** The **all** action matches notifications set to "all", not all notifications. For example, notifications set to trigger only on delete are not included if you filter for action=all
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=action")
    public ListNotificationsActionEnum action;
    public ListNotificationsQueryParams withAction(ListNotificationsActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Related records to include in the response. Valid options are **ownerUser**, **resource**, **share**
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include")
    public ListNotificationsIncludeEnum include;
    public ListNotificationsQueryParams withInclude(ListNotificationsIncludeEnum include) {
        this.include = include;
        return this;
    }
    
    /**
     * Number of notification records to return. Can be used for pagination.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;
    public ListNotificationsQueryParams withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Starting notification record in the result set. Can be used for pagination.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;
    public ListNotificationsQueryParams withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * What order the list of matches should be in. Valid sort fields are **resourcename**, **date**, **action** and **type**. The sort order for each sort field is ascending unless it is prefixed with a minus (\u201c-\u201c), in which case it will be descending.
     * 
     * You can chose multiple options for the sort by separating them with commmas, such as "type,-date" to sort by type, then most recent.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public ListNotificationsQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Type of notification include in the list. Valid options are **file**, **folder**, **send_receipt**, **share_receipt**, **file_drop**
     * 
     * If this parameter is not used, only **file** and **folder** type notifications are included in the list.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type")
    public ListNotificationsTypeEnum type;
    public ListNotificationsQueryParams withType(ListNotificationsTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
