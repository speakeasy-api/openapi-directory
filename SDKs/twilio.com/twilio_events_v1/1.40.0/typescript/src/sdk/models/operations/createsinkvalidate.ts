/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateSinkValidateServerList = [
  "https://events.twilio.com",
] as const;

export class CreateSinkValidateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateSinkValidateCreateSinkValidateRequest extends SpeakeasyBase {
  /**
   * A 34 character string that uniquely identifies the test event for a Sink being validated.
   */
  @SpeakeasyMetadata({ data: "form, name=TestId" })
  testId: string;
}

export class CreateSinkValidateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateSinkValidateCreateSinkValidateRequest;

  /**
   * A 34 character string that uniquely identifies the Sink being validated.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class CreateSinkValidateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  eventsV1SinkSinkValidate?: shared.EventsV1SinkSinkValidate;
}
