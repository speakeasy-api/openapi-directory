// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GroupsGetHitsPathParams struct {
	// Id of the group
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

// GroupsGetHitsFilterEnum - Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
type GroupsGetHitsFilterEnum string

const (
	GroupsGetHitsFilterEnumSpiders     GroupsGetHitsFilterEnum = "spiders"
	GroupsGetHitsFilterEnumUniques     GroupsGetHitsFilterEnum = "uniques"
	GroupsGetHitsFilterEnumNonuniques  GroupsGetHitsFilterEnum = "nonuniques"
	GroupsGetHitsFilterEnumConversions GroupsGetHitsFilterEnum = "conversions"
)

func (e *GroupsGetHitsFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "spiders":
		fallthrough
	case "uniques":
		fallthrough
	case "nonuniques":
		fallthrough
	case "conversions":
		*e = GroupsGetHitsFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupsGetHitsFilterEnum: %s", s)
	}
}

// GroupsGetHitsTimeframeEnum - Timeframe of the request. See list at $timeframeList
type GroupsGetHitsTimeframeEnum string

const (
	GroupsGetHitsTimeframeEnumYesterday     GroupsGetHitsTimeframeEnum = "yesterday"
	GroupsGetHitsTimeframeEnumLast7         GroupsGetHitsTimeframeEnum = "last7"
	GroupsGetHitsTimeframeEnumLast30        GroupsGetHitsTimeframeEnum = "last30"
	GroupsGetHitsTimeframeEnumLastmonth     GroupsGetHitsTimeframeEnum = "lastmonth"
	GroupsGetHitsTimeframeEnumCurrentmonth  GroupsGetHitsTimeframeEnum = "currentmonth"
	GroupsGetHitsTimeframeEnumPreviousmonth GroupsGetHitsTimeframeEnum = "previousmonth"
	GroupsGetHitsTimeframeEnumLast90        GroupsGetHitsTimeframeEnum = "last90"
	GroupsGetHitsTimeframeEnumLast120       GroupsGetHitsTimeframeEnum = "last120"
	GroupsGetHitsTimeframeEnumLast180       GroupsGetHitsTimeframeEnum = "last180"
	GroupsGetHitsTimeframeEnumCustom        GroupsGetHitsTimeframeEnum = "custom"
)

func (e *GroupsGetHitsTimeframeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "custom":
		*e = GroupsGetHitsTimeframeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupsGetHitsTimeframeEnum: %s", s)
	}
}

type GroupsGetHitsQueryParams struct {
	// Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
	Filter *GroupsGetHitsFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// Limit results to this number
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset where to start from (it's the lastKey field in the response object)
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// Timeframe of the request. See list at $timeframeList
	Timeframe GroupsGetHitsTimeframeEnum `queryParam:"style=form,explode=true,name=timeframe"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type GroupsGetHitsRequest struct {
	PathParams  GroupsGetHitsPathParams
	QueryParams GroupsGetHitsQueryParams
}

type GroupsGetHitsResponse struct {
	APICoreDtoClickStreamHitListPage *shared.APICoreDtoClickStreamHitListPage
	ContentType                      string
	StatusCode                       int
	RawResponse                      *http.Response
}
