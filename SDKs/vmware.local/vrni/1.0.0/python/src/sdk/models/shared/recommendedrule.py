"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import reference as shared_reference
from ..shared import simpleportrange as shared_simpleportrange
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RecommendedRuleActionEnum(str, Enum):
    ALLOW = 'ALLOW'
    DROP = 'DROP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecommendedRule:
    
    action: Optional[RecommendedRuleActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})  
    destinations: Optional[list[shared_reference.Reference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinations'), 'exclude': lambda f: f is None }})  
    port_ranges: Optional[list[shared_simpleportrange.SimplePortRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('port_ranges'), 'exclude': lambda f: f is None }})  
    protocols: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocols'), 'exclude': lambda f: f is None }})  
    sources: Optional[list[shared_reference.Reference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sources'), 'exclude': lambda f: f is None }})  
    