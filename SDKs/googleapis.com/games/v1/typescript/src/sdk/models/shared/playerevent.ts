/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * An event status resource.
 */
export class PlayerEvent extends SpeakeasyBase {
  /**
   * The ID of the event definition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "definitionId" })
  definitionId?: string;

  /**
   * The current number of times this event has occurred, as a string. The formatting of this string depends on the configuration of your event in the Play Games Developer Console.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formattedNumEvents" })
  formattedNumEvents?: string;

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string `games#playerEvent`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The current number of times this event has occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numEvents" })
  numEvents?: string;

  /**
   * The ID of the player.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "playerId" })
  playerId?: string;
}
