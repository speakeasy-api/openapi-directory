<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class NAWelcomeEvent
{
    /**
     * Camera that detected the event
     * 
     * @var ?string $cameraId
     */
	#[\JMS\Serializer\Annotation\SerializedName('camera_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cameraId = null;
    
    /**
     * Type of the detected object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NAWelcomeEventCategoryEnum $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NAWelcomeEventCategoryEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NAWelcomeEventCategoryEnum $category = null;
    
    /**
     * $eventList
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NAWelcomeSubEvent> $eventList
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_list')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NAWelcomeSubEvent>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eventList = null;
    
    /**
     * Identifier of the event
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * If person was considered away before being seen during this event
     * 
     * @var ?bool $isArrival
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_arrival')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isArrival = null;
    
    /**
     * User facing event description
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Id of the person the event is about (if any)
     * 
     * @var ?string $personId
     */
	#[\JMS\Serializer\Annotation\SerializedName('person_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $personId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('snapshot')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NAWelcomeSnapshot')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NAWelcomeSnapshot $snapshot = null;
    
    /**
     * Subtypes of SD and Alim events. Go to Welcome page for further details.
     * 
     * @var ?int $subType
     */
	#[\JMS\Serializer\Annotation\SerializedName('sub_type')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $subType = null;
    
    /**
     * Time of occurence of event
     * 
     * @var ?int $time
     */
	#[\JMS\Serializer\Annotation\SerializedName('time')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $time = null;
    
    /**
     * Type of events. Go to the Welcome page for further details.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Identifier of the video
     * 
     * @var ?string $videoId
     */
	#[\JMS\Serializer\Annotation\SerializedName('video_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $videoId = null;
    
    /**
     * Status of the video (recording, deleted or available)
     * 
     * @var ?string $videoStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('video_status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $videoStatus = null;
    
	public function __construct()
	{
		$this->cameraId = null;
		$this->category = null;
		$this->eventList = null;
		$this->id = null;
		$this->isArrival = null;
		$this->message = null;
		$this->personId = null;
		$this->snapshot = null;
		$this->subType = null;
		$this->time = null;
		$this->type = null;
		$this->videoId = null;
		$this->videoStatus = null;
	}
}
