// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateUsageTriggerServerList = []string{
	"https://api.twilio.com",
}

type CreateUsageTriggerSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum - The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is `POST`.
type CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum string

const (
	CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnumHead   CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum = "HEAD"
	CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnumGet    CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum = "GET"
	CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnumPost   CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum = "POST"
	CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnumPatch  CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum = "PATCH"
	CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnumPut    CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum = "PUT"
	CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnumDelete CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum = "DELETE"
)

func (e CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum) ToPointer() *CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum {
	return &e
}

func (e *CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum: %v", v)
	}
}

type CreateUsageTriggerCreateUsageTriggerRequest struct {
	// The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is `POST`.
	CallbackMethod *CreateUsageTriggerCreateUsageTriggerRequestCallbackMethodEnum `form:"name=CallbackMethod"`
	// The URL we should call using `callback_method` when the trigger fires.
	CallbackURL string `form:"name=CallbackUrl"`
	// A descriptive string that you create to describe the resource. It can be up to 64 characters long.
	FriendlyName *string                                  `form:"name=FriendlyName"`
	Recurring    *shared.UsageTriggerEnumRecurringEnum    `form:"name=Recurring"`
	TriggerBy    *shared.UsageTriggerEnumTriggerFieldEnum `form:"name=TriggerBy"`
	// The usage value at which the trigger should fire.  For convenience, you can use an offset value such as `+30` to specify a trigger_value that is 30 units more than the current usage value. Be sure to urlencode a `+` as `%2B`.
	TriggerValue  string                                   `form:"name=TriggerValue"`
	UsageCategory shared.UsageTriggerEnumUsageCategoryEnum `form:"name=UsageCategory"`
}

type CreateUsageTriggerRequest struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that will create the resource.
	AccountSid  string                                       `pathParam:"style=simple,explode=false,name=AccountSid"`
	RequestBody *CreateUsageTriggerCreateUsageTriggerRequest `request:"mediaType=application/x-www-form-urlencoded"`
}

type CreateUsageTriggerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	APIV2010AccountUsageUsageTrigger *shared.APIV2010AccountUsageUsageTrigger
}
