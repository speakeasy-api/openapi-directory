"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import price as shared_price
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProgrammaticGuaranteedTermsReservationTypeEnum(str, Enum):
    r"""The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD."""
    RESERVATION_TYPE_UNSPECIFIED = 'RESERVATION_TYPE_UNSPECIFIED'
    STANDARD = 'STANDARD'
    SPONSORSHIP = 'SPONSORSHIP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProgrammaticGuaranteedTerms:
    r"""Pricing terms for Programmatic Guaranteed Deals."""
    
    fixed_price: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedPrice'), 'exclude': lambda f: f is None }})
    r"""Represents a price and a pricing type for a deal."""  
    guaranteed_looks: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guaranteedLooks'), 'exclude': lambda f: f is None }})
    r"""Count of guaranteed looks."""  
    impression_cap: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('impressionCap'), 'exclude': lambda f: f is None }})
    r"""The lifetime impression cap for CPM Sponsorship deals. Deal will stop serving when cap is reached."""  
    minimum_daily_looks: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumDailyLooks'), 'exclude': lambda f: f is None }})
    r"""Daily minimum looks for CPD deal types."""  
    percent_share_of_voice: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentShareOfVoice'), 'exclude': lambda f: f is None }})
    r"""For sponsorship deals, this is the percentage of the seller's eligible impressions that the deal will serve until the cap is reached. Valid value is within range 0~100."""  
    reservation_type: Optional[ProgrammaticGuaranteedTermsReservationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reservationType'), 'exclude': lambda f: f is None }})
    r"""The reservation type for a Programmatic Guaranteed deal. This indicates whether the number of impressions is fixed, or a percent of available impressions. If not specified, the default reservation type is STANDARD."""  
    