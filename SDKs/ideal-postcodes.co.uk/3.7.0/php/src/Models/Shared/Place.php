<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Place - Represents a geographical place
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Place
{
    /**
     *   3 letter country code (ISO 3166-1)
     * 
     * 
     * 
     * @var string $countryIso
     */
	#[\JMS\Serializer\Annotation\SerializedName('country_iso')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $countryIso;
    
    /**
     * Indicates the provenance of a place.
     * 
     * 
     *   - `geonames` GeoNames place
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PlaceDatasetEnum $dataset
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataset')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PlaceDatasetEnum>')]
    public PlaceDatasetEnum $dataset;
    
    /**
     * Longer form description of the place.
     * 
     * 
     * 
     * @var string $descriptiveName
     */
	#[\JMS\Serializer\Annotation\SerializedName('descriptive_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $descriptiveName;
    
    /**
     * Global unique internally generated identifier for a place
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Language represented by 2 letter ISO Code (639-1)
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\LanguageEnum $language
     */
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LanguageEnum>')]
    public LanguageEnum $language;
    
    /**
     * The latitude of the postcode (WGS84/ETRS89).
     * 
     * 
     * Can be a positive or negative decimal. E.g. `51.5083983`.
     * 
     * Returns an empty string if no location data is available. 
     * 
     * @var mixed $latitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('latitude')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $latitude;
    
    /**
     * The longitude of the postcode (WGS84/ETRS89).
     * 
     * 
     * Can be a positive or negative decimal. E.g. -0.1283983
     * 
     * Returns an empty string if no location data is available. 
     * 
     * @var mixed $longitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('longitude')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $longitude;
    
    /**
     * Place name
     * 
     * 
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Native representation of a place
     * 
     * @var mixed $native
     */
	#[\JMS\Serializer\Annotation\SerializedName('native')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $native = null;
    
	public function __construct()
	{
		$this->countryIso = "";
		$this->dataset = \OpenAPI\OpenAPI\Models\Shared\PlaceDatasetEnum::GEONAMES;
		$this->descriptiveName = "";
		$this->id = "";
		$this->language = \OpenAPI\OpenAPI\Models\Shared\LanguageEnum::EN;
		$this->latitude = null;
		$this->longitude = null;
		$this->name = "";
		$this->native = null;
	}
}
