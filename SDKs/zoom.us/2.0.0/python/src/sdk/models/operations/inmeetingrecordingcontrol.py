"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InMeetingRecordingControlApplicationJSON:
    
    method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""The method that you would like to control. The value of this field can be one of the following:
    * `recording.start`: Provide this value if you would like to start the recording.<br><br>
    * `recording.stop`: Provide this value if you would like to stop the recording.<br><br>
    * `recording.pause`: Provide this value if you would like to pause the recording.<br><br>
    * `recording.resume`: Provide this value if you would like to resume the recording that was previously paused.
    """  
    

@dataclasses.dataclass
class InMeetingRecordingControlRequest:
    
    meeting_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'meetingId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the live meeting."""  
    request_body: Optional[InMeetingRecordingControlApplicationJSON] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class InMeetingRecordingControlResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    in_meeting_recording_control_202_application_json_any: Optional[Any] = dataclasses.field(default=None)
    r"""**HTTP Status:** `202` **Accepted**
    Request processed successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    