// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/types"
)

type AccountBillingInvoicesRequest struct {
	// The account ID.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// Start date for the invoice query in `yyyy-mm-dd` format. The date range defined by the “from” and “to” parameters should not exceed one year. The range defined should fall within the past three years.
	//
	From *types.Date `queryParam:"style=form,explode=true,name=from"`
	// End date for the invoice query in `yyyy-mm-dd` format
	To *types.Date `queryParam:"style=form,explode=true,name=to"`
}

type AccountBillingInvoices200ApplicationXMLInvoices struct {
	// The remaining balance of the invoice after all payments, adjustments, and refunds are applied.
	//
	//
	Balance *float64
	// The date by which the payment for this invoice is due.
	//
	//
	DueDate *string
	// Unique identifier of the invoice.
	ID *string
	// The date when the invoice was generated.
	//
	InvoiceDate *string
	// Invoice number.
	InvoiceNumber *string
	// Status of the invoice.
	Status *string
	// This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in the invoice.
	//
	TargetDate *string
	// Tax amount.
	TaxAmount *float64
	// Total invoice amount.
	TotalAmount *float64
}

// AccountBillingInvoices200ApplicationXML - **HTTP Status Code:** `200`<br>
// Account billing invoice information returned.
type AccountBillingInvoices200ApplicationXML struct {
	// Currency used in the invoice.
	Currency *string
	Invoices []AccountBillingInvoices200ApplicationXMLInvoices
}

type AccountBillingInvoices200ApplicationJSONInvoices struct {
	// The remaining balance of the invoice after all payments, adjustments, and refunds are applied.
	//
	//
	Balance *float64 `json:"balance,omitempty"`
	// The date by which the payment for this invoice is due.
	//
	//
	DueDate *string `json:"due_date,omitempty"`
	// Unique identifier of the invoice.
	ID *string `json:"id,omitempty"`
	// The date when the invoice was generated.
	//
	InvoiceDate *string `json:"invoice_date,omitempty"`
	// Invoice number.
	InvoiceNumber *string `json:"invoice_number,omitempty"`
	// Status of the invoice.
	Status *string `json:"status,omitempty"`
	// This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in the invoice.
	//
	TargetDate *string `json:"target_date,omitempty"`
	// Tax amount.
	TaxAmount *float64 `json:"tax_amount,omitempty"`
	// Total invoice amount.
	TotalAmount *float64 `json:"total_amount,omitempty"`
}

// AccountBillingInvoices200ApplicationJSON - **HTTP Status Code:** `200`<br>
// Account billing invoice information returned.
type AccountBillingInvoices200ApplicationJSON struct {
	// Currency used in the invoice.
	Currency *string                                            `json:"currency,omitempty"`
	Invoices []AccountBillingInvoices200ApplicationJSONInvoices `json:"invoices,omitempty"`
}

type AccountBillingInvoicesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Account billing invoice information returned.
	AccountBillingInvoices200ApplicationJSONObject *AccountBillingInvoices200ApplicationJSON
}
