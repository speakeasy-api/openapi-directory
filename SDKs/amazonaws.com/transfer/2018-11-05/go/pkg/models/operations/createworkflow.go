// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateWorkflowXAmzTargetEnum
type CreateWorkflowXAmzTargetEnum string

const (
	CreateWorkflowXAmzTargetEnumTransferServiceCreateWorkflow CreateWorkflowXAmzTargetEnum = "TransferService.CreateWorkflow"
)

func (e CreateWorkflowXAmzTargetEnum) ToPointer() *CreateWorkflowXAmzTargetEnum {
	return &e
}

func (e *CreateWorkflowXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TransferService.CreateWorkflow":
		*e = CreateWorkflowXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateWorkflowXAmzTargetEnum: %v", v)
	}
}

type CreateWorkflowRequest struct {
	CreateWorkflowRequest shared.CreateWorkflowRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            CreateWorkflowXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateWorkflowResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateWorkflowResponse *shared.CreateWorkflowResponse
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceExistsException
	ResourceExistsException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
