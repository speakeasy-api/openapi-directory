// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExternalMetricsSourceEnum string

const (
	ExternalMetricsSourceEnumDatadog   ExternalMetricsSourceEnum = "Datadog"
	ExternalMetricsSourceEnumDynatrace ExternalMetricsSourceEnum = "Dynatrace"
	ExternalMetricsSourceEnumNewRelic  ExternalMetricsSourceEnum = "NewRelic"
	ExternalMetricsSourceEnumInstana   ExternalMetricsSourceEnum = "Instana"
)

func (e ExternalMetricsSourceEnum) ToPointer() *ExternalMetricsSourceEnum {
	return &e
}

func (e *ExternalMetricsSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Datadog":
		fallthrough
	case "Dynatrace":
		fallthrough
	case "NewRelic":
		fallthrough
	case "Instana":
		*e = ExternalMetricsSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExternalMetricsSourceEnum: %v", v)
	}
}
