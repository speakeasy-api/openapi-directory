// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ShareStatusEnum string

const (
	ShareStatusEnumNotStarted          ShareStatusEnum = "NOT_STARTED"
	ShareStatusEnumInProgress          ShareStatusEnum = "IN_PROGRESS"
	ShareStatusEnumCompleted           ShareStatusEnum = "COMPLETED"
	ShareStatusEnumCompletedWithErrors ShareStatusEnum = "COMPLETED_WITH_ERRORS"
	ShareStatusEnumError               ShareStatusEnum = "ERROR"
)

func (e *ShareStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NOT_STARTED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "COMPLETED_WITH_ERRORS":
		fallthrough
	case "ERROR":
		*e = ShareStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ShareStatusEnum: %s", s)
	}
}
