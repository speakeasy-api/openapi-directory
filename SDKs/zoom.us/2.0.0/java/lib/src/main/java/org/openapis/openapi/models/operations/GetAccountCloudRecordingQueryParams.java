/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetAccountCloudRecordingQueryParams {
    /**
     * The start date in UTC for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the \u201cfrom\u201d and \u201cto\u201d parameters, by default the value of 'from' field will be \u201c2020-06-30\u201d and the value of the 'to' field will be \u201c2020-07-01\u201d.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from")
    public OffsetDateTime from;
    public GetAccountCloudRecordingQueryParams withFrom(OffsetDateTime from) {
        this.from = from;
        return this;
    }
    
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=next_page_token")
    public String nextPageToken;
    public GetAccountCloudRecordingQueryParams withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of records returned within a single API call.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_size")
    public Long pageSize;
    public GetAccountCloudRecordingQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=to")
    public OffsetDateTime to;
    public GetAccountCloudRecordingQueryParams withTo(OffsetDateTime to) {
        this.to = to;
        return this;
    }
    
}
