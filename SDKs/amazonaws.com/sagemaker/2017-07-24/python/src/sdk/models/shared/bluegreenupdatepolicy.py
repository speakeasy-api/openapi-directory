"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import trafficroutingconfig as shared_trafficroutingconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BlueGreenUpdatePolicy:
    r"""Update policy for a blue/green deployment. If this update policy is specified, SageMaker creates a new fleet during the deployment while maintaining the old fleet. SageMaker flips traffic to the new fleet according to the specified traffic routing configuration. Only one update policy should be used in the deployment configuration. If no update policy is specified, SageMaker uses a blue/green deployment strategy with all at once traffic shifting by default."""
    
    traffic_routing_configuration: shared_trafficroutingconfig.TrafficRoutingConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrafficRoutingConfiguration') }})  
    maximum_execution_timeout_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumExecutionTimeoutInSeconds'), 'exclude': lambda f: f is None }})  
    termination_wait_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TerminationWaitInSeconds'), 'exclude': lambda f: f is None }})  
    