"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from datetime import date
from typing import Optional


@dataclasses.dataclass
class GetInvoicingRequest:
    
    accounts_synced: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'accounts_synced', 'style': 'form', 'explode': True }})
    r"""the number of accounts synchronized during the period"""  
    all: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'all', 'style': 'form', 'explode': True }})
    r"""get all the invoicing data at once"""  
    connections_account: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'connections_account', 'style': 'form', 'explode': True }})
    r"""the number of Bank API connections synchronized during the period"""  
    connections_synced: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'connections_synced', 'style': 'form', 'explode': True }})
    r"""the number of connections synchronized during the period"""  
    detail: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'detail', 'style': 'form', 'explode': True }})
    r"""get full ids list instead of numbers"""  
    max_date: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_date', 'style': 'form', 'explode': True }})
    r"""maximum date"""  
    min_date: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'min_date', 'style': 'form', 'explode': True }})
    r"""minimal date"""  
    payments_synced: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'payments_synced', 'style': 'form', 'explode': True }})
    r"""the number of payments done during the period"""  
    subscriptions_synced: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'subscriptions_synced', 'style': 'form', 'explode': True }})
    r"""the number of subscriptions synchronized during the period"""  
    transfers_synced: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'transfers_synced', 'style': 'form', 'explode': True }})
    r"""the number of transfers done during the period"""  
    users_bank: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'users_bank', 'style': 'form', 'explode': True }})
    r"""the number of user of the Bank API synchronized during the period"""  
    users_bill: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'users_bill', 'style': 'form', 'explode': True }})
    r"""the number of user of the Bill API synchronized during the period"""  
    users_synced: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'users_synced', 'style': 'form', 'explode': True }})
    r"""the number of user synchronized during the period"""  
    

@dataclasses.dataclass
class GetInvoicingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    