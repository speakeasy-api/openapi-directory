// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateSnapshotsActionEnum
type POSTCreateSnapshotsActionEnum string

const (
	POSTCreateSnapshotsActionEnumCreateSnapshots POSTCreateSnapshotsActionEnum = "CreateSnapshots"
)

func (e POSTCreateSnapshotsActionEnum) ToPointer() *POSTCreateSnapshotsActionEnum {
	return &e
}

func (e *POSTCreateSnapshotsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateSnapshots":
		*e = POSTCreateSnapshotsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateSnapshotsActionEnum: %v", v)
	}
}

// POSTCreateSnapshotsVersionEnum
type POSTCreateSnapshotsVersionEnum string

const (
	POSTCreateSnapshotsVersionEnumTwoThousandAndSixteen1115 POSTCreateSnapshotsVersionEnum = "2016-11-15"
)

func (e POSTCreateSnapshotsVersionEnum) ToPointer() *POSTCreateSnapshotsVersionEnum {
	return &e
}

func (e *POSTCreateSnapshotsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTCreateSnapshotsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateSnapshotsVersionEnum: %v", v)
	}
}

type POSTCreateSnapshotsRequest struct {
	Action            POSTCreateSnapshotsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                         `request:"mediaType=text/xml"`
	Version           POSTCreateSnapshotsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateSnapshotsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
