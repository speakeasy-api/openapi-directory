/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Inventory {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Inventory(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * BatchChangeInventory
     * Applies adjustments and counts to the provided item quantities.
     * 
     * On success: returns the current calculated counts for all objects
     * referenced in the request.
     * On failure: returns a list of related errors.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BatchChangeInventoryResponse batchChangeInventory(org.openapis.openapi.models.shared.BatchChangeInventoryRequest request, org.openapis.openapi.models.operations.BatchChangeInventorySecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v2/inventory/changes/batch-create");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.BatchChangeInventoryResponse res = new org.openapis.openapi.models.operations.BatchChangeInventoryResponse(contentType, httpRes.statusCode()) {{
            batchChangeInventoryResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BatchChangeInventoryResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BatchChangeInventoryResponse.class);
                res.batchChangeInventoryResponse = out;
            }
        }

        return res;
    }

    /**
     * BatchRetrieveInventoryChanges
     * Returns historical physical counts and adjustments based on the
     * provided filter criteria.
     * 
     * Results are paginated and sorted in ascending order according their
     * `occurred_at` timestamp (oldest first).
     * 
     * BatchRetrieveInventoryChanges is a catch-all query endpoint for queries
     * that cannot be handled by other, simpler endpoints.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BatchRetrieveInventoryChangesResponse batchRetrieveInventoryChanges(org.openapis.openapi.models.shared.BatchRetrieveInventoryChangesRequest request, org.openapis.openapi.models.operations.BatchRetrieveInventoryChangesSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v2/inventory/changes/batch-retrieve");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.BatchRetrieveInventoryChangesResponse res = new org.openapis.openapi.models.operations.BatchRetrieveInventoryChangesResponse(contentType, httpRes.statusCode()) {{
            batchRetrieveInventoryChangesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BatchRetrieveInventoryChangesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BatchRetrieveInventoryChangesResponse.class);
                res.batchRetrieveInventoryChangesResponse = out;
            }
        }

        return res;
    }

    /**
     * BatchRetrieveInventoryCounts
     * Returns current counts for the provided
     * [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s at the requested
     * [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s.
     * 
     * Results are paginated and sorted in descending order according to their
     * `calculated_at` timestamp (newest first).
     * 
     * When `updated_after` is specified, only counts that have changed since that
     * time (based on the server timestamp for the most recent change) are
     * returned. This allows clients to perform a "sync" operation, for example
     * in response to receiving a Webhook notification.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.BatchRetrieveInventoryCountsResponse batchRetrieveInventoryCounts(org.openapis.openapi.models.shared.BatchRetrieveInventoryCountsRequest request, org.openapis.openapi.models.operations.BatchRetrieveInventoryCountsSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v2/inventory/counts/batch-retrieve");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.BatchRetrieveInventoryCountsResponse res = new org.openapis.openapi.models.operations.BatchRetrieveInventoryCountsResponse(contentType, httpRes.statusCode()) {{
            batchRetrieveInventoryCountsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BatchRetrieveInventoryCountsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BatchRetrieveInventoryCountsResponse.class);
                res.batchRetrieveInventoryCountsResponse = out;
            }
        }

        return res;
    }

    /**
     * DeprecatedBatchChangeInventory
     * Deprecated version of [BatchChangeInventory](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-change-inventory) after the endpoint URL 
     * is updated to conform to the standard convention.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeprecatedBatchChangeInventoryResponse deprecatedBatchChangeInventory(org.openapis.openapi.models.shared.BatchChangeInventoryRequest request, org.openapis.openapi.models.operations.DeprecatedBatchChangeInventorySecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v2/inventory/batch-change");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedBatchChangeInventoryResponse res = new org.openapis.openapi.models.operations.DeprecatedBatchChangeInventoryResponse(contentType, httpRes.statusCode()) {{
            batchChangeInventoryResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BatchChangeInventoryResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BatchChangeInventoryResponse.class);
                res.batchChangeInventoryResponse = out;
            }
        }

        return res;
    }

    /**
     * DeprecatedBatchRetrieveInventoryChanges
     * Deprecated version of [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-changes) after the endpoint URL 
     * is updated to conform to the standard convention.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeprecatedBatchRetrieveInventoryChangesResponse deprecatedBatchRetrieveInventoryChanges(org.openapis.openapi.models.shared.BatchRetrieveInventoryChangesRequest request, org.openapis.openapi.models.operations.DeprecatedBatchRetrieveInventoryChangesSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v2/inventory/batch-retrieve-changes");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedBatchRetrieveInventoryChangesResponse res = new org.openapis.openapi.models.operations.DeprecatedBatchRetrieveInventoryChangesResponse(contentType, httpRes.statusCode()) {{
            batchRetrieveInventoryChangesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BatchRetrieveInventoryChangesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BatchRetrieveInventoryChangesResponse.class);
                res.batchRetrieveInventoryChangesResponse = out;
            }
        }

        return res;
    }

    /**
     * DeprecatedBatchRetrieveInventoryCounts
     * Deprecated version of [BatchRetrieveInventoryCounts](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-counts) after the endpoint URL 
     * is updated to conform to the standard convention.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeprecatedBatchRetrieveInventoryCountsResponse deprecatedBatchRetrieveInventoryCounts(org.openapis.openapi.models.shared.BatchRetrieveInventoryCountsRequest request, org.openapis.openapi.models.operations.DeprecatedBatchRetrieveInventoryCountsSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v2/inventory/batch-retrieve-counts");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedBatchRetrieveInventoryCountsResponse res = new org.openapis.openapi.models.operations.DeprecatedBatchRetrieveInventoryCountsResponse(contentType, httpRes.statusCode()) {{
            batchRetrieveInventoryCountsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.BatchRetrieveInventoryCountsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.BatchRetrieveInventoryCountsResponse.class);
                res.batchRetrieveInventoryCountsResponse = out;
            }
        }

        return res;
    }

    /**
     * DeprecatedRetrieveInventoryAdjustment
     * Deprecated version of [RetrieveInventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/retrieve-inventory-adjustment) after the endpoint URL 
     * is updated to conform to the standard convention.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryAdjustmentResponse deprecatedRetrieveInventoryAdjustment(org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryAdjustmentRequest request, org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryAdjustmentSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryAdjustmentRequest.class, baseUrl, "/v2/inventory/adjustment/{adjustment_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryAdjustmentResponse res = new org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryAdjustmentResponse(contentType, httpRes.statusCode()) {{
            retrieveInventoryAdjustmentResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RetrieveInventoryAdjustmentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RetrieveInventoryAdjustmentResponse.class);
                res.retrieveInventoryAdjustmentResponse = out;
            }
        }

        return res;
    }

    /**
     * DeprecatedRetrieveInventoryPhysicalCount
     * Deprecated version of [RetrieveInventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/retrieve-inventory-physical-count) after the endpoint URL 
     * is updated to conform to the standard convention.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryPhysicalCountResponse deprecatedRetrieveInventoryPhysicalCount(org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryPhysicalCountRequest request, org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryPhysicalCountSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryPhysicalCountRequest.class, baseUrl, "/v2/inventory/physical-count/{physical_count_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryPhysicalCountResponse res = new org.openapis.openapi.models.operations.DeprecatedRetrieveInventoryPhysicalCountResponse(contentType, httpRes.statusCode()) {{
            retrieveInventoryPhysicalCountResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RetrieveInventoryPhysicalCountResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RetrieveInventoryPhysicalCountResponse.class);
                res.retrieveInventoryPhysicalCountResponse = out;
            }
        }

        return res;
    }

    /**
     * RetrieveInventoryAdjustment
     * Returns the [InventoryAdjustment](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryAdjustment) object
     * with the provided `adjustment_id`.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.RetrieveInventoryAdjustmentResponse retrieveInventoryAdjustment(org.openapis.openapi.models.operations.RetrieveInventoryAdjustmentRequest request, org.openapis.openapi.models.operations.RetrieveInventoryAdjustmentSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.RetrieveInventoryAdjustmentRequest.class, baseUrl, "/v2/inventory/adjustments/{adjustment_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.RetrieveInventoryAdjustmentResponse res = new org.openapis.openapi.models.operations.RetrieveInventoryAdjustmentResponse(contentType, httpRes.statusCode()) {{
            retrieveInventoryAdjustmentResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RetrieveInventoryAdjustmentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RetrieveInventoryAdjustmentResponse.class);
                res.retrieveInventoryAdjustmentResponse = out;
            }
        }

        return res;
    }

    /**
     * RetrieveInventoryChanges
     * Returns a set of physical counts and inventory adjustments for the
     * provided [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) at the requested
     * [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s. 
     * 
     * You can achieve the same result by calling [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-changes) 
     * and having the `catalog_object_ids` list contain a single element of the `CatalogObject` ID.
     * 
     * Results are paginated and sorted in descending order according to their
     * `occurred_at` timestamp (newest first).
     * 
     * There are no limits on how far back the caller can page. This endpoint can be 
     * used to display recent changes for a specific item. For more
     * sophisticated queries, use a batch endpoint.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.RetrieveInventoryChangesResponse retrieveInventoryChanges(org.openapis.openapi.models.operations.RetrieveInventoryChangesRequest request, org.openapis.openapi.models.operations.RetrieveInventoryChangesSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.RetrieveInventoryChangesRequest.class, baseUrl, "/v2/inventory/{catalog_object_id}/changes", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.RetrieveInventoryChangesRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.RetrieveInventoryChangesResponse res = new org.openapis.openapi.models.operations.RetrieveInventoryChangesResponse(contentType, httpRes.statusCode()) {{
            retrieveInventoryChangesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RetrieveInventoryChangesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RetrieveInventoryChangesResponse.class);
                res.retrieveInventoryChangesResponse = out;
            }
        }

        return res;
    }

    /**
     * RetrieveInventoryCount
     * Retrieves the current calculated stock count for a given
     * [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) at a given set of
     * [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location)s. Responses are paginated and unsorted.
     * For more sophisticated queries, use a batch endpoint.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.RetrieveInventoryCountResponse retrieveInventoryCount(org.openapis.openapi.models.operations.RetrieveInventoryCountRequest request, org.openapis.openapi.models.operations.RetrieveInventoryCountSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.RetrieveInventoryCountRequest.class, baseUrl, "/v2/inventory/{catalog_object_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.RetrieveInventoryCountRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.RetrieveInventoryCountResponse res = new org.openapis.openapi.models.operations.RetrieveInventoryCountResponse(contentType, httpRes.statusCode()) {{
            retrieveInventoryCountResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RetrieveInventoryCountResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RetrieveInventoryCountResponse.class);
                res.retrieveInventoryCountResponse = out;
            }
        }

        return res;
    }

    /**
     * RetrieveInventoryPhysicalCount
     * Returns the [InventoryPhysicalCount](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryPhysicalCount)
     * object with the provided `physical_count_id`.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.RetrieveInventoryPhysicalCountResponse retrieveInventoryPhysicalCount(org.openapis.openapi.models.operations.RetrieveInventoryPhysicalCountRequest request, org.openapis.openapi.models.operations.RetrieveInventoryPhysicalCountSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.RetrieveInventoryPhysicalCountRequest.class, baseUrl, "/v2/inventory/physical-counts/{physical_count_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.RetrieveInventoryPhysicalCountResponse res = new org.openapis.openapi.models.operations.RetrieveInventoryPhysicalCountResponse(contentType, httpRes.statusCode()) {{
            retrieveInventoryPhysicalCountResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RetrieveInventoryPhysicalCountResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RetrieveInventoryPhysicalCountResponse.class);
                res.retrieveInventoryPhysicalCountResponse = out;
            }
        }

        return res;
    }

    /**
     * RetrieveInventoryTransfer
     * Returns the [InventoryTransfer](https://developer.squareup.com/reference/square_2021-08-18/objects/InventoryTransfer) object
     * with the provided `transfer_id`.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.RetrieveInventoryTransferResponse retrieveInventoryTransfer(org.openapis.openapi.models.operations.RetrieveInventoryTransferRequest request, org.openapis.openapi.models.operations.RetrieveInventoryTransferSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.RetrieveInventoryTransferRequest.class, baseUrl, "/v2/inventory/transfers/{transfer_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.RetrieveInventoryTransferResponse res = new org.openapis.openapi.models.operations.RetrieveInventoryTransferResponse(contentType, httpRes.statusCode()) {{
            retrieveInventoryTransferResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RetrieveInventoryTransferResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RetrieveInventoryTransferResponse.class);
                res.retrieveInventoryTransferResponse = out;
            }
        }

        return res;
    }
}