// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaggableResourceTypeEnum string

const (
	TaggableResourceTypeEnumBatchPrediction TaggableResourceTypeEnum = "BatchPrediction"
	TaggableResourceTypeEnumDataSource      TaggableResourceTypeEnum = "DataSource"
	TaggableResourceTypeEnumEvaluation      TaggableResourceTypeEnum = "Evaluation"
	TaggableResourceTypeEnumMlModel         TaggableResourceTypeEnum = "MLModel"
)

func (e TaggableResourceTypeEnum) ToPointer() *TaggableResourceTypeEnum {
	return &e
}

func (e *TaggableResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BatchPrediction":
		fallthrough
	case "DataSource":
		fallthrough
	case "Evaluation":
		fallthrough
	case "MLModel":
		*e = TaggableResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaggableResourceTypeEnum: %v", v)
	}
}
