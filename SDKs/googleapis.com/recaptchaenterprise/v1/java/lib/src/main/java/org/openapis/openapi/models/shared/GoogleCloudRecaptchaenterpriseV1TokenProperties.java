/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecaptchaenterpriseV1TokenProperties - Properties of the provided event token.
 */
public class GoogleCloudRecaptchaenterpriseV1TokenProperties {
    /**
     * Action name provided at token generation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public String action;
    public GoogleCloudRecaptchaenterpriseV1TokenProperties withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * The name of the Android package with which the token was generated (Android keys only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("androidPackageName")
    public String androidPackageName;
    public GoogleCloudRecaptchaenterpriseV1TokenProperties withAndroidPackageName(String androidPackageName) {
        this.androidPackageName = androidPackageName;
        return this;
    }
    
    /**
     * The timestamp corresponding to the generation of the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public GoogleCloudRecaptchaenterpriseV1TokenProperties withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The hostname of the page on which the token was generated (Web keys only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostname")
    public String hostname;
    public GoogleCloudRecaptchaenterpriseV1TokenProperties withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * Reason associated with the response when valid = false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidReason")
    public GoogleCloudRecaptchaenterpriseV1TokenPropertiesInvalidReasonEnum invalidReason;
    public GoogleCloudRecaptchaenterpriseV1TokenProperties withInvalidReason(GoogleCloudRecaptchaenterpriseV1TokenPropertiesInvalidReasonEnum invalidReason) {
        this.invalidReason = invalidReason;
        return this;
    }
    
    /**
     * The ID of the iOS bundle with which the token was generated (iOS keys only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iosBundleId")
    public String iosBundleId;
    public GoogleCloudRecaptchaenterpriseV1TokenProperties withIosBundleId(String iosBundleId) {
        this.iosBundleId = iosBundleId;
        return this;
    }
    
    /**
     * Whether the provided user response token is valid. When valid = false, the reason could be specified in invalid_reason or it could also be due to a user failing to solve a challenge or a sitekey mismatch (i.e the sitekey used to generate the token was different than the one specified in the assessment).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("valid")
    public Boolean valid;
    public GoogleCloudRecaptchaenterpriseV1TokenProperties withValid(Boolean valid) {
        this.valid = valid;
        return this;
    }
    
}
