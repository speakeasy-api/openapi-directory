/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateUserResponse {
    
    public String contentType;

    public CreateUserResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateUserResponse createUserResponse;

    public CreateUserResponse withCreateUserResponse(org.openapis.openapi.models.shared.CreateUserResponse createUserResponse) {
        this.createUserResponse = createUserResponse;
        return this;
    }
    
    /**
     * DirectoryServiceAuthenticationFailedException
     */
    
    public Object directoryServiceAuthenticationFailedException;

    public CreateUserResponse withDirectoryServiceAuthenticationFailedException(Object directoryServiceAuthenticationFailedException) {
        this.directoryServiceAuthenticationFailedException = directoryServiceAuthenticationFailedException;
        return this;
    }
    
    /**
     * DirectoryUnavailableException
     */
    
    public Object directoryUnavailableException;

    public CreateUserResponse withDirectoryUnavailableException(Object directoryUnavailableException) {
        this.directoryUnavailableException = directoryUnavailableException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public CreateUserResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidPasswordException
     */
    
    public Object invalidPasswordException;

    public CreateUserResponse withInvalidPasswordException(Object invalidPasswordException) {
        this.invalidPasswordException = invalidPasswordException;
        return this;
    }
    
    /**
     * NameAvailabilityException
     */
    
    public Object nameAvailabilityException;

    public CreateUserResponse withNameAvailabilityException(Object nameAvailabilityException) {
        this.nameAvailabilityException = nameAvailabilityException;
        return this;
    }
    
    /**
     * OrganizationNotFoundException
     */
    
    public Object organizationNotFoundException;

    public CreateUserResponse withOrganizationNotFoundException(Object organizationNotFoundException) {
        this.organizationNotFoundException = organizationNotFoundException;
        return this;
    }
    
    /**
     * OrganizationStateException
     */
    
    public Object organizationStateException;

    public CreateUserResponse withOrganizationStateException(Object organizationStateException) {
        this.organizationStateException = organizationStateException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateUserResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateUserResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ReservedNameException
     */
    
    public Object reservedNameException;

    public CreateUserResponse withReservedNameException(Object reservedNameException) {
        this.reservedNameException = reservedNameException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public CreateUserResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    public CreateUserResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
