/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
export const GetVisualCrossingWebServicesRestServicesTimelineLocationServerList =
  ["https://weather.visualcrossing.com"] as const;

export class GetVisualCrossingWebServicesRestServicesTimelineLocationRequest extends SpeakeasyBase {
  /**
   * data format of the output either json or CSV
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=contentType",
  })
  contentType?: string;

  /**
   * data to include in the output (required for CSV format - days,hours,alerts,current,events )
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include",
  })
  include?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key: string;

  /**
   * Language to use for weather descriptions
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lang" })
  lang?: string;

  /**
   * Locaton of interest as an address, partial address or decimal latitude,longtude value
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=location",
  })
  location: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=unitGroup",
  })
  unitGroup?: string;
}

export class GetVisualCrossingWebServicesRestServicesTimelineLocationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
