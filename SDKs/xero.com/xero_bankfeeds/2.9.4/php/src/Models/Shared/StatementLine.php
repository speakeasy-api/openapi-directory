<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StatementLine - the lines details for a statement
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StatementLine
{
    /**
     * Transaction amount
     * 
     * @var ?float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
    /**
     * The cheque/check number
     * 
     * @var ?string $chequeNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('chequeNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chequeNumber = null;
    
    /**
     * If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreditDebitIndicatorEnum $creditDebitIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditDebitIndicator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreditDebitIndicatorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreditDebitIndicatorEnum $creditDebitIndicator = null;
    
    /**
     * Transaction description
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Typically the merchant or payee name
     * 
     * @var ?string $payeeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('payeeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payeeName = null;
    
    /**
     * The date that the transaction was processed or cleared as seen in internet banking ISO-8601 YYYY-MM-DD
     * 
     * @var ?\DateTime $postedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('postedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $postedDate = null;
    
    /**
     * Optional field to enhance the Description
     * 
     * @var ?string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reference = null;
    
    /**
     * Financial institute's internal transaction identifier. If provided this field is factored into duplicate detection.
     * 
     * @var ?string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionId = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->chequeNumber = null;
		$this->creditDebitIndicator = null;
		$this->description = null;
		$this->payeeName = null;
		$this->postedDate = null;
		$this->reference = null;
		$this->transactionId = null;
	}
}
