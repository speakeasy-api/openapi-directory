/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetDataQualityRuleRecommendationRunResponse - Success
 */
public class GetDataQualityRuleRecommendationRunResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CompletedOn")
    public OffsetDateTime completedOn;

    public GetDataQualityRuleRecommendationRunResponse withCompletedOn(OffsetDateTime completedOn) {
        this.completedOn = completedOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedRulesetName")
    public String createdRulesetName;

    public GetDataQualityRuleRecommendationRunResponse withCreatedRulesetName(String createdRulesetName) {
        this.createdRulesetName = createdRulesetName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataSource")
    public DataSource dataSource;

    public GetDataQualityRuleRecommendationRunResponse withDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorString")
    public String errorString;

    public GetDataQualityRuleRecommendationRunResponse withErrorString(String errorString) {
        this.errorString = errorString;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExecutionTime")
    public Long executionTime;

    public GetDataQualityRuleRecommendationRunResponse withExecutionTime(Long executionTime) {
        this.executionTime = executionTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedOn")
    public OffsetDateTime lastModifiedOn;

    public GetDataQualityRuleRecommendationRunResponse withLastModifiedOn(OffsetDateTime lastModifiedOn) {
        this.lastModifiedOn = lastModifiedOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumberOfWorkers")
    public Long numberOfWorkers;

    public GetDataQualityRuleRecommendationRunResponse withNumberOfWorkers(Long numberOfWorkers) {
        this.numberOfWorkers = numberOfWorkers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecommendedRuleset")
    public String recommendedRuleset;

    public GetDataQualityRuleRecommendationRunResponse withRecommendedRuleset(String recommendedRuleset) {
        this.recommendedRuleset = recommendedRuleset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Role")
    public String role;

    public GetDataQualityRuleRecommendationRunResponse withRole(String role) {
        this.role = role;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RunId")
    public String runId;

    public GetDataQualityRuleRecommendationRunResponse withRunId(String runId) {
        this.runId = runId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartedOn")
    public OffsetDateTime startedOn;

    public GetDataQualityRuleRecommendationRunResponse withStartedOn(OffsetDateTime startedOn) {
        this.startedOn = startedOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public TaskStatusTypeEnum status;

    public GetDataQualityRuleRecommendationRunResponse withStatus(TaskStatusTypeEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Timeout")
    public Long timeout;

    public GetDataQualityRuleRecommendationRunResponse withTimeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }
    
    public GetDataQualityRuleRecommendationRunResponse(){}
}
