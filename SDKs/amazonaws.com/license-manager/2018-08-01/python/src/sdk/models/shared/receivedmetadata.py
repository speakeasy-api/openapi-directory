"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import allowedoperation_enum as shared_allowedoperation_enum
from ..shared import receivedstatus_enum as shared_receivedstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReceivedMetadata:
    r"""Metadata associated with received licenses and grants."""
    
    allowed_operations: Optional[list[shared_allowedoperation_enum.AllowedOperationEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowedOperations'), 'exclude': lambda f: f is None }})  
    received_status: Optional[shared_receivedstatus_enum.ReceivedStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReceivedStatus'), 'exclude': lambda f: f is None }})  
    received_status_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReceivedStatusReason'), 'exclude': lambda f: f is None }})  
    