/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class DeliveryReceipt extends SpeakeasyBase {
  /**
   * The API key that sent the SMS. This is useful when multiple accounts are sending webhooks to the same endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api-key" })
  apiKey?: string;

  /**
   * If the `client-ref` is set when the SMS is sent, it will be included in the delivery receipt
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client-ref" })
  clientRef?: string;

  /**
   * The status of the request. Will be a non `0` value if there has been an error, or if the status is unknown. See the [Delivery Receipt documentation](/messaging/sms/guides/delivery-receipts#dlr-error-codes) for more details
   */
  @SpeakeasyMetadata()
  @Expose({ name: "err-code" })
  errCode?: string;

  /**
   * The time when Vonage started to push this Delivery Receipt to your webhook endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message-timestamp" })
  messageTimestamp?: string;

  /**
   * The Vonage ID for this message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageId" })
  messageId?: string;

  /**
   * The number the message was sent to. Numbers are specified in E.164 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "msisdn" })
  msisdn?: string;

  /**
   * The Mobile Country Code Mobile Network Code (MCCMNC) of the carrier this phone number is registered with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network-code" })
  networkCode?: string;

  /**
   * A random string to be used when calculating the signature. _Only included if you have signatures enabled_
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonce" })
  nonce?: string;

  /**
   * The cost of the message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;

  /**
   * When the DLR was received from the carrier in the following format `YYMMDDHHMM`. For example, `2001011400` is at `2020-01-01 14:00`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scts" })
  scts?: string;

  /**
   * The signature to enable verification of the source of this webhook. Please see the [developer documentation for validating signatures](/concepts/guides/signing-messages) for more information, or use one of our published SDKs. _Only included if you have signatures enabled_
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sig" })
  sig?: string;

  /**
   * A code that explains where the message is in the delivery process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * A timestamp in Unix (seconds since the epoch) format. _Only included if you have signatures enabled_
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * The SenderID you set in `from` in your request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;
}
