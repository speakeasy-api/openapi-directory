/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ShareSettingsFolderConfig } from "./sharesettingsfolderconfig";
import { ShareSettingsProjectConfig } from "./sharesettingsprojectconfig";
import { Expose, Transform } from "class-transformer";

/**
 * Type of sharing for this shared-reservation
 */
export enum ShareSettingsShareTypeEnum {
  DirectProjectsUnderSpecificFolders = "DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS",
  Local = "LOCAL",
  Organization = "ORGANIZATION",
  ShareTypeUnspecified = "SHARE_TYPE_UNSPECIFIED",
  SpecificProjects = "SPECIFIC_PROJECTS",
}

/**
 * The share setting for reservations and sole tenancy node groups.
 */
export class ShareSettings extends SpeakeasyBase {
  /**
   * A map of folder id and folder config to specify consumer projects for this shared-reservation. This is only valid when share_type's value is DIRECT_PROJECTS_UNDER_SPECIFIC_FOLDERS. Folder id should be a string of number, and without "folders/" prefix.
   */
  @SpeakeasyMetadata({ elemType: ShareSettingsFolderConfig })
  @Expose({ name: "folderMap" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ShareSettingsFolderConfig> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ShareSettingsFolderConfig);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  folderMap?: Record<string, ShareSettingsFolderConfig>;

  /**
   * A map of project id and project config. This is only valid when share_type's value is SPECIFIC_PROJECTS.
   */
  @SpeakeasyMetadata({ elemType: ShareSettingsProjectConfig })
  @Expose({ name: "projectMap" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ShareSettingsProjectConfig> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ShareSettingsProjectConfig);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  projectMap?: Record<string, ShareSettingsProjectConfig>;

  /**
   * A List of Project names to specify consumer projects for this shared-reservation. This is only valid when share_type's value is SPECIFIC_PROJECTS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projects" })
  projects?: string[];

  /**
   * Type of sharing for this shared-reservation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shareType" })
  shareType?: ShareSettingsShareTypeEnum;
}
