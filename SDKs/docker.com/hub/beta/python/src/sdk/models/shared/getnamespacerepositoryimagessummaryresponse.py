"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetNamespaceRepositoryImagesSummaryResponseStatistics:
    
    active: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""Number of images counted as active in this repository."""  
    inactive: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inactive'), 'exclude': lambda f: f is None }})
    r"""Number of images counted as inactive in this repository."""  
    total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""Number of images in this repository."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetNamespaceRepositoryImagesSummaryResponse:
    r"""Summary information for images in a repository."""
    
    active_from: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active_from'), 'exclude': lambda f: f is None }})
    r"""Time from which an image must have been pushed or pulled to be counted as active."""  
    statistics: Optional[GetNamespaceRepositoryImagesSummaryResponseStatistics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statistics'), 'exclude': lambda f: f is None }})  
    