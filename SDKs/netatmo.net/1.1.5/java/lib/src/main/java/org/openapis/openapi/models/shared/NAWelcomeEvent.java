/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NAWelcomeEvent {
    /**
     * Camera that detected the event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("camera_id")
    public String cameraId;

    public NAWelcomeEvent withCameraId(String cameraId) {
        this.cameraId = cameraId;
        return this;
    }
    
    /**
     * Type of the detected object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public NAWelcomeEventCategoryEnum category;

    public NAWelcomeEvent withCategory(NAWelcomeEventCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_list")
    public NAWelcomeSubEvent[] eventList;

    public NAWelcomeEvent withEventList(NAWelcomeSubEvent[] eventList) {
        this.eventList = eventList;
        return this;
    }
    
    /**
     * Identifier of the event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public NAWelcomeEvent withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * If person was considered away before being seen during this event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_arrival")
    public Boolean isArrival;

    public NAWelcomeEvent withIsArrival(Boolean isArrival) {
        this.isArrival = isArrival;
        return this;
    }
    
    /**
     * User facing event description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;

    public NAWelcomeEvent withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * Id of the person the event is about (if any)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("person_id")
    public String personId;

    public NAWelcomeEvent withPersonId(String personId) {
        this.personId = personId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshot")
    public NAWelcomeSnapshot snapshot;

    public NAWelcomeEvent withSnapshot(NAWelcomeSnapshot snapshot) {
        this.snapshot = snapshot;
        return this;
    }
    
    /**
     * Subtypes of SD and Alim events. Go to Welcome page for further details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sub_type")
    public Integer subType;

    public NAWelcomeEvent withSubType(Integer subType) {
        this.subType = subType;
        return this;
    }
    
    /**
     * Time of occurence of event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time")
    public Integer time;

    public NAWelcomeEvent withTime(Integer time) {
        this.time = time;
        return this;
    }
    
    /**
     * Type of events. Go to the Welcome page for further details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public NAWelcomeEvent withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Identifier of the video
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("video_id")
    public String videoId;

    public NAWelcomeEvent withVideoId(String videoId) {
        this.videoId = videoId;
        return this;
    }
    
    /**
     * Status of the video (recording, deleted or available)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("video_status")
    public String videoStatus;

    public NAWelcomeEvent withVideoStatus(String videoStatus) {
        this.videoStatus = videoStatus;
        return this;
    }
    
    public NAWelcomeEvent(){}
}
