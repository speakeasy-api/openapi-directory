"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import productcreaterequest as shared_productcreaterequest
from ..shared import productresponse as shared_productresponse
from typing import Optional


@dataclasses.dataclass
class CreateProductSecurity:
    
    zettle_oauth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class CreateProductRequest:
    
    organization_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationUuid', 'style': 'simple', 'explode': False }})  
    product_create_request: shared_productcreaterequest.ProductCreateRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    return_entity: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'returnEntity', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class CreateProductResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    product_response: Optional[shared_productresponse.ProductResponse] = dataclasses.field(default=None)
    r"""Product created. It will include the Product in the response only if 'returnEntity' is true"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    