// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BackfillJobStateEnum - Backfill job state.
type BackfillJobStateEnum string

const (
	BackfillJobStateEnumStateUnspecified BackfillJobStateEnum = "STATE_UNSPECIFIED"
	BackfillJobStateEnumNotStarted       BackfillJobStateEnum = "NOT_STARTED"
	BackfillJobStateEnumPending          BackfillJobStateEnum = "PENDING"
	BackfillJobStateEnumActive           BackfillJobStateEnum = "ACTIVE"
	BackfillJobStateEnumStopped          BackfillJobStateEnum = "STOPPED"
	BackfillJobStateEnumFailed           BackfillJobStateEnum = "FAILED"
	BackfillJobStateEnumCompleted        BackfillJobStateEnum = "COMPLETED"
	BackfillJobStateEnumUnsupported      BackfillJobStateEnum = "UNSUPPORTED"
)

func (e *BackfillJobStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "NOT_STARTED":
		fallthrough
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "STOPPED":
		fallthrough
	case "FAILED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "UNSUPPORTED":
		*e = BackfillJobStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BackfillJobStateEnum: %s", s)
	}
}

// BackfillJobTriggerEnum - Backfill job's triggering reason.
type BackfillJobTriggerEnum string

const (
	BackfillJobTriggerEnumTriggerUnspecified BackfillJobTriggerEnum = "TRIGGER_UNSPECIFIED"
	BackfillJobTriggerEnumAutomatic          BackfillJobTriggerEnum = "AUTOMATIC"
	BackfillJobTriggerEnumManual             BackfillJobTriggerEnum = "MANUAL"
)

func (e *BackfillJobTriggerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TRIGGER_UNSPECIFIED":
		fallthrough
	case "AUTOMATIC":
		fallthrough
	case "MANUAL":
		*e = BackfillJobTriggerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BackfillJobTriggerEnum: %s", s)
	}
}

// BackfillJob - Represents a backfill job on a specific stream object.
type BackfillJob struct {
	// Output only. Errors which caused the backfill job to fail.
	Errors []Error `json:"errors,omitempty"`
	// Output only. Backfill job's end time.
	LastEndTime *string `json:"lastEndTime,omitempty"`
	// Output only. Backfill job's start time.
	LastStartTime *string `json:"lastStartTime,omitempty"`
	// Backfill job state.
	State *BackfillJobStateEnum `json:"state,omitempty"`
	// Backfill job's triggering reason.
	Trigger *BackfillJobTriggerEnum `json:"trigger,omitempty"`
}
