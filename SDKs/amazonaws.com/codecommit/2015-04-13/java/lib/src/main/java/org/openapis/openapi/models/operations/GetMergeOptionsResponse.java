/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class GetMergeOptionsResponse {
    /**
     * CommitDoesNotExistException
     */
    
    public Object commitDoesNotExistException;

    public GetMergeOptionsResponse withCommitDoesNotExistException(Object commitDoesNotExistException) {
        this.commitDoesNotExistException = commitDoesNotExistException;
        return this;
    }
    
    /**
     * CommitRequiredException
     */
    
    public Object commitRequiredException;

    public GetMergeOptionsResponse withCommitRequiredException(Object commitRequiredException) {
        this.commitRequiredException = commitRequiredException;
        return this;
    }
    
    
    public String contentType;

    public GetMergeOptionsResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * EncryptionIntegrityChecksFailedException
     */
    
    public Object encryptionIntegrityChecksFailedException;

    public GetMergeOptionsResponse withEncryptionIntegrityChecksFailedException(Object encryptionIntegrityChecksFailedException) {
        this.encryptionIntegrityChecksFailedException = encryptionIntegrityChecksFailedException;
        return this;
    }
    
    /**
     * EncryptionKeyAccessDeniedException
     */
    
    public Object encryptionKeyAccessDeniedException;

    public GetMergeOptionsResponse withEncryptionKeyAccessDeniedException(Object encryptionKeyAccessDeniedException) {
        this.encryptionKeyAccessDeniedException = encryptionKeyAccessDeniedException;
        return this;
    }
    
    /**
     * EncryptionKeyDisabledException
     */
    
    public Object encryptionKeyDisabledException;

    public GetMergeOptionsResponse withEncryptionKeyDisabledException(Object encryptionKeyDisabledException) {
        this.encryptionKeyDisabledException = encryptionKeyDisabledException;
        return this;
    }
    
    /**
     * EncryptionKeyNotFoundException
     */
    
    public Object encryptionKeyNotFoundException;

    public GetMergeOptionsResponse withEncryptionKeyNotFoundException(Object encryptionKeyNotFoundException) {
        this.encryptionKeyNotFoundException = encryptionKeyNotFoundException;
        return this;
    }
    
    /**
     * EncryptionKeyUnavailableException
     */
    
    public Object encryptionKeyUnavailableException;

    public GetMergeOptionsResponse withEncryptionKeyUnavailableException(Object encryptionKeyUnavailableException) {
        this.encryptionKeyUnavailableException = encryptionKeyUnavailableException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetMergeOptionsOutput getMergeOptionsOutput;

    public GetMergeOptionsResponse withGetMergeOptionsOutput(org.openapis.openapi.models.shared.GetMergeOptionsOutput getMergeOptionsOutput) {
        this.getMergeOptionsOutput = getMergeOptionsOutput;
        return this;
    }
    
    /**
     * InvalidCommitException
     */
    
    public Object invalidCommitException;

    public GetMergeOptionsResponse withInvalidCommitException(Object invalidCommitException) {
        this.invalidCommitException = invalidCommitException;
        return this;
    }
    
    /**
     * InvalidConflictDetailLevelException
     */
    
    public Object invalidConflictDetailLevelException;

    public GetMergeOptionsResponse withInvalidConflictDetailLevelException(Object invalidConflictDetailLevelException) {
        this.invalidConflictDetailLevelException = invalidConflictDetailLevelException;
        return this;
    }
    
    /**
     * InvalidConflictResolutionStrategyException
     */
    
    public Object invalidConflictResolutionStrategyException;

    public GetMergeOptionsResponse withInvalidConflictResolutionStrategyException(Object invalidConflictResolutionStrategyException) {
        this.invalidConflictResolutionStrategyException = invalidConflictResolutionStrategyException;
        return this;
    }
    
    /**
     * InvalidRepositoryNameException
     */
    
    public Object invalidRepositoryNameException;

    public GetMergeOptionsResponse withInvalidRepositoryNameException(Object invalidRepositoryNameException) {
        this.invalidRepositoryNameException = invalidRepositoryNameException;
        return this;
    }
    
    /**
     * MaximumFileContentToLoadExceededException
     */
    
    public Object maximumFileContentToLoadExceededException;

    public GetMergeOptionsResponse withMaximumFileContentToLoadExceededException(Object maximumFileContentToLoadExceededException) {
        this.maximumFileContentToLoadExceededException = maximumFileContentToLoadExceededException;
        return this;
    }
    
    /**
     * MaximumItemsToCompareExceededException
     */
    
    public Object maximumItemsToCompareExceededException;

    public GetMergeOptionsResponse withMaximumItemsToCompareExceededException(Object maximumItemsToCompareExceededException) {
        this.maximumItemsToCompareExceededException = maximumItemsToCompareExceededException;
        return this;
    }
    
    /**
     * RepositoryDoesNotExistException
     */
    
    public Object repositoryDoesNotExistException;

    public GetMergeOptionsResponse withRepositoryDoesNotExistException(Object repositoryDoesNotExistException) {
        this.repositoryDoesNotExistException = repositoryDoesNotExistException;
        return this;
    }
    
    /**
     * RepositoryNameRequiredException
     */
    
    public Object repositoryNameRequiredException;

    public GetMergeOptionsResponse withRepositoryNameRequiredException(Object repositoryNameRequiredException) {
        this.repositoryNameRequiredException = repositoryNameRequiredException;
        return this;
    }
    
    
    public Integer statusCode;

    public GetMergeOptionsResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public GetMergeOptionsResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TipsDivergenceExceededException
     */
    
    public Object tipsDivergenceExceededException;

    public GetMergeOptionsResponse withTipsDivergenceExceededException(Object tipsDivergenceExceededException) {
        this.tipsDivergenceExceededException = tipsDivergenceExceededException;
        return this;
    }
    
    public GetMergeOptionsResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
