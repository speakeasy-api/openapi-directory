// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// PostSiteAPIKeysRequestBodyPermissionSetEnum - Permissions for this API Key.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations).  Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.
type PostSiteAPIKeysRequestBodyPermissionSetEnum string

const (
	PostSiteAPIKeysRequestBodyPermissionSetEnumNone              PostSiteAPIKeysRequestBodyPermissionSetEnum = "none"
	PostSiteAPIKeysRequestBodyPermissionSetEnumFull              PostSiteAPIKeysRequestBodyPermissionSetEnum = "full"
	PostSiteAPIKeysRequestBodyPermissionSetEnumDesktopApp        PostSiteAPIKeysRequestBodyPermissionSetEnum = "desktop_app"
	PostSiteAPIKeysRequestBodyPermissionSetEnumSyncApp           PostSiteAPIKeysRequestBodyPermissionSetEnum = "sync_app"
	PostSiteAPIKeysRequestBodyPermissionSetEnumOfficeIntegration PostSiteAPIKeysRequestBodyPermissionSetEnum = "office_integration"
	PostSiteAPIKeysRequestBodyPermissionSetEnumMobileApp         PostSiteAPIKeysRequestBodyPermissionSetEnum = "mobile_app"
)

func (e *PostSiteAPIKeysRequestBodyPermissionSetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "full":
		fallthrough
	case "desktop_app":
		fallthrough
	case "sync_app":
		fallthrough
	case "office_integration":
		fallthrough
	case "mobile_app":
		*e = PostSiteAPIKeysRequestBodyPermissionSetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSiteAPIKeysRequestBodyPermissionSetEnum: %s", s)
	}
}

type PostSiteAPIKeysRequestBody struct {
	// API Key expiration date
	ExpiresAt *time.Time `multipartForm:"name=expires_at"`
	// Internal name for the API Key.  For your use.
	Name *string `multipartForm:"name=name"`
	// Folder path restriction for this api key.
	Path *string `multipartForm:"name=path"`
	// Permissions for this API Key.  Keys with the `desktop_app` permission set only have the ability to do the functions provided in our Desktop App (File and Share Link operations).  Additional permission sets may become available in the future, such as for a Site Admin to give a key with no administrator privileges.  If you have ideas for permission sets, please let us know.
	PermissionSet *PostSiteAPIKeysRequestBodyPermissionSetEnum `multipartForm:"name=permission_set"`
	// User ID.  Provide a value of `0` to operate the current session's user.
	UserID *int `multipartForm:"name=user_id"`
}

type PostSiteAPIKeysRequest struct {
	Request *PostSiteAPIKeysRequestBody `request:"mediaType=multipart/form-data"`
}

type PostSiteAPIKeysResponse struct {
	// The ApiKeys object.
	APIKeyEntity *shared.APIKeyEntity
	ContentType  string
	StatusCode   int
	RawResponse  *http.Response
}
