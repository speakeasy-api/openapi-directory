// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DayPartTargetingTimeZoneTypeEnum - The time zone type of the day parts
type DayPartTargetingTimeZoneTypeEnum string

const (
	DayPartTargetingTimeZoneTypeEnumTimeZoneTypeUnspecified DayPartTargetingTimeZoneTypeEnum = "TIME_ZONE_TYPE_UNSPECIFIED"
	DayPartTargetingTimeZoneTypeEnumSeller                  DayPartTargetingTimeZoneTypeEnum = "SELLER"
	DayPartTargetingTimeZoneTypeEnumUser                    DayPartTargetingTimeZoneTypeEnum = "USER"
)

func (e *DayPartTargetingTimeZoneTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TIME_ZONE_TYPE_UNSPECIFIED":
		fallthrough
	case "SELLER":
		fallthrough
	case "USER":
		*e = DayPartTargetingTimeZoneTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DayPartTargetingTimeZoneTypeEnum: %s", s)
	}
}

// DayPartTargeting - Represents Daypart targeting.
type DayPartTargeting struct {
	// The targeted weekdays and times
	DayParts []DayPart `json:"dayParts,omitempty"`
	// The time zone type of the day parts
	TimeZoneType *DayPartTargetingTimeZoneTypeEnum `json:"timeZoneType,omitempty"`
}
