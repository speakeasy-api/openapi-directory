/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FieldInputConfig - Describes the configuration for the default input values to display for a field.
 */
public class FieldInputConfig {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultChecked")
    public Boolean defaultChecked;
    public FieldInputConfig withDefaultChecked(Boolean defaultChecked) {
        this.defaultChecked = defaultChecked;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultCountryCode")
    public String defaultCountryCode;
    public FieldInputConfig withDefaultCountryCode(String defaultCountryCode) {
        this.defaultCountryCode = defaultCountryCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultValue")
    public String defaultValue;
    public FieldInputConfig withDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("descriptiveText")
    public String descriptiveText;
    public FieldInputConfig withDescriptiveText(String descriptiveText) {
        this.descriptiveText = descriptiveText;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isArray")
    public Boolean isArray;
    public FieldInputConfig withIsArray(Boolean isArray) {
        this.isArray = isArray;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxValue")
    public Float maxValue;
    public FieldInputConfig withMaxValue(Float maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minValue")
    public Float minValue;
    public FieldInputConfig withMinValue(Float minValue) {
        this.minValue = minValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public FieldInputConfig withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placeholder")
    public String placeholder;
    public FieldInputConfig withPlaceholder(String placeholder) {
        this.placeholder = placeholder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readOnly")
    public Boolean readOnly;
    public FieldInputConfig withReadOnly(Boolean readOnly) {
        this.readOnly = readOnly;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required")
    public Boolean required;
    public FieldInputConfig withRequired(Boolean required) {
        this.required = required;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("step")
    public Float step;
    public FieldInputConfig withStep(Float step) {
        this.step = step;
        return this;
    }
    
    @JsonProperty("type")
    public String type;
    public FieldInputConfig withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;
    public FieldInputConfig withValue(String value) {
        this.value = value;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("valueMappings")
    public ValueMappings valueMappings;
    public FieldInputConfig withValueMappings(ValueMappings valueMappings) {
        this.valueMappings = valueMappings;
        return this;
    }
    
}
