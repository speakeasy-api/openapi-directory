<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PutEventTriggerRequest
{
    /**
     * The status of the trigger.
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
    /**
     * The JEXL expression to be evaluated against object changes. See above for more information and an example.
     * 
     * @var ?string $condition
     */
	#[\JMS\Serializer\Annotation\SerializedName('condition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $condition = null;
    
    /**
     * The description of the trigger.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The type of events to be triggered.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PutEventTriggerRequestEventType $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PutEventTriggerRequestEventType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PutEventTriggerRequestEventType $eventType = null;
    
	public function __construct()
	{
		$this->active = null;
		$this->condition = null;
		$this->description = null;
		$this->eventType = null;
	}
}
