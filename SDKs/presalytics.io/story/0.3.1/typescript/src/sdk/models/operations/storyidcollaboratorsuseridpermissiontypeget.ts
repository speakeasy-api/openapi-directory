/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class StoryIdCollaboratorsUseridPermissiontypeGetRequest extends SpeakeasyBase {
  /**
   * the id from the story object
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * the type of permission requested.  can be a permission_type object name (e.g., owner, editor, create, viewer, admin) or a permission type field (e.g., can_edit, can_view, can_add_collaborators, can_delete)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=permissiontype",
  })
  permissiontype: string;

  /**
   * The presalytics userid (NOT the Id of the story_collaborator object)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=story_collaborator_userid",
  })
  storyCollaboratorUserid: string;
}

export class StoryIdCollaboratorsUseridPermissiontypeGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  problemDetail?: shared.ProblemDetail;
}
