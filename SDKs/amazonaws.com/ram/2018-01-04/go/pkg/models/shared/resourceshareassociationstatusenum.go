// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResourceShareAssociationStatusEnum string

const (
	ResourceShareAssociationStatusEnumAssociating    ResourceShareAssociationStatusEnum = "ASSOCIATING"
	ResourceShareAssociationStatusEnumAssociated     ResourceShareAssociationStatusEnum = "ASSOCIATED"
	ResourceShareAssociationStatusEnumFailed         ResourceShareAssociationStatusEnum = "FAILED"
	ResourceShareAssociationStatusEnumDisassociating ResourceShareAssociationStatusEnum = "DISASSOCIATING"
	ResourceShareAssociationStatusEnumDisassociated  ResourceShareAssociationStatusEnum = "DISASSOCIATED"
)

func (e ResourceShareAssociationStatusEnum) ToPointer() *ResourceShareAssociationStatusEnum {
	return &e
}

func (e *ResourceShareAssociationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASSOCIATING":
		fallthrough
	case "ASSOCIATED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DISASSOCIATING":
		fallthrough
	case "DISASSOCIATED":
		*e = ResourceShareAssociationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceShareAssociationStatusEnum: %v", v)
	}
}
