// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETVersionLocationsFormatIncidentTypeEnum - <p>Only incidents of specific type</p>
type GETVersionLocationsFormatIncidentTypeEnum string

const (
	GETVersionLocationsFormatIncidentTypeEnumCrash               GETVersionLocationsFormatIncidentTypeEnum = "crash"
	GETVersionLocationsFormatIncidentTypeEnumHazard              GETVersionLocationsFormatIncidentTypeEnum = "hazard"
	GETVersionLocationsFormatIncidentTypeEnumTheft               GETVersionLocationsFormatIncidentTypeEnum = "theft"
	GETVersionLocationsFormatIncidentTypeEnumUnconfirmed         GETVersionLocationsFormatIncidentTypeEnum = "unconfirmed"
	GETVersionLocationsFormatIncidentTypeEnumInfrastructureIssue GETVersionLocationsFormatIncidentTypeEnum = "infrastructure_issue"
	GETVersionLocationsFormatIncidentTypeEnumChopShop            GETVersionLocationsFormatIncidentTypeEnum = "chop_shop"
)

func (e GETVersionLocationsFormatIncidentTypeEnum) ToPointer() *GETVersionLocationsFormatIncidentTypeEnum {
	return &e
}

func (e *GETVersionLocationsFormatIncidentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "crash":
		fallthrough
	case "hazard":
		fallthrough
	case "theft":
		fallthrough
	case "unconfirmed":
		fallthrough
	case "infrastructure_issue":
		fallthrough
	case "chop_shop":
		*e = GETVersionLocationsFormatIncidentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETVersionLocationsFormatIncidentTypeEnum: %v", v)
	}
}

type GETVersionLocationsFormatRequest struct {
	// <p>Give â€˜em all to me. Will ignore limit</p>
	//
	All *bool `queryParam:"style=form,explode=true,name=all"`
	// <p>Only incidents of specific type</p>
	//
	IncidentType *GETVersionLocationsFormatIncidentTypeEnum `queryParam:"style=form,explode=true,name=incident_type"`
	// <p>Max number of results to return. Defaults to 100</p>
	//
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// <p>Start of period</p>
	//
	OccurredAfter *int `queryParam:"style=form,explode=true,name=occurred_after"`
	// <p>End of period</p>
	//
	OccurredBefore *int `queryParam:"style=form,explode=true,name=occurred_before"`
	// <p>Center of location for proximity search</p>
	//
	Proximity *string `queryParam:"style=form,explode=true,name=proximity"`
	// <p>Size of the proximity search</p>
	//
	ProximitySquare *int `queryParam:"style=form,explode=true,name=proximity_square"`
	// <p>Full text search of incidents</p>
	//
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type GETVersionLocationsFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
