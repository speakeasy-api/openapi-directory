// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum - Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
type BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum string

const (
	BatchUpdateValuesRequestResponseDateTimeRenderOptionEnumSerialNumber    BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum = "SERIAL_NUMBER"
	BatchUpdateValuesRequestResponseDateTimeRenderOptionEnumFormattedString BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum = "FORMATTED_STRING"
)

func (e BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum) ToPointer() *BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum {
	return &e
}

func (e *BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SERIAL_NUMBER":
		fallthrough
	case "FORMATTED_STRING":
		*e = BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum: %v", v)
	}
}

// BatchUpdateValuesRequestResponseValueRenderOptionEnum - Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.
type BatchUpdateValuesRequestResponseValueRenderOptionEnum string

const (
	BatchUpdateValuesRequestResponseValueRenderOptionEnumFormattedValue   BatchUpdateValuesRequestResponseValueRenderOptionEnum = "FORMATTED_VALUE"
	BatchUpdateValuesRequestResponseValueRenderOptionEnumUnformattedValue BatchUpdateValuesRequestResponseValueRenderOptionEnum = "UNFORMATTED_VALUE"
	BatchUpdateValuesRequestResponseValueRenderOptionEnumFormula          BatchUpdateValuesRequestResponseValueRenderOptionEnum = "FORMULA"
)

func (e BatchUpdateValuesRequestResponseValueRenderOptionEnum) ToPointer() *BatchUpdateValuesRequestResponseValueRenderOptionEnum {
	return &e
}

func (e *BatchUpdateValuesRequestResponseValueRenderOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FORMATTED_VALUE":
		fallthrough
	case "UNFORMATTED_VALUE":
		fallthrough
	case "FORMULA":
		*e = BatchUpdateValuesRequestResponseValueRenderOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchUpdateValuesRequestResponseValueRenderOptionEnum: %v", v)
	}
}

// BatchUpdateValuesRequestValueInputOptionEnum - How the input data should be interpreted.
type BatchUpdateValuesRequestValueInputOptionEnum string

const (
	BatchUpdateValuesRequestValueInputOptionEnumInputValueOptionUnspecified BatchUpdateValuesRequestValueInputOptionEnum = "INPUT_VALUE_OPTION_UNSPECIFIED"
	BatchUpdateValuesRequestValueInputOptionEnumRaw                         BatchUpdateValuesRequestValueInputOptionEnum = "RAW"
	BatchUpdateValuesRequestValueInputOptionEnumUserEntered                 BatchUpdateValuesRequestValueInputOptionEnum = "USER_ENTERED"
)

func (e BatchUpdateValuesRequestValueInputOptionEnum) ToPointer() *BatchUpdateValuesRequestValueInputOptionEnum {
	return &e
}

func (e *BatchUpdateValuesRequestValueInputOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INPUT_VALUE_OPTION_UNSPECIFIED":
		fallthrough
	case "RAW":
		fallthrough
	case "USER_ENTERED":
		*e = BatchUpdateValuesRequestValueInputOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchUpdateValuesRequestValueInputOptionEnum: %v", v)
	}
}

// BatchUpdateValuesRequest - The request for updating more than one range of values in a spreadsheet.
type BatchUpdateValuesRequest struct {
	// The new values to apply to the spreadsheet.
	Data []ValueRange `json:"data,omitempty"`
	// Determines if the update response should include the values of the cells that were updated. By default, responses do not include the updated values. The `updatedData` field within each of the BatchUpdateValuesResponse.responses contains the updated values. If the range to write was larger than the range actually written, the response includes all values in the requested range (excluding trailing empty rows and columns).
	IncludeValuesInResponse *bool `json:"includeValuesInResponse,omitempty"`
	// Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
	ResponseDateTimeRenderOption *BatchUpdateValuesRequestResponseDateTimeRenderOptionEnum `json:"responseDateTimeRenderOption,omitempty"`
	// Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.
	ResponseValueRenderOption *BatchUpdateValuesRequestResponseValueRenderOptionEnum `json:"responseValueRenderOption,omitempty"`
	// How the input data should be interpreted.
	ValueInputOption *BatchUpdateValuesRequestValueInputOptionEnum `json:"valueInputOption,omitempty"`
}
