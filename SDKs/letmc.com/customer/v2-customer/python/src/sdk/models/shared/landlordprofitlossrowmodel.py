"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import keyvaluepair_string_string_ as shared_keyvaluepair_string_string_
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LandlordProfitLossRowModel:
    r"""Class for a group of entries."""
    
    month_totals: Optional[list[shared_keyvaluepair_string_string_.KeyValuePairStringString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonthTotals'), 'exclude': lambda f: f is None }})
    r"""Month Totals"""  
    nominal_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NominalCode'), 'exclude': lambda f: f is None }})
    r"""Nominal Code"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Title'), 'exclude': lambda f: f is None }})
    r"""Title of the values."""  
    total: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Total'), 'exclude': lambda f: f is None }})
    r"""Total for all months."""  
    