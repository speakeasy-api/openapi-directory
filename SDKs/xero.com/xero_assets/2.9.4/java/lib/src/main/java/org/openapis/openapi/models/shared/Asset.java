/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * Asset - Fixed asset you are creating
 */
public class Asset {
    /**
     * The accounting value of the asset
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountingBookValue")
    public Double accountingBookValue;

    public Asset withAccountingBookValue(Double accountingBookValue) {
        this.accountingBookValue = accountingBookValue;
        return this;
    }
    
    /**
     * The Xero-generated Id for the asset
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetId")
    public String assetId;

    public Asset withAssetId(String assetId) {
        this.assetId = assetId;
        return this;
    }
    
    /**
     * The name of the asset
     */
    @JsonProperty("assetName")
    public String assetName;

    public Asset withAssetName(String assetName) {
        this.assetName = assetName;
        return this;
    }
    
    /**
     * Must be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetNumber")
    public String assetNumber;

    public Asset withAssetNumber(String assetNumber) {
        this.assetNumber = assetNumber;
        return this;
    }
    
    /**
     * See Asset Status Codes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetStatus")
    public AssetStatusEnum assetStatus;

    public Asset withAssetStatus(AssetStatusEnum assetStatus) {
        this.assetStatus = assetStatus;
        return this;
    }
    
    /**
     * The Xero-generated Id for the asset type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetTypeId")
    public String assetTypeId;

    public Asset withAssetTypeId(String assetTypeId) {
        this.assetTypeId = assetTypeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookDepreciationDetail")
    public BookDepreciationDetail bookDepreciationDetail;

    public Asset withBookDepreciationDetail(BookDepreciationDetail bookDepreciationDetail) {
        this.bookDepreciationDetail = bookDepreciationDetail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookDepreciationSetting")
    public BookDepreciationSetting bookDepreciationSetting;

    public Asset withBookDepreciationSetting(BookDepreciationSetting bookDepreciationSetting) {
        this.bookDepreciationSetting = bookDepreciationSetting;
        return this;
    }
    
    /**
     * Boolean to indicate whether depreciation can be rolled back for this asset individually. This is true if it doesn't have 'legacy' journal entries and if there is no lock period that would prevent this asset from rolling back.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canRollback")
    public Boolean canRollback;

    public Asset withCanRollback(Boolean canRollback) {
        this.canRollback = canRollback;
        return this;
    }
    
    /**
     * The date the asset was disposed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("disposalDate")
    public LocalDate disposalDate;

    public Asset withDisposalDate(LocalDate disposalDate) {
        this.disposalDate = disposalDate;
        return this;
    }
    
    /**
     * The price the asset was disposed at
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disposalPrice")
    public Double disposalPrice;

    public Asset withDisposalPrice(Double disposalPrice) {
        this.disposalPrice = disposalPrice;
        return this;
    }
    
    /**
     * Boolean to indicate whether delete is enabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDeleteEnabledForDate")
    public Boolean isDeleteEnabledForDate;

    public Asset withIsDeleteEnabledForDate(Boolean isDeleteEnabledForDate) {
        this.isDeleteEnabledForDate = isDeleteEnabledForDate;
        return this;
    }
    
    /**
     * The date the asset was purchased YYYY-MM-DD
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("purchaseDate")
    public LocalDate purchaseDate;

    public Asset withPurchaseDate(LocalDate purchaseDate) {
        this.purchaseDate = purchaseDate;
        return this;
    }
    
    /**
     * The purchase price of the asset
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchasePrice")
    public Double purchasePrice;

    public Asset withPurchasePrice(Double purchasePrice) {
        this.purchasePrice = purchasePrice;
        return this;
    }
    
    /**
     * The asset's serial number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumber")
    public String serialNumber;

    public Asset withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * The date the assetâ€™s warranty expires (if needed) YYYY-MM-DD
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warrantyExpiryDate")
    public String warrantyExpiryDate;

    public Asset withWarrantyExpiryDate(String warrantyExpiryDate) {
        this.warrantyExpiryDate = warrantyExpiryDate;
        return this;
    }
    
    public Asset(@JsonProperty("assetName") String assetName) {
        this.assetName = assetName;
  }
}
