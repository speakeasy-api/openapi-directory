// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateAnEventSubscriptionParametersStatusEnum - The status to update the Event Subscription with.
type UpdateAnEventSubscriptionParametersStatusEnum string

const (
	UpdateAnEventSubscriptionParametersStatusEnumActive   UpdateAnEventSubscriptionParametersStatusEnum = "active"
	UpdateAnEventSubscriptionParametersStatusEnumDisabled UpdateAnEventSubscriptionParametersStatusEnum = "disabled"
	UpdateAnEventSubscriptionParametersStatusEnumDeleted  UpdateAnEventSubscriptionParametersStatusEnum = "deleted"
)

func (e *UpdateAnEventSubscriptionParametersStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "disabled":
		fallthrough
	case "deleted":
		*e = UpdateAnEventSubscriptionParametersStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnEventSubscriptionParametersStatusEnum: %s", s)
	}
}

type UpdateAnEventSubscriptionParameters struct {
	// The status to update the Event Subscription with.
	Status *UpdateAnEventSubscriptionParametersStatusEnum `json:"status,omitempty"`
}
