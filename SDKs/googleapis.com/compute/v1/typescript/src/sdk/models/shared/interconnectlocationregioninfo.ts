/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Identifies the network presence of this location.
 */
export enum InterconnectLocationRegionInfoLocationPresenceEnum {
  Global = "GLOBAL",
  LocalRegion = "LOCAL_REGION",
  LpGlobal = "LP_GLOBAL",
  LpLocalRegion = "LP_LOCAL_REGION",
}

/**
 * Information about any potential InterconnectAttachments between an Interconnect at a specific InterconnectLocation, and a specific Cloud Region.
 */
export class InterconnectLocationRegionInfo extends SpeakeasyBase {
  /**
   * Expected round-trip time in milliseconds, from this InterconnectLocation to a VM in this region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedRttMs" })
  expectedRttMs?: string;

  /**
   * Identifies the network presence of this location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationPresence" })
  locationPresence?: InterconnectLocationRegionInfoLocationPresenceEnum;

  /**
   * URL for the region of this location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;
}
