/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApiV2010AccountConferenceParticipant - Created
 */
public class ApiV2010AccountConferenceParticipant {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Participant resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public ApiV2010AccountConferenceParticipant withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Participant resource is associated with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_sid")
    public String callSid;

    public ApiV2010AccountConferenceParticipant withCallSid(String callSid) {
        this.callSid = callSid;
        return this;
    }
    
    /**
     * The SID of the participant who is being `coached`. The participant being coached is the only participant who can hear the participant who is `coaching`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_sid_to_coach")
    public String callSidToCoach;

    public ApiV2010AccountConferenceParticipant withCallSidToCoach(String callSidToCoach) {
        this.callSidToCoach = callSidToCoach;
        return this;
    }
    
    /**
     * Whether the participant is coaching another call. Can be: `true` or `false`. If not present, defaults to `false` unless `call_sid_to_coach` is defined. If `true`, `call_sid_to_coach` must be defined.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coaching")
    public Boolean coaching;

    public ApiV2010AccountConferenceParticipant withCoaching(Boolean coaching) {
        this.coaching = coaching;
        return this;
    }
    
    /**
     * The SID of the conference the participant is in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conference_sid")
    public String conferenceSid;

    public ApiV2010AccountConferenceParticipant withConferenceSid(String conferenceSid) {
        this.conferenceSid = conferenceSid;
        return this;
    }
    
    /**
     * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_created")
    public String dateCreated;

    public ApiV2010AccountConferenceParticipant withDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_updated")
    public String dateUpdated;

    public ApiV2010AccountConferenceParticipant withDateUpdated(String dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * Whether the conference ends when the participant leaves. Can be: `true` or `false` and the default is `false`. If `true`, the conference ends and all other participants drop out when the participant leaves.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end_conference_on_exit")
    public Boolean endConferenceOnExit;

    public ApiV2010AccountConferenceParticipant withEndConferenceOnExit(Boolean endConferenceOnExit) {
        this.endConferenceOnExit = endConferenceOnExit;
        return this;
    }
    
    /**
     * Whether the participant is on hold. Can be `true` or `false`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hold")
    public Boolean hold;

    public ApiV2010AccountConferenceParticipant withHold(Boolean hold) {
        this.hold = hold;
        return this;
    }
    
    /**
     * The user-specified label of this participant, if one was given when the participant was created. This may be used to fetch, update or delete the participant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;

    public ApiV2010AccountConferenceParticipant withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Whether the participant is muted. Can be `true` or `false`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("muted")
    public Boolean muted;

    public ApiV2010AccountConferenceParticipant withMuted(Boolean muted) {
        this.muted = muted;
        return this;
    }
    
    /**
     * Whether the conference starts when the participant joins the conference, if it has not already started. Can be: `true` or `false` and the default is `true`. If `false` and the conference has not started, the participant is muted and hears background music until another participant starts the conference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_conference_on_enter")
    public Boolean startConferenceOnEnter;

    public ApiV2010AccountConferenceParticipant withStartConferenceOnEnter(Boolean startConferenceOnEnter) {
        this.startConferenceOnEnter = startConferenceOnEnter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ParticipantEnumStatusEnum status;

    public ApiV2010AccountConferenceParticipant withStatus(ParticipantEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The URI of the resource, relative to `https://api.twilio.com`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;

    public ApiV2010AccountConferenceParticipant withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
    public ApiV2010AccountConferenceParticipant(){}
}
