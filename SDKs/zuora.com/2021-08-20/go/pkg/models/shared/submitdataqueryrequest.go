// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubmitDataQueryRequestCompressionEnum - Specifies whether Zuora compresses the query results.
type SubmitDataQueryRequestCompressionEnum string

const (
	SubmitDataQueryRequestCompressionEnumNone SubmitDataQueryRequestCompressionEnum = "NONE"
	SubmitDataQueryRequestCompressionEnumGzip SubmitDataQueryRequestCompressionEnum = "GZIP"
	SubmitDataQueryRequestCompressionEnumZip  SubmitDataQueryRequestCompressionEnum = "ZIP"
)

func (e *SubmitDataQueryRequestCompressionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NONE":
		fallthrough
	case "GZIP":
		fallthrough
	case "ZIP":
		*e = SubmitDataQueryRequestCompressionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitDataQueryRequestCompressionEnum: %s", s)
	}
}

// SubmitDataQueryRequestOutputTargetEnum - Set this field to `S3`.
type SubmitDataQueryRequestOutputTargetEnum string

const (
	SubmitDataQueryRequestOutputTargetEnumS3 SubmitDataQueryRequestOutputTargetEnum = "S3"
)

func (e *SubmitDataQueryRequestOutputTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "S3":
		*e = SubmitDataQueryRequestOutputTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitDataQueryRequestOutputTargetEnum: %s", s)
	}
}

// SubmitDataQueryRequestOutput - Additional information about the query results.
type SubmitDataQueryRequestOutput struct {
	// Set this field to `S3`.
	//
	Target SubmitDataQueryRequestOutputTargetEnum `json:"target"`
}

// SubmitDataQueryRequestOutputFormatEnum - Specifies the format of the query results.
//
// * `JSON` - Each row in the query results will be a JSON object. The format of the query result file is [JSON Lines](http://jsonlines.org/).
// * `CSV` - Each row in the query results will be a comma-separated list of values.
// * `TSV` - Each row in the query results will be a tab-separated list of values.
// * `DSV` - Pass any character as your custom delimiter into the `columnSeparator` field.
type SubmitDataQueryRequestOutputFormatEnum string

const (
	SubmitDataQueryRequestOutputFormatEnumJSON SubmitDataQueryRequestOutputFormatEnum = "JSON"
	SubmitDataQueryRequestOutputFormatEnumCsv  SubmitDataQueryRequestOutputFormatEnum = "CSV"
	SubmitDataQueryRequestOutputFormatEnumTsv  SubmitDataQueryRequestOutputFormatEnum = "TSV"
	SubmitDataQueryRequestOutputFormatEnumDsv  SubmitDataQueryRequestOutputFormatEnum = "DSV"
)

func (e *SubmitDataQueryRequestOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "JSON":
		fallthrough
	case "CSV":
		fallthrough
	case "TSV":
		fallthrough
	case "DSV":
		*e = SubmitDataQueryRequestOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitDataQueryRequestOutputFormatEnum: %s", s)
	}
}

// SubmitDataQueryRequestSourceDataEnum - Specifiy that data queries run against the live transactional databases at Zuora (Data Query Live), or run against the optimized, replicated database at 12 hours freshness for high volume extraction (Data Query Unlimited).
//
// **Note**: Data Query Unlimited is an Early Adopter feature.  If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
//
// * `DATAHUB` - Data queries run against the optimized, replicated database at 12 hours freshness for high volume extraction (Data Query Unlimited). Data Query Unlimited is an Early Adopter feature.  If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
// * `LIVE` - Data queries run against the live transactional databases at Zuora (Data Query Live).
//
// The default value is `LIVE`.
type SubmitDataQueryRequestSourceDataEnum string

const (
	SubmitDataQueryRequestSourceDataEnumDatahub SubmitDataQueryRequestSourceDataEnum = "DATAHUB"
	SubmitDataQueryRequestSourceDataEnumLive    SubmitDataQueryRequestSourceDataEnum = "LIVE"
)

func (e *SubmitDataQueryRequestSourceDataEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DATAHUB":
		fallthrough
	case "LIVE":
		*e = SubmitDataQueryRequestSourceDataEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitDataQueryRequestSourceDataEnum: %s", s)
	}
}

type SubmitDataQueryRequest struct {
	// The column separator. Only applicable if the `outputFormat` is `DSV`.
	//
	ColumnSeparator *string `json:"columnSeparator,omitempty"`
	// Specifies whether Zuora compresses the query results.
	//
	Compression SubmitDataQueryRequestCompressionEnum `json:"compression"`
	// Base-64 encoded public key of an RSA key-pair.
	//
	// Note that Data Query only supports 1024-bit RSA keys.
	//
	// If you set this field, Zuora encrypts the query results using the provided public key. You must use the corresponding private key to decrypt the query results.
	//
	EncryptionKey *string `json:"encryptionKey,omitempty"`
	// Additional information about the query results.
	//
	Output SubmitDataQueryRequestOutput `json:"output"`
	// Specifies the format of the query results.
	//
	// * `JSON` - Each row in the query results will be a JSON object. The format of the query result file is [JSON Lines](http://jsonlines.org/).
	// * `CSV` - Each row in the query results will be a comma-separated list of values.
	// * `TSV` - Each row in the query results will be a tab-separated list of values.
	// * `DSV` - Pass any character as your custom delimiter into the `columnSeparator` field.
	//
	OutputFormat SubmitDataQueryRequestOutputFormatEnum `json:"outputFormat"`
	// The query to perform. See [SQL Queries in Data Query](https://knowledgecenter.zuora.com/DC_Developers/BA_Data_Query/BA_SQL_Queries_in_Data_Query) for more information.
	//
	Query string `json:"query"`
	// Indicates whether the query will retrieve only the deleted record. If `readDeleted` is set to `false` or it is not included in the request body, the query will retrieve only the non-deleted records. If it is set to `true`, only the deleted records will be retrieved.
	//
	// Note that Data Query is subject to Zuora Data Retention Policy. The retention period of deleted data is 30 days. You can only retrieve deleted data for 30 days through Data Query.
	//
	ReadDeleted *bool `json:"readDeleted,omitempty"`
	// Specifiy that data queries run against the live transactional databases at Zuora (Data Query Live), or run against the optimized, replicated database at 12 hours freshness for high volume extraction (Data Query Unlimited).
	//
	// **Note**: Data Query Unlimited is an Early Adopter feature.  If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
	//
	// * `DATAHUB` - Data queries run against the optimized, replicated database at 12 hours freshness for high volume extraction (Data Query Unlimited). Data Query Unlimited is an Early Adopter feature.  If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
	// * `LIVE` - Data queries run against the live transactional databases at Zuora (Data Query Live).
	//
	// The default value is `LIVE`.
	//
	SourceData *SubmitDataQueryRequestSourceDataEnum `json:"sourceData,omitempty"`
	// Indicates whether to use Index Join. Index join is useful when you have a specific reference value in your WHERE clause to index another large table by. See [Use Index Join](https://knowledgecenter.zuora.com/DC_Developers/BA_Data_Query/Best_practices_of_Data_Query#Use_Index_Join) for more information.
	UseIndexJoin *bool `json:"useIndexJoin,omitempty"`
}
