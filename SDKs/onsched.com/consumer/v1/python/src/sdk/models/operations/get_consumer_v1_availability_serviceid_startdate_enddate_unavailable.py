"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import unavailabletimelistviewmodel as shared_unavailabletimelistviewmodel
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetConsumerV1AvailabilityServiceIDStartDateEndDateUnavailableRequest:
    
    end_date: datetime = dataclasses.field(metadata={'path_param': { 'field_name': 'endDate', 'style': 'simple', 'explode': False }})
    r"""Format YYYY-MM-DD: End Date for unavailable time search"""  
    service_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serviceId', 'style': 'simple', 'explode': False }})
    r"""Service Id for availability search"""  
    start_date: datetime = dataclasses.field(metadata={'path_param': { 'field_name': 'startDate', 'style': 'simple', 'explode': False }})
    r"""Format YYYY-MM-DD: Start Date for unavailable time search"""  
    duration: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'duration', 'style': 'form', 'explode': True }})
    r"""Duration of the service if different from default"""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'locationId', 'style': 'form', 'explode': True }})
    r"""Id of business location, defaults to primary business location"""  
    resource_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'resourceId', 'style': 'form', 'explode': True }})
    r"""Resource Id to filter on"""  
    skip_time_past_unavailability: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'skipTimePastUnavailability', 'style': 'form', 'explode': True }})
    r"""Set as true to remove Time Past (TP) blocks in the response"""  
    tz_offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tzOffset', 'style': 'form', 'explode': True }})
    r"""Request timezone offset to view unavailable times"""  
    

@dataclasses.dataclass
class GetConsumerV1AvailabilityServiceIDStartDateEndDateUnavailableResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    unavailable_time_list_view_model: Optional[shared_unavailabletimelistviewmodel.UnavailableTimeListViewModel] = dataclasses.field(default=None)
    r"""Success"""  
    