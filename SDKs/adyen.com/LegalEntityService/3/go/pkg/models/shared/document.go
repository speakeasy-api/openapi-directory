// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DocumentTypeEnum - Type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity type.
//
// When providing ID numbers:
// * For **individual**, the `type` values can be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.
//
// When uploading photo IDs:
// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, or **passport**.
//
// When uploading other documents:
// * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**, **vatDocument**, **proofOfOrganizationTaxInfo**, **proofOfOwnership**, or **proofOfIndustry**.
//
// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, **passport**, **proofOfNationalIdNumber**, **proofOfResidency**, **proofOfIndustry**, or **proofOfIndividualTaxId**.
//
// * For **soleProprietorship**, the `type` values can be **constitutionalDocument**, **proofOfAddress**, or **proofOfIndustry**.
//
// * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
type DocumentTypeEnum string

const (
	DocumentTypeEnumBankStatement              DocumentTypeEnum = "bankStatement"
	DocumentTypeEnumDriversLicense             DocumentTypeEnum = "driversLicense"
	DocumentTypeEnumIdentityCard               DocumentTypeEnum = "identityCard"
	DocumentTypeEnumNationalIDNumber           DocumentTypeEnum = "nationalIdNumber"
	DocumentTypeEnumPassport                   DocumentTypeEnum = "passport"
	DocumentTypeEnumProofOfAddress             DocumentTypeEnum = "proofOfAddress"
	DocumentTypeEnumProofOfNationalIDNumber    DocumentTypeEnum = "proofOfNationalIdNumber"
	DocumentTypeEnumProofOfResidency           DocumentTypeEnum = "proofOfResidency"
	DocumentTypeEnumRegistrationDocument       DocumentTypeEnum = "registrationDocument"
	DocumentTypeEnumVatDocument                DocumentTypeEnum = "vatDocument"
	DocumentTypeEnumProofOfOrganizationTaxInfo DocumentTypeEnum = "proofOfOrganizationTaxInfo"
	DocumentTypeEnumProofOfIndustry            DocumentTypeEnum = "proofOfIndustry"
	DocumentTypeEnumConstitutionalDocument     DocumentTypeEnum = "constitutionalDocument"
)

func (e *DocumentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "bankStatement":
		fallthrough
	case "driversLicense":
		fallthrough
	case "identityCard":
		fallthrough
	case "nationalIdNumber":
		fallthrough
	case "passport":
		fallthrough
	case "proofOfAddress":
		fallthrough
	case "proofOfNationalIdNumber":
		fallthrough
	case "proofOfResidency":
		fallthrough
	case "registrationDocument":
		fallthrough
	case "vatDocument":
		fallthrough
	case "proofOfOrganizationTaxInfo":
		fallthrough
	case "proofOfIndustry":
		fallthrough
	case "constitutionalDocument":
		*e = DocumentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentTypeEnum: %s", s)
	}
}

type DocumentInput struct {
	Attachment *Attachment `json:"attachment,omitempty"`
	// Array that contains the document. The array supports multiple attachments for uploading different sides or pages of a document.
	Attachments []Attachment `json:"attachments"`
	// Your description for the document.
	Description string `json:"description"`
	// The expiry date of the document, in YYYY-MM-DD format.
	ExpiryDate *string `json:"expiryDate,omitempty"`
	// The filename of the document.
	FileName *string `json:"fileName,omitempty"`
	// The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the document was issued. For example, **US**.
	IssuerCountry *string `json:"issuerCountry,omitempty"`
	// The state or province where the document was issued (AU only).
	IssuerState *string `json:"issuerState,omitempty"`
	// The number in the document.
	Number *string     `json:"number,omitempty"`
	Owner  OwnerEntity `json:"owner"`
	// Type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity type.
	//
	// When providing ID numbers:
	// * For **individual**, the `type` values can be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.
	//
	// When uploading photo IDs:
	// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, or **passport**.
	//
	// When uploading other documents:
	// * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**, **vatDocument**, **proofOfOrganizationTaxInfo**, **proofOfOwnership**, or **proofOfIndustry**.
	//
	// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, **passport**, **proofOfNationalIdNumber**, **proofOfResidency**, **proofOfIndustry**, or **proofOfIndividualTaxId**.
	//
	// * For **soleProprietorship**, the `type` values can be **constitutionalDocument**, **proofOfAddress**, or **proofOfIndustry**.
	//
	// * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
	Type DocumentTypeEnum `json:"type"`
}

// Document - OK - the request has succeeded.
type Document struct {
	Attachment *Attachment `json:"attachment,omitempty"`
	// Array that contains the document. The array supports multiple attachments for uploading different sides or pages of a document.
	Attachments []Attachment `json:"attachments"`
	// The creation date of the document.
	CreationDate *time.Time `json:"creationDate,omitempty"`
	// Your description for the document.
	Description string `json:"description"`
	// The expiry date of the document, in YYYY-MM-DD format.
	ExpiryDate *string `json:"expiryDate,omitempty"`
	// The filename of the document.
	FileName *string `json:"fileName,omitempty"`
	// The unique identifier of the document.
	ID *string `json:"id,omitempty"`
	// The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the document was issued. For example, **US**.
	IssuerCountry *string `json:"issuerCountry,omitempty"`
	// The state or province where the document was issued (AU only).
	IssuerState *string `json:"issuerState,omitempty"`
	// The modification date of the document.
	ModificationDate *time.Time `json:"modificationDate,omitempty"`
	// The number in the document.
	Number *string     `json:"number,omitempty"`
	Owner  OwnerEntity `json:"owner"`
	// Type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity type.
	//
	// When providing ID numbers:
	// * For **individual**, the `type` values can be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.
	//
	// When uploading photo IDs:
	// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, or **passport**.
	//
	// When uploading other documents:
	// * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**, **vatDocument**, **proofOfOrganizationTaxInfo**, **proofOfOwnership**, or **proofOfIndustry**.
	//
	// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, **passport**, **proofOfNationalIdNumber**, **proofOfResidency**, **proofOfIndustry**, or **proofOfIndividualTaxId**.
	//
	// * For **soleProprietorship**, the `type` values can be **constitutionalDocument**, **proofOfAddress**, or **proofOfIndustry**.
	//
	// * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
	Type DocumentTypeEnum `json:"type"`
}
