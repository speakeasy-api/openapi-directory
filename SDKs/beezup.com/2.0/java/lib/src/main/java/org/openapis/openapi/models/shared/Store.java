/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Store - The store information
 */
public class Store {
    /**
     * The country iso code alpha 3 based on the list of values /user/lov/StoreCountry
     */
    @JsonProperty("countryIsoCodeAlpha3")
    public String countryIsoCodeAlpha3;
    public Store withCountryIsoCodeAlpha3(String countryIsoCodeAlpha3) {
        this.countryIsoCodeAlpha3 = countryIsoCodeAlpha3;
        return this;
    }
    
    /**
     * The creation date of the store
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationUtcDate")
    public OffsetDateTime creationUtcDate;
    public Store withCreationUtcDate(OffsetDateTime creationUtcDate) {
        this.creationUtcDate = creationUtcDate;
        return this;
    }
    
    /**
     * The currency code &lt;a href="https://en.wikipedia.org/wiki/ISO_4217"&gt;(ISO 4217)&lt;/a&gt;
     * 
     */
    @JsonProperty("currencyCode")
    public String currencyCode;
    public Store withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * The version of GO to use
     */
    @JsonProperty("goVersion")
    public Integer goVersion;
    public Store withGoVersion(Integer goVersion) {
        this.goVersion = goVersion;
        return this;
    }
    
    /**
     * Is the store a test or a production store
     */
    @JsonProperty("isTest")
    public Boolean isTest;
    public Store withIsTest(Boolean isTest) {
        this.isTest = isTest;
        return this;
    }
    
    /**
     * The action links for this store
     */
    @JsonProperty("links")
    public StoreLinks links;
    public Store withLinks(StoreLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * The store name. Must be unique.
     */
    @JsonProperty("name")
    public String name;
    public Store withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The offer id based on /offers. Not a free offer of course.
     */
    @JsonProperty("offerId")
    public Integer offerId;
    public Store withOfferId(Integer offerId) {
        this.offerId = offerId;
        return this;
    }
    
    /**
     * The offer Name
     */
    @JsonProperty("offerName")
    public String offerName;
    public Store withOfferName(String offerName) {
        this.offerName = offerName;
        return this;
    }
    
    /**
     * The user id of the owner of the store
     */
    @JsonProperty("ownerUserId")
    public String ownerUserId;
    public Store withOwnerUserId(String ownerUserId) {
        this.ownerUserId = ownerUserId;
        return this;
    }
    
    /**
     * The store's sectors based on the list of values /user/lov/ParamSector
     */
    @JsonProperty("sectors")
    public String[] sectors;
    public Store withSectors(String[] sectors) {
        this.sectors = sectors;
        return this;
    }
    
    /**
     * The share count related to this store
     */
    @JsonProperty("shareCount")
    public Long shareCount;
    public Store withShareCount(Long shareCount) {
        this.shareCount = shareCount;
        return this;
    }
    
    /**
     * The store status
     * * Active:  When the store is active
     * * SystemBlocked:  When the store is blocked by the system
     * * UserBlocked: When the store is blocked on GO not on the system
     * 
     */
    @JsonProperty("status")
    public StoreStatusEnum status;
    public Store withStatus(StoreStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The store identifier
     */
    @JsonProperty("storeId")
    public String storeId;
    public Store withStoreId(String storeId) {
        this.storeId = storeId;
        return this;
    }
    
    /**
     * The url of your store
     */
    @JsonProperty("url")
    public String url;
    public Store withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Indicates the role can have a user on a store.
     * * Owner: Indicates that you are the owner of this store
     * * User: Indicates that you are a simple user on this store
     * 
     */
    @JsonProperty("userRole")
    public StoreUserRoleEnum userRole;
    public Store withUserRole(StoreUserRoleEnum userRole) {
        this.userRole = userRole;
        return this;
    }
    
}
