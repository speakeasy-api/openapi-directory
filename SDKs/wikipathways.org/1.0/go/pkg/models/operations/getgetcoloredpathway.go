// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGetColoredPathwayFormatEnum
type GetGetColoredPathwayFormatEnum string

const (
	GetGetColoredPathwayFormatEnumJSON GetGetColoredPathwayFormatEnum = "json"
	GetGetColoredPathwayFormatEnumXML  GetGetColoredPathwayFormatEnum = "xml"
	GetGetColoredPathwayFormatEnumHTML GetGetColoredPathwayFormatEnum = "html"
	GetGetColoredPathwayFormatEnumDump GetGetColoredPathwayFormatEnum = "dump"
	GetGetColoredPathwayFormatEnumJpg  GetGetColoredPathwayFormatEnum = "jpg"
	GetGetColoredPathwayFormatEnumPdf  GetGetColoredPathwayFormatEnum = "pdf"
)

func (e GetGetColoredPathwayFormatEnum) ToPointer() *GetGetColoredPathwayFormatEnum {
	return &e
}

func (e *GetGetColoredPathwayFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetGetColoredPathwayFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGetColoredPathwayFormatEnum: %v", v)
	}
}

type GetGetColoredPathwayRequest struct {
	// string
	Color []interface{} `queryParam:"style=form,explode=false,name=color"`
	// The image type (One of 'svg', 'pdf' or 'png').
	FileType string                          `queryParam:"style=form,explode=true,name=fileType"`
	Format   *GetGetColoredPathwayFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// string
	GraphID []interface{} `queryParam:"style=form,explode=false,name=graphId"`
	// The pathway identifier
	PwID string `queryParam:"style=form,explode=true,name=pwId"`
	// The revision of the pathway (use '0' for most recent)
	Revision string `queryParam:"style=form,explode=true,name=revision"`
}

type GetGetColoredPathwayResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
