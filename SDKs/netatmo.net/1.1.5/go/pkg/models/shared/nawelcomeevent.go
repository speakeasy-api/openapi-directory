// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NAWelcomeEventCategoryEnum - Type of the detected object.
type NAWelcomeEventCategoryEnum string

const (
	NAWelcomeEventCategoryEnumHuman   NAWelcomeEventCategoryEnum = "human"
	NAWelcomeEventCategoryEnumAnimal  NAWelcomeEventCategoryEnum = "animal"
	NAWelcomeEventCategoryEnumVehicle NAWelcomeEventCategoryEnum = "vehicle"
)

func (e *NAWelcomeEventCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "human":
		fallthrough
	case "animal":
		fallthrough
	case "vehicle":
		*e = NAWelcomeEventCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NAWelcomeEventCategoryEnum: %s", s)
	}
}

type NAWelcomeEvent struct {
	// Camera that detected the event
	CameraID *string `json:"camera_id,omitempty"`
	// Type of the detected object.
	Category  *NAWelcomeEventCategoryEnum `json:"category,omitempty"`
	EventList []NAWelcomeSubEvent         `json:"event_list,omitempty"`
	// Identifier of the event
	ID *string `json:"id,omitempty"`
	// If person was considered away before being seen during this event
	IsArrival *bool `json:"is_arrival,omitempty"`
	// User facing event description
	Message *string `json:"message,omitempty"`
	// Id of the person the event is about (if any)
	PersonID *string            `json:"person_id,omitempty"`
	Snapshot *NAWelcomeSnapshot `json:"snapshot,omitempty"`
	// Subtypes of SD and Alim events. Go to Welcome page for further details.
	SubType *int `json:"sub_type,omitempty"`
	// Time of occurence of event
	Time *int `json:"time,omitempty"`
	// Type of events. Go to the Welcome page for further details.
	Type *string `json:"type,omitempty"`
	// Identifier of the video
	VideoID *string `json:"video_id,omitempty"`
	// Status of the video (recording, deleted or available)
	VideoStatus *string `json:"video_status,omitempty"`
}
