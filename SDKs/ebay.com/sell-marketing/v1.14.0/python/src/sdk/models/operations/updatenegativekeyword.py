"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import updatenegativekeywordrequest as shared_updatenegativekeywordrequest
from typing import Optional


@dataclasses.dataclass
class UpdateNegativeKeywordSecurity:
    
    api_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class UpdateNegativeKeywordRequest:
    
    negative_keyword_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'negative_keyword_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier for the negative keyword.<br /><br />This value is returned in the <b>Location</b> response header from the <a href=\"/api-docs/sell/marketing/resources/negative_keyword/methods/createNegativeKeyword\">createNegativeKeyword</a> method."""  
    update_negative_keyword_request: shared_updatenegativekeywordrequest.UpdateNegativeKeywordRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""A type that defines the fields for the request to update a negative keyword."""  
    

@dataclasses.dataclass
class UpdateNegativeKeywordResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    