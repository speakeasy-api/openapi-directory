/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Criteria } from "./criteria";
import { OpenBadgeClass } from "./openbadgeclass";
import { Expose, Transform, Type } from "class-transformer";

export class UserBadgeBadgeExpiry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "expirationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "expires" })
  expires?: boolean;
}

export class UserBadge extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "awardedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  awardedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "badgeExpiry" })
  @Type(() => UserBadgeBadgeExpiry)
  badgeExpiry?: UserBadgeBadgeExpiry;

  @SpeakeasyMetadata()
  @Expose({ name: "badgeUrl" })
  badgeUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "criterias" })
  @Type(() => Criteria)
  criterias?: Criteria;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "offeringId" })
  offeringId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "openBadge" })
  @Type(() => OpenBadgeClass)
  openBadge?: OpenBadgeClass;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
