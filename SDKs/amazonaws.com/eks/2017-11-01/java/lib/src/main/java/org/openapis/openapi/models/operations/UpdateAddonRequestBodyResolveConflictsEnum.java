/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * UpdateAddonRequestBodyResolveConflictsEnum - &lt;p&gt;How to resolve field value conflicts for an Amazon EKS add-on if you've changed a value from the Amazon EKS default value. Conflicts are handled based on the option you choose:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;None&lt;/b&gt; \u2013 Amazon EKS doesn't change the value. The update might fail.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Overwrite&lt;/b&gt; \u2013 Amazon EKS overwrites the changed value back to the Amazon EKS default value.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Preserve&lt;/b&gt; \u2013 Amazon EKS preserves the value. If you choose this option, we recommend that you test any field and value changes on a non-production cluster before updating the add-on on your production cluster.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
public enum UpdateAddonRequestBodyResolveConflictsEnum {
    OVERWRITE("OVERWRITE"),
    NONE("NONE"),
    PRESERVE("PRESERVE");

    @JsonValue
    public final String value;

    private UpdateAddonRequestBodyResolveConflictsEnum(String value) {
        this.value = value;
    }
}
