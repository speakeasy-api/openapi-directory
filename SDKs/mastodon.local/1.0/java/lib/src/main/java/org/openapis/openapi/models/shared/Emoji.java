/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Emoji - Represents a custom emoji.
 * https://docs.joinmastodon.org/entities/emoji/
 */
public class Emoji {
    /**
     * Used for sorting custom emoji in the picker.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public String category;
    public Emoji withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * The name of the custom emoji.
     */
    @JsonProperty("shortcode")
    public String shortcode;
    public Emoji withShortcode(String shortcode) {
        this.shortcode = shortcode;
        return this;
    }
    
    /**
     * A link to a static copy of the custom emoji. The format is URL.
     */
    @JsonProperty("static_url")
    public String staticUrl;
    public Emoji withStaticUrl(String staticUrl) {
        this.staticUrl = staticUrl;
        return this;
    }
    
    /**
     * A link to the custom emoji. The format is URL.
     */
    @JsonProperty("url")
    public String url;
    public Emoji withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Whether this Emoji should be visible in the picker or unlisted.
     */
    @JsonProperty("visible_in_picker")
    public Boolean visibleInPicker;
    public Emoji withVisibleInPicker(Boolean visibleInPicker) {
        this.visibleInPicker = visibleInPicker;
        return this;
    }
    
}
