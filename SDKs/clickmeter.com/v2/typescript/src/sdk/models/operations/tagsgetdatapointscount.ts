/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Status of the datapoint
 */
export enum TagsGetDatapointsCountStatusEnum {
  Deleted = "deleted",
  Active = "active",
  Paused = "paused",
  Spam = "spam",
}

/**
 * Type of the datapoint ("tp"/"tl")
 */
export enum TagsGetDatapointsCountTypeEnum {
  Tp = "tp",
  Tl = "tl",
}

export class TagsGetDatapointsCountRequest extends SpeakeasyBase {
  /**
   * Exclude datapoints created before this date (YYYYMMDD)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdAfter",
  })
  createdAfter?: string;

  /**
   * Exclude datapoints created after this date (YYYYMMDD)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdBefore",
  })
  createdBefore?: string;

  /**
   * Status of the datapoint
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: TagsGetDatapointsCountStatusEnum;

  /**
   * Id of the tag.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=tagId",
  })
  tagId: number;

  /**
   * Filter fields by this pattern
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=textSearch",
  })
  textSearch?: string;

  /**
   * Type of the datapoint ("tp"/"tl")
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: TagsGetDatapointsCountTypeEnum;
}

export class TagsGetDatapointsCountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreResponsesCountResponce?: shared.ApiCoreResponsesCountResponce;

  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
