/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SimpleUser } from "./simpleuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The system role from which this role inherits permissions.
 */
export enum OrganizationCustomRepositoryRoleBaseRoleEnum {
  Read = "read",
  Triage = "triage",
  Write = "write",
  Maintain = "maintain",
}

/**
 * Custom repository roles created by organization administrators
 */
export class OrganizationCustomRepositoryRole extends SpeakeasyBase {
  /**
   * The system role from which this role inherits permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "base_role" })
  baseRole?: OrganizationCustomRepositoryRoleBaseRoleEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * A short description about who this role is for or what permissions it grants.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The unique identifier of the custom role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * The name of the custom role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  @Type(() => SimpleUser)
  organization?: SimpleUser;

  /**
   * A list of additional permissions included in this role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
