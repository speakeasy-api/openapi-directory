/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BeezUPCommonColumnDataTypeEnum } from "./beezupcommoncolumndatatypeenum";
import { BeezUPCommonColumnImportanceEnum } from "./beezupcommoncolumnimportanceenum";
import { Expose } from "class-transformer";

/**
 * Indicates the configuration applied on the column (catalog or custom) during the importation process.
 */
export class ColumnConfiguration extends SpeakeasyBase {
  /**
   * The BeezUP column name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beezUPColumnName" })
  beezUPColumnName?: string;

  /**
   * If the size of the value is greater than the limit we can truncate the value instead of failing...
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canBeTruncated" })
  canBeTruncated?: boolean;

  /**
   * If non null, culture used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columnCultureName" })
  columnCultureName?: string;

  /**
   * Data type of the column, will be used for parsing and for consolidation proces
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columnDataType" })
  columnDataType: BeezUPCommonColumnDataTypeEnum;

  /**
   * If non null, format used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columnFormat" })
  columnFormat?: string;

  /**
   * Importance of the column
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columnImportance" })
  columnImportance: BeezUPCommonColumnImportanceEnum;

  /**
   * Indicate the display group name where the column must be putted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayGroupName" })
  displayGroupName?: string;
}
