/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateManifestResponseBody - An error response body
 */
public class CreateManifestResponseBody {
    /**
     * A string that uniquely identifies the carrier
     */
    @JsonProperty("carrier_id")
    public String carrierId;
    public CreateManifestResponseBody withCarrierId(String carrierId) {
        this.carrierId = carrierId;
        return this;
    }
    
    /**
     * The date-time that the manifest was created
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public CreateManifestResponseBody withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The errors associated with the failed API call
     */
    @JsonProperty("errors")
    public Error[] errors;
    public CreateManifestResponseBody withErrors(Error[] errors) {
        this.errors = errors;
        return this;
    }
    
    /**
     * A string that uniquely identifies the form
     */
    @JsonProperty("form_id")
    public String formId;
    public CreateManifestResponseBody withFormId(String formId) {
        this.formId = formId;
        return this;
    }
    
    /**
     * An array of the label ids used in this manifest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label_ids")
    public String[] labelIds;
    public CreateManifestResponseBody withLabelIds(String[] labelIds) {
        this.labelIds = labelIds;
        return this;
    }
    
    @JsonProperty("manifest_download")
    public CreateManifestResponseBodyManifestDownload manifestDownload;
    public CreateManifestResponseBody withManifestDownload(CreateManifestResponseBodyManifestDownload manifestDownload) {
        this.manifestDownload = manifestDownload;
        return this;
    }
    
    /**
     * A string that uniquely identifies the manifest
     */
    @JsonProperty("manifest_id")
    public String manifestId;
    public CreateManifestResponseBody withManifestId(String manifestId) {
        this.manifestId = manifestId;
        return this;
    }
    
    /**
     * Resulting manifest requests with statuses
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manifest_requests")
    public ManifestRequest[] manifestRequests;
    public CreateManifestResponseBody withManifestRequests(ManifestRequest[] manifestRequests) {
        this.manifestRequests = manifestRequests;
        return this;
    }
    
    /**
     * Resulting Manifests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manifests")
    public Manifest[] manifests;
    public CreateManifestResponseBody withManifests(Manifest[] manifests) {
        this.manifests = manifests;
        return this;
    }
    
    /**
     * A UUID that uniquely identifies the request id.
     * This can be given to the support team to help debug non-trivial issues that may occur
     * 
     */
    @JsonProperty("request_id")
    public String requestId;
    public CreateManifestResponseBody withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    /**
     * The date-time that the manifests shipments will be picked up
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ship_date")
    public OffsetDateTime shipDate;
    public CreateManifestResponseBody withShipDate(OffsetDateTime shipDate) {
        this.shipDate = shipDate;
        return this;
    }
    
    /**
     * The number of shipments that are included in this manifest
     */
    @JsonProperty("shipments")
    public Integer shipments;
    public CreateManifestResponseBody withShipments(Integer shipments) {
        this.shipments = shipments;
        return this;
    }
    
    /**
     * A string that uniquely identifies the submission
     */
    @JsonProperty("submission_id")
    public String submissionId;
    public CreateManifestResponseBody withSubmissionId(String submissionId) {
        this.submissionId = submissionId;
        return this;
    }
    
    /**
     * A string that uniquely identifies the warehouse
     */
    @JsonProperty("warehouse_id")
    public String warehouseId;
    public CreateManifestResponseBody withWarehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
        return this;
    }
    
}
