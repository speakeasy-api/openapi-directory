/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Reply - A reply to a comment on a file.
 */
public class Reply {
    /**
     * The action the reply performed to the parent comment. Valid values are:  
     * - resolve 
     * - reopen
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public String action;

    public Reply withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * Information about a Drive user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public User author;

    public Reply withAuthor(User author) {
        this.author = author;
        return this;
    }
    
    /**
     * The plain text content of the reply. This field is used for setting the content, while htmlContent should be displayed. This is required on creates if no action is specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public Reply withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * The time at which the reply was created (RFC 3339 date-time).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdTime")
    public OffsetDateTime createdTime;

    public Reply withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }
    
    /**
     * Whether the reply has been deleted. A deleted reply has no content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public Reply withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * The content of the reply with HTML formatting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("htmlContent")
    public String htmlContent;

    public Reply withHtmlContent(String htmlContent) {
        this.htmlContent = htmlContent;
        return this;
    }
    
    /**
     * The ID of the reply.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Reply withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "drive#reply".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Reply withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The last time the reply was modified (RFC 3339 date-time).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modifiedTime")
    public OffsetDateTime modifiedTime;

    public Reply withModifiedTime(OffsetDateTime modifiedTime) {
        this.modifiedTime = modifiedTime;
        return this;
    }
    
    public Reply(){}
}
