/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Id } from "./id";
import { Expose, Type } from "class-transformer";

export class PromotionFields extends SpeakeasyBase {
  /**
   * Creation date of the promotion (requires 'lasts' param - 'date')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "begins_at" })
  beginsAt?: string;

  /**
   * Products Categories where the promotion will be applied (requires 'discount_target' param - 'categories')
   */
  @SpeakeasyMetadata({ elemType: Id })
  @Expose({ name: "categories" })
  @Type(() => Id)
  categories?: Id[];

  /**
   * Code of the promotion
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Minimum order amount to validate the promotion
   */
  @SpeakeasyMetadata()
  @Expose({ name: "condition_price" })
  conditionPrice?: number;

  /**
   * Minimum quantity of ordered itens to validate the promotion
   */
  @SpeakeasyMetadata()
  @Expose({ name: "condition_qty" })
  conditionQty?: number;

  /**
   * True if the promotion can be acumulated with others
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cumulative" })
  cumulative?: boolean;

  /**
   * Customer Categories to whom the promotion will be applied (requires 'customers' param - 'categories')
   */
  @SpeakeasyMetadata({ elemType: Id })
  @Expose({ name: "customer_categories" })
  @Type(() => Id)
  customerCategories?: Id[];

  /**
   * Fixed discount amount of the promotion
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_amount_fix" })
  discountAmountFix?: number;

  /**
   * Percentual discount amount of the promotion
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_amount_percent" })
  discountAmountPercent?: number;

  /**
   * Where the promotion will be applied ('order', 'shipping', 'categories', 'buy_x_get_y)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_target" })
  discountTarget?: string;

  /**
   * If the promotion is currently enabled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Expiration date of the promotion (requires 'lasts' param - 'date')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  expiresAt?: string;

  /**
   * Unique identifier of the product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Controls when the promotion will expire ('none', 'date', 'max_times_used')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lasts" })
  lasts?: string;

  /**
   * Maximum amount a promotion can be used (requires 'lasts' param - 'max_times_used')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_times_used" })
  maxTimesUsed?: number;

  /**
   * Name of the product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Products where the promotion will be applied (requires 'discount_target' param - 'categories' or 'buy_x_get_y')
   */
  @SpeakeasyMetadata({ elemType: Id })
  @Expose({ name: "products" })
  @Type(() => Id)
  products?: Id[];

  /**
   * Products required to apply the promotion (requires 'discount_target' param - 'buy_x_get_y')
   */
  @SpeakeasyMetadata({ elemType: Id })
  @Expose({ name: "products_x" })
  @Type(() => Id)
  productsX?: Id[];

  /**
   * Number of sets of products_x needed to be able to apply the promotion (requires 'discount_target' param - 'buy_x_get_y')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity_x" })
  quantityX?: number;

  /**
   * Status of the promotion ('active', 'expired')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Amount of times the promotion was used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "times_used" })
  timesUsed?: number;
}
