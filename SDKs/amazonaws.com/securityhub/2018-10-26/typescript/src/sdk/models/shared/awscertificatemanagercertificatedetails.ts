/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AwsCertificateManagerCertificateDomainValidationOption } from "./awscertificatemanagercertificatedomainvalidationoption";
import { AwsCertificateManagerCertificateExtendedKeyUsage } from "./awscertificatemanagercertificateextendedkeyusage";
import { AwsCertificateManagerCertificateKeyUsage } from "./awscertificatemanagercertificatekeyusage";
import { AwsCertificateManagerCertificateOptions } from "./awscertificatemanagercertificateoptions";
import { AwsCertificateManagerCertificateRenewalSummary } from "./awscertificatemanagercertificaterenewalsummary";
import { Expose, Type } from "class-transformer";

/**
 * Provides details about an Certificate Manager certificate.
 */
export class AwsCertificateManagerCertificateDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateAuthorityArn" })
  certificateAuthorityArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName?: string;

  @SpeakeasyMetadata({
    elemType: AwsCertificateManagerCertificateDomainValidationOption,
  })
  @Expose({ name: "DomainValidationOptions" })
  @Type(() => AwsCertificateManagerCertificateDomainValidationOption)
  domainValidationOptions?: AwsCertificateManagerCertificateDomainValidationOption[];

  @SpeakeasyMetadata({
    elemType: AwsCertificateManagerCertificateExtendedKeyUsage,
  })
  @Expose({ name: "ExtendedKeyUsages" })
  @Type(() => AwsCertificateManagerCertificateExtendedKeyUsage)
  extendedKeyUsages?: AwsCertificateManagerCertificateExtendedKeyUsage[];

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportedAt" })
  importedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InUseBy" })
  inUseBy?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IssuedAt" })
  issuedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Issuer" })
  issuer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KeyAlgorithm" })
  keyAlgorithm?: string;

  @SpeakeasyMetadata({ elemType: AwsCertificateManagerCertificateKeyUsage })
  @Expose({ name: "KeyUsages" })
  @Type(() => AwsCertificateManagerCertificateKeyUsage)
  keyUsages?: AwsCertificateManagerCertificateKeyUsage[];

  @SpeakeasyMetadata()
  @Expose({ name: "NotAfter" })
  notAfter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotBefore" })
  notBefore?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Options" })
  @Type(() => AwsCertificateManagerCertificateOptions)
  options?: AwsCertificateManagerCertificateOptions;

  @SpeakeasyMetadata()
  @Expose({ name: "RenewalEligibility" })
  renewalEligibility?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RenewalSummary" })
  @Type(() => AwsCertificateManagerCertificateRenewalSummary)
  renewalSummary?: AwsCertificateManagerCertificateRenewalSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "Serial" })
  serial?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SignatureAlgorithm" })
  signatureAlgorithm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Subject" })
  subject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubjectAlternativeNames" })
  subjectAlternativeNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}
