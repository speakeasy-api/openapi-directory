// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContactEditRequestTypesEnum string

const (
	ContactEditRequestTypesEnumBilling   ContactEditRequestTypesEnum = "billing"
	ContactEditRequestTypesEnumCompany   ContactEditRequestTypesEnum = "company"
	ContactEditRequestTypesEnumExecutive ContactEditRequestTypesEnum = "executive"
	ContactEditRequestTypesEnumOnline    ContactEditRequestTypesEnum = "online"
)

func (e *ContactEditRequestTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "billing":
		fallthrough
	case "company":
		fallthrough
	case "executive":
		fallthrough
	case "online":
		*e = ContactEditRequestTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactEditRequestTypesEnum: %s", s)
	}
}

type ContactEditRequest struct {
	// Work email address of the group contact
	Email *string `json:"email,omitempty"`
	// Fax number of the group contact in E.164 format
	FaxNumber *string `json:"fax_number,omitempty"`
	// First name of the group contact
	FirstName *string `json:"first_name,omitempty"`
	// Last name of the group contact
	LastName *string `json:"last_name,omitempty"`
	// Work phone number of the group contact in E.164 format
	PhoneNumber *string `json:"phone_number,omitempty"`
	// True if contact is the primary contact for the group
	PrimaryContact *bool `json:"primary_contact,omitempty"`
	// Job title of the group contact
	Title *string `json:"title,omitempty"`
	// List of contact types for the group contact
	Types []ContactEditRequestTypesEnum `json:"types,omitempty"`
}
