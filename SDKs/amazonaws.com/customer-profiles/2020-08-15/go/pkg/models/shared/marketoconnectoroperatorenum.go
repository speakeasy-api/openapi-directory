// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MarketoConnectorOperatorEnum string

const (
	MarketoConnectorOperatorEnumProjection          MarketoConnectorOperatorEnum = "PROJECTION"
	MarketoConnectorOperatorEnumLessThan            MarketoConnectorOperatorEnum = "LESS_THAN"
	MarketoConnectorOperatorEnumGreaterThan         MarketoConnectorOperatorEnum = "GREATER_THAN"
	MarketoConnectorOperatorEnumBetween             MarketoConnectorOperatorEnum = "BETWEEN"
	MarketoConnectorOperatorEnumAddition            MarketoConnectorOperatorEnum = "ADDITION"
	MarketoConnectorOperatorEnumMultiplication      MarketoConnectorOperatorEnum = "MULTIPLICATION"
	MarketoConnectorOperatorEnumDivision            MarketoConnectorOperatorEnum = "DIVISION"
	MarketoConnectorOperatorEnumSubtraction         MarketoConnectorOperatorEnum = "SUBTRACTION"
	MarketoConnectorOperatorEnumMaskAll             MarketoConnectorOperatorEnum = "MASK_ALL"
	MarketoConnectorOperatorEnumMaskFirstN          MarketoConnectorOperatorEnum = "MASK_FIRST_N"
	MarketoConnectorOperatorEnumMaskLastN           MarketoConnectorOperatorEnum = "MASK_LAST_N"
	MarketoConnectorOperatorEnumValidateNonNull     MarketoConnectorOperatorEnum = "VALIDATE_NON_NULL"
	MarketoConnectorOperatorEnumValidateNonZero     MarketoConnectorOperatorEnum = "VALIDATE_NON_ZERO"
	MarketoConnectorOperatorEnumValidateNonNegative MarketoConnectorOperatorEnum = "VALIDATE_NON_NEGATIVE"
	MarketoConnectorOperatorEnumValidateNumeric     MarketoConnectorOperatorEnum = "VALIDATE_NUMERIC"
	MarketoConnectorOperatorEnumNoOp                MarketoConnectorOperatorEnum = "NO_OP"
)

func (e MarketoConnectorOperatorEnum) ToPointer() *MarketoConnectorOperatorEnum {
	return &e
}

func (e *MarketoConnectorOperatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROJECTION":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "BETWEEN":
		fallthrough
	case "ADDITION":
		fallthrough
	case "MULTIPLICATION":
		fallthrough
	case "DIVISION":
		fallthrough
	case "SUBTRACTION":
		fallthrough
	case "MASK_ALL":
		fallthrough
	case "MASK_FIRST_N":
		fallthrough
	case "MASK_LAST_N":
		fallthrough
	case "VALIDATE_NON_NULL":
		fallthrough
	case "VALIDATE_NON_ZERO":
		fallthrough
	case "VALIDATE_NON_NEGATIVE":
		fallthrough
	case "VALIDATE_NUMERIC":
		fallthrough
	case "NO_OP":
		*e = MarketoConnectorOperatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MarketoConnectorOperatorEnum: %v", v)
	}
}
