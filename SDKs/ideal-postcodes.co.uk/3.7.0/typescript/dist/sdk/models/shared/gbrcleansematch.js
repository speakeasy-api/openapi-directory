"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GbrCleanseMatch = exports.GbrCleanseMatchThoroughfareMatchEnum = exports.GbrCleanseMatchPremiseMatchEnum = exports.GbrCleanseMatchPostcodeMatchEnum = exports.GbrCleanseMatchPostTownMatchEnum = exports.GbrCleanseMatchOrganisationMatchEnum = exports.GbrCleanseMatchLocalityMatchEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Match indicator for the locality
 */
var GbrCleanseMatchLocalityMatchEnum;
(function (GbrCleanseMatchLocalityMatchEnum) {
    GbrCleanseMatchLocalityMatchEnum["Full"] = "FULL";
    GbrCleanseMatchLocalityMatchEnum["Partial"] = "PARTIAL";
    GbrCleanseMatchLocalityMatchEnum["Incorrect"] = "INCORRECT";
    GbrCleanseMatchLocalityMatchEnum["Missing"] = "MISSING";
    GbrCleanseMatchLocalityMatchEnum["Na"] = "NA";
})(GbrCleanseMatchLocalityMatchEnum = exports.GbrCleanseMatchLocalityMatchEnum || (exports.GbrCleanseMatchLocalityMatchEnum = {}));
/**
 * Match indicator for the organisation
 */
var GbrCleanseMatchOrganisationMatchEnum;
(function (GbrCleanseMatchOrganisationMatchEnum) {
    GbrCleanseMatchOrganisationMatchEnum["Full"] = "FULL";
    GbrCleanseMatchOrganisationMatchEnum["Partial"] = "PARTIAL";
    GbrCleanseMatchOrganisationMatchEnum["Incorrect"] = "INCORRECT";
    GbrCleanseMatchOrganisationMatchEnum["Missing"] = "MISSING";
    GbrCleanseMatchOrganisationMatchEnum["Na"] = "NA";
})(GbrCleanseMatchOrganisationMatchEnum = exports.GbrCleanseMatchOrganisationMatchEnum || (exports.GbrCleanseMatchOrganisationMatchEnum = {}));
/**
 * Match indicator for the post_town
 */
var GbrCleanseMatchPostTownMatchEnum;
(function (GbrCleanseMatchPostTownMatchEnum) {
    GbrCleanseMatchPostTownMatchEnum["Full"] = "FULL";
    GbrCleanseMatchPostTownMatchEnum["Partial"] = "PARTIAL";
    GbrCleanseMatchPostTownMatchEnum["Incorrect"] = "INCORRECT";
    GbrCleanseMatchPostTownMatchEnum["Missing"] = "MISSING";
    GbrCleanseMatchPostTownMatchEnum["Na"] = "NA";
})(GbrCleanseMatchPostTownMatchEnum = exports.GbrCleanseMatchPostTownMatchEnum || (exports.GbrCleanseMatchPostTownMatchEnum = {}));
/**
 * Match indicator for the postcode
 */
var GbrCleanseMatchPostcodeMatchEnum;
(function (GbrCleanseMatchPostcodeMatchEnum) {
    GbrCleanseMatchPostcodeMatchEnum["Full"] = "FULL";
    GbrCleanseMatchPostcodeMatchEnum["Partial"] = "PARTIAL";
    GbrCleanseMatchPostcodeMatchEnum["Incorrect"] = "INCORRECT";
    GbrCleanseMatchPostcodeMatchEnum["Missing"] = "MISSING";
    GbrCleanseMatchPostcodeMatchEnum["Na"] = "NA";
})(GbrCleanseMatchPostcodeMatchEnum = exports.GbrCleanseMatchPostcodeMatchEnum || (exports.GbrCleanseMatchPostcodeMatchEnum = {}));
/**
 * Match indicator for the premise
 */
var GbrCleanseMatchPremiseMatchEnum;
(function (GbrCleanseMatchPremiseMatchEnum) {
    GbrCleanseMatchPremiseMatchEnum["Full"] = "FULL";
    GbrCleanseMatchPremiseMatchEnum["Partial"] = "PARTIAL";
    GbrCleanseMatchPremiseMatchEnum["Incorrect"] = "INCORRECT";
    GbrCleanseMatchPremiseMatchEnum["Missing"] = "MISSING";
    GbrCleanseMatchPremiseMatchEnum["Na"] = "NA";
})(GbrCleanseMatchPremiseMatchEnum = exports.GbrCleanseMatchPremiseMatchEnum || (exports.GbrCleanseMatchPremiseMatchEnum = {}));
/**
 * Match indicator for the street
 */
var GbrCleanseMatchThoroughfareMatchEnum;
(function (GbrCleanseMatchThoroughfareMatchEnum) {
    GbrCleanseMatchThoroughfareMatchEnum["Full"] = "FULL";
    GbrCleanseMatchThoroughfareMatchEnum["Partial"] = "PARTIAL";
    GbrCleanseMatchThoroughfareMatchEnum["Incorrect"] = "INCORRECT";
    GbrCleanseMatchThoroughfareMatchEnum["Missing"] = "MISSING";
    GbrCleanseMatchThoroughfareMatchEnum["Na"] = "NA";
})(GbrCleanseMatchThoroughfareMatchEnum = exports.GbrCleanseMatchThoroughfareMatchEnum || (exports.GbrCleanseMatchThoroughfareMatchEnum = {}));
var GbrCleanseMatch = /** @class */ (function (_super) {
    __extends(GbrCleanseMatch, _super);
    function GbrCleanseMatch() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "confidence" }),
        __metadata("design:type", Number)
    ], GbrCleanseMatch.prototype, "confidence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "count" }),
        __metadata("design:type", Number)
    ], GbrCleanseMatch.prototype, "count", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fit" }),
        __metadata("design:type", Number)
    ], GbrCleanseMatch.prototype, "fit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locality_match" }),
        __metadata("design:type", String)
    ], GbrCleanseMatch.prototype, "localityMatch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "match" }),
        __metadata("design:type", Object)
    ], GbrCleanseMatch.prototype, "match", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "organisation_match" }),
        __metadata("design:type", String)
    ], GbrCleanseMatch.prototype, "organisationMatch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "post_town_match" }),
        __metadata("design:type", String)
    ], GbrCleanseMatch.prototype, "postTownMatch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postcode_match" }),
        __metadata("design:type", String)
    ], GbrCleanseMatch.prototype, "postcodeMatch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "premise_match" }),
        __metadata("design:type", String)
    ], GbrCleanseMatch.prototype, "premiseMatch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "query" }),
        __metadata("design:type", String)
    ], GbrCleanseMatch.prototype, "query", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "thoroughfare_match" }),
        __metadata("design:type", String)
    ], GbrCleanseMatch.prototype, "thoroughfareMatch", void 0);
    return GbrCleanseMatch;
}(utils_1.SpeakeasyBase));
exports.GbrCleanseMatch = GbrCleanseMatch;
