// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CountOrgaUsersSecurity struct {
	OAuth2 shared.SchemeOAuth2 `security:"scheme,type=oauth2"`
}

type CountOrgaUsersQueryParams struct {
	// Filter users by group
	Group []string `queryParam:"style=form,explode=true,name=group"`
	// Filter users who don't have an active license
	NoActiveLicense *bool `queryParam:"style=form,explode=true,name=noActiveLicense"`
	// The query to search
	Q *string `queryParam:"style=form,explode=true,name=q"`
	// Filter users by role
	Role []shared.RoleEnum `queryParam:"style=form,explode=true,name=role"`
}

type CountOrgaUsersRequest struct {
	QueryParams CountOrgaUsersQueryParams
	Security    CountOrgaUsersSecurity
}

type CountOrgaUsersResponse struct {
	ContentType string
	// Error
	FlatErrorResponse *shared.FlatErrorResponse
	StatusCode        int
	RawResponse       *http.Response
	// Number of users
	CountOrgaUsers200ApplicationJSONInteger *int64
}
