"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import artifactconfigoutput as shared_artifactconfigoutput
from ..shared import canarycodeoutput as shared_canarycodeoutput
from ..shared import canaryrunconfigoutput as shared_canaryrunconfigoutput
from ..shared import canaryscheduleoutput as shared_canaryscheduleoutput
from ..shared import canarystatus as shared_canarystatus
from ..shared import canarytimeline as shared_canarytimeline
from ..shared import visualreferenceoutput as shared_visualreferenceoutput
from ..shared import vpcconfigoutput as shared_vpcconfigoutput
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Canary:
    r"""This structure contains all information about one canary in your account."""
    
    artifact_config: Optional[shared_artifactconfigoutput.ArtifactConfigOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ArtifactConfig'), 'exclude': lambda f: f is None }})  
    artifact_s3_location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ArtifactS3Location'), 'exclude': lambda f: f is None }})  
    code: Optional[shared_canarycodeoutput.CanaryCodeOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Code'), 'exclude': lambda f: f is None }})
    r"""This structure contains information about the canary's Lambda handler and where its code is stored by CloudWatch Synthetics."""  
    engine_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EngineArn'), 'exclude': lambda f: f is None }})  
    execution_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionRoleArn'), 'exclude': lambda f: f is None }})  
    failure_retention_period_in_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FailureRetentionPeriodInDays'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    run_config: Optional[shared_canaryrunconfigoutput.CanaryRunConfigOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RunConfig'), 'exclude': lambda f: f is None }})
    r"""A structure that contains information about a canary run."""  
    runtime_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RuntimeVersion'), 'exclude': lambda f: f is None }})  
    schedule: Optional[shared_canaryscheduleoutput.CanaryScheduleOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Schedule'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_canarystatus.CanaryStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    success_retention_period_in_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SuccessRetentionPeriodInDays'), 'exclude': lambda f: f is None }})  
    tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    timeline: Optional[shared_canarytimeline.CanaryTimeline] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Timeline'), 'exclude': lambda f: f is None }})  
    visual_reference: Optional[shared_visualreferenceoutput.VisualReferenceOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VisualReference'), 'exclude': lambda f: f is None }})  
    vpc_config: Optional[shared_vpcconfigoutput.VpcConfigOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcConfig'), 'exclude': lambda f: f is None }})
    r"""If this canary is to test an endpoint in a VPC, this structure contains information about the subnets and security groups of the VPC endpoint. For more information, see <a href=\\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html\\"> Running a Canary in a VPC</a>."""  
    