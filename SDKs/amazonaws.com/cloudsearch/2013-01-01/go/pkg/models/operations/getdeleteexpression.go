// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteExpressionActionEnum
type GETDeleteExpressionActionEnum string

const (
	GETDeleteExpressionActionEnumDeleteExpression GETDeleteExpressionActionEnum = "DeleteExpression"
)

func (e GETDeleteExpressionActionEnum) ToPointer() *GETDeleteExpressionActionEnum {
	return &e
}

func (e *GETDeleteExpressionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteExpression":
		*e = GETDeleteExpressionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteExpressionActionEnum: %v", v)
	}
}

// GETDeleteExpressionVersionEnum
type GETDeleteExpressionVersionEnum string

const (
	GETDeleteExpressionVersionEnumTwoThousandAndThirteen0101 GETDeleteExpressionVersionEnum = "2013-01-01"
)

func (e GETDeleteExpressionVersionEnum) ToPointer() *GETDeleteExpressionVersionEnum {
	return &e
}

func (e *GETDeleteExpressionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = GETDeleteExpressionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteExpressionVersionEnum: %v", v)
	}
}

type GETDeleteExpressionRequest struct {
	Action     GETDeleteExpressionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                        `queryParam:"style=form,explode=true,name=DomainName"`
	// The name of the <code><a>Expression</a></code> to delete.
	ExpressionName    string                         `queryParam:"style=form,explode=true,name=ExpressionName"`
	Version           GETDeleteExpressionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteExpressionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
