// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DestinationNotCrawlableEvidenceReasonEnum - Reason of destination not crawlable.
type DestinationNotCrawlableEvidenceReasonEnum string

const (
	DestinationNotCrawlableEvidenceReasonEnumReasonUnspecified DestinationNotCrawlableEvidenceReasonEnum = "REASON_UNSPECIFIED"
	DestinationNotCrawlableEvidenceReasonEnumUnreachableRobots DestinationNotCrawlableEvidenceReasonEnum = "UNREACHABLE_ROBOTS"
	DestinationNotCrawlableEvidenceReasonEnumTimeoutRobots     DestinationNotCrawlableEvidenceReasonEnum = "TIMEOUT_ROBOTS"
	DestinationNotCrawlableEvidenceReasonEnumRobotedDenied     DestinationNotCrawlableEvidenceReasonEnum = "ROBOTED_DENIED"
	DestinationNotCrawlableEvidenceReasonEnumUnknown           DestinationNotCrawlableEvidenceReasonEnum = "UNKNOWN"
)

func (e *DestinationNotCrawlableEvidenceReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REASON_UNSPECIFIED":
		fallthrough
	case "UNREACHABLE_ROBOTS":
		fallthrough
	case "TIMEOUT_ROBOTS":
		fallthrough
	case "ROBOTED_DENIED":
		fallthrough
	case "UNKNOWN":
		*e = DestinationNotCrawlableEvidenceReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationNotCrawlableEvidenceReasonEnum: %s", s)
	}
}

// DestinationNotCrawlableEvidence - Evidence that the creative's destination URL was not crawlable by Google.
type DestinationNotCrawlableEvidence struct {
	// Approximate time of the crawl.
	CrawlTime *string `json:"crawlTime,omitempty"`
	// Destination URL that was attempted to be crawled.
	CrawledURL *string `json:"crawledUrl,omitempty"`
	// Reason of destination not crawlable.
	Reason *DestinationNotCrawlableEvidenceReasonEnum `json:"reason,omitempty"`
}
