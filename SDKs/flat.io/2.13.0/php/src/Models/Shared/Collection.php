<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Collection - Collection of scores
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Collection
{
    /**
     * If this directory is dedicated to an app, the unique idenfier of this app
     * 
     * @var ?string $app
     */
	#[\JMS\Serializer\Annotation\SerializedName('app')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $app = null;
    
    /**
     * Capabilities the current user has on this collection. Each capability corresponds to a fine-grained action that a user may take.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CollectionCapabilities $capabilities
     */
	#[\JMS\Serializer\Annotation\SerializedName('capabilities')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CollectionCapabilities')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CollectionCapabilities $capabilities = null;
    
    /**
     * The list of the collaborators of the collection
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ResourceCollaborator> $collaborators
     */
	#[\JMS\Serializer\Annotation\SerializedName('collaborators')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ResourceCollaborator>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $collaborators = null;
    
    /**
     * The List of parent collections, which includes all the collections this score is included. Please note that you might not have access to all of them.
     * 
     * @var ?array<string> $collections
     */
	#[\JMS\Serializer\Annotation\SerializedName('collections')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $collections = null;
    
    /**
     * The date when the collection was created
     * 
     * @var ?\DateTime $creationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $creationDate = null;
    
    /**
     * The url where the collection can be viewed in a web browser
     * 
     * @var ?string $htmlUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlUrl = null;
    
    /**
     * Unique identifier of the collection
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The collection main privacy mode.
     * 
     * - `private`: The collection is private and can be only accessed, modified and administred by specified collaborators users.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CollectionPrivacyEnum $privacy
     */
	#[\JMS\Serializer\Annotation\SerializedName('privacy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CollectionPrivacyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CollectionPrivacyEnum $privacy = null;
    
    /**
     * The rights of the current user on a score or collection
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResourceRights $rights
     */
	#[\JMS\Serializer\Annotation\SerializedName('rights')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResourceRights')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResourceRights $rights = null;
    
    /**
     * The private sharing key of the collection (available when the `privacy` mode is set to `privateLink`)
     * 
     * @var ?string $sharingKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('sharingKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sharingKey = null;
    
    /**
     * The title of the collection
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * Type of the collection.
     * 
     * The type will influence the capabilitied available on the collections and how this collection is/can be populated.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CollectionTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CollectionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CollectionTypeEnum $type = null;
    
    /**
     * Public User details summary
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserPublicSummary $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserPublicSummary')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserPublicSummary $user = null;
    
	public function __construct()
	{
		$this->app = null;
		$this->capabilities = null;
		$this->collaborators = null;
		$this->collections = null;
		$this->creationDate = null;
		$this->htmlUrl = null;
		$this->id = null;
		$this->privacy = null;
		$this->rights = null;
		$this->sharingKey = null;
		$this->title = null;
		$this->type = null;
		$this->user = null;
	}
}
