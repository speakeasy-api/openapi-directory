/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * CsvWebsockets - WebSocket Call
 */
public class CsvWebsockets {
    /**
     * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_id")
    public String accountId;
    public CsvWebsockets withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * UUID of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_id")
    public String callId;
    public CsvWebsockets withCallId(String callId) {
        this.callId = callId;
        return this;
    }
    
    /**
     * Currency of the price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public CsvWebsockets withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Date of the end of the call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_end")
    public LocalDate dateEnd;
    public CsvWebsockets withDateEnd(LocalDate dateEnd) {
        this.dateEnd = dateEnd;
        return this;
    }
    
    /**
     * Date of the start of the call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_start")
    public LocalDate dateStart;
    public CsvWebsockets withDateStart(LocalDate dateStart) {
        this.dateStart = dateStart;
        return this;
    }
    
    /**
     * Duration of the call in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;
    public CsvWebsockets withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;
    public CsvWebsockets withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * Search only for WebSocket call with corresponding status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public CsvWebsockets withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Total price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_price")
    public Double totalPrice;
    public CsvWebsockets withTotalPrice(Double totalPrice) {
        this.totalPrice = totalPrice;
        return this;
    }
    
}
