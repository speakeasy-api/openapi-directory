// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeFileSystemsQueryParams struct {
	// (Optional) Restricts the list to the file system with this creation token (String). You specify a creation token when you create an Amazon EFS file system.
	CreationToken *string `queryParam:"style=form,explode=true,name=CreationToken"`
	// (Optional) ID of the file system whose description you want to retrieve (String).
	FileSystemID *string `queryParam:"style=form,explode=true,name=FileSystemId"`
	// (Optional) Opaque pagination token returned from a previous <code>DescribeFileSystems</code> operation (String). If present, specifies to continue the list from where the returning call had left off.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// (Optional) Specifies the maximum number of file systems to return in the response (integer). This number is automatically set to 100. The response is paginated at 100 per page if you have more than 100 file systems.
	MaxItems *int64 `queryParam:"style=form,explode=true,name=MaxItems"`
}

type DescribeFileSystemsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type DescribeFileSystemsRequest struct {
	QueryParams DescribeFileSystemsQueryParams
	Headers     DescribeFileSystemsHeaders
}

type DescribeFileSystemsResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// Success
	DescribeFileSystemsResponse *shared.DescribeFileSystemsResponse
	// FileSystemNotFound
	FileSystemNotFound interface{}
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
