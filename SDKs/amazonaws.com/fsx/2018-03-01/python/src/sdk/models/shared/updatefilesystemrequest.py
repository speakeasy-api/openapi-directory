"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import updatefilesystemlustreconfiguration as shared_updatefilesystemlustreconfiguration
from ..shared import updatefilesystemontapconfiguration as shared_updatefilesystemontapconfiguration
from ..shared import updatefilesystemopenzfsconfiguration as shared_updatefilesystemopenzfsconfiguration
from ..shared import updatefilesystemwindowsconfiguration as shared_updatefilesystemwindowsconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateFileSystemRequest:
    r"""The request object for the <code>UpdateFileSystem</code> operation."""
    
    file_system_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FileSystemId') }})  
    client_request_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientRequestToken'), 'exclude': lambda f: f is None }})  
    lustre_configuration: Optional[shared_updatefilesystemlustreconfiguration.UpdateFileSystemLustreConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LustreConfiguration'), 'exclude': lambda f: f is None }})
    r"""The configuration object for Amazon FSx for Lustre file systems used in the <code>UpdateFileSystem</code> operation."""  
    ontap_configuration: Optional[shared_updatefilesystemontapconfiguration.UpdateFileSystemOntapConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OntapConfiguration'), 'exclude': lambda f: f is None }})
    r"""The configuration updates for an Amazon FSx for NetApp ONTAP file system."""  
    open_zfs_configuration: Optional[shared_updatefilesystemopenzfsconfiguration.UpdateFileSystemOpenZFSConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OpenZFSConfiguration'), 'exclude': lambda f: f is None }})  
    storage_capacity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StorageCapacity'), 'exclude': lambda f: f is None }})  
    windows_configuration: Optional[shared_updatefilesystemwindowsconfiguration.UpdateFileSystemWindowsConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WindowsConfiguration'), 'exclude': lambda f: f is None }})  
    