// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SyslogConfigProtocolEnum - Protocol to connect to syslog server
type SyslogConfigProtocolEnum string

const (
	SyslogConfigProtocolEnumTCP SyslogConfigProtocolEnum = "TCP"
	SyslogConfigProtocolEnumUDP SyslogConfigProtocolEnum = "UDP"
)

func (e SyslogConfigProtocolEnum) ToPointer() *SyslogConfigProtocolEnum {
	return &e
}

func (e *SyslogConfigProtocolEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TCP":
		fallthrough
	case "UDP":
		*e = SyslogConfigProtocolEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SyslogConfigProtocolEnum: %v", v)
	}
}

// SyslogConfig - Syslog settings
type SyslogConfig struct {
	// Is syslog enabled?
	Enabled *bool `json:"enabled,omitempty"`
	// Syslog server (IP or FQDN)
	Host *string `json:"host,omitempty"`
	// Determines whether userâ€™s IP address is logged.
	LogIPEnabled *bool `json:"logIpEnabled,omitempty"`
	// Syslog server port
	Port *int `json:"port,omitempty"`
	// Protocol to connect to syslog server
	Protocol *SyslogConfigProtocolEnum `json:"protocol,omitempty"`
}
