"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NeoVIN = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Describes the NeoVIN specification
 */
var NeoVIN = /** @class */ (function (_super) {
    __extends(NeoVIN, _super);
    function NeoVIN() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "available_options_details" }),
        __metadata("design:type", Object)
    ], NeoVIN.prototype, "availableOptionsDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "body_subtype" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "bodySubtype", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "body_type" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "bodyType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city_mpg" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "cityMpg", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "combined_msrp" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "combinedMsrp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at_date" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "createdAtDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "decode_version" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "decodeVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "delivery_charges" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "deliveryCharges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "doors" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "doors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "drivetrain" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "drivetrain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "engine" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "engine", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exterior_color" }),
        __metadata("design:type", Object)
    ], NeoVIN.prototype, "exteriorColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "features" }),
        __metadata("design:type", Object)
    ], NeoVIN.prototype, "features", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fuel_type" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "fuelType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "height", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "highway_mpg" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "highwayMpg", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "installed_equipment" }),
        __metadata("design:type", Object)
    ], NeoVIN.prototype, "installedEquipment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "installed_options_details" }),
        __metadata("design:type", Object)
    ], NeoVIN.prototype, "installedOptionsDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "installed_options_msrp" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "installedOptionsMsrp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "interior_color" }),
        __metadata("design:type", Object)
    ], NeoVIN.prototype, "interiorColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "length" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "length", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "listing_confidence" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "listingConfidence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "make" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "make", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "manufacturer_code" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "manufacturerCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "model" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "model", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "msrp" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "msrp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "options_packages" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "optionsPackages", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "package_code" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "packageCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "package_description" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "packageDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "seating_capacity" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "seatingCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "squish_vin" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "squishVin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transmission" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "transmission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transmission_confidence" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "transmissionConfidence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transmission_description" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "transmissionDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trim" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "trim", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trim_confidence" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "trimConfidence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated_at" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "updatedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated_at_date" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "updatedAtDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version_confidence" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "versionConfidence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vin" }),
        __metadata("design:type", String)
    ], NeoVIN.prototype, "vin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "weight" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "weight", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "width", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "year" }),
        __metadata("design:type", Number)
    ], NeoVIN.prototype, "year", void 0);
    return NeoVIN;
}(utils_1.SpeakeasyBase));
exports.NeoVIN = NeoVIN;
