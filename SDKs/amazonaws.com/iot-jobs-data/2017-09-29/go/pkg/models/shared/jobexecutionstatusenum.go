// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JobExecutionStatusEnum string

const (
	JobExecutionStatusEnumQueued     JobExecutionStatusEnum = "QUEUED"
	JobExecutionStatusEnumInProgress JobExecutionStatusEnum = "IN_PROGRESS"
	JobExecutionStatusEnumSucceeded  JobExecutionStatusEnum = "SUCCEEDED"
	JobExecutionStatusEnumFailed     JobExecutionStatusEnum = "FAILED"
	JobExecutionStatusEnumTimedOut   JobExecutionStatusEnum = "TIMED_OUT"
	JobExecutionStatusEnumRejected   JobExecutionStatusEnum = "REJECTED"
	JobExecutionStatusEnumRemoved    JobExecutionStatusEnum = "REMOVED"
	JobExecutionStatusEnumCanceled   JobExecutionStatusEnum = "CANCELED"
)

func (e *JobExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "QUEUED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "REJECTED":
		fallthrough
	case "REMOVED":
		fallthrough
	case "CANCELED":
		*e = JobExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobExecutionStatusEnum: %s", s)
	}
}
