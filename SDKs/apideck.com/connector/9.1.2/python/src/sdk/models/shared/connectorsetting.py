"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ConnectorSettingTypeEnum(str, Enum):
    TEXT = 'text'
    CHECKBOX = 'checkbox'
    TEL = 'tel'
    EMAIL = 'email'
    URL = 'url'
    TEXTAREA = 'textarea'
    SELECT = 'select'
    FILTERED_SELECT = 'filtered-select'
    MULTI_SELECT = 'multi-select'
    DATETIME = 'datetime'
    DATE = 'date'
    TIME = 'time'
    NUMBER = 'number'
    PASSWORD = 'password'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectorSetting:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})  
    type: Optional[ConnectorSettingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    