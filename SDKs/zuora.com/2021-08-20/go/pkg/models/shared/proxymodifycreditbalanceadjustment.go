// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProxyModifyCreditBalanceAdjustmentStatusEnum - The status of the credit balance adjustment.
type ProxyModifyCreditBalanceAdjustmentStatusEnum string

const (
	ProxyModifyCreditBalanceAdjustmentStatusEnumProcessed ProxyModifyCreditBalanceAdjustmentStatusEnum = "Processed"
	ProxyModifyCreditBalanceAdjustmentStatusEnumCanceled  ProxyModifyCreditBalanceAdjustmentStatusEnum = "Canceled"
)

func (e *ProxyModifyCreditBalanceAdjustmentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Processed":
		fallthrough
	case "Canceled":
		*e = ProxyModifyCreditBalanceAdjustmentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyModifyCreditBalanceAdjustmentStatusEnum: %s", s)
	}
}

// ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum - Status of the credit balance adjustment's transfer to an external accounting system, such as NetSuite.
type ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum string

const (
	ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnumProcessing ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum = "Processing"
	ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnumYes        ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum = "Yes"
	ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnumError      ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum = "Error"
	ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnumIgnore     ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum = "Ignore"
)

func (e *ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Processing":
		fallthrough
	case "Yes":
		fallthrough
	case "Error":
		fallthrough
	case "Ignore":
		*e = ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum: %s", s)
	}
}

// ProxyModifyCreditBalanceAdjustment - Container for custom fields of a Credit Balance Adjustment object.
type ProxyModifyCreditBalanceAdjustment struct {
	// ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationIDNS *string `json:"IntegrationId__NS,omitempty"`
	// Status of the credit balance adjustment's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationStatusNS *string `json:"IntegrationStatus__NS,omitempty"`
	// A code identifying the reason for the transaction. Must be an existing [reason code](https://knowledgecenter.zuora.com/CB_Billing/K_Payment_Operations/Reason_Codes_for_Payment_Operations) or empty.
	//
	ReasonCode *string `json:"ReasonCode,omitempty"`
	// The status of the credit balance adjustment.
	//
	Status *ProxyModifyCreditBalanceAdjustmentStatusEnum `json:"Status,omitempty"`
	// Date when the credit balance adjustment was sychronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	SyncDateNS *string `json:"SyncDate__NS,omitempty"`
	// Status of the credit balance adjustment's transfer to an external accounting system, such as NetSuite.
	//
	TransferredToAccounting *ProxyModifyCreditBalanceAdjustmentTransferredToAccountingEnum `json:"TransferredToAccounting,omitempty"`
}
