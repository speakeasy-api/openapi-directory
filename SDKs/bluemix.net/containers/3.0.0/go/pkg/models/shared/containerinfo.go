// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// ContainerInfo - OK. A list with detailed information about the container is returned.
type ContainerInfo struct {
	// The name of the Cloud Foundry app that was bound to the container during creation.
	BluemixApp *string `json:"BluemixApp,omitempty"`
	// The name of the Bluemix service instance that was bound to the container during creation.
	BluemixServices *string          `json:"BluemixServices,omitempty"`
	Config          *ContainerConfig `json:"Config,omitempty"`
	// The current status of the container. This state can either be transient, such as BUILDING or NETWORKING, or non-transient, such as RUNNING, SHUTDOWN, CRASHED, or SUSPENDED.
	ContainerState *string `json:"ContainerState,omitempty"`
	// The date and time the container was created.
	Created    *time.Time  `json:"Created,omitempty"`
	Group      *Group      `json:"Group,omitempty"`
	HostConfig *HostConfig `json:"HostConfig,omitempty"`
	// The ID representing the physical compute host.
	HostID *string `json:"HostId,omitempty"`
	// The name of the container.
	HumanID *string `json:"Human_Id,omitempty"`
	// Unique identifier representing a container.
	ID *string `json:"Id,omitempty"`
	// Unique identifier representing a container image.
	Image *string `json:"Image,omitempty"`
	// A list of volumes that are mounted to the container.
	Mounts []string `json:"Mounts,omitempty"`
	// The name of the container.
	Name            *string         `json:"Name,omitempty"`
	NetworkSettings *NetworkSetting `json:"NetworkSettings,omitempty"`
	// The environment variable indicating the binary location.
	Path *string `json:"Path,omitempty"`
	// Path to the resolve.conf file inside the container. The resolve.conf file is used to resolve the DNS servers.
	ResolveConfPath *string         `json:"ResolveConfPath,omitempty"`
	State           *ContainerState `json:"State,omitempty"`
	Volumes         *Volume         `json:"Volumes,omitempty"`
	// LIst of volumes that is mounted to the container.
	VolumesRW []string `json:"VolumesRW,omitempty"`
}
