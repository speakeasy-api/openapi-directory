/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Restrict changes spot and brain.
 */
export class SpotSetTypeListRestrictions extends SpeakeasyBase {
  /**
   * Server can change this set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_server_edit" })
  allowServerEdit?: boolean;

  /**
   * Spots can change set, differences from the brain server will be merged with the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_spot_edit" })
  allowSpotEdit?: boolean;
}

/**
 * Spot set type `list`; List of items. Matches this set if Item is part of this list.
 */
export enum SpotSetTypeListTypeEnum {
  List = "list",
}

export class SpotSetTypeListInput extends SpeakeasyBase {
  /**
   * Unique identifier for resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemlist_id" })
  itemlistId?: string;

  /**
   * Number, list limit, default `1000` if not specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * Restrict changes spot and brain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictions" })
  @Type(() => SpotSetTypeListRestrictions)
  restrictions?: SpotSetTypeListRestrictions;

  /**
   * Spot set unique identifier. Must be unique within a single device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "setid" })
  setid?: number;

  /**
   * Spot set type `list`; List of items. Matches this set if Item is part of this list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: SpotSetTypeListTypeEnum;
}

export class SpotSetTypeList extends SpeakeasyBase {
  /**
   * Who was responsible for the creation of this spot list. Value determines who's allowed to manages this object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Unique identifier for resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Unique identifier for resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemlist_id" })
  itemlistId?: string;

  /**
   * Number, list limit, default `1000` if not specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * Last mutation that was synchronized to the device. This is used for internal synchronization between the device and the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mutation" })
  mutation?: string;

  /**
   * Restrict changes spot and brain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictions" })
  @Type(() => SpotSetTypeListRestrictions)
  restrictions?: SpotSetTypeListRestrictions;

  /**
   * Spot set unique identifier. Must be unique within a single device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "setid" })
  setid?: number;

  /**
   * The sha1 checksum of the list. This will change when the list is mutated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sha1" })
  sha1?: string;

  /**
   * Unique identifier for resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spot_id" })
  spotId?: string;

  /**
   * [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time_created" })
  timeCreated?: string;

  /**
   * [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time_updated" })
  timeUpdated?: string;

  /**
   * Total amount of items in this set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;

  /**
   * Spot set type `list`; List of items. Matches this set if Item is part of this list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: SpotSetTypeListTypeEnum;
}
