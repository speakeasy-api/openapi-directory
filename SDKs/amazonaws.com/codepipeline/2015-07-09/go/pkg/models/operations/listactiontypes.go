// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListActionTypesXAmzTargetEnum
type ListActionTypesXAmzTargetEnum string

const (
	ListActionTypesXAmzTargetEnumCodePipeline20150709ListActionTypes ListActionTypesXAmzTargetEnum = "CodePipeline_20150709.ListActionTypes"
)

func (e ListActionTypesXAmzTargetEnum) ToPointer() *ListActionTypesXAmzTargetEnum {
	return &e
}

func (e *ListActionTypesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodePipeline_20150709.ListActionTypes":
		*e = ListActionTypesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListActionTypesXAmzTargetEnum: %v", v)
	}
}

type ListActionTypesRequest struct {
	ListActionTypesInput shared.ListActionTypesInput   `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           ListActionTypesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListActionTypesResponse struct {
	ContentType string
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// Success
	ListActionTypesOutput *shared.ListActionTypesOutput
	StatusCode            int
	RawResponse           *http.Response
	// ValidationException
	ValidationException interface{}
}
