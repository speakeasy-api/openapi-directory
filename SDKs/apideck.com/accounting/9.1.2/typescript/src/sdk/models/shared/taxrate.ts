/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class TaxRateComponents extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "compound" })
  compound?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rate" })
  rate?: number;
}

/**
 * Tax rate status
 */
export enum TaxRateTaxRateStatusEnum {
  Active = "active",
  Inactive = "inactive",
  Archived = "archived",
}

export class TaxRateInput extends SpeakeasyBase {
  /**
   * Tax code assigned to identify this tax rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata({ elemType: TaxRateComponents })
  @Expose({ name: "components" })
  @Type(() => TaxRateComponents)
  components?: TaxRateComponents[];

  /**
   * Description of tax rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Effective tax rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effective_tax_rate" })
  effectiveTaxRate?: number;

  /**
   * ID assigned to identify this tax rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name assigned to identify this tax rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "original_tax_rate_id" })
  originalTaxRateId?: string;

  /**
   * Report Tax type to aggregate tax collected or paid for reporting purposes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_tax_type" })
  reportTaxType?: string;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Tax rate status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TaxRateTaxRateStatusEnum;

  /**
   * Unique identifier for the account for tax collected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_payable_account_id" })
  taxPayableAccountId?: string;

  /**
   * Unique identifier for the account for tax remitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_remitted_account_id" })
  taxRemittedAccountId?: string;

  /**
   * Not compounded sum of the components of a tax rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_tax_rate" })
  totalTaxRate?: number;

  /**
   * Tax type used to indicate the source of tax collected or paid
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class TaxRate extends SpeakeasyBase {
  /**
   * Tax code assigned to identify this tax rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata({ elemType: TaxRateComponents })
  @Expose({ name: "components" })
  @Type(() => TaxRateComponents)
  components?: TaxRateComponents[];

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Description of tax rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Effective tax rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effective_tax_rate" })
  effectiveTaxRate?: number;

  /**
   * ID assigned to identify this tax rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name assigned to identify this tax rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "original_tax_rate_id" })
  originalTaxRateId?: string;

  /**
   * Report Tax type to aggregate tax collected or paid for reporting purposes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_tax_type" })
  reportTaxType?: string;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Tax rate status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TaxRateTaxRateStatusEnum;

  /**
   * Unique identifier for the account for tax collected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_payable_account_id" })
  taxPayableAccountId?: string;

  /**
   * Unique identifier for the account for tax remitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_remitted_account_id" })
  taxRemittedAccountId?: string;

  /**
   * Not compounded sum of the components of a tax rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_tax_rate" })
  totalTaxRate?: number;

  /**
   * Tax type used to indicate the source of tax collected or paid
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;
}
