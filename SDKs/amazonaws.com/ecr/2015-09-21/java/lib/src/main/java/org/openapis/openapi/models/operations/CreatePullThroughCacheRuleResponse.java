/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class CreatePullThroughCacheRuleResponse {
    
    public String contentType;
    public CreatePullThroughCacheRuleResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreatePullThroughCacheRuleResponse createPullThroughCacheRuleResponse;
    public CreatePullThroughCacheRuleResponse withCreatePullThroughCacheRuleResponse(org.openapis.openapi.models.shared.CreatePullThroughCacheRuleResponse createPullThroughCacheRuleResponse) {
        this.createPullThroughCacheRuleResponse = createPullThroughCacheRuleResponse;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;
    public CreatePullThroughCacheRuleResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;
    public CreatePullThroughCacheRuleResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * PullThroughCacheRuleAlreadyExistsException
     */
    
    public Object pullThroughCacheRuleAlreadyExistsException;
    public CreatePullThroughCacheRuleResponse withPullThroughCacheRuleAlreadyExistsException(Object pullThroughCacheRuleAlreadyExistsException) {
        this.pullThroughCacheRuleAlreadyExistsException = pullThroughCacheRuleAlreadyExistsException;
        return this;
    }
    
    /**
     * ServerException
     */
    
    public Object serverException;
    public CreatePullThroughCacheRuleResponse withServerException(Object serverException) {
        this.serverException = serverException;
        return this;
    }
    
    
    public Integer statusCode;
    public CreatePullThroughCacheRuleResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public CreatePullThroughCacheRuleResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedUpstreamRegistryException
     */
    
    public Object unsupportedUpstreamRegistryException;
    public CreatePullThroughCacheRuleResponse withUnsupportedUpstreamRegistryException(Object unsupportedUpstreamRegistryException) {
        this.unsupportedUpstreamRegistryException = unsupportedUpstreamRegistryException;
        return this;
    }
    
    /**
     * ValidationException
     */
    
    public Object validationException;
    public CreatePullThroughCacheRuleResponse withValidationException(Object validationException) {
        this.validationException = validationException;
        return this;
    }
    
}
