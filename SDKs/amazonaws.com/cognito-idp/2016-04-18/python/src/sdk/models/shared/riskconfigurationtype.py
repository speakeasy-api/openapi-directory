"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import accounttakeoverriskconfigurationtype as shared_accounttakeoverriskconfigurationtype
from ..shared import compromisedcredentialsriskconfigurationtype as shared_compromisedcredentialsriskconfigurationtype
from ..shared import riskexceptionconfigurationtype as shared_riskexceptionconfigurationtype
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RiskConfigurationType:
    r"""The risk configuration type."""
    
    account_takeover_risk_configuration: Optional[shared_accounttakeoverriskconfigurationtype.AccountTakeoverRiskConfigurationType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountTakeoverRiskConfiguration'), 'exclude': lambda f: f is None }})  
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientId'), 'exclude': lambda f: f is None }})  
    compromised_credentials_risk_configuration: Optional[shared_compromisedcredentialsriskconfigurationtype.CompromisedCredentialsRiskConfigurationType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompromisedCredentialsRiskConfiguration'), 'exclude': lambda f: f is None }})  
    last_modified_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastModifiedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    risk_exception_configuration: Optional[shared_riskexceptionconfigurationtype.RiskExceptionConfigurationType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RiskExceptionConfiguration'), 'exclude': lambda f: f is None }})  
    user_pool_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UserPoolId'), 'exclude': lambda f: f is None }})  
    