// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetParameterHistoryQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// GetParameterHistoryXAmzTargetEnum
type GetParameterHistoryXAmzTargetEnum string

const (
	GetParameterHistoryXAmzTargetEnumAmazonSsmGetParameterHistory GetParameterHistoryXAmzTargetEnum = "AmazonSSM.GetParameterHistory"
)

func (e *GetParameterHistoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.GetParameterHistory":
		*e = GetParameterHistoryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetParameterHistoryXAmzTargetEnum: %s", s)
	}
}

type GetParameterHistoryHeaders struct {
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetParameterHistoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetParameterHistoryRequest struct {
	QueryParams GetParameterHistoryQueryParams
	Headers     GetParameterHistoryHeaders
	Request     shared.GetParameterHistoryRequest `request:"mediaType=application/json"`
}

type GetParameterHistoryResponse struct {
	ContentType string
	// Success
	GetParameterHistoryResult *shared.GetParameterHistoryResult
	// InternalServerError
	InternalServerError interface{}
	// InvalidKeyId
	InvalidKeyID interface{}
	// InvalidNextToken
	InvalidNextToken interface{}
	// ParameterNotFound
	ParameterNotFound interface{}
	StatusCode        int
	RawResponse       *http.Response
}
