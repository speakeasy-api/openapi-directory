// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ActivityListRepoNotificationsForAuthenticatedUserPathParams struct {
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ActivityListRepoNotificationsForAuthenticatedUserQueryParams struct {
	// If `true`, show notifications marked as read.
	All *bool `queryParam:"style=form,explode=true,name=all"`
	// Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
	Before *time.Time `queryParam:"style=form,explode=true,name=before"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// If `true`, only shows notifications in which the user is directly participating or mentioned.
	Participating *bool `queryParam:"style=form,explode=true,name=participating"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
	Since *time.Time `queryParam:"style=form,explode=true,name=since"`
}

type ActivityListRepoNotificationsForAuthenticatedUserRequest struct {
	PathParams  ActivityListRepoNotificationsForAuthenticatedUserPathParams
	QueryParams ActivityListRepoNotificationsForAuthenticatedUserQueryParams
}

type ActivityListRepoNotificationsForAuthenticatedUserResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Threads []shared.Thread
}
