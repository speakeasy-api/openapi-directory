/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChallengeV3 } from "./challengev3";
import { CompanyV3 } from "./companyv3";
import { IndividualV3 } from "./individualv3";
import { PayeeAddressV3 } from "./payeeaddressv3";
import { PayeePayorRefV3 } from "./payeepayorrefv3";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success response, request completed okay
 */
export class PayeeDetailResponseV3 extends SpeakeasyBase {
  /**
   * The timestamp when the payee last accepted T&Cs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acceptTermsAndConditionsTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  acceptTermsAndConditionsTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => PayeeAddressV3)
  address?: PayeeAddressV3;

  @SpeakeasyMetadata()
  @Expose({ name: "cellphoneNumber" })
  cellphoneNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "challenge" })
  @Type(() => ChallengeV3)
  challenge?: ChallengeV3;

  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  @Type(() => CompanyV3)
  company?: CompanyV3;

  /**
   * Valid ISO 3166 2 character country code. See the <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a>ISO specification</a> for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "disabledComment" })
  disabledComment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "disabledUpdatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  disabledUpdatedTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enhancedKycCompleted" })
  enhancedKycCompleted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "gracePeriodEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  gracePeriodEndDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "individual" })
  @Type(() => IndividualV3)
  individual?: IndividualV3;

  @SpeakeasyMetadata()
  @Expose({ name: "kycCompletedTimestamp" })
  kycCompletedTimestamp?: string;

  /**
   * An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>
   *
   * @remarks
   * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "marketingOptInDecision" })
  marketingOptInDecision?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "marketingOptInTimestamp" })
  marketingOptInTimestamp?: string;

  /**
   * Onboarded status. One of the following values: CREATED, INVITED, REGISTERED, ONBOARDED
   */
  @SpeakeasyMetadata()
  @Expose({ name: "onboardedStatus" })
  onboardedStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pausePayment" })
  pausePayment?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "pausePaymentTimestamp" })
  pausePaymentTimestamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payeeId" })
  payeeId?: string;

  /**
   * Type of Payee. One of the following values: Individual, Company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payeeType" })
  payeeType?: string;

  @SpeakeasyMetadata({ elemType: PayeePayorRefV3 })
  @Expose({ name: "payorRefs" })
  @Type(() => PayeePayorRefV3)
  payorRefs?: PayeePayorRefV3[];

  @SpeakeasyMetadata()
  @Expose({ name: "watchlistOverrideComment" })
  watchlistOverrideComment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "watchlistOverrideExpiresAtTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  watchlistOverrideExpiresAtTimestamp?: Date;

  /**
   * Current watchlist status. One of the following values: NONE, PENDING, REVIEW, PASSED, FAILED
   */
  @SpeakeasyMetadata()
  @Expose({ name: "watchlistStatus" })
  watchlistStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "watchlistStatusUpdatedTimestamp" })
  watchlistStatusUpdatedTimestamp?: string;
}
