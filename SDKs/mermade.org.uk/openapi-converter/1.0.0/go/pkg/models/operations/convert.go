// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ConvertRequestBodyValidateEnum string

const (
	ConvertRequestBodyValidateEnumOn ConvertRequestBodyValidateEnum = "on"
)

func (e *ConvertRequestBodyValidateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "on":
		*e = ConvertRequestBodyValidateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConvertRequestBodyValidateEnum: %s", s)
	}
}

type ConvertRequestBody struct {
	// The file to upload and convert
	Filename *string `multipartForm:"name=filename"`
	// The text of a Swagger 2.0 definition to convert
	Source   *string                         `multipartForm:"name=source"`
	Validate *ConvertRequestBodyValidateEnum `multipartForm:"name=validate"`
}

type ConvertResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// default
	Convert200ApplicationJSONAny interface{}
	// Invalid request
	Convert400ApplicationJSONAny interface{}
}
