// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetalistofReviewsRequest struct {
	// HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Describes the type of the content being sent.
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
	// Zero base starting record number, `0` is the default value.
	From string `queryParam:"style=form,explode=true,name=from"`
	// Case-sensitive fieldName to order records (optionally add `:asc` or `:desc`).
	OrderBy string `queryParam:"style=form,explode=true,name=order_by"`
	// Filter the reviews by product ID.
	ProductID string `queryParam:"style=form,explode=true,name=product_id"`
	// Returns Reviews that contain the search term in `productId`, `sku`, `shopperId`, or `reviewerName`.
	SearchTerm string `queryParam:"style=form,explode=true,name=search_term"`
	// Status of the review, approved (`true`) or not (`false`).
	Status bool `queryParam:"style=form,explode=true,name=status"`
	// Zero base ending record number, `3` is the default value.
	To string `queryParam:"style=form,explode=true,name=to"`
}

// GetalistofReviews200ApplicationJSONData - Review's information.
type GetalistofReviews200ApplicationJSONData struct {
	// If the review was approved (`true`) or not (`false`).
	Approved *bool `json:"approved,omitempty"`
	// Review ID.
	ID *string `json:"id,omitempty"`
	// Review's locale.
	Locale *string `json:"locale,omitempty"`
	// Review's origin location.
	Location *string `json:"location,omitempty"`
	// Past reviews of the same product.
	PastReviews *string `json:"pastReviews,omitempty"`
	// Product ID.
	ProductID *string `json:"productId,omitempty"`
	// Customer rating.
	Rating *float64 `json:"rating,omitempty"`
	// Review's date and time.
	ReviewDateTime *string `json:"reviewDateTime,omitempty"`
	// Reviewer name.
	ReviewerName *string `json:"reviewerName,omitempty"`
	// Review's search date.
	SearchDate *string `json:"searchDate,omitempty"`
	// Shopper email.
	ShopperID *string `json:"shopperId,omitempty"`
	// SKU ID.
	Sku *string `json:"sku,omitempty"`
	// Review's text.
	Text *string `json:"text,omitempty"`
	// Review's title.
	Title *string `json:"title,omitempty"`
	// If the reviewer is a verified purchaser (`true`) or not (`false`).
	VerifiedPurchaser *bool `json:"verifiedPurchaser,omitempty"`
}

// GetalistofReviews200ApplicationJSONRange - Range of the review's list.
type GetalistofReviews200ApplicationJSONRange struct {
	// Zero base starting record number.
	From *float64 `json:"from,omitempty"`
	// Zero base ending record number.
	To *float64 `json:"to,omitempty"`
	// Total number of reviews on the list.
	Total *float64 `json:"total,omitempty"`
}

// GetalistofReviews200ApplicationJSON - OK
type GetalistofReviews200ApplicationJSON struct {
	// Array of reviews.
	Data []GetalistofReviews200ApplicationJSONData `json:"data,omitempty"`
	// Range of the review's list.
	Range *GetalistofReviews200ApplicationJSONRange `json:"range,omitempty"`
}

type GetalistofReviewsResponse struct {
	ContentType string
	// OK
	GetalistofReviews200ApplicationJSONObject *GetalistofReviews200ApplicationJSON
	StatusCode                                int
	RawResponse                               *http.Response
}
