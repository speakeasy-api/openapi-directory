// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETLoginProfileActionEnum
type GETGETLoginProfileActionEnum string

const (
	GETGETLoginProfileActionEnumGetLoginProfile GETGETLoginProfileActionEnum = "GetLoginProfile"
)

func (e *GETGETLoginProfileActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetLoginProfile":
		*e = GETGETLoginProfileActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETLoginProfileActionEnum: %s", s)
	}
}

// GETGETLoginProfileVersionEnum
type GETGETLoginProfileVersionEnum string

const (
	GETGETLoginProfileVersionEnumTwoThousandAndTen0508 GETGETLoginProfileVersionEnum = "2010-05-08"
)

func (e *GETGETLoginProfileVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETGETLoginProfileVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETLoginProfileVersionEnum: %s", s)
	}
}

type GETGETLoginProfileRequest struct {
	Action GETGETLoginProfileActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the user whose login profile you want to retrieve.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	UserName          string                        `queryParam:"style=form,explode=true,name=UserName"`
	Version           GETGETLoginProfileVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETLoginProfileResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
