<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UserEntity - Create User
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UserEntity
{
    /**
     * Is 2fa active for the user?
     * 
     * @var ?bool $active2fa
     */
	#[\JMS\Serializer\Annotation\SerializedName('active_2fa')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active2fa = null;
    
    /**
     * List of group IDs of which this user is an administrator
     * 
     * @var ?array<int> $adminGroupIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin_group_ids')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $adminGroupIds = null;
    
    /**
     * A list of allowed IPs if applicable.  Newline delimited
     * 
     * @var ?string $allowedIps
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowed_ips')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $allowedIps = null;
    
    /**
     * Number of api keys associated with this user
     * 
     * @var ?int $apiKeysCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_keys_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $apiKeysCount = null;
    
    /**
     * DEPRECATED: Can the user create Bundles (aka Share Links)? Use the bundle permission instead.
     * 
     * @var ?bool $attachmentsPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachments_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $attachmentsPermission = null;
    
    /**
     * Scheduled Date/Time at which user will be deactivated
     * 
     * @var ?\DateTime $authenticateUntil
     */
	#[\JMS\Serializer\Annotation\SerializedName('authenticate_until')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $authenticateUntil = null;
    
    /**
     * How is this user authenticated?
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserEntityAuthenticationMethodEnum $authenticationMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('authentication_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UserEntityAuthenticationMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserEntityAuthenticationMethodEnum $authenticationMethod = null;
    
    /**
     * URL holding the user's avatar
     * 
     * @var ?string $avatarUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('avatar_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $avatarUrl = null;
    
    /**
     * Allow this user to perform operations on the account, payments, and invoices?
     * 
     * @var ?bool $billingPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('billing_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $billingPermission = null;
    
    /**
     * Exempt this user from being disabled based on inactivity?
     * 
     * @var ?bool $bypassInactiveDisable
     */
	#[\JMS\Serializer\Annotation\SerializedName('bypass_inactive_disable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $bypassInactiveDisable = null;
    
    /**
     * Allow this user to skip site-wide IP blacklists?
     * 
     * @var ?bool $bypassSiteAllowedIps
     */
	#[\JMS\Serializer\Annotation\SerializedName('bypass_site_allowed_ips')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $bypassSiteAllowedIps = null;
    
    /**
     * User's company
     * 
     * @var ?string $company
     */
	#[\JMS\Serializer\Annotation\SerializedName('company')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $company = null;
    
    /**
     * When this user was created
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * Can the user connect with WebDAV?
     * 
     * @var ?bool $davPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('dav_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $davPermission = null;
    
    /**
     * Number of days remaining until password expires
     * 
     * @var ?int $daysRemainingUntilPasswordExpire
     */
	#[\JMS\Serializer\Annotation\SerializedName('days_remaining_until_password_expire')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $daysRemainingUntilPasswordExpire = null;
    
    /**
     * Is user disabled? Disabled users cannot log in, and do not count for billing purposes.  Users can be automatically disabled after an inactivity period via a Site setting.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * User email address
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Is this user managed by a SsoStrategy?
     * 
     * @var ?bool $externallyManaged
     */
	#[\JMS\Serializer\Annotation\SerializedName('externally_managed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $externallyManaged = null;
    
    /**
     * User's first login time
     * 
     * @var ?\DateTime $firstLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_login_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $firstLoginAt = null;
    
    /**
     * Can the user access with FTP/FTPS?
     * 
     * @var ?bool $ftpPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('ftp_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ftpPermission = null;
    
    /**
     * Comma-separated list of group IDs of which this user is a member
     * 
     * @var ?string $groupIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('group_ids')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $groupIds = null;
    
    /**
     * Text to display to the user in the header of the UI
     * 
     * @var ?string $headerText
     */
	#[\JMS\Serializer\Annotation\SerializedName('header_text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $headerText = null;
    
    /**
     * User ID
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Preferred language
     * 
     * @var ?string $language
     */
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $language = null;
    
    /**
     * User's most recent activity time, which is the latest of most recent login, most recent API use, enablement, or creation
     * 
     * @var ?\DateTime $lastActiveAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_active_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastActiveAt = null;
    
    /**
     * User's most recent API use time
     * 
     * @var ?\DateTime $lastApiUseAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_api_use_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastApiUseAt = null;
    
    /**
     * User's most recent login time via WebDAV
     * 
     * @var ?\DateTime $lastDavLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_dav_login_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastDavLoginAt = null;
    
    /**
     * User's most recent login time via Desktop app
     * 
     * @var ?\DateTime $lastDesktopLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_desktop_login_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastDesktopLoginAt = null;
    
    /**
     * User's most recent login time via FTP
     * 
     * @var ?\DateTime $lastFtpLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_ftp_login_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastFtpLoginAt = null;
    
    /**
     * User's most recent login time via any protocol
     * 
     * @var ?\DateTime $lastLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_login_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastLoginAt = null;
    
    /**
     * The most recent protocol and cipher used
     * 
     * @var ?string $lastProtocolCipher
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_protocol_cipher')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastProtocolCipher = null;
    
    /**
     * User's most recent login time via Rest API
     * 
     * @var ?\DateTime $lastRestapiLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_restapi_login_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastRestapiLoginAt = null;
    
    /**
     * User's most recent login time via SFTP
     * 
     * @var ?\DateTime $lastSftpLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_sftp_login_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastSftpLoginAt = null;
    
    /**
     * User's most recent login time via web
     * 
     * @var ?\DateTime $lastWebLoginAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_web_login_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastWebLoginAt = null;
    
    /**
     * Time in the future that the user will no longer be locked out if applicable
     * 
     * @var ?\DateTime $lockoutExpires
     */
	#[\JMS\Serializer\Annotation\SerializedName('lockout_expires')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lockoutExpires = null;
    
    /**
     * User's full name
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Any internal notes on the user
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * Hour of the day at which daily notifications should be sent. Can be in range 0 to 23
     * 
     * @var ?int $notificationDailySendTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('notification_daily_send_time')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $notificationDailySendTime = null;
    
    /**
     * Enable integration with Office for the web?
     * 
     * @var ?bool $officeIntegrationEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('office_integration_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $officeIntegrationEnabled = null;
    
    /**
     * Password expiration datetime
     * 
     * @var ?\DateTime $passwordExpireAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('password_expire_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $passwordExpireAt = null;
    
    /**
     * Is user's password expired?
     * 
     * @var ?bool $passwordExpired
     */
	#[\JMS\Serializer\Annotation\SerializedName('password_expired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $passwordExpired = null;
    
    /**
     * Last time the user's password was set
     * 
     * @var ?\DateTime $passwordSetAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('password_set_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $passwordSetAt = null;
    
    /**
     * Number of days to allow user to use the same password
     * 
     * @var ?int $passwordValidityDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('password_validity_days')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $passwordValidityDays = null;
    
    /**
     * Number of public keys associated with this user
     * 
     * @var ?int $publicKeysCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_keys_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $publicKeysCount = null;
    
    /**
     * Should the user receive admin alerts such a certificate expiration notifications and overages?
     * 
     * @var ?bool $receiveAdminAlerts
     */
	#[\JMS\Serializer\Annotation\SerializedName('receive_admin_alerts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $receiveAdminAlerts = null;
    
    /**
     * 2FA required setting
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserEntityRequire2faEnum $require2fa
     */
	#[\JMS\Serializer\Annotation\SerializedName('require_2fa')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UserEntityRequire2faEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserEntityRequire2faEnum $require2fa = null;
    
    /**
     * Is a password change required upon next user login?
     * 
     * @var ?bool $requirePasswordChange
     */
	#[\JMS\Serializer\Annotation\SerializedName('require_password_change')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requirePasswordChange = null;
    
    /**
     * Can this user access the REST API?
     * 
     * @var ?bool $restapiPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('restapi_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $restapiPermission = null;
    
    /**
     * Does this user manage it's own credentials or is it a shared/bot user?
     * 
     * @var ?bool $selfManaged
     */
	#[\JMS\Serializer\Annotation\SerializedName('self_managed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $selfManaged = null;
    
    /**
     * Can the user access with SFTP?
     * 
     * @var ?bool $sftpPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('sftp_permission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $sftpPermission = null;
    
    /**
     * Is the user an administrator for this site?
     * 
     * @var ?bool $siteAdmin
     */
	#[\JMS\Serializer\Annotation\SerializedName('site_admin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $siteAdmin = null;
    
    /**
     * Skip Welcome page in the UI?
     * 
     * @var ?bool $skipWelcomeScreen
     */
	#[\JMS\Serializer\Annotation\SerializedName('skip_welcome_screen')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $skipWelcomeScreen = null;
    
    /**
     * SSL required setting
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserEntitySslRequiredEnum $sslRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('ssl_required')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UserEntitySslRequiredEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserEntitySslRequiredEnum $sslRequired = null;
    
    /**
     * SSO (Single Sign On) strategy ID for the user, if applicable.
     * 
     * @var ?int $ssoStrategyId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sso_strategy_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ssoStrategyId = null;
    
    /**
     * Is the user subscribed to the newsletter?
     * 
     * @var ?bool $subscribeToNewsletter
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscribe_to_newsletter')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $subscribeToNewsletter = null;
    
    /**
     * User time zone
     * 
     * @var ?string $timeZone
     */
	#[\JMS\Serializer\Annotation\SerializedName('time_zone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timeZone = null;
    
    /**
     * Type(s) of 2FA methods in use.  Will be either `sms`, `totp`, `u2f`, `yubi`, or multiple values sorted alphabetically and joined by an underscore.
     * 
     * @var ?string $typeOf2fa
     */
	#[\JMS\Serializer\Annotation\SerializedName('type_of_2fa')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $typeOf2fa = null;
    
    /**
     * Root folder for FTP (and optionally SFTP if the appropriate site-wide setting is set.)  Note that this is not used for API, Desktop, or Web interface.
     * 
     * @var ?string $userRoot
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_root')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userRoot = null;
    
    /**
     * User's username
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->active2fa = null;
		$this->adminGroupIds = null;
		$this->allowedIps = null;
		$this->apiKeysCount = null;
		$this->attachmentsPermission = null;
		$this->authenticateUntil = null;
		$this->authenticationMethod = null;
		$this->avatarUrl = null;
		$this->billingPermission = null;
		$this->bypassInactiveDisable = null;
		$this->bypassSiteAllowedIps = null;
		$this->company = null;
		$this->createdAt = null;
		$this->davPermission = null;
		$this->daysRemainingUntilPasswordExpire = null;
		$this->disabled = null;
		$this->email = null;
		$this->externallyManaged = null;
		$this->firstLoginAt = null;
		$this->ftpPermission = null;
		$this->groupIds = null;
		$this->headerText = null;
		$this->id = null;
		$this->language = null;
		$this->lastActiveAt = null;
		$this->lastApiUseAt = null;
		$this->lastDavLoginAt = null;
		$this->lastDesktopLoginAt = null;
		$this->lastFtpLoginAt = null;
		$this->lastLoginAt = null;
		$this->lastProtocolCipher = null;
		$this->lastRestapiLoginAt = null;
		$this->lastSftpLoginAt = null;
		$this->lastWebLoginAt = null;
		$this->lockoutExpires = null;
		$this->name = null;
		$this->notes = null;
		$this->notificationDailySendTime = null;
		$this->officeIntegrationEnabled = null;
		$this->passwordExpireAt = null;
		$this->passwordExpired = null;
		$this->passwordSetAt = null;
		$this->passwordValidityDays = null;
		$this->publicKeysCount = null;
		$this->receiveAdminAlerts = null;
		$this->require2fa = null;
		$this->requirePasswordChange = null;
		$this->restapiPermission = null;
		$this->selfManaged = null;
		$this->sftpPermission = null;
		$this->siteAdmin = null;
		$this->skipWelcomeScreen = null;
		$this->sslRequired = null;
		$this->ssoStrategyId = null;
		$this->subscribeToNewsletter = null;
		$this->timeZone = null;
		$this->typeOf2fa = null;
		$this->userRoot = null;
		$this->username = null;
	}
}
