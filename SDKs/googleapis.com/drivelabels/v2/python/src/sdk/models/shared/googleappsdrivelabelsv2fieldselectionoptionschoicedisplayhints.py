"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleappsdrivelabelsv2badgecolors as shared_googleappsdrivelabelsv2badgecolors
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAppsDriveLabelsV2FieldSelectionOptionsChoiceDisplayHints:
    r"""UI display hints for rendering an option."""
    
    badge_colors: Optional[shared_googleappsdrivelabelsv2badgecolors.GoogleAppsDriveLabelsV2BadgeColors] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('badgeColors'), 'exclude': lambda f: f is None }})
    r"""The color derived from BadgeConfig and changed to the closest recommended supported color."""  
    badge_priority: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('badgePriority'), 'exclude': lambda f: f is None }})
    r"""The priority of this badge. Used to compare and sort between multiple badges. A lower number means the badge should be shown first. When a badging configuration is not present, this will be 0. Otherwise, this will be set to `BadgeConfig.priority_override` or the default heuristic which prefers creation date of the label, and field and option priority."""  
    dark_badge_colors: Optional[shared_googleappsdrivelabelsv2badgecolors.GoogleAppsDriveLabelsV2BadgeColors] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('darkBadgeColors'), 'exclude': lambda f: f is None }})
    r"""The color derived from BadgeConfig and changed to the closest recommended supported color."""  
    disabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disabled'), 'exclude': lambda f: f is None }})
    r"""Whether the option should be shown in the UI as disabled."""  
    hidden_in_search: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hiddenInSearch'), 'exclude': lambda f: f is None }})
    r"""This option should be hidden in the search menu when searching for Drive items."""  
    shown_in_apply: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shownInApply'), 'exclude': lambda f: f is None }})
    r"""This option should be shown in the apply menu when applying values to a Drive item."""  
    