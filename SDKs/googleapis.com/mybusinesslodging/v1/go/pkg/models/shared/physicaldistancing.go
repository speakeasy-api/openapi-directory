// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum - Common areas physical distancing arranged exception.
type PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum string

const (
	PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnumExceptionUnspecified PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum = "EXCEPTION_UNSPECIFIED"
	PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnumUnderConstruction    PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum = "UNDER_CONSTRUCTION"
	PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnumDependentOnSeason    PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum = "DEPENDENT_ON_SEASON"
	PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnumDependentOnDayOfWeek PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum) ToPointer() *PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum {
	return &e
}

func (e *PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum: %v", v)
	}
}

// PhysicalDistancingPhysicalDistancingRequiredExceptionEnum - Physical distancing required exception.
type PhysicalDistancingPhysicalDistancingRequiredExceptionEnum string

const (
	PhysicalDistancingPhysicalDistancingRequiredExceptionEnumExceptionUnspecified PhysicalDistancingPhysicalDistancingRequiredExceptionEnum = "EXCEPTION_UNSPECIFIED"
	PhysicalDistancingPhysicalDistancingRequiredExceptionEnumUnderConstruction    PhysicalDistancingPhysicalDistancingRequiredExceptionEnum = "UNDER_CONSTRUCTION"
	PhysicalDistancingPhysicalDistancingRequiredExceptionEnumDependentOnSeason    PhysicalDistancingPhysicalDistancingRequiredExceptionEnum = "DEPENDENT_ON_SEASON"
	PhysicalDistancingPhysicalDistancingRequiredExceptionEnumDependentOnDayOfWeek PhysicalDistancingPhysicalDistancingRequiredExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e PhysicalDistancingPhysicalDistancingRequiredExceptionEnum) ToPointer() *PhysicalDistancingPhysicalDistancingRequiredExceptionEnum {
	return &e
}

func (e *PhysicalDistancingPhysicalDistancingRequiredExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = PhysicalDistancingPhysicalDistancingRequiredExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhysicalDistancingPhysicalDistancingRequiredExceptionEnum: %v", v)
	}
}

// PhysicalDistancingSafetyDividersExceptionEnum - Safety dividers exception.
type PhysicalDistancingSafetyDividersExceptionEnum string

const (
	PhysicalDistancingSafetyDividersExceptionEnumExceptionUnspecified PhysicalDistancingSafetyDividersExceptionEnum = "EXCEPTION_UNSPECIFIED"
	PhysicalDistancingSafetyDividersExceptionEnumUnderConstruction    PhysicalDistancingSafetyDividersExceptionEnum = "UNDER_CONSTRUCTION"
	PhysicalDistancingSafetyDividersExceptionEnumDependentOnSeason    PhysicalDistancingSafetyDividersExceptionEnum = "DEPENDENT_ON_SEASON"
	PhysicalDistancingSafetyDividersExceptionEnumDependentOnDayOfWeek PhysicalDistancingSafetyDividersExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e PhysicalDistancingSafetyDividersExceptionEnum) ToPointer() *PhysicalDistancingSafetyDividersExceptionEnum {
	return &e
}

func (e *PhysicalDistancingSafetyDividersExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = PhysicalDistancingSafetyDividersExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhysicalDistancingSafetyDividersExceptionEnum: %v", v)
	}
}

// PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum - Shared areas limited occupancy exception.
type PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum string

const (
	PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnumExceptionUnspecified PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum = "EXCEPTION_UNSPECIFIED"
	PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnumUnderConstruction    PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum = "UNDER_CONSTRUCTION"
	PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnumDependentOnSeason    PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum = "DEPENDENT_ON_SEASON"
	PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnumDependentOnDayOfWeek PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum) ToPointer() *PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum {
	return &e
}

func (e *PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum: %v", v)
	}
}

// PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum - Wellness areas have private spaces exception.
type PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum string

const (
	PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnumExceptionUnspecified PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum = "EXCEPTION_UNSPECIFIED"
	PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnumUnderConstruction    PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum = "UNDER_CONSTRUCTION"
	PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnumDependentOnSeason    PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum = "DEPENDENT_ON_SEASON"
	PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnumDependentOnDayOfWeek PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum) ToPointer() *PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum {
	return &e
}

func (e *PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum: %v", v)
	}
}

// PhysicalDistancing - Physical distancing measures implemented by the hotel during COVID-19.
type PhysicalDistancing struct {
	// Common areas arranged to maintain physical distancing.
	CommonAreasPhysicalDistancingArranged *bool `json:"commonAreasPhysicalDistancingArranged,omitempty"`
	// Common areas physical distancing arranged exception.
	CommonAreasPhysicalDistancingArrangedException *PhysicalDistancingCommonAreasPhysicalDistancingArrangedExceptionEnum `json:"commonAreasPhysicalDistancingArrangedException,omitempty"`
	// Physical distancing required.
	PhysicalDistancingRequired *bool `json:"physicalDistancingRequired,omitempty"`
	// Physical distancing required exception.
	PhysicalDistancingRequiredException *PhysicalDistancingPhysicalDistancingRequiredExceptionEnum `json:"physicalDistancingRequiredException,omitempty"`
	// Safety dividers at front desk and other locations.
	SafetyDividers *bool `json:"safetyDividers,omitempty"`
	// Safety dividers exception.
	SafetyDividersException *PhysicalDistancingSafetyDividersExceptionEnum `json:"safetyDividersException,omitempty"`
	// Guest occupancy limited within shared facilities.
	SharedAreasLimitedOccupancy *bool `json:"sharedAreasLimitedOccupancy,omitempty"`
	// Shared areas limited occupancy exception.
	SharedAreasLimitedOccupancyException *PhysicalDistancingSharedAreasLimitedOccupancyExceptionEnum `json:"sharedAreasLimitedOccupancyException,omitempty"`
	// Private spaces designated in spa and wellness areas.
	WellnessAreasHavePrivateSpaces *bool `json:"wellnessAreasHavePrivateSpaces,omitempty"`
	// Wellness areas have private spaces exception.
	WellnessAreasHavePrivateSpacesException *PhysicalDistancingWellnessAreasHavePrivateSpacesExceptionEnum `json:"wellnessAreasHavePrivateSpacesException,omitempty"`
}
