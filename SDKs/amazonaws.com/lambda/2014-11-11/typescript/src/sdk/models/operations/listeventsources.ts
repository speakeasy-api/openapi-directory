/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListEventSourcesRequest extends SpeakeasyBase {
  /**
   * The Amazon Resource Name (ARN) of the Amazon Kinesis stream.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EventSource",
  })
  eventSource?: string;

  /**
   * The name of the AWS Lambda function.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FunctionName",
  })
  functionName?: string;

  /**
   * Optional string. An opaque pagination token returned from a previous <code>ListEventSources</code> operation. If present, specifies to continue the list from where the returning call left off.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Marker",
  })
  marker?: string;

  /**
   * Optional integer. Specifies the maximum number of event sources to return in response. This value must be greater than 0.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxItems",
  })
  maxItems?: number;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class ListEventSourcesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InvalidParameterValueException
   */
  @SpeakeasyMetadata()
  invalidParameterValueException?: shared.InvalidParameterValueException;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listEventSourcesResponse?: shared.ListEventSourcesResponse;

  /**
   * ServiceException
   */
  @SpeakeasyMetadata()
  serviceException?: shared.ServiceException;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: shared.ResourceNotFoundException;
}
