// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type QueryObjectsQueryParams struct {
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=limit"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=marker"`
}

// QueryObjectsXAmzTargetEnum
type QueryObjectsXAmzTargetEnum string

const (
	QueryObjectsXAmzTargetEnumDataPipelineQueryObjects QueryObjectsXAmzTargetEnum = "DataPipeline.QueryObjects"
)

func (e *QueryObjectsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DataPipeline.QueryObjects":
		*e = QueryObjectsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryObjectsXAmzTargetEnum: %s", s)
	}
}

type QueryObjectsHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        QueryObjectsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type QueryObjectsRequest struct {
	QueryParams QueryObjectsQueryParams
	Headers     QueryObjectsHeaders
	Request     shared.QueryObjectsInput `request:"mediaType=application/json"`
}

type QueryObjectsResponse struct {
	ContentType string
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// PipelineDeletedException
	PipelineDeletedException interface{}
	// PipelineNotFoundException
	PipelineNotFoundException interface{}
	// Success
	QueryObjectsOutput *shared.QueryObjectsOutput
	StatusCode         int
	RawResponse        *http.Response
}
