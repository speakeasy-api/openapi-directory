// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum - The spread level for the placement group. <i>Only</i> Outpost placement groups can be spread across hosts.
type DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum string

const (
	DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnumHost DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum = "host"
	DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnumRack DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum = "rack"
)

func (e *DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "host":
		fallthrough
	case "rack":
		*e = DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum: %s", s)
	}
}

// DescribePlacementGroupsResultPlacementGroupsStateEnum - The state of the placement group.
type DescribePlacementGroupsResultPlacementGroupsStateEnum string

const (
	DescribePlacementGroupsResultPlacementGroupsStateEnumPending   DescribePlacementGroupsResultPlacementGroupsStateEnum = "pending"
	DescribePlacementGroupsResultPlacementGroupsStateEnumAvailable DescribePlacementGroupsResultPlacementGroupsStateEnum = "available"
	DescribePlacementGroupsResultPlacementGroupsStateEnumDeleting  DescribePlacementGroupsResultPlacementGroupsStateEnum = "deleting"
	DescribePlacementGroupsResultPlacementGroupsStateEnumDeleted   DescribePlacementGroupsResultPlacementGroupsStateEnum = "deleted"
)

func (e *DescribePlacementGroupsResultPlacementGroupsStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = DescribePlacementGroupsResultPlacementGroupsStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribePlacementGroupsResultPlacementGroupsStateEnum: %s", s)
	}
}

// DescribePlacementGroupsResultPlacementGroupsStrategyEnum - The placement strategy.
type DescribePlacementGroupsResultPlacementGroupsStrategyEnum string

const (
	DescribePlacementGroupsResultPlacementGroupsStrategyEnumCluster   DescribePlacementGroupsResultPlacementGroupsStrategyEnum = "cluster"
	DescribePlacementGroupsResultPlacementGroupsStrategyEnumSpread    DescribePlacementGroupsResultPlacementGroupsStrategyEnum = "spread"
	DescribePlacementGroupsResultPlacementGroupsStrategyEnumPartition DescribePlacementGroupsResultPlacementGroupsStrategyEnum = "partition"
)

func (e *DescribePlacementGroupsResultPlacementGroupsStrategyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cluster":
		fallthrough
	case "spread":
		fallthrough
	case "partition":
		*e = DescribePlacementGroupsResultPlacementGroupsStrategyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribePlacementGroupsResultPlacementGroupsStrategyEnum: %s", s)
	}
}

// DescribePlacementGroupsResultPlacementGroupsTags - Describes a tag.
type DescribePlacementGroupsResultPlacementGroupsTags struct {
	Key   *string
	Value *string
}

// DescribePlacementGroupsResultPlacementGroups - Describes a placement group.
type DescribePlacementGroupsResultPlacementGroups struct {
	GroupArn       *string
	GroupID        *string
	GroupName      *string
	PartitionCount *int64
	SpreadLevel    *DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum
	State          *DescribePlacementGroupsResultPlacementGroupsStateEnum
	Strategy       *DescribePlacementGroupsResultPlacementGroupsStrategyEnum
	Tags           []DescribePlacementGroupsResultPlacementGroupsTags
}

// DescribePlacementGroupsResult - Success
type DescribePlacementGroupsResult struct {
	PlacementGroups []DescribePlacementGroupsResultPlacementGroups
}
