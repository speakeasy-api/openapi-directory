"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import placeholder as shared_placeholder
from ..shared import shapeproperties as shared_shapeproperties
from ..shared import textcontent as shared_textcontent
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ShapeShapeTypeEnum(str, Enum):
    r"""The type of the shape."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    TEXT_BOX = 'TEXT_BOX'
    RECTANGLE = 'RECTANGLE'
    ROUND_RECTANGLE = 'ROUND_RECTANGLE'
    ELLIPSE = 'ELLIPSE'
    ARC = 'ARC'
    BENT_ARROW = 'BENT_ARROW'
    BENT_UP_ARROW = 'BENT_UP_ARROW'
    BEVEL = 'BEVEL'
    BLOCK_ARC = 'BLOCK_ARC'
    BRACE_PAIR = 'BRACE_PAIR'
    BRACKET_PAIR = 'BRACKET_PAIR'
    CAN = 'CAN'
    CHEVRON = 'CHEVRON'
    CHORD = 'CHORD'
    CLOUD = 'CLOUD'
    CORNER = 'CORNER'
    CUBE = 'CUBE'
    CURVED_DOWN_ARROW = 'CURVED_DOWN_ARROW'
    CURVED_LEFT_ARROW = 'CURVED_LEFT_ARROW'
    CURVED_RIGHT_ARROW = 'CURVED_RIGHT_ARROW'
    CURVED_UP_ARROW = 'CURVED_UP_ARROW'
    DECAGON = 'DECAGON'
    DIAGONAL_STRIPE = 'DIAGONAL_STRIPE'
    DIAMOND = 'DIAMOND'
    DODECAGON = 'DODECAGON'
    DONUT = 'DONUT'
    DOUBLE_WAVE = 'DOUBLE_WAVE'
    DOWN_ARROW = 'DOWN_ARROW'
    DOWN_ARROW_CALLOUT = 'DOWN_ARROW_CALLOUT'
    FOLDED_CORNER = 'FOLDED_CORNER'
    FRAME = 'FRAME'
    HALF_FRAME = 'HALF_FRAME'
    HEART = 'HEART'
    HEPTAGON = 'HEPTAGON'
    HEXAGON = 'HEXAGON'
    HOME_PLATE = 'HOME_PLATE'
    HORIZONTAL_SCROLL = 'HORIZONTAL_SCROLL'
    IRREGULAR_SEAL_1 = 'IRREGULAR_SEAL_1'
    IRREGULAR_SEAL_2 = 'IRREGULAR_SEAL_2'
    LEFT_ARROW = 'LEFT_ARROW'
    LEFT_ARROW_CALLOUT = 'LEFT_ARROW_CALLOUT'
    LEFT_BRACE = 'LEFT_BRACE'
    LEFT_BRACKET = 'LEFT_BRACKET'
    LEFT_RIGHT_ARROW = 'LEFT_RIGHT_ARROW'
    LEFT_RIGHT_ARROW_CALLOUT = 'LEFT_RIGHT_ARROW_CALLOUT'
    LEFT_RIGHT_UP_ARROW = 'LEFT_RIGHT_UP_ARROW'
    LEFT_UP_ARROW = 'LEFT_UP_ARROW'
    LIGHTNING_BOLT = 'LIGHTNING_BOLT'
    MATH_DIVIDE = 'MATH_DIVIDE'
    MATH_EQUAL = 'MATH_EQUAL'
    MATH_MINUS = 'MATH_MINUS'
    MATH_MULTIPLY = 'MATH_MULTIPLY'
    MATH_NOT_EQUAL = 'MATH_NOT_EQUAL'
    MATH_PLUS = 'MATH_PLUS'
    MOON = 'MOON'
    NO_SMOKING = 'NO_SMOKING'
    NOTCHED_RIGHT_ARROW = 'NOTCHED_RIGHT_ARROW'
    OCTAGON = 'OCTAGON'
    PARALLELOGRAM = 'PARALLELOGRAM'
    PENTAGON = 'PENTAGON'
    PIE = 'PIE'
    PLAQUE = 'PLAQUE'
    PLUS = 'PLUS'
    QUAD_ARROW = 'QUAD_ARROW'
    QUAD_ARROW_CALLOUT = 'QUAD_ARROW_CALLOUT'
    RIBBON = 'RIBBON'
    RIBBON_2 = 'RIBBON_2'
    RIGHT_ARROW = 'RIGHT_ARROW'
    RIGHT_ARROW_CALLOUT = 'RIGHT_ARROW_CALLOUT'
    RIGHT_BRACE = 'RIGHT_BRACE'
    RIGHT_BRACKET = 'RIGHT_BRACKET'
    ROUND_1_RECTANGLE = 'ROUND_1_RECTANGLE'
    ROUND_2_DIAGONAL_RECTANGLE = 'ROUND_2_DIAGONAL_RECTANGLE'
    ROUND_2_SAME_RECTANGLE = 'ROUND_2_SAME_RECTANGLE'
    RIGHT_TRIANGLE = 'RIGHT_TRIANGLE'
    SMILEY_FACE = 'SMILEY_FACE'
    SNIP_1_RECTANGLE = 'SNIP_1_RECTANGLE'
    SNIP_2_DIAGONAL_RECTANGLE = 'SNIP_2_DIAGONAL_RECTANGLE'
    SNIP_2_SAME_RECTANGLE = 'SNIP_2_SAME_RECTANGLE'
    SNIP_ROUND_RECTANGLE = 'SNIP_ROUND_RECTANGLE'
    STAR_10 = 'STAR_10'
    STAR_12 = 'STAR_12'
    STAR_16 = 'STAR_16'
    STAR_24 = 'STAR_24'
    STAR_32 = 'STAR_32'
    STAR_4 = 'STAR_4'
    STAR_5 = 'STAR_5'
    STAR_6 = 'STAR_6'
    STAR_7 = 'STAR_7'
    STAR_8 = 'STAR_8'
    STRIPED_RIGHT_ARROW = 'STRIPED_RIGHT_ARROW'
    SUN = 'SUN'
    TRAPEZOID = 'TRAPEZOID'
    TRIANGLE = 'TRIANGLE'
    UP_ARROW = 'UP_ARROW'
    UP_ARROW_CALLOUT = 'UP_ARROW_CALLOUT'
    UP_DOWN_ARROW = 'UP_DOWN_ARROW'
    UTURN_ARROW = 'UTURN_ARROW'
    VERTICAL_SCROLL = 'VERTICAL_SCROLL'
    WAVE = 'WAVE'
    WEDGE_ELLIPSE_CALLOUT = 'WEDGE_ELLIPSE_CALLOUT'
    WEDGE_RECTANGLE_CALLOUT = 'WEDGE_RECTANGLE_CALLOUT'
    WEDGE_ROUND_RECTANGLE_CALLOUT = 'WEDGE_ROUND_RECTANGLE_CALLOUT'
    FLOW_CHART_ALTERNATE_PROCESS = 'FLOW_CHART_ALTERNATE_PROCESS'
    FLOW_CHART_COLLATE = 'FLOW_CHART_COLLATE'
    FLOW_CHART_CONNECTOR = 'FLOW_CHART_CONNECTOR'
    FLOW_CHART_DECISION = 'FLOW_CHART_DECISION'
    FLOW_CHART_DELAY = 'FLOW_CHART_DELAY'
    FLOW_CHART_DISPLAY = 'FLOW_CHART_DISPLAY'
    FLOW_CHART_DOCUMENT = 'FLOW_CHART_DOCUMENT'
    FLOW_CHART_EXTRACT = 'FLOW_CHART_EXTRACT'
    FLOW_CHART_INPUT_OUTPUT = 'FLOW_CHART_INPUT_OUTPUT'
    FLOW_CHART_INTERNAL_STORAGE = 'FLOW_CHART_INTERNAL_STORAGE'
    FLOW_CHART_MAGNETIC_DISK = 'FLOW_CHART_MAGNETIC_DISK'
    FLOW_CHART_MAGNETIC_DRUM = 'FLOW_CHART_MAGNETIC_DRUM'
    FLOW_CHART_MAGNETIC_TAPE = 'FLOW_CHART_MAGNETIC_TAPE'
    FLOW_CHART_MANUAL_INPUT = 'FLOW_CHART_MANUAL_INPUT'
    FLOW_CHART_MANUAL_OPERATION = 'FLOW_CHART_MANUAL_OPERATION'
    FLOW_CHART_MERGE = 'FLOW_CHART_MERGE'
    FLOW_CHART_MULTIDOCUMENT = 'FLOW_CHART_MULTIDOCUMENT'
    FLOW_CHART_OFFLINE_STORAGE = 'FLOW_CHART_OFFLINE_STORAGE'
    FLOW_CHART_OFFPAGE_CONNECTOR = 'FLOW_CHART_OFFPAGE_CONNECTOR'
    FLOW_CHART_ONLINE_STORAGE = 'FLOW_CHART_ONLINE_STORAGE'
    FLOW_CHART_OR = 'FLOW_CHART_OR'
    FLOW_CHART_PREDEFINED_PROCESS = 'FLOW_CHART_PREDEFINED_PROCESS'
    FLOW_CHART_PREPARATION = 'FLOW_CHART_PREPARATION'
    FLOW_CHART_PROCESS = 'FLOW_CHART_PROCESS'
    FLOW_CHART_PUNCHED_CARD = 'FLOW_CHART_PUNCHED_CARD'
    FLOW_CHART_PUNCHED_TAPE = 'FLOW_CHART_PUNCHED_TAPE'
    FLOW_CHART_SORT = 'FLOW_CHART_SORT'
    FLOW_CHART_SUMMING_JUNCTION = 'FLOW_CHART_SUMMING_JUNCTION'
    FLOW_CHART_TERMINATOR = 'FLOW_CHART_TERMINATOR'
    ARROW_EAST = 'ARROW_EAST'
    ARROW_NORTH_EAST = 'ARROW_NORTH_EAST'
    ARROW_NORTH = 'ARROW_NORTH'
    SPEECH = 'SPEECH'
    STARBURST = 'STARBURST'
    TEARDROP = 'TEARDROP'
    ELLIPSE_RIBBON = 'ELLIPSE_RIBBON'
    ELLIPSE_RIBBON_2 = 'ELLIPSE_RIBBON_2'
    CLOUD_CALLOUT = 'CLOUD_CALLOUT'
    CUSTOM = 'CUSTOM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Shape:
    r"""A PageElement kind representing a generic shape that does not have a more specific classification."""
    
    placeholder: Optional[shared_placeholder.Placeholder] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('placeholder'), 'exclude': lambda f: f is None }})
    r"""The placeholder information that uniquely identifies a placeholder shape."""  
    shape_properties: Optional[shared_shapeproperties.ShapeProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shapeProperties'), 'exclude': lambda f: f is None }})
    r"""The properties of a Shape. If the shape is a placeholder shape as determined by the placeholder field, then these properties may be inherited from a parent placeholder shape. Determining the rendered value of the property depends on the corresponding property_state field value. Any text autofit settings on the shape are automatically deactivated by requests that can impact how text fits in the shape."""  
    shape_type: Optional[ShapeShapeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shapeType'), 'exclude': lambda f: f is None }})
    r"""The type of the shape."""  
    text: Optional[shared_textcontent.TextContent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""The general text content. The text must reside in a compatible shape (e.g. text box or rectangle) or a table cell in a page."""  
    