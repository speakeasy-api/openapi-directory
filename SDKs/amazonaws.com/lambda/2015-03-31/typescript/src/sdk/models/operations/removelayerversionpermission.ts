/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class RemoveLayerVersionPermissionRequest extends SpeakeasyBase {
  /**
   * The name or Amazon Resource Name (ARN) of the layer.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=LayerName",
  })
  layerName: string;

  /**
   * Only update the policy if the revision ID matches the ID specified. Use this option to avoid modifying a policy that has changed since you last read it.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RevisionId",
  })
  revisionId?: string;

  /**
   * The identifier that was specified when the statement was added.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=StatementId",
  })
  statementId: string;

  /**
   * The version number.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=VersionNumber",
  })
  versionNumber: number;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class RemoveLayerVersionPermissionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InvalidParameterValueException
   */
  @SpeakeasyMetadata()
  invalidParameterValueException?: any;

  /**
   * PreconditionFailedException
   */
  @SpeakeasyMetadata()
  preconditionFailedException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceException
   */
  @SpeakeasyMetadata()
  serviceException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;
}
