// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateAvailabilityOptionsActionEnum
type GETUpdateAvailabilityOptionsActionEnum string

const (
	GETUpdateAvailabilityOptionsActionEnumUpdateAvailabilityOptions GETUpdateAvailabilityOptionsActionEnum = "UpdateAvailabilityOptions"
)

func (e GETUpdateAvailabilityOptionsActionEnum) ToPointer() *GETUpdateAvailabilityOptionsActionEnum {
	return &e
}

func (e *GETUpdateAvailabilityOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UpdateAvailabilityOptions":
		*e = GETUpdateAvailabilityOptionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateAvailabilityOptionsActionEnum: %v", v)
	}
}

// GETUpdateAvailabilityOptionsVersionEnum
type GETUpdateAvailabilityOptionsVersionEnum string

const (
	GETUpdateAvailabilityOptionsVersionEnumTwoThousandAndThirteen0101 GETUpdateAvailabilityOptionsVersionEnum = "2013-01-01"
)

func (e GETUpdateAvailabilityOptionsVersionEnum) ToPointer() *GETUpdateAvailabilityOptionsVersionEnum {
	return &e
}

func (e *GETUpdateAvailabilityOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = GETUpdateAvailabilityOptionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateAvailabilityOptionsVersionEnum: %v", v)
	}
}

type GETUpdateAvailabilityOptionsRequest struct {
	Action     GETUpdateAvailabilityOptionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                                 `queryParam:"style=form,explode=true,name=DomainName"`
	// You expand an existing search domain to a second Availability Zone by setting the Multi-AZ option to true. Similarly, you can turn off the Multi-AZ option to downgrade the domain to a single Availability Zone by setting the Multi-AZ option to <code>false</code>.
	MultiAZ           bool                                    `queryParam:"style=form,explode=true,name=MultiAZ"`
	Version           GETUpdateAvailabilityOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateAvailabilityOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
