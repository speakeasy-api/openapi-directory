"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetOrganizationSensorReadingsHistoryResponse = exports.GetOrganizationSensorReadingsHistory200ApplicationJSON = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONWater = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONPm25 = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONNoise = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONDoor = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONButton = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONButtonPressTypeEnum = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONBattery = exports.GetOrganizationSensorReadingsHistoryRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetOrganizationSensorReadingsHistoryRequest = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistoryRequest, _super);
    function GetOrganizationSensorReadingsHistoryRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=endingBefore",
        }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "endingBefore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=metrics",
        }),
        __metadata("design:type", Array)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "metrics", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=networkIds",
        }),
        __metadata("design:type", Array)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "networkIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=organizationId",
        }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "organizationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=perPage",
        }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "perPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=serials",
        }),
        __metadata("design:type", Array)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "serials", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=startingAfter",
        }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "startingAfter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=t0" }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "t0", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=t1" }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "t1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=timespan",
        }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistoryRequest.prototype, "timespan", void 0);
    return GetOrganizationSensorReadingsHistoryRequest;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistoryRequest = GetOrganizationSensorReadingsHistoryRequest;
/**
 * Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONBattery = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONBattery, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONBattery() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "percentage" }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONBattery.prototype, "percentage", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONBattery;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONBattery = GetOrganizationSensorReadingsHistory200ApplicationJSONBattery;
/**
 * Type of button press that occurred.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONButtonPressTypeEnum;
(function (GetOrganizationSensorReadingsHistory200ApplicationJSONButtonPressTypeEnum) {
    GetOrganizationSensorReadingsHistory200ApplicationJSONButtonPressTypeEnum["Long"] = "long";
    GetOrganizationSensorReadingsHistory200ApplicationJSONButtonPressTypeEnum["Short"] = "short";
})(GetOrganizationSensorReadingsHistory200ApplicationJSONButtonPressTypeEnum = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONButtonPressTypeEnum || (exports.GetOrganizationSensorReadingsHistory200ApplicationJSONButtonPressTypeEnum = {}));
/**
 * Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONButton = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONButton, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONButton() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pressType" }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONButton.prototype, "pressType", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONButton;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONButton = GetOrganizationSensorReadingsHistory200ApplicationJSONButton;
/**
 * Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONDoor = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONDoor, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONDoor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "open" }),
        __metadata("design:type", Boolean)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONDoor.prototype, "open", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONDoor;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONDoor = GetOrganizationSensorReadingsHistory200ApplicationJSONDoor;
/**
 * Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relativePercentage" }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity.prototype, "relativePercentage", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity = GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity;
/**
 * Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "score" }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality.prototype, "score", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality = GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality;
/**
 * Type of sensor reading.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum;
(function (GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum) {
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Battery"] = "battery";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Button"] = "button";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Door"] = "door";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Humidity"] = "humidity";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["IndoorAirQuality"] = "indoorAirQuality";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Noise"] = "noise";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Pm25"] = "pm25";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Temperature"] = "temperature";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Tvoc"] = "tvoc";
    GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum["Water"] = "water";
})(GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum = exports.GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum || (exports.GetOrganizationSensorReadingsHistory200ApplicationJSONMetricEnum = {}));
/**
 * Network to which the sensor belongs.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork.prototype, "name", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork = GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork;
/**
 * Ambient noise reading.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "level" }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient.prototype, "level", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient = GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient;
/**
 * Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONNoise = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONNoise, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONNoise() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ambient" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONNoiseAmbient)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONNoise.prototype, "ambient", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONNoise;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONNoise = GetOrganizationSensorReadingsHistory200ApplicationJSONNoise;
/**
 * Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONPm25 = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONPm25, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONPm25() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "concentration" }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONPm25.prototype, "concentration", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONPm25;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONPm25 = GetOrganizationSensorReadingsHistory200ApplicationJSONPm25;
/**
 * Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "celsius" }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature.prototype, "celsius", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fahrenheit" }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature.prototype, "fahrenheit", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature = GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature;
/**
 * Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "concentration" }),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc.prototype, "concentration", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc = GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc;
/**
 * Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
 */
var GetOrganizationSensorReadingsHistory200ApplicationJSONWater = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSONWater, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSONWater() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "present" }),
        __metadata("design:type", Boolean)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSONWater.prototype, "present", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSONWater;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSONWater = GetOrganizationSensorReadingsHistory200ApplicationJSONWater;
var GetOrganizationSensorReadingsHistory200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistory200ApplicationJSON, _super);
    function GetOrganizationSensorReadingsHistory200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "battery" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONBattery; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONBattery)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "battery", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "button" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONButton; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONButton)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "button", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "door" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONDoor; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONDoor)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "door", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "humidity" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONHumidity)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "humidity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "indoorAirQuality" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONIndoorAirQuality)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "indoorAirQuality", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metric" }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "metric", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONNetwork)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "network", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "noise" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONNoise; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONNoise)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "noise", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pm25" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONPm25; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONPm25)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "pm25", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serial" }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "serial", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "temperature" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONTemperature)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "temperature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ts" }),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "ts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tvoc" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONTvoc)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "tvoc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "water" }),
        (0, class_transformer_1.Type)(function () { return GetOrganizationSensorReadingsHistory200ApplicationJSONWater; }),
        __metadata("design:type", GetOrganizationSensorReadingsHistory200ApplicationJSONWater)
    ], GetOrganizationSensorReadingsHistory200ApplicationJSON.prototype, "water", void 0);
    return GetOrganizationSensorReadingsHistory200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistory200ApplicationJSON = GetOrganizationSensorReadingsHistory200ApplicationJSON;
var GetOrganizationSensorReadingsHistoryResponse = /** @class */ (function (_super) {
    __extends(GetOrganizationSensorReadingsHistoryResponse, _super);
    function GetOrganizationSensorReadingsHistoryResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetOrganizationSensorReadingsHistoryResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetOrganizationSensorReadingsHistoryResponse.prototype, "headers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetOrganizationSensorReadingsHistoryResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetOrganizationSensorReadingsHistoryResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetOrganizationSensorReadingsHistory200ApplicationJSON,
        }),
        __metadata("design:type", Array)
    ], GetOrganizationSensorReadingsHistoryResponse.prototype, "getOrganizationSensorReadingsHistory200ApplicationJSONObjects", void 0);
    return GetOrganizationSensorReadingsHistoryResponse;
}(utils_1.SpeakeasyBase));
exports.GetOrganizationSensorReadingsHistoryResponse = GetOrganizationSensorReadingsHistoryResponse;
