/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompressionTypeEnum } from "./compressiontypeenum";
import { TrainingInputModeEnum } from "./traininginputmodeenum";
import { Expose } from "class-transformer";

/**
 * Defines a named input source, called a channel, to be used by an algorithm.
 */
export class ChannelSpecification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsRequired" })
  isRequired?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedCompressionTypes" })
  supportedCompressionTypes?: CompressionTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedContentTypes" })
  supportedContentTypes: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedInputModes" })
  supportedInputModes: TrainingInputModeEnum[];
}
