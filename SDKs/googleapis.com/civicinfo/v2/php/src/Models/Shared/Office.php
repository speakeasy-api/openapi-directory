<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Office - Information about an Office held by one or more Officials.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Office
{
    /**
     * The OCD ID of the division with which this office is associated.
     * 
     * @var ?string $divisionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('divisionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $divisionId = null;
    
    /**
     * The levels of government of which this office is part. There may be more than one in cases where a jurisdiction effectively acts at two different levels of government; for example, the mayor of the District of Columbia acts at "locality" level, but also effectively at both "administrative-area-2" and "administrative-area-1".
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OfficeLevelsEnum> $levels
     */
	#[\JMS\Serializer\Annotation\SerializedName('levels')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\OfficeLevelsEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $levels = null;
    
    /**
     * The human-readable name of the office.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * List of indices in the officials array of people who presently hold this office.
     * 
     * @var ?array<int> $officialIndices
     */
	#[\JMS\Serializer\Annotation\SerializedName('officialIndices')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $officialIndices = null;
    
    /**
     * The roles which this office fulfills. Roles are not meant to be exhaustive, or to exactly specify the entire set of responsibilities of a given office, but are meant to be rough categories that are useful for general selection from or sorting of a list of offices.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OfficeRolesEnum> $roles
     */
	#[\JMS\Serializer\Annotation\SerializedName('roles')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\OfficeRolesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $roles = null;
    
    /**
     * A list of sources for this office. If multiple sources are listed, the data has been aggregated from those sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Source> $sources
     */
	#[\JMS\Serializer\Annotation\SerializedName('sources')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Source>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sources = null;
    
	public function __construct()
	{
		$this->divisionId = null;
		$this->levels = null;
		$this->name = null;
		$this->officialIndices = null;
		$this->roles = null;
		$this->sources = null;
	}
}
