// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VerificationErrorCapabilitiesEnum string

const (
	VerificationErrorCapabilitiesEnumAcceptExternalFunding                             VerificationErrorCapabilitiesEnum = "acceptExternalFunding"
	VerificationErrorCapabilitiesEnumAcceptPspFunding                                  VerificationErrorCapabilitiesEnum = "acceptPspFunding"
	VerificationErrorCapabilitiesEnumAcceptTransactionInRestrictedCountries            VerificationErrorCapabilitiesEnum = "acceptTransactionInRestrictedCountries"
	VerificationErrorCapabilitiesEnumAcceptTransactionInRestrictedCountriesCommercial  VerificationErrorCapabilitiesEnum = "acceptTransactionInRestrictedCountriesCommercial"
	VerificationErrorCapabilitiesEnumAcceptTransactionInRestrictedCountriesConsumer    VerificationErrorCapabilitiesEnum = "acceptTransactionInRestrictedCountriesConsumer"
	VerificationErrorCapabilitiesEnumAcceptTransactionInRestrictedIndustries           VerificationErrorCapabilitiesEnum = "acceptTransactionInRestrictedIndustries"
	VerificationErrorCapabilitiesEnumAcceptTransactionInRestrictedIndustriesCommercial VerificationErrorCapabilitiesEnum = "acceptTransactionInRestrictedIndustriesCommercial"
	VerificationErrorCapabilitiesEnumAcceptTransactionInRestrictedIndustriesConsumer   VerificationErrorCapabilitiesEnum = "acceptTransactionInRestrictedIndustriesConsumer"
	VerificationErrorCapabilitiesEnumAcquiring                                         VerificationErrorCapabilitiesEnum = "acquiring"
	VerificationErrorCapabilitiesEnumAtmWithdrawal                                     VerificationErrorCapabilitiesEnum = "atmWithdrawal"
	VerificationErrorCapabilitiesEnumAtmWithdrawalCommercial                           VerificationErrorCapabilitiesEnum = "atmWithdrawalCommercial"
	VerificationErrorCapabilitiesEnumAtmWithdrawalConsumer                             VerificationErrorCapabilitiesEnum = "atmWithdrawalConsumer"
	VerificationErrorCapabilitiesEnumAtmWithdrawalInRestrictedCountries                VerificationErrorCapabilitiesEnum = "atmWithdrawalInRestrictedCountries"
	VerificationErrorCapabilitiesEnumAtmWithdrawalInRestrictedCountriesCommercial      VerificationErrorCapabilitiesEnum = "atmWithdrawalInRestrictedCountriesCommercial"
	VerificationErrorCapabilitiesEnumAtmWithdrawalInRestrictedCountriesConsumer        VerificationErrorCapabilitiesEnum = "atmWithdrawalInRestrictedCountriesConsumer"
	VerificationErrorCapabilitiesEnumAuthorisedPaymentInstrumentUser                   VerificationErrorCapabilitiesEnum = "authorisedPaymentInstrumentUser"
	VerificationErrorCapabilitiesEnumGetGrantOffers                                    VerificationErrorCapabilitiesEnum = "getGrantOffers"
	VerificationErrorCapabilitiesEnumIssueBankAccount                                  VerificationErrorCapabilitiesEnum = "issueBankAccount"
	VerificationErrorCapabilitiesEnumIssueCard                                         VerificationErrorCapabilitiesEnum = "issueCard"
	VerificationErrorCapabilitiesEnumIssueCardCommercial                               VerificationErrorCapabilitiesEnum = "issueCardCommercial"
	VerificationErrorCapabilitiesEnumIssueCardConsumer                                 VerificationErrorCapabilitiesEnum = "issueCardConsumer"
	VerificationErrorCapabilitiesEnumLocalAcceptance                                   VerificationErrorCapabilitiesEnum = "localAcceptance"
	VerificationErrorCapabilitiesEnumPayout                                            VerificationErrorCapabilitiesEnum = "payout"
	VerificationErrorCapabilitiesEnumPayoutToTransferInstrument                        VerificationErrorCapabilitiesEnum = "payoutToTransferInstrument"
	VerificationErrorCapabilitiesEnumProcessing                                        VerificationErrorCapabilitiesEnum = "processing"
	VerificationErrorCapabilitiesEnumReceiveFromBalanceAccount                         VerificationErrorCapabilitiesEnum = "receiveFromBalanceAccount"
	VerificationErrorCapabilitiesEnumReceiveFromPlatformPayments                       VerificationErrorCapabilitiesEnum = "receiveFromPlatformPayments"
	VerificationErrorCapabilitiesEnumReceiveFromThirdParty                             VerificationErrorCapabilitiesEnum = "receiveFromThirdParty"
	VerificationErrorCapabilitiesEnumReceiveFromTransferInstrument                     VerificationErrorCapabilitiesEnum = "receiveFromTransferInstrument"
	VerificationErrorCapabilitiesEnumReceiveGrants                                     VerificationErrorCapabilitiesEnum = "receiveGrants"
	VerificationErrorCapabilitiesEnumReceivePayments                                   VerificationErrorCapabilitiesEnum = "receivePayments"
	VerificationErrorCapabilitiesEnumSendToBalanceAccount                              VerificationErrorCapabilitiesEnum = "sendToBalanceAccount"
	VerificationErrorCapabilitiesEnumSendToThirdParty                                  VerificationErrorCapabilitiesEnum = "sendToThirdParty"
	VerificationErrorCapabilitiesEnumSendToTransferInstrument                          VerificationErrorCapabilitiesEnum = "sendToTransferInstrument"
	VerificationErrorCapabilitiesEnumThirdPartyFunding                                 VerificationErrorCapabilitiesEnum = "thirdPartyFunding"
	VerificationErrorCapabilitiesEnumUseCard                                           VerificationErrorCapabilitiesEnum = "useCard"
	VerificationErrorCapabilitiesEnumUseCardCommercial                                 VerificationErrorCapabilitiesEnum = "useCardCommercial"
	VerificationErrorCapabilitiesEnumUseCardConsumer                                   VerificationErrorCapabilitiesEnum = "useCardConsumer"
	VerificationErrorCapabilitiesEnumUseCardInRestrictedCountries                      VerificationErrorCapabilitiesEnum = "useCardInRestrictedCountries"
	VerificationErrorCapabilitiesEnumUseCardInRestrictedCountriesCommercial            VerificationErrorCapabilitiesEnum = "useCardInRestrictedCountriesCommercial"
	VerificationErrorCapabilitiesEnumUseCardInRestrictedCountriesConsumer              VerificationErrorCapabilitiesEnum = "useCardInRestrictedCountriesConsumer"
	VerificationErrorCapabilitiesEnumUseCardInRestrictedIndustries                     VerificationErrorCapabilitiesEnum = "useCardInRestrictedIndustries"
	VerificationErrorCapabilitiesEnumUseCardInRestrictedIndustriesCommercial           VerificationErrorCapabilitiesEnum = "useCardInRestrictedIndustriesCommercial"
	VerificationErrorCapabilitiesEnumUseCardInRestrictedIndustriesConsumer             VerificationErrorCapabilitiesEnum = "useCardInRestrictedIndustriesConsumer"
	VerificationErrorCapabilitiesEnumWithdrawFromAtm                                   VerificationErrorCapabilitiesEnum = "withdrawFromAtm"
	VerificationErrorCapabilitiesEnumWithdrawFromAtmCommercial                         VerificationErrorCapabilitiesEnum = "withdrawFromAtmCommercial"
	VerificationErrorCapabilitiesEnumWithdrawFromAtmConsumer                           VerificationErrorCapabilitiesEnum = "withdrawFromAtmConsumer"
	VerificationErrorCapabilitiesEnumWithdrawFromAtmInRestrictedCountries              VerificationErrorCapabilitiesEnum = "withdrawFromAtmInRestrictedCountries"
	VerificationErrorCapabilitiesEnumWithdrawFromAtmInRestrictedCountriesCommercial    VerificationErrorCapabilitiesEnum = "withdrawFromAtmInRestrictedCountriesCommercial"
	VerificationErrorCapabilitiesEnumWithdrawFromAtmInRestrictedCountriesConsumer      VerificationErrorCapabilitiesEnum = "withdrawFromAtmInRestrictedCountriesConsumer"
)

func (e VerificationErrorCapabilitiesEnum) ToPointer() *VerificationErrorCapabilitiesEnum {
	return &e
}

func (e *VerificationErrorCapabilitiesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "acceptExternalFunding":
		fallthrough
	case "acceptPspFunding":
		fallthrough
	case "acceptTransactionInRestrictedCountries":
		fallthrough
	case "acceptTransactionInRestrictedCountriesCommercial":
		fallthrough
	case "acceptTransactionInRestrictedCountriesConsumer":
		fallthrough
	case "acceptTransactionInRestrictedIndustries":
		fallthrough
	case "acceptTransactionInRestrictedIndustriesCommercial":
		fallthrough
	case "acceptTransactionInRestrictedIndustriesConsumer":
		fallthrough
	case "acquiring":
		fallthrough
	case "atmWithdrawal":
		fallthrough
	case "atmWithdrawalCommercial":
		fallthrough
	case "atmWithdrawalConsumer":
		fallthrough
	case "atmWithdrawalInRestrictedCountries":
		fallthrough
	case "atmWithdrawalInRestrictedCountriesCommercial":
		fallthrough
	case "atmWithdrawalInRestrictedCountriesConsumer":
		fallthrough
	case "authorisedPaymentInstrumentUser":
		fallthrough
	case "getGrantOffers":
		fallthrough
	case "issueBankAccount":
		fallthrough
	case "issueCard":
		fallthrough
	case "issueCardCommercial":
		fallthrough
	case "issueCardConsumer":
		fallthrough
	case "localAcceptance":
		fallthrough
	case "payout":
		fallthrough
	case "payoutToTransferInstrument":
		fallthrough
	case "processing":
		fallthrough
	case "receiveFromBalanceAccount":
		fallthrough
	case "receiveFromPlatformPayments":
		fallthrough
	case "receiveFromThirdParty":
		fallthrough
	case "receiveFromTransferInstrument":
		fallthrough
	case "receiveGrants":
		fallthrough
	case "receivePayments":
		fallthrough
	case "sendToBalanceAccount":
		fallthrough
	case "sendToThirdParty":
		fallthrough
	case "sendToTransferInstrument":
		fallthrough
	case "thirdPartyFunding":
		fallthrough
	case "useCard":
		fallthrough
	case "useCardCommercial":
		fallthrough
	case "useCardConsumer":
		fallthrough
	case "useCardInRestrictedCountries":
		fallthrough
	case "useCardInRestrictedCountriesCommercial":
		fallthrough
	case "useCardInRestrictedCountriesConsumer":
		fallthrough
	case "useCardInRestrictedIndustries":
		fallthrough
	case "useCardInRestrictedIndustriesCommercial":
		fallthrough
	case "useCardInRestrictedIndustriesConsumer":
		fallthrough
	case "withdrawFromAtm":
		fallthrough
	case "withdrawFromAtmCommercial":
		fallthrough
	case "withdrawFromAtmConsumer":
		fallthrough
	case "withdrawFromAtmInRestrictedCountries":
		fallthrough
	case "withdrawFromAtmInRestrictedCountriesCommercial":
		fallthrough
	case "withdrawFromAtmInRestrictedCountriesConsumer":
		*e = VerificationErrorCapabilitiesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationErrorCapabilitiesEnum: %v", v)
	}
}

// VerificationErrorTypeEnum - The type of error.
type VerificationErrorTypeEnum string

const (
	VerificationErrorTypeEnumDataMissing   VerificationErrorTypeEnum = "dataMissing"
	VerificationErrorTypeEnumInvalidInput  VerificationErrorTypeEnum = "invalidInput"
	VerificationErrorTypeEnumPendingStatus VerificationErrorTypeEnum = "pendingStatus"
)

func (e VerificationErrorTypeEnum) ToPointer() *VerificationErrorTypeEnum {
	return &e
}

func (e *VerificationErrorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dataMissing":
		fallthrough
	case "invalidInput":
		fallthrough
	case "pendingStatus":
		*e = VerificationErrorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationErrorTypeEnum: %v", v)
	}
}

type VerificationError struct {
	// Contains key-value pairs that specify the actions that the legal entity can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
	Capabilities []VerificationErrorCapabilitiesEnum `json:"capabilities,omitempty"`
	// The general error code.
	Code *string `json:"code,omitempty"`
	// The general error message.
	Message *string `json:"message,omitempty"`
	// An object containing possible solutions to fix a verification error.
	RemediatingActions []RemediatingAction `json:"remediatingActions,omitempty"`
	// An array containing more granular information about the cause of the verification error.
	SubErrors []VerificationErrorRecursive `json:"subErrors,omitempty"`
	// The type of error.
	Type *VerificationErrorTypeEnum `json:"type,omitempty"`
}
