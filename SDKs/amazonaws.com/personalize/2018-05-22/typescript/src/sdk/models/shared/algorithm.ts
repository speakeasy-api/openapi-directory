/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlgorithmImage } from "./algorithmimage";
import { DefaultHyperParameterRanges } from "./defaulthyperparameterranges";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a custom algorithm.
 */
export class Algorithm extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "algorithmArn" })
  algorithmArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "algorithmImage" })
  @Type(() => AlgorithmImage)
  algorithmImage?: AlgorithmImage;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultHyperParameterRanges" })
  @Type(() => DefaultHyperParameterRanges)
  defaultHyperParameterRanges?: DefaultHyperParameterRanges;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultHyperParameters" })
  defaultHyperParameters?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultResourceConfig" })
  defaultResourceConfig?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trainingInputMode" })
  trainingInputMode?: string;
}
