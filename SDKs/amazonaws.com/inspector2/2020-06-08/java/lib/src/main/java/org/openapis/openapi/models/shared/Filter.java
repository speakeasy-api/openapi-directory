/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Filter - Details about a filter.
 */
public class Filter {
    @JsonProperty("action")
    public FilterActionEnum action;

    public Filter withAction(FilterActionEnum action) {
        this.action = action;
        return this;
    }
    
    @JsonProperty("arn")
    public String arn;

    public Filter withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public Filter withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("criteria")
    public FilterCriteria criteria;

    public Filter withCriteria(FilterCriteria criteria) {
        this.criteria = criteria;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Filter withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public Filter withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("ownerId")
    public String ownerId;

    public Filter withOwnerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public Filter withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public Filter withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;

    public Filter withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public Filter(@JsonProperty("action") FilterActionEnum action, @JsonProperty("arn") String arn, @JsonProperty("createdAt") OffsetDateTime createdAt, @JsonProperty("criteria") FilterCriteria criteria, @JsonProperty("name") String name, @JsonProperty("ownerId") String ownerId, @JsonProperty("updatedAt") OffsetDateTime updatedAt) {
        this.action = action;
        this.arn = arn;
        this.createdAt = createdAt;
        this.criteria = criteria;
        this.name = name;
        this.ownerId = ownerId;
        this.updatedAt = updatedAt;
  }
}
