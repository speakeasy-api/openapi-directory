// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribePartnersActionEnum
type GETDescribePartnersActionEnum string

const (
	GETDescribePartnersActionEnumDescribePartners GETDescribePartnersActionEnum = "DescribePartners"
)

func (e *GETDescribePartnersActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribePartners":
		*e = GETDescribePartnersActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribePartnersActionEnum: %s", s)
	}
}

// GETDescribePartnersVersionEnum
type GETDescribePartnersVersionEnum string

const (
	GETDescribePartnersVersionEnumTwoThousandAndTwelve1201 GETDescribePartnersVersionEnum = "2012-12-01"
)

func (e *GETDescribePartnersVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETDescribePartnersVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribePartnersVersionEnum: %s", s)
	}
}

type GETDescribePartnersQueryParams struct {
	// The Amazon Web Services account ID that owns the cluster.
	AccountID string                        `queryParam:"style=form,explode=true,name=AccountId"`
	Action    GETDescribePartnersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The cluster identifier of the cluster whose partner integration is being described.
	ClusterIdentifier string `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	// The name of the database whose partner integration is being described. If database name is not specified, then all databases in the cluster are described.
	DatabaseName *string `queryParam:"style=form,explode=true,name=DatabaseName"`
	// The name of the partner that is being described. If partner name is not specified, then all partner integrations are described.
	PartnerName *string                        `queryParam:"style=form,explode=true,name=PartnerName"`
	Version     GETDescribePartnersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribePartnersHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribePartnersRequest struct {
	QueryParams GETDescribePartnersQueryParams
	Headers     GETDescribePartnersHeaders
}

type GETDescribePartnersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
