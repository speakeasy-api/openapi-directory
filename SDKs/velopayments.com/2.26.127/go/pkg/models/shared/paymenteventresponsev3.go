// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// PaymentEventResponseV3EventTypeEnum - The type of the event.
type PaymentEventResponseV3EventTypeEnum string

const (
	PaymentEventResponseV3EventTypeEnumPayoutSubmitted                    PaymentEventResponseV3EventTypeEnum = "PAYOUT_SUBMITTED"
	PaymentEventResponseV3EventTypeEnumPayoutCompleted                    PaymentEventResponseV3EventTypeEnum = "PAYOUT_COMPLETED"
	PaymentEventResponseV3EventTypeEnumPayoutInstructedV3                 PaymentEventResponseV3EventTypeEnum = "PAYOUT_INSTRUCTED_V3"
	PaymentEventResponseV3EventTypeEnumBankPaymentRequested               PaymentEventResponseV3EventTypeEnum = "BANK_PAYMENT_REQUESTED"
	PaymentEventResponseV3EventTypeEnumSourceAmountConfirmed              PaymentEventResponseV3EventTypeEnum = "SOURCE_AMOUNT_CONFIRMED"
	PaymentEventResponseV3EventTypeEnumPaymentSubmitted                   PaymentEventResponseV3EventTypeEnum = "PAYMENT_SUBMITTED"
	PaymentEventResponseV3EventTypeEnumPaymentSubmittedAccepted           PaymentEventResponseV3EventTypeEnum = "PAYMENT_SUBMITTED_ACCEPTED"
	PaymentEventResponseV3EventTypeEnumPaymentSubmittedRejected           PaymentEventResponseV3EventTypeEnum = "PAYMENT_SUBMITTED_REJECTED"
	PaymentEventResponseV3EventTypeEnumPaymentConfirmed                   PaymentEventResponseV3EventTypeEnum = "PAYMENT_CONFIRMED"
	PaymentEventResponseV3EventTypeEnumPaymentAwaitingFunds               PaymentEventResponseV3EventTypeEnum = "PAYMENT_AWAITING_FUNDS"
	PaymentEventResponseV3EventTypeEnumPaymentFunded                      PaymentEventResponseV3EventTypeEnum = "PAYMENT_FUNDED"
	PaymentEventResponseV3EventTypeEnumPaymentUnfunded                    PaymentEventResponseV3EventTypeEnum = "PAYMENT_UNFUNDED"
	PaymentEventResponseV3EventTypeEnumPaymentFailed                      PaymentEventResponseV3EventTypeEnum = "PAYMENT_FAILED"
	PaymentEventResponseV3EventTypeEnumAchSubmittedToOdfi                 PaymentEventResponseV3EventTypeEnum = "ACH_SUBMITTED_TO_ODFI"
	PaymentEventResponseV3EventTypeEnumPaymentAcceptedByRails             PaymentEventResponseV3EventTypeEnum = "PAYMENT_ACCEPTED_BY_RAILS"
	PaymentEventResponseV3EventTypeEnumAchReturnReceived                  PaymentEventResponseV3EventTypeEnum = "ACH_RETURN_RECEIVED"
	PaymentEventResponseV3EventTypeEnumReturnPaymentFundingRequested      PaymentEventResponseV3EventTypeEnum = "RETURN_PAYMENT_FUNDING_REQUESTED"
	PaymentEventResponseV3EventTypeEnumPayoutBatchExecuted                PaymentEventResponseV3EventTypeEnum = "PAYOUT_BATCH_EXECUTED"
	PaymentEventResponseV3EventTypeEnumPayoutBatchQuoteExpired            PaymentEventResponseV3EventTypeEnum = "PAYOUT_BATCH_QUOTE_EXPIRED"
	PaymentEventResponseV3EventTypeEnumPayoutBatchFunded                  PaymentEventResponseV3EventTypeEnum = "PAYOUT_BATCH_FUNDED"
	PaymentEventResponseV3EventTypeEnumPayoutBatchFundsReturnRequest      PaymentEventResponseV3EventTypeEnum = "PAYOUT_BATCH_FUNDS_RETURN_REQUEST"
	PaymentEventResponseV3EventTypeEnumPayoutBatchFundsReturned           PaymentEventResponseV3EventTypeEnum = "PAYOUT_BATCH_FUNDS_RETURNED"
	PaymentEventResponseV3EventTypeEnumPayoutFundsRequest                 PaymentEventResponseV3EventTypeEnum = "PAYOUT_FUNDS_REQUEST"
	PaymentEventResponseV3EventTypeEnumPayoutFundsGranted                 PaymentEventResponseV3EventTypeEnum = "PAYOUT_FUNDS_GRANTED"
	PaymentEventResponseV3EventTypeEnumPayoutFundsDenied                  PaymentEventResponseV3EventTypeEnum = "PAYOUT_FUNDS_DENIED"
	PaymentEventResponseV3EventTypeEnumPayoutBatchQuoted                  PaymentEventResponseV3EventTypeEnum = "PAYOUT_BATCH_QUOTED"
	PaymentEventResponseV3EventTypeEnumPayoutQuoted                       PaymentEventResponseV3EventTypeEnum = "PAYOUT_QUOTED"
	PaymentEventResponseV3EventTypeEnumAchPaymentReturnCancelled          PaymentEventResponseV3EventTypeEnum = "ACH_PAYMENT_RETURN_CANCELLED"
	PaymentEventResponseV3EventTypeEnumReturnPaymentCancellationRequested PaymentEventResponseV3EventTypeEnum = "RETURN_PAYMENT_CANCELLATION_REQUESTED"
	PaymentEventResponseV3EventTypeEnumPayoutWithdrawn                    PaymentEventResponseV3EventTypeEnum = "PAYOUT_WITHDRAWN"
)

func (e *PaymentEventResponseV3EventTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PAYOUT_SUBMITTED":
		fallthrough
	case "PAYOUT_COMPLETED":
		fallthrough
	case "PAYOUT_INSTRUCTED_V3":
		fallthrough
	case "BANK_PAYMENT_REQUESTED":
		fallthrough
	case "SOURCE_AMOUNT_CONFIRMED":
		fallthrough
	case "PAYMENT_SUBMITTED":
		fallthrough
	case "PAYMENT_SUBMITTED_ACCEPTED":
		fallthrough
	case "PAYMENT_SUBMITTED_REJECTED":
		fallthrough
	case "PAYMENT_CONFIRMED":
		fallthrough
	case "PAYMENT_AWAITING_FUNDS":
		fallthrough
	case "PAYMENT_FUNDED":
		fallthrough
	case "PAYMENT_UNFUNDED":
		fallthrough
	case "PAYMENT_FAILED":
		fallthrough
	case "ACH_SUBMITTED_TO_ODFI":
		fallthrough
	case "PAYMENT_ACCEPTED_BY_RAILS":
		fallthrough
	case "ACH_RETURN_RECEIVED":
		fallthrough
	case "RETURN_PAYMENT_FUNDING_REQUESTED":
		fallthrough
	case "PAYOUT_BATCH_EXECUTED":
		fallthrough
	case "PAYOUT_BATCH_QUOTE_EXPIRED":
		fallthrough
	case "PAYOUT_BATCH_FUNDED":
		fallthrough
	case "PAYOUT_BATCH_FUNDS_RETURN_REQUEST":
		fallthrough
	case "PAYOUT_BATCH_FUNDS_RETURNED":
		fallthrough
	case "PAYOUT_FUNDS_REQUEST":
		fallthrough
	case "PAYOUT_FUNDS_GRANTED":
		fallthrough
	case "PAYOUT_FUNDS_DENIED":
		fallthrough
	case "PAYOUT_BATCH_QUOTED":
		fallthrough
	case "PAYOUT_QUOTED":
		fallthrough
	case "ACH_PAYMENT_RETURN_CANCELLED":
		fallthrough
	case "RETURN_PAYMENT_CANCELLATION_REQUESTED":
		fallthrough
	case "PAYOUT_WITHDRAWN":
		*e = PaymentEventResponseV3EventTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentEventResponseV3EventTypeEnum: %s", s)
	}
}

type PaymentEventResponseV3 struct {
	AccountName *string `json:"accountName,omitempty"`
	// The account number attached to the event.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// The date/time at which the event occurred.
	EventDateTime time.Time `json:"eventDateTime"`
	// The id of the event.
	EventID string `json:"eventId"`
	// The type of the event.
	EventType PaymentEventResponseV3EventTypeEnum `json:"eventType"`
	Iban      *string                             `json:"iban,omitempty"`
	// The destination amount exposed by the event.
	PaymentAmount *int64 `json:"paymentAmount,omitempty"`
	// ISO 3 character currency code
	PaymentCurrency *PaymentAuditCurrencyV3Enum `json:"paymentCurrency,omitempty"`
	Principal       *string                     `json:"principal,omitempty"`
	// The routing number attached to the event.
	RoutingNumber *string `json:"routingNumber,omitempty"`
	// The source amount exposed by the event.
	SourceAmount *int64 `json:"sourceAmount,omitempty"`
	// ISO 3 character currency code
	SourceCurrency *PaymentAuditCurrencyV3Enum `json:"sourceCurrency,omitempty"`
}
