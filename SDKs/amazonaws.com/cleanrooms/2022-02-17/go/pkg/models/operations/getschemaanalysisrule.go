// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetSchemaAnalysisRuleTypeEnum - The type of the schema analysis rule to retrieve. Schema analysis rules are uniquely identified by a combination of the collaboration, the schema name, and their type.
type GetSchemaAnalysisRuleTypeEnum string

const (
	GetSchemaAnalysisRuleTypeEnumAggregation GetSchemaAnalysisRuleTypeEnum = "AGGREGATION"
	GetSchemaAnalysisRuleTypeEnumList        GetSchemaAnalysisRuleTypeEnum = "LIST"
)

func (e *GetSchemaAnalysisRuleTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AGGREGATION":
		fallthrough
	case "LIST":
		*e = GetSchemaAnalysisRuleTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSchemaAnalysisRuleTypeEnum: %s", s)
	}
}

type GetSchemaAnalysisRuleRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// A unique identifier for the collaboration that the schema belongs to. Currently accepts a collaboration ID.
	CollaborationIdentifier string `pathParam:"style=simple,explode=false,name=collaborationIdentifier"`
	// The name of the schema to retrieve the analysis rule for.
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// The type of the schema analysis rule to retrieve. Schema analysis rules are uniquely identified by a combination of the collaboration, the schema name, and their type.
	Type GetSchemaAnalysisRuleTypeEnum `pathParam:"style=simple,explode=false,name=type"`
}

type GetSchemaAnalysisRuleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetSchemaAnalysisRuleOutput *shared.GetSchemaAnalysisRuleOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
