/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Refund - Represents a refund processed for a Square transaction.
 */
public class Refund {
    /**
     * Additional recipients (other than the merchant) receiving a portion of this refund.
     * For example, fees assessed on a refund of a purchase by a third party integration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additional_recipients")
    public AdditionalRecipient[] additionalRecipients;

    public Refund withAdditionalRecipients(AdditionalRecipient[] additionalRecipients) {
        this.additionalRecipients = additionalRecipients;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonProperty("amount_money")
    public Money amountMoney;

    public Refund withAmountMoney(Money amountMoney) {
        this.amountMoney = amountMoney;
        return this;
    }
    
    /**
     * The timestamp for when the refund was created, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;

    public Refund withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The refund's unique ID.
     */
    @JsonProperty("id")
    public String id;

    public Refund withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the refund's associated location.
     */
    @JsonProperty("location_id")
    public String locationId;

    public Refund withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processing_fee_money")
    public Money processingFeeMoney;

    public Refund withProcessingFeeMoney(Money processingFeeMoney) {
        this.processingFeeMoney = processingFeeMoney;
        return this;
    }
    
    /**
     * The reason for the refund being issued.
     */
    @JsonProperty("reason")
    public String reason;

    public Refund withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,
     * or `FAILED`).
     */
    @JsonProperty("status")
    public String status;

    public Refund withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The ID of the refunded tender.
     */
    @JsonProperty("tender_id")
    public String tenderId;

    public Refund withTenderId(String tenderId) {
        this.tenderId = tenderId;
        return this;
    }
    
    /**
     * The ID of the transaction that the refunded tender is part of.
     */
    @JsonProperty("transaction_id")
    public String transactionId;

    public Refund withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    public Refund(@JsonProperty("amount_money") Money amountMoney, @JsonProperty("id") String id, @JsonProperty("location_id") String locationId, @JsonProperty("reason") String reason, @JsonProperty("status") String status, @JsonProperty("tender_id") String tenderId, @JsonProperty("transaction_id") String transactionId) {
        this.amountMoney = amountMoney;
        this.id = id;
        this.locationId = locationId;
        this.reason = reason;
        this.status = status;
        this.tenderId = tenderId;
        this.transactionId = transactionId;
  }
}
