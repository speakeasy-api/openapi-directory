"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cookie as shared_cookie
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class LicenseVideoSizeEnum(str, Enum):
    r"""Size of the video being licensed"""
    WEB = 'web'
    SD = 'sd'
    HD = 'hd'
    FOURK = '4k'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LicenseVideo:
    r"""Data required to license a video"""
    
    video_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('video_id') }})
    r"""ID of the video being licensed"""  
    auth_cookie: Optional[shared_cookie.Cookie] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auth_cookie'), 'exclude': lambda f: f is None }})
    r"""Cookie object"""  
    editorial_acknowledgement: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('editorial_acknowledgement'), 'exclude': lambda f: f is None }})
    r"""Whether or not this item is editorial content"""  
    metadata: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder"""  
    price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})
    r"""Retail price amount as a floating-point number in the transaction currency, such as 12.34; only for rev-share partners"""  
    search_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_id'), 'exclude': lambda f: f is None }})
    r"""ID of the search that led to this licensing event"""  
    show_modal: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('show_modal'), 'exclude': lambda f: f is None }})
    r"""(Deprecated)"""  
    size: Optional[LicenseVideoSizeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size'), 'exclude': lambda f: f is None }})
    r"""Size of the video being licensed"""  
    subscription_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscription_id'), 'exclude': lambda f: f is None }})
    r"""ID of the subscription used for this license"""  
    