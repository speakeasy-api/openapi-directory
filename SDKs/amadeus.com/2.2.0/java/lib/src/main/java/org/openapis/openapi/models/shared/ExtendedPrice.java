/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExtendedPrice - price information
 */
public class ExtendedPrice {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalServices")
    public ExtendedPriceAdditionalService[] additionalServices;

    public ExtendedPrice withAdditionalServices(ExtendedPriceAdditionalService[] additionalServices) {
        this.additionalServices = additionalServices;
        return this;
    }
    
    /**
     * Amount without taxes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("base")
    public String base;

    public ExtendedPrice withBase(String base) {
        this.base = base;
        return this;
    }
    
    /**
     * Currency of the payment. It may be different than the requested currency
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingCurrency")
    public String billingCurrency;

    public ExtendedPrice withBillingCurrency(String billingCurrency) {
        this.billingCurrency = billingCurrency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;

    public ExtendedPrice withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * List of applicable fees
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fees")
    public Fee[] fees;

    public ExtendedPrice withFees(Fee[] fees) {
        this.fees = fees;
        return this;
    }
    
    /**
     * Total amount paid by the user (including fees and selected additional services).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grandTotal")
    public String grandTotal;

    public ExtendedPrice withGrandTotal(String grandTotal) {
        this.grandTotal = grandTotal;
        return this;
    }
    
    /**
     * BOOK step ONLY - The price margin percentage (plus or minus) that the booking can tolerate. When set to 0, then no price magin is tolerated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("margin")
    public String margin;

    public ExtendedPrice withMargin(String margin) {
        this.margin = margin;
        return this;
    }
    
    /**
     * The amount of taxes which are refundable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refundableTaxes")
    public String refundableTaxes;

    public ExtendedPrice withRefundableTaxes(String refundableTaxes) {
        this.refundableTaxes = refundableTaxes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxes")
    public Tax[] taxes;

    public ExtendedPrice withTaxes(Tax[] taxes) {
        this.taxes = taxes;
        return this;
    }
    
    /**
     * Total amount paid by the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public String total;

    public ExtendedPrice withTotal(String total) {
        this.total = total;
        return this;
    }
    
    public ExtendedPrice(){}
}
