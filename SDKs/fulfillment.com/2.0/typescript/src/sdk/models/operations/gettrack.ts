/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetTrackRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=trackingNumber",
  })
  trackingNumber?: string;
}

/**
 * the geometry type
 */
export enum GetTrackTrackingResponseFeatureGeometryTypeEnum {
  Point = "Point",
  LineString = "LineString",
  Polygon = "Polygon",
  MultiPoint = "MultiPoint",
  MultiLineString = "MultiLineString",
  MultiPolygon = "MultiPolygon",
}

/**
 * GeoJSon geometry
 *
 * @see {@link http://geojson.org/geojson-spec.html#geometry-objects}
 */
export class GetTrackTrackingResponseFeatureGeometry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "coordinates" })
  coordinates: any;

  /**
   * the geometry type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetTrackTrackingResponseFeatureGeometryTypeEnum;
}

export class GetTrackTrackingResponseFeatureProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export enum GetTrackTrackingResponseFeatureTypeEnum {
  Feature = "Feature",
}

/**
 * GeoJSon Feature
 *
 * @see {@link https://tools.ietf.org/html/rfc7946#section-3.2}
 */
export class GetTrackTrackingResponseFeature extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bbox" })
  bbox?: any[];

  /**
   * GeoJSon geometry
   */
  @SpeakeasyMetadata()
  @Expose({ name: "centerline" })
  @Type(
    () =>
      shared.OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginPropertiesGeometry
  )
  centerline?: shared.OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginPropertiesGeometry;

  /**
   * GeoJSon geometry
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geometry" })
  @Type(() => GetTrackTrackingResponseFeatureGeometry)
  geometry: GetTrackTrackingResponseFeatureGeometry;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  @Type(() => GetTrackTrackingResponseFeatureProperties)
  properties: GetTrackTrackingResponseFeatureProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetTrackTrackingResponseFeatureTypeEnum;
}

export enum GetTrackTrackingResponseTrackingEventV2EventSourceEnum {
  Carrier = "carrier",
  Internal = "internal",
}

export class GetTrackTrackingResponseTrackingEventV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "eventCategory" })
  eventCategory?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventCategoryCode" })
  eventCategoryCode?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "eventDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventDateTime?: Date;

  /**
   * GeoJSon Feature
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventLocation" })
  @Type(
    () =>
      shared.OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOrigin
  )
  eventLocation?: shared.OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOrigin;

  @SpeakeasyMetadata()
  @Expose({ name: "eventSource" })
  eventSource?: GetTrackTrackingResponseTrackingEventV2EventSourceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "eventStatus" })
  eventStatus?: string;
}

export class GetTrackTrackingResponseTrackingNumberV2CarrierSimpleV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

export class GetTrackTrackingResponseTrackingNumberV2 extends SpeakeasyBase {
  /**
   * The computer readable alternative to the human readable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "barcodeScanValue" })
  barcodeScanValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "carrier" })
  @Type(() => GetTrackTrackingResponseTrackingNumberV2CarrierSimpleV2)
  carrier?: GetTrackTrackingResponseTrackingNumberV2CarrierSimpleV2;

  /**
   * The human readable tracking number recipients (consignee) expect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * OK
 */
export class GetTrackTrackingResponse extends SpeakeasyBase {
  /**
   * GeoJSon Feature
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  @Type(
    () =>
      shared.OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOrigin
  )
  destination?: shared.OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOrigin;

  @SpeakeasyMetadata()
  @Expose({ name: "fdcOrderId" })
  fdcOrderId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "firstCheckedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstCheckedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "firstTransitEvent" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstTransitEvent?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastCheckedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastCheckedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  /**
   * GeoJSon Feature
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  @Type(() => GetTrackTrackingResponseFeature)
  origin?: GetTrackTrackingResponseFeature;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "statusCategoryCode" })
  statusCategoryCode?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "statusDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  statusDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata({ elemType: GetTrackTrackingResponseTrackingEventV2 })
  @Expose({ name: "trackedEvents" })
  @Type(() => GetTrackTrackingResponseTrackingEventV2)
  trackedEvents?: GetTrackTrackingResponseTrackingEventV2[];

  @SpeakeasyMetadata()
  @Expose({ name: "trackingNumber" })
  @Type(() => GetTrackTrackingResponseTrackingNumberV2)
  trackingNumber?: GetTrackTrackingResponseTrackingNumberV2;
}

export class GetTrackResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  trackingResponse?: GetTrackTrackingResponse;
}
