// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type TestGetDeviceConfigurationsSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type TestGetDeviceConfigurationsRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The ID of the test run
	AppUploadID *string `queryParam:"style=form,explode=true,name=app_upload_id"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type TestGetDeviceConfigurations200ApplicationJSONImage struct {
	Full  *string `json:"full,omitempty"`
	Thumb *string `json:"thumb,omitempty"`
}

// TestGetDeviceConfigurations200ApplicationJSONModelCPU - CPU data for device
type TestGetDeviceConfigurations200ApplicationJSONModelCPU struct {
	Core      *string `json:"core,omitempty"`
	Frequency *string `json:"frequency,omitempty"`
	Text      *string `json:"text,omitempty"`
}

type TestGetDeviceConfigurations200ApplicationJSONModelDeviceFrameFull struct {
	FrameURL *string   `json:"frameUrl,omitempty"`
	Height   *float64  `json:"height,omitempty"`
	Screen   []float64 `json:"screen,omitempty"`
	Width    *float64  `json:"width,omitempty"`
}

type TestGetDeviceConfigurations200ApplicationJSONModelDeviceFrameGrid struct {
	FrameURL *string   `json:"frameUrl,omitempty"`
	Height   *float64  `json:"height,omitempty"`
	Screen   []float64 `json:"screen,omitempty"`
	Width    *float64  `json:"width,omitempty"`
}

type TestGetDeviceConfigurations200ApplicationJSONModelDeviceFrame struct {
	Full *TestGetDeviceConfigurations200ApplicationJSONModelDeviceFrameFull `json:"full,omitempty"`
	Grid *TestGetDeviceConfigurations200ApplicationJSONModelDeviceFrameGrid `json:"grid,omitempty"`
}

// TestGetDeviceConfigurations200ApplicationJSONModelDimensions - Physical device dimensions
type TestGetDeviceConfigurations200ApplicationJSONModelDimensions struct {
	Depth  map[string]interface{} `json:"depth,omitempty"`
	Height map[string]interface{} `json:"height,omitempty"`
	Width  map[string]interface{} `json:"width,omitempty"`
}

// TestGetDeviceConfigurations200ApplicationJSONModelMemory - Memory data for device
type TestGetDeviceConfigurations200ApplicationJSONModelMemory struct {
	FormattedSize *string `json:"formattedSize,omitempty"`
}

// TestGetDeviceConfigurations200ApplicationJSONModelResolution - Device screen resolution
type TestGetDeviceConfigurations200ApplicationJSONModelResolution struct {
	Height *string `json:"height,omitempty"`
	Ppi    *string `json:"ppi,omitempty"`
	Width  *string `json:"width,omitempty"`
}

// TestGetDeviceConfigurations200ApplicationJSONModelScreenSize - Physical device screen dimensions
type TestGetDeviceConfigurations200ApplicationJSONModelScreenSize struct {
	Cm *string `json:"cm,omitempty"`
	In *string `json:"in,omitempty"`
}

type TestGetDeviceConfigurations200ApplicationJSONModel struct {
	AvailabilityCount *float64 `json:"availabilityCount,omitempty"`
	// CPU data for device
	CPU         *TestGetDeviceConfigurations200ApplicationJSONModelCPU         `json:"cpu,omitempty"`
	DeviceFrame *TestGetDeviceConfigurations200ApplicationJSONModelDeviceFrame `json:"deviceFrame,omitempty"`
	// Physical device dimensions
	Dimensions   *TestGetDeviceConfigurations200ApplicationJSONModelDimensions `json:"dimensions,omitempty"`
	FormFactor   *string                                                       `json:"formFactor,omitempty"`
	Manufacturer *string                                                       `json:"manufacturer,omitempty"`
	// Memory data for device
	Memory      *TestGetDeviceConfigurations200ApplicationJSONModelMemory `json:"memory,omitempty"`
	Model       *string                                                   `json:"model,omitempty"`
	Name        *string                                                   `json:"name,omitempty"`
	Platform    *string                                                   `json:"platform,omitempty"`
	ReleaseDate *string                                                   `json:"releaseDate,omitempty"`
	// Device screen resolution
	Resolution     *TestGetDeviceConfigurations200ApplicationJSONModelResolution `json:"resolution,omitempty"`
	ScreenRotation *float64                                                      `json:"screenRotation,omitempty"`
	// Physical device screen dimensions
	ScreenSize *TestGetDeviceConfigurations200ApplicationJSONModelScreenSize `json:"screenSize,omitempty"`
}

type TestGetDeviceConfigurations200ApplicationJSON struct {
	// The unique id of the device configuration
	ID          *string                                             `json:"id,omitempty"`
	Image       *TestGetDeviceConfigurations200ApplicationJSONImage `json:"image,omitempty"`
	MarketShare *float64                                            `json:"marketShare,omitempty"`
	Model       *TestGetDeviceConfigurations200ApplicationJSONModel `json:"model,omitempty"`
	// The name of the device model and OS version
	Name   *string `json:"name,omitempty"`
	Os     *string `json:"os,omitempty"`
	OsName *string `json:"osName,omitempty"`
	// The tier
	Tier *float64 `json:"tier,omitempty"`
}

type TestGetDeviceConfigurationsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TestGetDeviceConfigurations200ApplicationJSONObjects []TestGetDeviceConfigurations200ApplicationJSON
}
