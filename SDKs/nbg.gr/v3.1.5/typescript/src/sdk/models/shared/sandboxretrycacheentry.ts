/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Keeps the number of calls without x-fapi-customer-ip-address header present
 */
export class SandboxRetryCacheEntry extends SpeakeasyBase {
  /**
   * Cache key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cacheKey" })
  cacheKey?: string;

  /**
   * Number of retries ( up to 4 )
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * Expiration timestamp of the entry
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expirationTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationTimestamp?: Date;
}
