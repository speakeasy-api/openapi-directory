/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * NotebookInstanceSummary - Provides summary information for an SageMaker notebook instance.
 */
public class NotebookInstanceSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalCodeRepositories")
    public String[] additionalCodeRepositories;
    public NotebookInstanceSummary withAdditionalCodeRepositories(String[] additionalCodeRepositories) {
        this.additionalCodeRepositories = additionalCodeRepositories;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public NotebookInstanceSummary withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultCodeRepository")
    public String defaultCodeRepository;
    public NotebookInstanceSummary withDefaultCodeRepository(String defaultCodeRepository) {
        this.defaultCodeRepository = defaultCodeRepository;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceType")
    public InstanceTypeEnum instanceType;
    public NotebookInstanceSummary withInstanceType(InstanceTypeEnum instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;
    public NotebookInstanceSummary withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonProperty("NotebookInstanceArn")
    public String notebookInstanceArn;
    public NotebookInstanceSummary withNotebookInstanceArn(String notebookInstanceArn) {
        this.notebookInstanceArn = notebookInstanceArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotebookInstanceLifecycleConfigName")
    public String notebookInstanceLifecycleConfigName;
    public NotebookInstanceSummary withNotebookInstanceLifecycleConfigName(String notebookInstanceLifecycleConfigName) {
        this.notebookInstanceLifecycleConfigName = notebookInstanceLifecycleConfigName;
        return this;
    }
    
    @JsonProperty("NotebookInstanceName")
    public String notebookInstanceName;
    public NotebookInstanceSummary withNotebookInstanceName(String notebookInstanceName) {
        this.notebookInstanceName = notebookInstanceName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotebookInstanceStatus")
    public NotebookInstanceStatusEnum notebookInstanceStatus;
    public NotebookInstanceSummary withNotebookInstanceStatus(NotebookInstanceStatusEnum notebookInstanceStatus) {
        this.notebookInstanceStatus = notebookInstanceStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Url")
    public String url;
    public NotebookInstanceSummary withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
