/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Account identification requires an accountId, domain or both
 */
export class UpsertAccountRequestBodyIdentification extends SpeakeasyBase {
  /**
   * Unique identifier for the account in your database
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The domain associated with the account (e.g. acme-inc.com)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;
}

/**
 * Update properties and/or members of an account
 */
export class UpsertAccountRequestBody extends SpeakeasyBase {
  /**
   * Account identification requires an accountId, domain or both
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identification" })
  @Type(() => UpsertAccountRequestBodyIdentification)
  identification: UpsertAccountRequestBodyIdentification;

  /**
   * The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: Record<string, any>;
}

export class UpsertAccount500ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertAccount500ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertAccount500ApplicationJSONMeta)
  meta: UpsertAccount500ApplicationJSONMeta;
}

export class UpsertAccount429ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertAccount429ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertAccount429ApplicationJSONMeta)
  meta: UpsertAccount429ApplicationJSONMeta;
}

export class UpsertAccount403ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertAccount403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertAccount403ApplicationJSONMeta)
  meta: UpsertAccount403ApplicationJSONMeta;
}

export class UpsertAccount401ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertAccount401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertAccount401ApplicationJSONMeta)
  meta: UpsertAccount401ApplicationJSONMeta;
}

/**
 * All query-, header- and path- parameters that seemed incorrect
 */
export class UpsertAccount400ApplicationJSONErrorsParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "header" })
  header?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  query?: Record<string, string>;
}

/**
 * Map that sums up all received values that seemed incorrect
 */
export class UpsertAccount400ApplicationJSONErrors extends SpeakeasyBase {
  /**
   * All input fields that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields?: Record<string, string>;

  /**
   * All query-, header- and path- parameters that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  @Type(() => UpsertAccount400ApplicationJSONErrorsParameters)
  parameters?: UpsertAccount400ApplicationJSONErrorsParameters;
}

export class UpsertAccount400ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * The message specifies what is done
 */
export class UpsertAccount400ApplicationJSON extends SpeakeasyBase {
  /**
   * Map that sums up all received values that seemed incorrect
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  @Type(() => UpsertAccount400ApplicationJSONErrors)
  errors: UpsertAccount400ApplicationJSONErrors;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertAccount400ApplicationJSONMeta)
  meta: UpsertAccount400ApplicationJSONMeta;
}

export class UpsertAccount201ApplicationJSONMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * Specifies if any warnings occurred when validating the properties
 */
export class UpsertAccount201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => UpsertAccount201ApplicationJSONMeta)
  meta: UpsertAccount201ApplicationJSONMeta;

  /**
   * If validation fails, specifies the property name and error message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rejected" })
  rejected?: Record<string, string>;
}

export class UpsertAccountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Account will be created
   */
  @SpeakeasyMetadata()
  upsertAccount201ApplicationJSONObject?: UpsertAccount201ApplicationJSON;

  /**
   * Bad request, some fields or parameters are incorrect
   */
  @SpeakeasyMetadata()
  upsertAccount400ApplicationJSONObject?: UpsertAccount400ApplicationJSON;

  /**
   * No API Key was provided or the key is not authorised to perform the action
   */
  @SpeakeasyMetadata()
  upsertAccount401ApplicationJSONObject?: UpsertAccount401ApplicationJSON;

  /**
   * The API Key provided is currently not enabled
   */
  @SpeakeasyMetadata()
  upsertAccount403ApplicationJSONObject?: UpsertAccount403ApplicationJSON;

  /**
   * Too many API requests were send
   */
  @SpeakeasyMetadata()
  upsertAccount429ApplicationJSONObject?: UpsertAccount429ApplicationJSON;

  /**
   * An unexpected error occurred
   */
  @SpeakeasyMetadata()
  upsertAccount500ApplicationJSONObject?: UpsertAccount500ApplicationJSON;
}
