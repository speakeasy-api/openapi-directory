// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RemoveTagsXAmzTargetEnum
type RemoveTagsXAmzTargetEnum string

const (
	RemoveTagsXAmzTargetEnumDataPipelineRemoveTags RemoveTagsXAmzTargetEnum = "DataPipeline.RemoveTags"
)

func (e *RemoveTagsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DataPipeline.RemoveTags":
		*e = RemoveTagsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RemoveTagsXAmzTargetEnum: %s", s)
	}
}

type RemoveTagsHeaders struct {
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        RemoveTagsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RemoveTagsRequest struct {
	Headers RemoveTagsHeaders
	Request shared.RemoveTagsInput `request:"mediaType=application/json"`
}

type RemoveTagsResponse struct {
	ContentType string
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// PipelineDeletedException
	PipelineDeletedException interface{}
	// PipelineNotFoundException
	PipelineNotFoundException interface{}
	// Success
	RemoveTagsOutput map[string]interface{}
	StatusCode       int
	RawResponse      *http.Response
}
