"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import truncatablestring as shared_truncatablestring
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttributeValue:
    r"""The allowed types for `[VALUE]` in a `[KEY]:[VALUE]` attribute."""
    
    bool_value: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boolValue'), 'exclude': lambda f: f is None }})
    r"""A Boolean value represented by `true` or `false`."""  
    int_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intValue'), 'exclude': lambda f: f is None }})
    r"""A 64-bit signed integer."""  
    string_value: Optional[shared_truncatablestring.TruncatableString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringValue'), 'exclude': lambda f: f is None }})
    r"""Represents a string that might be shortened to a specified length."""  
    