/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Monetary } from "./monetary";
import { Project } from "./project";
import { Expose, Transform, Type } from "class-transformer";

export enum CommissionStatusEnum {
  Completed = "completed",
  Unclaimed = "unclaimed",
  Failed = "failed",
  Sent = "sent",
  Waiting = "waiting",
  WaitingInvoice = "waiting_invoice",
}

export class Commission extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => Monetary)
  amount?: Monetary;

  /**
   * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "project" })
  @Type(() => Project)
  project?: Project;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CommissionStatusEnum;
}
