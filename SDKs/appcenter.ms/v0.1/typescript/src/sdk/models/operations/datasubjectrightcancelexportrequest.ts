/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class DataSubjectRightCancelExportRequestSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class DataSubjectRightCancelExportRequestRequest extends SpeakeasyBase {
  /**
   * Unique request ID (GUID)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=token",
  })
  token: string;
}

export enum DataSubjectRightCancelExportRequestDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class DataSubjectRightCancelExportRequestDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: DataSubjectRightCancelExportRequestDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class DataSubjectRightCancelExportRequestDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => DataSubjectRightCancelExportRequestDefaultApplicationJSONError)
  error: DataSubjectRightCancelExportRequestDefaultApplicationJSONError;
}

export enum DataSubjectRightCancelExportRequest503ApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class DataSubjectRightCancelExportRequest503ApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: DataSubjectRightCancelExportRequest503ApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Cancel export request cannot be processed yet.
 */
export class DataSubjectRightCancelExportRequest503ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => DataSubjectRightCancelExportRequest503ApplicationJSONError)
  error: DataSubjectRightCancelExportRequest503ApplicationJSONError;
}

/**
 * Data subject right cancel export request has been accepted.
 */
export class DataSubjectRightCancelExportRequest202ApplicationJSON extends SpeakeasyBase {
  /**
   * ISO 8601 format timestamp of when request was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Unique request identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token: string;
}

export class DataSubjectRightCancelExportRequestResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Data subject right cancel export request has been accepted.
   */
  @SpeakeasyMetadata()
  dataSubjectRightCancelExportRequest202ApplicationJSONObject?: DataSubjectRightCancelExportRequest202ApplicationJSON;

  /**
   * Cancel export request cannot be processed yet.
   */
  @SpeakeasyMetadata()
  dataSubjectRightCancelExportRequest503ApplicationJSONObject?: DataSubjectRightCancelExportRequest503ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  dataSubjectRightCancelExportRequestDefaultApplicationJSONObject?: DataSubjectRightCancelExportRequestDefaultApplicationJSON;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
