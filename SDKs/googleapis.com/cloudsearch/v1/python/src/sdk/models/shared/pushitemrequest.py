"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import debugoptions as shared_debugoptions
from ..shared import pushitem as shared_pushitem
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PushItemRequest:
    
    connector_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorName'), 'exclude': lambda f: f is None }})
    r"""The name of connector making this call. Format: datasources/{source_id}/connectors/{ID}"""  
    debug_options: Optional[shared_debugoptions.DebugOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debugOptions'), 'exclude': lambda f: f is None }})
    r"""Shared request debug options for all cloudsearch RPC methods."""  
    item: Optional[shared_pushitem.PushItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item'), 'exclude': lambda f: f is None }})
    r"""Represents an item to be pushed to the indexing queue."""  
    