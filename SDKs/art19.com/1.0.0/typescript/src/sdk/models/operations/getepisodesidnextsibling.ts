/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetEpisodesIdNextSiblingSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey: string;
}

export class GetEpisodesIdNextSiblingRequest extends SpeakeasyBase {
  /**
   * The ID of the episode to find the one episode released right after it.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * If `true`, get the next released and published episode with an available media file.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=rss" })
  rss?: boolean;
}

/**
 * Success
 */
export class GetEpisodesIdNextSibling200ApplicationVndApiPlusJson extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => shared.Episode)
  data?: shared.Episode;

  /**
   * Links related to the retrieved resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => shared.ResourceLink)
  links?: shared.ResourceLink;
}

export class GetEpisodesIdNextSiblingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getEpisodesIdNextSibling200ApplicationVndApiPlusJsonObject?: GetEpisodesIdNextSibling200ApplicationVndApiPlusJson;
}
