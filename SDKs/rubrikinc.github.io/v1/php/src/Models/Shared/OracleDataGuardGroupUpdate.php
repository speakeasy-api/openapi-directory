<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OracleDataGuardGroupUpdate - Properties to use for the update of an Oracle Data Guard group object.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OracleDataGuardGroupUpdate
{
    /**
     * Specifies an interval in hours. For Oracle archived redo log files whose nextTime is before (now - interval), the next log snapshot job will delete them from the host. Set to 0 for inheriting the value from its parent; -1 for immediate deletion; and -2 to skip log deletion.
     * 
     * @var ?int $hostLogRetentionHours
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostLogRetentionHours')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hostLogRetentionHours = null;
    
    /**
     * Path where the NFS share is mounted on the host.
     * 
     * @var ?string $hostMount
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostMount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostMount = null;
    
    /**
     * Specifies an interval in minutes. This interval is the period between successive log backups.
     * 
     * @var ?int $logBackupFrequencyInMinutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('logBackupFrequencyInMinutes')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $logBackupFrequencyInMinutes = null;
    
    /**
     * Specifies an interval in hours. Log backups are retained for the duration of the interval.
     * 
     * @var ?int $logRetentionHours
     */
	#[\JMS\Serializer\Annotation\SerializedName('logRetentionHours')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $logRetentionHours = null;
    
    /**
     * Number of channels used to backup the Oracle database.
     * 
     * @var ?int $numChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('numChannels')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numChannels = null;
    
    /**
     * Ordered list of database unique names to use for backup.
     * 
     * @var ?array<string> $preferredDGMemberUniqueNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('preferredDGMemberUniqueNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $preferredDGMemberUniqueNames = null;
    
    /**
     * Value that indicates whether to backup from the PRIMARY member only, or from any available member.
     * 
     * @var ?bool $shouldBackupFromPrimaryOnly
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldBackupFromPrimaryOnly')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shouldBackupFromPrimaryOnly = null;
    
	public function __construct()
	{
		$this->hostLogRetentionHours = null;
		$this->hostMount = null;
		$this->logBackupFrequencyInMinutes = null;
		$this->logRetentionHours = null;
		$this->numChannels = null;
		$this->preferredDGMemberUniqueNames = null;
		$this->shouldBackupFromPrimaryOnly = null;
	}
}
