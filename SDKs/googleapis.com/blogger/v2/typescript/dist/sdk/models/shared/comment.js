"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Comment = exports.CommentStatusEnum = exports.CommentPost = exports.CommentInReplyTo = exports.CommentBlog = exports.CommentAuthor = exports.CommentAuthorImage = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The creator's avatar.
 */
var CommentAuthorImage = /** @class */ (function (_super) {
    __extends(CommentAuthorImage, _super);
    function CommentAuthorImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], CommentAuthorImage.prototype, "url", void 0);
    return CommentAuthorImage;
}(utils_1.SpeakeasyBase));
exports.CommentAuthorImage = CommentAuthorImage;
/**
 * The author of this Comment.
 */
var CommentAuthor = /** @class */ (function (_super) {
    __extends(CommentAuthor, _super);
    function CommentAuthor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], CommentAuthor.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], CommentAuthor.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image" }),
        (0, class_transformer_1.Type)(function () { return CommentAuthorImage; }),
        __metadata("design:type", CommentAuthorImage)
    ], CommentAuthor.prototype, "image", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], CommentAuthor.prototype, "url", void 0);
    return CommentAuthor;
}(utils_1.SpeakeasyBase));
exports.CommentAuthor = CommentAuthor;
/**
 * Data about the blog containing this comment.
 */
var CommentBlog = /** @class */ (function (_super) {
    __extends(CommentBlog, _super);
    function CommentBlog() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], CommentBlog.prototype, "id", void 0);
    return CommentBlog;
}(utils_1.SpeakeasyBase));
exports.CommentBlog = CommentBlog;
/**
 * Data about the comment this is in reply to.
 */
var CommentInReplyTo = /** @class */ (function (_super) {
    __extends(CommentInReplyTo, _super);
    function CommentInReplyTo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], CommentInReplyTo.prototype, "id", void 0);
    return CommentInReplyTo;
}(utils_1.SpeakeasyBase));
exports.CommentInReplyTo = CommentInReplyTo;
/**
 * Data about the post containing this comment.
 */
var CommentPost = /** @class */ (function (_super) {
    __extends(CommentPost, _super);
    function CommentPost() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], CommentPost.prototype, "id", void 0);
    return CommentPost;
}(utils_1.SpeakeasyBase));
exports.CommentPost = CommentPost;
/**
 * The status of the comment (only populated for admin users).
 */
var CommentStatusEnum;
(function (CommentStatusEnum) {
    CommentStatusEnum["Live"] = "LIVE";
    CommentStatusEnum["Emptied"] = "EMPTIED";
    CommentStatusEnum["Pending"] = "PENDING";
    CommentStatusEnum["Spam"] = "SPAM";
})(CommentStatusEnum = exports.CommentStatusEnum || (exports.CommentStatusEnum = {}));
/**
 * Successful response
 */
var Comment = /** @class */ (function (_super) {
    __extends(Comment, _super);
    function Comment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "author" }),
        (0, class_transformer_1.Type)(function () { return CommentAuthor; }),
        __metadata("design:type", CommentAuthor)
    ], Comment.prototype, "author", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blog" }),
        (0, class_transformer_1.Type)(function () { return CommentBlog; }),
        __metadata("design:type", CommentBlog)
    ], Comment.prototype, "blog", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "content" }),
        __metadata("design:type", String)
    ], Comment.prototype, "content", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Comment.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inReplyTo" }),
        (0, class_transformer_1.Type)(function () { return CommentInReplyTo; }),
        __metadata("design:type", CommentInReplyTo)
    ], Comment.prototype, "inReplyTo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Comment.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "post" }),
        (0, class_transformer_1.Type)(function () { return CommentPost; }),
        __metadata("design:type", CommentPost)
    ], Comment.prototype, "post", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "published" }),
        __metadata("design:type", String)
    ], Comment.prototype, "published", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], Comment.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Comment.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated" }),
        __metadata("design:type", String)
    ], Comment.prototype, "updated", void 0);
    return Comment;
}(utils_1.SpeakeasyBase));
exports.Comment = Comment;
