// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnvironmentStateEnum - The current state of the environment.
type EnvironmentStateEnum string

const (
	EnvironmentStateEnumStateUnspecified EnvironmentStateEnum = "STATE_UNSPECIFIED"
	EnvironmentStateEnumCreating         EnvironmentStateEnum = "CREATING"
	EnvironmentStateEnumRunning          EnvironmentStateEnum = "RUNNING"
	EnvironmentStateEnumUpdating         EnvironmentStateEnum = "UPDATING"
	EnvironmentStateEnumDeleting         EnvironmentStateEnum = "DELETING"
	EnvironmentStateEnumError            EnvironmentStateEnum = "ERROR"
)

func (e *EnvironmentStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "ERROR":
		*e = EnvironmentStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentStateEnum: %s", s)
	}
}

// EnvironmentInput - An environment for running orchestration tasks.
type EnvironmentInput struct {
	// Configuration information for an environment.
	Config *EnvironmentConfigInput `json:"config,omitempty"`
	// Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.
	Labels map[string]string `json:"labels,omitempty"`
	// The resource name of the environment, in the form: "projects/{projectId}/locations/{locationId}/environments/{environmentId}" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
	Name *string `json:"name,omitempty"`
	// The current state of the environment.
	State *EnvironmentStateEnum `json:"state,omitempty"`
}

// Environment - An environment for running orchestration tasks.
type Environment struct {
	// Configuration information for an environment.
	Config *EnvironmentConfig `json:"config,omitempty"`
	// Output only. The time at which this environment was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Optional. User-defined labels for this environment. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.
	Labels map[string]string `json:"labels,omitempty"`
	// The resource name of the environment, in the form: "projects/{projectId}/locations/{locationId}/environments/{environmentId}" EnvironmentId must start with a lowercase letter followed by up to 63 lowercase letters, numbers, or hyphens, and cannot end with a hyphen.
	Name *string `json:"name,omitempty"`
	// The current state of the environment.
	State *EnvironmentStateEnum `json:"state,omitempty"`
	// Output only. The time at which this environment was last modified.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created.
	UUID *string `json:"uuid,omitempty"`
}
