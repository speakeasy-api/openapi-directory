// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetSchemaByDefinitionXAmzTargetEnum
type GetSchemaByDefinitionXAmzTargetEnum string

const (
	GetSchemaByDefinitionXAmzTargetEnumAwsGlueGetSchemaByDefinition GetSchemaByDefinitionXAmzTargetEnum = "AWSGlue.GetSchemaByDefinition"
)

func (e *GetSchemaByDefinitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.GetSchemaByDefinition":
		*e = GetSchemaByDefinitionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSchemaByDefinitionXAmzTargetEnum: %s", s)
	}
}

type GetSchemaByDefinitionRequest struct {
	GetSchemaByDefinitionInput shared.GetSchemaByDefinitionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 GetSchemaByDefinitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetSchemaByDefinitionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// Success
	GetSchemaByDefinitionResponse *shared.GetSchemaByDefinitionResponse
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
