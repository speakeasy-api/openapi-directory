// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFaceSearchQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// GetFaceSearchXAmzTargetEnum
type GetFaceSearchXAmzTargetEnum string

const (
	GetFaceSearchXAmzTargetEnumRekognitionServiceGetFaceSearch GetFaceSearchXAmzTargetEnum = "RekognitionService.GetFaceSearch"
)

func (e *GetFaceSearchXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RekognitionService.GetFaceSearch":
		*e = GetFaceSearchXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFaceSearchXAmzTargetEnum: %s", s)
	}
}

type GetFaceSearchHeaders struct {
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetFaceSearchXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetFaceSearchRequest struct {
	QueryParams GetFaceSearchQueryParams
	Headers     GetFaceSearchHeaders
	Request     shared.GetFaceSearchRequest `request:"mediaType=application/json"`
}

type GetFaceSearchResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetFaceSearchResponse *shared.GetFaceSearchResponse
	// InternalServerError
	InternalServerError interface{}
	// InvalidPaginationTokenException
	InvalidPaginationTokenException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
