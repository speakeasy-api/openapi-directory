/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ContractualRelationship - A contractual relationship folder
 */
public class ContractualRelationship {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("About")
    public String about;
    public ContractualRelationship withAbout(String about) {
        this.about = about;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ArchivalDate")
    public String archivalDate;
    public ContractualRelationship withArchivalDate(String archivalDate) {
        this.archivalDate = archivalDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Class")
    public String class_;
    public ContractualRelationship withClass(String class_) {
        this.class_ = class_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Comment")
    public String comment;
    public ContractualRelationship withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ContractReference")
    public String contractReference;
    public ContractualRelationship withContractReference(String contractReference) {
        this.contractReference = contractReference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Designation")
    public String designation;
    public ContractualRelationship withDesignation(String designation) {
        this.designation = designation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("End")
    public String end;
    public ContractualRelationship withEnd(String end) {
        this.end = end;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Home")
    public Boolean home;
    public ContractualRelationship withHome(Boolean home) {
        this.home = home;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ContractualRelationship withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Keywords")
    public String[] keywords;
    public ContractualRelationship withKeywords(String[] keywords) {
        this.keywords = keywords;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Level")
    public ContractualRelationshipLevelEnum level;
    public ContractualRelationship withLevel(ContractualRelationshipLevelEnum level) {
        this.level = level;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModificationDate")
    public String modificationDate;
    public ContractualRelationship withModificationDate(String modificationDate) {
        this.modificationDate = modificationDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ContractualRelationship withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Parent")
    public String parent;
    public ContractualRelationship withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Start")
    public String start;
    public ContractualRelationship withStart(String start) {
        this.start = start;
        return this;
    }
    
}
