/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlgorithmValidationSpecification } from "./algorithmvalidationspecification";
import { InferenceSpecification } from "./inferencespecification";
import { Tag } from "./tag";
import { TrainingSpecification } from "./trainingspecification";
import { Expose, Type } from "class-transformer";

export class CreateAlgorithmInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AlgorithmDescription" })
  algorithmDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlgorithmName" })
  algorithmName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertifyForMarketplace" })
  certifyForMarketplace?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSpecification" })
  @Type(() => InferenceSpecification)
  inferenceSpecification?: InferenceSpecification;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingSpecification" })
  @Type(() => TrainingSpecification)
  trainingSpecification: TrainingSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidationSpecification" })
  @Type(() => AlgorithmValidationSpecification)
  validationSpecification?: AlgorithmValidationSpecification;
}
