"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyEnum(str, Enum):
    r"""The policy of the feature."""
    POLICY_UNSPECIFIED = 'POLICY_UNSPECIFIED'
    ALLOWED = 'ALLOWED'
    FORBIDDEN = 'FORBIDDEN'
    RESTRICTED = 'RESTRICTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeature:
    r"""Defines whether a feature can be used or what values are accepted."""
    
    allowed_values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowedValues'), 'exclude': lambda f: f is None }})
    r"""A list of acceptable values. Only effective when the policy is `RESTRICTED`."""  
    policy: Optional[GoogleDevtoolsRemotebuildexecutionAdminV1alphaFeaturePolicyFeaturePolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy'), 'exclude': lambda f: f is None }})
    r"""The policy of the feature."""  
    