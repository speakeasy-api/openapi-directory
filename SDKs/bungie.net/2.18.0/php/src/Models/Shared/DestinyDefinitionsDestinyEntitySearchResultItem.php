<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DestinyDefinitionsDestinyEntitySearchResultItem - An individual Destiny Entity returned from the entity search.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DestinyDefinitionsDestinyEntitySearchResultItem
{
    /**
     * Basic display properties on the entity, so you don't have to look up the definition to show basic results for the item.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinyDefinitionsDestinyEntitySearchResultItemDisplayProperties $displayProperties
     */
	
    public ?DestinyDefinitionsDestinyEntitySearchResultItemDisplayProperties $displayProperties = null;
    
    /**
     * The type of entity, returned as a string matching the DestinyDefinition's contract class name. You'll have to have your own mapping from class names to actually looking up those definitions in the manifest databases.
     * 
     * @var ?string $entityType
     */
	
    public ?string $entityType = null;
    
    /**
     * The hash identifier of the entity. You will use this to look up the DestinyDefinition relevant for the entity found.
     * 
     * @var ?int $hash
     */
	
    public ?int $hash = null;
    
    /**
     * The ranking value for sorting that we calculated using our relevance formula. This will hopefully get better with time and iteration.
     * 
     * @var ?float $weight
     */
	
    public ?float $weight = null;
    
	public function __construct()
	{
		$this->displayProperties = null;
		$this->entityType = null;
		$this->hash = null;
		$this->weight = null;
	}
}
