// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProcessingJobStatusEnum string

const (
	ProcessingJobStatusEnumInProgress ProcessingJobStatusEnum = "InProgress"
	ProcessingJobStatusEnumCompleted  ProcessingJobStatusEnum = "Completed"
	ProcessingJobStatusEnumFailed     ProcessingJobStatusEnum = "Failed"
	ProcessingJobStatusEnumStopping   ProcessingJobStatusEnum = "Stopping"
	ProcessingJobStatusEnumStopped    ProcessingJobStatusEnum = "Stopped"
)

func (e ProcessingJobStatusEnum) ToPointer() *ProcessingJobStatusEnum {
	return &e
}

func (e *ProcessingJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InProgress":
		fallthrough
	case "Completed":
		fallthrough
	case "Failed":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		*e = ProcessingJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProcessingJobStatusEnum: %v", v)
	}
}
