/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Specifies whether to credit the customer for unused units.
 *
 * @remarks
 *
 * If the value of this field is `CreditBySpecificRate`, use the `unusedUnitsCreditRates` field to specify the rate at which to credit the customer for unused units.
 *
 */
export enum UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum {
  NoCredit = "NoCredit",
  CreditBySpecificRate = "CreditBySpecificRate",
}

/**
 * Specifies how Zuora changes the price of the charge each time the subscription renews.
 *
 * @remarks
 *
 * If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
 *
 */
export enum UsageOveragePricingOverridePriceChangeOptionEnum {
  NoChange = "NoChange",
  SpecificPercentageValue = "SpecificPercentageValue",
  UseLatestProductCatalogPricing = "UseLatestProductCatalogPricing",
}

/**
 * Pricing information about a usage charge that uses the "overage" charge model. In this charge model, the charge has an allowance of free units and a fixed price per additional unit consumed.
 *
 * @remarks
 *
 */
export class UsageOveragePricingOverride extends SpeakeasyBase {
  /**
   * Number of free units that may be consumed.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includedUnits" })
  includedUnits?: number;

  /**
   * Number of periods that Zuora considers when calculating overage charges with overage smoothing.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numberOfPeriods" })
  numberOfPeriods?: number;

  /**
   * Price per overage unit consumed.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overagePrice" })
  overagePrice?: number;

  /**
   * Specifies whether to credit the customer for unused units.
   *
   * @remarks
   *
   * If the value of this field is `CreditBySpecificRate`, use the `unusedUnitsCreditRates` field to specify the rate at which to credit the customer for unused units.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overageUnusedUnitsCreditOption" })
  overageUnusedUnitsCreditOption?: UsageOveragePricingOverrideOverageUnusedUnitsCreditOptionEnum;

  /**
   * Specifies how Zuora changes the price of the charge each time the subscription renews.
   *
   * @remarks
   *
   * If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceChangeOption" })
  priceChangeOption?: UsageOveragePricingOverridePriceChangeOptionEnum;

  /**
   * Specifies the percentage by which the price of the charge should change each time the subscription renews. Only applicable if the value of the `priceChangeOption` field is `SpecificPercentageValue`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceIncreasePercentage" })
  priceIncreasePercentage?: number;

  /**
   * Per-unit rate at which to credit the customer for unused units. Only applicable if the value of the `overageUnusedUnitsCreditOption` field is `CreditBySpecificRate`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unusedUnitsCreditRates" })
  unusedUnitsCreditRates?: number;
}
