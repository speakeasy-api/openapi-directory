// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListSchedulesStateEnum - If specified, only lists the schedules whose current state matches the given filter.
type ListSchedulesStateEnum string

const (
	ListSchedulesStateEnumEnabled  ListSchedulesStateEnum = "ENABLED"
	ListSchedulesStateEnumDisabled ListSchedulesStateEnum = "DISABLED"
)

func (e ListSchedulesStateEnum) ToPointer() *ListSchedulesStateEnum {
	return &e
}

func (e *ListSchedulesStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		*e = ListSchedulesStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSchedulesStateEnum: %v", v)
	}
}

type ListSchedulesRequest struct {
	// If specified, limits the number of results returned by this operation. The operation also returns a <code>NextToken</code> which you can use in a subsequent operation to retrieve the next set of results.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// Schedule name prefix to return the filtered list of resources.
	NamePrefix *string `queryParam:"style=form,explode=true,name=NamePrefix"`
	// The token returned by a previous call to retrieve the next set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// If specified, only lists the schedules whose associated schedule group matches the given filter.
	ScheduleGroup *string `queryParam:"style=form,explode=true,name=ScheduleGroup"`
	// If specified, only lists the schedules whose current state matches the given filter.
	State             *ListSchedulesStateEnum `queryParam:"style=form,explode=true,name=State"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListSchedulesResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListSchedulesOutput *shared.ListSchedulesOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
