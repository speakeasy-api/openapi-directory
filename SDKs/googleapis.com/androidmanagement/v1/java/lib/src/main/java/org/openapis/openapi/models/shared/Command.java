/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Command - A command.
 */
public class Command {
    /**
     * Parameters associated with the CLEAR_APP_DATA command to clear the data of specified apps from the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clearAppsDataParams")
    public ClearAppsDataParams clearAppsDataParams;

    public Command withClearAppsDataParams(ClearAppsDataParams clearAppsDataParams) {
        this.clearAppsDataParams = clearAppsDataParams;
        return this;
    }
    
    /**
     * Status of the CLEAR_APP_DATA command to clear the data of specified apps from the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clearAppsDataStatus")
    public ClearAppsDataStatus clearAppsDataStatus;

    public Command withClearAppsDataStatus(ClearAppsDataStatus clearAppsDataStatus) {
        this.clearAppsDataStatus = clearAppsDataStatus;
        return this;
    }
    
    /**
     * The timestamp at which the command was created. The timestamp is automatically generated by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Command withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The duration for which the command is valid. The command will expire if not executed by the device during this time. The default duration if unspecified is ten minutes. There is no maximum duration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public String duration;

    public Command withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * If the command failed, an error code explaining the failure. This is not set when the command is cancelled by the caller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorCode")
    public CommandErrorCodeEnum errorCode;

    public Command withErrorCode(CommandErrorCodeEnum errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    /**
     * For commands of type RESET_PASSWORD, optionally specifies the new password.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newPassword")
    public String newPassword;

    public Command withNewPassword(String newPassword) {
        this.newPassword = newPassword;
        return this;
    }
    
    /**
     * For commands of type RESET_PASSWORD, optionally specifies flags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetPasswordFlags")
    public CommandResetPasswordFlagsEnum[] resetPasswordFlags;

    public Command withResetPasswordFlags(CommandResetPasswordFlagsEnum[] resetPasswordFlags) {
        this.resetPasswordFlags = resetPasswordFlags;
        return this;
    }
    
    /**
     * The type of the command.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public CommandTypeEnum type;

    public Command withType(CommandTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The resource name of the user that owns the device in the form enterprises/{enterpriseId}/users/{userId}. This is automatically generated by the server based on the device the command is sent to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userName")
    public String userName;

    public Command withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    public Command(){}
}
