<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ComputeVmWorkload - Specificies usage of a set of identical compute VM instances.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ComputeVmWorkload
{
    /**
     * Defines whether each instance has confidential compute enabled.
     * 
     * @var ?bool $enableConfidentialCompute
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableConfidentialCompute')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableConfidentialCompute = null;
    
    /**
     * Specification of a set of guest accelerators attached to a machine.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GuestAccelerator $guestAccelerator
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestAccelerator')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GuestAccelerator')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GuestAccelerator $guestAccelerator = null;
    
    /**
     * An amount of usage over a time frame.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Usage $instancesRunning
     */
	#[\JMS\Serializer\Annotation\SerializedName('instancesRunning')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Usage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Usage $instancesRunning = null;
    
    /**
     * Premium image licenses used by each instance.
     * 
     * @var ?array<string> $licenses
     */
	#[\JMS\Serializer\Annotation\SerializedName('licenses')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $licenses = null;
    
    /**
     * Specification of machine series, memory, and number of vCPUs.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MachineType $machineType
     */
	#[\JMS\Serializer\Annotation\SerializedName('machineType')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MachineType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MachineType $machineType = null;
    
    /**
     * Persistent disks attached to each instance. Must include a boot disk.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PersistentDisk> $persistentDisks
     */
	#[\JMS\Serializer\Annotation\SerializedName('persistentDisks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PersistentDisk>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $persistentDisks = null;
    
    /**
     * Defines whether each instance is preemptible.
     * 
     * @var ?bool $preemptible
     */
	#[\JMS\Serializer\Annotation\SerializedName('preemptible')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $preemptible = null;
    
    /**
     * The [region](https://cloud.google.com/compute/docs/regions-zones) where the VMs run. For example: "us-central1".
     * 
     * @var ?string $region
     */
	#[\JMS\Serializer\Annotation\SerializedName('region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $region = null;
    
	public function __construct()
	{
		$this->enableConfidentialCompute = null;
		$this->guestAccelerator = null;
		$this->instancesRunning = null;
		$this->licenses = null;
		$this->machineType = null;
		$this->persistentDisks = null;
		$this->preemptible = null;
		$this->region = null;
	}
}
