// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PageTemplateEnum - Controls what kind of layout the page is rendered in
type PageTemplateEnum string

const (
	PageTemplateEnumContained        PageTemplateEnum = "contained"
	PageTemplateEnumFullWithinLayout PageTemplateEnum = "full_within_layout"
	PageTemplateEnumNavBarIncluded   PageTemplateEnum = "nav_bar_included"
	PageTemplateEnumJSON             PageTemplateEnum = "json"
)

func (e PageTemplateEnum) ToPointer() *PageTemplateEnum {
	return &e
}

func (e *PageTemplateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "contained":
		fallthrough
	case "full_within_layout":
		fallthrough
	case "nav_bar_included":
		fallthrough
	case "json":
		*e = PageTemplateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PageTemplateEnum: %v", v)
	}
}

// Page - Representation of a page object
type Page struct {
	// For JSON pages, the JSON body
	BodyJSON *string `json:"body_json,omitempty"`
	// The text (in markdown) of the ad (required)
	BodyMarkdown *string `json:"body_markdown,omitempty"`
	// For internal use, helps similar pages from one another
	Description string `json:"description"`
	// If true, the page is available at '/{slug}' instead of '/page/{slug}', use with caution
	IsTopLevelPath *bool `json:"is_top_level_path,omitempty"`
	// Used to link to this page in URLs, must be unique and URL-safe
	Slug        string                 `json:"slug"`
	SocialImage map[string]interface{} `json:"social_image,omitempty"`
	// Controls what kind of layout the page is rendered in
	Template PageTemplateEnum `json:"template"`
	// Title of the page
	Title string `json:"title"`
}
