/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateReplicationConfigurationTemplateRequestBody {
    /**
     * Request to associate the default Application Migration Service Security group with the Replication Settings template.
     */
    @JsonProperty("associateDefaultSecurityGroup")
    public Boolean associateDefaultSecurityGroup;

    public CreateReplicationConfigurationTemplateRequestBody withAssociateDefaultSecurityGroup(Boolean associateDefaultSecurityGroup) {
        this.associateDefaultSecurityGroup = associateDefaultSecurityGroup;
        return this;
    }
    
    /**
     * Request to configure bandwidth throttling during Replication Settings template creation.
     */
    @JsonProperty("bandwidthThrottling")
    public Long bandwidthThrottling;

    public CreateReplicationConfigurationTemplateRequestBody withBandwidthThrottling(Long bandwidthThrottling) {
        this.bandwidthThrottling = bandwidthThrottling;
        return this;
    }
    
    /**
     * Request to create Public IP during Replication Settings template creation.
     */
    @JsonProperty("createPublicIP")
    public Boolean createPublicIP;

    public CreateReplicationConfigurationTemplateRequestBody withCreatePublicIP(Boolean createPublicIP) {
        this.createPublicIP = createPublicIP;
        return this;
    }
    
    /**
     * Request to configure data plane routing during Replication Settings template creation.
     */
    @JsonProperty("dataPlaneRouting")
    public CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum dataPlaneRouting;

    public CreateReplicationConfigurationTemplateRequestBody withDataPlaneRouting(CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum dataPlaneRouting) {
        this.dataPlaneRouting = dataPlaneRouting;
        return this;
    }
    
    /**
     * Request to configure the default large staging disk EBS volume type during Replication Settings template creation.
     */
    @JsonProperty("defaultLargeStagingDiskType")
    public CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum defaultLargeStagingDiskType;

    public CreateReplicationConfigurationTemplateRequestBody withDefaultLargeStagingDiskType(CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum defaultLargeStagingDiskType) {
        this.defaultLargeStagingDiskType = defaultLargeStagingDiskType;
        return this;
    }
    
    /**
     * Request to configure EBS encryption during Replication Settings template creation.
     */
    @JsonProperty("ebsEncryption")
    public CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum ebsEncryption;

    public CreateReplicationConfigurationTemplateRequestBody withEbsEncryption(CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum ebsEncryption) {
        this.ebsEncryption = ebsEncryption;
        return this;
    }
    
    /**
     * Request to configure an EBS encryption key during Replication Settings template creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ebsEncryptionKeyArn")
    public String ebsEncryptionKeyArn;

    public CreateReplicationConfigurationTemplateRequestBody withEbsEncryptionKeyArn(String ebsEncryptionKeyArn) {
        this.ebsEncryptionKeyArn = ebsEncryptionKeyArn;
        return this;
    }
    
    /**
     * Request to configure the Replication Server instance type during Replication Settings template creation.
     */
    @JsonProperty("replicationServerInstanceType")
    public String replicationServerInstanceType;

    public CreateReplicationConfigurationTemplateRequestBody withReplicationServerInstanceType(String replicationServerInstanceType) {
        this.replicationServerInstanceType = replicationServerInstanceType;
        return this;
    }
    
    /**
     * Request to configure the Replication Server Security group ID during Replication Settings template creation.
     */
    @JsonProperty("replicationServersSecurityGroupsIDs")
    public String[] replicationServersSecurityGroupsIDs;

    public CreateReplicationConfigurationTemplateRequestBody withReplicationServersSecurityGroupsIDs(String[] replicationServersSecurityGroupsIDs) {
        this.replicationServersSecurityGroupsIDs = replicationServersSecurityGroupsIDs;
        return this;
    }
    
    /**
     * Request to configure the Staging Area subnet ID during Replication Settings template creation.
     */
    @JsonProperty("stagingAreaSubnetId")
    public String stagingAreaSubnetId;

    public CreateReplicationConfigurationTemplateRequestBody withStagingAreaSubnetId(String stagingAreaSubnetId) {
        this.stagingAreaSubnetId = stagingAreaSubnetId;
        return this;
    }
    
    /**
     * Request to configure Staging Area tags during Replication Settings template creation.
     */
    @JsonProperty("stagingAreaTags")
    public java.util.Map<String, String> stagingAreaTags;

    public CreateReplicationConfigurationTemplateRequestBody withStagingAreaTags(java.util.Map<String, String> stagingAreaTags) {
        this.stagingAreaTags = stagingAreaTags;
        return this;
    }
    
    /**
     * Request to configure tags during Replication Settings template creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateReplicationConfigurationTemplateRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Request to use Dedicated Replication Servers during Replication Settings template creation.
     */
    @JsonProperty("useDedicatedReplicationServer")
    public Boolean useDedicatedReplicationServer;

    public CreateReplicationConfigurationTemplateRequestBody withUseDedicatedReplicationServer(Boolean useDedicatedReplicationServer) {
        this.useDedicatedReplicationServer = useDedicatedReplicationServer;
        return this;
    }
    
    public CreateReplicationConfigurationTemplateRequestBody(@JsonProperty("associateDefaultSecurityGroup") Boolean associateDefaultSecurityGroup, @JsonProperty("bandwidthThrottling") Long bandwidthThrottling, @JsonProperty("createPublicIP") Boolean createPublicIP, @JsonProperty("dataPlaneRouting") CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum dataPlaneRouting, @JsonProperty("defaultLargeStagingDiskType") CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum defaultLargeStagingDiskType, @JsonProperty("ebsEncryption") CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum ebsEncryption, @JsonProperty("replicationServerInstanceType") String replicationServerInstanceType, @JsonProperty("replicationServersSecurityGroupsIDs") String[] replicationServersSecurityGroupsIDs, @JsonProperty("stagingAreaSubnetId") String stagingAreaSubnetId, @JsonProperty("stagingAreaTags") java.util.Map<String, String> stagingAreaTags, @JsonProperty("useDedicatedReplicationServer") Boolean useDedicatedReplicationServer) {
        this.associateDefaultSecurityGroup = associateDefaultSecurityGroup;
        this.bandwidthThrottling = bandwidthThrottling;
        this.createPublicIP = createPublicIP;
        this.dataPlaneRouting = dataPlaneRouting;
        this.defaultLargeStagingDiskType = defaultLargeStagingDiskType;
        this.ebsEncryption = ebsEncryption;
        this.replicationServerInstanceType = replicationServerInstanceType;
        this.replicationServersSecurityGroupsIDs = replicationServersSecurityGroupsIDs;
        this.stagingAreaSubnetId = stagingAreaSubnetId;
        this.stagingAreaTags = stagingAreaTags;
        this.useDedicatedReplicationServer = useDedicatedReplicationServer;
  }
}
