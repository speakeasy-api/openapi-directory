"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderFilter:
    
    account_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountIds'), 'exclude': lambda f: f is None }})
    r"""Internal use only & should not be set on your filter (your subscription is already locked to your account). If set subscription will fail."""  
    customer_strategy_refs: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerStrategyRefs'), 'exclude': lambda f: f is None }})
    r"""Restricts to specified customerStrategyRefs; this will filter orders and StrategyMatchChanges accordingly (Note: overall postition is not filtered)"""  
    include_overall_position: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includeOverallPosition'), 'exclude': lambda f: f is None }})
    r"""Returns overall / net position (See: OrderRunnerChange.mb / OrderRunnerChange.ml). Default=true"""  
    partition_matched_by_strategy_ref: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partitionMatchedByStrategyRef'), 'exclude': lambda f: f is None }})
    r"""Returns strategy positions (See: OrderRunnerChange.smc=Map<customerStrategyRef, StrategyMatchChange>) - these are sent in delta format as per overall position. Default=false"""  
    