/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Category } from "./category";
import { Contributor } from "./contributor";
import { ImageAssets } from "./imageassets";
import { Model } from "./model";
import { ModelRelease } from "./modelrelease";
import { Expose, Transform, Type } from "class-transformer";

/**
 * AI-powered insights about how the asset will perform for the objective and audience
 */
export class ImageInsights extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: string[];
}

/**
 * Information about an image
 */
export class Image extends SpeakeasyBase {
  /**
   * Date that the image was added by the contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "added_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  addedDate?: Date;

  /**
   * Affiliate referral link; appears only for registered affiliate partners
   */
  @SpeakeasyMetadata()
  @Expose({ name: "affiliate_url" })
  affiliateUrl?: string;

  /**
   * Aspect ratio of the image in decimal format, such as 0.6667
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aspect" })
  aspect?: number;

  /**
   * Information about the assets that are part of an image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assets" })
  @Type(() => ImageAssets)
  assets?: ImageAssets;

  /**
   * Categories that this image is a part of
   */
  @SpeakeasyMetadata({ elemType: Category })
  @Expose({ name: "categories" })
  @Type(() => Category)
  categories?: Category[];

  /**
   * Information about a contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor" })
  @Type(() => Contributor)
  contributor: Contributor;

  /**
   * Detailed description of the image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Indicates whether there are model releases for the image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_model_release" })
  hasModelRelease?: boolean;

  /**
   * Indicates whether there are property releases for the image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_property_release" })
  hasPropertyRelease?: boolean;

  /**
   * Image ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Type of image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_type" })
  imageType?: string;

  /**
   * AI-powered insights about how the asset will perform for the objective and audience
   */
  @SpeakeasyMetadata()
  @Expose({ name: "insights" })
  @Type(() => ImageInsights)
  insights?: ImageInsights;

  /**
   * Whether or not this image contains adult content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_adult" })
  isAdult?: boolean;

  /**
   * Whether or not this image is editorial content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_editorial" })
  isEditorial?: boolean;

  /**
   * Whether or not this image is an illustration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_illustration" })
  isIllustration?: boolean;

  /**
   * Keywords associated with the content of this image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keywords" })
  keywords?: string[];

  /**
   * Media type of this image, should always be "image"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "media_type" })
  mediaType: string;

  /**
   * List of model releases
   */
  @SpeakeasyMetadata({ elemType: ModelRelease })
  @Expose({ name: "model_releases" })
  @Type(() => ModelRelease)
  modelReleases?: ModelRelease[];

  /**
   * List of models
   */
  @SpeakeasyMetadata({ elemType: Model })
  @Expose({ name: "models" })
  @Type(() => Model)
  models?: Model[];

  /**
   * List of all releases of this image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releases" })
  releases?: string[];

  /**
   * Link to image information page; included only for certain accounts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
