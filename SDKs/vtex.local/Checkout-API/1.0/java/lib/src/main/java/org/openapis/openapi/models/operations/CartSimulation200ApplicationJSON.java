/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CartSimulation200ApplicationJSON - OK
 */
public class CartSimulation200ApplicationJSON {
    /**
     * Three letter ISO code of the country of the shipping address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public CartSimulation200ApplicationJSON withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Information on each item in the cart.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public CartSimulation200ApplicationJSONItems[] items;
    public CartSimulation200ApplicationJSON withItems(CartSimulation200ApplicationJSONItems[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Array with logistics information on each item of the `items` array in the `orderForm`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logisticsInfo")
    public CartSimulation200ApplicationJSONLogisticsInfo[] logisticsInfo;
    public CartSimulation200ApplicationJSON withLogisticsInfo(CartSimulation200ApplicationJSONLogisticsInfo[] logisticsInfo) {
        this.logisticsInfo = logisticsInfo;
        return this;
    }
    
    /**
     * Object containing promotion data such as coupon tracking information and internal or external UTMs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("marketingData")
    public java.util.Map<String, Object> marketingData;
    public CartSimulation200ApplicationJSON withMarketingData(java.util.Map<String, Object> marketingData) {
        this.marketingData = marketingData;
        return this;
    }
    
    /**
     * Payment data information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentData")
    public CartSimulation200ApplicationJSONPaymentData paymentData;
    public CartSimulation200ApplicationJSON withPaymentData(CartSimulation200ApplicationJSONPaymentData paymentData) {
        this.paymentData = paymentData;
        return this;
    }
    
    /**
     * Postal Code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalCode")
    public String postalCode;
    public CartSimulation200ApplicationJSON withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Information on rates and benefits that apply to the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ratesAndBenefitsData")
    public CartSimulation200ApplicationJSONRatesAndBenefitsData ratesAndBenefitsData;
    public CartSimulation200ApplicationJSON withRatesAndBenefitsData(CartSimulation200ApplicationJSONRatesAndBenefitsData ratesAndBenefitsData) {
        this.ratesAndBenefitsData = ratesAndBenefitsData;
        return this;
    }
    
    /**
     * Array containing the data of the item selected as a gift.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectableGifts")
    public Object[] selectableGifts;
    public CartSimulation200ApplicationJSON withSelectableGifts(Object[] selectableGifts) {
        this.selectableGifts = selectableGifts;
        return this;
    }
    
}
