"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudwatchlogsencoding_enum as shared_cloudwatchlogsencoding_enum
from ..shared import cloudwatchlogsinitialposition_enum as shared_cloudwatchlogsinitialposition_enum
from ..shared import cloudwatchlogstimezone_enum as shared_cloudwatchlogstimezone_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CloudWatchLogsLogStream:
    r"""Describes the Amazon CloudWatch logs configuration for a layer. For detailed information about members of this data type, see the <a href=\\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AgentReference.html\\">CloudWatch Logs Agent Reference</a>."""
    
    batch_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BatchCount'), 'exclude': lambda f: f is None }})  
    batch_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BatchSize'), 'exclude': lambda f: f is None }})  
    buffer_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BufferDuration'), 'exclude': lambda f: f is None }})  
    datetime_format: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatetimeFormat'), 'exclude': lambda f: f is None }})  
    encoding: Optional[shared_cloudwatchlogsencoding_enum.CloudWatchLogsEncodingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Encoding'), 'exclude': lambda f: f is None }})  
    file: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('File'), 'exclude': lambda f: f is None }})  
    file_fingerprint_lines: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FileFingerprintLines'), 'exclude': lambda f: f is None }})  
    initial_position: Optional[shared_cloudwatchlogsinitialposition_enum.CloudWatchLogsInitialPositionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InitialPosition'), 'exclude': lambda f: f is None }})  
    log_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LogGroupName'), 'exclude': lambda f: f is None }})  
    multi_line_start_pattern: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MultiLineStartPattern'), 'exclude': lambda f: f is None }})  
    time_zone: Optional[shared_cloudwatchlogstimezone_enum.CloudWatchLogsTimeZoneEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimeZone'), 'exclude': lambda f: f is None }})  
    