// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartTaskXAmzTargetEnum
type StartTaskXAmzTargetEnum string

const (
	StartTaskXAmzTargetEnumAmazonEc2ContainerServiceV20141113StartTask StartTaskXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.StartTask"
)

func (e *StartTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerServiceV20141113.StartTask":
		*e = StartTaskXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartTaskXAmzTargetEnum: %s", s)
	}
}

type StartTaskHeaders struct {
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StartTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartTaskRequest struct {
	Headers StartTaskHeaders
	Request shared.StartTaskRequest `request:"mediaType=application/json"`
}

type StartTaskResponse struct {
	// ClientException
	ClientException interface{}
	// ClusterNotFoundException
	ClusterNotFoundException interface{}
	ContentType              string
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServerException
	ServerException interface{}
	// Success
	StartTaskResponse *shared.StartTaskResponse
	StatusCode        int
	RawResponse       *http.Response
}
