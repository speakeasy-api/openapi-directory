/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataSourceToIndexFieldMapping } from "./datasourcetoindexfieldmapping";
import { DataSourceVpcConfiguration } from "./datasourcevpcconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * Provides the configuration information to connect to Box as your data source.
 */
export class BoxConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "CommentFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  commentFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlComments" })
  crawlComments?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlTasks" })
  crawlTasks?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CrawlWebLinks" })
  crawlWebLinks?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EnterpriseId" })
  enterpriseId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExclusionPatterns" })
  exclusionPatterns?: string[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "FileFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  fileFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "InclusionPatterns" })
  inclusionPatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SecretArn" })
  secretArn: string;

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "TaskFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  taskFieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "UseChangeLog" })
  useChangeLog?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfiguration" })
  @Type(() => DataSourceVpcConfiguration)
  vpcConfiguration?: DataSourceVpcConfiguration;

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "WebLinkFieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  webLinkFieldMappings?: DataSourceToIndexFieldMapping[];
}
