/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value.
 */
export class GetIpamDiscoveredResourceCidrsResultIpamDiscoveredResourceCidrsResourceTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * The resource type.
 */
export enum GetIpamDiscoveredResourceCidrsResultIpamDiscoveredResourceCidrsResourceTypeEnum {
  Vpc = "vpc",
  Subnet = "subnet",
  Eip = "eip",
  PublicIpv4Pool = "public-ipv4-pool",
  Ipv6Pool = "ipv6-pool",
}

/**
 * An IPAM discovered resource CIDR. A discovered resource is a resource CIDR monitored under a resource discovery. The following resources can be discovered: VPCs, Public IPv4 pools, VPC subnets, and Elastic IP addresses. The discovered resource CIDR is the IP address range in CIDR notation that is associated with the resource.
 */
export class GetIpamDiscoveredResourceCidrsResultIpamDiscoveredResourceCidrs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ipUsage?: number;

  @SpeakeasyMetadata()
  ipamResourceDiscoveryId?: string;

  @SpeakeasyMetadata()
  resourceCidr?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceOwnerId?: string;

  @SpeakeasyMetadata()
  resourceRegion?: string;

  @SpeakeasyMetadata({
    elemType:
      GetIpamDiscoveredResourceCidrsResultIpamDiscoveredResourceCidrsResourceTags,
  })
  resourceTags?: GetIpamDiscoveredResourceCidrsResultIpamDiscoveredResourceCidrsResourceTags[];

  @SpeakeasyMetadata()
  resourceType?: GetIpamDiscoveredResourceCidrsResultIpamDiscoveredResourceCidrsResourceTypeEnum;

  @SpeakeasyMetadata()
  sampleTime?: Date;

  @SpeakeasyMetadata()
  vpcId?: string;
}

/**
 * Success
 */
export class GetIpamDiscoveredResourceCidrsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetIpamDiscoveredResourceCidrsResultIpamDiscoveredResourceCidrs,
  })
  ipamDiscoveredResourceCidrs?: GetIpamDiscoveredResourceCidrsResultIpamDiscoveredResourceCidrs[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
