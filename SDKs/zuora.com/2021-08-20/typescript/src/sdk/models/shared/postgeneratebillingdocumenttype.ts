/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Whether to automatically post the billing documents after the draft billing documents are generated.
 *
 * @remarks
 *
 * If an error occurs during posting billing documents, the draft billing documents are not generated too.
 *
 */
export enum PostGenerateBillingDocumentTypeAutoPostEnum {
  True = "true",
  False = "false",
}

/**
 * Whether to automatically renew the subscriptions with **Auto Renew** set to **Yes**.
 *
 * @remarks
 *
 */
export enum PostGenerateBillingDocumentTypeAutoRenewEnum {
  True = "true",
  False = "false",
}

export class PostGenerateBillingDocumentType extends SpeakeasyBase {
  /**
   * Whether to automatically post the billing documents after the draft billing documents are generated.
   *
   * @remarks
   *
   * If an error occurs during posting billing documents, the draft billing documents are not generated too.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoPost" })
  autoPost?: PostGenerateBillingDocumentTypeAutoPostEnum;

  /**
   * Whether to automatically renew the subscriptions with **Auto Renew** set to **Yes**.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoRenew" })
  autoRenew?: PostGenerateBillingDocumentTypeAutoRenewEnum;

  /**
   * The types of the charges to be excluded from the generation of billing documents. The field values are case insensitive. Supported values include `onetime`, `recurring`, and `usage`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargeTypeToExclude" })
  chargeTypeToExclude?: string[];

  /**
   * The date on which to generate the billing documents, in `yyyy-mm-dd` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "effectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  effectiveDate?: Date;

  /**
   * The IDs of the subscriptions that you want to create the billing documents for.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionIds" })
  subscriptionIds?: string[];

  /**
   * The date used to determine which charges are to be billed, in `yyyy-mm-dd` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  targetDate?: Date;
}
