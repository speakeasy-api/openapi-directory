// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum
type DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum string

const (
	DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnumOvertureServiceDescribeDirectConnectGatewayAssociationProposals DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum = "OvertureService.DescribeDirectConnectGatewayAssociationProposals"
)

func (e DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum) ToPointer() *DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum {
	return &e
}

func (e *DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OvertureService.DescribeDirectConnectGatewayAssociationProposals":
		*e = DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum: %v", v)
	}
}

type DescribeDirectConnectGatewayAssociationProposalsRequest struct {
	DescribeDirectConnectGatewayAssociationProposalsRequest shared.DescribeDirectConnectGatewayAssociationProposalsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                           *string                                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                                       *string                                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                                          *string                                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                                *string                                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                                       *string                                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                           *string                                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                                       *string                                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                              DescribeDirectConnectGatewayAssociationProposalsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeDirectConnectGatewayAssociationProposalsResponse struct {
	ContentType string
	// Success
	DescribeDirectConnectGatewayAssociationProposalsResult *shared.DescribeDirectConnectGatewayAssociationProposalsResult
	// DirectConnectClientException
	DirectConnectClientException interface{}
	// DirectConnectServerException
	DirectConnectServerException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
}
