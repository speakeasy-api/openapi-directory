/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SNOMEDCTAttribute -  The extracted attributes that relate to an entity. An extracted segment of the text that is an attribute of an entity, or otherwise related to an entity, such as the dosage of a medication taken. 
 */
public class SNOMEDCTAttribute {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BeginOffset")
    public Long beginOffset;

    public SNOMEDCTAttribute withBeginOffset(Long beginOffset) {
        this.beginOffset = beginOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Category")
    public SNOMEDCTEntityCategoryEnum category;

    public SNOMEDCTAttribute withCategory(SNOMEDCTEntityCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EndOffset")
    public Long endOffset;

    public SNOMEDCTAttribute withEndOffset(Long endOffset) {
        this.endOffset = endOffset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Long id;

    public SNOMEDCTAttribute withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RelationshipScore")
    public Float relationshipScore;

    public SNOMEDCTAttribute withRelationshipScore(Float relationshipScore) {
        this.relationshipScore = relationshipScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RelationshipType")
    public SNOMEDCTRelationshipTypeEnum relationshipType;

    public SNOMEDCTAttribute withRelationshipType(SNOMEDCTRelationshipTypeEnum relationshipType) {
        this.relationshipType = relationshipType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SNOMEDCTConcepts")
    public SNOMEDCTConcept[] snomedctConcepts;

    public SNOMEDCTAttribute withSNOMEDCTConcepts(SNOMEDCTConcept[] snomedctConcepts) {
        this.snomedctConcepts = snomedctConcepts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Score")
    public Float score;

    public SNOMEDCTAttribute withScore(Float score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Text")
    public String text;

    public SNOMEDCTAttribute withText(String text) {
        this.text = text;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Traits")
    public SNOMEDCTTrait[] traits;

    public SNOMEDCTAttribute withTraits(SNOMEDCTTrait[] traits) {
        this.traits = traits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public SNOMEDCTAttributeTypeEnum type;

    public SNOMEDCTAttribute withType(SNOMEDCTAttributeTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public SNOMEDCTAttribute(){}
}
