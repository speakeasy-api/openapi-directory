"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PlanPurchaseTypeEnum(str, Enum):
    r"""The type of plan purchased."""
    FREE = 'Free'
    SUBSCRIPTION = 'Subscription'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlanPurchase:
    
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""The title of the purchased plan."""  
    type: PlanPurchaseTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of plan purchased."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The identifier of the purchased plan."""  
    price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})
    r"""The price of the purchased plan."""  
    subscription_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscriptionId'), 'exclude': lambda f: f is None }})
    r"""The identifier of the subscription membership to the plan."""  
    