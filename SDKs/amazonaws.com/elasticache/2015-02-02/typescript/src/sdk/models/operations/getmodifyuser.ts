/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GETModifyUserActionEnum {
  ModifyUser = "ModifyUser",
}

/**
 * Specifies the authentication mode to use.
 */
export class GETModifyUserAuthenticationMode extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Passwords" })
  passwords?: string[];

  @SpeakeasyMetadata({ data: "queryParam, name=Type" })
  type?: shared.InputAuthenticationTypeEnum;
}

export enum GETModifyUserVersionEnum {
  TwoThousandAndFifteen0202 = "2015-02-02",
}

export class GETModifyUserRequest extends SpeakeasyBase {
  /**
   * Access permissions string used for this user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AccessString",
  })
  accessString?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyUserActionEnum;

  /**
   * Adds additional user permissions to the access string.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AppendAccessString",
  })
  appendAccessString?: string;

  /**
   * Specifies how to authenticate the user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AuthenticationMode",
  })
  authenticationMode?: GETModifyUserAuthenticationMode;

  /**
   * Indicates no password is required for the user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NoPasswordRequired",
  })
  noPasswordRequired?: boolean;

  /**
   * The passwords belonging to the user. You are allowed up to two.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Passwords",
  })
  passwords?: string[];

  /**
   * The ID of the user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=UserId",
  })
  userId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyUserVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
