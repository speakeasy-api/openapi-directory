/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContainerModeEnum } from "./containermodeenum";
import { ImageConfig } from "./imageconfig";
import { MultiModelConfig } from "./multimodelconfig";
import { Expose, Type } from "class-transformer";

/**
 * Describes the container, as part of model definition.
 */
export class ContainerDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ContainerHostname" })
  containerHostname?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Environment" })
  environment?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Image" })
  image?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImageConfig" })
  @Type(() => ImageConfig)
  imageConfig?: ImageConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSpecificationName" })
  inferenceSpecificationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Mode" })
  mode?: ContainerModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelDataUrl" })
  modelDataUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageName" })
  modelPackageName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MultiModelConfig" })
  @Type(() => MultiModelConfig)
  multiModelConfig?: MultiModelConfig;
}
