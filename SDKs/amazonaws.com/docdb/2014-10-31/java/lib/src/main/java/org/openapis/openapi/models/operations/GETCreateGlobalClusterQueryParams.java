/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreateGlobalClusterQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETCreateGlobalClusterActionEnum action;
    public GETCreateGlobalClusterQueryParams withAction(GETCreateGlobalClusterActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The name for your database of up to 64 alpha-numeric characters. If you do not provide a name, Amazon DocumentDB will not create a database in the global cluster you are creating.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DatabaseName")
    public String databaseName;
    public GETCreateGlobalClusterQueryParams withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }
    
    /**
     * The deletion protection setting for the new global cluster. The global cluster can't be deleted when deletion protection is enabled. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DeletionProtection")
    public Boolean deletionProtection;
    public GETCreateGlobalClusterQueryParams withDeletionProtection(Boolean deletionProtection) {
        this.deletionProtection = deletionProtection;
        return this;
    }
    
    /**
     * The name of the database engine to be used for this cluster.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Engine")
    public String engine;
    public GETCreateGlobalClusterQueryParams withEngine(String engine) {
        this.engine = engine;
        return this;
    }
    
    /**
     * The engine version of the global cluster.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EngineVersion")
    public String engineVersion;
    public GETCreateGlobalClusterQueryParams withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }
    
    /**
     * The cluster identifier of the new global cluster.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=GlobalClusterIdentifier")
    public String globalClusterIdentifier;
    public GETCreateGlobalClusterQueryParams withGlobalClusterIdentifier(String globalClusterIdentifier) {
        this.globalClusterIdentifier = globalClusterIdentifier;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) to use as the primary cluster of the global cluster. This parameter is optional.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SourceDBClusterIdentifier")
    public String sourceDBClusterIdentifier;
    public GETCreateGlobalClusterQueryParams withSourceDBClusterIdentifier(String sourceDBClusterIdentifier) {
        this.sourceDBClusterIdentifier = sourceDBClusterIdentifier;
        return this;
    }
    
    /**
     * The storage encryption setting for the new global cluster. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=StorageEncrypted")
    public Boolean storageEncrypted;
    public GETCreateGlobalClusterQueryParams withStorageEncrypted(Boolean storageEncrypted) {
        this.storageEncrypted = storageEncrypted;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETCreateGlobalClusterVersionEnum version;
    public GETCreateGlobalClusterQueryParams withVersion(GETCreateGlobalClusterVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
