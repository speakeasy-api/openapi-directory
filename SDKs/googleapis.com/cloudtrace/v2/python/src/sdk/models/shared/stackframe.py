"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import module as shared_module
from ..shared import truncatablestring as shared_truncatablestring
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StackFrame:
    r"""Represents a single stack frame in a stack trace."""
    
    column_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnNumber'), 'exclude': lambda f: f is None }})
    r"""The column number where the function call appears, if available. This is important in JavaScript because of its anonymous functions."""  
    file_name: Optional[shared_truncatablestring.TruncatableString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileName'), 'exclude': lambda f: f is None }})
    r"""Represents a string that might be shortened to a specified length."""  
    function_name: Optional[shared_truncatablestring.TruncatableString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('functionName'), 'exclude': lambda f: f is None }})
    r"""Represents a string that might be shortened to a specified length."""  
    line_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lineNumber'), 'exclude': lambda f: f is None }})
    r"""The line number in `file_name` where the function call appears."""  
    load_module: Optional[shared_module.Module] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loadModule'), 'exclude': lambda f: f is None }})
    r"""Binary module."""  
    original_function_name: Optional[shared_truncatablestring.TruncatableString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originalFunctionName'), 'exclude': lambda f: f is None }})
    r"""Represents a string that might be shortened to a specified length."""  
    source_version: Optional[shared_truncatablestring.TruncatableString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceVersion'), 'exclude': lambda f: f is None }})
    r"""Represents a string that might be shortened to a specified length."""  
    