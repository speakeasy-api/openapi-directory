<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Transaction - OK - the request has succeeded.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Transaction
{
    /**
     * Unique identifier of the account holder.
     * 
     * @var string $accountHolderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountHolderId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountHolderId;
    
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $amount;
    
    /**
     * Unique identifier of the balance account.
     * 
     * @var string $balanceAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('balanceAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $balanceAccountId;
    
    /**
     * Unique identifier of the balance platform.
     * 
     * @var string $balancePlatform
     */
	#[\JMS\Serializer\Annotation\SerializedName('balancePlatform')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $balancePlatform;
    
    /**
     * The date the transaction was booked to the balance account.
     * 
     * @var \DateTime $bookingDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookingDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $bookingDate;
    
    /**
     * The category of the transaction indicating the type of activity.
     * 
     * 
     *  Possible values:
     * 
     * * **platformPayment**: The transaction is a payment or payment modification made with an Adyen merchant account.
     * 
     * * **internal**: The transaction resulted from an internal adjustment such as a deposit correction or invoice deduction.
     * 
     * * **bank**: The transaction is a bank-related activity, such as sending a payout or receiving funds.
     * 
     * * **issuedCard**: The transaction is a card-related activity, such as using an Adyen-issued card to pay online.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionCategoryEnum $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransactionCategoryEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionCategoryEnum $category = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('counterparty')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Counterparty')]
    public Counterparty $counterparty;
    
    /**
     * The date the transaction was created.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The `description` from the `/transfers` request.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Unique identifier of the transaction.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('instructedAmount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $instructedAmount = null;
    
    /**
     * Unique identifier of the payment instrument that was used for the transaction.
     * 
     * @var ?string $paymentInstrumentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentInstrumentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentInstrumentId = null;
    
    /**
     * The [`reference`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__reqParam_reference) from the `/transfers` request. If you haven't provided any, Adyen generates a unique reference.
     * 
     * @var string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reference;
    
    /**
     * The reference sent to or received from the counterparty.
     * 
     * 
     * * For outgoing funds, this is the [`referenceForBeneficiary`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__resParam_referenceForBeneficiary) from the  [`/transfers`](https://docs.adyen.com/api-explorer/#/transfers/latest/post/transfers__reqParam_referenceForBeneficiary) request.
     * 
     *  * For incoming funds, this is the reference from the sender.
     * 
     * @var ?string $referenceForBeneficiary
     */
	#[\JMS\Serializer\Annotation\SerializedName('referenceForBeneficiary')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $referenceForBeneficiary = null;
    
    /**
     * The status of the transaction.
     * 
     * 
     *  Possible values:
     * 
     * * **pending**: The transaction is still pending.
     * 
     * * **booked**: The transaction has been booked to the balance account.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\TransactionStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransactionStatusEnum>')]
    public TransactionStatusEnum $status;
    
    /**
     * Unique identifier of the related transfer.
     * 
     * @var ?string $transferId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferId = null;
    
    /**
     * The type of the transaction.
     * 
     * 
     *  Possible values: **payment**, **capture**, **captureReversal**, **refund** **refundReversal**, **chargeback**, **chargebackReversal**, **secondChargeback**, **atmWithdrawal**, **atmWithdrawalReversal**, **internalTransfer**, **manualCorrection**, **invoiceDeduction**, **depositCorrection**, **bankTransfer**, **miscCost**, **paymentCost**, **fee**
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransactionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionTypeEnum $type = null;
    
    /**
     * The date the transfer amount becomes available in the balance account.
     * 
     * @var \DateTime $valueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $valueDate;
    
	public function __construct()
	{
		$this->accountHolderId = "";
		$this->amount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->balanceAccountId = "";
		$this->balancePlatform = "";
		$this->bookingDate = new \DateTime();
		$this->category = null;
		$this->counterparty = new \OpenAPI\OpenAPI\Models\Shared\Counterparty();
		$this->createdAt = new \DateTime();
		$this->description = null;
		$this->id = "";
		$this->instructedAmount = null;
		$this->paymentInstrumentId = null;
		$this->reference = "";
		$this->referenceForBeneficiary = null;
		$this->status = \OpenAPI\OpenAPI\Models\Shared\TransactionStatusEnum::BOOKED;
		$this->transferId = null;
		$this->type = null;
		$this->valueDate = new \DateTime();
	}
}
