// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FilterOperationEnum string

const (
	FilterOperationEnumEq     FilterOperationEnum = "EQ"
	FilterOperationEnumLt     FilterOperationEnum = "LT"
	FilterOperationEnumGt     FilterOperationEnum = "GT"
	FilterOperationEnumLte    FilterOperationEnum = "LTE"
	FilterOperationEnumGte    FilterOperationEnum = "GTE"
	FilterOperationEnumRegex  FilterOperationEnum = "REGEX"
	FilterOperationEnumIsnull FilterOperationEnum = "ISNULL"
)

func (e FilterOperationEnum) ToPointer() *FilterOperationEnum {
	return &e
}

func (e *FilterOperationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EQ":
		fallthrough
	case "LT":
		fallthrough
	case "GT":
		fallthrough
	case "LTE":
		fallthrough
	case "GTE":
		fallthrough
	case "REGEX":
		fallthrough
	case "ISNULL":
		*e = FilterOperationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FilterOperationEnum: %v", v)
	}
}
