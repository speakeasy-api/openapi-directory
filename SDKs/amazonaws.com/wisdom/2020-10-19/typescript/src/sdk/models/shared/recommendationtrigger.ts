/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecommendationSourceTypeEnum } from "./recommendationsourcetypeenum";
import { RecommendationTriggerData } from "./recommendationtriggerdata";
import { RecommendationTriggerTypeEnum } from "./recommendationtriggertypeenum";
import { Expose, Type } from "class-transformer";

/**
 * A recommendation trigger provides context on the event that produced the referenced recommendations. Recommendations are only referenced in <code>recommendationIds</code> by a single RecommendationTrigger.
 */
export class RecommendationTrigger extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => RecommendationTriggerData)
  data: RecommendationTriggerData;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendationIds" })
  recommendationIds: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source: RecommendationSourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: RecommendationTriggerTypeEnum;
}
