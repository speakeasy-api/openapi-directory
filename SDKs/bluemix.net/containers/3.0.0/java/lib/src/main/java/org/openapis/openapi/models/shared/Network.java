/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Network {
    /**
     * Alternative name of the private container network the container is connected to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Aliases")
    public String aliases;
    public Network withAliases(String aliases) {
        this.aliases = aliases;
        return this;
    }
    
    /**
     * Unique ID representing a container.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EndpointID")
    public String endpointID;
    public Network withEndpointID(String endpointID) {
        this.endpointID = endpointID;
        return this;
    }
    
    /**
     * The private IP address of the network gateway in IPv4 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Gateway")
    public String gateway;
    public Network withGateway(String gateway) {
        this.gateway = gateway;
        return this;
    }
    
    /**
     * Private IP address of the container in IPv6 format. IBM Containers only supports IPv4 format. This attribute is returned as empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalIPv6Address")
    public String globalIPv6Address;
    public Network withGlobalIPv6Address(String globalIPv6Address) {
        this.globalIPv6Address = globalIPv6Address;
        return this;
    }
    
    /**
     * Not supported by IBM Containers, empty string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalIPv6PrefixLen")
    public Long globalIPv6PrefixLen;
    public Network withGlobalIPv6PrefixLen(Long globalIPv6PrefixLen) {
        this.globalIPv6PrefixLen = globalIPv6PrefixLen;
        return this;
    }
    
    /**
     * Specific configurations for the network driver.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IPAMConfig")
    public String ipamConfig;
    public Network withIPAMConfig(String ipamConfig) {
        this.ipamConfig = ipamConfig;
        return this;
    }
    
    /**
     * The prefix of the subnet in the private container network. The prefix indicates that 16 bits out of 32 bits are used to address the network. As every IPv4 IP adress consists of 32 bits, the last 16 bits are used to assign private IP addresses to the container. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IPPrefixLen")
    public String ipPrefixLen;
    public Network withIPPrefixLen(String ipPrefixLen) {
        this.ipPrefixLen = ipPrefixLen;
        return this;
    }
    
    /**
     * The private IP address of the network gateway in IPv6 format. IBM Containers only supports IPv4 format. This attribute is returned as empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IPv6Gateway")
    public String iPv6Gateway;
    public Network withIPv6Gateway(String iPv6Gateway) {
        this.iPv6Gateway = iPv6Gateway;
        return this;
    }
    
    /**
     * List of container names that are linked to the container. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Links")
    public String links;
    public Network withLinks(String links) {
        this.links = links;
        return this;
    }
    
    /**
     * The MAC address that is assigned to the container.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MacAddress")
    public String macAddress;
    public Network withMacAddress(String macAddress) {
        this.macAddress = macAddress;
        return this;
    }
    
    /**
     * Unique identifier representing the private container network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NetworkID")
    public String networkID;
    public Network withNetworkID(String networkID) {
        this.networkID = networkID;
        return this;
    }
    
}
