"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createaliasmodel as shared_createaliasmodel
from ..shared import createaliasresponsemodel as shared_createaliasresponsemodel
from typing import Optional


@dataclasses.dataclass
class CreateAliasSecurity:
    
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-api-key' }})  
    

@dataclasses.dataclass
class CreateAliasRequest:
    
    create_alias_model: shared_createaliasmodel.CreateAliasModel = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""alias properties"""  
    alias_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'aliasName', 'style': 'form', 'explode': True }})
    r"""alias (without `/` at the beginning)"""  
    domain_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'domainName', 'style': 'form', 'explode': True }})
    r"""domain which alias will belong to (string without `http/https` or `/`)"""  
    

@dataclasses.dataclass
class CreateAliasResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_alias_response_model: Optional[shared_createaliasresponsemodel.CreateAliasResponseModel] = dataclasses.field(default=None)
    r"""Response contains aliasName, domainName and full generated short link"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    