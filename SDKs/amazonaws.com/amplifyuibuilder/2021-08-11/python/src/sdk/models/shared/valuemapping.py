"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import forminputvalueproperty as shared_forminputvalueproperty
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ValueMapping:
    r"""Associates a complex object with a display value. Use <code>ValueMapping</code> to store how to represent complex objects when they are displayed."""
    
    value: shared_forminputvalueproperty.FormInputValueProperty = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})  
    display_value: Optional[shared_forminputvalueproperty.FormInputValueProperty] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayValue'), 'exclude': lambda f: f is None }})  
    