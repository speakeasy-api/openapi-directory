/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrderedJob - A job executed by the workflow.
 */
public class OrderedJob {
    /**
     * A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hadoopJob")
    public HadoopJob hadoopJob;

    public OrderedJob withHadoopJob(HadoopJob hadoopJob) {
        this.hadoopJob = hadoopJob;
        return this;
    }
    
    /**
     * A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hiveJob")
    public HiveJob hiveJob;

    public OrderedJob withHiveJob(HiveJob hiveJob) {
        this.hiveJob = hiveJob;
        return this;
    }
    
    /**
     * Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \p{Ll}\p{Lo}\p{N}_-{0,63}No more than 32 labels can be associated with a given job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public OrderedJob withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pigJob")
    public PigJob pigJob;

    public OrderedJob withPigJob(PigJob pigJob) {
        this.pigJob = pigJob;
        return this;
    }
    
    /**
     * Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prerequisiteStepIds")
    public String[] prerequisiteStepIds;

    public OrderedJob withPrerequisiteStepIds(String[] prerequisiteStepIds) {
        this.prerequisiteStepIds = prerequisiteStepIds;
        return this;
    }
    
    /**
     * A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prestoJob")
    public PrestoJob prestoJob;

    public OrderedJob withPrestoJob(PrestoJob prestoJob) {
        this.prestoJob = prestoJob;
        return this;
    }
    
    /**
     * A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pysparkJob")
    public PySparkJob pysparkJob;

    public OrderedJob withPysparkJob(PySparkJob pysparkJob) {
        this.pysparkJob = pysparkJob;
        return this;
    }
    
    /**
     * Job scheduling options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduling")
    public JobScheduling scheduling;

    public OrderedJob withScheduling(JobScheduling scheduling) {
        this.scheduling = scheduling;
        return this;
    }
    
    /**
     * A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sparkJob")
    public SparkJob sparkJob;

    public OrderedJob withSparkJob(SparkJob sparkJob) {
        this.sparkJob = sparkJob;
        return this;
    }
    
    /**
     * A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sparkRJob")
    public SparkRJob sparkRJob;

    public OrderedJob withSparkRJob(SparkRJob sparkRJob) {
        this.sparkRJob = sparkRJob;
        return this;
    }
    
    /**
     * A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sparkSqlJob")
    public SparkSqlJob sparkSqlJob;

    public OrderedJob withSparkSqlJob(SparkSqlJob sparkSqlJob) {
        this.sparkSqlJob = sparkSqlJob;
        return this;
    }
    
    /**
     * Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stepId")
    public String stepId;

    public OrderedJob withStepId(String stepId) {
        this.stepId = stepId;
        return this;
    }
    
    /**
     * A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trinoJob")
    public TrinoJob trinoJob;

    public OrderedJob withTrinoJob(TrinoJob trinoJob) {
        this.trinoJob = trinoJob;
        return this;
    }
    
    public OrderedJob(){}
}
