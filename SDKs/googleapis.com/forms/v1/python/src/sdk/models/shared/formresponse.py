"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import answer as shared_answer
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FormResponse:
    r"""A form response."""
    
    answers: Optional[dict[str, shared_answer.Answer]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answers'), 'exclude': lambda f: f is None }})
    r"""Output only. The actual answers to the questions, keyed by question_id."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Timestamp for the first time the response was submitted."""  
    form_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formId'), 'exclude': lambda f: f is None }})
    r"""Output only. The form ID."""  
    last_submitted_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastSubmittedTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Timestamp for the most recent time the response was submitted. Does not track changes to grades."""  
    respondent_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('respondentEmail'), 'exclude': lambda f: f is None }})
    r"""Output only. The email address (if collected) for the respondent."""  
    response_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseId'), 'exclude': lambda f: f is None }})
    r"""Output only. The response ID."""  
    total_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalScore'), 'exclude': lambda f: f is None }})
    r"""Output only. The total number of points the respondent received for their submission Only set if the form was a quiz and the response was graded. This includes points automatically awarded via autograding adjusted by any manual corrections entered by the form owner."""  
    