/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Type of entity related to the tag
 */
export enum TagsGetTypeEnum {
  Tp = "tp",
  Tl = "tl",
  Dp = "dp",
  Gr = "gr",
}

export class TagsGetRequest extends SpeakeasyBase {
  /**
   * Comma separated list of datapoints id to filter by
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=datapoints",
  })
  datapoints?: string;

  /**
   * Comma separated list of groups id to filter by
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=groups",
  })
  groups?: string;

  /**
   * Maximum elements to retrieve. Default to 20 if not specified.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Name of the tag
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Where to start when retrieving elements. Default is 0 if not specified.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Type of entity related to the tag
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: TagsGetTypeEnum;
}

export class TagsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64?: shared.ApiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
