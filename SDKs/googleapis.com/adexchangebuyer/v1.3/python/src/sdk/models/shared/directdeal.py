"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DirectDeal:
    r"""The configuration data for an Ad Exchange direct deal."""
    
    account_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""The account id of the buyer this deal is for."""  
    advertiser: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiser'), 'exclude': lambda f: f is None }})
    r"""The name of the advertiser this deal is for."""  
    allows_alcohol: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowsAlcohol'), 'exclude': lambda f: f is None }})
    r"""Whether the publisher for this deal is eligible for alcohol ads."""  
    buyer_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buyerAccountId'), 'exclude': lambda f: f is None }})
    r"""The account id that this deal was negotiated for. It is either the buyer or the client that this deal was negotiated on behalf of."""  
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode'), 'exclude': lambda f: f is None }})
    r"""The currency code that applies to the fixed_cpm value. If not set then assumed to be USD."""  
    deal_tier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dealTier'), 'exclude': lambda f: f is None }})
    r"""The deal type such as programmatic reservation or fixed price and so on."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""End time for when this deal stops being active. If not set then this deal is valid until manually disabled by the publisher. In seconds since the epoch."""  
    fixed_cpm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedCpm'), 'exclude': lambda f: f is None }})
    r"""The fixed price for this direct deal. In cpm micros of currency according to currency_code. If set, then this deal is eligible for the fixed price tier of buying (highest priority, pay exactly the configured fixed price)."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Deal id."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Resource type."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Deal name."""  
    private_exchange_min_cpm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privateExchangeMinCpm'), 'exclude': lambda f: f is None }})
    r"""The minimum price for this direct deal. In cpm micros of currency according to currency_code. If set, then this deal is eligible for the private exchange tier of buying (below fixed price priority, run as a second price auction)."""  
    publisher_blocks_overriden: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisherBlocksOverriden'), 'exclude': lambda f: f is None }})
    r"""If true, the publisher has opted to have their blocks ignored when a creative is bid with for this deal."""  
    seller_network: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellerNetwork'), 'exclude': lambda f: f is None }})
    r"""The name of the publisher offering this direct deal."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Start time for when this deal becomes active. If not set then this deal is active immediately upon creation. In seconds since the epoch."""  
    