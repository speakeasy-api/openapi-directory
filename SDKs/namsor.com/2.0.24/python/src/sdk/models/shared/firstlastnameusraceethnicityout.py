"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FirstLastNameUSRaceEthnicityOutRaceEthnicityEnum(str, Enum):
    r"""Most likely US 'race'/ethnicity"""
    W_NL = 'W_NL'
    HL = 'HL'
    A = 'A'
    B_NL = 'B_NL'
    AI_AN = 'AI_AN'
    PI = 'PI'

class FirstLastNameUSRaceEthnicityOutRaceEthnicityAltEnum(str, Enum):
    r"""Second most likely US 'race'/ethnicity"""
    W_NL = 'W_NL'
    HL = 'HL'
    A = 'A'
    B_NL = 'B_NL'
    AI_AN = 'AI_AN'
    PI = 'PI'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FirstLastNameUSRaceEthnicityOut:
    r"""Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code."""
    
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName'), 'exclude': lambda f: f is None }})
    r"""The first name (also known as given name)"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName'), 'exclude': lambda f: f is None }})
    r"""The last name (also known as family name, or surname)"""  
    probability_alt_calibrated: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('probabilityAltCalibrated'), 'exclude': lambda f: f is None }})
    r"""The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating."""  
    probability_calibrated: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('probabilityCalibrated'), 'exclude': lambda f: f is None }})
    r"""The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating."""  
    race_ethnicities_top: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('raceEthnicitiesTop'), 'exclude': lambda f: f is None }})
    r"""List 'race'/ethnicities"""  
    race_ethnicity: Optional[FirstLastNameUSRaceEthnicityOutRaceEthnicityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('raceEthnicity'), 'exclude': lambda f: f is None }})
    r"""Most likely US 'race'/ethnicity"""  
    race_ethnicity_alt: Optional[FirstLastNameUSRaceEthnicityOutRaceEthnicityAltEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('raceEthnicityAlt'), 'exclude': lambda f: f is None }})
    r"""Second most likely US 'race'/ethnicity"""  
    score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score'), 'exclude': lambda f: f is None }})
    r"""Higher score is better, but score is not normalized. Use calibratedProbability if available."""  
    script: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('script'), 'exclude': lambda f: f is None }})  
    