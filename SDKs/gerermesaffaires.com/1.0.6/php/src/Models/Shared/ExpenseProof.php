<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ExpenseProof
{
	#[\JMS\Serializer\Annotation\SerializedName('Account')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ExpenseProofAccountEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExpenseProofAccountEnum $account = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ArchivalDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $archivalDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Author')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $author = null;
    
    /**
     * $class
     * 
     * @var ?array<string> $class
     */
	#[\JMS\Serializer\Annotation\SerializedName('Class')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $class = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $code = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $date = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ExpenseDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expenseDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Extension')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $extension = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('FolderDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $folderDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('InclVAT')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $inclVAT = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Provider')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $provider = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ExpenseProofStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExpenseProofStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('VAT')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $vat = null;
    
	public function __construct()
	{
		$this->account = null;
		$this->archivalDate = null;
		$this->author = null;
		$this->class = null;
		$this->code = null;
		$this->comment = null;
		$this->date = null;
		$this->expenseDate = null;
		$this->extension = null;
		$this->folderDate = null;
		$this->id = null;
		$this->inclVAT = null;
		$this->provider = null;
		$this->reason = null;
		$this->status = null;
		$this->title = null;
		$this->vat = null;
	}
}
