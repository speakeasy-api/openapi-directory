/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class DashboardIMSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class DashboardIMRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;
}

export class DashboardIm200ApplicationXMLUsers extends SpeakeasyBase {
  /**
   * Total number of instant meeting calls received by the user.
   */
  @SpeakeasyMetadata()
  callsReceive?: number;

  /**
   * Total number of instant meeting calls made by the user.
   */
  @SpeakeasyMetadata()
  callsSend?: number;

  /**
   * User email.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Total number of emojis received by the user.
   */
  @SpeakeasyMetadata()
  emojiReceive?: number;

  /**
   * Total number of emojis sent by the user.
   */
  @SpeakeasyMetadata()
  emojiSend?: number;

  /**
   * Total number of files received by the user.
   */
  @SpeakeasyMetadata()
  filesReceive?: number;

  /**
   * Total number of files sent by the user.
   */
  @SpeakeasyMetadata()
  filesSend?: number;

  /**
   * Total number of messages received by the user in channels.
   */
  @SpeakeasyMetadata()
  groupReceive?: number;

  /**
   * Total number of messages sent by the user in channels.
   */
  @SpeakeasyMetadata()
  groupSend?: number;

  /**
   * Total number of images received by the user.
   */
  @SpeakeasyMetadata()
  imagesReceive?: number;

  /**
   * Total number of images sent by the user.
   */
  @SpeakeasyMetadata()
  imagesSend?: number;

  /**
   * Total number of messages received by the user.
   */
  @SpeakeasyMetadata()
  totalReceive?: number;

  /**
   * Total number of messages sent by the user.
   */
  @SpeakeasyMetadata()
  totalSend?: number;

  /**
   * User ID.
   */
  @SpeakeasyMetadata()
  userId?: string;

  /**
   * User display name.
   */
  @SpeakeasyMetadata()
  userName?: string;

  /**
   * Total number of video files received by the user.
   */
  @SpeakeasyMetadata()
  videosReceive?: number;

  /**
   * Total number of video files sent by the user.
   */
  @SpeakeasyMetadata()
  videosSend?: number;

  /**
   * Total number of voice files received by the user.
   */
  @SpeakeasyMetadata()
  voiceReceive?: number;

  /**
   * Total number of voice files sent by the user.
   */
  @SpeakeasyMetadata()
  voiceSend?: number;
}

/**
 * Pagination object.
 */
export class DashboardIm200ApplicationXML extends SpeakeasyBase {
  /**
   * Start date for this report.
   */
  @SpeakeasyMetadata()
  from?: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  pageCount?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * End date for this report.
   */
  @SpeakeasyMetadata()
  to?: Date;

  /**
   * The number of all records available across pages.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;

  @SpeakeasyMetadata({ elemType: DashboardIm200ApplicationXMLUsers })
  users?: DashboardIm200ApplicationXMLUsers[];
}

export class DashboardIm200ApplicationJSONUsers extends SpeakeasyBase {
  /**
   * Total number of instant meeting calls received by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calls_receive" })
  callsReceive?: number;

  /**
   * Total number of instant meeting calls made by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calls_send" })
  callsSend?: number;

  /**
   * User email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Total number of emojis received by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emoji_receive" })
  emojiReceive?: number;

  /**
   * Total number of emojis sent by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emoji_send" })
  emojiSend?: number;

  /**
   * Total number of files received by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "files_receive" })
  filesReceive?: number;

  /**
   * Total number of files sent by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "files_send" })
  filesSend?: number;

  /**
   * Total number of messages received by the user in channels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_receive" })
  groupReceive?: number;

  /**
   * Total number of messages sent by the user in channels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_send" })
  groupSend?: number;

  /**
   * Total number of images received by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "images_receive" })
  imagesReceive?: number;

  /**
   * Total number of images sent by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "images_send" })
  imagesSend?: number;

  /**
   * Total number of messages received by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_receive" })
  totalReceive?: number;

  /**
   * Total number of messages sent by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_send" })
  totalSend?: number;

  /**
   * User ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;

  /**
   * User display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName?: string;

  /**
   * Total number of video files received by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videos_receive" })
  videosReceive?: number;

  /**
   * Total number of video files sent by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videos_send" })
  videosSend?: number;

  /**
   * Total number of voice files received by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_receive" })
  voiceReceive?: number;

  /**
   * Total number of voice files sent by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_send" })
  voiceSend?: number;
}

/**
 * Pagination object.
 */
export class DashboardIm200ApplicationJSON extends SpeakeasyBase {
  /**
   * Start date for this report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * End date for this report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;

  /**
   * The number of all records available across pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;

  @SpeakeasyMetadata({ elemType: DashboardIm200ApplicationJSONUsers })
  @Expose({ name: "users" })
  @Type(() => DashboardIm200ApplicationJSONUsers)
  users?: DashboardIm200ApplicationJSONUsers[];
}

export class DashboardIMResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * IM details returned.<br>
   * Only available for paid accounts that have enabled the dashboard feature.
   */
  @SpeakeasyMetadata()
  dashboardIM200ApplicationJSONObject?: DashboardIm200ApplicationJSON;
}
