/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaskCreateDTO - Created new task for a given project.
 */
public class TaskCreateDTO {
    /**
     * client task PO number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientTaskPONumber")
    public String clientTaskPONumber;

    public TaskCreateDTO withClientTaskPONumber(String clientTaskPONumber) {
        this.clientTaskPONumber = clientTaskPONumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dates")
    public ProjectDatesDTO dates;

    public TaskCreateDTO withDates(ProjectDatesDTO dates) {
        this.dates = dates;
        return this;
    }
    
    /**
     * files
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("files")
    public TaskFileDTO[] files;

    public TaskCreateDTO withFiles(TaskFileDTO[] files) {
        this.files = files;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instructions")
    public InstructionsDTO instructions;

    public TaskCreateDTO withInstructions(InstructionsDTO instructions) {
        this.instructions = instructions;
        return this;
    }
    
    /**
     * language combination (ie. PL -&gt; EN)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCombination")
    public CommonLanguageCombinationDTO languageCombination;

    public TaskCreateDTO withLanguageCombination(CommonLanguageCombinationDTO languageCombination) {
        this.languageCombination = languageCombination;
        return this;
    }
    
    /**
     * name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public TaskCreateDTO withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * people
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("people")
    public ClassicPeopleDTO people;

    public TaskCreateDTO withPeople(ClassicPeopleDTO people) {
        this.people = people;
        return this;
    }
    
    /**
     * specialization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specializationId")
    public Long specializationId;

    public TaskCreateDTO withSpecializationId(Long specializationId) {
        this.specializationId = specializationId;
        return this;
    }
    
    /**
     * workflow
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowId")
    public Long workflowId;

    public TaskCreateDTO withWorkflowId(Long workflowId) {
        this.workflowId = workflowId;
        return this;
    }
    
    public TaskCreateDTO(){}
}
