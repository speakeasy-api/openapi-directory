/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetMePlaylistsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  authHeader: string;
}

export class GetMePlaylistsRequest extends SpeakeasyBase {
  /**
   * Number of results to return in the collection.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;
}

export class GetMePlaylistsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: shared.Playlist })
  playlistsArray?: shared.Playlist[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
