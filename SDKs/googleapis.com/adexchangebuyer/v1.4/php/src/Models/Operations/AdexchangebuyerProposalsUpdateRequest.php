<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class AdexchangebuyerProposalsUpdateRequest
{
	#[SpeakeasyMetadata('request:mediaType=application/json')]
    public ?\OpenAPI\OpenAPI\Models\Shared\Proposal $proposal = null;
    
    /**
     * Data format for the response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alt')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt = null;
    
    /**
     * Selector specifying which fields to include in a partial response.
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * 
     * @var ?string $key
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=key')]
    public ?string $key = null;
    
    /**
     * OAuth 2.0 token for the current user.
     * 
     * @var ?string $oauthToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=oauth_token')]
    public ?string $oauthToken = null;
    
    /**
     * Returns response with indentations and line breaks.
     * 
     * @var ?bool $prettyPrint
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=prettyPrint')]
    public ?bool $prettyPrint = null;
    
    /**
     * The proposal id to update.
     * 
     * @var string $proposalId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=proposalId')]
    public string $proposalId;
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * 
     * @var ?string $quotaUser
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=quotaUser')]
    public ?string $quotaUser = null;
    
    /**
     * The last known revision number to update. If the head revision in the marketplace database has since changed, an error will be thrown. The caller should then fetch the latest proposal at head revision and retry the update at that revision.
     * 
     * @var string $revisionNumber
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=revisionNumber')]
    public string $revisionNumber;
    
    /**
     * The proposed action to take on the proposal. This field is required and it must be set when updating a proposal.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\AdexchangebuyerProposalsUpdateUpdateActionEnum $updateAction
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=updateAction')]
    public AdexchangebuyerProposalsUpdateUpdateActionEnum $updateAction;
    
    /**
     * Deprecated. Please use quotaUser instead.
     * 
     * @var ?string $userIp
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=userIp')]
    public ?string $userIp = null;
    
	public function __construct()
	{
		$this->proposal = null;
		$this->alt = null;
		$this->fields = null;
		$this->key = null;
		$this->oauthToken = null;
		$this->prettyPrint = null;
		$this->proposalId = "";
		$this->quotaUser = null;
		$this->revisionNumber = "";
		$this->updateAction = \OpenAPI\OpenAPI\Models\Operations\AdexchangebuyerProposalsUpdateUpdateActionEnum::ACCEPT;
		$this->userIp = null;
	}
}
