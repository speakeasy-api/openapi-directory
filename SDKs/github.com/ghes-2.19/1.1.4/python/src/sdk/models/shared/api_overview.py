"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIOverview:
    r"""Api Overview"""
    
    verifiable_password_authentication: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verifiable_password_authentication') }})  
    dependabot: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dependabot'), 'exclude': lambda f: f is None }})  
    github_services_sha: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('github_services_sha'), 'exclude': lambda f: f is None }})  
    installed_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installed_version'), 'exclude': lambda f: f is None }})  
    packages: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packages'), 'exclude': lambda f: f is None }})  
    