"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Target = void 0;
var utils_1 = require("../../../internal/utils");
var batchparameters_1 = require("./batchparameters");
var deadletterconfig_1 = require("./deadletterconfig");
var ecsparameters_1 = require("./ecsparameters");
var httpparameters_1 = require("./httpparameters");
var inputtransformer_1 = require("./inputtransformer");
var kinesisparameters_1 = require("./kinesisparameters");
var redshiftdataparameters_1 = require("./redshiftdataparameters");
var retrypolicy_1 = require("./retrypolicy");
var runcommandparameters_1 = require("./runcommandparameters");
var sagemakerpipelineparameters_1 = require("./sagemakerpipelineparameters");
var sqsparameters_1 = require("./sqsparameters");
var class_transformer_1 = require("class-transformer");
/**
 * <p>Targets are the resources to be invoked when a rule is triggered. For a complete list of services and resources that can be set as a target, see <a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutTargets.html">PutTargets</a>.</p> <p>If you are setting the event bus of another account as the target, and that account granted permission to your account through an organization instead of directly by the account ID, then you must specify a <code>RoleArn</code> with proper permissions in the <code>Target</code> structure. For more information, see <a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html">Sending and Receiving Events Between Amazon Web Services Accounts</a> in the <i>Amazon EventBridge User Guide</i>.</p>
 */
var Target = /** @class */ (function (_super) {
    __extends(Target, _super);
    function Target() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Arn" }),
        __metadata("design:type", String)
    ], Target.prototype, "arn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BatchParameters" }),
        (0, class_transformer_1.Type)(function () { return batchparameters_1.BatchParameters; }),
        __metadata("design:type", batchparameters_1.BatchParameters)
    ], Target.prototype, "batchParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DeadLetterConfig" }),
        (0, class_transformer_1.Type)(function () { return deadletterconfig_1.DeadLetterConfig; }),
        __metadata("design:type", deadletterconfig_1.DeadLetterConfig)
    ], Target.prototype, "deadLetterConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EcsParameters" }),
        (0, class_transformer_1.Type)(function () { return ecsparameters_1.EcsParameters; }),
        __metadata("design:type", ecsparameters_1.EcsParameters)
    ], Target.prototype, "ecsParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "HttpParameters" }),
        (0, class_transformer_1.Type)(function () { return httpparameters_1.HttpParameters; }),
        __metadata("design:type", httpparameters_1.HttpParameters)
    ], Target.prototype, "httpParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Id" }),
        __metadata("design:type", String)
    ], Target.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Input" }),
        __metadata("design:type", String)
    ], Target.prototype, "input", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InputPath" }),
        __metadata("design:type", String)
    ], Target.prototype, "inputPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InputTransformer" }),
        (0, class_transformer_1.Type)(function () { return inputtransformer_1.InputTransformer; }),
        __metadata("design:type", inputtransformer_1.InputTransformer)
    ], Target.prototype, "inputTransformer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "KinesisParameters" }),
        (0, class_transformer_1.Type)(function () { return kinesisparameters_1.KinesisParameters; }),
        __metadata("design:type", kinesisparameters_1.KinesisParameters)
    ], Target.prototype, "kinesisParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RedshiftDataParameters" }),
        (0, class_transformer_1.Type)(function () { return redshiftdataparameters_1.RedshiftDataParameters; }),
        __metadata("design:type", redshiftdataparameters_1.RedshiftDataParameters)
    ], Target.prototype, "redshiftDataParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RetryPolicy" }),
        (0, class_transformer_1.Type)(function () { return retrypolicy_1.RetryPolicy; }),
        __metadata("design:type", retrypolicy_1.RetryPolicy)
    ], Target.prototype, "retryPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RoleArn" }),
        __metadata("design:type", String)
    ], Target.prototype, "roleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RunCommandParameters" }),
        (0, class_transformer_1.Type)(function () { return runcommandparameters_1.RunCommandParameters; }),
        __metadata("design:type", runcommandparameters_1.RunCommandParameters)
    ], Target.prototype, "runCommandParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SageMakerPipelineParameters" }),
        (0, class_transformer_1.Type)(function () { return sagemakerpipelineparameters_1.SageMakerPipelineParameters; }),
        __metadata("design:type", sagemakerpipelineparameters_1.SageMakerPipelineParameters)
    ], Target.prototype, "sageMakerPipelineParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SqsParameters" }),
        (0, class_transformer_1.Type)(function () { return sqsparameters_1.SqsParameters; }),
        __metadata("design:type", sqsparameters_1.SqsParameters)
    ], Target.prototype, "sqsParameters", void 0);
    return Target;
}(utils_1.SpeakeasyBase));
exports.Target = Target;
