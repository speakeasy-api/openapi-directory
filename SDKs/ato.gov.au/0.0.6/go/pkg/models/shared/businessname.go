// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// BusinessNameLifecycleStateEnum - The business name's lifecycle state.
type BusinessNameLifecycleStateEnum string

const (
	BusinessNameLifecycleStateEnumApproved        BusinessNameLifecycleStateEnum = "Approved"
	BusinessNameLifecycleStateEnumExpired         BusinessNameLifecycleStateEnum = "Expired"
	BusinessNameLifecycleStateEnumIssued          BusinessNameLifecycleStateEnum = "Issued"
	BusinessNameLifecycleStateEnumPendingApproval BusinessNameLifecycleStateEnum = "Pending Approval"
	BusinessNameLifecycleStateEnumSuspended       BusinessNameLifecycleStateEnum = "Suspended"
)

func (e *BusinessNameLifecycleStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Approved":
		fallthrough
	case "Expired":
		fallthrough
	case "Issued":
		fallthrough
	case "Pending Approval":
		fallthrough
	case "Suspended":
		*e = BusinessNameLifecycleStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BusinessNameLifecycleStateEnum: %s", s)
	}
}

// BusinessNameInput - The Business Name resource.
type BusinessNameInput struct {
	// The business name's lifecycle state.
	LifecycleState *BusinessNameLifecycleStateEnum `json:"lifecycleState,omitempty"`
	// The business name.
	Name *string `json:"name,omitempty"`
}

// BusinessName - The Business Name resource.
type BusinessName struct {
	// The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
	FromDate *time.Time `json:"fromDate,omitempty"`
	// The resource's unique identifier.
	ID *string `json:"id,omitempty"`
	// The business name's lifecycle state.
	LifecycleState *BusinessNameLifecycleStateEnum `json:"lifecycleState,omitempty"`
	// The business name.
	Name *string `json:"name,omitempty"`
	// The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
	ToDate *time.Time `json:"toDate,omitempty"`
}
