"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeIpamScopesResult = exports.DescribeIpamScopesResultIpamScopes = exports.DescribeIpamScopesResultIpamScopesTags = exports.DescribeIpamScopesResultIpamScopesStateEnum = exports.DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The type of the scope.
 */
var DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum;
(function (DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum) {
    DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum["Public"] = "public";
    DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum["Private"] = "private";
})(DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum = exports.DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum || (exports.DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum = {}));
/**
 * The state of the IPAM scope.
 */
var DescribeIpamScopesResultIpamScopesStateEnum;
(function (DescribeIpamScopesResultIpamScopesStateEnum) {
    DescribeIpamScopesResultIpamScopesStateEnum["CreateInProgress"] = "create-in-progress";
    DescribeIpamScopesResultIpamScopesStateEnum["CreateComplete"] = "create-complete";
    DescribeIpamScopesResultIpamScopesStateEnum["CreateFailed"] = "create-failed";
    DescribeIpamScopesResultIpamScopesStateEnum["ModifyInProgress"] = "modify-in-progress";
    DescribeIpamScopesResultIpamScopesStateEnum["ModifyComplete"] = "modify-complete";
    DescribeIpamScopesResultIpamScopesStateEnum["ModifyFailed"] = "modify-failed";
    DescribeIpamScopesResultIpamScopesStateEnum["DeleteInProgress"] = "delete-in-progress";
    DescribeIpamScopesResultIpamScopesStateEnum["DeleteComplete"] = "delete-complete";
    DescribeIpamScopesResultIpamScopesStateEnum["DeleteFailed"] = "delete-failed";
    DescribeIpamScopesResultIpamScopesStateEnum["IsolateInProgress"] = "isolate-in-progress";
    DescribeIpamScopesResultIpamScopesStateEnum["IsolateComplete"] = "isolate-complete";
    DescribeIpamScopesResultIpamScopesStateEnum["RestoreInProgress"] = "restore-in-progress";
})(DescribeIpamScopesResultIpamScopesStateEnum = exports.DescribeIpamScopesResultIpamScopesStateEnum || (exports.DescribeIpamScopesResultIpamScopesStateEnum = {}));
/**
 * Describes a tag.
 */
var DescribeIpamScopesResultIpamScopesTags = /** @class */ (function (_super) {
    __extends(DescribeIpamScopesResultIpamScopesTags, _super);
    function DescribeIpamScopesResultIpamScopesTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopesTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopesTags.prototype, "value", void 0);
    return DescribeIpamScopesResultIpamScopesTags;
}(utils_1.SpeakeasyBase));
exports.DescribeIpamScopesResultIpamScopesTags = DescribeIpamScopesResultIpamScopesTags;
/**
 * <p>In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/how-it-works-ipam.html">How IPAM works</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>
 */
var DescribeIpamScopesResultIpamScopes = /** @class */ (function (_super) {
    __extends(DescribeIpamScopesResultIpamScopes, _super);
    function DescribeIpamScopesResultIpamScopes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopes.prototype, "ipamArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopes.prototype, "ipamRegion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopes.prototype, "ipamScopeArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopes.prototype, "ipamScopeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopes.prototype, "ipamScopeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeIpamScopesResultIpamScopes.prototype, "isDefault", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopes.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeIpamScopesResultIpamScopes.prototype, "poolCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResultIpamScopes.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeIpamScopesResultIpamScopesTags }),
        __metadata("design:type", Array)
    ], DescribeIpamScopesResultIpamScopes.prototype, "tags", void 0);
    return DescribeIpamScopesResultIpamScopes;
}(utils_1.SpeakeasyBase));
exports.DescribeIpamScopesResultIpamScopes = DescribeIpamScopesResultIpamScopes;
/**
 * Success
 */
var DescribeIpamScopesResult = /** @class */ (function (_super) {
    __extends(DescribeIpamScopesResult, _super);
    function DescribeIpamScopesResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeIpamScopesResultIpamScopes }),
        __metadata("design:type", Array)
    ], DescribeIpamScopesResult.prototype, "ipamScopes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeIpamScopesResult.prototype, "nextToken", void 0);
    return DescribeIpamScopesResult;
}(utils_1.SpeakeasyBase));
exports.DescribeIpamScopesResult = DescribeIpamScopesResult;
