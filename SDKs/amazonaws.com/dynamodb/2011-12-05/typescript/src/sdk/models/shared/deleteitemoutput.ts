/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AttributeValue } from "./attributevalue";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class DeleteItemOutput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AttributeValue })
  @Expose({ name: "Attributes" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, AttributeValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], AttributeValue);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  attributes?: Record<string, AttributeValue>;

  /**
   * The number of Capacity Units of the provisioned throughput of the table consumed during the operation. <code>GetItem</code>, <code>BatchGetItem</code>, <code>BatchWriteItem</code>, <code>Query</code>, and <code>Scan</code> operations consume <code>ReadCapacityUnits</code>, while <code>PutItem</code>, <code>UpdateItem</code>, and <code>DeleteItem</code> operations consume <code>WriteCapacityUnits</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ConsumedCapacityUnits" })
  consumedCapacityUnits?: number;
}
