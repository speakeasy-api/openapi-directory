/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostCategoriesIdCategoryRulesRequestBody extends SpeakeasyBase {
  /**
   * Apply the created category rule to all transactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apply_to_all" })
  applyToAll?: boolean;

  /**
   * Apply the created category rule to all uncategorised transactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apply_to_uncategorised" })
  applyToUncategorised?: boolean;

  /**
   * The keyword/s to match the transaction payees.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payee_matches" })
  payeeMatches: string;
}

export class PostCategoriesIdCategoryRulesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostCategoriesIdCategoryRulesRequestBody;

  /**
   * The unique identifier of the category.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

export class PostCategoriesIdCategoryRulesResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata()
  categoryRule?: shared.CategoryRule;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Not Allowed
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
