// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GroupEmbargoOptionsTypeEnum - Embargo permission type
type GroupEmbargoOptionsTypeEnum string

const (
	GroupEmbargoOptionsTypeEnumLoggedIn      GroupEmbargoOptionsTypeEnum = "logged_in"
	GroupEmbargoOptionsTypeEnumIPRange       GroupEmbargoOptionsTypeEnum = "ip_range"
	GroupEmbargoOptionsTypeEnumAdministrator GroupEmbargoOptionsTypeEnum = "administrator"
)

func (e *GroupEmbargoOptionsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "logged_in":
		fallthrough
	case "ip_range":
		fallthrough
	case "administrator":
		*e = GroupEmbargoOptionsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupEmbargoOptionsTypeEnum: %s", s)
	}
}

type GroupEmbargoOptions struct {
	// Embargo option id
	ID int64 `json:"id"`
	// IP range name; value appears if type is ip_range
	IPName string `json:"ip_name"`
	// Embargo permission type
	Type GroupEmbargoOptionsTypeEnum `json:"type"`
}
