"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from typing import Optional


@dataclasses.dataclass
class HTMLCleanRequestBody:
    
    content: str = dataclasses.field(metadata={'form': { 'field_name': 'content' }})
    r"""The HTML content. This can be either a URL to load from, a file upload (multipart/form-data) or an HTML content string"""  
    output_type: str = dataclasses.field(metadata={'form': { 'field_name': 'output-type' }})
    r"""The level of sanitization, possible values are: <br><b>plain-text</b>: reduce the content to plain text only (no HTML tags at all) <br><b>simple-text</b>: allow only very basic text formatting tags like b, em, i, strong, u <br><b>basic-html</b>: allow advanced text formatting and hyper links <br><b>basic-html-with-images</b>: same as basic html but also allows image tags <br><b>advanced-html</b>: same as basic html with images but also allows many more common HTML tags like table, ul, dl, pre <br>"""  
    

@dataclasses.dataclass
class HTMLCleanResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Your API request has been rejected. Check error code for details"""  
    html_clean_200_application_json_binary_string: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    