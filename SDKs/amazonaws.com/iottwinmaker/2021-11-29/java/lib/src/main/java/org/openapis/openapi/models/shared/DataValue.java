/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DataValue - An object that specifies a value for a property.
 */
public class DataValue {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("booleanValue")
    public Boolean booleanValue;

    public DataValue withBooleanValue(Boolean booleanValue) {
        this.booleanValue = booleanValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doubleValue")
    public Double doubleValue;

    public DataValue withDoubleValue(Double doubleValue) {
        this.doubleValue = doubleValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expression")
    public String expression;

    public DataValue withExpression(String expression) {
        this.expression = expression;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integerValue")
    public Long integerValue;

    public DataValue withIntegerValue(Long integerValue) {
        this.integerValue = integerValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listValue")
    public DataValue[] listValue;

    public DataValue withListValue(DataValue[] listValue) {
        this.listValue = listValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longValue")
    public Long longValue;

    public DataValue withLongValue(Long longValue) {
        this.longValue = longValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mapValue")
    public java.util.Map<String, DataValue> mapValue;

    public DataValue withMapValue(java.util.Map<String, DataValue> mapValue) {
        this.mapValue = mapValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relationshipValue")
    public RelationshipValue relationshipValue;

    public DataValue withRelationshipValue(RelationshipValue relationshipValue) {
        this.relationshipValue = relationshipValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringValue")
    public String stringValue;

    public DataValue withStringValue(String stringValue) {
        this.stringValue = stringValue;
        return this;
    }
    
    public DataValue(){}
}
