// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GroupsGetStatisticsAllListGroupByEnum - The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
type GroupsGetStatisticsAllListGroupByEnum string

const (
	GroupsGetStatisticsAllListGroupByEnumDeleted GroupsGetStatisticsAllListGroupByEnum = "deleted"
	GroupsGetStatisticsAllListGroupByEnumActive  GroupsGetStatisticsAllListGroupByEnum = "active"
)

func (e *GroupsGetStatisticsAllListGroupByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleted":
		fallthrough
	case "active":
		*e = GroupsGetStatisticsAllListGroupByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupsGetStatisticsAllListGroupByEnum: %s", s)
	}
}

// GroupsGetStatisticsAllListTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type GroupsGetStatisticsAllListTimeFrameEnum string

const (
	GroupsGetStatisticsAllListTimeFrameEnumToday         GroupsGetStatisticsAllListTimeFrameEnum = "today"
	GroupsGetStatisticsAllListTimeFrameEnumYesterday     GroupsGetStatisticsAllListTimeFrameEnum = "yesterday"
	GroupsGetStatisticsAllListTimeFrameEnumLast7         GroupsGetStatisticsAllListTimeFrameEnum = "last7"
	GroupsGetStatisticsAllListTimeFrameEnumLast30        GroupsGetStatisticsAllListTimeFrameEnum = "last30"
	GroupsGetStatisticsAllListTimeFrameEnumLastmonth     GroupsGetStatisticsAllListTimeFrameEnum = "lastmonth"
	GroupsGetStatisticsAllListTimeFrameEnumCurrentmonth  GroupsGetStatisticsAllListTimeFrameEnum = "currentmonth"
	GroupsGetStatisticsAllListTimeFrameEnumPreviousmonth GroupsGetStatisticsAllListTimeFrameEnum = "previousmonth"
	GroupsGetStatisticsAllListTimeFrameEnumLast90        GroupsGetStatisticsAllListTimeFrameEnum = "last90"
	GroupsGetStatisticsAllListTimeFrameEnumLast120       GroupsGetStatisticsAllListTimeFrameEnum = "last120"
	GroupsGetStatisticsAllListTimeFrameEnumLast180       GroupsGetStatisticsAllListTimeFrameEnum = "last180"
	GroupsGetStatisticsAllListTimeFrameEnumLast12months  GroupsGetStatisticsAllListTimeFrameEnum = "last12months"
	GroupsGetStatisticsAllListTimeFrameEnumLastyear      GroupsGetStatisticsAllListTimeFrameEnum = "lastyear"
	GroupsGetStatisticsAllListTimeFrameEnumCurrentyear   GroupsGetStatisticsAllListTimeFrameEnum = "currentyear"
	GroupsGetStatisticsAllListTimeFrameEnumBeginning     GroupsGetStatisticsAllListTimeFrameEnum = "beginning"
	GroupsGetStatisticsAllListTimeFrameEnumCustom        GroupsGetStatisticsAllListTimeFrameEnum = "custom"
)

func (e *GroupsGetStatisticsAllListTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = GroupsGetStatisticsAllListTimeFrameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupsGetStatisticsAllListTimeFrameEnum: %s", s)
	}
}

type GroupsGetStatisticsAllListRequest struct {
	// Is the group is marked as favourite
	Favourite *bool `queryParam:"style=form,explode=true,name=favourite"`
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
	GroupBy *GroupsGetStatisticsAllListGroupByEnum `queryParam:"style=form,explode=true,name=groupBy"`
	// Status of group ("deleted"/"active")
	Status *string `queryParam:"style=form,explode=true,name=status"`
	// A comma separated list of tags you want to filter with.
	Tag *string `queryParam:"style=form,explode=true,name=tag"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame GroupsGetStatisticsAllListTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type GroupsGetStatisticsAllListResponse struct {
	APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult *shared.APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
