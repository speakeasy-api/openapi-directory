// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDestinationXAmzTargetEnum
type UpdateDestinationXAmzTargetEnum string

const (
	UpdateDestinationXAmzTargetEnumFirehose20150804UpdateDestination UpdateDestinationXAmzTargetEnum = "Firehose_20150804.UpdateDestination"
)

func (e UpdateDestinationXAmzTargetEnum) ToPointer() *UpdateDestinationXAmzTargetEnum {
	return &e
}

func (e *UpdateDestinationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Firehose_20150804.UpdateDestination":
		*e = UpdateDestinationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDestinationXAmzTargetEnum: %v", v)
	}
}

type UpdateDestinationRequest struct {
	UpdateDestinationInput shared.UpdateDestinationInput   `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             UpdateDestinationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateDestinationResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateDestinationOutput map[string]interface{}
}
