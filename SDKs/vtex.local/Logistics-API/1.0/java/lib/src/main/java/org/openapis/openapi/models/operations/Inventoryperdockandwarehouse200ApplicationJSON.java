/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Inventoryperdockandwarehouse200ApplicationJSON {
    /**
     * Amount of items available for sale. Difference between total quantity and reserved quantity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableQuantity")
    public Long availableQuantity;

    public Inventoryperdockandwarehouse200ApplicationJSON withAvailableQuantity(Long availableQuantity) {
        this.availableQuantity = availableQuantity;
        return this;
    }
    
    /**
     * Date of supply lot in UTC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateOfSupplyUtc")
    public String dateOfSupplyUtc;

    public Inventoryperdockandwarehouse200ApplicationJSON withDateOfSupplyUtc(String dateOfSupplyUtc) {
        this.dateOfSupplyUtc = dateOfSupplyUtc;
        return this;
    }
    
    /**
     * List of delivery channels available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryChannel")
    public String[] deliveryChannel;

    public Inventoryperdockandwarehouse200ApplicationJSON withDeliveryChannel(String[] deliveryChannel) {
        this.deliveryChannel = deliveryChannel;
        return this;
    }
    
    /**
     * Dock ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dockId")
    public String dockId;

    public Inventoryperdockandwarehouse200ApplicationJSON withDockId(String dockId) {
        this.dockId = dockId;
        return this;
    }
    
    /**
     * Indicates whether the SKU's availability is unlimited ("infinite inventory").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isUnlimited")
    public Boolean isUnlimited;

    public Inventoryperdockandwarehouse200ApplicationJSON withIsUnlimited(Boolean isUnlimited) {
        this.isUnlimited = isUnlimited;
        return this;
    }
    
    /**
     * Indicates whether SKU can continue to be sold after the available quantity gets to 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keepSellingAfterExpiration")
    public Boolean keepSellingAfterExpiration;

    public Inventoryperdockandwarehouse200ApplicationJSON withKeepSellingAfterExpiration(Boolean keepSellingAfterExpiration) {
        this.keepSellingAfterExpiration = keepSellingAfterExpiration;
        return this;
    }
    
    /**
     * Reserved quantity of the SKU.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservedQuantity")
    public Long reservedQuantity;

    public Inventoryperdockandwarehouse200ApplicationJSON withReservedQuantity(Long reservedQuantity) {
        this.reservedQuantity = reservedQuantity;
        return this;
    }
    
    /**
     * List of sales channels associated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salesChannel")
    public String[] salesChannel;

    public Inventoryperdockandwarehouse200ApplicationJSON withSalesChannel(String[] salesChannel) {
        this.salesChannel = salesChannel;
        return this;
    }
    
    /**
     * SKU ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skuId")
    public String skuId;

    public Inventoryperdockandwarehouse200ApplicationJSON withSkuId(String skuId) {
        this.skuId = skuId;
        return this;
    }
    
    /**
     * Time to refill (deprecated).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeToRefill")
    public String timeToRefill;

    public Inventoryperdockandwarehouse200ApplicationJSON withTimeToRefill(String timeToRefill) {
        this.timeToRefill = timeToRefill;
        return this;
    }
    
    /**
     * Total quantity of SKU.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalQuantity")
    public Long totalQuantity;

    public Inventoryperdockandwarehouse200ApplicationJSON withTotalQuantity(Long totalQuantity) {
        this.totalQuantity = totalQuantity;
        return this;
    }
    
    /**
     * Transfer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transfer")
    public String transfer;

    public Inventoryperdockandwarehouse200ApplicationJSON withTransfer(String transfer) {
        this.transfer = transfer;
        return this;
    }
    
    /**
     * Warehouse ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warehouseId")
    public String warehouseId;

    public Inventoryperdockandwarehouse200ApplicationJSON withWarehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
        return this;
    }
    
    public Inventoryperdockandwarehouse200ApplicationJSON(){}
}
