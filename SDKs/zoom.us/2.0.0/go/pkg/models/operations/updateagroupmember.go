// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateAGroupMemberSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type UpdateAGroupMemberPathParams struct {
	// Unique Identifier of the group. Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br> To change a member's primary group, provide the groupId of the member's current primary group as the value of this field.<br> To remove a member from one group and move the member to another group, provide the groupId of the group from which the member is to be moved.
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// Unique Identifier of the group member. Can be retrieved by calling the [List Group Members](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groupmembers) API.
	MemberID string `pathParam:"style=simple,explode=false,name=memberId"`
}

// UpdateAGroupMemberApplicationJSONActionEnum - Specify the type of action to be performed:<br><br>
// `move`: Simultaneously remove a member from one group and move the member to a different group.<br>
// `set_primary`: Set a primary group for the user.
type UpdateAGroupMemberApplicationJSONActionEnum string

const (
	UpdateAGroupMemberApplicationJSONActionEnumMove       UpdateAGroupMemberApplicationJSONActionEnum = "move"
	UpdateAGroupMemberApplicationJSONActionEnumSetPrimary UpdateAGroupMemberApplicationJSONActionEnum = "set_primary"
)

func (e *UpdateAGroupMemberApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "move":
		fallthrough
	case "set_primary":
		*e = UpdateAGroupMemberApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAGroupMemberApplicationJSONActionEnum: %s", s)
	}
}

type UpdateAGroupMemberApplicationJSON struct {
	// Specify the type of action to be performed:<br><br>
	// `move`: Simultaneously remove a member from one group and move the member to a different group.<br>
	// `set_primary`: Set a primary group for the user.
	//
	Action UpdateAGroupMemberApplicationJSONActionEnum `json:"action"`
	// Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.<br>
	//
	// To move a user, use this field to specify the groupId of the group where the member is to be moved.<br>
	//
	// To set a primary group for the user, provide the groupId of the group which is going to be the primary group.
	TargetGroupID *string `json:"target_group_id,omitempty"`
}

type UpdateAGroupMemberRequest struct {
	PathParams UpdateAGroupMemberPathParams
	Request    *UpdateAGroupMemberApplicationJSON `request:"mediaType=application/json"`
	Security   UpdateAGroupMemberSecurity
}

type UpdateAGroupMemberResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `204` **No Content**<br>
	// Group member updated.
	UpdateAGroupMember204ApplicationJSONAny interface{}
}
