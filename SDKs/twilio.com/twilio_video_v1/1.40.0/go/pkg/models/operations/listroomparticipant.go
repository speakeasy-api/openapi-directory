// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListRoomParticipantServerList = []string{
	"https://video.twilio.com",
}

type ListRoomParticipantSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListRoomParticipantRequest struct {
	// Read only Participants that started after this date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.
	DateCreatedAfter *time.Time `queryParam:"style=form,explode=true,name=DateCreatedAfter"`
	// Read only Participants that started before this date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#UTC) format.
	DateCreatedBefore *time.Time `queryParam:"style=form,explode=true,name=DateCreatedBefore"`
	// Read only the Participants with this [User](https://www.twilio.com/docs/chat/rest/user-resource) `identity` value.
	Identity *string `queryParam:"style=form,explode=true,name=Identity"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The SID of the room with the Participant resources to read.
	RoomSid string `pathParam:"style=simple,explode=false,name=RoomSid"`
	// Read only the participants with this status. Can be: `connected` or `disconnected`. For `in-progress` Rooms the default Status is `connected`, for `completed` Rooms only `disconnected` Participants are returned.
	Status *shared.RoomParticipantEnumStatusEnum `queryParam:"style=form,explode=true,name=Status"`
}

type ListRoomParticipantListRoomParticipantResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListRoomParticipantListRoomParticipantResponse - OK
type ListRoomParticipantListRoomParticipantResponse struct {
	Meta         *ListRoomParticipantListRoomParticipantResponseMeta `json:"meta,omitempty"`
	Participants []shared.VideoV1RoomRoomParticipant                 `json:"participants,omitempty"`
}

type ListRoomParticipantResponse struct {
	ContentType string
	// OK
	ListRoomParticipantResponse *ListRoomParticipantListRoomParticipantResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
