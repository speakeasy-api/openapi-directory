// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// IDSourceEnum - Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC
type IDSourceEnum string

const (
	IDSourceEnumNsidc IDSourceEnum = "NSIDC"
	IDSourceEnumAde   IDSourceEnum = "ADE"
)

func (e *IDSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NSIDC":
		fallthrough
	case "ADE":
		*e = IDSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for IDSourceEnum: %s", s)
	}
}

type IDRequest struct {
	// Search terms typed into the interface (minimum two characters)
	Q string `queryParam:"style=form,explode=true,name=q"`
	// Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC
	Source IDSourceEnum `queryParam:"style=form,explode=true,name=source"`
}

type IDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ID200ApplicationXSuggestionsPlusJSONString *string
}
