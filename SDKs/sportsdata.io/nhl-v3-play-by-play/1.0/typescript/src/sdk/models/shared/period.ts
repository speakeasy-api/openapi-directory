/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Penalty } from "./penalty";
import { ScoringPlay } from "./scoringplay";
import { Expose, Type } from "class-transformer";

export class Period extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AwayScore" })
  awayScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "GameID" })
  gameID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "HomeScore" })
  homeScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: Penalty })
  @Expose({ name: "Penalties" })
  @Type(() => Penalty)
  penalties?: Penalty[];

  @SpeakeasyMetadata()
  @Expose({ name: "PeriodID" })
  periodID?: number;

  @SpeakeasyMetadata({ elemType: ScoringPlay })
  @Expose({ name: "ScoringPlays" })
  @Type(() => ScoringPlay)
  scoringPlays?: ScoringPlay[];
}
