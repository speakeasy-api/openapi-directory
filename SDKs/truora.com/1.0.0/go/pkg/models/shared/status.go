// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StatusDataSetEnum - Background check dataset
type StatusDataSetEnum string

const (
	StatusDataSetEnumAffiliationsAndInsurances StatusDataSetEnum = "affiliations_and_insurances"
	StatusDataSetEnumAlertInMedia              StatusDataSetEnum = "alert_in_media"
	StatusDataSetEnumBehavior                  StatusDataSetEnum = "behavior"
	StatusDataSetEnumBusinessBackground        StatusDataSetEnum = "business_background"
	StatusDataSetEnumCriminalRecord            StatusDataSetEnum = "criminal_record"
	StatusDataSetEnumDrivingLicenses           StatusDataSetEnum = "driving_licenses"
	StatusDataSetEnumInternationalBackground   StatusDataSetEnum = "international_background"
	StatusDataSetEnumLegalBackground           StatusDataSetEnum = "legal_background"
	StatusDataSetEnumPersonalIdentity          StatusDataSetEnum = "personal_identity"
	StatusDataSetEnumProfessionalBackground    StatusDataSetEnum = "professional_background"
	StatusDataSetEnumTrafficFines              StatusDataSetEnum = "traffic_fines"
	StatusDataSetEnumVehicleInformation        StatusDataSetEnum = "vehicle_information"
	StatusDataSetEnumVehiclePermits            StatusDataSetEnum = "vehicle_permits"
	StatusDataSetEnumTaxesAndFinances          StatusDataSetEnum = "taxes_and_finances"
)

func (e StatusDataSetEnum) ToPointer() *StatusDataSetEnum {
	return &e
}

func (e *StatusDataSetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "affiliations_and_insurances":
		fallthrough
	case "alert_in_media":
		fallthrough
	case "behavior":
		fallthrough
	case "business_background":
		fallthrough
	case "criminal_record":
		fallthrough
	case "driving_licenses":
		fallthrough
	case "international_background":
		fallthrough
	case "legal_background":
		fallthrough
	case "personal_identity":
		fallthrough
	case "professional_background":
		fallthrough
	case "traffic_fines":
		fallthrough
	case "vehicle_information":
		fallthrough
	case "vehicle_permits":
		fallthrough
	case "taxes_and_finances":
		*e = StatusDataSetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusDataSetEnum: %v", v)
	}
}

// StatusStatusEnum - Result status of the background check. **Not_started** means the background check is still in queue, since there is a limit of background checks that can be processed simultaneously, **completed** means the search finished successfully, **error** means the search failed, **expired** means the search took too long to finish and therefore failed, **skipped** means the search failed because a wrong number or type of parameters was provided, **delayed** means the search is waiting for an additional requirement to be met and can last up to 3 days
type StatusStatusEnum string

const (
	StatusStatusEnumNotStarted StatusStatusEnum = "not_started"
	StatusStatusEnumCompleted  StatusStatusEnum = "completed"
	StatusStatusEnumExpired    StatusStatusEnum = "expired"
	StatusStatusEnumError      StatusStatusEnum = "error"
	StatusStatusEnumDelayed    StatusStatusEnum = "delayed"
	StatusStatusEnumSkipped    StatusStatusEnum = "skipped"
)

func (e StatusStatusEnum) ToPointer() *StatusStatusEnum {
	return &e
}

func (e *StatusStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "not_started":
		fallthrough
	case "completed":
		fallthrough
	case "expired":
		fallthrough
	case "error":
		fallthrough
	case "delayed":
		fallthrough
	case "skipped":
		*e = StatusStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusStatusEnum: %v", v)
	}
}

// Status - Represents the status of databases used to generate background checks
type Status struct {
	// Background check dataset
	DataSet *StatusDataSetEnum `json:"data_set,omitempty"`
	// Database ID. Can be used to verify the database status
	DatabaseID *string `json:"database_id,omitempty"`
	// Background check database name. Do not use this field to identify the database as it may change during the check execution. Use database_id instead
	DatabaseName *string `json:"database_name,omitempty"`
	// List of missing or invalid inputs
	InvalidInputs []string `json:"invalid_inputs,omitempty"`
	// Result status of the background check. **Not_started** means the background check is still in queue, since there is a limit of background checks that can be processed simultaneously, **completed** means the search finished successfully, **error** means the search failed, **expired** means the search took too long to finish and therefore failed, **skipped** means the search failed because a wrong number or type of parameters was provided, **delayed** means the search is waiting for an additional requirement to be met and can last up to 3 days
	Status *StatusStatusEnum `json:"status,omitempty"`
}
