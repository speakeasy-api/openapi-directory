"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_v2010_account_conference as shared_api_v2010_account_conference
from ..shared import conference_enum_update_status_enum as shared_conference_enum_update_status_enum
from enum import Enum
from typing import Optional

UPDATE_CONFERENCE_SERVERS = [
	"https://api.twilio.com",
]


@dataclasses.dataclass
class UpdateConferenceSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class UpdateConferenceUpdateConferenceRequestAnnounceMethodEnum(str, Enum):
    r"""The HTTP method used to call `announce_url`. Can be: `GET` or `POST` and the default is `POST`"""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


@dataclasses.dataclass
class UpdateConferenceUpdateConferenceRequest:
    
    announce_method: Optional[UpdateConferenceUpdateConferenceRequestAnnounceMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'AnnounceMethod' }})
    r"""The HTTP method used to call `announce_url`. Can be: `GET` or `POST` and the default is `POST`"""  
    announce_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'AnnounceUrl' }})
    r"""The URL we should call to announce something into the conference. The URL may return an MP3 file, a WAV file, or a TwiML document that contains `<Play>`, `<Say>`, `<Pause>`, or `<Redirect>` verbs."""  
    status: Optional[shared_conference_enum_update_status_enum.ConferenceEnumUpdateStatusEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Status' }})  
    

@dataclasses.dataclass
class UpdateConferenceRequest:
    
    account_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AccountSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Conference resource(s) to update."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The Twilio-provided string that uniquely identifies the Conference resource to update"""  
    request_body: Optional[UpdateConferenceUpdateConferenceRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateConferenceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_v2010_account_conference: Optional[shared_api_v2010_account_conference.APIV2010AccountConference] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    