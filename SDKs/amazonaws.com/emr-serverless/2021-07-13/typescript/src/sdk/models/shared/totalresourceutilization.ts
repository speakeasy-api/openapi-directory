/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The aggregate vCPU, memory, and storage resources used from the time job start executing till the time job is terminated, rounded up to the nearest second.
 */
export class TotalResourceUtilization extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "memoryGBHour" })
  memoryGBHour?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "storageGBHour" })
  storageGBHour?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "vCPUHour" })
  vCPUHour?: number;
}
