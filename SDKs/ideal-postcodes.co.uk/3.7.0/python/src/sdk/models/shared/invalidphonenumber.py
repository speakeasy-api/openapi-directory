"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InvalidPhoneNumberCountryEnum(str, Enum):
    r"""Full country name"""
    NULL = 'null'

class InvalidPhoneNumberCurrentCarrierEnum(str, Enum):
    r"""Representation of current phone carrier information like network code, name, country, network type"""
    NULL = 'null'

class InvalidPhoneNumberInternationalFormatEnum(str, Enum):
    r"""Phone number formatted to international standard"""
    NULL = 'null'

class InvalidPhoneNumberIsoCountryEnum(str, Enum):
    r"""Country code in 3 letter ISO format"""
    NULL = 'null'

class InvalidPhoneNumberIsoCountry2Enum(str, Enum):
    r"""Country code in 2 letter ISO format"""
    NULL = 'null'

class InvalidPhoneNumberNationalFormatEnum(str, Enum):
    r"""Phone number formatted to local standard"""
    NULL = 'null'

class InvalidPhoneNumberOriginalCarrierEnum(str, Enum):
    r"""Representation of original phone carrier information like network code, name, country, network type"""
    NULL = 'null'

class InvalidPhoneNumberValidEnum(str, Enum):
    FALSE = 'false'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InvalidPhoneNumber:
    
    country: InvalidPhoneNumberCountryEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})
    r"""Full country name"""  
    international_format: InvalidPhoneNumberInternationalFormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('international_format') }})
    r"""Phone number formatted to international standard"""  
    iso_country: InvalidPhoneNumberIsoCountryEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iso_country') }})
    r"""Country code in 3 letter ISO format"""  
    iso_country_2: InvalidPhoneNumberIsoCountry2Enum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iso_country_2') }})
    r"""Country code in 2 letter ISO format"""  
    national_format: InvalidPhoneNumberNationalFormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('national_format') }})
    r"""Phone number formatted to local standard"""  
    valid: InvalidPhoneNumberValidEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valid') }})  
    current_carrier: Optional[InvalidPhoneNumberCurrentCarrierEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('current_carrier'), 'exclude': lambda f: f is None }})
    r"""Representation of current phone carrier information like network code, name, country, network type"""  
    original_carrier: Optional[InvalidPhoneNumberOriginalCarrierEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('original_carrier'), 'exclude': lambda f: f is None }})
    r"""Representation of original phone carrier information like network code, name, country, network type"""  
    