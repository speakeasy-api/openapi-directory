"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import joblogevent_enum as shared_joblogevent_enum
from ..shared import joblogeventdata as shared_joblogeventdata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobLog:
    r"""A log outputted by a Job."""
    
    event: Optional[shared_joblogevent_enum.JobLogEventEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event'), 'exclude': lambda f: f is None }})  
    event_data: Optional[shared_joblogeventdata.JobLogEventData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventData'), 'exclude': lambda f: f is None }})  
    log_date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logDateTime'), 'exclude': lambda f: f is None }})  
    