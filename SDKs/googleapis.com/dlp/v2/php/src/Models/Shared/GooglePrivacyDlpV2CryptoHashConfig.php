<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GooglePrivacyDlpV2CryptoHashConfig - Pseudonymization method that generates surrogates via cryptographic hashing. Uses SHA-256. The key size must be either 32 or 64 bytes. Outputs a base64 encoded representation of the hashed output (for example, L7k0BHmF1ha5U3NfGykjro4xWi1MPVQPjhMAZbSV9mM=). Currently, only string and integer values can be hashed. See https://cloud.google.com/dlp/docs/pseudonymization to learn more.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GooglePrivacyDlpV2CryptoHashConfig
{
    /**
     * This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2CryptoKey $cryptoKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('cryptoKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2CryptoKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2CryptoKey $cryptoKey = null;
    
	public function __construct()
	{
		$this->cryptoKey = null;
	}
}
