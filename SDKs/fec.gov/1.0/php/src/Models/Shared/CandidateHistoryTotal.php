<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CandidateHistoryTotal
{
    /**
     * Last year a candidate was active. This field is specific to the candidate_id so if the same person runs for another office, there may be a different record for them.
     * 
     * @var ?int $activeThrough
     */
	#[\JMS\Serializer\Annotation\SerializedName('active_through')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $activeThrough = null;
    
    /**
     * City of candidate's address, as reported on their Form 2.
     * 
     * @var ?string $addressCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressCity = null;
    
    /**
     * State of candidate's address, as reported on their Form 2.
     * 
     * @var ?string $addressState
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressState = null;
    
    /**
     * Street of candidate's address, as reported on their Form 2.
     * 
     * @var ?string $addressStreet1
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_street_1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressStreet1 = null;
    
    /**
     * Additional street information of candidate's address, as reported on their Form 2.
     * 
     * @var ?string $addressStreet2
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_street_2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressStreet2 = null;
    
    /**
     * Zip code of candidate's address, as reported on their Form 2.
     * 
     * @var ?string $addressZip
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_zip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressZip = null;
    
    /**
     * The last year of the cycle for this election.
     * 
     * @var ?int $candidateElectionYear
     */
	#[\JMS\Serializer\Annotation\SerializedName('candidate_election_year')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $candidateElectionYear = null;
    
    /**
     * 
     * A unique identifier assigned to each candidate registered with the FEC.
     * If a person runs for several offices, that person will have separate candidate IDs for each office.
     * 
     * 
     * @var string $candidateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('candidate_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $candidateId;
    
    /**
     * 
     * True indicates that a candidate is inactive.
     * 
     * 
     * @var ?bool $candidateInactive
     */
	#[\JMS\Serializer\Annotation\SerializedName('candidate_inactive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $candidateInactive = null;
    
    /**
     * One-letter code explaining if the candidate is:
     * 
     *         - C present candidate
     *         - F future candidate
     *         - N not yet a candidate
     *         - P prior candidate
     * 
     * 
     * @var ?string $candidateStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('candidate_status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $candidateStatus = null;
    
    /**
     * Ending cash balance on the most recent filing
     * 
     * @var ?float $cashOnHandEndPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('cash_on_hand_end_period')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $cashOnHandEndPeriod = null;
    
    /**
     * Ending date of the reporting period
     * 
     * @var ?\DateTime $coverageEndDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('coverage_end_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $coverageEndDate = null;
    
    /**
     * Beginning date of the reporting period
     * 
     * @var ?\DateTime $coverageStartDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('coverage_start_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $coverageStartDate = null;
    
    /**
     * 
     * Filter records to only those that are applicable to a given two-year
     * period. This cycle follows the traditional House election cycle and
     * subdivides the presidential and Senate elections into comparable
     * two-year blocks. The cycle begins with an odd year and is named for its
     * ending, even year.
     * 
     * 
     * @var int $cycle
     */
	#[\JMS\Serializer\Annotation\SerializedName('cycle')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $cycle;
    
    /**
     * 
     * Two-year election cycle in which a candidate runs for office.
     * Calculated from Form 2. The cycle begins with
     * an odd year and is named for its ending, even year. This cycle follows
     * the traditional house election cycle and subdivides the presidential
     * and Senate elections into comparable two-year blocks. To retrieve data for
     * the entire four years of a presidential term or six years of a senatorial term,
     * you will need the `election_full` flag.
     * 
     * 
     * @var ?array<int> $cycles
     */
	#[\JMS\Serializer\Annotation\SerializedName('cycles')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $cycles = null;
    
    /**
     * Debts owed by the committee
     * 
     * @var ?float $debtsOwedByCommittee
     */
	#[\JMS\Serializer\Annotation\SerializedName('debts_owed_by_committee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $debtsOwedByCommittee = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('disbursements')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $disbursements = null;
    
    /**
     * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
     * 
     * @var ?string $district
     */
	#[\JMS\Serializer\Annotation\SerializedName('district')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $district = null;
    
    /**
     * One-letter code explaining if the candidate is:
     * 
     *         - C present candidate
     *         - F future candidate
     *         - N not yet a candidate
     *         - P prior candidate
     * 
     * 
     * @var ?int $districtNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('district_number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $districtNumber = null;
    
    /**
     * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
     * 
     * @var ?array<string> $electionDistricts
     */
	#[\JMS\Serializer\Annotation\SerializedName('election_districts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $electionDistricts = null;
    
    /**
     * Year of election
     * 
     * @var ?int $electionYear
     */
	#[\JMS\Serializer\Annotation\SerializedName('election_year')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $electionYear = null;
    
    /**
     * Years in which a candidate ran for office.
     * 
     * @var ?array<int> $electionYears
     */
	#[\JMS\Serializer\Annotation\SerializedName('election_years')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $electionYears = null;
    
    /**
     * FEC cycles are included in candidate election years.
     * 
     * @var ?array<int> $fecCyclesInElection
     */
	#[\JMS\Serializer\Annotation\SerializedName('fec_cycles_in_election')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fecCyclesInElection = null;
    
    /**
     * A boolean the describes if a presidential candidate has accepted federal funds. The flag will be false for House and Senate candidates.
     * 
     * @var ?bool $federalFundsFlag
     */
	#[\JMS\Serializer\Annotation\SerializedName('federal_funds_flag')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $federalFundsFlag = null;
    
    /**
     * The day the FEC received the candidate's first filing. This is a F2 candidate registration.
     * 
     * @var ?\DateTime $firstFileDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_file_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $firstFileDate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('flags')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $flags = null;
    
    /**
     * A boolean that describes if a candidate's committee has ever received any receipts for their campaign for this particular office. (Candidates have separate candidate IDs for each office.)
     * 
     * @var ?bool $hasRaisedFunds
     */
	#[\JMS\Serializer\Annotation\SerializedName('has_raised_funds')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasRaisedFunds = null;
    
    /**
     * One-letter code ('I', 'C', 'O') explaining if the candidate is an incumbent, a challenger, or if the seat is open.
     * 
     * @var ?string $incumbentChallenge
     */
	#[\JMS\Serializer\Annotation\SerializedName('incumbent_challenge')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $incumbentChallenge = null;
    
    /**
     * Explains if the candidate is an incumbent, a challenger, or if the seat is open.
     * 
     * @var ?string $incumbentChallengeFull
     */
	#[\JMS\Serializer\Annotation\SerializedName('incumbent_challenge_full')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $incumbentChallengeFull = null;
    
    /**
     * Individual itemized contributions are from individuals whose aggregate contributions total over $200 per individual per year. Be aware, some filers choose to itemize donations $200 or less.
     * 
     * @var ?float $individualItemizedContributions
     */
	#[\JMS\Serializer\Annotation\SerializedName('individual_itemized_contributions')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $individualItemizedContributions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('is_election')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isElection;
    
    /**
     * The day the FEC received the candidate's most recent Form 2
     * 
     * @var ?\DateTime $lastF2Date
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_f2_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastF2Date = null;
    
    /**
     * The day the FEC received the candidate's most recent filing
     * 
     * @var ?\DateTime $lastFileDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_file_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastFileDate = null;
    
    /**
     * Date the information was loaded into the FEC systems. This can be affected by reseting systems and other factors, refer to receipt_date for the day that the FEC received the paper or electronic document. Keep in mind that paper filings take more time to process and there can be a lag between load_date and receipt_date. This field can be helpful to identify paper records that have been processed recently.
     * 
     * @var ?\DateTime $loadDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('load_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $loadDate = null;
    
    /**
     * Name of candidate running for office
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Federal office candidate runs for: H, S or P
     * 
     * @var ?string $office
     */
	#[\JMS\Serializer\Annotation\SerializedName('office')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $office = null;
    
    /**
     * Federal office candidate runs for: House, Senate or presidential
     * 
     * @var ?string $officeFull
     */
	#[\JMS\Serializer\Annotation\SerializedName('office_full')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $officeFull = null;
    
    /**
     * Other committees contributions
     * 
     * @var ?float $otherPoliticalCommitteeContributions
     */
	#[\JMS\Serializer\Annotation\SerializedName('other_political_committee_contributions')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $otherPoliticalCommitteeContributions = null;
    
    /**
     * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
     * 
     * @var ?string $party
     */
	#[\JMS\Serializer\Annotation\SerializedName('party')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $party = null;
    
    /**
     * Party affiliated with a candidate or committee
     * 
     * @var ?string $partyFull
     */
	#[\JMS\Serializer\Annotation\SerializedName('party_full')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $partyFull = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('receipts')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $receipts = null;
    
    /**
     * Rounded election years in which a candidate ran for office
     * 
     * @var ?array<int> $roundedElectionYears
     */
	#[\JMS\Serializer\Annotation\SerializedName('rounded_election_years')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $roundedElectionYears = null;
    
    /**
     * US state or territory where a candidate runs for office
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * Transfers from authorized committees
     * 
     * @var ?float $transfersFromOtherAuthorizedCommittee
     */
	#[\JMS\Serializer\Annotation\SerializedName('transfers_from_other_authorized_committee')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $transfersFromOtherAuthorizedCommittee = null;
    
    /**
     * 
     * Two-year election cycle in which a candidate runs for office.
     * Calculated from Form 2. The cycle begins with
     * an odd year and is named for its ending, even year. This cycle follows
     * the traditional house election cycle and subdivides the presidential
     * and Senate elections into comparable two-year blocks. To retrieve data for
     * the entire four years of a presidential term or six years of a senatorial term,
     * you will need the `election_full` flag.
     * 
     * 
     * @var int $twoYearPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('two_year_period')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $twoYearPeriod;
    
	public function __construct()
	{
		$this->activeThrough = null;
		$this->addressCity = null;
		$this->addressState = null;
		$this->addressStreet1 = null;
		$this->addressStreet2 = null;
		$this->addressZip = null;
		$this->candidateElectionYear = null;
		$this->candidateId = "";
		$this->candidateInactive = null;
		$this->candidateStatus = null;
		$this->cashOnHandEndPeriod = null;
		$this->coverageEndDate = null;
		$this->coverageStartDate = null;
		$this->cycle = 0;
		$this->cycles = null;
		$this->debtsOwedByCommittee = null;
		$this->disbursements = null;
		$this->district = null;
		$this->districtNumber = null;
		$this->electionDistricts = null;
		$this->electionYear = null;
		$this->electionYears = null;
		$this->fecCyclesInElection = null;
		$this->federalFundsFlag = null;
		$this->firstFileDate = null;
		$this->flags = null;
		$this->hasRaisedFunds = null;
		$this->incumbentChallenge = null;
		$this->incumbentChallengeFull = null;
		$this->individualItemizedContributions = null;
		$this->isElection = false;
		$this->lastF2Date = null;
		$this->lastFileDate = null;
		$this->loadDate = null;
		$this->name = null;
		$this->office = null;
		$this->officeFull = null;
		$this->otherPoliticalCommitteeContributions = null;
		$this->party = null;
		$this->partyFull = null;
		$this->receipts = null;
		$this->roundedElectionYears = null;
		$this->state = null;
		$this->transfersFromOtherAuthorizedCommittee = null;
		$this->twoYearPeriod = 0;
	}
}
