"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum(str, Enum):
    r"""The type of resource, for example a VPC attachment."""
    VPC = 'vpc'
    VPN = 'vpn'
    DIRECT_CONNECT_GATEWAY = 'direct-connect-gateway'
    CONNECT = 'connect'
    PEERING = 'peering'
    TGW_PEERING = 'tgw-peering'

class AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum(str, Enum):
    r"""The state of the subnet association."""
    PENDING_ACCEPTANCE = 'pendingAcceptance'
    ASSOCIATING = 'associating'
    ASSOCIATED = 'associated'
    DISASSOCIATING = 'disassociating'
    DISASSOCIATED = 'disassociated'
    REJECTED = 'rejected'
    FAILED = 'failed'


@dataclasses.dataclass
class AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnets:
    r"""Describes the subnet association with the transit gateway multicast domain."""
    
    state: Optional[AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnetsStateEnum] = dataclasses.field(default=None)  
    subnet_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class AcceptTransitGatewayMulticastDomainAssociationsResultAssociations:
    r"""Information about the multicast domain associations."""
    
    resource_id: Optional[str] = dataclasses.field(default=None)  
    resource_owner_id: Optional[str] = dataclasses.field(default=None)  
    resource_type: Optional[AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsResourceTypeEnum] = dataclasses.field(default=None)  
    subnets: Optional[list[AcceptTransitGatewayMulticastDomainAssociationsResultAssociationsSubnets]] = dataclasses.field(default=None)  
    transit_gateway_attachment_id: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_multicast_domain_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class AcceptTransitGatewayMulticastDomainAssociationsResult:
    r"""Success"""
    
    associations: Optional[AcceptTransitGatewayMulticastDomainAssociationsResultAssociations] = dataclasses.field(default=None)  
    