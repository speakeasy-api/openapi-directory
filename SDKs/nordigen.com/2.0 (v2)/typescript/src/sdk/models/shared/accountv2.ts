/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The processing status of this account.
 */
export enum AccountV2AccountStatusEnum {
  Discovered = "DISCOVERED",
  Processing = "PROCESSING",
  Ready = "READY",
  Error = "ERROR",
  Suspended = "SUSPENDED",
}

/**
 * AccountV2Serializer.
 */
export class AccountV2 extends SpeakeasyBase {
  /**
   * The date & time at which the account object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * The Account IBAN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iban" })
  iban?: string;

  /**
   * The ID of this Account, used to refer to this account in other API calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The ASPSP associated with this account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "institution_id" })
  institutionId?: string;

  /**
   * The date & time at which the account object was last accessed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_accessed" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAccessed?: Date;

  /**
   * The name of the account owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner_name" })
  ownerName?: string;

  /**
   * The processing status of this account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AccountV2AccountStatusEnum;
}
