/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSpacesSpaceIdFoldersIdMessagesRequest extends SpeakeasyBase {
  /**
   * date of the message
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MessageDate",
  })
  messageDate?: string;

  /**
   * index range of the results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Range" })
  range?: string;

  /**
   * Name of the message
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Text" })
  text?: string;

  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class GetSpacesSpaceIdFoldersIdMessagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of messages
   */
  @SpeakeasyMetadata({ elemType: shared.Message })
  getSpacesSpaceIdFoldersIdMessages200ApplicationJSONAllOfs?: shared.Message[];
}
