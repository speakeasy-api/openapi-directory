/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateEnvironmentRequestBody {
    /**
     * A list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html"&gt;Apache Airflow configuration options&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AirflowConfigurationOptions")
    public java.util.Map<String, String> airflowConfigurationOptions;

    public CreateEnvironmentRequestBody withAirflowConfigurationOptions(java.util.Map<String, String> airflowConfigurationOptions) {
        this.airflowConfigurationOptions = airflowConfigurationOptions;
        return this;
    }
    
    /**
     * The Apache Airflow version for your environment. If no value is specified, it defaults to the latest version. Valid values: &lt;code&gt;1.10.12&lt;/code&gt;, &lt;code&gt;2.0.2&lt;/code&gt;, &lt;code&gt;2.2.2&lt;/code&gt;, and &lt;code&gt;2.4.3&lt;/code&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/airflow-versions.html"&gt;Apache Airflow versions on Amazon Managed Workflows for Apache Airflow (MWAA)&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AirflowVersion")
    public String airflowVersion;

    public CreateEnvironmentRequestBody withAirflowVersion(String airflowVersion) {
        this.airflowVersion = airflowVersion;
        return this;
    }
    
    /**
     * The relative path to the DAGs folder on your Amazon S3 bucket. For example, &lt;code&gt;dags&lt;/code&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html"&gt;Adding or updating DAGs&lt;/a&gt;.
     */
    @JsonProperty("DagS3Path")
    public String dagS3Path;

    public CreateEnvironmentRequestBody withDagS3Path(String dagS3Path) {
        this.dagS3Path = dagS3Path;
        return this;
    }
    
    /**
     * The environment class type. Valid values: &lt;code&gt;mw1.small&lt;/code&gt;, &lt;code&gt;mw1.medium&lt;/code&gt;, &lt;code&gt;mw1.large&lt;/code&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html"&gt;Amazon MWAA environment class&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EnvironmentClass")
    public String environmentClass;

    public CreateEnvironmentRequestBody withEnvironmentClass(String environmentClass) {
        this.environmentClass = environmentClass;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the execution role for your environment. An execution role is an Amazon Web Services Identity and Access Management (IAM) role that grants MWAA permission to access Amazon Web Services services and resources used by your environment. For example, &lt;code&gt;arn:aws:iam::123456789:role/my-execution-role&lt;/code&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html"&gt;Amazon MWAA Execution role&lt;/a&gt;.
     */
    @JsonProperty("ExecutionRoleArn")
    public String executionRoleArn;

    public CreateEnvironmentRequestBody withExecutionRoleArn(String executionRoleArn) {
        this.executionRoleArn = executionRoleArn;
        return this;
    }
    
    /**
     * The Amazon Web Services Key Management Service (KMS) key to encrypt the data in your environment. You can use an Amazon Web Services owned CMK, or a Customer managed CMK (advanced). For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/create-environment.html"&gt;Create an Amazon MWAA environment&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KmsKey")
    public String kmsKey;

    public CreateEnvironmentRequestBody withKmsKey(String kmsKey) {
        this.kmsKey = kmsKey;
        return this;
    }
    
    /**
     * Defines the Apache Airflow log types to send to CloudWatch Logs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LoggingConfiguration")
    public CreateEnvironmentRequestBodyLoggingConfiguration loggingConfiguration;

    public CreateEnvironmentRequestBody withLoggingConfiguration(CreateEnvironmentRequestBodyLoggingConfiguration loggingConfiguration) {
        this.loggingConfiguration = loggingConfiguration;
        return this;
    }
    
    /**
     * The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the &lt;code&gt;MaxWorkers&lt;/code&gt; field. For example, &lt;code&gt;20&lt;/code&gt;. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in &lt;code&gt;MinWorkers&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxWorkers")
    public Long maxWorkers;

    public CreateEnvironmentRequestBody withMaxWorkers(Long maxWorkers) {
        this.maxWorkers = maxWorkers;
        return this;
    }
    
    /**
     * The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the &lt;code&gt;MaxWorkers&lt;/code&gt; field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the &lt;code&gt;MinWorkers&lt;/code&gt; field. For example, &lt;code&gt;2&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinWorkers")
    public Long minWorkers;

    public CreateEnvironmentRequestBody withMinWorkers(Long minWorkers) {
        this.minWorkers = minWorkers;
        return this;
    }
    
    /**
     * Describes the VPC networking components used to secure and enable network traffic between the Amazon Web Services resources for your environment. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html"&gt;About networking on Amazon MWAA&lt;/a&gt;.
     */
    @JsonProperty("NetworkConfiguration")
    public CreateEnvironmentRequestBodyNetworkConfiguration networkConfiguration;

    public CreateEnvironmentRequestBody withNetworkConfiguration(CreateEnvironmentRequestBodyNetworkConfiguration networkConfiguration) {
        this.networkConfiguration = networkConfiguration;
        return this;
    }
    
    /**
     * The version of the plugins.zip file on your Amazon S3 bucket. You must specify a version each time a plugins.zip file is updated. For more information, see &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html"&gt;How S3 Versioning works&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PluginsS3ObjectVersion")
    public String pluginsS3ObjectVersion;

    public CreateEnvironmentRequestBody withPluginsS3ObjectVersion(String pluginsS3ObjectVersion) {
        this.pluginsS3ObjectVersion = pluginsS3ObjectVersion;
        return this;
    }
    
    /**
     * The relative path to the &lt;code&gt;plugins.zip&lt;/code&gt; file on your Amazon S3 bucket. For example, &lt;code&gt;plugins.zip&lt;/code&gt;. If specified, then the &lt;code&gt;plugins.zip&lt;/code&gt; version is required. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html"&gt;Installing custom plugins&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PluginsS3Path")
    public String pluginsS3Path;

    public CreateEnvironmentRequestBody withPluginsS3Path(String pluginsS3Path) {
        this.pluginsS3Path = pluginsS3Path;
        return this;
    }
    
    /**
     * The version of the &lt;code&gt;requirements.txt&lt;/code&gt; file on your Amazon S3 bucket. You must specify a version each time a requirements.txt file is updated. For more information, see &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html"&gt;How S3 Versioning works&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequirementsS3ObjectVersion")
    public String requirementsS3ObjectVersion;

    public CreateEnvironmentRequestBody withRequirementsS3ObjectVersion(String requirementsS3ObjectVersion) {
        this.requirementsS3ObjectVersion = requirementsS3ObjectVersion;
        return this;
    }
    
    /**
     * The relative path to the &lt;code&gt;requirements.txt&lt;/code&gt; file on your Amazon S3 bucket. For example, &lt;code&gt;requirements.txt&lt;/code&gt;. If specified, then a version is required. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html"&gt;Installing Python dependencies&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequirementsS3Path")
    public String requirementsS3Path;

    public CreateEnvironmentRequestBody withRequirementsS3Path(String requirementsS3Path) {
        this.requirementsS3Path = requirementsS3Path;
        return this;
    }
    
    /**
     * &lt;p&gt;The number of Apache Airflow schedulers to run in your environment. Valid values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;v2 - Accepts between 2 to 5. Defaults to 2.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;v1 - Accepts 1.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Schedulers")
    public Long schedulers;

    public CreateEnvironmentRequestBody withSchedulers(Long schedulers) {
        this.schedulers = schedulers;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, &lt;code&gt;arn:aws:s3:::my-airflow-bucket-unique-name&lt;/code&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html"&gt;Create an Amazon S3 bucket for Amazon MWAA&lt;/a&gt;.
     */
    @JsonProperty("SourceBucketArn")
    public String sourceBucketArn;

    public CreateEnvironmentRequestBody withSourceBucketArn(String sourceBucketArn) {
        this.sourceBucketArn = sourceBucketArn;
        return this;
    }
    
    /**
     * &lt;p&gt;The version of the startup shell script in your Amazon S3 bucket. You must specify the &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html"&gt;version ID&lt;/a&gt; that Amazon S3 assigns to the file every time you update the script. &lt;/p&gt; &lt;p&gt; Version IDs are Unicode, UTF-8 encoded, URL-ready, opaque strings that are no more than 1,024 bytes long. The following is an example: &lt;/p&gt; &lt;p&gt; &lt;code&gt;3sL4kqtJlcpXroDTDmJ+rmSpXd3dIbrHY+MTRCxf3vjVBH40Nr8X8gdRQBpUMLUo&lt;/code&gt; &lt;/p&gt; &lt;p&gt; For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html"&gt;Using a startup script&lt;/a&gt;. &lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StartupScriptS3ObjectVersion")
    public String startupScriptS3ObjectVersion;

    public CreateEnvironmentRequestBody withStartupScriptS3ObjectVersion(String startupScriptS3ObjectVersion) {
        this.startupScriptS3ObjectVersion = startupScriptS3ObjectVersion;
        return this;
    }
    
    /**
     * &lt;p&gt;The relative path to the startup shell script in your Amazon S3 bucket. For example, &lt;code&gt;s3://mwaa-environment/startup.sh&lt;/code&gt;.&lt;/p&gt; &lt;p&gt; Amazon MWAA runs the script as your environment starts, and before running the Apache Airflow process. You can use this script to install dependencies, modify Apache Airflow configuration options, and set environment variables. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/using-startup-script.html"&gt;Using a startup script&lt;/a&gt;. &lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StartupScriptS3Path")
    public String startupScriptS3Path;

    public CreateEnvironmentRequestBody withStartupScriptS3Path(String startupScriptS3Path) {
        this.startupScriptS3Path = startupScriptS3Path;
        return this;
    }
    
    /**
     * The key-value tag pairs you want to associate to your environment. For example, &lt;code&gt;"Environment": "Staging"&lt;/code&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"&gt;Tagging Amazon Web Services resources&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;

    public CreateEnvironmentRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The Apache Airflow &lt;i&gt;Web server&lt;/i&gt; access mode. For more information, see &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html"&gt;Apache Airflow access modes&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WebserverAccessMode")
    public CreateEnvironmentRequestBodyWebserverAccessModeEnum webserverAccessMode;

    public CreateEnvironmentRequestBody withWebserverAccessMode(CreateEnvironmentRequestBodyWebserverAccessModeEnum webserverAccessMode) {
        this.webserverAccessMode = webserverAccessMode;
        return this;
    }
    
    /**
     * The day and time of the week in Coordinated Universal Time (UTC) 24-hour standard time to start weekly maintenance updates of your environment in the following format: &lt;code&gt;DAY:HH:MM&lt;/code&gt;. For example: &lt;code&gt;TUE:03:30&lt;/code&gt;. You can specify a start time in 30 minute increments only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WeeklyMaintenanceWindowStart")
    public String weeklyMaintenanceWindowStart;

    public CreateEnvironmentRequestBody withWeeklyMaintenanceWindowStart(String weeklyMaintenanceWindowStart) {
        this.weeklyMaintenanceWindowStart = weeklyMaintenanceWindowStart;
        return this;
    }
    
    public CreateEnvironmentRequestBody(@JsonProperty("DagS3Path") String dagS3Path, @JsonProperty("ExecutionRoleArn") String executionRoleArn, @JsonProperty("NetworkConfiguration") CreateEnvironmentRequestBodyNetworkConfiguration networkConfiguration, @JsonProperty("SourceBucketArn") String sourceBucketArn) {
        this.dagS3Path = dagS3Path;
        this.executionRoleArn = executionRoleArn;
        this.networkConfiguration = networkConfiguration;
        this.sourceBucketArn = sourceBucketArn;
  }
}
