/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Endpoint - Endpoint describes a single IDS endpoint. It defines a forwarding rule to which packets can be sent for IDS inspection.
 */
public class Endpoint {
    /**
     * Output only. The create time timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Endpoint withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * User-provided description of the endpoint
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Endpoint withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. The fully qualified URL of the endpoint's ILB Forwarding Rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpointForwardingRule")
    public String endpointForwardingRule;

    public Endpoint withEndpointForwardingRule(String endpointForwardingRule) {
        this.endpointForwardingRule = endpointForwardingRule;
        return this;
    }
    
    /**
     * Output only. The IP address of the IDS Endpoint's ILB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpointIp")
    public String endpointIp;

    public Endpoint withEndpointIp(String endpointIp) {
        this.endpointIp = endpointIp;
        return this;
    }
    
    /**
     * The labels of the endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Endpoint withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The name of the endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Endpoint withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Required. The fully qualified URL of the network to which the IDS Endpoint is attached.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public Endpoint withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Required. Lowest threat severity that this endpoint will alert on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public EndpointSeverityEnum severity;

    public Endpoint withSeverity(EndpointSeverityEnum severity) {
        this.severity = severity;
        return this;
    }
    
    /**
     * Output only. Current state of the endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public EndpointStateEnum state;

    public Endpoint withState(EndpointStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * List of threat IDs to be excepted from generating alerts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("threatExceptions")
    public String[] threatExceptions;

    public Endpoint withThreatExceptions(String[] threatExceptions) {
        this.threatExceptions = threatExceptions;
        return this;
    }
    
    /**
     * Whether the endpoint should report traffic logs in addition to threat logs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trafficLogs")
    public Boolean trafficLogs;

    public Endpoint withTrafficLogs(Boolean trafficLogs) {
        this.trafficLogs = trafficLogs;
        return this;
    }
    
    /**
     * Output only. The update time timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Endpoint withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Endpoint(){}
}
