// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetTagKeysQueryParams struct {
	// Pagination token
	PaginationToken *string `queryParam:"style=form,explode=true,name=PaginationToken"`
}

// GetTagKeysXAmzTargetEnum
type GetTagKeysXAmzTargetEnum string

const (
	GetTagKeysXAmzTargetEnumResourceGroupsTaggingApi20170126GetTagKeys GetTagKeysXAmzTargetEnum = "ResourceGroupsTaggingAPI_20170126.GetTagKeys"
)

func (e *GetTagKeysXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ResourceGroupsTaggingAPI_20170126.GetTagKeys":
		*e = GetTagKeysXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTagKeysXAmzTargetEnum: %s", s)
	}
}

type GetTagKeysHeaders struct {
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetTagKeysXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetTagKeysRequest struct {
	QueryParams GetTagKeysQueryParams
	Headers     GetTagKeysHeaders
	Request     shared.GetTagKeysInput `request:"mediaType=application/json"`
}

type GetTagKeysResponse struct {
	ContentType string
	// Success
	GetTagKeysOutput *shared.GetTagKeysOutput
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// PaginationTokenExpiredException
	PaginationTokenExpiredException interface{}
	StatusCode                      int
	RawResponse                     *http.Response
	// ThrottledException
	ThrottledException interface{}
}
