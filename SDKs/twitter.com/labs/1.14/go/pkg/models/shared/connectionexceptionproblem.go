// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionExceptionProblemConnectionIssueEnum string

const (
	ConnectionExceptionProblemConnectionIssueEnumTooManyConnections       ConnectionExceptionProblemConnectionIssueEnum = "TooManyConnections"
	ConnectionExceptionProblemConnectionIssueEnumProvisioningSubscription ConnectionExceptionProblemConnectionIssueEnum = "ProvisioningSubscription"
)

func (e *ConnectionExceptionProblemConnectionIssueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TooManyConnections":
		fallthrough
	case "ProvisioningSubscription":
		*e = ConnectionExceptionProblemConnectionIssueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionExceptionProblemConnectionIssueEnum: %s", s)
	}
}

// ConnectionExceptionProblem - A problem that indicates something is wrong with the connection
type ConnectionExceptionProblem struct {
	ConnectionIssue *ConnectionExceptionProblemConnectionIssueEnum `json:"connection_issue,omitempty"`
	Detail          string                                         `json:"detail"`
	Title           string                                         `json:"title"`
	Type            string                                         `json:"type"`
}
