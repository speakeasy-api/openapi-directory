<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BinaryConfusionMatrix - Confusion matrix for binary classification models.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BinaryConfusionMatrix
{
    /**
     * The fraction of predictions given the correct label.
     * 
     * @var ?float $accuracy
     */
	#[\JMS\Serializer\Annotation\SerializedName('accuracy')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $accuracy = null;
    
    /**
     * The equally weighted average of recall and precision.
     * 
     * @var ?float $f1Score
     */
	#[\JMS\Serializer\Annotation\SerializedName('f1Score')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $f1Score = null;
    
    /**
     * Number of false samples predicted as false.
     * 
     * @var ?string $falseNegatives
     */
	#[\JMS\Serializer\Annotation\SerializedName('falseNegatives')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $falseNegatives = null;
    
    /**
     * Number of false samples predicted as true.
     * 
     * @var ?string $falsePositives
     */
	#[\JMS\Serializer\Annotation\SerializedName('falsePositives')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $falsePositives = null;
    
    /**
     * Threshold value used when computing each of the following metric.
     * 
     * @var ?float $positiveClassThreshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('positiveClassThreshold')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $positiveClassThreshold = null;
    
    /**
     * The fraction of actual positive predictions that had positive actual labels.
     * 
     * @var ?float $precision
     */
	#[\JMS\Serializer\Annotation\SerializedName('precision')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $precision = null;
    
    /**
     * The fraction of actual positive labels that were given a positive prediction.
     * 
     * @var ?float $recall
     */
	#[\JMS\Serializer\Annotation\SerializedName('recall')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $recall = null;
    
    /**
     * Number of true samples predicted as false.
     * 
     * @var ?string $trueNegatives
     */
	#[\JMS\Serializer\Annotation\SerializedName('trueNegatives')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $trueNegatives = null;
    
    /**
     * Number of true samples predicted as true.
     * 
     * @var ?string $truePositives
     */
	#[\JMS\Serializer\Annotation\SerializedName('truePositives')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $truePositives = null;
    
	public function __construct()
	{
		$this->accuracy = null;
		$this->f1Score = null;
		$this->falseNegatives = null;
		$this->falsePositives = null;
		$this->positiveClassThreshold = null;
		$this->precision = null;
		$this->recall = null;
		$this->trueNegatives = null;
		$this->truePositives = null;
	}
}
