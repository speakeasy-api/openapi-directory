// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetHealthStateEnumEnum string

const (
	TargetHealthStateEnumEnumInitial     TargetHealthStateEnumEnum = "initial"
	TargetHealthStateEnumEnumHealthy     TargetHealthStateEnumEnum = "healthy"
	TargetHealthStateEnumEnumUnhealthy   TargetHealthStateEnumEnum = "unhealthy"
	TargetHealthStateEnumEnumUnused      TargetHealthStateEnumEnum = "unused"
	TargetHealthStateEnumEnumDraining    TargetHealthStateEnumEnum = "draining"
	TargetHealthStateEnumEnumUnavailable TargetHealthStateEnumEnum = "unavailable"
)

func (e *TargetHealthStateEnumEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initial":
		fallthrough
	case "healthy":
		fallthrough
	case "unhealthy":
		fallthrough
	case "unused":
		fallthrough
	case "draining":
		fallthrough
	case "unavailable":
		*e = TargetHealthStateEnumEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetHealthStateEnumEnum: %s", s)
	}
}
