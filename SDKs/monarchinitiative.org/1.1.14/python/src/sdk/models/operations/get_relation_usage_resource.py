"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import associationresults as shared_associationresults
from typing import Optional


@dataclasses.dataclass
class GetRelationUsageResourceRequest:
    
    evidence: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'evidence', 'style': 'form', 'explode': True }})
    r"""Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)
                        or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.
    """  
    subject_taxon: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'subject_taxon', 'style': 'form', 'explode': True }})
    r"""SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default"""  
    

@dataclasses.dataclass
class GetRelationUsageResourceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    association_results: Optional[list[shared_associationresults.AssociationResults]] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    