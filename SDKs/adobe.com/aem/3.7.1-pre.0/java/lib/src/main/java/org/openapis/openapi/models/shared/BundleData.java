/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BundleData {
    /**
     * Bundle category
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public String category;

    public BundleData withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * Is bundle a fragment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fragment")
    public Boolean fragment;

    public BundleData withFragment(Boolean fragment) {
        this.fragment = fragment;
        return this;
    }
    
    /**
     * Bundle ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public BundleData withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Bundle name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public BundleData withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("props")
    public BundleDataProp[] props;

    public BundleData withProps(BundleDataProp[] props) {
        this.props = props;
        return this;
    }
    
    /**
     * Bundle state value
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public BundleData withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Numeric raw bundle state value
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateRaw")
    public Long stateRaw;

    public BundleData withStateRaw(Long stateRaw) {
        this.stateRaw = stateRaw;
        return this;
    }
    
    /**
     * Bundle symbolic name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("symbolicName")
    public String symbolicName;

    public BundleData withSymbolicName(String symbolicName) {
        this.symbolicName = symbolicName;
        return this;
    }
    
    /**
     * Bundle version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public BundleData withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public BundleData(){}
}
