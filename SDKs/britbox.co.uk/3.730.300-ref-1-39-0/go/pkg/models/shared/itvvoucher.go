// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ItvVoucherOfferTypeEnum - The voucher offer type.
type ItvVoucherOfferTypeEnum string

const (
	ItvVoucherOfferTypeEnumStripe   ItvVoucherOfferTypeEnum = "stripe"
	ItvVoucherOfferTypeEnumTalonOne ItvVoucherOfferTypeEnum = "talon one"
)

func (e ItvVoucherOfferTypeEnum) ToPointer() *ItvVoucherOfferTypeEnum {
	return &e
}

func (e *ItvVoucherOfferTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "stripe":
		fallthrough
	case "talon one":
		*e = ItvVoucherOfferTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ItvVoucherOfferTypeEnum: %v", v)
	}
}

// ItvVoucher - Avalable voucher, if any.
type ItvVoucher struct {
	Display map[string]interface{} `json:"display"`
	// The coupon/voucher.
	ID    string                 `json:"id"`
	Links map[string]interface{} `json:"links"`
	// The voucher offer type.
	OfferType ItvVoucherOfferTypeEnum `json:"offerType"`
}
