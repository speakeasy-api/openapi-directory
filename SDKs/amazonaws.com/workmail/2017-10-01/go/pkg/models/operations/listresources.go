// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListResourcesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListResourcesXAmzTargetEnum
type ListResourcesXAmzTargetEnum string

const (
	ListResourcesXAmzTargetEnumWorkMailServiceListResources ListResourcesXAmzTargetEnum = "WorkMailService.ListResources"
)

func (e *ListResourcesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkMailService.ListResources":
		*e = ListResourcesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListResourcesXAmzTargetEnum: %s", s)
	}
}

type ListResourcesHeaders struct {
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListResourcesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListResourcesRequest struct {
	QueryParams ListResourcesQueryParams
	Headers     ListResourcesHeaders
	Request     shared.ListResourcesRequest `request:"mediaType=application/json"`
}

type ListResourcesResponse struct {
	ContentType string
	// InvalidParameterException
	InvalidParameterException interface{}
	// Success
	ListResourcesResponse *shared.ListResourcesResponse
	// OrganizationNotFoundException
	OrganizationNotFoundException interface{}
	// OrganizationStateException
	OrganizationStateException interface{}
	StatusCode                 int
	RawResponse                *http.Response
}
