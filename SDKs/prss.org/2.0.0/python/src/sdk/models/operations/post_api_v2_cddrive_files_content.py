"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import cddrivefile as shared_cddrivefile
from typing import Optional


@dataclasses.dataclass
class PostAPIV2CddriveFilesContentSecurity:
    
    cd_oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PostAPIV2CddriveFilesContentRequestBodyFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})  
    

@dataclasses.dataclass
class PostAPIV2CddriveFilesContentRequestBody:
    r"""Form data defining the file to create."""
    
    file: Optional[PostAPIV2CddriveFilesContentRequestBodyFile] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})
    r"""The file content being uploaded."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'name' }})
    r"""The name of the file, including extension."""  
    parent_id: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'parent-id' }})
    r"""The ID of the parent folder or 0 for the root folder."""  
    

@dataclasses.dataclass
class PostAPIV2CddriveFilesContentRequest:
    
    content_md5: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Content-MD5', 'style': 'simple', 'explode': False }})
    r"""If present, the MD5 will be compared against the file received as a message integrity check."""  
    request_body: Optional[PostAPIV2CddriveFilesContentRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})
    r"""Form data defining the file to create."""  
    

@dataclasses.dataclass
class PostAPIV2CddriveFilesContentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    cd_drive_file: Optional[shared_cddrivefile.CDDriveFile] = dataclasses.field(default=None)
    r"""The file was created successfully. The response contains the file metadata."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    