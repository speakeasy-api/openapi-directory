/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * User - Represents user metadata added to a Users dataset using the &lt;code&gt;PutUsers&lt;/code&gt; API. For more information see &lt;a href="https://docs.aws.amazon.com/personalize/latest/dg/importing-users.html"&gt;Importing Users Incrementally&lt;/a&gt;.
 */
public class User {
    /**
     * &lt;p&gt;A string map of user-specific metadata. Each element in the map consists of a key-value pair. For example, &lt;code&gt;{"numberOfVideosWatched": "45"}&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The keys use camel case names that match the fields in the schema for the Users dataset. In the previous example, the &lt;code&gt;numberOfVideosWatched&lt;/code&gt; matches the 'NUMBER_OF_VIDEOS_WATCHED' field defined in the Users schema. For categorical string data, to include multiple categories for a single user, separate each category with a pipe separator (&lt;code&gt;|&lt;/code&gt;). For example, &lt;code&gt;\"Member|Frequent shopper\"&lt;/code&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public Object properties;
    public User withProperties(Object properties) {
        this.properties = properties;
        return this;
    }
    
    @JsonProperty("userId")
    public String userId;
    public User withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
