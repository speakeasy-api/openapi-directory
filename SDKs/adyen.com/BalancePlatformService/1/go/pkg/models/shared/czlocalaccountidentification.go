// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CZLocalAccountIdentificationTypeEnum - **czLocal**
type CZLocalAccountIdentificationTypeEnum string

const (
	CZLocalAccountIdentificationTypeEnumCzLocal CZLocalAccountIdentificationTypeEnum = "czLocal"
)

func (e *CZLocalAccountIdentificationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "czLocal":
		*e = CZLocalAccountIdentificationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CZLocalAccountIdentificationTypeEnum: %s", s)
	}
}

// CZLocalAccountIdentification - Bank account identification.
type CZLocalAccountIdentification struct {
	// The 2- to 16-digit bank account number (Číslo účtu) in the following format:
	//
	// - The optional prefix (předčíslí).
	//
	// - The required second part (základní část) which must be at least two non-zero digits.
	//
	// Examples:
	//
	// - **19-123457** (with prefix)
	//
	// - **123457** (without prefix)
	//
	// - **000019-0000123457** (with prefix, normalized)
	//
	// - **000000-0000123457** (without prefix, normalized)
	AccountNumber string `json:"accountNumber"`
	// The 4-digit bank code (Kód banky), without separators or whitespace.
	BankCode string `json:"bankCode"`
	// **czLocal**
	Type CZLocalAccountIdentificationTypeEnum `json:"type"`
}
