"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2agentassistantfeedbacksummarizationfeedback as shared_googleclouddialogflowv2agentassistantfeedbacksummarizationfeedback
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum(str, Enum):
    r"""Optional. Whether or not the suggested answer is relevant. For example: * Query: \\"Can I change my mailing address?\\" * Suggested document says: \\"Items must be returned/exchanged within 60 days of the purchase date.\\" * answer_relevance: AnswerRelevance.IRRELEVANT"""
    ANSWER_RELEVANCE_UNSPECIFIED = 'ANSWER_RELEVANCE_UNSPECIFIED'
    IRRELEVANT = 'IRRELEVANT'
    RELEVANT = 'RELEVANT'

class GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum(str, Enum):
    r"""Optional. Whether or not the information in the document is correct. For example: * Query: \\"Can I return the package in 2 days once received?\\" * Suggested document says: \\"Items must be returned/exchanged within 60 days of the purchase date.\\" * Ground truth: \\"No return or exchange is allowed.\\" * [document_correctness]: INCORRECT"""
    DOCUMENT_CORRECTNESS_UNSPECIFIED = 'DOCUMENT_CORRECTNESS_UNSPECIFIED'
    INCORRECT = 'INCORRECT'
    CORRECT = 'CORRECT'

class GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum(str, Enum):
    r"""Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT."""
    DOCUMENT_EFFICIENCY_UNSPECIFIED = 'DOCUMENT_EFFICIENCY_UNSPECIFIED'
    INEFFICIENT = 'INEFFICIENT'
    EFFICIENT = 'EFFICIENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2AgentAssistantFeedback:
    r"""Detail feedback of Agent Assist result."""
    
    answer_relevance: Optional[GoogleCloudDialogflowV2AgentAssistantFeedbackAnswerRelevanceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answerRelevance'), 'exclude': lambda f: f is None }})
    r"""Optional. Whether or not the suggested answer is relevant. For example: * Query: \\"Can I change my mailing address?\\" * Suggested document says: \\"Items must be returned/exchanged within 60 days of the purchase date.\\" * answer_relevance: AnswerRelevance.IRRELEVANT"""  
    document_correctness: Optional[GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentCorrectnessEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentCorrectness'), 'exclude': lambda f: f is None }})
    r"""Optional. Whether or not the information in the document is correct. For example: * Query: \\"Can I return the package in 2 days once received?\\" * Suggested document says: \\"Items must be returned/exchanged within 60 days of the purchase date.\\" * Ground truth: \\"No return or exchange is allowed.\\" * [document_correctness]: INCORRECT"""  
    document_efficiency: Optional[GoogleCloudDialogflowV2AgentAssistantFeedbackDocumentEfficiencyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentEfficiency'), 'exclude': lambda f: f is None }})
    r"""Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT."""  
    summarization_feedback: Optional[shared_googleclouddialogflowv2agentassistantfeedbacksummarizationfeedback.GoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summarizationFeedback'), 'exclude': lambda f: f is None }})
    r"""Feedback for conversation summarization."""  
    