/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The dimension of the span.
 */
export enum DimensionRangeDimensionEnum {
  DimensionUnspecified = "DIMENSION_UNSPECIFIED",
  Rows = "ROWS",
  Columns = "COLUMNS",
}

/**
 * A range along a single dimension on a sheet. All indexes are zero-based. Indexes are half open: the start index is inclusive and the end index is exclusive. Missing indexes indicate the range is unbounded on that side.
 */
export class DimensionRange extends SpeakeasyBase {
  /**
   * The dimension of the span.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimension" })
  dimension?: DimensionRangeDimensionEnum;

  /**
   * The end (exclusive) of the span, or not set if unbounded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endIndex" })
  endIndex?: number;

  /**
   * The sheet this span is on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sheetId" })
  sheetId?: number;

  /**
   * The start (inclusive) of the span, or not set if unbounded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startIndex" })
  startIndex?: number;
}
