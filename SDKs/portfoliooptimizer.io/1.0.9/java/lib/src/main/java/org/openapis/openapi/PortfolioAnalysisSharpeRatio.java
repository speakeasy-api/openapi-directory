/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class PortfolioAnalysisSharpeRatio {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public PortfolioAnalysisSharpeRatio(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Sharpe Ratio
     * Compute the Sharpe ratio of one or several portfolio(s) from either:
     * * Portfolio assets arithmetic returns and assets covariance matrix
     * * Portfolio values
     * 
     * References
     * * Carl R. Bacon, Practical Portfolio Performance Measurement and Attribution
     * * Harry M. Markowitz, Portfolio Selection, Efficient Diversification of Investments, Second edition, Blackwell Publishers Inc.
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioResponse postPortfolioAnalysisSharpeRatio(Object request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/portfolio/analysis/sharpe-ratio");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioResponse res = new org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioResponse() {{
            postPortfolioAnalysisSharpeRatio200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatio200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatio200ApplicationJSON.class);
                res.postPortfolioAnalysisSharpeRatio200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Bias-Adjusted Sharpe Ratio
     * Compute the Sharpe ratio of one or several portfolio(s), adjusted for small sample bias.
     * 
     * References
     * * [Opdyke, J., Comparing Sharpe ratios: So where are the p-values?. J Asset Manag 8, 308\u2013336 (2007)](https://link.springer.com/article/10.1057/palgrave.jam.2250084)
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioBiasAdjustedResponse postPortfolioAnalysisSharpeRatioBiasAdjusted(org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioBiasAdjustedRequestBody request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/portfolio/analysis/sharpe-ratio/bias-adjusted");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioBiasAdjustedResponse res = new org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioBiasAdjustedResponse() {{
            postPortfolioAnalysisSharpeRatioBiasAdjusted200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioBiasAdjusted200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioBiasAdjusted200ApplicationJSON.class);
                res.postPortfolioAnalysisSharpeRatioBiasAdjusted200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Sharpe Ratio Confidence Interval
     * Build a confidence interval for the Sharpe ratio of one or several portfolio(s).
     * 
     * References
     * * [Opdyke, J.D., Comparing Sharpe ratios: So where are the p-values?. J Asset Manag 8, 308\u2013336 (2007)](https://link.springer.com/article/10.1057/palgrave.jam.2250084)
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioConfidenceIntervalResponse postPortfolioAnalysisSharpeRatioConfidenceInterval(org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBody request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/portfolio/analysis/sharpe-ratio/confidence-interval");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioConfidenceIntervalResponse res = new org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioConfidenceIntervalResponse() {{
            postPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSON.class);
                res.postPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Probabilistic Sharpe Ratio
     * Compute the probabilistic Sharpe ratio of one or several portfolio(s).
     * 
     * References
     * * [Opdyke, J.D., Comparing Sharpe ratios: So where are the p-values?. J Asset Manag 8, 308\u2013336 (2007)](https://link.springer.com/article/10.1057/palgrave.jam.2250084)
     * * [Bailey, David H. and Lopez de Prado, Marcos, The Sharpe Ratio Efficient Frontier (April 1, 2012). Journal of Risk, Vol. 15, No. 2, Winter 2012/13](https://ssrn.com/abstract=1821643)
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilisticResponse postPortfolioAnalysisSharpeRatioProbabilistic(Object request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/portfolio/analysis/sharpe-ratio/probabilistic");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilisticResponse res = new org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilisticResponse() {{
            postPortfolioAnalysisSharpeRatioProbabilistic200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilistic200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilistic200ApplicationJSON.class);
                res.postPortfolioAnalysisSharpeRatioProbabilistic200ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Minimum Track Record Length
     * Compute the minimum track record length of one or several portfolio(s).
     * 
     * References
     * * [Bailey, David H. and Lopez de Prado, Marcos, The Sharpe Ratio Efficient Frontier (April 1, 2012). Journal of Risk, Vol. 15, No. 2, Winter 2012/13](https://ssrn.com/abstract=1821643)
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthResponse postPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength(Object request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/portfolio/analysis/sharpe-ratio/probabilistic/minimum-track-record-length");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthResponse res = new org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthResponse() {{
            postPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSON.class);
                res.postPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLength200ApplicationJSONObject = out;
            }
        }

        return res;
    }
}