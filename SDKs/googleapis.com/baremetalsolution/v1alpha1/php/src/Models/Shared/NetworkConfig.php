<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NetworkConfig - Configuration parameters for a new network.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NetworkConfig
{
    /**
     * Interconnect bandwidth. Set only when type is CLIENT.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkConfigBandwidthEnum $bandwidth
     */
	#[\JMS\Serializer\Annotation\SerializedName('bandwidth')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NetworkConfigBandwidthEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkConfigBandwidthEnum $bandwidth = null;
    
    /**
     * CIDR range of the network.
     * 
     * @var ?string $cidr
     */
	#[\JMS\Serializer\Annotation\SerializedName('cidr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cidr = null;
    
    /**
     * A transient unique identifier to identify a volume within an ProvisioningConfig request.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Location where to deploy the network.
     * 
     * @var ?string $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
    /**
     * Service CIDR, if any.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkConfigServiceCidrEnum $serviceCidr
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceCidr')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NetworkConfigServiceCidrEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkConfigServiceCidrEnum $serviceCidr = null;
    
    /**
     * The type of this network.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkConfigTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NetworkConfigTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkConfigTypeEnum $type = null;
    
    /**
     * User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).
     * 
     * @var ?string $userNote
     */
	#[\JMS\Serializer\Annotation\SerializedName('userNote')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userNote = null;
    
    /**
     * List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\VlanAttachment> $vlanAttachments
     */
	#[\JMS\Serializer\Annotation\SerializedName('vlanAttachments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VlanAttachment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $vlanAttachments = null;
    
	public function __construct()
	{
		$this->bandwidth = null;
		$this->cidr = null;
		$this->id = null;
		$this->location = null;
		$this->serviceCidr = null;
		$this->type = null;
		$this->userNote = null;
		$this->vlanAttachments = null;
	}
}
