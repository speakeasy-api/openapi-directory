// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type PreprintsReadPathParams struct {
	// The unique identifier of the preprint.
	PreprintID string `pathParam:"style=simple,explode=false,name=preprint_id"`
}

type PreprintsReadRequest struct {
	PathParams PreprintsReadPathParams
}

// PreprintsReadPreprintAttributes - The properties of the preprint entity.
type PreprintsReadPreprintAttributes struct {
	// The time at which the preprint was created, as an iso8601 formatted timestamp.
	DateCreated *time.Time
	// The time at which the preprint was last modified, as an iso8601 formatted timestamp.
	DateModified *time.Time
	// The time at which the preprint was published, as an iso8601 formatted timestamp.
	DatePublished *time.Time
	// The DOI of the associated journal article, as entered by the user, if the preprint is published.
	Doi *string
	// Whether or not the preprint is orphaned. A preprint can be orphaned if it's primary file was removed from the preprint node. This field may be deprecated in future versions.
	IsPreprintOrphan *bool
	// The metadata (copyright year and holder) associated with a license, required for certain licenses.
	LicenseRecord *string
	// A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
	Subjects []string
}

// PreprintsReadPreprintLinks - URLs to alternative representations of the preprint entity.
type PreprintsReadPreprintLinks struct {
	// The URL representation of the DOI entered by the user for the preprint manuscript.
	Doi *string
	// A link to the project on the OSF that was created for the preprint, or from which the preprint was created.
	HTML *string
	// The URL representation of the OSF assigned DOI for the preprint.
	PreprintDoi *string
	// A link to the detail page for the preprint.
	Self *string
}

// PreprintsReadPreprintRelationships - URLs to other entities or entity collections that have a relationship to the preprint entity.
type PreprintsReadPreprintRelationships struct {
	// A relationship to the bibliographic contributors that are listed as contributing to this preprint.
	BibliographicContributors *string
	// A relationship to the citation of the preprint.
	Citation *string
	// A relationship to the identifiers associated with the preprint.
	Identifiers *string
	// A relationship to the license that has been applied to the preprint.
	License *string
	// A relationship to the node that was created for the preprint, or from which the preprint was created.
	Node string
	// A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
	PrimaryFile string
	// A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
	Provider string
}

// PreprintsReadPreprint - OK
type PreprintsReadPreprint struct {
	// The properties of the preprint entity.
	Attributes *PreprintsReadPreprintAttributes
	// The identifier of the preprint entity.
	ID *string
	// URLs to alternative representations of the preprint entity.
	Links *PreprintsReadPreprintLinks
	// URLs to other entities or entity collections that have a relationship to the preprint entity.
	Relationships PreprintsReadPreprintRelationships
	// The type identifier of the preprint entity (`preprints`).
	Type string
}

type PreprintsReadResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
