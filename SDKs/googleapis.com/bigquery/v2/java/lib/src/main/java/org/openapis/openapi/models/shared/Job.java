/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Job {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuration")
    public JobConfiguration configuration;

    public Job withConfiguration(JobConfiguration configuration) {
        this.configuration = configuration;
        return this;
    }
    
    /**
     * [Output-only] A hash of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Job withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * [Output-only] Opaque ID field of the job
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Job withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobReference")
    public JobReference jobReference;

    public Job withJobReference(JobReference jobReference) {
        this.jobReference = jobReference;
        return this;
    }
    
    /**
     * [Output-only] The type of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Job withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * [Output-only] A URL that can be used to access this resource again.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public Job withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statistics")
    public JobStatistics statistics;

    public Job withStatistics(JobStatistics statistics) {
        this.statistics = statistics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public JobStatus status;

    public Job withStatus(JobStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * [Output-only] Email address of the user who ran the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_email")
    public String userEmail;

    public Job withUserEmail(String userEmail) {
        this.userEmail = userEmail;
        return this;
    }
    
    public Job(){}
}
