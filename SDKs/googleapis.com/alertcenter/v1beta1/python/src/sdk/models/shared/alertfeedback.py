"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AlertFeedbackTypeEnum(str, Enum):
    r"""Required. The type of the feedback."""
    ALERT_FEEDBACK_TYPE_UNSPECIFIED = 'ALERT_FEEDBACK_TYPE_UNSPECIFIED'
    NOT_USEFUL = 'NOT_USEFUL'
    SOMEWHAT_USEFUL = 'SOMEWHAT_USEFUL'
    VERY_USEFUL = 'VERY_USEFUL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AlertFeedback:
    r"""A customer feedback about an alert."""
    
    alert_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alertId'), 'exclude': lambda f: f is None }})
    r"""Output only. The alert identifier."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time this feedback was created."""  
    customer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerId'), 'exclude': lambda f: f is None }})
    r"""Output only. The unique identifier of the Google Workspace account of the customer."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Output only. The email of the user that provided the feedback."""  
    feedback_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feedbackId'), 'exclude': lambda f: f is None }})
    r"""Output only. The unique identifier for the feedback."""  
    type: Optional[AlertFeedbackTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Required. The type of the feedback."""  
    