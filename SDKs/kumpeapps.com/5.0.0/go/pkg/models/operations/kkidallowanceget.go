// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type KkidAllowanceGetSecurity struct {
	AuthKey shared.SchemeAuthKey `security:"scheme,type=apiKey,subtype=header"`
}

type KkidAllowanceGetQueryParams struct {
	// userID of the kid
	KidUserID int64 `queryParam:"style=form,explode=true,name=kidUserId"`
	// number of days you wish to search allowance transactions (default is 90 days)
	TransactionDays *int64 `queryParam:"style=form,explode=true,name=transactionDays"`
}

type KkidAllowanceGetRequest struct {
	QueryParams KkidAllowanceGetQueryParams
	Security    KkidAllowanceGetSecurity
}

type KkidAllowanceGetResponse struct {
	// Method Not Allowed- API user does not have access to use this method
	FourHundredAndFive *shared.FourHundredAndFive
	// API Access Denied! Your API key is invalid, expired, or not supplied!
	FourHundredAndTwelve *shared.FourHundredAndTwelve
	ContentType          string
	StatusCode           int
	RawResponse          *http.Response
	// search results matching criteria
	Allowance *shared.Allowance
	// No Data Returned
	Nodata *shared.Nodata
}
