/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Workforce - A single private workforce, which is automatically created when you create your first private work team. You can create one private work force in each Amazon Web Services Region. By default, any workforce-related API operation used in a specific region will apply to the workforce created in that region. To learn how to create a private workforce, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/sms-workforce-create-private.html"&gt;Create a Private Workforce&lt;/a&gt;.
 */
public class Workforce {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CognitoConfig")
    public CognitoConfig cognitoConfig;
    public Workforce withCognitoConfig(CognitoConfig cognitoConfig) {
        this.cognitoConfig = cognitoConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreateDate")
    public OffsetDateTime createDate;
    public Workforce withCreateDate(OffsetDateTime createDate) {
        this.createDate = createDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureReason")
    public String failureReason;
    public Workforce withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedDate")
    public OffsetDateTime lastUpdatedDate;
    public Workforce withLastUpdatedDate(OffsetDateTime lastUpdatedDate) {
        this.lastUpdatedDate = lastUpdatedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OidcConfig")
    public OidcConfigForResponse oidcConfig;
    public Workforce withOidcConfig(OidcConfigForResponse oidcConfig) {
        this.oidcConfig = oidcConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceIpConfig")
    public SourceIpConfig sourceIpConfig;
    public Workforce withSourceIpConfig(SourceIpConfig sourceIpConfig) {
        this.sourceIpConfig = sourceIpConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public WorkforceStatusEnum status;
    public Workforce withStatus(WorkforceStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubDomain")
    public String subDomain;
    public Workforce withSubDomain(String subDomain) {
        this.subDomain = subDomain;
        return this;
    }
    
    @JsonProperty("WorkforceArn")
    public String workforceArn;
    public Workforce withWorkforceArn(String workforceArn) {
        this.workforceArn = workforceArn;
        return this;
    }
    
    @JsonProperty("WorkforceName")
    public String workforceName;
    public Workforce withWorkforceName(String workforceName) {
        this.workforceName = workforceName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkforceVpcConfig")
    public WorkforceVpcConfigResponse workforceVpcConfig;
    public Workforce withWorkforceVpcConfig(WorkforceVpcConfigResponse workforceVpcConfig) {
        this.workforceVpcConfig = workforceVpcConfig;
        return this;
    }
    
}
