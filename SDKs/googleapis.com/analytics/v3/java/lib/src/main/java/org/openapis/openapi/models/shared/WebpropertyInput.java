/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WebpropertyInput - JSON template for an Analytics web property.
 */
public class WebpropertyInput {
    /**
     * Account ID to which this web property belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public WebpropertyInput withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Child link for this web property. Points to the list of views (profiles) for this web property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("childLink")
    public WebpropertyChildLink childLink;

    public WebpropertyInput withChildLink(WebpropertyChildLink childLink) {
        this.childLink = childLink;
        return this;
    }
    
    /**
     * Set to true to reset the retention period of the user identifier with each new event from that user (thus setting the expiration date to current time plus retention period).
     * Set to false to delete data associated with the user identifier automatically after the rentention period.
     * This property cannot be set on insert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataRetentionResetOnNewActivity")
    public Boolean dataRetentionResetOnNewActivity;

    public WebpropertyInput withDataRetentionResetOnNewActivity(Boolean dataRetentionResetOnNewActivity) {
        this.dataRetentionResetOnNewActivity = dataRetentionResetOnNewActivity;
        return this;
    }
    
    /**
     * The length of time for which user and event data is retained.
     * This property cannot be set on insert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataRetentionTtl")
    public String dataRetentionTtl;

    public WebpropertyInput withDataRetentionTtl(String dataRetentionTtl) {
        this.dataRetentionTtl = dataRetentionTtl;
        return this;
    }
    
    /**
     * Default view (profile) ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultProfileId")
    public String defaultProfileId;

    public WebpropertyInput withDefaultProfileId(String defaultProfileId) {
        this.defaultProfileId = defaultProfileId;
        return this;
    }
    
    /**
     * Web property ID of the form UA-XXXXX-YY.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public WebpropertyInput withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The industry vertical/category selected for this web property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("industryVertical")
    public String industryVertical;

    public WebpropertyInput withIndustryVertical(String industryVertical) {
        this.industryVertical = industryVertical;
        return this;
    }
    
    /**
     * Name of this web property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public WebpropertyInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Parent link for this web property. Points to the account to which this web property belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentLink")
    public WebpropertyParentLink parentLink;

    public WebpropertyInput withParentLink(WebpropertyParentLink parentLink) {
        this.parentLink = parentLink;
        return this;
    }
    
    /**
     * Indicates whether this web property is starred or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("starred")
    public Boolean starred;

    public WebpropertyInput withStarred(Boolean starred) {
        this.starred = starred;
        return this;
    }
    
    /**
     * Website url for this web property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("websiteUrl")
    public String websiteUrl;

    public WebpropertyInput withWebsiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
        return this;
    }
    
    public WebpropertyInput(){}
}
