"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceStatistics:
    r"""Provides statistical data for sensitive data discovery metrics that apply to an S3 bucket that Amazon Macie monitors and analyzes for your account. The statistics capture the results of automated sensitive data discovery activities that Macie has performed for the bucket. The data is available only if automated sensitive data discovery is currently enabled for your account."""
    
    total_bytes_classified: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalBytesClassified'), 'exclude': lambda f: f is None }})  
    total_detections: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalDetections'), 'exclude': lambda f: f is None }})  
    total_detections_suppressed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalDetectionsSuppressed'), 'exclude': lambda f: f is None }})  
    total_items_classified: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItemsClassified'), 'exclude': lambda f: f is None }})  
    total_items_sensitive: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItemsSensitive'), 'exclude': lambda f: f is None }})  
    total_items_skipped: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItemsSkipped'), 'exclude': lambda f: f is None }})  
    total_items_skipped_invalid_encryption: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItemsSkippedInvalidEncryption'), 'exclude': lambda f: f is None }})  
    total_items_skipped_invalid_kms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItemsSkippedInvalidKms'), 'exclude': lambda f: f is None }})  
    total_items_skipped_permission_denied: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItemsSkippedPermissionDenied'), 'exclude': lambda f: f is None }})  
    