// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequestBodyIpv4 - The IPv4 attributes of the trusted server being added
type CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequestBodyIpv4 struct {
	// The IPv4 address of the trusted server being added
	Address *string `json:"address,omitempty"`
}

type CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequestBody struct {
	// The IPv4 attributes of the trusted server being added
	Ipv4 CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequestBodyIpv4 `json:"ipv4"`
	// The mac address of the trusted server being added
	Mac string `json:"mac"`
	// The VLAN of the trusted server being added. It must be between 1 and 4094
	Vlan int64 `json:"vlan"`
}

type CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequest struct {
	RequestBody CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                                                   `pathParam:"style=simple,explode=false,name=networkId"`
}

// CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer201ApplicationJSONIpv4 - IPv4 attributes of the trusted server.
type CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer201ApplicationJSONIpv4 struct {
	// IPv4 address of the trusted server.
	Address *string `json:"address,omitempty"`
}

// CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer201ApplicationJSON - Successful operation
type CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer201ApplicationJSON struct {
	// IPv4 attributes of the trusted server.
	Ipv4 *CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer201ApplicationJSONIpv4 `json:"ipv4,omitempty"`
	// Mac address of the trusted server.
	Mac *string `json:"mac,omitempty"`
	// ID of the trusted server.
	TrustedServerID *string `json:"trustedServerId,omitempty"`
	// Vlan ID of the trusted server.
	Vlan *int64 `json:"vlan,omitempty"`
}

type CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer201ApplicationJSONObject *CreateNetworkSwitchDhcpServerPolicyArpInspectionTrustedServer201ApplicationJSON
}
