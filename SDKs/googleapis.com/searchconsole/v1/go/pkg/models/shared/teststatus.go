// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TestStatusStatusEnum - Status of the test.
type TestStatusStatusEnum string

const (
	TestStatusStatusEnumTestStatusUnspecified TestStatusStatusEnum = "TEST_STATUS_UNSPECIFIED"
	TestStatusStatusEnumComplete              TestStatusStatusEnum = "COMPLETE"
	TestStatusStatusEnumInternalError         TestStatusStatusEnum = "INTERNAL_ERROR"
	TestStatusStatusEnumPageUnreachable       TestStatusStatusEnum = "PAGE_UNREACHABLE"
)

func (e TestStatusStatusEnum) ToPointer() *TestStatusStatusEnum {
	return &e
}

func (e *TestStatusStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TEST_STATUS_UNSPECIFIED":
		fallthrough
	case "COMPLETE":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "PAGE_UNREACHABLE":
		*e = TestStatusStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestStatusStatusEnum: %v", v)
	}
}

// TestStatus - Final state of the test, including error details if necessary.
type TestStatus struct {
	// Error details if applicable.
	Details *string `json:"details,omitempty"`
	// Status of the test.
	Status *TestStatusStatusEnum `json:"status,omitempty"`
}
