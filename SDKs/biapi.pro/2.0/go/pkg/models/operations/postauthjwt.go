// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PostAuthJwtRequestBody struct {
	// id of the client
	ClientID *string `multipartForm:"name=client_id"`
	// secret for the client
	ClientSecret *string `multipartForm:"name=client_secret"`
	// if set to True, the token will expire n minutes after its creation, n being the value of configuration key auth.default_token_expire (default: True)
	Expire *bool `multipartForm:"name=expire"`
	// user for whom the token has to be generated. If not supplied, a user will be created
	IDUser *int64 `multipartForm:"name=id_user"`
	// scope requested for the token
	Scope *string `multipartForm:"name=scope"`
}

type PostAuthJwt200ApplicationJSON struct {
	// the jwt token
	JwtToken string `json:"jwt_token"`
	// the payload contained in the jwt token
	Payload map[string]interface{} `json:"payload"`
}

type PostAuthJwtResponse struct {
	ContentType                         string
	StatusCode                          int
	RawResponse                         *http.Response
	PostAuthJwt200ApplicationJSONObject *PostAuthJwt200ApplicationJSON
}
