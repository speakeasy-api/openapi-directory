// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListLoggingConfigurationsXAmzTargetEnum
type ListLoggingConfigurationsXAmzTargetEnum string

const (
	ListLoggingConfigurationsXAmzTargetEnumAwswafRegional20161128ListLoggingConfigurations ListLoggingConfigurationsXAmzTargetEnum = "AWSWAF_Regional_20161128.ListLoggingConfigurations"
)

func (e *ListLoggingConfigurationsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSWAF_Regional_20161128.ListLoggingConfigurations":
		*e = ListLoggingConfigurationsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListLoggingConfigurationsXAmzTargetEnum: %s", s)
	}
}

type ListLoggingConfigurationsHeaders struct {
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListLoggingConfigurationsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListLoggingConfigurationsRequest struct {
	Headers ListLoggingConfigurationsHeaders
	Request shared.ListLoggingConfigurationsRequest `request:"mediaType=application/json"`
}

type ListLoggingConfigurationsResponse struct {
	ContentType string
	// Success
	ListLoggingConfigurationsResponse *shared.ListLoggingConfigurationsResponse
	StatusCode                        int
	RawResponse                       *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
}
