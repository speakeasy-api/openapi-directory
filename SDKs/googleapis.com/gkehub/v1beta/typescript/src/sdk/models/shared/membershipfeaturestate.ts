/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppDevExperienceFeatureState } from "./appdevexperiencefeaturestate";
import { ConfigManagementMembershipState } from "./configmanagementmembershipstate";
import { FeatureState } from "./featurestate";
import { IdentityServiceMembershipState } from "./identityservicemembershipstate";
import { MeteringMembershipState } from "./meteringmembershipstate";
import { PolicyControllerMembershipState } from "./policycontrollermembershipstate";
import { ServiceMeshMembershipState } from "./servicemeshmembershipstate";
import { Expose, Type } from "class-transformer";

/**
 * MembershipFeatureState contains Feature status information for a single Membership.
 */
export class MembershipFeatureState extends SpeakeasyBase {
  /**
   * State for App Dev Exp Feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appdevexperience" })
  @Type(() => AppDevExperienceFeatureState)
  appdevexperience?: AppDevExperienceFeatureState;

  /**
   * **Anthos Config Management**: State for a single cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configmanagement" })
  @Type(() => ConfigManagementMembershipState)
  configmanagement?: ConfigManagementMembershipState;

  /**
   * **FleetObservability**: An empty state left as an example membership-specific Feature state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fleetobservability" })
  fleetobservability?: Record<string, any>;

  /**
   * **Anthos Identity Service**: State for a single Membership.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identityservice" })
  @Type(() => IdentityServiceMembershipState)
  identityservice?: IdentityServiceMembershipState;

  /**
   * **Metering**: Per-Membership Feature State.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metering" })
  @Type(() => MeteringMembershipState)
  metering?: MeteringMembershipState;

  /**
   * **Policy Controller**: State for a single cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policycontroller" })
  @Type(() => PolicyControllerMembershipState)
  policycontroller?: PolicyControllerMembershipState;

  /**
   * **Service Mesh**: State for a single Membership, as analyzed by the Service Mesh Hub Controller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "servicemesh" })
  @Type(() => ServiceMeshMembershipState)
  servicemesh?: ServiceMeshMembershipState;

  /**
   * FeatureState describes the high-level state of a Feature. It may be used to describe a Feature's state at the environ-level, or per-membershop, depending on the context.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(() => FeatureState)
  state?: FeatureState;
}
