"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import objectexpiration as shared_objectexpiration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateUploadShareRequest:
    r"""Request model for updating an Upload Share"""
    
    default_country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultCountry'), 'exclude': lambda f: f is None }})
    r"""Country shorthand symbol (cf. ISO 3166-2)"""  
    expiration: Optional[shared_objectexpiration.ObjectExpiration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiration'), 'exclude': lambda f: f is None }})
    r"""Expiration information"""  
    files_expiry_period: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filesExpiryPeriod'), 'exclude': lambda f: f is None }})
    r"""Number of days after which uploaded files expire"""  
    internal_notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('internalNotes'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.11.0
    
    Internal notes
    """  
    max_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxSize'), 'exclude': lambda f: f is None }})
    r"""Maximal total size of uploaded files (in bytes)"""  
    max_slots: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxSlots'), 'exclude': lambda f: f is None }})
    r"""Maximal amount of files to upload"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Alias name"""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""User notes"""  
    notify_creator: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notifyCreator'), 'exclude': lambda f: f is None }})
    r"""&#128679; Deprecated since v4.20.0
    
    Notify creator on every upload.
    """  
    password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""Password"""  
    receiver_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverLanguage'), 'exclude': lambda f: f is None }})
    r"""Language tag for messages to receiver"""  
    reset_files_expiry_period: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resetFilesExpiryPeriod'), 'exclude': lambda f: f is None }})
    r"""Set 'true' to reset 'filesExpiryPeriod' for Upload Share"""  
    reset_max_size: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resetMaxSize'), 'exclude': lambda f: f is None }})
    r"""Set 'true' to reset 'maxSize' for Upload Share"""  
    reset_max_slots: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resetMaxSlots'), 'exclude': lambda f: f is None }})
    r"""Set 'true' to reset 'maxSlots' for Upload Share"""  
    reset_password: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resetPassword'), 'exclude': lambda f: f is None }})
    r"""Set 'true' to reset 'password' for Upload Share."""  
    show_creator_name: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('showCreatorName'), 'exclude': lambda f: f is None }})
    r"""Show creator first and last name."""  
    show_creator_username: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('showCreatorUsername'), 'exclude': lambda f: f is None }})
    r"""Show creator email address."""  
    show_uploaded_files: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('showUploadedFiles'), 'exclude': lambda f: f is None }})
    r"""Allow display of already uploaded files"""  
    text_message_recipients: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textMessageRecipients'), 'exclude': lambda f: f is None }})
    r"""List of recipient FQTNs
    
    E.123 / E.164 Format
    """  
    