<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class OrderLineItem
{
    /**
     * $discountAllocations
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderDiscountAllocation> $discountAllocations
     */
	#[\JMS\Serializer\Annotation\SerializedName('discountAllocations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderDiscountAllocation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $discountAllocations = null;
    
    /**
     * A unique, persistent identifier for this record
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Reference that links the line item to the correct product details.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProductRef $productRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('productRef')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ProductRef')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProductRef $productRef = null;
    
    /**
     * Reference that links the line item to the specific version of product that has been ordered.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProductVariantRef $productVariantRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('productVariantRef')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ProductVariantRef')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProductVariantRef $productVariantRef = null;
    
    /**
     * Number of units of the product sold.
     * 
     * For refunds, quantity is a negative value.
     * 
     * 
     * @var ?float $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $quantity = null;
    
    /**
     * Percentage rate (from 0 to 100) of any sale tax applied to the unit amount.
     * 
     * @var ?float $taxPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxPercentage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $taxPercentage = null;
    
    /**
     * Taxes breakdown as applied to order lines.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TaxComponentAllocation> $taxes
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TaxComponentAllocation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taxes = null;
    
    /**
     * Total price of the line item, including discounts, tax and minus any refunds.
     * 
     * @var ?float $totalAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalAmount = null;
    
    /**
     * Total amount of tax applied to the line item.
     * 
     * @var ?float $totalTaxAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalTaxAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalTaxAmount = null;
    
    /**
     * Price per unit of goods or service.
     * 
     * @var ?float $unitPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('unitPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $unitPrice = null;
    
	public function __construct()
	{
		$this->discountAllocations = null;
		$this->id = "";
		$this->productRef = null;
		$this->productVariantRef = null;
		$this->quantity = null;
		$this->taxPercentage = null;
		$this->taxes = null;
		$this->totalAmount = null;
		$this->totalTaxAmount = null;
		$this->unitPrice = null;
	}
}
