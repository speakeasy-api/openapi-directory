"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import phasestatus_enum as shared_phasestatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskExecutionResultDetail:
    r"""Describes the detailed result of a <code>TaskExecution</code> operation. This result includes the time in milliseconds spent in each phase, the status of the task execution, and the errors encountered."""
    
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ErrorCode'), 'exclude': lambda f: f is None }})  
    error_detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ErrorDetail'), 'exclude': lambda f: f is None }})  
    prepare_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrepareDuration'), 'exclude': lambda f: f is None }})  
    prepare_status: Optional[shared_phasestatus_enum.PhaseStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrepareStatus'), 'exclude': lambda f: f is None }})  
    total_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalDuration'), 'exclude': lambda f: f is None }})  
    transfer_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransferDuration'), 'exclude': lambda f: f is None }})  
    transfer_status: Optional[shared_phasestatus_enum.PhaseStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransferStatus'), 'exclude': lambda f: f is None }})  
    verify_duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VerifyDuration'), 'exclude': lambda f: f is None }})  
    verify_status: Optional[shared_phasestatus_enum.PhaseStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VerifyStatus'), 'exclude': lambda f: f is None }})  
    