/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrganizationFeatureSetEnum } from "./organizationfeaturesetenum";
import { PolicyTypeSummary } from "./policytypesummary";
import { Expose, Type } from "class-transformer";

/**
 * Contains details about an organization. An organization is a collection of accounts that are centrally managed together using consolidated billing, organized hierarchically with organizational units (OUs), and controlled with policies .
 */
export class Organization extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata({ elemType: PolicyTypeSummary })
  @Expose({ name: "AvailablePolicyTypes" })
  @Type(() => PolicyTypeSummary)
  availablePolicyTypes?: PolicyTypeSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureSet" })
  featureSet?: OrganizationFeatureSetEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MasterAccountArn" })
  masterAccountArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MasterAccountEmail" })
  masterAccountEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MasterAccountId" })
  masterAccountId?: string;
}
