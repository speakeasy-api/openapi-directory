/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AdminGetUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

export class AdminGetUser200ApplicationJSONApprovedBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;
}

export class AdminGetUser200ApplicationJSONGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allow_membership_requests" })
  allowMembershipRequests: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "automatic" })
  automatic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "bio_cooked" })
  bioCooked: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bio_excerpt" })
  bioExcerpt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bio_raw" })
  bioRaw: string;

  @SpeakeasyMetadata()
  @Expose({ name: "can_admin_group" })
  canAdminGroup: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_see_members" })
  canSeeMembers: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "default_notification_level" })
  defaultNotificationLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_bg_color" })
  flairBgColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_color" })
  flairColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_url" })
  flairUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "full_name" })
  fullName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "grant_trust_level" })
  grantTrustLevel: string;

  @SpeakeasyMetadata()
  @Expose({ name: "has_messages" })
  hasMessages: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "incoming_email" })
  incomingEmail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "members_visibility_level" })
  membersVisibilityLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "membership_request_template" })
  membershipRequestTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mentionable_level" })
  mentionableLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "messageable_level" })
  messageableLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_group" })
  primaryGroup: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "public_admission" })
  publicAdmission: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "public_exit" })
  publicExit: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "publish_read_state" })
  publishReadState: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_count" })
  userCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "visibility_level" })
  visibilityLevel: number;
}

export class AdminGetUser200ApplicationJSONPenaltyCounts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "silenced" })
  silenced: number;

  @SpeakeasyMetadata()
  @Expose({ name: "suspended" })
  suspended: number;
}

export class AdminGetUser200ApplicationJSONTl3RequirementsPenaltyCounts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "silenced" })
  silenced: number;

  @SpeakeasyMetadata()
  @Expose({ name: "suspended" })
  suspended: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}

export class AdminGetUser200ApplicationJSONTl3Requirements extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "days_visited" })
  daysVisited: number;

  @SpeakeasyMetadata()
  @Expose({ name: "max_flagged_by_users" })
  maxFlaggedByUsers: number;

  @SpeakeasyMetadata()
  @Expose({ name: "max_flagged_posts" })
  maxFlaggedPosts: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_days_visited" })
  minDaysVisited: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_likes_given" })
  minLikesGiven: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_likes_received" })
  minLikesReceived: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_likes_received_days" })
  minLikesReceivedDays: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_likes_received_users" })
  minLikesReceivedUsers: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_posts_read" })
  minPostsRead: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_posts_read_all_time" })
  minPostsReadAllTime: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_topics_replied_to" })
  minTopicsRepliedTo: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_topics_viewed" })
  minTopicsViewed: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min_topics_viewed_all_time" })
  minTopicsViewedAllTime: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_flagged_by_users" })
  numFlaggedByUsers: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_flagged_posts" })
  numFlaggedPosts: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_likes_given" })
  numLikesGiven: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_likes_received" })
  numLikesReceived: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_likes_received_days" })
  numLikesReceivedDays: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_likes_received_users" })
  numLikesReceivedUsers: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_topics_replied_to" })
  numTopicsRepliedTo: number;

  @SpeakeasyMetadata()
  @Expose({ name: "on_grace_period" })
  onGracePeriod: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "penalty_counts" })
  @Type(() => AdminGetUser200ApplicationJSONTl3RequirementsPenaltyCounts)
  penaltyCounts: AdminGetUser200ApplicationJSONTl3RequirementsPenaltyCounts;

  @SpeakeasyMetadata()
  @Expose({ name: "posts_read" })
  postsRead: number;

  @SpeakeasyMetadata()
  @Expose({ name: "posts_read_all_time" })
  postsReadAllTime: number;

  @SpeakeasyMetadata()
  @Expose({ name: "requirements_lost" })
  requirementsLost: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "requirements_met" })
  requirementsMet: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "time_period" })
  timePeriod: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topics_viewed" })
  topicsViewed: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topics_viewed_all_time" })
  topicsViewedAllTime: number;

  @SpeakeasyMetadata()
  @Expose({ name: "trust_level_locked" })
  trustLevelLocked: boolean;
}

/**
 * response
 */
export class AdminGetUser200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "admin" })
  admin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "api_key_count" })
  apiKeyCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "approved_by" })
  @Type(() => AdminGetUser200ApplicationJSONApprovedBy)
  approvedBy: AdminGetUser200ApplicationJSONApprovedBy;

  @SpeakeasyMetadata()
  @Expose({ name: "associated_accounts" })
  associatedAccounts?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "badge_count" })
  badgeCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "bounce_score" })
  bounceScore: number;

  @SpeakeasyMetadata()
  @Expose({ name: "can_activate" })
  canActivate: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_be_anonymized" })
  canBeAnonymized: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_be_deleted" })
  canBeDeleted: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_be_merged" })
  canBeMerged: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_deactivate" })
  canDeactivate: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_delete_all_posts" })
  canDeleteAllPosts: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_delete_sso_record" })
  canDeleteSsoRecord: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_disable_second_factor" })
  canDisableSecondFactor: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_grant_admin" })
  canGrantAdmin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_grant_moderation" })
  canGrantModeration: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_impersonate" })
  canImpersonate: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_revoke_admin" })
  canRevokeAdmin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_revoke_moderation" })
  canRevokeModeration: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_send_activation_email" })
  canSendActivationEmail: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_view_action_logs" })
  canViewActionLogs: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at_age" })
  createdAtAge: number;

  @SpeakeasyMetadata()
  @Expose({ name: "days_visited" })
  daysVisited: number;

  @SpeakeasyMetadata()
  @Expose({ name: "external_ids" })
  externalIds: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "flag_level" })
  flagLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "flags_given_count" })
  flagsGivenCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "flags_received_count" })
  flagsReceivedCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "full_suspend_reason" })
  fullSuspendReason: string;

  @SpeakeasyMetadata({ elemType: AdminGetUser200ApplicationJSONGroups })
  @Expose({ name: "groups" })
  @Type(() => AdminGetUser200ApplicationJSONGroups)
  groups: AdminGetUser200ApplicationJSONGroups[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ip_address" })
  ipAddress: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_emailed_age" })
  lastEmailedAge: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_emailed_at" })
  lastEmailedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_seen_age" })
  lastSeenAge: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_seen_at" })
  lastSeenAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "like_count" })
  likeCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "like_given_count" })
  likeGivenCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "manual_locked_trust_level" })
  manualLockedTrustLevel: string;

  @SpeakeasyMetadata()
  @Expose({ name: "moderator" })
  moderator: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_penalty" })
  nextPenalty?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "penalty_counts" })
  @Type(() => AdminGetUser200ApplicationJSONPenaltyCounts)
  penaltyCounts?: AdminGetUser200ApplicationJSONPenaltyCounts;

  @SpeakeasyMetadata()
  @Expose({ name: "post_count" })
  postCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "post_edits_count" })
  postEditsCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "posts_read_count" })
  postsReadCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_group_id" })
  primaryGroupId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "private_topics_count" })
  privateTopicsCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "registration_ip_address" })
  registrationIpAddress: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reset_bounce_score_after" })
  resetBounceScoreAfter: string;

  @SpeakeasyMetadata()
  @Expose({ name: "silence_reason" })
  silenceReason: string;

  @SpeakeasyMetadata()
  @Expose({ name: "silenced_by" })
  silencedBy: string;

  @SpeakeasyMetadata()
  @Expose({ name: "single_sign_on_record" })
  singleSignOnRecord: string;

  @SpeakeasyMetadata()
  @Expose({ name: "staged" })
  staged: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "suspended_by" })
  suspendedBy: string;

  @SpeakeasyMetadata()
  @Expose({ name: "time_read" })
  timeRead: number;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tl3_requirements" })
  @Type(() => AdminGetUser200ApplicationJSONTl3Requirements)
  tl3Requirements?: AdminGetUser200ApplicationJSONTl3Requirements;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_count" })
  topicCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topics_entered" })
  topicsEntered: number;

  @SpeakeasyMetadata()
  @Expose({ name: "trust_level" })
  trustLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;

  @SpeakeasyMetadata()
  @Expose({ name: "warnings_received_count" })
  warningsReceivedCount: number;
}

export class AdminGetUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * response
   */
  @SpeakeasyMetadata()
  adminGetUser200ApplicationJSONObject?: AdminGetUser200ApplicationJSON;
}
