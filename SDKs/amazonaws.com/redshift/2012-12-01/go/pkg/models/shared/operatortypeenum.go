// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OperatorTypeEnum string

const (
	OperatorTypeEnumEq      OperatorTypeEnum = "eq"
	OperatorTypeEnumLt      OperatorTypeEnum = "lt"
	OperatorTypeEnumGt      OperatorTypeEnum = "gt"
	OperatorTypeEnumLe      OperatorTypeEnum = "le"
	OperatorTypeEnumGe      OperatorTypeEnum = "ge"
	OperatorTypeEnumIn      OperatorTypeEnum = "in"
	OperatorTypeEnumBetween OperatorTypeEnum = "between"
)

func (e OperatorTypeEnum) ToPointer() *OperatorTypeEnum {
	return &e
}

func (e *OperatorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "eq":
		fallthrough
	case "lt":
		fallthrough
	case "gt":
		fallthrough
	case "le":
		fallthrough
	case "ge":
		fallthrough
	case "in":
		fallthrough
	case "between":
		*e = OperatorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OperatorTypeEnum: %v", v)
	}
}
