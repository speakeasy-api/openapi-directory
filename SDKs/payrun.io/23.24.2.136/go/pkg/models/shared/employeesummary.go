// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// EmployeeSummaryEmployeeSummaryEmployeeLink - The employee summarys' employee link
type EmployeeSummaryEmployeeSummaryEmployeeLink struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// EmployeeSummaryEmployeeSummaryEmployerLink - The employee summarys' employer link
type EmployeeSummaryEmployeeSummaryEmployerLink struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// EmployeeSummaryEmployeeSummaryPayScheduleLink - The employee summarys' pay schedule link
type EmployeeSummaryEmployeeSummaryPayScheduleLink struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// EmployeeSummaryEmployeeSummaryTaxBasisEnum - The employee summarys' tax basis
type EmployeeSummaryEmployeeSummaryTaxBasisEnum string

const (
	EmployeeSummaryEmployeeSummaryTaxBasisEnumCumulative  EmployeeSummaryEmployeeSummaryTaxBasisEnum = "Cumulative"
	EmployeeSummaryEmployeeSummaryTaxBasisEnumWeek1Month1 EmployeeSummaryEmployeeSummaryTaxBasisEnum = "Week1Month1"
)

func (e EmployeeSummaryEmployeeSummaryTaxBasisEnum) ToPointer() *EmployeeSummaryEmployeeSummaryTaxBasisEnum {
	return &e
}

func (e *EmployeeSummaryEmployeeSummaryTaxBasisEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Cumulative":
		fallthrough
	case "Week1Month1":
		*e = EmployeeSummaryEmployeeSummaryTaxBasisEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeSummaryEmployeeSummaryTaxBasisEnum: %v", v)
	}
}

type EmployeeSummaryEmployeeSummary struct {
	// The employee summarys' code
	Code *string `json:"Code,omitempty"`
	// The employee summarys' effective date
	EffectiveDate *types.Date `json:"EffectiveDate,omitempty"`
	// The employee summarys' employee link
	EmployeeLink *EmployeeSummaryEmployeeSummaryEmployeeLink `json:"EmployeeLink,omitempty"`
	// The employee summarys' employer link
	EmployerLink *EmployeeSummaryEmployeeSummaryEmployerLink `json:"EmployerLink,omitempty"`
	// The employee summarys' first name
	FirstName *string `json:"FirstName,omitempty"`
	// The employee summarys' initials
	Initials *string `json:"Initials,omitempty"`
	// The employee summarys' last name
	LastName *string `json:"LastName,omitempty"`
	// The employee summarys' last pay day
	LastPayDay *types.Date `json:"LastPayDay,omitempty"`
	// The employee summarys' last pay day schedule
	LastPayDaySchedule *string `json:"LastPayDaySchedule,omitempty"`
	// The employee summarys' last pay day tax year
	LastPayDayTaxYear *int `json:"LastPayDayTaxYear,omitempty"`
	// The employee summarys' leaving date
	LeavingDate *types.Date `json:"LeavingDate,omitempty"`
	// The employee summarys' meta data
	MetaData map[string]interface{} `json:"MetaData,omitempty"`
	// The employee summarys' next pay day
	NextPayDay *types.Date `json:"NextPayDay,omitempty"`
	// The employee summarys' next revision date
	NextRevisionDate *types.Date `json:"NextRevisionDate,omitempty"`
	// The employee summarys' ni letter
	NiLetter *string `json:"NiLetter,omitempty"`
	// The employee summarys' ni number
	NiNumber *string `json:"NiNumber,omitempty"`
	// The employee summarys' pay schedule link
	PayScheduleLink *EmployeeSummaryEmployeeSummaryPayScheduleLink `json:"PayScheduleLink,omitempty"`
	// The employee summarys' pay schedule name
	PayScheduleName *string `json:"PayScheduleName,omitempty"`
	// The employee summarys' revision
	Revision *int `json:"Revision,omitempty"`
	// The employee summarys' start date
	StartDate *types.Date `json:"StartDate,omitempty"`
	// The employee summarys' status
	Status *string `json:"Status,omitempty"`
	// The employee summarys' tax basis
	TaxBasis *EmployeeSummaryEmployeeSummaryTaxBasisEnum `json:"TaxBasis,omitempty"`
	// The employee summarys' tax code
	TaxCode *string `json:"TaxCode,omitempty"`
	// The employee summarys' title
	Title *string `json:"Title,omitempty"`
	// The employee summarys' unique key
	UniqueKey *string `json:"UniqueKey,omitempty"`
}

// EmployeeSummary - The employee summary object.
type EmployeeSummary struct {
	EmployeeSummary *EmployeeSummaryEmployeeSummary `json:"EmployeeSummary,omitempty"`
}
