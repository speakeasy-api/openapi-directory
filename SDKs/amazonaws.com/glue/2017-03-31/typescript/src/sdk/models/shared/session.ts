/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectionsList } from "./connectionslist";
import { SessionCommand } from "./sessioncommand";
import { SessionStatusEnum } from "./sessionstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The period in which a remote Spark runtime environment is running.
 */
export class Session extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Command" })
  @Type(() => SessionCommand)
  command?: SessionCommand;

  @SpeakeasyMetadata()
  @Expose({ name: "Connections" })
  @Type(() => ConnectionsList)
  connections?: ConnectionsList;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultArguments" })
  defaultArguments?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GlueVersion" })
  glueVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxCapacity" })
  maxCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Progress" })
  progress?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Role" })
  role?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityConfiguration" })
  securityConfiguration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: SessionStatusEnum;
}
