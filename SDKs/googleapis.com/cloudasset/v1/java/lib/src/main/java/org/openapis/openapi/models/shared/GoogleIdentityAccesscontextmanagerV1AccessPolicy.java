/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleIdentityAccesscontextmanagerV1AccessPolicy - `AccessPolicy` is a container for `AccessLevels` (which define the necessary attributes to use Google Cloud services) and `ServicePerimeters` (which define regions of services able to freely pass data within a perimeter). An access policy is globally visible within an organization, and the restrictions it specifies apply to all projects within an organization.
 */
public class GoogleIdentityAccesscontextmanagerV1AccessPolicy {
    /**
     * Output only. An opaque identifier for the current version of the `AccessPolicy`. This will always be a strongly validated etag, meaning that two Access Polices will be identical if and only if their etags are identical. Clients should not expect this to be in any specific format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public GoogleIdentityAccesscontextmanagerV1AccessPolicy withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Output only. Resource name of the `AccessPolicy`. Format: `accessPolicies/{access_policy}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleIdentityAccesscontextmanagerV1AccessPolicy withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Required. The parent of this `AccessPolicy` in the Cloud Resource Hierarchy. Currently immutable once created. Format: `organizations/{organization_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public String parent;

    public GoogleIdentityAccesscontextmanagerV1AccessPolicy withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * The scopes of a policy define which resources an ACM policy can restrict, and where ACM resources can be referenced. For example, a policy with scopes=["folders/123"] has the following behavior: - vpcsc perimeters can only restrict projects within folders/123 - access levels can only be referenced by resources within folders/123. If empty, there are no limitations on which resources can be restricted by an ACM policy, and there are no limitations on where ACM resources can be referenced. Only one policy can include a given scope (attempting to create a second policy which includes "folders/123" will result in an error). Currently, scopes cannot be modified after a policy is created. Currently, policies can only have a single scope. Format: list of `folders/{folder_number}` or `projects/{project_number}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopes")
    public String[] scopes;

    public GoogleIdentityAccesscontextmanagerV1AccessPolicy withScopes(String[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    /**
     * Required. Human readable title. Does not affect behavior.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public GoogleIdentityAccesscontextmanagerV1AccessPolicy withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public GoogleIdentityAccesscontextmanagerV1AccessPolicy(){}
}
