// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ReloadOneDatasourceAllNodesPathParams struct {
	// Id of the data source
	DatasourceID string `pathParam:"style=simple,explode=false,name=datasourceId"`
}

type ReloadOneDatasourceAllNodesRequest struct {
	PathParams ReloadOneDatasourceAllNodesPathParams
}

// ReloadOneDatasourceAllNodes200ApplicationJSONActionEnum - The id of the action
type ReloadOneDatasourceAllNodes200ApplicationJSONActionEnum string

const (
	ReloadOneDatasourceAllNodes200ApplicationJSONActionEnumReloadOneDatasourceAllNodes ReloadOneDatasourceAllNodes200ApplicationJSONActionEnum = "ReloadOneDatasourceAllNodes"
)

func (e *ReloadOneDatasourceAllNodes200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ReloadOneDatasourceAllNodes":
		*e = ReloadOneDatasourceAllNodes200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReloadOneDatasourceAllNodes200ApplicationJSONActionEnum: %s", s)
	}
}

// ReloadOneDatasourceAllNodes200ApplicationJSONResultEnum - Result of the request
type ReloadOneDatasourceAllNodes200ApplicationJSONResultEnum string

const (
	ReloadOneDatasourceAllNodes200ApplicationJSONResultEnumSuccess ReloadOneDatasourceAllNodes200ApplicationJSONResultEnum = "success"
	ReloadOneDatasourceAllNodes200ApplicationJSONResultEnumError   ReloadOneDatasourceAllNodes200ApplicationJSONResultEnum = "error"
)

func (e *ReloadOneDatasourceAllNodes200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ReloadOneDatasourceAllNodes200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReloadOneDatasourceAllNodes200ApplicationJSONResultEnum: %s", s)
	}
}

// ReloadOneDatasourceAllNodes200ApplicationJSON - Data source reloaded
type ReloadOneDatasourceAllNodes200ApplicationJSON struct {
	// The id of the action
	Action ReloadOneDatasourceAllNodes200ApplicationJSONActionEnum `json:"action"`
	Data   string                                                  `json:"data"`
	// Result of the request
	Result ReloadOneDatasourceAllNodes200ApplicationJSONResultEnum `json:"result"`
}

type ReloadOneDatasourceAllNodesResponse struct {
	ContentType string
	// Data source reloaded
	ReloadOneDatasourceAllNodes200ApplicationJSONObject *ReloadOneDatasourceAllNodes200ApplicationJSON
	StatusCode                                          int
	RawResponse                                         *http.Response
}
