/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Group } from "./group";
import { User } from "./user";
import { Expose, Type } from "class-transformer";

/**
 * The role granted by this permission. The role determines the entity’s ability to read, write, and share notes.
 */
export enum PermissionRoleEnum {
  RoleUnspecified = "ROLE_UNSPECIFIED",
  Owner = "OWNER",
  Writer = "WRITER",
}

/**
 * A single permission on the note. Associates a `member` with a `role`.
 */
export class PermissionInput extends SpeakeasyBase {
  /**
   * The email associated with the member. If set on create, the `email` field in the `User` or `Group` message must either be empty or match this field. On read, may be unset if the member does not have an associated email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Describes a single Google Family.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "family" })
  family?: Record<string, any>;

  /**
   * Describes a single Group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => Group)
  group?: Group;

  /**
   * The role granted by this permission. The role determines the entity’s ability to read, write, and share notes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: PermissionRoleEnum;

  /**
   * Describes a single user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => User)
  user?: User;
}

/**
 * A single permission on the note. Associates a `member` with a `role`.
 */
export class Permission extends SpeakeasyBase {
  /**
   * Output only. Whether this member has been deleted. If the member is recovered, this value is set to false and the recovered member retains the role on the note.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  /**
   * The email associated with the member. If set on create, the `email` field in the `User` or `Group` message must either be empty or match this field. On read, may be unset if the member does not have an associated email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Describes a single Google Family.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "family" })
  family?: Record<string, any>;

  /**
   * Describes a single Group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => Group)
  group?: Group;

  /**
   * Output only. The resource name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The role granted by this permission. The role determines the entity’s ability to read, write, and share notes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: PermissionRoleEnum;

  /**
   * Describes a single user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => User)
  user?: User;
}
