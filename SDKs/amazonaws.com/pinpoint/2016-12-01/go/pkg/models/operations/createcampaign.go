// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateCampaignRequestBodyWriteCampaignRequest - Specifies the configuration and other settings for a campaign.
type CreateCampaignRequestBodyWriteCampaignRequest struct {
	AdditionalTreatments        []shared.WriteTreatmentResource     `json:"AdditionalTreatments,omitempty"`
	CustomDeliveryConfiguration *shared.CustomDeliveryConfiguration `json:"CustomDeliveryConfiguration,omitempty"`
	Description                 *string                             `json:"Description,omitempty"`
	HoldoutPercent              *int64                              `json:"HoldoutPercent,omitempty"`
	Hook                        *shared.CampaignHook                `json:"Hook,omitempty"`
	IsPaused                    *bool                               `json:"IsPaused,omitempty"`
	Limits                      *shared.CampaignLimits              `json:"Limits,omitempty"`
	MessageConfiguration        *shared.MessageConfiguration        `json:"MessageConfiguration,omitempty"`
	Name                        *string                             `json:"Name,omitempty"`
	Priority                    *int64                              `json:"Priority,omitempty"`
	Schedule                    *shared.Schedule                    `json:"Schedule,omitempty"`
	SegmentID                   *string                             `json:"SegmentId,omitempty"`
	SegmentVersion              *int64                              `json:"SegmentVersion,omitempty"`
	TemplateConfiguration       *shared.TemplateConfiguration       `json:"TemplateConfiguration,omitempty"`
	TreatmentDescription        *string                             `json:"TreatmentDescription,omitempty"`
	TreatmentName               *string                             `json:"TreatmentName,omitempty"`
	Tags                        map[string]string                   `json:"tags,omitempty"`
}

type CreateCampaignRequestBody struct {
	// Specifies the configuration and other settings for a campaign.
	WriteCampaignRequest CreateCampaignRequestBodyWriteCampaignRequest `json:"WriteCampaignRequest"`
}

type CreateCampaignRequest struct {
	RequestBody       CreateCampaignRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
	ApplicationID string `pathParam:"style=simple,explode=false,name=application-id"`
}

type CreateCampaignResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateCampaignResponse *shared.CreateCampaignResponse
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// MethodNotAllowedException
	MethodNotAllowedException interface{}
	// NotFoundException
	NotFoundException interface{}
	// PayloadTooLargeException
	PayloadTooLargeException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
