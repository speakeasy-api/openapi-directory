/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LocalInventory - Local inventory resource. For accepted attribute values, see the local product inventory feed specification.
 */
public class LocalInventory {
    /**
     * Availability of the product. For accepted attribute values, see the local product inventory feed specification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availability")
    public String availability;
    public LocalInventory withAvailability(String availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * A list of custom (merchant-provided) attributes. Can also be used to submit any attribute of the feed specification in its generic form, for example, `{ "name": "size type", "value": "regular" }`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customAttributes")
    public CustomAttribute[] customAttributes;
    public LocalInventory withCustomAttributes(CustomAttribute[] customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }
    
    /**
     * In-store product location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instoreProductLocation")
    public String instoreProductLocation;
    public LocalInventory withInstoreProductLocation(String instoreProductLocation) {
        this.instoreProductLocation = instoreProductLocation;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "`content#localInventory`"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public LocalInventory withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Supported pickup method for this offer. Unless the value is "not supported", this field must be submitted together with `pickupSla`. For accepted attribute values, see the local product inventory feed specification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupMethod")
    public String pickupMethod;
    public LocalInventory withPickupMethod(String pickupMethod) {
        this.pickupMethod = pickupMethod;
        return this;
    }
    
    /**
     * Expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`. For accepted attribute values, see the local product inventory feed specification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupSla")
    public String pickupSla;
    public LocalInventory withPickupSla(String pickupSla) {
        this.pickupSla = pickupSla;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Price price;
    public LocalInventory withPrice(Price price) {
        this.price = price;
        return this;
    }
    
    /**
     * Quantity of the product. Must be nonnegative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Long quantity;
    public LocalInventory withQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salePrice")
    public Price salePrice;
    public LocalInventory withSalePrice(Price salePrice) {
        this.salePrice = salePrice;
        return this;
    }
    
    /**
     * A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates may be specified as 'null' if undecided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salePriceEffectiveDate")
    public String salePriceEffectiveDate;
    public LocalInventory withSalePriceEffectiveDate(String salePriceEffectiveDate) {
        this.salePriceEffectiveDate = salePriceEffectiveDate;
        return this;
    }
    
    /**
     * Required. Store code of this local inventory resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeCode")
    public String storeCode;
    public LocalInventory withStoreCode(String storeCode) {
        this.storeCode = storeCode;
        return this;
    }
    
}
