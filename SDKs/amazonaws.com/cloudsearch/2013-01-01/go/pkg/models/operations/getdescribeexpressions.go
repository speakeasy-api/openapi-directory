// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeExpressionsActionEnum
type GETDescribeExpressionsActionEnum string

const (
	GETDescribeExpressionsActionEnumDescribeExpressions GETDescribeExpressionsActionEnum = "DescribeExpressions"
)

func (e GETDescribeExpressionsActionEnum) ToPointer() *GETDescribeExpressionsActionEnum {
	return &e
}

func (e *GETDescribeExpressionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeExpressions":
		*e = GETDescribeExpressionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeExpressionsActionEnum: %v", v)
	}
}

// GETDescribeExpressionsVersionEnum
type GETDescribeExpressionsVersionEnum string

const (
	GETDescribeExpressionsVersionEnumTwoThousandAndThirteen0101 GETDescribeExpressionsVersionEnum = "2013-01-01"
)

func (e GETDescribeExpressionsVersionEnum) ToPointer() *GETDescribeExpressionsVersionEnum {
	return &e
}

func (e *GETDescribeExpressionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = GETDescribeExpressionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeExpressionsVersionEnum: %v", v)
	}
}

type GETDescribeExpressionsRequest struct {
	Action GETDescribeExpressionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Whether to display the deployed configuration (<code>true</code>) or include any pending changes (<code>false</code>). Defaults to <code>false</code>.
	Deployed *bool `queryParam:"style=form,explode=true,name=Deployed"`
	// The name of the domain you want to describe.
	DomainName string `queryParam:"style=form,explode=true,name=DomainName"`
	// Limits the <code><a>DescribeExpressions</a></code> response to the specified expressions. If not specified, all expressions are shown.
	ExpressionNames   []string                          `queryParam:"style=form,explode=true,name=ExpressionNames"`
	Version           GETDescribeExpressionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeExpressionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
