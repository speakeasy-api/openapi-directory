/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoParameterEntry } from "./enterprisecrmeventbusprotoparameterentry";
import { Expose, Type } from "class-transformer";

/**
 * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
 */
export class EnterpriseCrmEventbusProtoEventParameters extends SpeakeasyBase {
  /**
   * Parameters are a part of Event and can be used to communicate between different tasks that are part of the same integration execution.
   */
  @SpeakeasyMetadata({ elemType: EnterpriseCrmEventbusProtoParameterEntry })
  @Expose({ name: "parameters" })
  @Type(() => EnterpriseCrmEventbusProtoParameterEntry)
  parameters?: EnterpriseCrmEventbusProtoParameterEntry[];
}
