/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RegisterCACertificateRequestBody {
    /**
     * The PEM of a certificate.
     */
    @JsonProperty("caCertificate")
    public String caCertificate;
    public RegisterCACertificateRequestBody withCaCertificate(String caCertificate) {
        this.caCertificate = caCertificate;
        return this;
    }
    
    /**
     * Describes the certificate mode in which the Certificate Authority (CA) will be registered. If the &lt;code&gt;verificationCertificate&lt;/code&gt; field is not provided, set &lt;code&gt;certificateMode&lt;/code&gt; to be &lt;code&gt;SNI_ONLY&lt;/code&gt;. If the &lt;code&gt;verificationCertificate&lt;/code&gt; field is provided, set &lt;code&gt;certificateMode&lt;/code&gt; to be &lt;code&gt;DEFAULT&lt;/code&gt;. When &lt;code&gt;certificateMode&lt;/code&gt; is not provided, it defaults to &lt;code&gt;DEFAULT&lt;/code&gt;. All the device certificates that are registered using this CA will be registered in the same certificate mode as the CA. For more information about certificate mode for device certificates, see &lt;a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CertificateDescription.html#iot-Type-CertificateDescription-certificateMode"&gt; certificate mode&lt;/a&gt;. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificateMode")
    public RegisterCACertificateRequestBodyCertificateModeEnum certificateMode;
    public RegisterCACertificateRequestBody withCertificateMode(RegisterCACertificateRequestBodyCertificateModeEnum certificateMode) {
        this.certificateMode = certificateMode;
        return this;
    }
    
    /**
     * The registration configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationConfig")
    public RegisterCACertificateRequestBodyRegistrationConfig registrationConfig;
    public RegisterCACertificateRequestBody withRegistrationConfig(RegisterCACertificateRequestBodyRegistrationConfig registrationConfig) {
        this.registrationConfig = registrationConfig;
        return this;
    }
    
    /**
     * &lt;p&gt;Metadata which can be used to manage the CA certificate.&lt;/p&gt; &lt;note&gt; &lt;p&gt;For URI Request parameters use format: ...key1=value1&amp;amp;key2=value2...&lt;/p&gt; &lt;p&gt;For the CLI command-line parameter use format: &amp;amp;&amp;amp;tags "key1=value1&amp;amp;key2=value2..."&lt;/p&gt; &lt;p&gt;For the cli-input-json file use format: "tags": "key1=value1&amp;amp;key2=value2..."&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public org.openapis.openapi.models.shared.Tag[] tags;
    public RegisterCACertificateRequestBody withTags(org.openapis.openapi.models.shared.Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The PEM of a certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verificationCertificate")
    public String verificationCertificate;
    public RegisterCACertificateRequestBody withVerificationCertificate(String verificationCertificate) {
        this.verificationCertificate = verificationCertificate;
        return this;
    }
    
}
