/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttributeType } from "./attributetype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The device type.
 */
export class DeviceType extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AttributeType })
  @Expose({ name: "DeviceAttributes" })
  @Type(() => AttributeType)
  deviceAttributes?: AttributeType[];

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceCreateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deviceCreateDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceKey" })
  deviceKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceLastAuthenticatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deviceLastAuthenticatedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceLastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deviceLastModifiedDate?: Date;
}
