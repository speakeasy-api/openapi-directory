// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum - Required. Immutable. The type of custom bidding algorithm.
type CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum string

const (
	CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnumCustomBiddingAlgorithmTypeUnspecified CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum = "CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED"
	CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnumScriptBased                           CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum = "SCRIPT_BASED"
	CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnumAdsDataHubBased                       CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum = "ADS_DATA_HUB_BASED"
	CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnumGoalBuilderBased                      CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum = "GOAL_BUILDER_BASED"
)

func (e CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum) ToPointer() *CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum {
	return &e
}

func (e *CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED":
		fallthrough
	case "SCRIPT_BASED":
		fallthrough
	case "ADS_DATA_HUB_BASED":
		fallthrough
	case "GOAL_BUILDER_BASED":
		*e = CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum: %v", v)
	}
}

// CustomBiddingAlgorithmEntityStatusEnum - Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED`
type CustomBiddingAlgorithmEntityStatusEnum string

const (
	CustomBiddingAlgorithmEntityStatusEnumEntityStatusUnspecified          CustomBiddingAlgorithmEntityStatusEnum = "ENTITY_STATUS_UNSPECIFIED"
	CustomBiddingAlgorithmEntityStatusEnumEntityStatusActive               CustomBiddingAlgorithmEntityStatusEnum = "ENTITY_STATUS_ACTIVE"
	CustomBiddingAlgorithmEntityStatusEnumEntityStatusArchived             CustomBiddingAlgorithmEntityStatusEnum = "ENTITY_STATUS_ARCHIVED"
	CustomBiddingAlgorithmEntityStatusEnumEntityStatusDraft                CustomBiddingAlgorithmEntityStatusEnum = "ENTITY_STATUS_DRAFT"
	CustomBiddingAlgorithmEntityStatusEnumEntityStatusPaused               CustomBiddingAlgorithmEntityStatusEnum = "ENTITY_STATUS_PAUSED"
	CustomBiddingAlgorithmEntityStatusEnumEntityStatusScheduledForDeletion CustomBiddingAlgorithmEntityStatusEnum = "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
)

func (e CustomBiddingAlgorithmEntityStatusEnum) ToPointer() *CustomBiddingAlgorithmEntityStatusEnum {
	return &e
}

func (e *CustomBiddingAlgorithmEntityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENTITY_STATUS_UNSPECIFIED":
		fallthrough
	case "ENTITY_STATUS_ACTIVE":
		fallthrough
	case "ENTITY_STATUS_ARCHIVED":
		fallthrough
	case "ENTITY_STATUS_DRAFT":
		fallthrough
	case "ENTITY_STATUS_PAUSED":
		fallthrough
	case "ENTITY_STATUS_SCHEDULED_FOR_DELETION":
		*e = CustomBiddingAlgorithmEntityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomBiddingAlgorithmEntityStatusEnum: %v", v)
	}
}

// CustomBiddingAlgorithmInput - A single custom bidding algorithm.
type CustomBiddingAlgorithmInput struct {
	// Immutable. The unique ID of the advertiser that owns the custom bidding algorithm.
	AdvertiserID *string `json:"advertiserId,omitempty"`
	// Required. Immutable. The type of custom bidding algorithm.
	CustomBiddingAlgorithmType *CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum `json:"customBiddingAlgorithmType,omitempty"`
	// Required. The display name of the custom bidding algorithm. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED`
	EntityStatus *CustomBiddingAlgorithmEntityStatusEnum `json:"entityStatus,omitempty"`
	// Immutable. The unique ID of the partner that owns the custom bidding algorithm.
	PartnerID *string `json:"partnerId,omitempty"`
	// The IDs of the advertisers who have access to this algorithm. If advertiser_id is set, this field will only consist of that value. This field will not be set if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
	SharedAdvertiserIds []string `json:"sharedAdvertiserIds,omitempty"`
}

// CustomBiddingAlgorithm - A single custom bidding algorithm.
type CustomBiddingAlgorithm struct {
	// Immutable. The unique ID of the advertiser that owns the custom bidding algorithm.
	AdvertiserID *string `json:"advertiserId,omitempty"`
	// Output only. The unique ID of the custom bidding algorithm. Assigned by the system.
	CustomBiddingAlgorithmID *string `json:"customBiddingAlgorithmId,omitempty"`
	// Required. Immutable. The type of custom bidding algorithm.
	CustomBiddingAlgorithmType *CustomBiddingAlgorithmCustomBiddingAlgorithmTypeEnum `json:"customBiddingAlgorithmType,omitempty"`
	// Required. The display name of the custom bidding algorithm. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED`
	EntityStatus *CustomBiddingAlgorithmEntityStatusEnum `json:"entityStatus,omitempty"`
	// Output only. The details of custom bidding models for each advertiser who has access. This field may only include the details of the queried advertiser if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
	ModelDetails []CustomBiddingModelDetails `json:"modelDetails,omitempty"`
	// Output only. The resource name of the custom bidding algorithm.
	Name *string `json:"name,omitempty"`
	// Immutable. The unique ID of the partner that owns the custom bidding algorithm.
	PartnerID *string `json:"partnerId,omitempty"`
	// The IDs of the advertisers who have access to this algorithm. If advertiser_id is set, this field will only consist of that value. This field will not be set if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
	SharedAdvertiserIds []string `json:"sharedAdvertiserIds,omitempty"`
}
