// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateClusterRequestBodyAuthTypeEnum - The authentication type for the Elastic DocumentDB cluster.
type UpdateClusterRequestBodyAuthTypeEnum string

const (
	UpdateClusterRequestBodyAuthTypeEnumPlainText UpdateClusterRequestBodyAuthTypeEnum = "PLAIN_TEXT"
	UpdateClusterRequestBodyAuthTypeEnumSecretArn UpdateClusterRequestBodyAuthTypeEnum = "SECRET_ARN"
)

func (e *UpdateClusterRequestBodyAuthTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PLAIN_TEXT":
		fallthrough
	case "SECRET_ARN":
		*e = UpdateClusterRequestBodyAuthTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateClusterRequestBodyAuthTypeEnum: %s", s)
	}
}

type UpdateClusterRequestBody struct {
	// <p>The password for the Elastic DocumentDB cluster administrator. This password can contain any printable ASCII character except forward slash (/), double quote ("), or the "at" symbol (@).</p> <p> <i>Constraints</i>: Must contain from 8 to 100 characters.</p>
	AdminUserPassword *string `json:"adminUserPassword,omitempty"`
	// The authentication type for the Elastic DocumentDB cluster.
	AuthType *UpdateClusterRequestBodyAuthTypeEnum `json:"authType,omitempty"`
	// The client token for the Elastic DocumentDB cluster.
	ClientToken *string `json:"clientToken,omitempty"`
	// <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> <i>Format</i>: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p> <i>Default</i>: a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week.</p> <p> <i>Valid days</i>: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p> <i>Constraints</i>: Minimum 30-minute window.</p>
	PreferredMaintenanceWindow *string `json:"preferredMaintenanceWindow,omitempty"`
	// The capacity of each shard in the Elastic DocumentDB cluster.
	ShardCapacity *int64 `json:"shardCapacity,omitempty"`
	// The number of shards to create in the Elastic DocumentDB cluster.
	ShardCount *int64 `json:"shardCount,omitempty"`
	// The number of shards to create in the Elastic DocumentDB cluster.
	SubnetIds []string `json:"subnetIds,omitempty"`
	// A list of EC2 VPC security groups to associate with the new Elastic DocumentDB cluster.
	VpcSecurityGroupIds []string `json:"vpcSecurityGroupIds,omitempty"`
}

type UpdateClusterRequest struct {
	RequestBody       UpdateClusterRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The arn of the Elastic DocumentDB cluster.
	ClusterArn string `pathParam:"style=simple,explode=false,name=clusterArn"`
}

type UpdateClusterResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateClusterOutput *shared.UpdateClusterOutput
	// ValidationException
	ValidationException interface{}
}
