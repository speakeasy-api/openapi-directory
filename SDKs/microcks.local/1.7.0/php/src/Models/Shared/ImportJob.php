<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ImportJob - An ImportJob allow defining a repository artifact to poll for discovering Services and APIs mocks and tests
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ImportJob
{
    /**
     * Whether this ImportJob is active (ie. scheduled for execution)
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
    /**
     * Creation date for this ImportJob
     * 
     * @var ?\DateTime $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdDate = null;
    
    /**
     * Etag of repository URL during previous import. Is used for not re-importing if no recent changes
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Reserved for future usage
     * 
     * @var ?string $frequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('frequency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $frequency = null;
    
    /**
     * Unique identifier of ImportJob
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Date last import was done
     * 
     * @var ?\DateTime $lastImportDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastImportDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastImportDate = null;
    
    /**
     * Error message of last import (if any)
     * 
     * @var ?string $lastImportError
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastImportError')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastImportError = null;
    
    /**
     * Flag telling if considered as primary or secondary artifact. Default to `true`
     * 
     * @var ?bool $mainArtifact
     */
	#[\JMS\Serializer\Annotation\SerializedName('mainArtifact')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $mainArtifact = null;
    
    /**
     * Commodity object for holding metadata on any entity. This object is inspired by Kubernetes metadata.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Metadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Metadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Metadata $metadata = null;
    
    /**
     * Unique distinct name of this ImportJob
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Whether to disable SSL certificate verification when checking repository
     * 
     * @var ?bool $repositoryDisableSSLValidation
     */
	#[\JMS\Serializer\Annotation\SerializedName('repositoryDisableSSLValidation')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $repositoryDisableSSLValidation = null;
    
    /**
     * URL of mocks and tests repository artifact
     * 
     * @var string $repositoryUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('repositoryUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $repositoryUrl;
    
    /**
     * Lightweight reference for an existing Secret
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SecretRef $secretRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('secretRef')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SecretRef')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SecretRef $secretRef = null;
    
    /**
     * References of Services discovered when checking repository
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ServiceRef> $serviceRefs
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceRefs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ServiceRef>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $serviceRefs = null;
    
	public function __construct()
	{
		$this->active = null;
		$this->createdDate = null;
		$this->etag = null;
		$this->frequency = null;
		$this->id = null;
		$this->lastImportDate = null;
		$this->lastImportError = null;
		$this->mainArtifact = null;
		$this->metadata = null;
		$this->name = "";
		$this->repositoryDisableSSLValidation = null;
		$this->repositoryUrl = "";
		$this->secretRef = null;
		$this->serviceRefs = null;
	}
}
