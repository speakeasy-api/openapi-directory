// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeVolumeAttributeActionEnum
type GETDescribeVolumeAttributeActionEnum string

const (
	GETDescribeVolumeAttributeActionEnumDescribeVolumeAttribute GETDescribeVolumeAttributeActionEnum = "DescribeVolumeAttribute"
)

func (e GETDescribeVolumeAttributeActionEnum) ToPointer() *GETDescribeVolumeAttributeActionEnum {
	return &e
}

func (e *GETDescribeVolumeAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeVolumeAttribute":
		*e = GETDescribeVolumeAttributeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeVolumeAttributeActionEnum: %v", v)
	}
}

// GETDescribeVolumeAttributeAttributeEnum - The attribute of the volume. This parameter is required.
type GETDescribeVolumeAttributeAttributeEnum string

const (
	GETDescribeVolumeAttributeAttributeEnumAutoEnableIo GETDescribeVolumeAttributeAttributeEnum = "autoEnableIO"
	GETDescribeVolumeAttributeAttributeEnumProductCodes GETDescribeVolumeAttributeAttributeEnum = "productCodes"
)

func (e GETDescribeVolumeAttributeAttributeEnum) ToPointer() *GETDescribeVolumeAttributeAttributeEnum {
	return &e
}

func (e *GETDescribeVolumeAttributeAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "autoEnableIO":
		fallthrough
	case "productCodes":
		*e = GETDescribeVolumeAttributeAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeVolumeAttributeAttributeEnum: %v", v)
	}
}

// GETDescribeVolumeAttributeVersionEnum
type GETDescribeVolumeAttributeVersionEnum string

const (
	GETDescribeVolumeAttributeVersionEnumTwoThousandAndSixteen1115 GETDescribeVolumeAttributeVersionEnum = "2016-11-15"
)

func (e GETDescribeVolumeAttributeVersionEnum) ToPointer() *GETDescribeVolumeAttributeVersionEnum {
	return &e
}

func (e *GETDescribeVolumeAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDescribeVolumeAttributeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeVolumeAttributeVersionEnum: %v", v)
	}
}

type GETDescribeVolumeAttributeRequest struct {
	Action GETDescribeVolumeAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The attribute of the volume. This parameter is required.
	Attribute GETDescribeVolumeAttributeAttributeEnum `queryParam:"style=form,explode=true,name=Attribute"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun  *bool                                 `queryParam:"style=form,explode=true,name=DryRun"`
	Version GETDescribeVolumeAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the volume.
	VolumeID          string  `queryParam:"style=form,explode=true,name=VolumeId"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeVolumeAttributeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
