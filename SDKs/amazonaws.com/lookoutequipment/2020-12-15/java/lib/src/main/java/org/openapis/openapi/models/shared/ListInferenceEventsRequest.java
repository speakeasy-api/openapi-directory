/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ListInferenceEventsRequest {
    @JsonProperty("InferenceSchedulerName")
    public String inferenceSchedulerName;

    public ListInferenceEventsRequest withInferenceSchedulerName(String inferenceSchedulerName) {
        this.inferenceSchedulerName = inferenceSchedulerName;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("IntervalEndTime")
    public OffsetDateTime intervalEndTime;

    public ListInferenceEventsRequest withIntervalEndTime(OffsetDateTime intervalEndTime) {
        this.intervalEndTime = intervalEndTime;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("IntervalStartTime")
    public OffsetDateTime intervalStartTime;

    public ListInferenceEventsRequest withIntervalStartTime(OffsetDateTime intervalStartTime) {
        this.intervalStartTime = intervalStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;

    public ListInferenceEventsRequest withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;

    public ListInferenceEventsRequest withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    public ListInferenceEventsRequest(@JsonProperty("InferenceSchedulerName") String inferenceSchedulerName, @JsonProperty("IntervalEndTime") OffsetDateTime intervalEndTime, @JsonProperty("IntervalStartTime") OffsetDateTime intervalStartTime) {
        this.inferenceSchedulerName = inferenceSchedulerName;
        this.intervalEndTime = intervalEndTime;
        this.intervalStartTime = intervalStartTime;
  }
}
