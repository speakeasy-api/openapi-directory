"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DocumentDetailDocumentTypeEnum(str, Enum):
    r"""The type of the document. Refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks) for details on when each document type should be submitted and for the accepted file formats.
    
    Permitted values:
    * **BANK_STATEMENT**: A file containing a bank statement or other document proving ownership of a specific bank account.
    * **COMPANY_REGISTRATION_SCREENING** (Supported from v5 and later): A file containing a company registration document.
    * **CONSTITUTIONAL_DOCUMENT**: A file containing information about the account holder's legal arrangement.
    * **PASSPORT**: A file containing the identity page(s) of a passport.
    * **ID_CARD_FRONT**: A file containing only the front of the ID card. In order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK** must be submitted.
    * **ID_CARD_BACK**: A file containing only the back of the ID card. In order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK** must be submitted.
    * **DRIVING_LICENCE_FRONT**: A file containing only the front of the driving licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT** and **DRIVING_LICENCE_BACK** must be submitted.
    * **DRIVING_LICENCE_BACK**: A file containing only the back of the driving licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT** and **DRIVING_LICENCE_FRONT** must be submitted.
    """
    BANK_STATEMENT = 'BANK_STATEMENT'
    BSN = 'BSN'
    DRIVING_LICENCE = 'DRIVING_LICENCE'
    DRIVING_LICENCE_BACK = 'DRIVING_LICENCE_BACK'
    DRIVING_LICENCE_FRONT = 'DRIVING_LICENCE_FRONT'
    ID_CARD = 'ID_CARD'
    ID_CARD_BACK = 'ID_CARD_BACK'
    ID_CARD_FRONT = 'ID_CARD_FRONT'
    PASSPORT = 'PASSPORT'
    PROOF_OF_RESIDENCY = 'PROOF_OF_RESIDENCY'
    SSN = 'SSN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentDetail:
    
    document_type: DocumentDetailDocumentTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentType') }})
    r"""The type of the document. Refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks) for details on when each document type should be submitted and for the accepted file formats.
    
    Permitted values:
    * **BANK_STATEMENT**: A file containing a bank statement or other document proving ownership of a specific bank account.
    * **COMPANY_REGISTRATION_SCREENING** (Supported from v5 and later): A file containing a company registration document.
    * **CONSTITUTIONAL_DOCUMENT**: A file containing information about the account holder's legal arrangement.
    * **PASSPORT**: A file containing the identity page(s) of a passport.
    * **ID_CARD_FRONT**: A file containing only the front of the ID card. In order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK** must be submitted.
    * **ID_CARD_BACK**: A file containing only the back of the ID card. In order for a document to be usable, both the **ID_CARD_FRONT** and **ID_CARD_BACK** must be submitted.
    * **DRIVING_LICENCE_FRONT**: A file containing only the front of the driving licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT** and **DRIVING_LICENCE_BACK** must be submitted.
    * **DRIVING_LICENCE_BACK**: A file containing only the back of the driving licence. In order for a document to be usable, both the **DRIVING_LICENCE_FRONT** and **DRIVING_LICENCE_FRONT** must be submitted.
    """  
    account_holder_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderCode'), 'exclude': lambda f: f is None }})
    r"""The code of account holder, to which the document applies."""  
    bank_account_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankAccountUUID'), 'exclude': lambda f: f is None }})
    r"""The Adyen-generated [`bankAccountUUID`](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__resParam_accountHolderDetails-bankAccountDetails-bankAccountUUID) to which the document must be linked. Refer to [Bank account check](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks/bank-account-check#uploading-a-bank-statement) for details on when a document should be submitted.
    >Required if the `documentType` is **BANK_STATEMENT**, where a document is being submitted in order to verify a bank account.
    """  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the document."""  
    filename: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filename'), 'exclude': lambda f: f is None }})
    r"""Filename of the document."""  
    shareholder_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shareholderCode'), 'exclude': lambda f: f is None }})
    r"""The Adyen-generated [`shareholderCode`](https://docs.adyen.com/api-explorer/#/Account/latest/post/createAccountHolder__resParam_accountHolderDetails-businessDetails-shareholders-shareholderCode) to which the document must be linked. Refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-checks) for details on when a document should be submitted.
    >Required if the account holder has a `legalEntity` of type **Business** and the `documentType` is either **PASSPORT**, **ID_CARD_FRONT**, **ID_CARD_BACK**, **DRIVING_LICENCE_FRONT**, or **DRIVING_LICENCE_BACK**.
    """  
    signatory_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signatoryCode'), 'exclude': lambda f: f is None }})
    r"""The Adyen-generated [`signatoryCode`](https://docs.adyen.com/api-explorer/#/Account/v6/post/createAccountHolder__resParam_accountHolderDetails-businessDetails-signatories-signatoryCode) to which the document must be linked."""  
    