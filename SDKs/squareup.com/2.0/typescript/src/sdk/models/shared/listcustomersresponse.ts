/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Customer } from "./customer";
import { ErrorT } from "./error";
import { Expose, Type } from "class-transformer";

/**
 * Defines the fields that are included in the response body of
 *
 * @remarks
 * a request to the `ListCustomers` endpoint.
 *
 * Either `errors` or `customers` is present in a given response (never both).
 */
export class ListCustomersResponse extends SpeakeasyBase {
  /**
   * A pagination cursor to retrieve the next set of results for the
   *
   * @remarks
   * original query. A cursor is only present if the request succeeded and additional results
   * are available.
   *
   * For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * An array of `Customer` objects that match the provided query.
   */
  @SpeakeasyMetadata({ elemType: Customer })
  @Expose({ name: "customers" })
  @Type(() => Customer)
  customers?: Customer[];

  /**
   * Any errors that occurred during the request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];
}
