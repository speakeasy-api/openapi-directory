"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowCxV3NluSettingsModelTrainingModeEnum(str, Enum):
    r"""Indicates NLU model training mode."""
    MODEL_TRAINING_MODE_UNSPECIFIED = 'MODEL_TRAINING_MODE_UNSPECIFIED'
    MODEL_TRAINING_MODE_AUTOMATIC = 'MODEL_TRAINING_MODE_AUTOMATIC'
    MODEL_TRAINING_MODE_MANUAL = 'MODEL_TRAINING_MODE_MANUAL'

class GoogleCloudDialogflowCxV3NluSettingsModelTypeEnum(str, Enum):
    r"""Indicates the type of NLU model."""
    MODEL_TYPE_UNSPECIFIED = 'MODEL_TYPE_UNSPECIFIED'
    MODEL_TYPE_STANDARD = 'MODEL_TYPE_STANDARD'
    MODEL_TYPE_ADVANCED = 'MODEL_TYPE_ADVANCED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3NluSettings:
    r"""Settings related to NLU."""
    
    classification_threshold: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('classificationThreshold'), 'exclude': lambda f: f is None }})
    r"""To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used."""  
    model_training_mode: Optional[GoogleCloudDialogflowCxV3NluSettingsModelTrainingModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modelTrainingMode'), 'exclude': lambda f: f is None }})
    r"""Indicates NLU model training mode."""  
    model_type: Optional[GoogleCloudDialogflowCxV3NluSettingsModelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modelType'), 'exclude': lambda f: f is None }})
    r"""Indicates the type of NLU model."""  
    