/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Author } from "./author";
import { Category } from "./category";
import { CustomArticleField } from "./customarticlefield";
import { GroupEmbargoOptions } from "./groupembargooptions";
import { License } from "./license";
import { PublicFile } from "./publicfile";
import { Timeline } from "./timeline";
import { Expose, Type } from "class-transformer";

/**
 * OK. Article representation
 */
export class ArticleCompletePrivate extends SpeakeasyBase {
  /**
   * ID of the account owning the article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: number;

  /**
   * List of article authors
   */
  @SpeakeasyMetadata({ elemType: Author })
  @Expose({ name: "authors" })
  @Type(() => Author)
  authors: Author[];

  /**
   * List of categories selected for the article
   */
  @SpeakeasyMetadata({ elemType: Category })
  @Expose({ name: "categories" })
  @Type(() => Category)
  categories: Category[];

  /**
   * Article citation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "citation" })
  citation: string;

  /**
   * Confidentiality reason
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confidential_reason" })
  confidentialReason: string;

  /**
   * Date when article was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_date" })
  createdDate: string;

  /**
   * List of custom fields values
   */
  @SpeakeasyMetadata({ elemType: CustomArticleField })
  @Expose({ name: "custom_fields" })
  @Type(() => CustomArticleField)
  customFields: CustomArticleField[];

  /**
   * Type of article identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defined_type" })
  definedType: number;

  /**
   * Name of the article type identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defined_type_name" })
  definedTypeName: string;

  /**
   * Article description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * DOI
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doi" })
  doi: string;

  /**
   * Date when embargo lifts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_date" })
  embargoDate: string;

  /**
   * List of embargo options
   */
  @SpeakeasyMetadata({ elemType: GroupEmbargoOptions })
  @Expose({ name: "embargo_options" })
  @Type(() => GroupEmbargoOptions)
  embargoOptions: GroupEmbargoOptions[];

  /**
   * Reason for embargo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_reason" })
  embargoReason: string;

  /**
   * Title for embargo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_title" })
  embargoTitle: string;

  /**
   * Article embargo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_type" })
  embargoType: string;

  /**
   * Article public url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "figshare_url" })
  figshareUrl: string;

  /**
   * List of article files
   */
  @SpeakeasyMetadata({ elemType: PublicFile })
  @Expose({ name: "files" })
  @Type(() => PublicFile)
  files: PublicFile[];

  /**
   * Article funding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "funding" })
  funding: string;

  @SpeakeasyMetadata()
  @Expose({ name: "funding_list" })
  fundingList: number[];

  /**
   * Group ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId: number;

  /**
   * Group resource id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_resource_id" })
  groupResourceId: string;

  /**
   * Handle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "handle" })
  handle: string;

  /**
   * True if any files are linked to the article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_linked_file" })
  hasLinkedFile: boolean;

  /**
   * Unique identifier for article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * True if article is active
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_active" })
  isActive: boolean;

  /**
   * Article Confidentiality
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_confidential" })
  isConfidential: boolean;

  /**
   * True if article is embargoed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_embargoed" })
  isEmbargoed: boolean;

  /**
   * True if article has no files
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_metadata_record" })
  isMetadataRecord: boolean;

  /**
   * True if article is published
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_public" })
  isPublic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "license" })
  @Type(() => License)
  license: License;

  /**
   * Article metadata reason
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata_reason" })
  metadataReason: string;

  /**
   * Date when article was last modified
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modified_date" })
  modifiedDate: string;

  /**
   * Posted date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published_date" })
  publishedDate: string;

  /**
   * List of references
   */
  @SpeakeasyMetadata()
  @Expose({ name: "references" })
  references: string[];

  /**
   * Article DOI
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_doi" })
  resourceDoi: string;

  /**
   * Article resource title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_title" })
  resourceTitle: string;

  /**
   * Article size
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size: number;

  /**
   * Article status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * List of article tags
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags: string[];

  /**
   * Thumbnail image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumb" })
  thumb: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeline" })
  @Type(() => Timeline)
  timeline: Timeline;

  /**
   * Title of article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * Api endpoint for article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * Private Api endpoint for article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url_private_api" })
  urlPrivateApi: string;

  /**
   * Private site endpoint for article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url_private_html" })
  urlPrivateHtml: string;

  /**
   * Public Api endpoint for article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url_public_api" })
  urlPublicApi: string;

  /**
   * Public site endpoint for article
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url_public_html" })
  urlPublicHtml: string;

  /**
   * Article version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: number;
}
