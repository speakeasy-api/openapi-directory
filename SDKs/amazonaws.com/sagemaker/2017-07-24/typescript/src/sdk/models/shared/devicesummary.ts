/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EdgeModelSummary } from "./edgemodelsummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Summary of the device.
 */
export class DeviceSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AgentVersion" })
  agentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceArn" })
  deviceArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceFleetName" })
  deviceFleetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceName" })
  deviceName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IotThingName" })
  iotThingName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestHeartbeat" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestHeartbeat?: Date;

  @SpeakeasyMetadata({ elemType: EdgeModelSummary })
  @Expose({ name: "Models" })
  @Type(() => EdgeModelSummary)
  models?: EdgeModelSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "RegistrationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  registrationTime?: Date;
}
