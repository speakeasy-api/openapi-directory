/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Project - Represents a project
 */
public class Project {
    /**
     * Gets the date this project was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Created")
    public OffsetDateTime created;

    public Project withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    /**
     * Gets the current iteration id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrentIterationId")
    public String currentIterationId;

    public Project withCurrentIterationId(String currentIterationId) {
        this.currentIterationId = currentIterationId;
        return this;
    }
    
    /**
     * Gets or sets the description of the project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public Project withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Gets the project id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;

    public Project withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Gets the date this project was last modified
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModified")
    public OffsetDateTime lastModified;

    public Project withLastModified(OffsetDateTime lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * Gets or sets the name of the project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public Project withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Represents settings associated with a project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Settings")
    public ProjectSettings settings;

    public Project withSettings(ProjectSettings settings) {
        this.settings = settings;
        return this;
    }
    
    /**
     * Gets the thumbnail url representing the image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThumbnailUri")
    public String thumbnailUri;

    public Project withThumbnailUri(String thumbnailUri) {
        this.thumbnailUri = thumbnailUri;
        return this;
    }
    
    public Project(){}
}
