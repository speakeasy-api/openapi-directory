<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSeriesRequest
{
    /**
     * Limit the result to series with an ad deal of this Ad Ops profile.
     * 
     * 
     * 
     * @var ?string $adRepAccountId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ad_rep_account_id')]
    public ?string $adRepAccountId = null;
    
    /**
     * The list of IDs to filter by. Repeat this parameter for each ID you want to include in the filter.
     * 
     * The brackets *MUST* be percent-encoded, per the requirements in
     * [RFC 3986 ยง 3.4](https://tools.ietf.org/html/rfc3986#section-3.4).
     * 
     * 
     * @var ?array<string> $ids
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ids[]')]
    public ?array $ids = null;
    
    /**
     * Limit the result to series owned by this network.
     * 
     * @var ?string $networkId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=network_id')]
    public ?string $networkId = null;
    
    /**
     * Select which page number to receive results for. Pages are numbered starting at 1.
     * 
     * 
     * 
     * 
     * @var ?int $pageNumber
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page[number]')]
    public ?int $pageNumber = null;
    
    /**
     * Indicate how many records to return per page. The maximum is 100.
     * 
     * 
     * 
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page[size]')]
    public ?int $pageSize = null;
    
    /**
     * Limit the result to series with a title or slug containing this parameter in a case-insensitive way.
     * 
     * @var ?string $q
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q')]
    public ?string $q = null;
    
    /**
     * Specify how to sort the result. Please refer to either the top section or the
     * 
     * [JSON:API specification](https://jsonapi.org/format/#fetching-sorting) on how sorting works in general.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetSeriesSortEnum> $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=sort')]
    public ?array $sort = null;
    
	public function __construct()
	{
		$this->adRepAccountId = null;
		$this->ids = null;
		$this->networkId = null;
		$this->pageNumber = null;
		$this->pageSize = null;
		$this->q = null;
		$this->sort = null;
	}
}
