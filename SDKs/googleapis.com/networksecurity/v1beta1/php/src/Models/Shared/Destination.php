<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Destination - Specification of traffic destination attributes.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Destination
{
    /**
     * Required. List of host names to match. Matched against the ":authority" header in http requests. At least one host should match. Each host can be an exact match, or a prefix match (example "mydomain.*") or a suffix match (example "*.myorg.com") or a presence (any) match "*".
     * 
     * @var ?array<string> $hosts
     */
	#[\JMS\Serializer\Annotation\SerializedName('hosts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $hosts = null;
    
    /**
     * Specification of HTTP header match attributes.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HttpHeaderMatch $httpHeaderMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('httpHeaderMatch')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HttpHeaderMatch')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HttpHeaderMatch $httpHeaderMatch = null;
    
    /**
     * Optional. A list of HTTP methods to match. At least one method should match. Should not be set for gRPC services.
     * 
     * @var ?array<string> $methods
     */
	#[\JMS\Serializer\Annotation\SerializedName('methods')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $methods = null;
    
    /**
     * Required. List of destination ports to match. At least one port should match.
     * 
     * @var ?array<int> $ports
     */
	#[\JMS\Serializer\Annotation\SerializedName('ports')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ports = null;
    
	public function __construct()
	{
		$this->hosts = null;
		$this->httpHeaderMatch = null;
		$this->methods = null;
		$this->ports = null;
	}
}
