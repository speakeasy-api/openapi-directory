// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateNamespaceXAmzTargetEnum
type CreateNamespaceXAmzTargetEnum string

const (
	CreateNamespaceXAmzTargetEnumRedshiftServerlessCreateNamespace CreateNamespaceXAmzTargetEnum = "RedshiftServerless.CreateNamespace"
)

func (e *CreateNamespaceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RedshiftServerless.CreateNamespace":
		*e = CreateNamespaceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNamespaceXAmzTargetEnum: %s", s)
	}
}

type CreateNamespaceRequest struct {
	CreateNamespaceRequest shared.CreateNamespaceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             CreateNamespaceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateNamespaceResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateNamespaceResponse *shared.CreateNamespaceResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// TooManyTagsException
	TooManyTagsException interface{}
	// ValidationException
	ValidationException interface{}
}
