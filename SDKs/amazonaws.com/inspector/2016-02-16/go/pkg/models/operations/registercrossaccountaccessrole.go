// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterCrossAccountAccessRoleXAmzTargetEnum
type RegisterCrossAccountAccessRoleXAmzTargetEnum string

const (
	RegisterCrossAccountAccessRoleXAmzTargetEnumInspectorServiceRegisterCrossAccountAccessRole RegisterCrossAccountAccessRoleXAmzTargetEnum = "InspectorService.RegisterCrossAccountAccessRole"
)

func (e RegisterCrossAccountAccessRoleXAmzTargetEnum) ToPointer() *RegisterCrossAccountAccessRoleXAmzTargetEnum {
	return &e
}

func (e *RegisterCrossAccountAccessRoleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InspectorService.RegisterCrossAccountAccessRole":
		*e = RegisterCrossAccountAccessRoleXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterCrossAccountAccessRoleXAmzTargetEnum: %v", v)
	}
}

type RegisterCrossAccountAccessRoleRequest struct {
	RegisterCrossAccountAccessRoleRequest shared.RegisterCrossAccountAccessRoleRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            RegisterCrossAccountAccessRoleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterCrossAccountAccessRoleResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalException
	InternalException interface{}
	// InvalidCrossAccountRoleException
	InvalidCrossAccountRoleException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// ServiceTemporarilyUnavailableException
	ServiceTemporarilyUnavailableException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
}
