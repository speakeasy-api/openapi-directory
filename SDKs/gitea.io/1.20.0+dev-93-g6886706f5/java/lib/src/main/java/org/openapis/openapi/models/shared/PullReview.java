/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PullReview - PullReview represents a pull request review
 */
public class PullReview {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    public String body;
    public PullReview withBody(String body) {
        this.body = body;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments_count")
    public Long commentsCount;
    public PullReview withCommentsCount(Long commentsCount) {
        this.commentsCount = commentsCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commit_id")
    public String commitId;
    public PullReview withCommitId(String commitId) {
        this.commitId = commitId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dismissed")
    public Boolean dismissed;
    public PullReview withDismissed(Boolean dismissed) {
        this.dismissed = dismissed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html_url")
    public String htmlUrl;
    public PullReview withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public PullReview withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("official")
    public Boolean official;
    public PullReview withOfficial(Boolean official) {
        this.official = official;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pull_request_url")
    public String pullRequestUrl;
    public PullReview withPullRequestUrl(String pullRequestUrl) {
        this.pullRequestUrl = pullRequestUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stale")
    public Boolean stale;
    public PullReview withStale(Boolean stale) {
        this.stale = stale;
        return this;
    }
    
    /**
     * ReviewStateType review state type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public PullReview withState(String state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("submitted_at")
    public OffsetDateTime submittedAt;
    public PullReview withSubmittedAt(OffsetDateTime submittedAt) {
        this.submittedAt = submittedAt;
        return this;
    }
    
    /**
     * Team represents a team in an organization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("team")
    public Team team;
    public PullReview withTeam(Team team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public PullReview withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * User represents a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public User user;
    public PullReview withUser(User user) {
        this.user = user;
        return this;
    }
    
}
