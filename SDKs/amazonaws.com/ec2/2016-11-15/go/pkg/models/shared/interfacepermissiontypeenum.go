// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InterfacePermissionTypeEnum string

const (
	InterfacePermissionTypeEnumInstanceAttach InterfacePermissionTypeEnum = "INSTANCE-ATTACH"
	InterfacePermissionTypeEnumEipAssociate   InterfacePermissionTypeEnum = "EIP-ASSOCIATE"
)

func (e InterfacePermissionTypeEnum) ToPointer() *InterfacePermissionTypeEnum {
	return &e
}

func (e *InterfacePermissionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INSTANCE-ATTACH":
		fallthrough
	case "EIP-ASSOCIATE":
		*e = InterfacePermissionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InterfacePermissionTypeEnum: %v", v)
	}
}
