// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContactCreateRequestTypesEnum string

const (
	ContactCreateRequestTypesEnumBilling   ContactCreateRequestTypesEnum = "billing"
	ContactCreateRequestTypesEnumCompany   ContactCreateRequestTypesEnum = "company"
	ContactCreateRequestTypesEnumExecutive ContactCreateRequestTypesEnum = "executive"
	ContactCreateRequestTypesEnumOnline    ContactCreateRequestTypesEnum = "online"
)

func (e *ContactCreateRequestTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "billing":
		fallthrough
	case "company":
		fallthrough
	case "executive":
		fallthrough
	case "online":
		*e = ContactCreateRequestTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactCreateRequestTypesEnum: %s", s)
	}
}

type ContactCreateRequest struct {
	// Work email address of the group contact
	Email string `json:"email"`
	// Fax number of the group contact in E.164 format
	FaxNumber *string `json:"fax_number,omitempty"`
	// First name of the group contact
	FirstName string `json:"first_name"`
	// Last name of the group contact
	LastName string `json:"last_name"`
	// Work phone number of the group contact in E.164 format
	PhoneNumber *string `json:"phone_number,omitempty"`
	// True if contact is the primary contact for the group
	PrimaryContact *bool `json:"primary_contact,omitempty"`
	// Job title of the group contact
	Title *string `json:"title,omitempty"`
	// List of contact types for the group contact
	Types []ContactCreateRequestTypesEnum `json:"types"`
}
