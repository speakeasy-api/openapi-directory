"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProximityLocationListAssignedTargetingOptionDetails = exports.ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Required. Radius range for proximity location list. This represents the size of the area around a chosen location that will be targeted. `All` proximity location targeting under a single resource must have the same radius range value. Set this value to match any existing targeting. If updated, this field will change the radius range for all proximity targeting under the resource.
 */
var ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum;
(function (ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum) {
    ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum["ProximityRadiusRangeUnspecified"] = "PROXIMITY_RADIUS_RANGE_UNSPECIFIED";
    ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum["ProximityRadiusRangeSmall"] = "PROXIMITY_RADIUS_RANGE_SMALL";
    ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum["ProximityRadiusRangeMedium"] = "PROXIMITY_RADIUS_RANGE_MEDIUM";
    ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum["ProximityRadiusRangeLarge"] = "PROXIMITY_RADIUS_RANGE_LARGE";
})(ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum = exports.ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum || (exports.ProximityLocationListAssignedTargetingOptionDetailsProximityRadiusRangeEnum = {}));
/**
 * Targeting details for proximity location list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`.
 */
var ProximityLocationListAssignedTargetingOptionDetails = /** @class */ (function (_super) {
    __extends(ProximityLocationListAssignedTargetingOptionDetails, _super);
    function ProximityLocationListAssignedTargetingOptionDetails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "proximityLocationListId" }),
        __metadata("design:type", String)
    ], ProximityLocationListAssignedTargetingOptionDetails.prototype, "proximityLocationListId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "proximityRadiusRange" }),
        __metadata("design:type", String)
    ], ProximityLocationListAssignedTargetingOptionDetails.prototype, "proximityRadiusRange", void 0);
    return ProximityLocationListAssignedTargetingOptionDetails;
}(utils_1.SpeakeasyBase));
exports.ProximityLocationListAssignedTargetingOptionDetails = ProximityLocationListAssignedTargetingOptionDetails;
