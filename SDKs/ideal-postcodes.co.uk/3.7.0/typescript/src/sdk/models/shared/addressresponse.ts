/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum AddressResponseCodeEnum {
  TwoThousand = "2000",
}

export enum AddressResponseMessageEnum {
  Success = "Success",
}

export class AddressResponseResult extends SpeakeasyBase {
  /**
   * List of matching addresses
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hits" })
  hits: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}

/**
 * Success
 */
export class AddressResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: AddressResponseCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: AddressResponseMessageEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  @Type(() => AddressResponseResult)
  result: AddressResponseResult;
}
