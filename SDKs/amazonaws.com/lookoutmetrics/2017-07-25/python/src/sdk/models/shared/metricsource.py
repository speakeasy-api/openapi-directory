"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import appflowconfig as shared_appflowconfig
from ..shared import athenasourceconfig as shared_athenasourceconfig
from ..shared import cloudwatchconfig as shared_cloudwatchconfig
from ..shared import rdssourceconfig as shared_rdssourceconfig
from ..shared import redshiftsourceconfig as shared_redshiftsourceconfig
from ..shared import s3sourceconfig as shared_s3sourceconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetricSource:
    r"""Contains information about source data used to generate metrics."""
    
    app_flow_config: Optional[shared_appflowconfig.AppFlowConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AppFlowConfig'), 'exclude': lambda f: f is None }})  
    athena_source_config: Optional[shared_athenasourceconfig.AthenaSourceConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AthenaSourceConfig'), 'exclude': lambda f: f is None }})  
    cloud_watch_config: Optional[shared_cloudwatchconfig.CloudWatchConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudWatchConfig'), 'exclude': lambda f: f is None }})  
    rds_source_config: Optional[shared_rdssourceconfig.RDSSourceConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RDSSourceConfig'), 'exclude': lambda f: f is None }})  
    redshift_source_config: Optional[shared_redshiftsourceconfig.RedshiftSourceConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RedshiftSourceConfig'), 'exclude': lambda f: f is None }})  
    s3_source_config: Optional[shared_s3sourceconfig.S3SourceConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3SourceConfig'), 'exclude': lambda f: f is None }})
    r"""Contains information about the configuration of the S3 bucket that contains source files."""  
    