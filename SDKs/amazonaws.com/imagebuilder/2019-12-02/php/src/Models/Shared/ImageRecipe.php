<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ImageRecipe - An image recipe.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ImageRecipe
{
	#[\JMS\Serializer\Annotation\SerializedName('additionalInstanceConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AdditionalInstanceConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AdditionalInstanceConfiguration $additionalInstanceConfiguration = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('arn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $arn = null;
    
    /**
     * $blockDeviceMappings
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InstanceBlockDeviceMapping> $blockDeviceMappings
     */
	#[\JMS\Serializer\Annotation\SerializedName('blockDeviceMappings')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InstanceBlockDeviceMapping>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $blockDeviceMappings = null;
    
    /**
     * $components
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ComponentConfiguration> $components
     */
	#[\JMS\Serializer\Annotation\SerializedName('components')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ComponentConfiguration>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $components = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('dateCreated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateCreated = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('owner')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $owner = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('parentImage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentImage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('platform')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PlatformEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PlatformEnum $platform = null;
    
    /**
     * $tags
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ImageTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImageTypeEnum $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $version = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('workingDirectory')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workingDirectory = null;
    
	public function __construct()
	{
		$this->additionalInstanceConfiguration = null;
		$this->arn = null;
		$this->blockDeviceMappings = null;
		$this->components = null;
		$this->dateCreated = null;
		$this->description = null;
		$this->name = null;
		$this->owner = null;
		$this->parentImage = null;
		$this->platform = null;
		$this->tags = null;
		$this->type = null;
		$this->version = null;
		$this->workingDirectory = null;
	}
}
