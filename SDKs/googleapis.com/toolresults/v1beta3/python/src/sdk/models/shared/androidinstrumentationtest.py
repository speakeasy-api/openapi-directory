"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AndroidInstrumentationTest:
    r"""A test of an Android application that can control an Android component independently of its normal lifecycle. See for more information on types of Android tests."""
    
    test_package_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testPackageId'), 'exclude': lambda f: f is None }})
    r"""The java package for the test to be executed. Required"""  
    test_runner_class: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testRunnerClass'), 'exclude': lambda f: f is None }})
    r"""The InstrumentationTestRunner class. Required"""  
    test_targets: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testTargets'), 'exclude': lambda f: f is None }})
    r"""Each target must be fully qualified with the package name or class name, in one of these formats: - \\"package package_name\\" - \\"class package_name.class_name\\" - \\"class package_name.class_name#method_name\\" If empty, all targets in the module will be run."""  
    use_orchestrator: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('useOrchestrator'), 'exclude': lambda f: f is None }})
    r"""The flag indicates whether Android Test Orchestrator will be used to run test or not."""  
    