<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BusinessAccount - The type that defines the fields for the business account information.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BusinessAccount
{
    /**
     * The type that defines the fields for an address.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Address $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Address')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Address $address = null;
    
    /**
     * An additional name that is used for their business on eBay. The business name is returned in the name field.
     * 
     * @var ?string $doingBusinessAs
     */
	#[\JMS\Serializer\Annotation\SerializedName('doingBusinessAs')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $doingBusinessAs = null;
    
    /**
     * The email address of the business account.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * The business name associated with the user's eBay account.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The type that defines the fields for the information of the contact person for the account.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Contact $primaryContact
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryContact')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Contact')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Contact $primaryContact = null;
    
    /**
     * The type that defines the fields for the details of a phone.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Phone $primaryPhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryPhone')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Phone')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Phone $primaryPhone = null;
    
    /**
     * The type that defines the fields for the details of a phone.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Phone $secondaryPhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondaryPhone')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Phone')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Phone $secondaryPhone = null;
    
    /**
     * The business website address associated with the eBay account.
     * 
     * @var ?string $website
     */
	#[\JMS\Serializer\Annotation\SerializedName('website')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $website = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->doingBusinessAs = null;
		$this->email = null;
		$this->name = null;
		$this->primaryContact = null;
		$this->primaryPhone = null;
		$this->secondaryPhone = null;
		$this->website = null;
	}
}
