/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SandboxItemFireWebhookRequest - SandboxItemFireWebhookRequest defines the request schema for `/sandbox/item/fire_webhook`
 */
public class SandboxItemFireWebhookRequest {
    /**
     * The access token associated with the Item data is being requested for.
     */
    @JsonProperty("access_token")
    public String accessToken;

    public SandboxItemFireWebhookRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public SandboxItemFireWebhookRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;

    public SandboxItemFireWebhookRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * The webhook codes that can be fired by this test endpoint.
     */
    @JsonProperty("webhook_code")
    public SandboxItemFireWebhookRequestWebhookCodeEnum webhookCode;

    public SandboxItemFireWebhookRequest withWebhookCode(SandboxItemFireWebhookRequestWebhookCodeEnum webhookCode) {
        this.webhookCode = webhookCode;
        return this;
    }
    
    /**
     * The webhook types that can be fired by this test endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhook_type")
    public WebhookTypeEnum webhookType;

    public SandboxItemFireWebhookRequest withWebhookType(WebhookTypeEnum webhookType) {
        this.webhookType = webhookType;
        return this;
    }
    
    public SandboxItemFireWebhookRequest(@JsonProperty("access_token") String accessToken, @JsonProperty("webhook_code") SandboxItemFireWebhookRequestWebhookCodeEnum webhookCode) {
        this.accessToken = accessToken;
        this.webhookCode = webhookCode;
  }
}
