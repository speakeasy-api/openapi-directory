/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InitiatedByEnum } from "./initiatedbyenum";
import { JobStatusEnum } from "./jobstatusenum";
import { JobTypeEnum } from "./jobtypeenum";
import { ParticipatingServer } from "./participatingserver";
import { Expose, Type } from "class-transformer";

/**
 * Job.
 */
export class Job extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  creationDateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endDateTime" })
  endDateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "initiatedBy" })
  initiatedBy?: InitiatedByEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "jobID" })
  jobID: string;

  @SpeakeasyMetadata({ elemType: ParticipatingServer })
  @Expose({ name: "participatingServers" })
  @Type(() => ParticipatingServer)
  participatingServers?: ParticipatingServer[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: JobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: JobTypeEnum;
}
