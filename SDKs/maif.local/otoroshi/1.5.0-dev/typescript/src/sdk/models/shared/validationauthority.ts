/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Settings to access a validation authority server
 */
export class ValidationAuthority extends SpeakeasyBase {
  /**
   * Bypass http calls, every certificates are valids
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alwaysValid" })
  alwaysValid: boolean;

  /**
   * The TTL for invalid access response caching
   */
  @SpeakeasyMetadata()
  @Expose({ name: "badTtl" })
  badTtl: number;

  /**
   * The description of the settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * The TTL for valid access response caching
   */
  @SpeakeasyMetadata()
  @Expose({ name: "goodTtl" })
  goodTtl: number;

  /**
   * HTTP call headers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers: Record<string, string>;

  /**
   * The host of the server
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  host: string;

  /**
   * The id of the settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The HTTP method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method: string;

  /**
   * The name of the settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Avoid caching responses
   */
  @SpeakeasyMetadata()
  @Expose({ name: "noCache" })
  noCache: boolean;

  /**
   * The URL path
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * The call timeout
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeout" })
  timeout: number;

  /**
   * The URL of the server
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
