/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ChannelConfig {
    @JsonProperty("automod")
    public ChannelConfigAutomodEnum automod;
    public ChannelConfig withAutomod(ChannelConfigAutomodEnum automod) {
        this.automod = automod;
        return this;
    }
    
    @JsonProperty("automod_behavior")
    public ChannelConfigAutomodBehaviorEnum automodBehavior;
    public ChannelConfig withAutomodBehavior(ChannelConfigAutomodBehaviorEnum automodBehavior) {
        this.automodBehavior = automodBehavior;
        return this;
    }
    
    /**
     * Sets thresholds for AI moderation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automod_thresholds")
    public Thresholds automodThresholds;
    public ChannelConfig withAutomodThresholds(Thresholds automodThresholds) {
        this.automodThresholds = automodThresholds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blocklist")
    public String blocklist;
    public ChannelConfig withBlocklist(String blocklist) {
        this.blocklist = blocklist;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blocklist_behavior")
    public ChannelConfigBlocklistBehaviorEnum blocklistBehavior;
    public ChannelConfig withBlocklistBehavior(ChannelConfigBlocklistBehaviorEnum blocklistBehavior) {
        this.blocklistBehavior = blocklistBehavior;
        return this;
    }
    
    /**
     * List of commands that channel supports
     */
    @JsonProperty("commands")
    public String[] commands;
    public ChannelConfig withCommands(String[] commands) {
        this.commands = commands;
        return this;
    }
    
    @JsonProperty("connect_events")
    public Boolean connectEvents;
    public ChannelConfig withConnectEvents(Boolean connectEvents) {
        this.connectEvents = connectEvents;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public ChannelConfig withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("custom_events")
    public Boolean customEvents;
    public ChannelConfig withCustomEvents(Boolean customEvents) {
        this.customEvents = customEvents;
        return this;
    }
    
    @JsonProperty("max_message_length")
    public Double maxMessageLength;
    public ChannelConfig withMaxMessageLength(Double maxMessageLength) {
        this.maxMessageLength = maxMessageLength;
        return this;
    }
    
    @JsonProperty("message_retention")
    public String messageRetention;
    public ChannelConfig withMessageRetention(String messageRetention) {
        this.messageRetention = messageRetention;
        return this;
    }
    
    @JsonProperty("mutes")
    public Boolean mutes;
    public ChannelConfig withMutes(Boolean mutes) {
        this.mutes = mutes;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public ChannelConfig withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("push_notifications")
    public Boolean pushNotifications;
    public ChannelConfig withPushNotifications(Boolean pushNotifications) {
        this.pushNotifications = pushNotifications;
        return this;
    }
    
    @JsonProperty("quotes")
    public Boolean quotes;
    public ChannelConfig withQuotes(Boolean quotes) {
        this.quotes = quotes;
        return this;
    }
    
    @JsonProperty("reactions")
    public Boolean reactions;
    public ChannelConfig withReactions(Boolean reactions) {
        this.reactions = reactions;
        return this;
    }
    
    @JsonProperty("read_events")
    public Boolean readEvents;
    public ChannelConfig withReadEvents(Boolean readEvents) {
        this.readEvents = readEvents;
        return this;
    }
    
    @JsonProperty("reminders")
    public Boolean reminders;
    public ChannelConfig withReminders(Boolean reminders) {
        this.reminders = reminders;
        return this;
    }
    
    @JsonProperty("replies")
    public Boolean replies;
    public ChannelConfig withReplies(Boolean replies) {
        this.replies = replies;
        return this;
    }
    
    @JsonProperty("search")
    public Boolean search;
    public ChannelConfig withSearch(Boolean search) {
        this.search = search;
        return this;
    }
    
    @JsonProperty("typing_events")
    public Boolean typingEvents;
    public ChannelConfig withTypingEvents(Boolean typingEvents) {
        this.typingEvents = typingEvents;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public ChannelConfig withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("uploads")
    public Boolean uploads;
    public ChannelConfig withUploads(Boolean uploads) {
        this.uploads = uploads;
        return this;
    }
    
    @JsonProperty("url_enrichment")
    public Boolean urlEnrichment;
    public ChannelConfig withUrlEnrichment(Boolean urlEnrichment) {
        this.urlEnrichment = urlEnrichment;
        return this;
    }
    
}
