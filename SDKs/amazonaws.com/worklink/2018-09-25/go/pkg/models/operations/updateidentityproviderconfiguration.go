// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateIdentityProviderConfigurationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateIdentityProviderConfigurationRequestBodyIdentityProviderTypeEnum - The type of identity provider.
type UpdateIdentityProviderConfigurationRequestBodyIdentityProviderTypeEnum string

const (
	UpdateIdentityProviderConfigurationRequestBodyIdentityProviderTypeEnumSaml UpdateIdentityProviderConfigurationRequestBodyIdentityProviderTypeEnum = "SAML"
)

func (e *UpdateIdentityProviderConfigurationRequestBodyIdentityProviderTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SAML":
		*e = UpdateIdentityProviderConfigurationRequestBodyIdentityProviderTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateIdentityProviderConfigurationRequestBodyIdentityProviderTypeEnum: %s", s)
	}
}

type UpdateIdentityProviderConfigurationRequestBody struct {
	// The ARN of the fleet.
	FleetArn string `json:"FleetArn"`
	// The SAML metadata document provided by the customerâ€™s identity provider. The existing IdentityProviderSamlMetadata is unset if null is passed.
	IdentityProviderSamlMetadata *string `json:"IdentityProviderSamlMetadata,omitempty"`
	// The type of identity provider.
	IdentityProviderType UpdateIdentityProviderConfigurationRequestBodyIdentityProviderTypeEnum `json:"IdentityProviderType"`
}

type UpdateIdentityProviderConfigurationRequest struct {
	Headers UpdateIdentityProviderConfigurationHeaders
	Request UpdateIdentityProviderConfigurationRequestBody `request:"mediaType=application/json"`
}

type UpdateIdentityProviderConfigurationResponse struct {
	ContentType string
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
	// Success
	UpdateIdentityProviderConfigurationResponse map[string]interface{}
}
