/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Probe - Not supported by Cloud Run Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.
 */
public class Probe {
    /**
     * Not supported by Cloud Run ExecAction describes a "run in container" action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exec")
    public ExecAction exec;
    public Probe withExec(ExecAction exec) {
        this.exec = exec;
        return this;
    }
    
    /**
     * (Optional) Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureThreshold")
    public Integer failureThreshold;
    public Probe withFailureThreshold(Integer failureThreshold) {
        this.failureThreshold = failureThreshold;
        return this;
    }
    
    /**
     * Not supported by Cloud Run GRPCAction describes an action involving a GRPC port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grpc")
    public GRPCAction grpc;
    public Probe withGrpc(GRPCAction grpc) {
        this.grpc = grpc;
        return this;
    }
    
    /**
     * Not supported by Cloud Run HTTPGetAction describes an action based on HTTP Get requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpGet")
    public HTTPGetAction httpGet;
    public Probe withHttpGet(HTTPGetAction httpGet) {
        this.httpGet = httpGet;
        return this;
    }
    
    /**
     * (Optional) Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialDelaySeconds")
    public Integer initialDelaySeconds;
    public Probe withInitialDelaySeconds(Integer initialDelaySeconds) {
        this.initialDelaySeconds = initialDelaySeconds;
        return this;
    }
    
    /**
     * (Optional) How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("periodSeconds")
    public Integer periodSeconds;
    public Probe withPeriodSeconds(Integer periodSeconds) {
        this.periodSeconds = periodSeconds;
        return this;
    }
    
    /**
     * (Optional) Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 if set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("successThreshold")
    public Integer successThreshold;
    public Probe withSuccessThreshold(Integer successThreshold) {
        this.successThreshold = successThreshold;
        return this;
    }
    
    /**
     * Not supported by Cloud Run TCPSocketAction describes an action based on opening a socket
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tcpSocket")
    public TCPSocketAction tcpSocket;
    public Probe withTcpSocket(TCPSocketAction tcpSocket) {
        this.tcpSocket = tcpSocket;
        return this;
    }
    
    /**
     * (Optional) Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeoutSeconds")
    public Integer timeoutSeconds;
    public Probe withTimeoutSeconds(Integer timeoutSeconds) {
        this.timeoutSeconds = timeoutSeconds;
        return this;
    }
    
}
