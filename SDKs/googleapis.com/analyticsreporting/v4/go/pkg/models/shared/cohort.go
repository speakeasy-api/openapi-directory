// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CohortTypeEnum - Type of the cohort. The only supported type as of now is `FIRST_VISIT_DATE`. If this field is unspecified the cohort is treated as `FIRST_VISIT_DATE` type cohort.
type CohortTypeEnum string

const (
	CohortTypeEnumUnspecifiedCohortType CohortTypeEnum = "UNSPECIFIED_COHORT_TYPE"
	CohortTypeEnumFirstVisitDate        CohortTypeEnum = "FIRST_VISIT_DATE"
)

func (e *CohortTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED_COHORT_TYPE":
		fallthrough
	case "FIRST_VISIT_DATE":
		*e = CohortTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CohortTypeEnum: %s", s)
	}
}

// Cohort - Defines a cohort. A cohort is a group of users who share a common characteristic. For example, all users with the same acquisition date belong to the same cohort.
type Cohort struct {
	// A contiguous set of days: startDate, startDate + 1 day, ..., endDate. The start and end dates are specified in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date format `YYYY-MM-DD`.
	DateRange *DateRange `json:"dateRange,omitempty"`
	// A unique name for the cohort. If not defined name will be auto-generated with values cohort_[1234...].
	Name *string `json:"name,omitempty"`
	// Type of the cohort. The only supported type as of now is `FIRST_VISIT_DATE`. If this field is unspecified the cohort is treated as `FIRST_VISIT_DATE` type cohort.
	Type *CohortTypeEnum `json:"type,omitempty"`
}
