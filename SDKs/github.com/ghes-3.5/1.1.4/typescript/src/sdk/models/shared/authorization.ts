/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableScopedInstallation } from "./nullablescopedinstallation";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

export class AuthorizationApp extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

/**
 * The authorization for an OAuth app, GitHub App, or a Personal Access Token.
 */
export class Authorization extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "app" })
  @Type(() => AuthorizationApp)
  app: AuthorizationApp;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hashed_token" })
  hashedToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "installation" })
  @Type(() => NullableScopedInstallation)
  installation?: NullableScopedInstallation;

  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note: string;

  @SpeakeasyMetadata()
  @Expose({ name: "note_url" })
  noteUrl: string;

  /**
   * A list of scopes that this authorization is in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token: string;

  @SpeakeasyMetadata()
  @Expose({ name: "token_last_eight" })
  tokenLastEight: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => NullableSimpleUser)
  user?: NullableSimpleUser;
}
