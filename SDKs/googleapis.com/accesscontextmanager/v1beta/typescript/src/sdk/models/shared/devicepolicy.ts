/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OsConstraint } from "./osconstraint";
import { Expose, Type } from "class-transformer";

export enum DevicePolicyAllowedDeviceManagementLevelsEnum {
  ManagementUnspecified = "MANAGEMENT_UNSPECIFIED",
  None = "NONE",
  Basic = "BASIC",
  Complete = "COMPLETE",
}

export enum DevicePolicyAllowedEncryptionStatusesEnum {
  EncryptionUnspecified = "ENCRYPTION_UNSPECIFIED",
  EncryptionUnsupported = "ENCRYPTION_UNSUPPORTED",
  Unencrypted = "UNENCRYPTED",
  Encrypted = "ENCRYPTED",
}

/**
 * `DevicePolicy` specifies device specific restrictions necessary to acquire a given access level. A `DevicePolicy` specifies requirements for requests from devices to be granted access levels, it does not do any enforcement on the device. `DevicePolicy` acts as an AND over all specified fields, and each repeated field is an OR over its elements. Any unset fields are ignored. For example, if the proto is { os_type : DESKTOP_WINDOWS, os_type : DESKTOP_LINUX, encryption_status: ENCRYPTED}, then the DevicePolicy will be true for requests originating from encrypted Linux desktops and encrypted Windows desktops.
 */
export class DevicePolicy extends SpeakeasyBase {
  /**
   * Allowed device management levels, an empty list allows all management levels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedDeviceManagementLevels" })
  allowedDeviceManagementLevels?: DevicePolicyAllowedDeviceManagementLevelsEnum[];

  /**
   * Allowed encryptions statuses, an empty list allows all statuses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedEncryptionStatuses" })
  allowedEncryptionStatuses?: DevicePolicyAllowedEncryptionStatusesEnum[];

  /**
   * Allowed OS versions, an empty list allows all types and all versions.
   */
  @SpeakeasyMetadata({ elemType: OsConstraint })
  @Expose({ name: "osConstraints" })
  @Type(() => OsConstraint)
  osConstraints?: OsConstraint[];

  /**
   * Whether the device needs to be approved by the customer admin.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requireAdminApproval" })
  requireAdminApproval?: boolean;

  /**
   * Whether the device needs to be corp owned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requireCorpOwned" })
  requireCorpOwned?: boolean;

  /**
   * Whether or not screenlock is required for the DevicePolicy to be true. Defaults to `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requireScreenlock" })
  requireScreenlock?: boolean;
}
