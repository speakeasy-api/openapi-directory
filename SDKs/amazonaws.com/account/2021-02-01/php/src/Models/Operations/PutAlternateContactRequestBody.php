<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PutAlternateContactRequestBody
{
    /**
     * <p>Specifies the 12 digit account ID number of the Amazon Web Services account that you want to access or modify with this operation.</p> <p>If you do not specify this parameter, it defaults to the Amazon Web Services account of the identity used to call the operation.</p> <p>To use this parameter, the caller must be an identity in the <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account">organization's management account</a> or a delegated administrator account, and the specified account ID must be a member account in the same organization. The organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_org_support-all-features.html">all features enabled</a>, and the organization must have <a href="https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-trusted-access.html">trusted access</a> enabled for the Account Management service, and optionally a <a href="https://docs.aws.amazon.com/organizations/latest/userguide/using-orgs-delegated-admin.html">delegated admin</a> account assigned.</p> <note> <p>The management account can't specify its own <code>AccountId</code>; it must call the operation in standalone context by not including the <code>AccountId</code> parameter.</p> </note> <p>To call this operation on an account that is not a member of an organization, then don't specify this parameter, and call the operation using an identity belonging to the account whose contacts you wish to retrieve or modify.</p>
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * Specifies which alternate contact you want to create or update.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PutAlternateContactRequestBodyAlternateContactTypeEnum $alternateContactType
     */
	#[\JMS\Serializer\Annotation\SerializedName('AlternateContactType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PutAlternateContactRequestBodyAlternateContactTypeEnum>')]
    public PutAlternateContactRequestBodyAlternateContactTypeEnum $alternateContactType;
    
    /**
     * Specifies an email address for the alternate contact. 
     * 
     * @var string $emailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('EmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $emailAddress;
    
    /**
     * Specifies a name for the alternate contact.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Specifies a phone number for the alternate contact.
     * 
     * @var string $phoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('PhoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $phoneNumber;
    
    /**
     * Specifies a title for the alternate contact.
     * 
     * @var string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('Title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->alternateContactType = \OpenAPI\OpenAPI\Models\Operations\PutAlternateContactRequestBodyAlternateContactTypeEnum::BILLING;
		$this->emailAddress = "";
		$this->name = "";
		$this->phoneNumber = "";
		$this->title = "";
	}
}
