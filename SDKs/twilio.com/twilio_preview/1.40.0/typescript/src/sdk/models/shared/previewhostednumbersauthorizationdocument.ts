/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorizationDocumentEnumStatusEnum } from "./authorizationdocumentenumstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class PreviewHostedNumbersAuthorizationDocument extends SpeakeasyBase {
  /**
   * A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address_sid" })
  addressSid?: string;

  /**
   * Email recipients who will be informed when an Authorization Document has been sent and signed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cc_emails" })
  ccEmails?: string[];

  /**
   * The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * Email that this AuthorizationDocument will be sent to for signing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * A 34 character string that uniquely identifies this AuthorizationDocument.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AuthorizationDocumentEnumStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
