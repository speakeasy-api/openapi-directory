"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import clientmode_enum as shared_clientmode_enum
from ..shared import destinationconfig as shared_destinationconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RotateTunnelAccessTokenRequest:
    
    client_mode: shared_clientmode_enum.ClientModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientMode') }})  
    tunnel_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tunnelId') }})  
    destination_config: Optional[shared_destinationconfig.DestinationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationConfig'), 'exclude': lambda f: f is None }})
    r"""The destination configuration."""  
    