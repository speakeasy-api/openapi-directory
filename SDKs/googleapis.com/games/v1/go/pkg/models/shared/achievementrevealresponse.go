// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AchievementRevealResponseCurrentStateEnum - The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked.
type AchievementRevealResponseCurrentStateEnum string

const (
	AchievementRevealResponseCurrentStateEnumRevealAchievementStateUnspecified AchievementRevealResponseCurrentStateEnum = "REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED"
	AchievementRevealResponseCurrentStateEnumRevealed                          AchievementRevealResponseCurrentStateEnum = "REVEALED"
	AchievementRevealResponseCurrentStateEnumUnlocked                          AchievementRevealResponseCurrentStateEnum = "UNLOCKED"
)

func (e AchievementRevealResponseCurrentStateEnum) ToPointer() *AchievementRevealResponseCurrentStateEnum {
	return &e
}

func (e *AchievementRevealResponseCurrentStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED":
		fallthrough
	case "REVEALED":
		fallthrough
	case "UNLOCKED":
		*e = AchievementRevealResponseCurrentStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AchievementRevealResponseCurrentStateEnum: %v", v)
	}
}

// AchievementRevealResponse - An achievement reveal response
type AchievementRevealResponse struct {
	// The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked.
	CurrentState *AchievementRevealResponseCurrentStateEnum `json:"currentState,omitempty"`
	// Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementRevealResponse`.
	Kind *string `json:"kind,omitempty"`
}
