// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// DeleteServerCatalogXAmzTargetEnum
type DeleteServerCatalogXAmzTargetEnum string

const (
	DeleteServerCatalogXAmzTargetEnumAwsServerMigrationServiceV20161024DeleteServerCatalog DeleteServerCatalogXAmzTargetEnum = "AWSServerMigrationService_V2016_10_24.DeleteServerCatalog"
)

func (e DeleteServerCatalogXAmzTargetEnum) ToPointer() *DeleteServerCatalogXAmzTargetEnum {
	return &e
}

func (e *DeleteServerCatalogXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSServerMigrationService_V2016_10_24.DeleteServerCatalog":
		*e = DeleteServerCatalogXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteServerCatalogXAmzTargetEnum: %v", v)
	}
}

type DeleteServerCatalogRequest struct {
	RequestBody       map[string]interface{}            `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteServerCatalogXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteServerCatalogResponse struct {
	ContentType string
	// Success
	DeleteServerCatalogResponse map[string]interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// MissingRequiredParameterException
	MissingRequiredParameterException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// UnauthorizedOperationException
	UnauthorizedOperationException interface{}
}
