"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import resourceshareassociation as shared_resourceshareassociation
from ..shared import resourceshareinvitationstatus_enum as shared_resourceshareinvitationstatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceShareInvitation:
    r"""Describes an invitation for an Amazon Web Services account to join a resource share."""
    
    invitation_timestamp: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invitationTimestamp'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    receiver_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverAccountId'), 'exclude': lambda f: f is None }})  
    receiver_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverArn'), 'exclude': lambda f: f is None }})  
    resource_share_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceShareArn'), 'exclude': lambda f: f is None }})  
    resource_share_associations: Optional[list[shared_resourceshareassociation.ResourceShareAssociation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceShareAssociations'), 'exclude': lambda f: f is None }})  
    resource_share_invitation_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceShareInvitationArn'), 'exclude': lambda f: f is None }})  
    resource_share_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceShareName'), 'exclude': lambda f: f is None }})  
    sender_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('senderAccountId'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_resourceshareinvitationstatus_enum.ResourceShareInvitationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    