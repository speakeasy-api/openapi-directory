// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteUsageLimitActionEnum
type GETDeleteUsageLimitActionEnum string

const (
	GETDeleteUsageLimitActionEnumDeleteUsageLimit GETDeleteUsageLimitActionEnum = "DeleteUsageLimit"
)

func (e *GETDeleteUsageLimitActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteUsageLimit":
		*e = GETDeleteUsageLimitActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteUsageLimitActionEnum: %s", s)
	}
}

// GETDeleteUsageLimitVersionEnum
type GETDeleteUsageLimitVersionEnum string

const (
	GETDeleteUsageLimitVersionEnumTwoThousandAndTwelve1201 GETDeleteUsageLimitVersionEnum = "2012-12-01"
)

func (e *GETDeleteUsageLimitVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETDeleteUsageLimitVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteUsageLimitVersionEnum: %s", s)
	}
}

type GETDeleteUsageLimitRequest struct {
	Action GETDeleteUsageLimitActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The identifier of the usage limit to delete.
	UsageLimitID      string                         `queryParam:"style=form,explode=true,name=UsageLimitId"`
	Version           GETDeleteUsageLimitVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteUsageLimitResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
