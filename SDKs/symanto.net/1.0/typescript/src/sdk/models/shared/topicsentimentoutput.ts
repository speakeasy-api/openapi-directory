/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Sentiment } from "./sentiment";
import { Topic } from "./topic";
import { TopicSentiment } from "./topicsentiment";
import { Expose, Type } from "class-transformer";

export class TopicSentimentOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata({ elemType: Sentiment })
  @Expose({ name: "sentiments" })
  @Type(() => Sentiment)
  sentiments?: Sentiment[];

  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;

  @SpeakeasyMetadata({ elemType: TopicSentiment })
  @Expose({ name: "topicSentiments" })
  @Type(() => TopicSentiment)
  topicSentiments?: TopicSentiment[];

  @SpeakeasyMetadata({ elemType: Topic })
  @Expose({ name: "topics" })
  @Type(() => Topic)
  topics?: Topic[];
}
