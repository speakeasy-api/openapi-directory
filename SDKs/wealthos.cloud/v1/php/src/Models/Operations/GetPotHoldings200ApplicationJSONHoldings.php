<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetPotHoldings200ApplicationJSONHoldings
{
    /**
     * Additional external details of the holding. This may be populated in reconciliation process
     * 
     * @var ?array<string, mixed> $additionalExternalDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('additional_external_details')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalExternalDetails = null;
    
    /**
     * Per-unit book cost for a particular holding (applicable for investment product holdings only)
     * 
     * @var ?string $averageBookCost
     */
	#[\JMS\Serializer\Annotation\SerializedName('average_book_cost')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $averageBookCost = null;
    
    /**
     * Total book cost for the total units currently held within the pot (applicable for investment product holdings only)
     * 
     * @var ?string $costOfHolding
     */
	#[\JMS\Serializer\Annotation\SerializedName('cost_of_holding')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $costOfHolding = null;
    
    /**
     * Currency of the pot
     * 
     * @var string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currency;
    
    /**
     * Free quantity of the investment product holding. Will be empty for the cash holding
     * 
     * @var ?string $freeQuantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('free_quantity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $freeQuantity = null;
    
    /**
     * Free value of the holding
     * 
     * @var string $freeValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('free_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $freeValue;
    
    /**
     * Investment product id of the holding. Will be 'cash' for cash holdings
     * 
     * @var string $investmentProductId
     */
	#[\JMS\Serializer\Annotation\SerializedName('investment_product_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $investmentProductId;
    
    /**
     * Investment product name of the holding. Will be empty for cash holdings
     * 
     * @var ?string $investmentProductName
     */
	#[\JMS\Serializer\Annotation\SerializedName('investment_product_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $investmentProductName = null;
    
    /**
     * Locked quantity of the investment product holding. Will be empty for the cash holding
     * 
     * @var ?string $lockedQuantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('locked_quantity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lockedQuantity = null;
    
    /**
     * Locked value of the holding
     * 
     * @var string $lockedValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('locked_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lockedValue;
    
    /**
     * Last price available for the investment product. Will be empty for the cash holding
     * 
     * @var ?string $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $price = null;
    
    /**
     * Last price updated date for the investment product. Will be empty for the cash holding
     * 
     * @var ?string $priceDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('price_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priceDate = null;
    
    /**
     * Settled cash amount within the pot (applicable for cash holdings only)
     * 
     * @var ?string $settledCashPosition
     */
	#[\JMS\Serializer\Annotation\SerializedName('settled_cash_position')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $settledCashPosition = null;
    
    /**
     * Total quantity of the investment product holding. Will be empty for the cash holding
     * 
     * @var ?string $totalQuantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_quantity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalQuantity = null;
    
    /**
     * Total value of the holding
     * 
     * @var string $totalValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $totalValue;
    
	public function __construct()
	{
		$this->additionalExternalDetails = null;
		$this->averageBookCost = null;
		$this->costOfHolding = null;
		$this->currency = "";
		$this->freeQuantity = null;
		$this->freeValue = "";
		$this->investmentProductId = "";
		$this->investmentProductName = null;
		$this->lockedQuantity = null;
		$this->lockedValue = "";
		$this->price = null;
		$this->priceDate = null;
		$this->settledCashPosition = null;
		$this->totalQuantity = null;
		$this->totalValue = "";
	}
}
