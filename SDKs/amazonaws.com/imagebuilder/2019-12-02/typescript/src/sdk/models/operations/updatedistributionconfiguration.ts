/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateDistributionConfigurationRequestBody extends SpeakeasyBase {
  /**
   * The idempotency token of the distribution configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientToken" })
  clientToken: string;

  /**
   * The description of the distribution configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The Amazon Resource Name (ARN) of the distribution configuration that you want to update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distributionConfigurationArn" })
  distributionConfigurationArn: string;

  /**
   * The distributions of the distribution configuration.
   */
  @SpeakeasyMetadata({ elemType: shared.Distribution })
  @Expose({ name: "distributions" })
  @Type(() => shared.Distribution)
  distributions: shared.Distribution[];
}

export class UpdateDistributionConfigurationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateDistributionConfigurationRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateDistributionConfigurationResponse extends SpeakeasyBase {
  /**
   * CallRateLimitExceededException
   */
  @SpeakeasyMetadata()
  callRateLimitExceededException?: any;

  /**
   * ClientException
   */
  @SpeakeasyMetadata()
  clientException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ForbiddenException
   */
  @SpeakeasyMetadata()
  forbiddenException?: any;

  /**
   * IdempotentParameterMismatchException
   */
  @SpeakeasyMetadata()
  idempotentParameterMismatchException?: any;

  /**
   * InvalidParameterCombinationException
   */
  @SpeakeasyMetadata()
  invalidParameterCombinationException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceInUseException
   */
  @SpeakeasyMetadata()
  resourceInUseException?: any;

  /**
   * ServiceException
   */
  @SpeakeasyMetadata()
  serviceException?: any;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateDistributionConfigurationResponse?: shared.UpdateDistributionConfigurationResponse;
}
