// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PredictiveScalingModeEnum string

const (
	PredictiveScalingModeEnumForecastAndScale PredictiveScalingModeEnum = "ForecastAndScale"
	PredictiveScalingModeEnumForecastOnly     PredictiveScalingModeEnum = "ForecastOnly"
)

func (e PredictiveScalingModeEnum) ToPointer() *PredictiveScalingModeEnum {
	return &e
}

func (e *PredictiveScalingModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ForecastAndScale":
		fallthrough
	case "ForecastOnly":
		*e = PredictiveScalingModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PredictiveScalingModeEnum: %v", v)
	}
}
