"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resolverendpointtype_enum as shared_resolverendpointtype_enum
from ..shared import updateipaddress as shared_updateipaddress
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateResolverEndpointRequest:
    
    resolver_endpoint_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResolverEndpointId') }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    resolver_endpoint_type: Optional[shared_resolverendpointtype_enum.ResolverEndpointTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResolverEndpointType'), 'exclude': lambda f: f is None }})  
    update_ip_addresses: Optional[list[shared_updateipaddress.UpdateIPAddress]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdateIpAddresses'), 'exclude': lambda f: f is None }})  
    