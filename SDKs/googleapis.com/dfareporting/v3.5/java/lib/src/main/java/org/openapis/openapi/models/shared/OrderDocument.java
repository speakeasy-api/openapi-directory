/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * OrderDocument - Contains properties of a Planning order document.
 */
public class OrderDocument {
    /**
     * Account ID of this order document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public OrderDocument withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Advertiser ID of this order document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserId")
    public String advertiserId;

    public OrderDocument withAdvertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
        return this;
    }
    
    /**
     * The amended order document ID of this order document. An order document can be created by optionally amending another order document so that the change history can be preserved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amendedOrderDocumentId")
    public String amendedOrderDocumentId;

    public OrderDocument withAmendedOrderDocumentId(String amendedOrderDocumentId) {
        this.amendedOrderDocumentId = amendedOrderDocumentId;
        return this;
    }
    
    /**
     * IDs of users who have approved this order document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approvedByUserProfileIds")
    public String[] approvedByUserProfileIds;

    public OrderDocument withApprovedByUserProfileIds(String[] approvedByUserProfileIds) {
        this.approvedByUserProfileIds = approvedByUserProfileIds;
        return this;
    }
    
    /**
     * Whether this order document is cancelled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancelled")
    public Boolean cancelled;

    public OrderDocument withCancelled(Boolean cancelled) {
        this.cancelled = cancelled;
        return this;
    }
    
    /**
     * Modification timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdInfo")
    public LastModifiedInfo createdInfo;

    public OrderDocument withCreatedInfo(LastModifiedInfo createdInfo) {
        this.createdInfo = createdInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("effectiveDate")
    public LocalDate effectiveDate;

    public OrderDocument withEffectiveDate(LocalDate effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }
    
    /**
     * ID of this order document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public OrderDocument withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#orderDocument".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public OrderDocument withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * List of email addresses that received the last sent document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastSentRecipients")
    public String[] lastSentRecipients;

    public OrderDocument withLastSentRecipients(String[] lastSentRecipients) {
        this.lastSentRecipients = lastSentRecipients;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastSentTime")
    public OffsetDateTime lastSentTime;

    public OrderDocument withLastSentTime(OffsetDateTime lastSentTime) {
        this.lastSentTime = lastSentTime;
        return this;
    }
    
    /**
     * ID of the order from which this order document is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderId")
    public String orderId;

    public OrderDocument withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * Project ID of this order document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectId")
    public String projectId;

    public OrderDocument withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    /**
     * Whether this order document has been signed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signed")
    public Boolean signed;

    public OrderDocument withSigned(Boolean signed) {
        this.signed = signed;
        return this;
    }
    
    /**
     * Subaccount ID of this order document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subaccountId")
    public String subaccountId;

    public OrderDocument withSubaccountId(String subaccountId) {
        this.subaccountId = subaccountId;
        return this;
    }
    
    /**
     * Title of this order document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public OrderDocument withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Type of this order document
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public OrderDocumentTypeEnum type;

    public OrderDocument withType(OrderDocumentTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public OrderDocument(){}
}
