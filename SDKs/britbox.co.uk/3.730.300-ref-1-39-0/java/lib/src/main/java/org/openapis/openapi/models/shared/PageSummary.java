/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PageSummary {
    /**
     * Unique identifier for the page.
     */
    @JsonProperty("id")
    public String id;

    public PageSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * True if this page is static and doesn't have any dynamic content to load.
     * 
     * Static pages don't need to go back to the page endpoint to load page content
     * instead the page summary loaded with the sitemap should be enough to determine
     * the page template type and render based on this.
     * 
     */
    @JsonProperty("isStatic")
    public Boolean isStatic;

    public PageSummary withIsStatic(Boolean isStatic) {
        this.isStatic = isStatic;
        return this;
    }
    
    /**
     * True if this page is a system page type.
     * 
     * **DEPRECATED** This property doesn't have any real use in client applications
     * anymore so shouldn't be used. It especially shouldn't be used to determine if
     * a page is static or not. Use the `isStatic` property instead.
     * 
     */
    @JsonProperty("isSystemPage")
    public Boolean isSystemPage;

    public PageSummary withIsSystemPage(Boolean isSystemPage) {
        this.isSystemPage = isSystemPage;
        return this;
    }
    
    /**
     * Key used to lookup a known page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public PageSummary withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Unique path for the page.
     */
    @JsonProperty("path")
    public String path;

    public PageSummary withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Identifier for of the page template to render this page.
     */
    @JsonProperty("template")
    public String template;

    public PageSummary withTemplate(String template) {
        this.template = template;
        return this;
    }
    
    /**
     * Title of the page.
     */
    @JsonProperty("title")
    public String title;

    public PageSummary withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public PageSummary(@JsonProperty("id") String id, @JsonProperty("isStatic") Boolean isStatic, @JsonProperty("isSystemPage") Boolean isSystemPage, @JsonProperty("path") String path, @JsonProperty("template") String template, @JsonProperty("title") String title) {
        this.id = id;
        this.isStatic = isStatic;
        this.isSystemPage = isSystemPage;
        this.path = path;
        this.template = template;
        this.title = title;
  }
}
