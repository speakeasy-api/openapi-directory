"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class BestFaresSecurity:
    
    auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class BestFaresRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""http header: application/json or application/xml (Acceptable values are: \\"application/json\\", \\"application/xml\\")"""  
    catalogues: str = dataclasses.field(metadata={'query_param': { 'field_name': 'catalogues', 'style': 'form', 'explode': True }})
    r"""Search fares from these carriers' catalogues (e.g. '4U;OS;LH')"""  
    destination: str = dataclasses.field(metadata={'query_param': { 'field_name': 'destination', 'style': 'form', 'explode': True }})
    r"""Journey destination. 3-letter IATA airport code (e.g. 'MAD')"""  
    origin: str = dataclasses.field(metadata={'query_param': { 'field_name': 'origin', 'style': 'form', 'explode': True }})
    r"""Journey origin. 3-letter IATA airport code (e.g. 'FRA')"""  
    range: str = dataclasses.field(metadata={'query_param': { 'field_name': 'range', 'style': 'form', 'explode': True }})
    r"""Fare range: 'byday' or 'bymonth' (Acceptable values are: \\"byday\\", \\"bymonth\\")"""  
    travel_date: str = dataclasses.field(metadata={'query_param': { 'field_name': 'travel-date', 'style': 'form', 'explode': True }})
    r"""Journey travel-date (YYYY-MM-DD)"""  
    trip_duration: str = dataclasses.field(metadata={'query_param': { 'field_name': 'trip-duration', 'style': 'form', 'explode': True }})
    r"""Trip duration in days (e.g. '7')"""  
    cabin_class: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cabin-class', 'style': 'form', 'explode': True }})
    r"""Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: \\"\\", \\"economy\\", \\"premium_economy\\", \\"business\\", \\"first\\")"""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'country', 'style': 'form', 'explode': True }})
    r"""Country code of requestor. 2-letter ISO 3166-1 country code (e.g. 'de')"""  
    fare_family: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fare-family', 'style': 'form', 'explode': True }})
    r"""Fare family: basic, smart, best, smartflex, bestflex - Germanwings only (Acceptable values are: \\"\\", \\"basic\\", \\"smart\\", \\"best\\", \\"smartflex\\", \\"bestflex\\")"""  
    trackingid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'trackingid', 'style': 'form', 'explode': True }})
    r"""Austrian Airlines only - specify the web tracking id to be used in OS Deep link."""  
    

@dataclasses.dataclass
class BestFaresResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    best_fares_200_application_json_string: Optional[str] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    