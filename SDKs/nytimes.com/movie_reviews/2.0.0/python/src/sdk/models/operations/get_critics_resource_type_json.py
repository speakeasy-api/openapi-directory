"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import critic as shared_critic
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetCriticsResourceTypeJSONRequest:
    
    resource_type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'resource-type', 'style': 'simple', 'explode': False }})
    r"""all | full-time | part-time | [reviewer-name]
    
    Specify all to get all Times reviewers, or specify full-time or part-time to get that subset. Specify a reviewer's name to get details about a particular reviewer.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCriticsResourceTypeJSON200ApplicationJSON:
    r"""An array of Movie Critics"""
    
    copyright: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('copyright'), 'exclude': lambda f: f is None }})  
    num_results: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('num_results'), 'exclude': lambda f: f is None }})  
    results: Optional[list[shared_critic.Critic]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetCriticsResourceTypeJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_critics_resource_type_json_200_application_json_object: Optional[GetCriticsResourceTypeJSON200ApplicationJSON] = dataclasses.field(default=None)
    r"""An array of Movie Critics"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    