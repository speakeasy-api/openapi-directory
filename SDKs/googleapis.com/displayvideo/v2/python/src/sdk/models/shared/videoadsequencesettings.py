"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import videoadsequencestep as shared_videoadsequencestep
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VideoAdSequenceSettingsMinimumDurationEnum(str, Enum):
    r"""The minimum time interval before the same user sees this sequence again."""
    VIDEO_AD_SEQUENCE_MINIMUM_DURATION_UNSPECIFIED = 'VIDEO_AD_SEQUENCE_MINIMUM_DURATION_UNSPECIFIED'
    VIDEO_AD_SEQUENCE_MINIMUM_DURATION_WEEK = 'VIDEO_AD_SEQUENCE_MINIMUM_DURATION_WEEK'
    VIDEO_AD_SEQUENCE_MINIMUM_DURATION_MONTH = 'VIDEO_AD_SEQUENCE_MINIMUM_DURATION_MONTH'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VideoAdSequenceSettings:
    r"""Settings related to VideoAdSequence."""
    
    minimum_duration: Optional[VideoAdSequenceSettingsMinimumDurationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumDuration'), 'exclude': lambda f: f is None }})
    r"""The minimum time interval before the same user sees this sequence again."""  
    steps: Optional[list[shared_videoadsequencestep.VideoAdSequenceStep]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('steps'), 'exclude': lambda f: f is None }})
    r"""The steps of which the sequence consists."""  
    