// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type AddUserForTeamPathParams struct {
	// Globally unique identifier for the team.
	TeamGid string `pathParam:"style=simple,explode=false,name=team_gid"`
}

type AddUserForTeamQueryParams struct {
	// Defines fields to return.
	// Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.
	// The id of included objects will always be returned, regardless of the field options.
	OptFields []string `queryParam:"style=form,explode=false,name=opt_fields"`
	// Provides “pretty” output.
	// Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
	OptPretty *bool `queryParam:"style=form,explode=true,name=opt_pretty"`
}

// AddUserForTeamRequestBody - The user to add to the team.
type AddUserForTeamRequestBody struct {
	// A user identification object for specification with the addUser/removeUser endpoints.
	Data *shared.TeamAddUserRequest `json:"data,omitempty"`
}

type AddUserForTeamRequest struct {
	PathParams  AddUserForTeamPathParams
	QueryParams AddUserForTeamQueryParams
	// The user to add to the team.
	Request AddUserForTeamRequestBody `request:"mediaType=application/json"`
}

// AddUserForTeam200ApplicationJSON - Successfully added user to the team.
type AddUserForTeam200ApplicationJSON struct {
	Data *shared.TeamMembershipResponse `json:"data,omitempty"`
}

type AddUserForTeamResponse struct {
	ContentType string
	// This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// Successfully added user to the team.
	AddUserForTeam200ApplicationJSONObject *AddUserForTeam200ApplicationJSON
}
