// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type NodesContributorsCreatePathParams struct {
	// The unique identifier of the node.
	NodeID string `pathParam:"style=simple,explode=false,name=node_id"`
}

// NodesContributorsCreateContributorAttributesPermissionEnum - The permission level of the contributor. The default value is 'write'.
type NodesContributorsCreateContributorAttributesPermissionEnum string

const (
	NodesContributorsCreateContributorAttributesPermissionEnumRead  NodesContributorsCreateContributorAttributesPermissionEnum = "read"
	NodesContributorsCreateContributorAttributesPermissionEnumWrite NodesContributorsCreateContributorAttributesPermissionEnum = "write"
	NodesContributorsCreateContributorAttributesPermissionEnumAdmin NodesContributorsCreateContributorAttributesPermissionEnum = "admin"
)

func (e *NodesContributorsCreateContributorAttributesPermissionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		fallthrough
	case "write":
		fallthrough
	case "admin":
		*e = NodesContributorsCreateContributorAttributesPermissionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NodesContributorsCreateContributorAttributesPermissionEnum: %s", s)
	}
}

// NodesContributorsCreateContributorAttributesInput - The properties of the contributor entity.
type NodesContributorsCreateContributorAttributesInput struct {
	// Whether or not the contributor will be included in citations for the node. The default value is true.
	Bibliographic *bool `json:"bibliographic,omitempty"`
	// The position of this contributor in the list of project contributors and in project citations.
	Index *int64 `json:"index,omitempty"`
	// The permission level of the contributor. The default value is 'write'.
	Permission *NodesContributorsCreateContributorAttributesPermissionEnum `json:"permission,omitempty"`
}

// NodesContributorsCreateContributorRelationshipsInput - URLs to other entities or entity collections that have a relationship to the contributor entity.
type NodesContributorsCreateContributorRelationshipsInput struct {
	// A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
	User string `json:"user"`
}

type NodesContributorsCreateContributorInput struct {
	// The properties of the contributor entity.
	Attributes *NodesContributorsCreateContributorAttributesInput `json:"attributes,omitempty"`
	// URLs to other entities or entity collections that have a relationship to the contributor entity.
	Relationships NodesContributorsCreateContributorRelationshipsInput `json:"relationships"`
}

type NodesContributorsCreateRequest struct {
	PathParams NodesContributorsCreatePathParams
	Request    NodesContributorsCreateContributorInput `request:"mediaType=application/json"`
}

type NodesContributorsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
