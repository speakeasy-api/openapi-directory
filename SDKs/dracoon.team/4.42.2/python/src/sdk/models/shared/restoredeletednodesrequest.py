"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RestoreDeletedNodesRequestResolutionStrategyEnum(str, Enum):
    r"""Node conflict resolution strategy:
    
    * `autorename`
    
    * `overwrite`
    
    * `fail`
    """
    AUTORENAME = 'autorename'
    OVERWRITE = 'overwrite'
    FAIL = 'fail'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RestoreDeletedNodesRequest:
    r"""Request model for restoring deleted nodes"""
    
    deleted_node_ids: list[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deletedNodeIds') }})
    r"""List of deleted node IDs"""  
    keep_share_links: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keepShareLinks'), 'exclude': lambda f: f is None }})
    r"""Preserve Download Share Links and point them to the new node."""  
    parent_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentId'), 'exclude': lambda f: f is None }})
    r"""Node parent ID
    
    (default: previous parent ID)
    """  
    resolution_strategy: Optional[RestoreDeletedNodesRequestResolutionStrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolutionStrategy'), 'exclude': lambda f: f is None }})
    r"""Node conflict resolution strategy:
    
    * `autorename`
    
    * `overwrite`
    
    * `fail`
    """  
    