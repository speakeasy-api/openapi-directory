"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBodyDevices:
    
    device_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceId') }})
    r"""Import ID from the Import operation"""  
    network_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkId') }})
    r"""Network Id"""  
    udi: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('udi') }})
    r"""Device UDI certificate"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBody:
    
    devices: list[CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBodyDevices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devices') }})
    r"""A set of device imports to commit"""  
    

@dataclasses.dataclass
class CreateOrganizationInventoryOnboardingCloudMonitoringImportRequest:
    
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})  
    request_body: CreateOrganizationInventoryOnboardingCloudMonitoringImportRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateOrganizationInventoryOnboardingCloudMonitoringImport201ApplicationJSON:
    
    import_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('importId'), 'exclude': lambda f: f is None }})
    r"""Unique id associated with the import of the device"""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Response method"""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Cloud monitor import status"""  
    

@dataclasses.dataclass
class CreateOrganizationInventoryOnboardingCloudMonitoringImportResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_organization_inventory_onboarding_cloud_monitoring_import_201_application_json_objects: Optional[list[CreateOrganizationInventoryOnboardingCloudMonitoringImport201ApplicationJSON]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    