"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InvoiceAttachmentAPIModelTypeEnum(str, Enum):
    r"""Type of the link (Attached or external)"""
    EXTERNAL = 'External'
    UPLOADED = 'Uploaded'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InvoiceAttachmentAPIModel:
    
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""Id of invoice attachment"""  
    link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Link'), 'exclude': lambda f: f is None }})
    r"""Link to the file"""  
    obfuscated_file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ObfuscatedFileName'), 'exclude': lambda f: f is None }})
    r"""Hashed file name to avoid url wildguessing"""  
    original_file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OriginalFileName'), 'exclude': lambda f: f is None }})
    r"""Name of the file"""  
    size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Size'), 'exclude': lambda f: f is None }})
    r"""File size number in bytes"""  
    type: Optional[InvoiceAttachmentAPIModelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})
    r"""Type of the link (Attached or external)"""  
    