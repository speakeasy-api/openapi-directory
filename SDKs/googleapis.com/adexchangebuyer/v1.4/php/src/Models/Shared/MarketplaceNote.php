<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MarketplaceNote - A proposal is associated with a bunch of notes which may optionally be associated with a deal and/or revision number.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MarketplaceNote
{
    /**
     * The role of the person (buyer/seller) creating the note. (readonly)
     * 
     * @var ?string $creatorRole
     */
	#[\JMS\Serializer\Annotation\SerializedName('creatorRole')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creatorRole = null;
    
    /**
     * Notes can optionally be associated with a deal. (readonly, except on create)
     * 
     * @var ?string $dealId
     */
	#[\JMS\Serializer\Annotation\SerializedName('dealId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dealId = null;
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "adexchangebuyer#marketplaceNote".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The actual note to attach. (readonly, except on create)
     * 
     * @var ?string $note
     */
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * The unique id for the note. (readonly)
     * 
     * @var ?string $noteId
     */
	#[\JMS\Serializer\Annotation\SerializedName('noteId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $noteId = null;
    
    /**
     * The proposalId that a note is attached to. (readonly)
     * 
     * @var ?string $proposalId
     */
	#[\JMS\Serializer\Annotation\SerializedName('proposalId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $proposalId = null;
    
    /**
     * If the note is associated with a proposal revision number, then store that here. (readonly, except on create)
     * 
     * @var ?string $proposalRevisionNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('proposalRevisionNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $proposalRevisionNumber = null;
    
    /**
     * The timestamp (ms since epoch) that this note was created. (readonly)
     * 
     * @var ?string $timestampMs
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestampMs')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timestampMs = null;
    
	public function __construct()
	{
		$this->creatorRole = null;
		$this->dealId = null;
		$this->kind = null;
		$this->note = null;
		$this->noteId = null;
		$this->proposalId = null;
		$this->proposalRevisionNumber = null;
		$this->timestampMs = null;
	}
}
