// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LandlordPhotoModelPhotoTypeEnum - The photo type.
type LandlordPhotoModelPhotoTypeEnum string

const (
	LandlordPhotoModelPhotoTypeEnumPhoto       LandlordPhotoModelPhotoTypeEnum = "Photo"
	LandlordPhotoModelPhotoTypeEnumMap         LandlordPhotoModelPhotoTypeEnum = "Map"
	LandlordPhotoModelPhotoTypeEnumFloorPlan   LandlordPhotoModelPhotoTypeEnum = "FloorPlan"
	LandlordPhotoModelPhotoTypeEnumSiteMap     LandlordPhotoModelPhotoTypeEnum = "SiteMap"
	LandlordPhotoModelPhotoTypeEnumAerialPhoto LandlordPhotoModelPhotoTypeEnum = "AerialPhoto"
)

func (e *LandlordPhotoModelPhotoTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Photo":
		fallthrough
	case "Map":
		fallthrough
	case "FloorPlan":
		fallthrough
	case "SiteMap":
		fallthrough
	case "AerialPhoto":
		*e = LandlordPhotoModelPhotoTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LandlordPhotoModelPhotoTypeEnum: %s", s)
	}
}

// LandlordPhotoModel - Stores a photo related to a property structure.
type LandlordPhotoModel struct {
	// A unique identifier defining the object and change revision.
	ETag *string `json:"ETag,omitempty"`
	// The file name.
	FileName *string `json:"FileName,omitempty"`
	// The unique Object ID (OID).
	Oid *string `json:"OID,omitempty"`
	// The photo type.
	PhotoType *LandlordPhotoModelPhotoTypeEnum `json:"PhotoType,omitempty"`
}
