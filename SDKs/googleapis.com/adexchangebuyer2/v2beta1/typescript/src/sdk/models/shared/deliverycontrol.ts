/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FrequencyCap } from "./frequencycap";
import { Expose, Type } from "class-transformer";

/**
 * Output only. Specified the creative blocking levels to be applied.
 */
export enum DeliveryControlCreativeBlockingLevelEnum {
  CreativeBlockingLevelUnspecified = "CREATIVE_BLOCKING_LEVEL_UNSPECIFIED",
  PublisherBlockingRules = "PUBLISHER_BLOCKING_RULES",
  AdxPolicyBlockingOnly = "ADX_POLICY_BLOCKING_ONLY",
}

/**
 * Output only. Specifies how the impression delivery will be paced.
 */
export enum DeliveryControlDeliveryRateTypeEnum {
  DeliveryRateTypeUnspecified = "DELIVERY_RATE_TYPE_UNSPECIFIED",
  Evenly = "EVENLY",
  FrontLoaded = "FRONT_LOADED",
  AsFastAsPossible = "AS_FAST_AS_POSSIBLE",
}

/**
 * Message contains details about how the deals will be paced.
 */
export class DeliveryControl extends SpeakeasyBase {
  /**
   * Output only. Specified the creative blocking levels to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creativeBlockingLevel" })
  creativeBlockingLevel?: DeliveryControlCreativeBlockingLevelEnum;

  /**
   * Output only. Specifies how the impression delivery will be paced.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryRateType" })
  deliveryRateType?: DeliveryControlDeliveryRateTypeEnum;

  /**
   * Output only. Specifies any frequency caps.
   */
  @SpeakeasyMetadata({ elemType: FrequencyCap })
  @Expose({ name: "frequencyCaps" })
  @Type(() => FrequencyCap)
  frequencyCaps?: FrequencyCap[];
}
