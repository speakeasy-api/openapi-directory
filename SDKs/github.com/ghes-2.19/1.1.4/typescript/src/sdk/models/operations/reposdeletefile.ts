/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * object containing information about the author.
 */
export class ReposDeleteFileRequestBodyAuthor extends SpeakeasyBase {
  /**
   * The email of the author (or committer) of the commit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The name of the author (or committer) of the commit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * object containing information about the committer.
 */
export class ReposDeleteFileRequestBodyCommitter extends SpeakeasyBase {
  /**
   * The email of the author (or committer) of the commit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The name of the author (or committer) of the commit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class ReposDeleteFileRequestBody extends SpeakeasyBase {
  /**
   * object containing information about the author.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  @Type(() => ReposDeleteFileRequestBodyAuthor)
  author?: ReposDeleteFileRequestBodyAuthor;

  /**
   * The branch name. Default: the repositoryâ€™s default branch (usually `master`)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "branch" })
  branch?: string;

  /**
   * object containing information about the committer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committer" })
  @Type(() => ReposDeleteFileRequestBodyCommitter)
  committer?: ReposDeleteFileRequestBodyCommitter;

  /**
   * The commit message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * The blob SHA of the file being replaced.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sha" })
  sha: string;
}

export class ReposDeleteFileRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ReposDeleteFileRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * path parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=path",
  })
  path: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

/**
 * Service unavailable
 */
export class ReposDeleteFile503ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class ReposDeleteFileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Resource not found
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  fileCommit?: shared.FileCommit;

  /**
   * Service unavailable
   */
  @SpeakeasyMetadata()
  reposDeleteFile503ApplicationJSONObject?: ReposDeleteFile503ApplicationJSON;

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
