/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ReportTrips {
    /**
     * in knots
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("averageSpeed")
    public Double averageSpeed;

    public ReportTrips withAverageSpeed(Double averageSpeed) {
        this.averageSpeed = averageSpeed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceId")
    public Long deviceId;

    public ReportTrips withDeviceId(Long deviceId) {
        this.deviceId = deviceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceName")
    public String deviceName;

    public ReportTrips withDeviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }
    
    /**
     * in meters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distance")
    public Double distance;

    public ReportTrips withDistance(Double distance) {
        this.distance = distance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("driverName")
    public String driverName;

    public ReportTrips withDriverName(String driverName) {
        this.driverName = driverName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("driverUniqueId")
    public Long driverUniqueId;

    public ReportTrips withDriverUniqueId(Long driverUniqueId) {
        this.driverUniqueId = driverUniqueId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;

    public ReportTrips withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endAddress")
    public String endAddress;

    public ReportTrips withEndAddress(String endAddress) {
        this.endAddress = endAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endLat")
    public Double endLat;

    public ReportTrips withEndLat(Double endLat) {
        this.endLat = endLat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endLon")
    public Double endLon;

    public ReportTrips withEndLon(Double endLon) {
        this.endLon = endLon;
        return this;
    }
    
    /**
     * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;

    public ReportTrips withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * in knots
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxSpeed")
    public Double maxSpeed;

    public ReportTrips withMaxSpeed(Double maxSpeed) {
        this.maxSpeed = maxSpeed;
        return this;
    }
    
    /**
     * in liters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spentFuel")
    public Double spentFuel;

    public ReportTrips withSpentFuel(Double spentFuel) {
        this.spentFuel = spentFuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startAddress")
    public String startAddress;

    public ReportTrips withStartAddress(String startAddress) {
        this.startAddress = startAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startLat")
    public Double startLat;

    public ReportTrips withStartLat(Double startLat) {
        this.startLat = startLat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startLon")
    public Double startLon;

    public ReportTrips withStartLon(Double startLon) {
        this.startLon = startLon;
        return this;
    }
    
    /**
     * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;

    public ReportTrips withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    public ReportTrips(){}
}
