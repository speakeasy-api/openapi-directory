/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * APICounterV2Out - Detailed usage as reported by the deduplicating API counter.
 */
public class APICounterV2Out {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiKey")
    public APIKeyOut apiKey;
    public APICounterV2Out withApiKey(APIKeyOut apiKey) {
        this.apiKey = apiKey;
        return this;
    }
    
    /**
     * The apiService corresponds to the classifier name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiService")
    public String apiService;
    public APICounterV2Out withApiService(String apiService) {
        this.apiService = apiService;
        return this;
    }
    
    /**
     * The create datetime of the counter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdDateTime")
    public Long createdDateTime;
    public APICounterV2Out withCreatedDateTime(Long createdDateTime) {
        this.createdDateTime = createdDateTime;
        return this;
    }
    
    /**
     * The processing hostAddress.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostAddress")
    public String hostAddress;
    public APICounterV2Out withHostAddress(String hostAddress) {
        this.hostAddress = hostAddress;
        return this;
    }
    
    /**
     * The flush datetime of the counter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastFlushedDateTime")
    public Long lastFlushedDateTime;
    public APICounterV2Out withLastFlushedDateTime(Long lastFlushedDateTime) {
        this.lastFlushedDateTime = lastFlushedDateTime;
        return this;
    }
    
    /**
     * The last usage datetime of the counter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastUsedDateTime")
    public Long lastUsedDateTime;
    public APICounterV2Out withLastUsedDateTime(Long lastUsedDateTime) {
        this.lastUsedDateTime = lastUsedDateTime;
        return this;
    }
    
    /**
     * Usage of special features, such as Chinese, Japanese.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceFeaturesUsage")
    public java.util.Map<String, Long> serviceFeaturesUsage;
    public APICounterV2Out withServiceFeaturesUsage(java.util.Map<String, Long> serviceFeaturesUsage) {
        this.serviceFeaturesUsage = serviceFeaturesUsage;
        return this;
    }
    
    /**
     * The usage of the counter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalUsage")
    public Long totalUsage;
    public APICounterV2Out withTotalUsage(Long totalUsage) {
        this.totalUsage = totalUsage;
        return this;
    }
    
}
