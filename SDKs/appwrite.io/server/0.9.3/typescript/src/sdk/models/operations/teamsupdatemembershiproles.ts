/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class TeamsUpdateMembershipRolesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-JWT",
  })
  jwt: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Key",
  })
  key: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Project",
  })
  project: string;
}

export class TeamsUpdateMembershipRolesRequestBody extends SpeakeasyBase {
  /**
   * Array of strings. Use this param to set the user roles in the team. A role can be any string. Learn more about [roles and permissions](/docs/permissions). Max length for each role is 32 chars.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roles" })
  roles: string[];
}

export class TeamsUpdateMembershipRolesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: TeamsUpdateMembershipRolesRequestBody;

  /**
   * Membership ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=membershipId",
  })
  membershipId: string;

  /**
   * Team unique ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=teamId",
  })
  teamId: string;
}

export class TeamsUpdateMembershipRolesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Membership
   */
  @SpeakeasyMetadata()
  membership?: shared.Membership;
}
