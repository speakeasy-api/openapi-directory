// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type APISubInformationsPathParams struct {
	// Id of the API section
	SectionID string `pathParam:"style=simple,explode=false,name=sectionId"`
}

type APISubInformationsRequest struct {
	PathParams APISubInformationsPathParams
}

// APISubInformations200ApplicationJSONActionEnum - The id of the action
type APISubInformations200ApplicationJSONActionEnum string

const (
	APISubInformations200ApplicationJSONActionEnumAPISubInformations APISubInformations200ApplicationJSONActionEnum = "apiSubInformations"
)

func (e *APISubInformations200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "apiSubInformations":
		*e = APISubInformations200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for APISubInformations200ApplicationJSONActionEnum: %s", s)
	}
}

type APISubInformations200ApplicationJSONData struct {
	AvailableVersions []shared.APIVersions `json:"availableVersions"`
	// Link to Rudder API description
	Documentation string                  `json:"documentation"`
	Endpoints     [][]shared.APIEndpoints `json:"endpoints"`
}

// APISubInformations200ApplicationJSONResultEnum - Result of the request
type APISubInformations200ApplicationJSONResultEnum string

const (
	APISubInformations200ApplicationJSONResultEnumSuccess APISubInformations200ApplicationJSONResultEnum = "success"
	APISubInformations200ApplicationJSONResultEnumError   APISubInformations200ApplicationJSONResultEnum = "error"
)

func (e *APISubInformations200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = APISubInformations200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for APISubInformations200ApplicationJSONResultEnum: %s", s)
	}
}

// APISubInformations200ApplicationJSON - Endpoint information
type APISubInformations200ApplicationJSON struct {
	// The id of the action
	Action APISubInformations200ApplicationJSONActionEnum `json:"action"`
	Data   APISubInformations200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result APISubInformations200ApplicationJSONResultEnum `json:"result"`
}

type APISubInformationsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Endpoint information
	APISubInformations200ApplicationJSONObject *APISubInformations200ApplicationJSON
}
