// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum - The direction for the route table announcement.
type DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum string

const (
	DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnumOutgoing DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum = "outgoing"
	DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnumIncoming DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum = "incoming"
)

func (e DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum) ToPointer() *DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum {
	return &e
}

func (e *DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "outgoing":
		fallthrough
	case "incoming":
		*e = DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum: %v", v)
	}
}

// DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum - The state of the transit gateway announcement.
type DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum string

const (
	DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnumAvailable DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum = "available"
	DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnumPending   DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum = "pending"
	DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnumFailing   DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum = "failing"
	DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnumFailed    DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum = "failed"
	DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnumDeleting  DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum = "deleting"
	DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnumDeleted   DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum = "deleted"
)

func (e DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum) ToPointer() *DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum {
	return &e
}

func (e *DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "available":
		fallthrough
	case "pending":
		fallthrough
	case "failing":
		fallthrough
	case "failed":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum: %v", v)
	}
}

// DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsTags - Describes a tag.
type DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsTags struct {
	Key   *string
	Value *string
}

// DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncements - Describes a transit gateway route table announcement.
type DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncements struct {
	AnnouncementDirection                  *DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum
	CoreNetworkID                          *string
	CreationTime                           *time.Time
	PeerCoreNetworkID                      *string
	PeerTransitGatewayID                   *string
	PeeringAttachmentID                    *string
	State                                  *DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum
	Tags                                   []DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsTags
	TransitGatewayID                       *string
	TransitGatewayRouteTableAnnouncementID *string
	TransitGatewayRouteTableID             *string
}

// DescribeTransitGatewayRouteTableAnnouncementsResult - Success
type DescribeTransitGatewayRouteTableAnnouncementsResult struct {
	NextToken                             *string
	TransitGatewayRouteTableAnnouncements []DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncements
}
