"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowcxv3conversationturn as shared_googleclouddialogflowcxv3conversationturn
from ..shared import googleclouddialogflowcxv3testcaseresult as shared_googleclouddialogflowcxv3testcaseresult
from ..shared import googleclouddialogflowcxv3testconfig as shared_googleclouddialogflowcxv3testconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3TestCase:
    r"""Represents a test case."""
    
    creation_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationTime'), 'exclude': lambda f: f is None }})
    r"""Output only. When the test was created."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters."""  
    last_test_result: Optional[shared_googleclouddialogflowcxv3testcaseresult.GoogleCloudDialogflowCxV3TestCaseResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastTestResult'), 'exclude': lambda f: f is None }})
    r"""Represents a result from running a test case in an agent environment."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Additional freeform notes about the test case. Limit of 400 characters."""  
    tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    r"""Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \\"#\\" and has a limit of 30 characters."""  
    test_case_conversation_turns: Optional[list[shared_googleclouddialogflowcxv3conversationturn.GoogleCloudDialogflowCxV3ConversationTurn]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testCaseConversationTurns'), 'exclude': lambda f: f is None }})
    r"""The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly."""  
    test_config: Optional[shared_googleclouddialogflowcxv3testconfig.GoogleCloudDialogflowCxV3TestConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testConfig'), 'exclude': lambda f: f is None }})
    r"""Represents configurations for a test case."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3TestCaseInput:
    r"""Represents a test case."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters."""  
    last_test_result: Optional[shared_googleclouddialogflowcxv3testcaseresult.GoogleCloudDialogflowCxV3TestCaseResultInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastTestResult'), 'exclude': lambda f: f is None }})
    r"""Represents a result from running a test case in an agent environment."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Additional freeform notes about the test case. Limit of 400 characters."""  
    tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    r"""Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with \\"#\\" and has a limit of 30 characters."""  
    test_case_conversation_turns: Optional[list[shared_googleclouddialogflowcxv3conversationturn.GoogleCloudDialogflowCxV3ConversationTurnInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testCaseConversationTurns'), 'exclude': lambda f: f is None }})
    r"""The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly."""  
    test_config: Optional[shared_googleclouddialogflowcxv3testconfig.GoogleCloudDialogflowCxV3TestConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testConfig'), 'exclude': lambda f: f is None }})
    r"""Represents configurations for a test case."""  
    