"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import s3datadistribution_enum as shared_s3datadistribution_enum
from ..shared import s3datatype_enum as shared_s3datatype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class S3DataSource:
    r"""Describes the S3 data source."""
    
    s3_data_type: shared_s3datatype_enum.S3DataTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3DataType') }})  
    s3_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Uri') }})  
    attribute_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttributeNames'), 'exclude': lambda f: f is None }})  
    instance_group_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceGroupNames'), 'exclude': lambda f: f is None }})  
    s3_data_distribution_type: Optional[shared_s3datadistribution_enum.S3DataDistributionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3DataDistributionType'), 'exclude': lambda f: f is None }})  
    