/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CommitComment - Commit Comment
 */
public class CommitComment {
    /**
     * How the author is associated with the repository.
     */
    @JsonProperty("author_association")
    public AuthorAssociationEnum authorAssociation;
    public CommitComment withAuthorAssociation(AuthorAssociationEnum authorAssociation) {
        this.authorAssociation = authorAssociation;
        return this;
    }
    
    @JsonProperty("body")
    public String body;
    public CommitComment withBody(String body) {
        this.body = body;
        return this;
    }
    
    @JsonProperty("commit_id")
    public String commitId;
    public CommitComment withCommitId(String commitId) {
        this.commitId = commitId;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public CommitComment withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;
    public CommitComment withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;
    public CommitComment withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("line")
    public Long line;
    public CommitComment withLine(Long line) {
        this.line = line;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;
    public CommitComment withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    @JsonProperty("path")
    public String path;
    public CommitComment withPath(String path) {
        this.path = path;
        return this;
    }
    
    @JsonProperty("position")
    public Long position;
    public CommitComment withPosition(Long position) {
        this.position = position;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reactions")
    public ReactionRollup reactions;
    public CommitComment withReactions(ReactionRollup reactions) {
        this.reactions = reactions;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public CommitComment withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("url")
    public String url;
    public CommitComment withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * A GitHub user.
     */
    @JsonProperty("user")
    public NullableSimpleUser user;
    public CommitComment withUser(NullableSimpleUser user) {
        this.user = user;
        return this;
    }
    
}
