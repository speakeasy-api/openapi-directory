// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContributorInsightsStatusEnum string

const (
	ContributorInsightsStatusEnumEnabling  ContributorInsightsStatusEnum = "ENABLING"
	ContributorInsightsStatusEnumEnabled   ContributorInsightsStatusEnum = "ENABLED"
	ContributorInsightsStatusEnumDisabling ContributorInsightsStatusEnum = "DISABLING"
	ContributorInsightsStatusEnumDisabled  ContributorInsightsStatusEnum = "DISABLED"
	ContributorInsightsStatusEnumFailed    ContributorInsightsStatusEnum = "FAILED"
)

func (e ContributorInsightsStatusEnum) ToPointer() *ContributorInsightsStatusEnum {
	return &e
}

func (e *ContributorInsightsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLING":
		fallthrough
	case "ENABLED":
		fallthrough
	case "DISABLING":
		fallthrough
	case "DISABLED":
		fallthrough
	case "FAILED":
		*e = ContributorInsightsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContributorInsightsStatusEnum: %v", v)
	}
}
