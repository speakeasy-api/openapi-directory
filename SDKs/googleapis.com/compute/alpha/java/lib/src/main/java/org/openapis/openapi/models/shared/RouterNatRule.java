/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RouterNatRule {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public RouterNatRuleAction action;

    public RouterNatRule withAction(RouterNatRuleAction action) {
        this.action = action;
        return this;
    }
    
    /**
     * An optional description of this rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public RouterNatRule withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * CEL expression that specifies the match condition that egress traffic from a VM is evaluated against. If it evaluates to true, the corresponding `action` is enforced. The following examples are valid match expressions for public NAT: "inIpRange(destination.ip, '1.1.0.0/16') || inIpRange(destination.ip, '2.2.0.0/16')" "destination.ip == '1.1.0.1' || destination.ip == '8.8.8.8'" The following example is a valid match expression for private NAT: "nexthop.hub == 'https://networkconnectivity.googleapis.com/v1alpha1/projects/my-project/global/hub/hub-1'"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("match")
    public String match;

    public RouterNatRule withMatch(String match) {
        this.match = match;
        return this;
    }
    
    /**
     * An integer uniquely identifying a rule in the list. The rule number must be a positive value between 0 and 65000, and must be unique among rules within a NAT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleNumber")
    public Long ruleNumber;

    public RouterNatRule withRuleNumber(Long ruleNumber) {
        this.ruleNumber = ruleNumber;
        return this;
    }
    
    public RouterNatRule(){}
}
