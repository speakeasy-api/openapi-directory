/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AgentStatusEnum } from "./agentstatusenum";
import { ComponentTypeEnum } from "./componenttypeenum";
import { Expose } from "class-transformer";

/**
 * Data on the status of agent components.
 */
export class ComponentStatusData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bytesReceived" })
  bytesReceived?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "bytesSent" })
  bytesSent?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "capabilityArn" })
  capabilityArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "componentType" })
  componentType: ComponentTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "dataflowId" })
  dataflowId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "packetsDropped" })
  packetsDropped?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: AgentStatusEnum;
}
