/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class GetInvestmentProductSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

/**
 * Investment Product Category Id
 */
export enum GetInvestmentProductCategoryIDEnum {
  Funds = "funds",
}

export class GetInvestmentProductRequest extends SpeakeasyBase {
  /**
   * Investment Product Category Id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=category_id",
  })
  categoryId: GetInvestmentProductCategoryIDEnum;

  /**
   * Investment Product Id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=investment_product_id",
  })
  investmentProductId: string;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class GetInvestmentProduct500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class GetInvestmentProduct429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The specified resource was not found
 */
export class GetInvestmentProduct404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class GetInvestmentProduct403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class GetInvestmentProduct401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export enum GetInvestmentProduct200ApplicationJSONApplicableFinancialProductsEnum {
  Gia = "gia",
  Isa = "isa",
}

/**
 * Category of the investment product
 */
export enum GetInvestmentProduct200ApplicationJSONAssetTypeEnum {
  Funds = "funds",
}

/**
 * The type of id that is populated as investment_product_id
 */
export enum GetInvestmentProduct200ApplicationJSONIdTypeEnum {
  Isin = "ISIN",
  Cusip = "CUSIP",
  FundServID = "FundServID",
}

/**
 * Status of the investment product
 */
export enum GetInvestmentProduct200ApplicationJSONStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

/**
 * success
 */
export class GetInvestmentProduct200ApplicationJSON extends SpeakeasyBase {
  /**
   * Supplies additional custom information of an investment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additional_provider_details" })
  additionalProviderDetails: Record<string, any>;

  /**
   * Financial products this investment product is applicable for
   */
  @SpeakeasyMetadata()
  @Expose({ name: "applicable_financial_products" })
  applicableFinancialProducts?: GetInvestmentProduct200ApplicationJSONApplicableFinancialProductsEnum[];

  /**
   * Sub-category of the investment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "asset_sub_type" })
  assetSubType?: string;

  /**
   * Category of the investment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "asset_type" })
  assetType: GetInvestmentProduct200ApplicationJSONAssetTypeEnum;

  /**
   * The final price for the day of the investment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "close_price" })
  closePrice?: string;

  /**
   * Exact day the close_price was recorded for the investment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "close_price_on_date" })
  closePriceOnDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * currency of the investment product in ISO 4217 format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Sub-type of investment product. Relevant for investment products of type fund only
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fund_asset_type" })
  fundAssetType?: string;

  /**
   * Fund code identifier. Relevant for investment products of type fund
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fund_code" })
  fundCode?: string;

  /**
   * The type of id that is populated as investment_product_id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_type" })
  idType: GetInvestmentProduct200ApplicationJSONIdTypeEnum;

  /**
   * Unique identifier of an investment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * Investment product name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Method used to calculate the investment product price
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pricing_method" })
  pricingMethod: string;

  /**
   * settlement date offset of investment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "settlement_date_offset" })
  settlementDateOffset?: number;

  /**
   * Status of the investment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetInvestmentProduct200ApplicationJSONStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

export class GetInvestmentProductResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  getInvestmentProduct200ApplicationJSONObject?: GetInvestmentProduct200ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  getInvestmentProduct401ApplicationJSONObject?: GetInvestmentProduct401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  getInvestmentProduct403ApplicationJSONObject?: GetInvestmentProduct403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  getInvestmentProduct404ApplicationJSONObject?: GetInvestmentProduct404ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  getInvestmentProduct429ApplicationJSONObject?: GetInvestmentProduct429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  getInvestmentProduct500ApplicationJSONObject?: GetInvestmentProduct500ApplicationJSON;
}
