/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GaData - Analytics data for a given view (profile).
 */
public class GaData {
    /**
     * Column headers that list dimension names followed by the metric names. The order of dimensions and metrics is same as specified in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("columnHeaders")
    public GaDataColumnHeaders[] columnHeaders;

    public GaData withColumnHeaders(GaDataColumnHeaders[] columnHeaders) {
        this.columnHeaders = columnHeaders;
        return this;
    }
    
    /**
     * Determines if Analytics data contains samples.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containsSampledData")
    public Boolean containsSampledData;

    public GaData withContainsSampledData(Boolean containsSampledData) {
        this.containsSampledData = containsSampledData;
        return this;
    }
    
    /**
     * The last refreshed time in seconds for Analytics data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataLastRefreshed")
    public String dataLastRefreshed;

    public GaData withDataLastRefreshed(String dataLastRefreshed) {
        this.dataLastRefreshed = dataLastRefreshed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataTable")
    public GaDataDataTable dataTable;

    public GaData withDataTable(GaDataDataTable dataTable) {
        this.dataTable = dataTable;
        return this;
    }
    
    /**
     * Unique ID for this data response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public GaData withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The maximum number of rows the response can contain, regardless of the actual number of rows returned. Its value ranges from 1 to 10,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemsPerPage")
    public Integer itemsPerPage;

    public GaData withItemsPerPage(Integer itemsPerPage) {
        this.itemsPerPage = itemsPerPage;
        return this;
    }
    
    /**
     * Resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public GaData withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Link to next page for this Analytics data query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextLink")
    public String nextLink;

    public GaData withNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }
    
    /**
     * Link to previous page for this Analytics data query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previousLink")
    public String previousLink;

    public GaData withPreviousLink(String previousLink) {
        this.previousLink = previousLink;
        return this;
    }
    
    /**
     * Information for the view (profile), for which the Analytics data was requested.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profileInfo")
    public GaDataProfileInfo profileInfo;

    public GaData withProfileInfo(GaDataProfileInfo profileInfo) {
        this.profileInfo = profileInfo;
        return this;
    }
    
    /**
     * Analytics data request query parameters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query")
    public GaDataQuery query;

    public GaData withQuery(GaDataQuery query) {
        this.query = query;
        return this;
    }
    
    /**
     * Analytics data rows, where each row contains a list of dimension values followed by the metric values. The order of dimensions and metrics is same as specified in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public String[][] rows;

    public GaData withRows(String[][] rows) {
        this.rows = rows;
        return this;
    }
    
    /**
     * The number of samples used to calculate the result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sampleSize")
    public String sampleSize;

    public GaData withSampleSize(String sampleSize) {
        this.sampleSize = sampleSize;
        return this;
    }
    
    /**
     * Total size of the sample space from which the samples were selected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sampleSpace")
    public String sampleSpace;

    public GaData withSampleSpace(String sampleSpace) {
        this.sampleSpace = sampleSpace;
        return this;
    }
    
    /**
     * Link to this page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public GaData withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The total number of rows for the query, regardless of the number of rows in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalResults")
    public Integer totalResults;

    public GaData withTotalResults(Integer totalResults) {
        this.totalResults = totalResults;
        return this;
    }
    
    /**
     * Total values for the requested metrics over all the results, not just the results returned in this response. The order of the metric totals is same as the metric order specified in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalsForAllResults")
    public java.util.Map<String, String> totalsForAllResults;

    public GaData withTotalsForAllResults(java.util.Map<String, String> totalsForAllResults) {
        this.totalsForAllResults = totalsForAllResults;
        return this;
    }
    
    public GaData(){}
}
