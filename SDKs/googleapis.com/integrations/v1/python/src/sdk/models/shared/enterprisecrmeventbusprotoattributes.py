"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmeventbusprotologsettings as shared_enterprisecrmeventbusprotologsettings
from ..shared import enterprisecrmeventbusprotovaluetype as shared_enterprisecrmeventbusprotovaluetype
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EnterpriseCrmEventbusProtoAttributesDataTypeEnum(str, Enum):
    r"""Things like URL, Email, Currency, Timestamp (rather than string, int64...)"""
    DATA_TYPE_UNSPECIFIED = 'DATA_TYPE_UNSPECIFIED'
    EMAIL = 'EMAIL'
    URL = 'URL'
    CURRENCY = 'CURRENCY'
    TIMESTAMP = 'TIMESTAMP'
    DOMAIN_NAME = 'DOMAIN_NAME'

class EnterpriseCrmEventbusProtoAttributesSearchableEnum(str, Enum):
    UNSPECIFIED = 'UNSPECIFIED'
    YES = 'YES'
    NO = 'NO'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmEventbusProtoAttributes:
    r"""Attributes are additional options that can be associated with each event property. For more information, see"""
    
    data_type: Optional[EnterpriseCrmEventbusProtoAttributesDataTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataType'), 'exclude': lambda f: f is None }})
    r"""Things like URL, Email, Currency, Timestamp (rather than string, int64...)"""  
    default_value: Optional[shared_enterprisecrmeventbusprotovaluetype.EnterpriseCrmEventbusProtoValueType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultValue'), 'exclude': lambda f: f is None }})
    r"""Used for define type for values. Currently supported value types include int, string, double, array, and any proto message."""  
    is_required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isRequired'), 'exclude': lambda f: f is None }})
    r"""Required for event execution. The validation will be done by the event bus when the event is triggered."""  
    is_searchable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSearchable'), 'exclude': lambda f: f is None }})
    r"""Used to indicate if a ParameterEntry should be converted to ParamIndexes for ST-Spanner full-text search. DEPRECATED: use searchable."""  
    log_settings: Optional[shared_enterprisecrmeventbusprotologsettings.EnterpriseCrmEventbusProtoLogSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logSettings'), 'exclude': lambda f: f is None }})
    r"""The LogSettings define the logging attributes for an event property. These attributes are used to map the property to the parameter in the log proto. Also used to define scrubbing/truncation behavior and PII information."""  
    searchable: Optional[EnterpriseCrmEventbusProtoAttributesSearchableEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchable'), 'exclude': lambda f: f is None }})  
    task_visibility: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskVisibility'), 'exclude': lambda f: f is None }})
    r"""List of tasks that can view this property, if empty then all."""  
    