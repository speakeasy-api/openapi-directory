/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProjectParameterDetails } from "./projectparameterdetails";
import { Expose, Transform, Type } from "class-transformer";

export class ProjectsRow extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bbox" })
  bbox?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "countries" })
  countries?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "entity" })
  entity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstUpdated: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "isAnalysis" })
  isAnalysis?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isMobile" })
  isMobile?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "locationIds" })
  locationIds: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "locations" })
  locations: number;

  @SpeakeasyMetadata()
  @Expose({ name: "measurements" })
  measurements: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: ProjectParameterDetails })
  @Expose({ name: "parameters" })
  @Type(() => ProjectParameterDetails)
  parameters: ProjectParameterDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "sensorType" })
  sensorType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sources" })
  sources?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "subtitle" })
  subtitle: string;
}
