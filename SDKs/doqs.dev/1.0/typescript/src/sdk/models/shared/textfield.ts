/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BoundingBox } from "./boundingbox";
import { Expose, Type } from "class-transformer";

/**
 * An enumeration.
 */
export enum TextFieldFontEnum {
  Courier = "courier",
  Helvetica = "helvetica",
  TimesRoman = "times_roman",
}

/**
 * An enumeration.
 */
export enum TextFieldHorizontalAlignEnum {
  L = "L",
  C = "C",
  R = "R",
}

export enum TextFieldTypeEnum {
  Text = "text",
}

/**
 * An enumeration.
 */
export enum TextFieldVerticalAlignEnum {
  T = "T",
  C = "C",
  B = "B",
}

export class TextField extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bbox" })
  @Type(() => BoundingBox)
  bbox: BoundingBox;

  @SpeakeasyMetadata()
  @Expose({ name: "cell_count" })
  cellCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "cell_offset" })
  cellOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "cells" })
  cells?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  color?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "font" })
  font?: TextFieldFontEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "font_size" })
  fontSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "h_align" })
  hAlign?: TextFieldHorizontalAlignEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page: number;

  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TextFieldTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "v_align" })
  vAlign?: TextFieldVerticalAlignEnum;
}
