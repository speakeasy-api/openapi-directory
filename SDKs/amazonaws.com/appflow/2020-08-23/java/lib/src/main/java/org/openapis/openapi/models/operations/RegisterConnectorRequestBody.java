/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RegisterConnectorRequestBody {
    /**
     * &lt;p&gt;The &lt;code&gt;clientToken&lt;/code&gt; parameter is an idempotency token. It ensures that your &lt;code&gt;RegisterConnector&lt;/code&gt; request completes only once. You choose the value to pass. For example, if you don't receive a response from your request, you can safely retry the request with the same &lt;code&gt;clientToken&lt;/code&gt; parameter value.&lt;/p&gt; &lt;p&gt;If you omit a &lt;code&gt;clientToken&lt;/code&gt; value, the Amazon Web Services SDK that you are using inserts a value for you. This way, the SDK can safely retry requests multiple times after a network error. You must provide your own value for other use cases.&lt;/p&gt; &lt;p&gt;If you specify input parameters that differ from your first request, an error occurs. If you use a different value for &lt;code&gt;clientToken&lt;/code&gt;, Amazon AppFlow considers it a new call to &lt;code&gt;RegisterConnector&lt;/code&gt;. The token is active for 8 hours.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;

    public RegisterConnectorRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     *  The name of the connector. The name is unique for each &lt;code&gt;ConnectorRegistration&lt;/code&gt; in your Amazon Web Services account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorLabel")
    public String connectorLabel;

    public RegisterConnectorRequestBody withConnectorLabel(String connectorLabel) {
        this.connectorLabel = connectorLabel;
        return this;
    }
    
    /**
     * Contains information about the configuration of the connector being registered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorProvisioningConfig")
    public RegisterConnectorRequestBodyConnectorProvisioningConfig connectorProvisioningConfig;

    public RegisterConnectorRequestBody withConnectorProvisioningConfig(RegisterConnectorRequestBodyConnectorProvisioningConfig connectorProvisioningConfig) {
        this.connectorProvisioningConfig = connectorProvisioningConfig;
        return this;
    }
    
    /**
     * The type of provisioning that the connector supports, such as Lambda.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorProvisioningType")
    public RegisterConnectorRequestBodyConnectorProvisioningTypeEnum connectorProvisioningType;

    public RegisterConnectorRequestBody withConnectorProvisioningType(RegisterConnectorRequestBodyConnectorProvisioningTypeEnum connectorProvisioningType) {
        this.connectorProvisioningType = connectorProvisioningType;
        return this;
    }
    
    /**
     * A description about the connector that's being registered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public RegisterConnectorRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    public RegisterConnectorRequestBody(){}
}
