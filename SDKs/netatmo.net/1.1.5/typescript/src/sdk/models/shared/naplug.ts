/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NAPlace } from "./naplace";
import { NAThermostat } from "./nathermostat";
import { NAYearMonth } from "./nayearmonth";
import { Expose, Type } from "class-transformer";

export class NAPlug extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_bilan" })
  @Type(() => NAYearMonth)
  lastBilan?: NAYearMonth;

  @SpeakeasyMetadata()
  @Expose({ name: "last_plug_seen" })
  lastPlugSeen?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_status_store" })
  lastStatusStore?: number;

  @SpeakeasyMetadata({ elemType: NAThermostat })
  @Expose({ name: "modules" })
  @Type(() => NAThermostat)
  modules?: NAThermostat[];

  @SpeakeasyMetadata()
  @Expose({ name: "place" })
  @Type(() => NAPlace)
  place?: NAPlace;

  @SpeakeasyMetadata()
  @Expose({ name: "plug_connected_boiler" })
  plugConnectedBoiler?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "station_name" })
  stationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "syncing" })
  syncing?: boolean;

  /**
   * Included in every device or module. It defines the type of the device/module. Its values are among :
   *
   * @remarks
   * NAMain : for the base station
   * NAModule1 : for the outdoor module
   * NAModule4 : for the additionnal indoor module
   * NAModule3 : for the rain gauge module
   * NAPlug : for the thermostat relay/plug
   * NATherm1 : for the thermostat module
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "udp_conn" })
  udpConn?: boolean;

  /**
   * It contains the current wifi status. The different thresholds to take into account are
   *
   * @remarks
   * RSSI_THRESHOLD_0 = 86 bad signal
   * RSSI_THRESHOLD_1 = 71 middle quality signal
   * RSSI_THRESHOLD_2 = 56 good signal
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wifi_status" })
  wifiStatus?: number;
}
