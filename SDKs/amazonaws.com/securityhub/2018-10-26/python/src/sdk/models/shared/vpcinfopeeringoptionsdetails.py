"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VpcInfoPeeringOptionsDetails:
    r"""Provides information about the VPC peering connection options for the accepter or requester VPC."""
    
    allow_dns_resolution_from_remote_vpc: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowDnsResolutionFromRemoteVpc'), 'exclude': lambda f: f is None }})  
    allow_egress_from_local_classic_link_to_remote_vpc: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowEgressFromLocalClassicLinkToRemoteVpc'), 'exclude': lambda f: f is None }})  
    allow_egress_from_local_vpc_to_remote_classic_link: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllowEgressFromLocalVpcToRemoteClassicLink'), 'exclude': lambda f: f is None }})  
    