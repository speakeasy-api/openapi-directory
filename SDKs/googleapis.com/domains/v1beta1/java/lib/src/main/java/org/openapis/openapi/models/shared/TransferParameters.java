/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransferParameters - Parameters required to transfer a domain from another registrar.
 */
public class TransferParameters {
    /**
     * The registrar that currently manages the domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentRegistrar")
    public String currentRegistrar;

    public TransferParameters withCurrentRegistrar(String currentRegistrar) {
        this.currentRegistrar = currentRegistrar;
        return this;
    }
    
    /**
     * The URL of the registrar that currently manages the domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentRegistrarUri")
    public String currentRegistrarUri;

    public TransferParameters withCurrentRegistrarUri(String currentRegistrarUri) {
        this.currentRegistrarUri = currentRegistrarUri;
        return this;
    }
    
    /**
     * The domain name. Unicode domain names are expressed in Punycode format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainName")
    public String domainName;

    public TransferParameters withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    
    /**
     * The name servers that currently store the configuration of the domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nameServers")
    public String[] nameServers;

    public TransferParameters withNameServers(String[] nameServers) {
        this.nameServers = nameServers;
        return this;
    }
    
    /**
     * Contact privacy options that the domain supports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedPrivacy")
    public TransferParametersSupportedPrivacyEnum[] supportedPrivacy;

    public TransferParameters withSupportedPrivacy(TransferParametersSupportedPrivacyEnum[] supportedPrivacy) {
        this.supportedPrivacy = supportedPrivacy;
        return this;
    }
    
    /**
     * Indicates whether the domain is protected by a transfer lock. For a transfer to succeed, this must show `UNLOCKED`. To unlock a domain, go to its current registrar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferLockState")
    public TransferParametersTransferLockStateEnum transferLockState;

    public TransferParameters withTransferLockState(TransferParametersTransferLockStateEnum transferLockState) {
        this.transferLockState = transferLockState;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("yearlyPrice")
    public Money yearlyPrice;

    public TransferParameters withYearlyPrice(Money yearlyPrice) {
        this.yearlyPrice = yearlyPrice;
        return this;
    }
    
    public TransferParameters(){}
}
