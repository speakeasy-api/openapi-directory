/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Page - Successful response
 */
public class Page {
    /**
     * The author of this Page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public PageAuthor author;
    public Page withAuthor(PageAuthor author) {
        this.author = author;
        return this;
    }
    
    /**
     * Data about the blog containing this Page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blog")
    public PageBlog blog;
    public Page withBlog(PageBlog blog) {
        this.blog = blog;
        return this;
    }
    
    /**
     * The body content of this Page, in HTML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;
    public Page withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * Etag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Page withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The identifier for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Page withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The kind of this entity. Always blogger#page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Page withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * RFC 3339 date-time when this Page was published.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("published")
    public String published;
    public Page withPublished(String published) {
        this.published = published;
        return this;
    }
    
    /**
     * The API REST URL to fetch this resource from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public Page withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The status of the page for admin resources (either LIVE or DRAFT).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PageStatusEnum status;
    public Page withStatus(PageStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The title of this entity. This is the name displayed in the Admin user interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public Page withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * RFC 3339 date-time when this Page was trashed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trashed")
    public String trashed;
    public Page withTrashed(String trashed) {
        this.trashed = trashed;
        return this;
    }
    
    /**
     * RFC 3339 date-time when this Page was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated")
    public String updated;
    public Page withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    /**
     * The URL that this Page is displayed at.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public Page withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
