"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import valuesdata as shared_valuesdata
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class ValuesInPastMultipleGetRequest:
    
    end_date: datetime = dataclasses.field(metadata={'query_param': { 'field_name': 'endDate', 'style': 'form', 'explode': True }})
    r"""The date when the last value should start"""  
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The ID of the device"""  
    interval: int = dataclasses.field(metadata={'query_param': { 'field_name': 'interval', 'style': 'form', 'explode': True }})
    r"""The interval in minutes betwenn the values. 0 means as fast as possible. Only 1000 values can be get in one call."""  
    start_date: datetime = dataclasses.field(metadata={'query_param': { 'field_name': 'startDate', 'style': 'form', 'explode': True }})
    r"""The date when the first value should start"""  
    

@dataclasses.dataclass
class ValuesInPastMultipleGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    values_data: Optional[list[shared_valuesdata.ValuesData]] = dataclasses.field(default=None)
    r"""OK"""  
    