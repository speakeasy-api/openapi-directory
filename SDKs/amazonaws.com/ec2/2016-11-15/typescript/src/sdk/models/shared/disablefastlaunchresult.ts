/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The launch template that was used to launch Windows instances from pre-provisioned snapshots.
 */
export class DisableFastLaunchResultLaunchTemplate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  launchTemplateId?: string;

  @SpeakeasyMetadata()
  launchTemplateName?: string;

  @SpeakeasyMetadata()
  version?: string;
}

/**
 * The pre-provisioning resource type that must be cleaned after turning off faster launching for the Windows AMI. Supported values include: <code>snapshot</code>.
 */
export enum DisableFastLaunchResultResourceTypeEnum {
  Snapshot = "snapshot",
}

/**
 * Parameters that were used for faster launching for the Windows AMI before faster launching was turned off. This informs the clean-up process.
 */
export class DisableFastLaunchResultSnapshotConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  targetResourceCount?: number;
}

/**
 * The current state of faster launching for the specified Windows AMI.
 */
export enum DisableFastLaunchResultStateEnum {
  Enabling = "enabling",
  EnablingFailed = "enabling-failed",
  Enabled = "enabled",
  EnabledFailed = "enabled-failed",
  Disabling = "disabling",
  DisablingFailed = "disabling-failed",
}

/**
 * Success
 */
export class DisableFastLaunchResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  imageId?: string;

  @SpeakeasyMetadata()
  launchTemplate?: DisableFastLaunchResultLaunchTemplate;

  @SpeakeasyMetadata()
  maxParallelLaunches?: number;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata()
  resourceType?: DisableFastLaunchResultResourceTypeEnum;

  @SpeakeasyMetadata()
  snapshotConfiguration?: DisableFastLaunchResultSnapshotConfiguration;

  @SpeakeasyMetadata()
  state?: DisableFastLaunchResultStateEnum;

  @SpeakeasyMetadata()
  stateTransitionReason?: string;

  @SpeakeasyMetadata()
  stateTransitionTime?: Date;
}
