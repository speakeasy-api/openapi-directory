// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum
type GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum string

const (
	GetAggregateConfigRuleComplianceSummaryXAmzTargetEnumStarlingDoveServiceGetAggregateConfigRuleComplianceSummary GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum = "StarlingDoveService.GetAggregateConfigRuleComplianceSummary"
)

func (e GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum) ToPointer() *GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum {
	return &e
}

func (e *GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StarlingDoveService.GetAggregateConfigRuleComplianceSummary":
		*e = GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum: %v", v)
	}
}

type GetAggregateConfigRuleComplianceSummaryRequest struct {
	GetAggregateConfigRuleComplianceSummaryRequest shared.GetAggregateConfigRuleComplianceSummaryRequest `request:"mediaType=application/json"`
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=Limit"`
	// Pagination token
	NextToken         *string                                               `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetAggregateConfigRuleComplianceSummaryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetAggregateConfigRuleComplianceSummaryResponse struct {
	ContentType string
	// Success
	GetAggregateConfigRuleComplianceSummaryResponse *shared.GetAggregateConfigRuleComplianceSummaryResponse
	// InvalidLimitException
	InvalidLimitException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// NoSuchConfigurationAggregatorException
	NoSuchConfigurationAggregatorException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
	// ValidationException
	ValidationException interface{}
}
