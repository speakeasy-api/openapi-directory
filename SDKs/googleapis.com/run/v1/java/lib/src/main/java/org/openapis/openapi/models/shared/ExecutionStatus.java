/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExecutionStatus - ExecutionStatus represents the current state of an Execution.
 */
public class ExecutionStatus {
    /**
     * Optional. The number of tasks which reached phase Cancelled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancelledCount")
    public Integer cancelledCount;
    public ExecutionStatus withCancelledCount(Integer cancelledCount) {
        this.cancelledCount = cancelledCount;
        return this;
    }
    
    /**
     * Optional. Represents the time that the execution was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completionTime")
    public String completionTime;
    public ExecutionStatus withCompletionTime(String completionTime) {
        this.completionTime = completionTime;
        return this;
    }
    
    /**
     * Optional. Conditions communicate information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. Execution-specific conditions include: * `ResourcesAvailable`: `True` when underlying resources have been provisioned. * `Started`: `True` when the execution has started to execute. * `Completed`: `True` when the execution has succeeded. `False` when the execution has failed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public GoogleCloudRunV1Condition[] conditions;
    public ExecutionStatus withConditions(GoogleCloudRunV1Condition[] conditions) {
        this.conditions = conditions;
        return this;
    }
    
    /**
     * Optional. The number of tasks which reached phase Failed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failedCount")
    public Integer failedCount;
    public ExecutionStatus withFailedCount(Integer failedCount) {
        this.failedCount = failedCount;
        return this;
    }
    
    /**
     * Optional. URI where logs for this execution can be found in Cloud Console.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logUri")
    public String logUri;
    public ExecutionStatus withLogUri(String logUri) {
        this.logUri = logUri;
        return this;
    }
    
    /**
     * Optional. The 'generation' of the execution that was last processed by the controller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("observedGeneration")
    public Integer observedGeneration;
    public ExecutionStatus withObservedGeneration(Integer observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }
    
    /**
     * Optional. The number of tasks which have retried at least once.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retriedCount")
    public Integer retriedCount;
    public ExecutionStatus withRetriedCount(Integer retriedCount) {
        this.retriedCount = retriedCount;
        return this;
    }
    
    /**
     * Optional. The number of actively running tasks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runningCount")
    public Integer runningCount;
    public ExecutionStatus withRunningCount(Integer runningCount) {
        this.runningCount = runningCount;
        return this;
    }
    
    /**
     * Optional. Represents the time that the execution started to run. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;
    public ExecutionStatus withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Optional. The number of tasks which reached phase Succeeded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("succeededCount")
    public Integer succeededCount;
    public ExecutionStatus withSucceededCount(Integer succeededCount) {
        this.succeededCount = succeededCount;
        return this;
    }
    
}
