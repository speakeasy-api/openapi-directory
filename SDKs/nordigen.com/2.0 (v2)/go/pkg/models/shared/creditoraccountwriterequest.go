// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreditorAccountWriteRequestTypeEnum - Creditor account type
type CreditorAccountWriteRequestTypeEnum string

const (
	CreditorAccountWriteRequestTypeEnumIban CreditorAccountWriteRequestTypeEnum = "IBAN"
	CreditorAccountWriteRequestTypeEnumScan CreditorAccountWriteRequestTypeEnum = "SCAN"
)

func (e *CreditorAccountWriteRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IBAN":
		fallthrough
	case "SCAN":
		*e = CreditorAccountWriteRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreditorAccountWriteRequestTypeEnum: %s", s)
	}
}

// CreditorAccountWriteRequest - Creditor account write serializer.
type CreditorAccountWriteRequest struct {
	// Creditor account type identifier
	Account        string                  `json:"account"`
	AddressCountry *AddressCountryEnumEnum `json:"address_country,omitempty"`
	// Creditor account address street
	AddressStreet *string `json:"address_street,omitempty"`
	// Creditor account BICFI Identifier
	Agent *string `json:"agent,omitempty"`
	// Creditor account agent name
	AgentName *string `json:"agent_name,omitempty"`
	// Creditor account currency
	Currency string `json:"currency"`
	// an Institution ID for this CreditorAccount
	InstitutionID *string `json:"institution_id,omitempty"`
	// Creditor account name
	Name string `json:"name"`
	// Creditor account address post code
	PostCode *string `json:"post_code,omitempty"`
	// Creditor account type
	Type *CreditorAccountWriteRequestTypeEnum `json:"type,omitempty"`
}
