/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TableListTables {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clustering")
    public Clustering clustering;

    public TableListTables withClustering(Clustering clustering) {
        this.clustering = clustering;
        return this;
    }
    
    /**
     * The time when this table was created, in milliseconds since the epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;

    public TableListTables withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * [Optional] The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationTime")
    public String expirationTime;

    public TableListTables withExpirationTime(String expirationTime) {
        this.expirationTime = expirationTime;
        return this;
    }
    
    /**
     * The user-friendly name for this table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendlyName")
    public String friendlyName;

    public TableListTables withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * An opaque ID of the table
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public TableListTables withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public TableListTables withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The labels associated with this table. You can use these to organize and group your tables.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public TableListTables withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rangePartitioning")
    public RangePartitioning rangePartitioning;

    public TableListTables withRangePartitioning(RangePartitioning rangePartitioning) {
        this.rangePartitioning = rangePartitioning;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableReference")
    public TableReference tableReference;

    public TableListTables withTableReference(TableReference tableReference) {
        this.tableReference = tableReference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timePartitioning")
    public TimePartitioning timePartitioning;

    public TableListTables withTimePartitioning(TimePartitioning timePartitioning) {
        this.timePartitioning = timePartitioning;
        return this;
    }
    
    /**
     * The type of table. Possible values are: TABLE, VIEW.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public TableListTables withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Additional details for a view.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("view")
    public TableListTablesView view;

    public TableListTables withView(TableListTablesView view) {
        this.view = view;
        return this;
    }
    
    public TableListTables(){}
}
