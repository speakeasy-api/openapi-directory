/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Location - A resource that represents a Google Cloud location.
 */
public class Location {
    /**
     * The friendly name for this location, typically a nearby city name. For example, "Tokyo".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Location withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Location withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Resource ID for the region. For example: "us-east1".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationId")
    public String locationId;

    public Location withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by Compute Engine. These keys can be specified in `location_id` or `alternative_location_id` fields when creating a Redis instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, Object> metadata;

    public Location withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Full resource name for the region. For example: "projects/example-project/locations/us-east1".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Location withName(String name) {
        this.name = name;
        return this;
    }
    
    public Location(){}
}
