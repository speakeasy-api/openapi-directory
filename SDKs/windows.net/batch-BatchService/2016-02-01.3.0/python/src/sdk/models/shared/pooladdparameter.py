"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import applicationpackagereference as shared_applicationpackagereference
from ..shared import certificatereference as shared_certificatereference
from ..shared import cloudserviceconfiguration as shared_cloudserviceconfiguration
from ..shared import metadataitem as shared_metadataitem
from ..shared import starttask as shared_starttask
from ..shared import taskschedulingpolicy as shared_taskschedulingpolicy
from ..shared import virtualmachineconfiguration as shared_virtualmachineconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PoolAddParameter:
    r"""A pool in the Azure Batch service to add."""
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""A string that uniquely identifies the pool within the account. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters."""  
    vm_size: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmSize') }})
    r"""The size of virtual machines in the pool. All virtual machines in a pool are the same size."""  
    application_package_references: Optional[list[shared_applicationpackagereference.ApplicationPackageReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationPackageReferences'), 'exclude': lambda f: f is None }})
    r"""The list of application packages to be installed on each compute node in the pool."""  
    auto_scale_evaluation_interval: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoScaleEvaluationInterval'), 'exclude': lambda f: f is None }})
    r"""A time interval for the desired autoscale evaluation period in the pool."""  
    auto_scale_formula: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoScaleFormula'), 'exclude': lambda f: f is None }})
    r"""A formula for the desired number of compute nodes in the pool."""  
    certificate_references: Optional[list[shared_certificatereference.CertificateReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateReferences'), 'exclude': lambda f: f is None }})
    r"""The list of certificates to be installed on each compute node in the pool."""  
    cloud_service_configuration: Optional[shared_cloudserviceconfiguration.CloudServiceConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudServiceConfiguration'), 'exclude': lambda f: f is None }})
    r"""The configuration for nodes in a pool based on the Azure Cloud Services platform."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The display name for the pool."""  
    enable_auto_scale: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableAutoScale'), 'exclude': lambda f: f is None }})
    r"""Whether the pool size should automatically adjust over time. If true, the AutoScaleFormula property must be set. If false, the TargetDedicated property must be set."""  
    enable_inter_node_communication: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableInterNodeCommunication'), 'exclude': lambda f: f is None }})
    r"""Whether the pool permits direct communication between nodes."""  
    max_tasks_per_node: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxTasksPerNode'), 'exclude': lambda f: f is None }})
    r"""The maximum number of tasks that can run concurrently on a single compute node in the pool."""  
    metadata: Optional[list[shared_metadataitem.MetadataItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""A list of name-value pairs associated with the pool as metadata."""  
    resize_timeout: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resizeTimeout'), 'exclude': lambda f: f is None }})
    r"""The timeout for allocation of compute nodes to the pool. In a Get Pool operation, this is the timeout for the most recent resize operation. The default value is 10 minutes."""  
    start_task: Optional[shared_starttask.StartTask] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTask'), 'exclude': lambda f: f is None }})
    r"""A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged."""  
    target_dedicated: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetDedicated'), 'exclude': lambda f: f is None }})
    r"""The desired number of compute nodes in the pool. This property must have the default value if EnableAutoScale is true. It is required if EnableAutoScale is false."""  
    task_scheduling_policy: Optional[shared_taskschedulingpolicy.TaskSchedulingPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskSchedulingPolicy'), 'exclude': lambda f: f is None }})
    r"""Specifies how tasks should be distributed across compute nodes."""  
    virtual_machine_configuration: Optional[shared_virtualmachineconfiguration.VirtualMachineConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtualMachineConfiguration'), 'exclude': lambda f: f is None }})
    r"""The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure."""  
    