"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AggregationInfoAggregationIntervalEnum(str, Enum):
    AGGREGATION_INTERVAL_UNSPECIFIED = 'AGGREGATION_INTERVAL_UNSPECIFIED'
    DAILY = 'DAILY'
    MONTHLY = 'MONTHLY'

class AggregationInfoAggregationLevelEnum(str, Enum):
    AGGREGATION_LEVEL_UNSPECIFIED = 'AGGREGATION_LEVEL_UNSPECIFIED'
    ACCOUNT = 'ACCOUNT'
    PROJECT = 'PROJECT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AggregationInfo:
    r"""Represents the aggregation level and interval for pricing of a single SKU."""
    
    aggregation_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregationCount'), 'exclude': lambda f: f is None }})
    r"""The number of intervals to aggregate over. Example: If aggregation_level is \\"DAILY\\" and aggregation_count is 14, aggregation will be over 14 days."""  
    aggregation_interval: Optional[AggregationInfoAggregationIntervalEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregationInterval'), 'exclude': lambda f: f is None }})  
    aggregation_level: Optional[AggregationInfoAggregationLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregationLevel'), 'exclude': lambda f: f is None }})  
    