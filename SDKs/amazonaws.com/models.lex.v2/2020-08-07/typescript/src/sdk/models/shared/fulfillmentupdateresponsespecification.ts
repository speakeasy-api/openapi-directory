/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MessageGroup } from "./messagegroup";
import { Expose, Type } from "class-transformer";

/**
 * Provides settings for a message that is sent periodically to the user while a fulfillment Lambda function is running.
 */
export class FulfillmentUpdateResponseSpecification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowInterrupt" })
  allowInterrupt?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "frequencyInSeconds" })
  frequencyInSeconds: number;

  @SpeakeasyMetadata({ elemType: MessageGroup })
  @Expose({ name: "messageGroups" })
  @Type(() => MessageGroup)
  messageGroups: MessageGroup[];
}
