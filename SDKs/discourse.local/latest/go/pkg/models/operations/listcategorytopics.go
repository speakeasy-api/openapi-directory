// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListCategoryTopicsPathParams struct {
	ID   int64  `pathParam:"style=simple,explode=false,name=id"`
	Slug string `pathParam:"style=simple,explode=false,name=slug"`
}

type ListCategoryTopicsRequest struct {
	PathParams ListCategoryTopicsPathParams
}

type ListCategoryTopics200ApplicationJSONTopicListTopicsPosters struct {
	Description    string `json:"description"`
	Extras         string `json:"extras"`
	PrimaryGroupID string `json:"primary_group_id"`
	UserID         int64  `json:"user_id"`
}

type ListCategoryTopics200ApplicationJSONTopicListTopics struct {
	Archetype          string                                                       `json:"archetype"`
	Archived           bool                                                         `json:"archived"`
	Bookmarked         string                                                       `json:"bookmarked"`
	Bumped             bool                                                         `json:"bumped"`
	BumpedAt           string                                                       `json:"bumped_at"`
	CategoryID         int64                                                        `json:"category_id"`
	Closed             bool                                                         `json:"closed"`
	CreatedAt          string                                                       `json:"created_at"`
	Excerpt            string                                                       `json:"excerpt"`
	FancyTitle         string                                                       `json:"fancy_title"`
	FeaturedLink       string                                                       `json:"featured_link"`
	HasSummary         bool                                                         `json:"has_summary"`
	HighestPostNumber  int64                                                        `json:"highest_post_number"`
	ID                 int64                                                        `json:"id"`
	ImageURL           string                                                       `json:"image_url"`
	LastPostedAt       string                                                       `json:"last_posted_at"`
	LastPosterUsername string                                                       `json:"last_poster_username"`
	LikeCount          int64                                                        `json:"like_count"`
	Liked              string                                                       `json:"liked"`
	Pinned             bool                                                         `json:"pinned"`
	PinnedGlobally     bool                                                         `json:"pinned_globally"`
	Posters            []ListCategoryTopics200ApplicationJSONTopicListTopicsPosters `json:"posters"`
	PostsCount         int64                                                        `json:"posts_count"`
	ReplyCount         int64                                                        `json:"reply_count"`
	Slug               string                                                       `json:"slug"`
	Title              string                                                       `json:"title"`
	Unpinned           string                                                       `json:"unpinned"`
	Unseen             bool                                                         `json:"unseen"`
	Views              int64                                                        `json:"views"`
	Visible            bool                                                         `json:"visible"`
}

type ListCategoryTopics200ApplicationJSONTopicList struct {
	CanCreateTopic bool                                                  `json:"can_create_topic"`
	PerPage        int64                                                 `json:"per_page"`
	TopTags        []interface{}                                         `json:"top_tags,omitempty"`
	Topics         []ListCategoryTopics200ApplicationJSONTopicListTopics `json:"topics"`
}

type ListCategoryTopics200ApplicationJSONUsers struct {
	AvatarTemplate string `json:"avatar_template"`
	ID             int64  `json:"id"`
	Name           string `json:"name"`
	Username       string `json:"username"`
}

// ListCategoryTopics200ApplicationJSON - success response
type ListCategoryTopics200ApplicationJSON struct {
	PrimaryGroups []interface{}                                 `json:"primary_groups,omitempty"`
	TopicList     ListCategoryTopics200ApplicationJSONTopicList `json:"topic_list"`
	Users         []ListCategoryTopics200ApplicationJSONUsers   `json:"users,omitempty"`
}

type ListCategoryTopicsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success response
	ListCategoryTopics200ApplicationJSONObject *ListCategoryTopics200ApplicationJSON
}
