// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VolumeRestoreStateEnum - Output only. The current state of this VolumeRestore.
type VolumeRestoreStateEnum string

const (
	VolumeRestoreStateEnumStateUnspecified VolumeRestoreStateEnum = "STATE_UNSPECIFIED"
	VolumeRestoreStateEnumCreating         VolumeRestoreStateEnum = "CREATING"
	VolumeRestoreStateEnumRestoring        VolumeRestoreStateEnum = "RESTORING"
	VolumeRestoreStateEnumSucceeded        VolumeRestoreStateEnum = "SUCCEEDED"
	VolumeRestoreStateEnumFailed           VolumeRestoreStateEnum = "FAILED"
	VolumeRestoreStateEnumDeleting         VolumeRestoreStateEnum = "DELETING"
)

func (e *VolumeRestoreStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "RESTORING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		*e = VolumeRestoreStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VolumeRestoreStateEnum: %s", s)
	}
}

// VolumeRestoreVolumeTypeEnum - Output only. The type of volume provisioned
type VolumeRestoreVolumeTypeEnum string

const (
	VolumeRestoreVolumeTypeEnumVolumeTypeUnspecified VolumeRestoreVolumeTypeEnum = "VOLUME_TYPE_UNSPECIFIED"
	VolumeRestoreVolumeTypeEnumGcePersistentDisk     VolumeRestoreVolumeTypeEnum = "GCE_PERSISTENT_DISK"
)

func (e *VolumeRestoreVolumeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VOLUME_TYPE_UNSPECIFIED":
		fallthrough
	case "GCE_PERSISTENT_DISK":
		*e = VolumeRestoreVolumeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VolumeRestoreVolumeTypeEnum: %s", s)
	}
}

// VolumeRestore - Represents the operation of restoring a volume from a VolumeBackup. Next id: 13
type VolumeRestore struct {
	// Output only. The timestamp when the associated underlying volume restoration completed.
	CompleteTime *string `json:"completeTime,omitempty"`
	// Output only. The timestamp when this VolumeRestore resource was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume restore updates in order to avoid race conditions.
	Etag *string `json:"etag,omitempty"`
	// Output only. Full name of the VolumeRestore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`
	Name *string `json:"name,omitempty"`
	// Output only. The current state of this VolumeRestore.
	State *VolumeRestoreStateEnum `json:"state,omitempty"`
	// Output only. A human readable message explaining why the VolumeRestore is in its current state.
	StateMessage *string `json:"stateMessage,omitempty"`
	// A reference to a namespaced resource in Kubernetes.
	TargetPvc *NamespacedName `json:"targetPvc,omitempty"`
	// Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
	UID *string `json:"uid,omitempty"`
	// Output only. The timestamp when this VolumeRestore resource was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Output only. The full name of the VolumeBackup from which the volume will be restored. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`.
	VolumeBackup *string `json:"volumeBackup,omitempty"`
	// Output only. A storage system-specific opaque handler to the underlying volume created for the target PVC from the volume backup.
	VolumeHandle *string `json:"volumeHandle,omitempty"`
	// Output only. The type of volume provisioned
	VolumeType *VolumeRestoreVolumeTypeEnum `json:"volumeType,omitempty"`
}
