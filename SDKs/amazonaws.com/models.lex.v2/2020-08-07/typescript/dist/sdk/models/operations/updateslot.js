"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateSlotResponse = exports.UpdateSlotRequest = exports.UpdateSlotRequestBody = exports.UpdateSlotRequestBodyValueElicitationSetting = exports.UpdateSlotRequestBodySubSlotSetting = exports.UpdateSlotRequestBodyObfuscationSetting = exports.UpdateSlotRequestBodyMultipleValuesSetting = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * Indicates whether a slot can return multiple values.
 */
var UpdateSlotRequestBodyMultipleValuesSetting = /** @class */ (function (_super) {
    __extends(UpdateSlotRequestBodyMultipleValuesSetting, _super);
    function UpdateSlotRequestBodyMultipleValuesSetting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowMultipleValues" }),
        __metadata("design:type", Boolean)
    ], UpdateSlotRequestBodyMultipleValuesSetting.prototype, "allowMultipleValues", void 0);
    return UpdateSlotRequestBodyMultipleValuesSetting;
}(utils_1.SpeakeasyBase));
exports.UpdateSlotRequestBodyMultipleValuesSetting = UpdateSlotRequestBodyMultipleValuesSetting;
/**
 * Determines whether Amazon Lex obscures slot values in conversation logs.
 */
var UpdateSlotRequestBodyObfuscationSetting = /** @class */ (function (_super) {
    __extends(UpdateSlotRequestBodyObfuscationSetting, _super);
    function UpdateSlotRequestBodyObfuscationSetting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "obfuscationSettingType" }),
        __metadata("design:type", String)
    ], UpdateSlotRequestBodyObfuscationSetting.prototype, "obfuscationSettingType", void 0);
    return UpdateSlotRequestBodyObfuscationSetting;
}(utils_1.SpeakeasyBase));
exports.UpdateSlotRequestBodyObfuscationSetting = UpdateSlotRequestBodyObfuscationSetting;
/**
 * Specifications for the constituent sub slots and the expression for the composite slot.
 */
var UpdateSlotRequestBodySubSlotSetting = /** @class */ (function (_super) {
    __extends(UpdateSlotRequestBodySubSlotSetting, _super);
    function UpdateSlotRequestBodySubSlotSetting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expression" }),
        __metadata("design:type", String)
    ], UpdateSlotRequestBodySubSlotSetting.prototype, "expression", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.Specifications }),
        (0, class_transformer_1.Expose)({ name: "slotSpecifications" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], shared.Specifications);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], UpdateSlotRequestBodySubSlotSetting.prototype, "slotSpecifications", void 0);
    return UpdateSlotRequestBodySubSlotSetting;
}(utils_1.SpeakeasyBase));
exports.UpdateSlotRequestBodySubSlotSetting = UpdateSlotRequestBodySubSlotSetting;
/**
 * Specifies the elicitation setting details for constituent sub slots of a composite slot.
 */
var UpdateSlotRequestBodyValueElicitationSetting = /** @class */ (function (_super) {
    __extends(UpdateSlotRequestBodyValueElicitationSetting, _super);
    function UpdateSlotRequestBodyValueElicitationSetting() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultValueSpecification" }),
        (0, class_transformer_1.Type)(function () { return shared.SlotDefaultValueSpecification; }),
        __metadata("design:type", shared.SlotDefaultValueSpecification)
    ], UpdateSlotRequestBodyValueElicitationSetting.prototype, "defaultValueSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "promptSpecification" }),
        (0, class_transformer_1.Type)(function () { return shared.PromptSpecification; }),
        __metadata("design:type", shared.PromptSpecification)
    ], UpdateSlotRequestBodyValueElicitationSetting.prototype, "promptSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.SampleUtterance }),
        (0, class_transformer_1.Expose)({ name: "sampleUtterances" }),
        (0, class_transformer_1.Type)(function () { return shared.SampleUtterance; }),
        __metadata("design:type", Array)
    ], UpdateSlotRequestBodyValueElicitationSetting.prototype, "sampleUtterances", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "slotCaptureSetting" }),
        (0, class_transformer_1.Type)(function () { return shared.SlotCaptureSetting; }),
        __metadata("design:type", shared.SlotCaptureSetting)
    ], UpdateSlotRequestBodyValueElicitationSetting.prototype, "slotCaptureSetting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "slotConstraint" }),
        __metadata("design:type", String)
    ], UpdateSlotRequestBodyValueElicitationSetting.prototype, "slotConstraint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "waitAndContinueSpecification" }),
        (0, class_transformer_1.Type)(function () { return shared.WaitAndContinueSpecification; }),
        __metadata("design:type", shared.WaitAndContinueSpecification)
    ], UpdateSlotRequestBodyValueElicitationSetting.prototype, "waitAndContinueSpecification", void 0);
    return UpdateSlotRequestBodyValueElicitationSetting;
}(utils_1.SpeakeasyBase));
exports.UpdateSlotRequestBodyValueElicitationSetting = UpdateSlotRequestBodyValueElicitationSetting;
var UpdateSlotRequestBody = /** @class */ (function (_super) {
    __extends(UpdateSlotRequestBody, _super);
    function UpdateSlotRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], UpdateSlotRequestBody.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "multipleValuesSetting" }),
        (0, class_transformer_1.Type)(function () { return UpdateSlotRequestBodyMultipleValuesSetting; }),
        __metadata("design:type", UpdateSlotRequestBodyMultipleValuesSetting)
    ], UpdateSlotRequestBody.prototype, "multipleValuesSetting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "obfuscationSetting" }),
        (0, class_transformer_1.Type)(function () { return UpdateSlotRequestBodyObfuscationSetting; }),
        __metadata("design:type", UpdateSlotRequestBodyObfuscationSetting)
    ], UpdateSlotRequestBody.prototype, "obfuscationSetting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "slotName" }),
        __metadata("design:type", String)
    ], UpdateSlotRequestBody.prototype, "slotName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "slotTypeId" }),
        __metadata("design:type", String)
    ], UpdateSlotRequestBody.prototype, "slotTypeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subSlotSetting" }),
        (0, class_transformer_1.Type)(function () { return UpdateSlotRequestBodySubSlotSetting; }),
        __metadata("design:type", UpdateSlotRequestBodySubSlotSetting)
    ], UpdateSlotRequestBody.prototype, "subSlotSetting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "valueElicitationSetting" }),
        (0, class_transformer_1.Type)(function () { return UpdateSlotRequestBodyValueElicitationSetting; }),
        __metadata("design:type", UpdateSlotRequestBodyValueElicitationSetting)
    ], UpdateSlotRequestBody.prototype, "valueElicitationSetting", void 0);
    return UpdateSlotRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateSlotRequestBody = UpdateSlotRequestBody;
var UpdateSlotRequest = /** @class */ (function (_super) {
    __extends(UpdateSlotRequest, _super);
    function UpdateSlotRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateSlotRequestBody)
    ], UpdateSlotRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "xAmzSignedHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=botId",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "botId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=botVersion",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "botVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=intentId",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "intentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=localeId",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "localeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=slotId",
        }),
        __metadata("design:type", String)
    ], UpdateSlotRequest.prototype, "slotId", void 0);
    return UpdateSlotRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateSlotRequest = UpdateSlotRequest;
var UpdateSlotResponse = /** @class */ (function (_super) {
    __extends(UpdateSlotResponse, _super);
    function UpdateSlotResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateSlotResponse.prototype, "conflictException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateSlotResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateSlotResponse.prototype, "internalServerException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateSlotResponse.prototype, "preconditionFailedException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateSlotResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateSlotResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateSlotResponse.prototype, "serviceQuotaExceededException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateSlotResponse.prototype, "throttlingException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.UpdateSlotResponse)
    ], UpdateSlotResponse.prototype, "updateSlotResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateSlotResponse.prototype, "validationException", void 0);
    return UpdateSlotResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateSlotResponse = UpdateSlotResponse;
