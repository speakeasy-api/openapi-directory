// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExtensionDataRelatedEntityTypeEnum - The type of the entity to add this extensions to
type ExtensionDataRelatedEntityTypeEnum string

const (
	ExtensionDataRelatedEntityTypeEnumEvent      ExtensionDataRelatedEntityTypeEnum = "event"
	ExtensionDataRelatedEntityTypeEnumVenue      ExtensionDataRelatedEntityTypeEnum = "venue"
	ExtensionDataRelatedEntityTypeEnumAttraction ExtensionDataRelatedEntityTypeEnum = "attraction"
)

func (e ExtensionDataRelatedEntityTypeEnum) ToPointer() *ExtensionDataRelatedEntityTypeEnum {
	return &e
}

func (e *ExtensionDataRelatedEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "event":
		fallthrough
	case "venue":
		fallthrough
	case "attraction":
		*e = ExtensionDataRelatedEntityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExtensionDataRelatedEntityTypeEnum: %v", v)
	}
}

// ExtensionData - This class defines an extenstion data on the Publish API
type ExtensionData struct {
	// The actual information to add to the entity
	Data map[string]interface{} `json:"data"`
	// Id of the entity to add this extionsion to. If the relatedEntityId is Null, a relatedEntitySource MUST be provided
	RelatedEntityID *string `json:"relatedEntityId,omitempty"`
	// Source
	RelatedEntitySource *Source `json:"relatedEntitySource,omitempty"`
	// The type of the entity to add this extensions to
	RelatedEntityType ExtensionDataRelatedEntityTypeEnum `json:"relatedEntityType"`
	// Source of the extension, where it came from
	Source string `json:"source"`
	// The type of the extension. This represent the data sent
	Type string `json:"type"`
	// Version of the extensions. Version is to prevent to override an extension with an older one
	VersionNumber *int64 `json:"versionNumber,omitempty"`
}
