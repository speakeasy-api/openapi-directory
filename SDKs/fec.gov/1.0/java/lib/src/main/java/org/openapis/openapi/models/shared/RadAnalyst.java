/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class RadAnalyst {
    /**
     * ID of RAD analyst.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analyst_id")
    public Double analystId;

    public RadAnalyst withAnalystId(Double analystId) {
        this.analystId = analystId;
        return this;
    }
    
    /**
     * Short ID of RAD analyst.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analyst_short_id")
    public Double analystShortId;

    public RadAnalyst withAnalystShortId(Double analystShortId) {
        this.analystShortId = analystShortId;
        return this;
    }
    
    /**
     * Date of most recent RAD analyst assignment change
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("assignment_update_date")
    public LocalDate assignmentUpdateDate;

    public RadAnalyst withAssignmentUpdateDate(LocalDate assignmentUpdateDate) {
        this.assignmentUpdateDate = assignmentUpdateDate;
        return this;
    }
    
    /**
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     */
    @JsonProperty("committee_id")
    public String committeeId;

    public RadAnalyst withCommitteeId(String committeeId) {
        this.committeeId = committeeId;
        return this;
    }
    
    /**
     * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_name")
    public String committeeName;

    public RadAnalyst withCommitteeName(String committeeName) {
        this.committeeName = committeeName;
        return this;
    }
    
    /**
     * Email of RAD analyst
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public RadAnalyst withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Fist name of RAD analyst
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    public String firstName;

    public RadAnalyst withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Last name of RAD analyst
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    public String lastName;

    public RadAnalyst withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Branch of RAD analyst
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rad_branch")
    public String radBranch;

    public RadAnalyst withRadBranch(String radBranch) {
        this.radBranch = radBranch;
        return this;
    }
    
    /**
     * Telephone extension of RAD analyst
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("telephone_ext")
    public Double telephoneExt;

    public RadAnalyst withTelephoneExt(Double telephoneExt) {
        this.telephoneExt = telephoneExt;
        return this;
    }
    
    /**
     * Title of RAD analyst
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public RadAnalyst withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public RadAnalyst(@JsonProperty("committee_id") String committeeId) {
        this.committeeId = committeeId;
  }
}
