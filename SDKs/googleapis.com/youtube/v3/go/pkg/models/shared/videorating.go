// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoRatingRatingEnum - Rating of a video.
type VideoRatingRatingEnum string

const (
	VideoRatingRatingEnumNone    VideoRatingRatingEnum = "none"
	VideoRatingRatingEnumLike    VideoRatingRatingEnum = "like"
	VideoRatingRatingEnumDislike VideoRatingRatingEnum = "dislike"
)

func (e *VideoRatingRatingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "like":
		fallthrough
	case "dislike":
		*e = VideoRatingRatingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoRatingRatingEnum: %s", s)
	}
}

// VideoRating - Basic details about rating of a video.
type VideoRating struct {
	// Rating of a video.
	Rating *VideoRatingRatingEnum `json:"rating,omitempty"`
	// The ID that YouTube uses to uniquely identify the video.
	VideoID *string `json:"videoId,omitempty"`
}
