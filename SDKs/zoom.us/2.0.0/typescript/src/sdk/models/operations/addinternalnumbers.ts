/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
 */
export enum AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum {
  EnGB = "en-GB",
  EnUS = "en-US",
  DEDE = "de-DE",
}

/**
 * Type of phone number. <br>
 *
 * @remarks
 * The value can be one of the following:<br>
 * * `0` : toll <br>
 * * `1` : tollfree
 */
export enum AddInternalNumbersApplicationJSONInternalNumbersTypeEnum {
  Zero = "0",
  One = "1",
}

export class AddInternalNumbersApplicationJSONInternalNumbers extends SpeakeasyBase {
  /**
   * Control whether the number can be used to attend 3rd party meetings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_for_external_meetings" })
  allowForExternalMeetings?: boolean;

  /**
   * Specify whether this number can be used by users to join a meeting or not. <br>
   *
   * @remarks
   * * `true` : This number can be used to join a meeting. <br>
   * *  `false`: This number can not be used to join a meeting.
   *
   * Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_join" })
  allowJoin?: boolean;

  /**
   * Two letter country code of the country.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  /**
   * Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_number" })
  displayNumber: string;

  /**
   * A short description for the phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels: string;

  /**
   * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languages" })
  languages: AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum;

  /**
   * Phone number in E164 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: string;

  /**
   * Type of phone number. <br>
   *
   * @remarks
   * The value can be one of the following:<br>
   * * `0` : toll <br>
   * * `1` : tollfree
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AddInternalNumbersApplicationJSONInternalNumbersTypeEnum;

  /**
   * Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
   *
   * @remarks
   * * `true`: Make the number visible. <br>
   * * `false`: Hide the number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visible" })
  visible?: boolean;
}

export class AddInternalNumbersApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: AddInternalNumbersApplicationJSONInternalNumbers,
  })
  @Expose({ name: "internal_numbers" })
  @Type(() => AddInternalNumbersApplicationJSONInternalNumbers)
  internalNumbers?: AddInternalNumbersApplicationJSONInternalNumbers[];
}

export class AddInternalNumbersRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: AddInternalNumbersApplicationJSON;

  /**
   * Unique identifier of the account.<br>To add internal numbers to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add internal numbers to a master account, provide `me` as the value of the `accountId` path parameter.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=accountId",
  })
  accountId: string;
}

/**
 * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
 */
export enum AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum {
  EnGB = "en-GB",
  EnUS = "en-US",
  DEDE = "de-DE",
}

/**
 * Type of phone number. <br>
 *
 * @remarks
 * The value can be one of the following:<br>
 * * `0` : toll <br>
 * * `1` : tollfree
 */
export enum AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum {
  Zero = "0",
  One = "1",
}

export class AddInternalNumbers201ApplicationXMLInternalNumbers extends SpeakeasyBase {
  /**
   * Control whether the number can be used to attend 3rd party meetings.
   */
  @SpeakeasyMetadata()
  allowForExternalMeetings?: boolean;

  /**
   * Specify whether this number can be used by users to join a meeting or not. <br>
   *
   * @remarks
   * * `true` : This number can be used to join a meeting. <br>
   * *  `false`: This number can not be used to join a meeting.
   *
   * Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
   */
  @SpeakeasyMetadata()
  allowJoin?: boolean;

  /**
   * Two letter country code of the country.
   */
  @SpeakeasyMetadata()
  country: string;

  /**
   * Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
   */
  @SpeakeasyMetadata()
  displayNumber: string;

  /**
   * Unique identifier of the internal number.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * A short description for the phone number.
   */
  @SpeakeasyMetadata()
  labels: string;

  /**
   * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
   */
  @SpeakeasyMetadata()
  languages: AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum;

  /**
   * Phone number in E164 format.
   */
  @SpeakeasyMetadata()
  number: string;

  /**
   * Type of phone number. <br>
   *
   * @remarks
   * The value can be one of the following:<br>
   * * `0` : toll <br>
   * * `1` : tollfree
   */
  @SpeakeasyMetadata()
  type: AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum;

  /**
   * Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
   *
   * @remarks
   * * `true`: Make the number visible. <br>
   * * `false`: Hide the number.
   */
  @SpeakeasyMetadata()
  visible?: boolean;
}

/**
 * **HTTP Status Code:** `201` **Created** <br>
 *
 * @remarks
 * Internal numbers added successfully.
 *
 */
export class AddInternalNumbers201ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: AddInternalNumbers201ApplicationXMLInternalNumbers,
  })
  internalNumbers?: AddInternalNumbers201ApplicationXMLInternalNumbers[];
}

/**
 * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
 */
export enum AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum {
  EnGB = "en-GB",
  EnUS = "en-US",
  DEDE = "de-DE",
}

/**
 * Type of phone number. <br>
 *
 * @remarks
 * The value can be one of the following:<br>
 * * `0` : toll <br>
 * * `1` : tollfree
 */
export enum AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum {
  Zero = "0",
  One = "1",
}

export class AddInternalNumbers201ApplicationJSONInternalNumbers extends SpeakeasyBase {
  /**
   * Control whether the number can be used to attend 3rd party meetings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_for_external_meetings" })
  allowForExternalMeetings?: boolean;

  /**
   * Specify whether this number can be used by users to join a meeting or not. <br>
   *
   * @remarks
   * * `true` : This number can be used to join a meeting. <br>
   * *  `false`: This number can not be used to join a meeting.
   *
   * Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_join" })
  allowJoin?: boolean;

  /**
   * Two letter country code of the country.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  /**
   * Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_number" })
  displayNumber: string;

  /**
   * Unique identifier of the internal number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * A short description for the phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels: string;

  /**
   * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languages" })
  languages: AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum;

  /**
   * Phone number in E164 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: string;

  /**
   * Type of phone number. <br>
   *
   * @remarks
   * The value can be one of the following:<br>
   * * `0` : toll <br>
   * * `1` : tollfree
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum;

  /**
   * Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
   *
   * @remarks
   * * `true`: Make the number visible. <br>
   * * `false`: Hide the number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visible" })
  visible?: boolean;
}

/**
 * **HTTP Status Code:** `201` **Created** <br>
 *
 * @remarks
 * Internal numbers added successfully.
 *
 */
export class AddInternalNumbers201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: AddInternalNumbers201ApplicationJSONInternalNumbers,
  })
  @Expose({ name: "internal_numbers" })
  @Type(() => AddInternalNumbers201ApplicationJSONInternalNumbers)
  internalNumbers?: AddInternalNumbers201ApplicationJSONInternalNumbers[];
}

export class AddInternalNumbersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `201` **Created** <br>
   *
   * @remarks
   * Internal numbers added successfully.
   *
   */
  @SpeakeasyMetadata()
  addInternalNumbers201ApplicationJSONObject?: AddInternalNumbers201ApplicationJSON;
}
