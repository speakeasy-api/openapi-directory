/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SequenceEntity - Sequence's parent is a schema.
 */
public class SequenceEntity {
    /**
     * Indicates number of entries to cache / precreate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cache")
    public String cache;
    public SequenceEntity withCache(String cache) {
        this.cache = cache;
        return this;
    }
    
    /**
     * Custom engine specific features.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFeatures")
    public java.util.Map<String, Object> customFeatures;
    public SequenceEntity withCustomFeatures(java.util.Map<String, Object> customFeatures) {
        this.customFeatures = customFeatures;
        return this;
    }
    
    /**
     * Indicates whether the sequence value should cycle through.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cycle")
    public Boolean cycle;
    public SequenceEntity withCycle(Boolean cycle) {
        this.cycle = cycle;
        return this;
    }
    
    /**
     * Increment value for the sequence.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("increment")
    public String increment;
    public SequenceEntity withIncrement(String increment) {
        this.increment = increment;
        return this;
    }
    
    /**
     * Maximum number for the sequence represented as bytes to accommodate large. numbers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxValue")
    public String maxValue;
    public SequenceEntity withMaxValue(String maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    /**
     * Minimum number for the sequence represented as bytes to accommodate large. numbers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minValue")
    public String minValue;
    public SequenceEntity withMinValue(String minValue) {
        this.minValue = minValue;
        return this;
    }
    
    /**
     * Start number for the sequence represented as bytes to accommodate large. numbers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startValue")
    public String startValue;
    public SequenceEntity withStartValue(String startValue) {
        this.startValue = startValue;
        return this;
    }
    
}
