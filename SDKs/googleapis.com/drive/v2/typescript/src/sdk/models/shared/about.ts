/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { User } from "./user";
import { Expose, Type } from "class-transformer";

export class AboutAdditionalRoleInfoRoleSets extends SpeakeasyBase {
  /**
   * The supported additional roles with the primary role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalRoles" })
  additionalRoles?: string[];

  /**
   * A primary permission role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primaryRole" })
  primaryRole?: string;
}

export class AboutAdditionalRoleInfo extends SpeakeasyBase {
  /**
   * The supported additional roles per primary role.
   */
  @SpeakeasyMetadata({ elemType: AboutAdditionalRoleInfoRoleSets })
  @Expose({ name: "roleSets" })
  @Type(() => AboutAdditionalRoleInfoRoleSets)
  roleSets?: AboutAdditionalRoleInfoRoleSets[];

  /**
   * The content type that this additional role info applies to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class AboutDriveThemes extends SpeakeasyBase {
  /**
   * A link to this theme's background image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backgroundImageLink" })
  backgroundImageLink?: string;

  /**
   * The color of this theme as an RGB hex string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "colorRgb" })
  colorRgb?: string;

  /**
   * The ID of the theme.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class AboutExportFormats extends SpeakeasyBase {
  /**
   * The content type to convert from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  /**
   * The possible content types to convert to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targets" })
  targets?: string[];
}

export class AboutFeatures extends SpeakeasyBase {
  /**
   * The name of the feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "featureName" })
  featureName?: string;

  /**
   * The request limit rate for this feature, in queries per second.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "featureRate" })
  featureRate?: number;
}

export class AboutImportFormats extends SpeakeasyBase {
  /**
   * The imported file's content type to convert from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  /**
   * The possible content types to convert to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targets" })
  targets?: string[];
}

export class AboutMaxUploadSizes extends SpeakeasyBase {
  /**
   * The max upload size for this type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: string;

  /**
   * The file type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class AboutQuotaBytesByService extends SpeakeasyBase {
  /**
   * The storage quota bytes used by the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bytesUsed" })
  bytesUsed?: string;

  /**
   * The service's name, e.g. DRIVE, GMAIL, or PHOTOS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceName" })
  serviceName?: string;
}

export class AboutTeamDriveThemes extends SpeakeasyBase {
  /**
   * Deprecated - use driveThemes/backgroundImageLink instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backgroundImageLink" })
  backgroundImageLink?: string;

  /**
   * Deprecated - use driveThemes/colorRgb instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "colorRgb" })
  colorRgb?: string;

  /**
   * Deprecated - use driveThemes/id instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

/**
 * An item with user information and settings.
 */
export class About extends SpeakeasyBase {
  /**
   * Information about supported additional roles per file type. The most specific type takes precedence.
   */
  @SpeakeasyMetadata({ elemType: AboutAdditionalRoleInfo })
  @Expose({ name: "additionalRoleInfo" })
  @Type(() => AboutAdditionalRoleInfo)
  additionalRoleInfo?: AboutAdditionalRoleInfo[];

  /**
   * Whether the user can create shared drives.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canCreateDrives" })
  canCreateDrives?: boolean;

  /**
   * Deprecated - use canCreateDrives instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canCreateTeamDrives" })
  canCreateTeamDrives?: boolean;

  /**
   * The domain sharing policy for the current user. Possible values are:
   *
   * @remarks
   * - allowed
   * - allowedWithWarning
   * - incomingOnly
   * - disallowed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domainSharingPolicy" })
  domainSharingPolicy?: string;

  /**
   * A list of themes that are supported for shared drives.
   */
  @SpeakeasyMetadata({ elemType: AboutDriveThemes })
  @Expose({ name: "driveThemes" })
  @Type(() => AboutDriveThemes)
  driveThemes?: AboutDriveThemes[];

  /**
   * The ETag of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The allowable export formats.
   */
  @SpeakeasyMetadata({ elemType: AboutExportFormats })
  @Expose({ name: "exportFormats" })
  @Type(() => AboutExportFormats)
  exportFormats?: AboutExportFormats[];

  /**
   * List of additional features enabled on this account.
   */
  @SpeakeasyMetadata({ elemType: AboutFeatures })
  @Expose({ name: "features" })
  @Type(() => AboutFeatures)
  features?: AboutFeatures[];

  /**
   * The palette of allowable folder colors as RGB hex strings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "folderColorPalette" })
  folderColorPalette?: string[];

  /**
   * The allowable import formats.
   */
  @SpeakeasyMetadata({ elemType: AboutImportFormats })
  @Expose({ name: "importFormats" })
  @Type(() => AboutImportFormats)
  importFormats?: AboutImportFormats[];

  /**
   * A boolean indicating whether the authenticated app is installed by the authenticated user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCurrentAppInstalled" })
  isCurrentAppInstalled?: boolean;

  /**
   * This is always drive#about.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCode" })
  languageCode?: string;

  /**
   * The largest change id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "largestChangeId" })
  largestChangeId?: string;

  /**
   * List of max upload sizes for each file type. The most specific type takes precedence.
   */
  @SpeakeasyMetadata({ elemType: AboutMaxUploadSizes })
  @Expose({ name: "maxUploadSizes" })
  @Type(() => AboutMaxUploadSizes)
  maxUploadSizes?: AboutMaxUploadSizes[];

  /**
   * The name of the current user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The current user's ID as visible in the permissions collection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissionId" })
  permissionId?: string;

  /**
   * The amount of storage quota used by different Google services.
   */
  @SpeakeasyMetadata({ elemType: AboutQuotaBytesByService })
  @Expose({ name: "quotaBytesByService" })
  @Type(() => AboutQuotaBytesByService)
  quotaBytesByService?: AboutQuotaBytesByService[];

  /**
   * The total number of quota bytes. This is only relevant when quotaType is LIMITED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quotaBytesTotal" })
  quotaBytesTotal?: string;

  /**
   * The number of quota bytes used by Google Drive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quotaBytesUsed" })
  quotaBytesUsed?: string;

  /**
   * The number of quota bytes used by all Google apps (Drive, Picasa, etc.).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quotaBytesUsedAggregate" })
  quotaBytesUsedAggregate?: string;

  /**
   * The number of quota bytes used by trashed items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quotaBytesUsedInTrash" })
  quotaBytesUsedInTrash?: string;

  /**
   * The type of the user's storage quota. Possible values are:
   *
   * @remarks
   * - LIMITED
   * - UNLIMITED
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quotaType" })
  quotaType?: string;

  /**
   * The number of remaining change ids, limited to no more than 2500.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remainingChangeIds" })
  remainingChangeIds?: string;

  /**
   * The id of the root folder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rootFolderId" })
  rootFolderId?: string;

  /**
   * A link back to this item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Deprecated - use driveThemes instead.
   */
  @SpeakeasyMetadata({ elemType: AboutTeamDriveThemes })
  @Expose({ name: "teamDriveThemes" })
  @Type(() => AboutTeamDriveThemes)
  teamDriveThemes?: AboutTeamDriveThemes[];

  /**
   * Information about a Drive user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => User)
  user?: User;
}
