// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionTypeEnumEnum string

const (
	ActionTypeEnumEnumForward             ActionTypeEnumEnum = "forward"
	ActionTypeEnumEnumAuthenticateOidc    ActionTypeEnumEnum = "authenticate-oidc"
	ActionTypeEnumEnumAuthenticateCognito ActionTypeEnumEnum = "authenticate-cognito"
	ActionTypeEnumEnumRedirect            ActionTypeEnumEnum = "redirect"
	ActionTypeEnumEnumFixedResponse       ActionTypeEnumEnum = "fixed-response"
)

func (e ActionTypeEnumEnum) ToPointer() *ActionTypeEnumEnum {
	return &e
}

func (e *ActionTypeEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "forward":
		fallthrough
	case "authenticate-oidc":
		fallthrough
	case "authenticate-cognito":
		fallthrough
	case "redirect":
		fallthrough
	case "fixed-response":
		*e = ActionTypeEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionTypeEnumEnum: %v", v)
	}
}
