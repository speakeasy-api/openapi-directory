"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ConnectorEventEventSourceEnum(str, Enum):
    r"""Unify event source"""
    NATIVE = 'native'
    VIRTUAL = 'virtual'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectorEvent:
    r"""Unify event that is supported on the connector. Events are delivered via Webhooks."""
    
    downstream_event_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downstream_event_type'), 'exclude': lambda f: f is None }})
    r"""Downstream event type"""  
    entity_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entity_type'), 'exclude': lambda f: f is None }})
    r"""Unify entity type"""  
    event_source: Optional[ConnectorEventEventSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_source'), 'exclude': lambda f: f is None }})
    r"""Unify event source"""  
    event_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_type'), 'exclude': lambda f: f is None }})
    r"""Unify event type"""  
    resources: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resources'), 'exclude': lambda f: f is None }})  
    