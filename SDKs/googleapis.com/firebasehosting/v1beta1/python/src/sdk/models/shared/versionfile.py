"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VersionFileStatusEnum(str, Enum):
    r"""Output only. The current status of a particular file in the specified version. The value will be either `pending upload` or `uploaded`."""
    STATUS_UNSPECIFIED = 'STATUS_UNSPECIFIED'
    EXPECTED = 'EXPECTED'
    ACTIVE = 'ACTIVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VersionFile:
    r"""A static content file that is part of a version."""
    
    hash: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hash'), 'exclude': lambda f: f is None }})
    r"""The SHA256 content hash of the file."""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""The URI at which the file's content should display."""  
    status: Optional[VersionFileStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Output only. The current status of a particular file in the specified version. The value will be either `pending upload` or `uploaded`."""  
    