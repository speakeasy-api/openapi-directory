"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import belegdaten as shared_belegdaten
from typing import Optional


@dataclasses.dataclass
class AddBelegRequest:
    
    belegdaten: shared_belegdaten.Belegdaten = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""An object that contains all data for a particular `Beleg` and is formatted according to RKSV \\"Signaturformat\\"."""  
    beleg_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'belegUuid', 'style': 'simple', 'explode': False }})
    r"""The `_uuid` of the `Beleg` to store."""  
    registrierkasse_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'registrierkasseUuid', 'style': 'simple', 'explode': False }})
    r"""The `_uuid` of the `Registrierkasse` to use for signing data."""  
    

@dataclasses.dataclass
class AddBelegResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    