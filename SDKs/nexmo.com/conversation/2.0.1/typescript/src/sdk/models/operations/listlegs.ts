/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListLegs200ApplicationJSONEmbeddedLegs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_embedded" })
  embedded?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  links?: Record<string, any>;

  /**
   * The unique identifier for this conversation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conversation_uuid" })
  conversationUuid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: Record<string, any>;

  /**
   * Time of leg end
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_end" })
  startEnd?: string;

  /**
   * Time of leg start
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  startTime?: string;

  /**
   * Leg Status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: shared.LegStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: Record<string, any>;

  /**
   * Channel type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: shared.ChannelTypeEnum;

  /**
   * The id of the leg. rtc_id and call_id are leg id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid: string;
}

/**
 * A list of conversation objects. See the [get details of a specific conversation](#retrieveConversation) response fields for a description of the nested objects
 */
export class ListLegs200ApplicationJSONEmbedded extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ListLegs200ApplicationJSONEmbeddedLegs })
  @Expose({ name: "legs" })
  @Type(() => ListLegs200ApplicationJSONEmbeddedLegs)
  legs: ListLegs200ApplicationJSONEmbeddedLegs[];
}

export class ListLegs200ApplicationJSONLinksSelf extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class ListLegs200ApplicationJSONLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => ListLegs200ApplicationJSONLinksSelf)
  self: ListLegs200ApplicationJSONLinksSelf;
}

/**
 * List Legs Response Payload Object
 */
export class ListLegs200ApplicationJSON extends SpeakeasyBase {
  /**
   * A list of conversation objects. See the [get details of a specific conversation](#retrieveConversation) response fields for a description of the nested objects
   */
  @SpeakeasyMetadata()
  @Expose({ name: "_embedded" })
  @Type(() => ListLegs200ApplicationJSONEmbedded)
  embedded: ListLegs200ApplicationJSONEmbedded;

  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => ListLegs200ApplicationJSONLinks)
  links: ListLegs200ApplicationJSONLinks;

  /**
   * The total number of records returned by your request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  /**
   * The amount of records returned in this response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize: number;

  /**
   * Return `page_size` amount of conversations from this index in the response. That is, if your request returns 300 conversations, set `record_index` to 5 in order to return conversations 50 to 59. The default value is 0. That is, the first `page_size` calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "record_index" })
  recordIndex: number;
}

export class ListLegsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * List Legs Successfully
   */
  @SpeakeasyMetadata()
  listLegs200ApplicationJSONObject?: ListLegs200ApplicationJSON;
}
