// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDefaultMailDomainXAmzTargetEnum
type UpdateDefaultMailDomainXAmzTargetEnum string

const (
	UpdateDefaultMailDomainXAmzTargetEnumWorkMailServiceUpdateDefaultMailDomain UpdateDefaultMailDomainXAmzTargetEnum = "WorkMailService.UpdateDefaultMailDomain"
)

func (e UpdateDefaultMailDomainXAmzTargetEnum) ToPointer() *UpdateDefaultMailDomainXAmzTargetEnum {
	return &e
}

func (e *UpdateDefaultMailDomainXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkMailService.UpdateDefaultMailDomain":
		*e = UpdateDefaultMailDomainXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDefaultMailDomainXAmzTargetEnum: %v", v)
	}
}

type UpdateDefaultMailDomainRequest struct {
	UpdateDefaultMailDomainRequest shared.UpdateDefaultMailDomainRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     UpdateDefaultMailDomainXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateDefaultMailDomainResponse struct {
	ContentType string
	// InvalidParameterException
	InvalidParameterException interface{}
	// MailDomainNotFoundException
	MailDomainNotFoundException interface{}
	// MailDomainStateException
	MailDomainStateException interface{}
	// OrganizationNotFoundException
	OrganizationNotFoundException interface{}
	// OrganizationStateException
	OrganizationStateException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// Success
	UpdateDefaultMailDomainResponse map[string]interface{}
}
