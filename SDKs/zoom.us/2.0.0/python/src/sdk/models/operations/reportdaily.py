"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ReportDailySecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ReportDailyRequest:
    
    month: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'month', 'style': 'form', 'explode': True }})
    r"""Month for this report"""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'year', 'style': 'form', 'explode': True }})
    r"""Year for this report"""  
    

@dataclasses.dataclass
class ReportDaily200ApplicationXMLDates:
    
    date_: Optional[date] = dataclasses.field(default=None)
    r"""Date for this object."""  
    meeting_minutes: Optional[int] = dataclasses.field(default=None)
    r"""Number of meeting minutes on this date."""  
    meetings: Optional[int] = dataclasses.field(default=None)
    r"""Number of meetings on this date."""  
    new_users: Optional[int] = dataclasses.field(default=None)
    r"""Number of new users on this date."""  
    participants: Optional[int] = dataclasses.field(default=None)
    r"""Number of participants on this date."""  
    

@dataclasses.dataclass
class ReportDaily200ApplicationXML:
    r"""**HTTP Status Code:** `200`<br>
    Daily report retrieved.<br>
    This is only available for paid accounts:{accountId}.
    """
    
    dates: Optional[list[ReportDaily200ApplicationXMLDates]] = dataclasses.field(default=None)
    r"""Array of date objects."""  
    month: Optional[int] = dataclasses.field(default=None)
    r"""Month for this report."""  
    year: Optional[int] = dataclasses.field(default=None)
    r"""Year for this report."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportDaily200ApplicationJSONDates:
    
    date_: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date for this object."""  
    meeting_minutes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meeting_minutes'), 'exclude': lambda f: f is None }})
    r"""Number of meeting minutes on this date."""  
    meetings: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meetings'), 'exclude': lambda f: f is None }})
    r"""Number of meetings on this date."""  
    new_users: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('new_users'), 'exclude': lambda f: f is None }})
    r"""Number of new users on this date."""  
    participants: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('participants'), 'exclude': lambda f: f is None }})
    r"""Number of participants on this date."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportDaily200ApplicationJSON:
    r"""**HTTP Status Code:** `200`<br>
    Daily report retrieved.<br>
    This is only available for paid accounts:{accountId}.
    """
    
    dates: Optional[list[ReportDaily200ApplicationJSONDates]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dates'), 'exclude': lambda f: f is None }})
    r"""Array of date objects."""  
    month: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('month'), 'exclude': lambda f: f is None }})
    r"""Month for this report."""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year'), 'exclude': lambda f: f is None }})
    r"""Year for this report."""  
    

@dataclasses.dataclass
class ReportDailyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    report_daily_200_application_json_object: Optional[ReportDaily200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    Daily report retrieved.<br>
    This is only available for paid accounts:{accountId}.
    """  
    