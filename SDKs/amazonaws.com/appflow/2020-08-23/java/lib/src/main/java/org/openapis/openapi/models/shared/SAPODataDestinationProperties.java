/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SAPODataDestinationProperties - The properties that are applied when using SAPOData as a flow destination
 */
public class SAPODataDestinationProperties {
    /**
     *  The settings that determine how Amazon AppFlow handles an error when placing data in the destination. For example, this setting would determine if the flow should fail after one insertion error, or continue and attempt to insert every record regardless of the initial failure. &lt;code&gt;ErrorHandlingConfig&lt;/code&gt; is a part of the destination connector details. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorHandlingConfig")
    public ErrorHandlingConfig errorHandlingConfig;
    public SAPODataDestinationProperties withErrorHandlingConfig(ErrorHandlingConfig errorHandlingConfig) {
        this.errorHandlingConfig = errorHandlingConfig;
        return this;
    }
    
    /**
     *  A list of field names that can be used as an ID field when performing a write operation. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idFieldNames")
    public String[] idFieldNames;
    public SAPODataDestinationProperties withIdFieldNames(String[] idFieldNames) {
        this.idFieldNames = idFieldNames;
        return this;
    }
    
    @JsonProperty("objectPath")
    public String objectPath;
    public SAPODataDestinationProperties withObjectPath(String objectPath) {
        this.objectPath = objectPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("successResponseHandlingConfig")
    public SuccessResponseHandlingConfig successResponseHandlingConfig;
    public SAPODataDestinationProperties withSuccessResponseHandlingConfig(SuccessResponseHandlingConfig successResponseHandlingConfig) {
        this.successResponseHandlingConfig = successResponseHandlingConfig;
        return this;
    }
    
    /**
     *  The possible write operations in the destination connector. When this value is not provided, this defaults to the &lt;code&gt;INSERT&lt;/code&gt; operation. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("writeOperationType")
    public WriteOperationTypeEnum writeOperationType;
    public SAPODataDestinationProperties withWriteOperationType(WriteOperationTypeEnum writeOperationType) {
        this.writeOperationType = writeOperationType;
        return this;
    }
    
}
