"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import resourceresponse as shared_resourceresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompressFilesCompressFilesRequestBody:
    
    resources: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resources') }})
    r"""Resource identifiers for file(s)/folder(s) to include in new zip file"""  
    archive_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('archiveName'), 'exclude': lambda f: f is None }})
    r"""Name of the zip archive to create. If left blank, current date will be used."""  
    parent_resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentResource'), 'exclude': lambda f: f is None }})
    r"""Resource identifier of the folder where zip archive should be created."""  
    

@dataclasses.dataclass
class CompressFilesRequest:
    
    ev_access_token: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-access-token', 'style': 'simple', 'explode': False }})
    r"""Access token required to make the API call."""  
    ev_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-api-key', 'style': 'simple', 'explode': False }})
    r"""API Key required to make the API call."""  
    request_body: Optional[CompressFilesCompressFilesRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class CompressFilesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_response: Optional[shared_resourceresponse.ResourceResponse] = dataclasses.field(default=None)
    r"""Successful Operation"""  
    