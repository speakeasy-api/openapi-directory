<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LoginRequest - User credentials
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LoginRequest
{
    /**
     * Authentication methods
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LoginRequestAuthTypeEnum $authType
     */
	#[\JMS\Serializer\Annotation\SerializedName('authType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LoginRequestAuthTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LoginRequestAuthTypeEnum $authType = null;
    
    /**
     * &#128679; Deprecated since v4.7.0
     * 
     * 
     * Language ID or ISO 639-1 code
     * 
     * @var ?string $language
     */
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $language = null;
    
    /**
     * &#128679; Deprecated since v4.7.0
     * 
     * 
     * User login name
     * 
     * @var ?string $login
     */
	#[\JMS\Serializer\Annotation\SerializedName('login')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $login = null;
    
    /**
     * Password
     * 
     * @var string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $password;
    
    /**
     * For RADIUS Access-Challenge
     * 
     * 
     * If a `replyState` is returned, it must be included as `state` in the following request.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * RADIUS Token
     * 
     * @var ?string $token
     */
	#[\JMS\Serializer\Annotation\SerializedName('token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $token = null;
    
    /**
     * &#128640; Since v4.13.0
     * 
     * 
     * Username
     * 
     * @var ?string $userName
     */
	#[\JMS\Serializer\Annotation\SerializedName('userName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userName = null;
    
	public function __construct()
	{
		$this->authType = null;
		$this->language = null;
		$this->login = null;
		$this->password = "";
		$this->state = null;
		$this->token = null;
		$this->userName = null;
	}
}
