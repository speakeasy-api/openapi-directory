// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FolderListForPathPathParams struct {
	// Path to operate on.
	Path string `pathParam:"style=simple,explode=false,name=path"`
}

type FolderListForPathQueryParams struct {
	// Send cursor to resume an existing list from the point at which you left off.  Get a cursor from an existing list via the X-Files-Cursor header.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// If specified, will filter folders/files list by this string.  Wildcards of `*` and `?` are acceptable here.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`.
	PreviewSize *string `queryParam:"style=form,explode=true,name=preview_size"`
	// If `search_all` is `true`, provide the search string here.  Otherwise, this parameter acts like an alias of `filter`.
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Search entire site?
	SearchAll *bool `queryParam:"style=form,explode=true,name=search_all"`
	// Include file previews?
	WithPreviews *bool `queryParam:"style=form,explode=true,name=with_previews"`
	// Include file priority color information?
	WithPriorityColor *bool `queryParam:"style=form,explode=true,name=with_priority_color"`
}

type FolderListForPathRequest struct {
	PathParams  FolderListForPathPathParams
	QueryParams FolderListForPathQueryParams
}

type FolderListForPathResponse struct {
	ContentType string
	// A list of Folders objects.
	FileEntities []shared.FileEntity
	StatusCode   int
	RawResponse  *http.Response
}
