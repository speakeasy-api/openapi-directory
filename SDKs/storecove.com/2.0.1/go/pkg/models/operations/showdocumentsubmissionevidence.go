// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ShowDocumentSubmissionEvidenceEvidenceTypeEnum - Type of evidence requested
type ShowDocumentSubmissionEvidenceEvidenceTypeEnum string

const (
	ShowDocumentSubmissionEvidenceEvidenceTypeEnumSending  ShowDocumentSubmissionEvidenceEvidenceTypeEnum = "sending"
	ShowDocumentSubmissionEvidenceEvidenceTypeEnumClearing ShowDocumentSubmissionEvidenceEvidenceTypeEnum = "clearing"
)

func (e *ShowDocumentSubmissionEvidenceEvidenceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "sending":
		fallthrough
	case "clearing":
		*e = ShowDocumentSubmissionEvidenceEvidenceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ShowDocumentSubmissionEvidenceEvidenceTypeEnum: %s", s)
	}
}

type ShowDocumentSubmissionEvidencePathParams struct {
	// Type of evidence requested
	EvidenceType ShowDocumentSubmissionEvidenceEvidenceTypeEnum `pathParam:"style=simple,explode=false,name=evidence_type"`
	// DocumentSubmission GUID
	GUID string `pathParam:"style=simple,explode=false,name=guid"`
}

type ShowDocumentSubmissionEvidenceRequest struct {
	PathParams ShowDocumentSubmissionEvidencePathParams
}

type ShowDocumentSubmissionEvidenceResponse struct {
	ContentType string
	// Success
	DocumentSubmissionEvidence *shared.DocumentSubmissionEvidence
	StatusCode                 int
	RawResponse                *http.Response
}
