"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import errorlimit as shared_errorlimit
from ..shared import order as shared_order
from typing import Optional


@dataclasses.dataclass
class GetRequest:
    
    order_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'orderId', 'style': 'simple', 'explode': False }})
    r"""Order id whose details are to be retrieved"""  
    x_market_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Market-Id', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the Market in which the request is happening"""  
    x_shopper_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Shopper-Id', 'style': 'simple', 'explode': False }})
    r"""Shopper ID to be operated on, if different from JWT<br/><b>Reseller subaccounts are not supported</b>"""  
    

@dataclasses.dataclass
class GetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Request was malformed"""  
    error_limit: Optional[shared_errorlimit.ErrorLimit] = dataclasses.field(default=None)
    r"""Too many requests received within interval"""  
    order: Optional[shared_order.Order] = dataclasses.field(default=None)
    r"""Request was successful"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    