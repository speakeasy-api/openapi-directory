// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LogFilterEnum string

const (
	LogFilterEnumError LogFilterEnum = "ERROR"
	LogFilterEnumWarn  LogFilterEnum = "WARN"
	LogFilterEnumInfo  LogFilterEnum = "INFO"
)

func (e LogFilterEnum) ToPointer() *LogFilterEnum {
	return &e
}

func (e *LogFilterEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR":
		fallthrough
	case "WARN":
		fallthrough
	case "INFO":
		*e = LogFilterEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LogFilterEnum: %v", v)
	}
}
