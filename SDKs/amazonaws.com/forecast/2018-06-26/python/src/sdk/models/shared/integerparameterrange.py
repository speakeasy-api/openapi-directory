"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import scalingtype_enum as shared_scalingtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IntegerParameterRange:
    r"""Specifies an integer hyperparameter and it's range of tunable values. This object is part of the <a>ParameterRanges</a> object."""
    
    max_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxValue') }})  
    min_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinValue') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    scaling_type: Optional[shared_scalingtype_enum.ScalingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ScalingType'), 'exclude': lambda f: f is None }})  
    