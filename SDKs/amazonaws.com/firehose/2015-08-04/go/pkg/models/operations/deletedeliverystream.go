// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteDeliveryStreamXAmzTargetEnum
type DeleteDeliveryStreamXAmzTargetEnum string

const (
	DeleteDeliveryStreamXAmzTargetEnumFirehose20150804DeleteDeliveryStream DeleteDeliveryStreamXAmzTargetEnum = "Firehose_20150804.DeleteDeliveryStream"
)

func (e *DeleteDeliveryStreamXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Firehose_20150804.DeleteDeliveryStream":
		*e = DeleteDeliveryStreamXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteDeliveryStreamXAmzTargetEnum: %s", s)
	}
}

type DeleteDeliveryStreamHeaders struct {
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteDeliveryStreamXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteDeliveryStreamRequest struct {
	Headers DeleteDeliveryStreamHeaders
	Request shared.DeleteDeliveryStreamInput `request:"mediaType=application/json"`
}

type DeleteDeliveryStreamResponse struct {
	ContentType string
	// Success
	DeleteDeliveryStreamOutput map[string]interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
