/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DiaryControllerGetAppointmentsBetweenDatesRequest extends SpeakeasyBase {
  /**
   * The appointment IDs to search for
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=appointmentTypesToSearch",
  })
  appointmentTypesToSearch: string[];

  /**
   * The unique ID of the Branch
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=branchID",
  })
  branchID: string;

  /**
   * The maximum number of items to return (up to 1000 per request)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count: number;

  /**
   * The search to date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=endDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  endDate: Date;

  /**
   * The index of the first item to return
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset: number;

  /**
   * The unique client short-name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=shortName",
  })
  shortName: string;

  /**
   * The search from date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startDate: Date;
}

export class DiaryControllerGetAppointmentsBetweenDatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  diaryAppointmentModelResults?: shared.DiaryAppointmentModelResults;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
