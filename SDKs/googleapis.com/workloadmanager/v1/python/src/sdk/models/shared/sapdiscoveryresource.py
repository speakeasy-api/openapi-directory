"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SapDiscoveryResourceResourceTypeEnum(str, Enum):
    r"""The type of this resource."""
    RESOURCE_TYPE_UNSPECIFIED = 'RESOURCE_TYPE_UNSPECIFIED'
    COMPUTE = 'COMPUTE'
    STORAGE = 'STORAGE'
    NETWORK = 'NETWORK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SapDiscoveryResource:
    r"""Message describing a resource."""
    
    related_resources: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedResources'), 'exclude': lambda f: f is None }})
    r"""A list of resource URIs related to this resource."""  
    resource_kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceKind'), 'exclude': lambda f: f is None }})
    r"""ComputeInstance, ComputeDisk, VPC, Bare Metal server, etc."""  
    resource_type: Optional[SapDiscoveryResourceResourceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceType'), 'exclude': lambda f: f is None }})
    r"""The type of this resource."""  
    resource_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceUri'), 'exclude': lambda f: f is None }})
    r"""URI of the resource, includes project, location, and name."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Unix timestamp of when this resource last had its discovery data updated."""  
    