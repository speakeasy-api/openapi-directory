/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MemberStateEnum } from "./memberstateenum";
import { Expose } from "class-transformer";

/**
 * Retrieve Events Response Payload Object Item
 */
export class EventRetrieved extends SpeakeasyBase {
  /**
   * Event Body
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body: Record<string, any>;

  /**
   * Member ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * A link towards a conversation event included in Conversation API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href: string;

  /**
   * Event id. This is a progressive integer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The state that the member is in. Possible values are `invited`, `joined`, `left`, or `unknown`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: MemberStateEnum;

  /**
   * Time of creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp: string;

  /**
   * Member ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;

  /**
   * Event type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
