/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DetectImageRequestBodyImageData extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=imageData" })
  imageData: string;
}

export class DetectImageRequestBody extends SpeakeasyBase {
  /**
   * Binary image data. Supported formats are JPEG, GIF, PNG, and BMP. Supports images up to 4MB.
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  imageData: DetectImageRequestBodyImageData;
}

export class DetectImageRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody: DetectImageRequestBody;

  /**
   * Optional. Specifies the name of application using the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=application",
  })
  application?: string;

  /**
   * The project id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: string;

  /**
   * Specifies the name of the model to evaluate against.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=publishedName",
  })
  publishedName: string;
}

export class DetectImageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error response
   */
  @SpeakeasyMetadata()
  customVisionError?: shared.CustomVisionError;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  imagePrediction?: shared.ImagePrediction;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
