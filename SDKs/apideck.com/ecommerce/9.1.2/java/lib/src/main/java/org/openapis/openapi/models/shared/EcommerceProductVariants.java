/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EcommerceProductVariants {
    /**
     * A unique identifier for the variant of the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public EcommerceProductVariants withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("images")
    public EcommerceProductVariantsImages[] images;
    public EcommerceProductVariants withImages(EcommerceProductVariantsImages[] images) {
        this.images = images;
        return this;
    }
    
    /**
     * The quantity of the variant in stock.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventory_quantity")
    public String inventoryQuantity;
    public EcommerceProductVariants withInventoryQuantity(String inventoryQuantity) {
        this.inventoryQuantity = inventoryQuantity;
        return this;
    }
    
    /**
     * The name for the variant, used for displaying to customers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public EcommerceProductVariants withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public EcommerceProductVariantsOptions[] options;
    public EcommerceProductVariants withOptions(EcommerceProductVariantsOptions[] options) {
        this.options = options;
        return this;
    }
    
    /**
     * The price of the variant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public String price;
    public EcommerceProductVariants withPrice(String price) {
        this.price = price;
        return this;
    }
    
    /**
     * The stock keeping unit of the variant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;
    public EcommerceProductVariants withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * The weight of the variant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight")
    public String weight;
    public EcommerceProductVariants withWeight(String weight) {
        this.weight = weight;
        return this;
    }
    
    /**
     * The unit of measurement for the weight of the variant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight_unit")
    public String weightUnit;
    public EcommerceProductVariants withWeightUnit(String weightUnit) {
        this.weightUnit = weightUnit;
        return this;
    }
    
}
