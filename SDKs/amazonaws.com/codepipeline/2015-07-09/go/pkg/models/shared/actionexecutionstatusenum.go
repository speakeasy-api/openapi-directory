// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionExecutionStatusEnum string

const (
	ActionExecutionStatusEnumInProgress ActionExecutionStatusEnum = "InProgress"
	ActionExecutionStatusEnumAbandoned  ActionExecutionStatusEnum = "Abandoned"
	ActionExecutionStatusEnumSucceeded  ActionExecutionStatusEnum = "Succeeded"
	ActionExecutionStatusEnumFailed     ActionExecutionStatusEnum = "Failed"
)

func (e ActionExecutionStatusEnum) ToPointer() *ActionExecutionStatusEnum {
	return &e
}

func (e *ActionExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InProgress":
		fallthrough
	case "Abandoned":
		fallthrough
	case "Succeeded":
		fallthrough
	case "Failed":
		*e = ActionExecutionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionExecutionStatusEnum: %v", v)
	}
}
