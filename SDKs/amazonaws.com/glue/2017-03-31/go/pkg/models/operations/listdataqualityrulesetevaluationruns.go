// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListDataQualityRulesetEvaluationRunsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListDataQualityRulesetEvaluationRunsXAmzTargetEnum
type ListDataQualityRulesetEvaluationRunsXAmzTargetEnum string

const (
	ListDataQualityRulesetEvaluationRunsXAmzTargetEnumAwsGlueListDataQualityRulesetEvaluationRuns ListDataQualityRulesetEvaluationRunsXAmzTargetEnum = "AWSGlue.ListDataQualityRulesetEvaluationRuns"
)

func (e *ListDataQualityRulesetEvaluationRunsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.ListDataQualityRulesetEvaluationRuns":
		*e = ListDataQualityRulesetEvaluationRunsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDataQualityRulesetEvaluationRunsXAmzTargetEnum: %s", s)
	}
}

type ListDataQualityRulesetEvaluationRunsHeaders struct {
	XAmzAlgorithm     *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListDataQualityRulesetEvaluationRunsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListDataQualityRulesetEvaluationRunsRequest struct {
	QueryParams ListDataQualityRulesetEvaluationRunsQueryParams
	Headers     ListDataQualityRulesetEvaluationRunsHeaders
	Request     shared.ListDataQualityRulesetEvaluationRunsRequest `request:"mediaType=application/json"`
}

type ListDataQualityRulesetEvaluationRunsResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListDataQualityRulesetEvaluationRunsResponse *shared.ListDataQualityRulesetEvaluationRunsResponse
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
