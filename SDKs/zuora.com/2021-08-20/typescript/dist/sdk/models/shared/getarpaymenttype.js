"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETARPaymentType = exports.GETARPaymentTypeTypeEnum = exports.GETARPaymentTypeStatusEnum = exports.GETARPaymentTypeGatewayStateEnum = exports.GETARPaymentTypeFinanceInformation = exports.GETARPaymentTypeFinanceInformationTransferredToAccountingEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Whether the payment was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
 *
 * @remarks
 *
 */
var GETARPaymentTypeFinanceInformationTransferredToAccountingEnum;
(function (GETARPaymentTypeFinanceInformationTransferredToAccountingEnum) {
    GETARPaymentTypeFinanceInformationTransferredToAccountingEnum["Processing"] = "Processing";
    GETARPaymentTypeFinanceInformationTransferredToAccountingEnum["Yes"] = "Yes";
    GETARPaymentTypeFinanceInformationTransferredToAccountingEnum["No"] = "No";
    GETARPaymentTypeFinanceInformationTransferredToAccountingEnum["Error"] = "Error";
    GETARPaymentTypeFinanceInformationTransferredToAccountingEnum["Ignore"] = "Ignore";
})(GETARPaymentTypeFinanceInformationTransferredToAccountingEnum = exports.GETARPaymentTypeFinanceInformationTransferredToAccountingEnum || (exports.GETARPaymentTypeFinanceInformationTransferredToAccountingEnum = {}));
/**
 * Container for the finance information related to the payment.
 *
 * @remarks
 *
 */
var GETARPaymentTypeFinanceInformation = /** @class */ (function (_super) {
    __extends(GETARPaymentTypeFinanceInformation, _super);
    function GETARPaymentTypeFinanceInformation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankAccountAccountingCode" }),
        __metadata("design:type", String)
    ], GETARPaymentTypeFinanceInformation.prototype, "bankAccountAccountingCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankAccountAccountingCodeType" }),
        __metadata("design:type", String)
    ], GETARPaymentTypeFinanceInformation.prototype, "bankAccountAccountingCodeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferredToAccounting" }),
        __metadata("design:type", String)
    ], GETARPaymentTypeFinanceInformation.prototype, "transferredToAccounting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unappliedPaymentAccountingCode" }),
        __metadata("design:type", String)
    ], GETARPaymentTypeFinanceInformation.prototype, "unappliedPaymentAccountingCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unappliedPaymentAccountingCodeType" }),
        __metadata("design:type", String)
    ], GETARPaymentTypeFinanceInformation.prototype, "unappliedPaymentAccountingCodeType", void 0);
    return GETARPaymentTypeFinanceInformation;
}(utils_1.SpeakeasyBase));
exports.GETARPaymentTypeFinanceInformation = GETARPaymentTypeFinanceInformation;
/**
 * The status of the payment in the gateway; use for reconciliation.
 *
 * @remarks
 *
 */
var GETARPaymentTypeGatewayStateEnum;
(function (GETARPaymentTypeGatewayStateEnum) {
    GETARPaymentTypeGatewayStateEnum["MarkedForSubmission"] = "MarkedForSubmission";
    GETARPaymentTypeGatewayStateEnum["Submitted"] = "Submitted";
    GETARPaymentTypeGatewayStateEnum["Settled"] = "Settled";
    GETARPaymentTypeGatewayStateEnum["NotSubmitted"] = "NotSubmitted";
    GETARPaymentTypeGatewayStateEnum["FailedToSettle"] = "FailedToSettle";
})(GETARPaymentTypeGatewayStateEnum = exports.GETARPaymentTypeGatewayStateEnum || (exports.GETARPaymentTypeGatewayStateEnum = {}));
/**
 * The status of the payment.
 *
 * @remarks
 *
 */
var GETARPaymentTypeStatusEnum;
(function (GETARPaymentTypeStatusEnum) {
    GETARPaymentTypeStatusEnum["Draft"] = "Draft";
    GETARPaymentTypeStatusEnum["Processing"] = "Processing";
    GETARPaymentTypeStatusEnum["Processed"] = "Processed";
    GETARPaymentTypeStatusEnum["Error"] = "Error";
    GETARPaymentTypeStatusEnum["Canceled"] = "Canceled";
    GETARPaymentTypeStatusEnum["Posted"] = "Posted";
})(GETARPaymentTypeStatusEnum = exports.GETARPaymentTypeStatusEnum || (exports.GETARPaymentTypeStatusEnum = {}));
/**
 * The type of the payment.
 *
 * @remarks
 *
 */
var GETARPaymentTypeTypeEnum;
(function (GETARPaymentTypeTypeEnum) {
    GETARPaymentTypeTypeEnum["External"] = "External";
    GETARPaymentTypeTypeEnum["Electronic"] = "Electronic";
})(GETARPaymentTypeTypeEnum = exports.GETARPaymentTypeTypeEnum || (exports.GETARPaymentTypeTypeEnum = {}));
/**
 * Container for custom fields of a Payment object.
 *
 * @remarks
 *
 */
var GETARPaymentType = /** @class */ (function (_super) {
    __extends(GETARPaymentType, _super);
    function GETARPaymentType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationId__NS" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "integrationIdNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IntegrationStatus__NS" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "integrationStatusNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Origin__NS" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "originNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SyncDate__NS" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "syncDateNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Transaction__NS" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "transactionNS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], GETARPaymentType.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "appliedAmount" }),
        __metadata("design:type", Number)
    ], GETARPaymentType.prototype, "appliedAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authTransactionId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "authTransactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankIdentificationNumber" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "bankIdentificationNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cancelledOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETARPaymentType.prototype, "cancelledOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdById" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "createdById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETARPaymentType.prototype, "createdDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creditBalanceAmount" }),
        __metadata("design:type", Number)
    ], GETARPaymentType.prototype, "creditBalanceAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "effectiveDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETARPaymentType.prototype, "effectiveDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "financeInformation" }),
        (0, class_transformer_1.Type)(function () { return GETARPaymentTypeFinanceInformation; }),
        __metadata("design:type", GETARPaymentTypeFinanceInformation)
    ], GETARPaymentType.prototype, "financeInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "gatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayOrderId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "gatewayOrderId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayReconciliationReason" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "gatewayReconciliationReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayReconciliationStatus" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "gatewayReconciliationStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayResponse" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "gatewayResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayResponseCode" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "gatewayResponseCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayState" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "gatewayState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "markedForSubmissionOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETARPaymentType.prototype, "markedForSubmissionOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethodId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "paymentMethodId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethodSnapshotId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "paymentMethodSnapshotId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payoutId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "payoutId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referenceId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "referenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "refundAmount" }),
        __metadata("design:type", Number)
    ], GETARPaymentType.prototype, "refundAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secondPaymentReferenceId" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "secondPaymentReferenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "settledOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETARPaymentType.prototype, "settledOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "softDescriptor" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "softDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "softDescriptorPhone" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "softDescriptorPhone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "standalone" }),
        __metadata("design:type", Boolean)
    ], GETARPaymentType.prototype, "standalone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submittedOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETARPaymentType.prototype, "submittedOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "success" }),
        __metadata("design:type", Boolean)
    ], GETARPaymentType.prototype, "success", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unappliedAmount" }),
        __metadata("design:type", Number)
    ], GETARPaymentType.prototype, "unappliedAmount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedById" }),
        __metadata("design:type", String)
    ], GETARPaymentType.prototype, "updatedById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETARPaymentType.prototype, "updatedDate", void 0);
    return GETARPaymentType;
}(utils_1.SpeakeasyBase));
exports.GETARPaymentType = GETARPaymentType;
