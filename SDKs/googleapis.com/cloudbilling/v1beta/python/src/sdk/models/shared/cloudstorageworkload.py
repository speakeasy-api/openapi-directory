"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dualregional as shared_dualregional
from ..shared import multiregional as shared_multiregional
from ..shared import regional as shared_regional
from ..shared import usage as shared_usage
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CloudStorageWorkload:
    r"""Specifies usage of Cloud Storage resources."""
    
    data_retrieval: Optional[shared_usage.Usage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataRetrieval'), 'exclude': lambda f: f is None }})
    r"""An amount of usage over a time frame."""  
    data_stored: Optional[shared_usage.Usage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataStored'), 'exclude': lambda f: f is None }})
    r"""An amount of usage over a time frame."""  
    dual_region: Optional[shared_dualregional.DualRegional] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dualRegion'), 'exclude': lambda f: f is None }})
    r"""Area contains dual locations."""  
    multi_region: Optional[shared_multiregional.MultiRegional] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multiRegion'), 'exclude': lambda f: f is None }})
    r"""Area contains multiple locations."""  
    operation_a: Optional[shared_usage.Usage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operationA'), 'exclude': lambda f: f is None }})
    r"""An amount of usage over a time frame."""  
    operation_b: Optional[shared_usage.Usage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operationB'), 'exclude': lambda f: f is None }})
    r"""An amount of usage over a time frame."""  
    region: Optional[shared_regional.Regional] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region'), 'exclude': lambda f: f is None }})
    r"""Area contains only one location."""  
    storage_class: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storageClass'), 'exclude': lambda f: f is None }})
    r"""The [storage class](https://cloud.google.com/storage/docs/storage-classes#classes) of the data and operation. For example: \\"standard\\" or \\"nearline\\"."""  
    