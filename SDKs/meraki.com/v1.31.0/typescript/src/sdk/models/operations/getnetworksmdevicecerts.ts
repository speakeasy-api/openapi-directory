/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetNetworkSmDeviceCertsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=deviceId",
  })
  deviceId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class GetNetworkSmDeviceCerts200ApplicationJSON extends SpeakeasyBase {
  /**
   * The PEM of the certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certPem" })
  certPem?: string;

  /**
   * The Meraki managed device Id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceId" })
  deviceId?: string;

  /**
   * The Meraki Id of the certificate record.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The certificate issuer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issuer" })
  issuer?: string;

  /**
   * The name of the certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The date after which the certificate is no longer valid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notValidAfter" })
  notValidAfter?: string;

  /**
   * The date before which the certificate is not valid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notValidBefore" })
  notValidBefore?: string;

  /**
   * The subject of the certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: string;
}

export class GetNetworkSmDeviceCertsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({ elemType: GetNetworkSmDeviceCerts200ApplicationJSON })
  getNetworkSmDeviceCerts200ApplicationJSONObjects?: GetNetworkSmDeviceCerts200ApplicationJSON[];
}
