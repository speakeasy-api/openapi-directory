/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Ec2InstanceCounts - Resource capacity settings. Fleet capacity is measured in Amazon EC2 instances. Pending and terminating counts are non-zero when the fleet capacity is adjusting to a scaling event or if access to resources is temporarily affected.
 */
public class Ec2InstanceCounts {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ACTIVE")
    public Long active;

    public Ec2InstanceCounts withActive(Long active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DESIRED")
    public Long desired;

    public Ec2InstanceCounts withDesired(Long desired) {
        this.desired = desired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IDLE")
    public Long idle;

    public Ec2InstanceCounts withIdle(Long idle) {
        this.idle = idle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MAXIMUM")
    public Long maximum;

    public Ec2InstanceCounts withMaximum(Long maximum) {
        this.maximum = maximum;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MINIMUM")
    public Long minimum;

    public Ec2InstanceCounts withMinimum(Long minimum) {
        this.minimum = minimum;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PENDING")
    public Long pending;

    public Ec2InstanceCounts withPending(Long pending) {
        this.pending = pending;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TERMINATING")
    public Long terminating;

    public Ec2InstanceCounts withTerminating(Long terminating) {
        this.terminating = terminating;
        return this;
    }
    
    public Ec2InstanceCounts(){}
}
