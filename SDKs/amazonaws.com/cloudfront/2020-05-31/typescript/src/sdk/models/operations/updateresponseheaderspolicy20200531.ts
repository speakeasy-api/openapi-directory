/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * <p>A response headers policy configuration.</p> <p>A response headers policy configuration contains metadata about the response headers policy, and configurations for sets of HTTP response headers.</p>
 */
export class UpdateResponseHeadersPolicy20200531RequestBodyResponseHeadersPolicyConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  comment?: string;

  @SpeakeasyMetadata()
  corsConfig?: shared.ResponseHeadersPolicyCorsConfig;

  @SpeakeasyMetadata()
  customHeadersConfig?: shared.ResponseHeadersPolicyCustomHeadersConfig;

  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  removeHeadersConfig?: shared.ResponseHeadersPolicyRemoveHeadersConfig;

  @SpeakeasyMetadata()
  securityHeadersConfig?: shared.ResponseHeadersPolicySecurityHeadersConfig;

  @SpeakeasyMetadata()
  serverTimingHeadersConfig?: shared.ResponseHeadersPolicyServerTimingHeadersConfig;
}

export class UpdateResponseHeadersPolicy20200531RequestBody extends SpeakeasyBase {
  /**
   * <p>A response headers policy configuration.</p> <p>A response headers policy configuration contains metadata about the response headers policy, and configurations for sets of HTTP response headers.</p>
   */
  @SpeakeasyMetadata()
  responseHeadersPolicyConfig: UpdateResponseHeadersPolicy20200531RequestBodyResponseHeadersPolicyConfig;
}

export class UpdateResponseHeadersPolicy20200531Request extends SpeakeasyBase {
  /**
   * The identifier for the response headers policy that you are updating.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Id" })
  id: string;

  /**
   * <p>The version of the response headers policy that you are updating.</p> <p>The version is returned in the cache policy's <code>ETag</code> field in the response to <code>GetResponseHeadersPolicyConfig</code>.</p>
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=If-Match",
  })
  ifMatch?: string;

  @SpeakeasyMetadata({ data: "request, media_type=text/xml" })
  requestBody: Uint8Array;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateResponseHeadersPolicy20200531Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
