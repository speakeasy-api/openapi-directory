// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodyConstraints struct {
	AssetsGroups [][]int64 `json:"assetsGroups,omitempty"`
	// assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
	AssetsGroupsMatrix [][]float64 `json:"assetsGroupsMatrix,omitempty"`
	// maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
	MaximumAssetsGroupsWeights []float64 `json:"maximumAssetsGroupsWeights,omitempty"`
	// maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
	MaximumAssetsWeights []float64 `json:"maximumAssetsWeights,omitempty"`
	// The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
	MaximumPortfolioExposure *float64 `json:"maximumPortfolioExposure,omitempty"`
	// minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
	MinimumAssetsWeights []float64 `json:"minimumAssetsWeights,omitempty"`
	// The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
	MinimumPortfolioExposure *float64 `json:"minimumPortfolioExposure,omitempty"`
	// The portfolio return; exclusive with portfolioVolatility and riskTolerance
	PortfolioReturn *float64 `json:"portfolioReturn,omitempty"`
	// The portfolio volatility; exclusive with portfolioReturn and riskTolerance
	PortfolioVolatility *float64 `json:"portfolioVolatility,omitempty"`
	// The portfolio risk tolerance; exclusive with portfolioReturn and portfolioVolatility
	RiskTolerance *float64 `json:"riskTolerance,omitempty"`
}

// PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum - The method to aggregate the subset portfolios
type PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum string

const (
	PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnumAverage PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum = "average"
	PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnumMedian  PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum = "median"
)

func (e PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum) ToPointer() *PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum {
	return &e
}

func (e *PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "average":
		fallthrough
	case "median":
		*e = PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum: %v", v)
	}
}

// PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum - The method to enumerate the subset portfolios
type PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum string

const (
	PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnumComplete       PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum = "complete"
	PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnumRandomSampling PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum = "randomSampling"
)

func (e PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum) ToPointer() *PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum {
	return &e
}

func (e *PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "complete":
		fallthrough
	case "randomSampling":
		*e = PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum: %v", v)
	}
}

type PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody struct {
	// The number of assets
	Assets int64 `json:"assets"`
	// assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
	AssetsCovarianceMatrix [][]float64 `json:"assetsCovarianceMatrix"`
	// assetsReturns[i] is the arithmetic return of asset i
	AssetsReturns []float64                                                                                 `json:"assetsReturns"`
	Constraints   PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodyConstraints `json:"constraints"`
	// The number of subset portfolios to compute; only applicable if the enumeration method for the subset portfolios is random sampling
	SubsetPortfolios *int64 `json:"subsetPortfolios,omitempty"`
	// The method to aggregate the subset portfolios
	SubsetPortfoliosAggregationMethod *PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum `json:"subsetPortfoliosAggregationMethod,omitempty"`
	// The method to enumerate the subset portfolios
	SubsetPortfoliosEnumerationMethod *PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum `json:"subsetPortfoliosEnumerationMethod,omitempty"`
	// The number of assets to include in each subset portfolio; defaults to a value of order the square root of the total number of assets
	SubsetSize *int64 `json:"subsetSize,omitempty"`
}

// PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBased200ApplicationJSON - OK
type PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBased200ApplicationJSON struct {
	// assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
	AssetsWeights []float64 `json:"assetsWeights"`
}

type PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBased200ApplicationJSONObject *PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBased200ApplicationJSON
}
