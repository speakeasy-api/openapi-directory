/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomerFieldsWithBillingAddressAndShippingAddressFields } from "./customerfieldswithbillingaddressandshippingaddressfields";
import { OrderProductOrderCreate } from "./orderproductordercreate";
import { Expose, Type } from "class-transformer";

/**
 * Status of the Order
 */
export enum OrderCreateFieldsStatusEnum {
  Abandoned = "Abandoned",
  Canceled = "Canceled",
  PendingPayment = "Pending Payment",
  Paid = "Paid",
}

export class OrderCreateFields extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "customer" })
  @Type(() => CustomerFieldsWithBillingAddressAndShippingAddressFields)
  customer?: CustomerFieldsWithBillingAddressAndShippingAddressFields;

  @SpeakeasyMetadata({ elemType: OrderProductOrderCreate })
  @Expose({ name: "products" })
  @Type(() => OrderProductOrderCreate)
  products?: OrderProductOrderCreate[];

  /**
   * Shipping method id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipping_method_id" })
  shippingMethodId?: number;

  /**
   * Shipping method name e.g. Royal Mail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipping_method_name" })
  shippingMethodName?: string;

  /**
   * Shipping method's price (applicable if shipping_method_name is provided instead of a shipping_method_id)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipping_price" })
  shippingPrice?: number;

  /**
   * Status of the Order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: OrderCreateFieldsStatusEnum;
}
