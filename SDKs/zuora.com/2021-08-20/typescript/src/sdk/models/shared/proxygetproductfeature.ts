/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Container for custom fields of a Product Feature object.
 *
 * @remarks
 *
 */
export class ProxyGetProductFeature extends SpeakeasyBase {
  /**
   * The ID of the Zuora user who created the Account object. **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedById" })
  createdById?: string;

  /**
   * The date when the Account object was created. **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   *  Internal Zuora ID of the product feature. This field is not editable.
   *
   * @remarks
   * **Character limit**: 32 **Values**: a string of 32 characters or fewer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FeatureId" })
  featureId?: string;

  /**
   * Object identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  /**
   *  Id of the product to which the feature belongs. This field is not editable.
   *
   * @remarks
   * **Character limit**: 32 **Values**: a string of 32 characters or fewer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId?: string;

  /**
   * The ID of the user who last updated the account. **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedById" })
  updatedById?: string;

  /**
   * The date when the account was last updated. **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
