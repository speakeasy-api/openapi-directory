"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PatientAllergySnomedReactionEnum(str, Enum):
    r"""SNOMED code for the reaction. For possible SnoMED codes, please see [this link from PHIN VADS](https://phinvads.cdc.gov/vads/ViewValueSet.action?id=896AABB4-5ACD-DE11-913D-0015173D1785)"""
    UNKNOWN = ''
    FOURTEEN_MILLION_SIX_HUNDRED_AND_SIXTY_NINE_THOUSAND_AND_ONE = '14669001'
    THIRTY_NINE_MILLION_FIVE_HUNDRED_AND_SEVENTY_NINE_THOUSAND_AND_ONE = '39579001'
    FIFTY_SEVEN_MILLION_SIX_HUNDRED_AND_SEVENTY_SIX_THOUSAND_AND_TWO = '57676002'
    FORTY_THREE_MILLION_SEVEN_HUNDRED_AND_TWENTY_FOUR_THOUSAND_AND_TWO = '43724002'
    FORTY_NINE_MILLION_SEVEN_HUNDRED_AND_TWENTY_SEVEN_THOUSAND_AND_TWO = '49727002'
    THREE_HUNDRED_AND_EIGHTY_SIX_MILLION_SIX_HUNDRED_AND_SIXTY_ONE_THOUSAND_AND_SIX = '386661006'
    TWENTY_FIVE_MILLION_SIXTY_FOUR_THOUSAND_AND_TWO = '25064002'
    TWO_HUNDRED_AND_FORTY_SEVEN_MILLION_FOUR_HUNDRED_AND_SEVENTY_TWO_THOUSAND_AND_FOUR = '247472004'
    TWO_HUNDRED_AND_SEVENTY_ONE_MILLION_SEVEN_HUNDRED_AND_NINETY_FIVE_THOUSAND_AND_SIX = '271795006'
    SIXTY_EIGHT_MILLION_NINE_HUNDRED_AND_SIXTY_TWO_THOUSAND_AND_ONE = '68962001'
    SIXTY_EIGHT_MILLION_TWO_HUNDRED_AND_THIRTY_FIVE_THOUSAND = '68235000'
    FOUR_HUNDRED_AND_TWENTY_TWO_MILLION_FIVE_HUNDRED_AND_EIGHTY_SEVEN_THOUSAND_AND_SEVEN = '422587007'
    NINETY_FIVE_MILLION_THREE_HUNDRED_AND_EIGHTY_EIGHT_THOUSAND = '95388000'
    TWO_HUNDRED_AND_SEVENTY_ONE_MILLION_EIGHT_HUNDRED_AND_SEVEN_THOUSAND_AND_THREE = '271807003'
    TWO_HUNDRED_AND_SEVENTY_ONE_MILLION_EIGHT_HUNDRED_AND_TWENTY_FIVE_THOUSAND_AND_FIVE = '271825005'
    SIXTY_FOUR_MILLION_FIVE_HUNDRED_AND_THIRTY_ONE_THOUSAND_AND_THREE = '64531003'
    TWO_HUNDRED_AND_SIXTY_SEVEN_MILLION_THIRTY_SIX_THOUSAND_AND_SEVEN = '267036007'
    ONE_HUNDRED_AND_SIXTY_TWO_MILLION_THREE_HUNDRED_AND_NINETY_SEVEN_THOUSAND_AND_THREE = '162397003'
    SIXTY_FIVE_MILLION_ONE_HUNDRED_AND_TWENTY_FOUR_THOUSAND_AND_FOUR = '65124004'

class PatientAllergyStatusEnum(str, Enum):
    r"""One of `\\"active\\"`, `\\"inactive\\"`. If absent in `POST`, default to `\\"active\\"`"""
    ACTIVE = 'active'
    INACTIVE = 'inactive'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatientAllergy:
    r"""Created"""
    
    doctor: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doctor') }})
    r"""Id of the doctor who diagnosed the allergy"""  
    patient: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('patient') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the allergy, such as `\\"Cat hair\\"`"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Any additional notes from the provider"""  
    reaction: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reaction'), 'exclude': lambda f: f is None }})
    r"""Short description of the patient's allergic reaction, such as `\\"Hives\\"`"""  
    rxnorm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rxnorm'), 'exclude': lambda f: f is None }})
    r"""If the allergy is a drug allergy, this is the RxNorm code of the drug"""  
    snomed_reaction: Optional[PatientAllergySnomedReactionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snomed_reaction'), 'exclude': lambda f: f is None }})
    r"""SNOMED code for the reaction. For possible SnoMED codes, please see [this link from PHIN VADS](https://phinvads.cdc.gov/vads/ViewValueSet.action?id=896AABB4-5ACD-DE11-913D-0015173D1785)"""  
    status: Optional[PatientAllergyStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""One of `\\"active\\"`, `\\"inactive\\"`. If absent in `POST`, default to `\\"active\\"`"""  
    