/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SecurityPolicyRule - Represents a rule that describes one or more match conditions along with the action to be taken when traffic matches this condition (allow or deny).
 */
public class SecurityPolicyRule {
    /**
     * The Action to perform when the rule is matched. The following are the valid actions: - allow: allow access to target. - deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for `STATUS` are 403, 404, and 502. - rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rate_limit_options to be set. - redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. - throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rate_limit_options to be set for this. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public String action;
    public SecurityPolicyRule withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public SecurityPolicyRule withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The direction in which this rule applies. This field may only be specified when versioned_expr is set to FIREWALL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public SecurityPolicyRuleDirectionEnum direction;
    public SecurityPolicyRule withDirection(SecurityPolicyRuleDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Denotes whether to enable logging for a particular rule. If logging is enabled, logs will be exported to the configured export destination in Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot enable logging on "goto_next" rules. This field may only be specified when the versioned_expr is set to FIREWALL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableLogging")
    public Boolean enableLogging;
    public SecurityPolicyRule withEnableLogging(Boolean enableLogging) {
        this.enableLogging = enableLogging;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headerAction")
    public SecurityPolicyRuleHttpHeaderAction headerAction;
    public SecurityPolicyRule withHeaderAction(SecurityPolicyRuleHttpHeaderAction headerAction) {
        this.headerAction = headerAction;
        return this;
    }
    
    /**
     * [Output only] Type of the resource. Always compute#securityPolicyRule for security policy rules
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public SecurityPolicyRule withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Represents a match condition that incoming traffic is evaluated against. Exactly one field must be specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("match")
    public SecurityPolicyRuleMatcher match;
    public SecurityPolicyRule withMatch(SecurityPolicyRuleMatcher match) {
        this.match = match;
        return this;
    }
    
    /**
     * Represents a match condition that incoming network traffic is evaluated against.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkMatch")
    public SecurityPolicyRuleNetworkMatcher networkMatch;
    public SecurityPolicyRule withNetworkMatch(SecurityPolicyRuleNetworkMatcher networkMatch) {
        this.networkMatch = networkMatch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preconfiguredWafConfig")
    public SecurityPolicyRulePreconfiguredWafConfig preconfiguredWafConfig;
    public SecurityPolicyRule withPreconfiguredWafConfig(SecurityPolicyRulePreconfiguredWafConfig preconfiguredWafConfig) {
        this.preconfiguredWafConfig = preconfiguredWafConfig;
        return this;
    }
    
    /**
     * If set to true, the specified action is not enforced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preview")
    public Boolean preview;
    public SecurityPolicyRule withPreview(Boolean preview) {
        this.preview = preview;
        return this;
    }
    
    /**
     * An integer indicating the priority of a rule in the list. The priority must be a positive value between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public Integer priority;
    public SecurityPolicyRule withPriority(Integer priority) {
        this.priority = priority;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rateLimitOptions")
    public SecurityPolicyRuleRateLimitOptions rateLimitOptions;
    public SecurityPolicyRule withRateLimitOptions(SecurityPolicyRuleRateLimitOptions rateLimitOptions) {
        this.rateLimitOptions = rateLimitOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirectOptions")
    public SecurityPolicyRuleRedirectOptions redirectOptions;
    public SecurityPolicyRule withRedirectOptions(SecurityPolicyRuleRedirectOptions redirectOptions) {
        this.redirectOptions = redirectOptions;
        return this;
    }
    
    /**
     * This must be specified for redirect actions. Cannot be specified for any other actions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirectTarget")
    public String redirectTarget;
    public SecurityPolicyRule withRedirectTarget(String redirectTarget) {
        this.redirectTarget = redirectTarget;
        return this;
    }
    
    /**
     * [Output Only] The minimum managed protection tier required for this rule. [Deprecated] Use requiredManagedProtectionTiers instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleManagedProtectionTier")
    public SecurityPolicyRuleRuleManagedProtectionTierEnum ruleManagedProtectionTier;
    public SecurityPolicyRule withRuleManagedProtectionTier(SecurityPolicyRuleRuleManagedProtectionTierEnum ruleManagedProtectionTier) {
        this.ruleManagedProtectionTier = ruleManagedProtectionTier;
        return this;
    }
    
    /**
     * Identifier for the rule. This is only unique within the given security policy. This can only be set during rule creation, if rule number is not specified it will be generated by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleNumber")
    public String ruleNumber;
    public SecurityPolicyRule withRuleNumber(String ruleNumber) {
        this.ruleNumber = ruleNumber;
        return this;
    }
    
    /**
     * [Output Only] Calculation of the complexity of a single firewall security policy rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleTupleCount")
    public Integer ruleTupleCount;
    public SecurityPolicyRule withRuleTupleCount(Integer ruleTupleCount) {
        this.ruleTupleCount = ruleTupleCount;
        return this;
    }
    
    /**
     * A list of network resource URLs to which this rule applies. This field allows you to control which network's VMs get this rule. If this field is left blank, all VMs within the organization will receive the rule. This field may only be specified when versioned_expr is set to FIREWALL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetResources")
    public String[] targetResources;
    public SecurityPolicyRule withTargetResources(String[] targetResources) {
        this.targetResources = targetResources;
        return this;
    }
    
    /**
     * A list of service accounts indicating the sets of instances that are applied with this rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetServiceAccounts")
    public String[] targetServiceAccounts;
    public SecurityPolicyRule withTargetServiceAccounts(String[] targetServiceAccounts) {
        this.targetServiceAccounts = targetServiceAccounts;
        return this;
    }
    
}
