<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BatchGetDocumentsRequest - The request for Firestore.BatchGetDocuments.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BatchGetDocumentsRequest
{
    /**
     * The names of the documents to retrieve. In the format: `projects/{project_id}/databases/{database_id}/documents/{document_path}`. The request will fail if any of the document is not a child resource of the given `database`. Duplicate names will be elided.
     * 
     * @var ?array<string> $documents
     */
	#[\JMS\Serializer\Annotation\SerializedName('documents')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $documents = null;
    
    /**
     * A set of field paths on a document. Used to restrict a get or update operation on a document to a subset of its fields. This is different from standard field masks, as this is always scoped to a Document, and takes in account the dynamic nature of Value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DocumentMask $mask
     */
	#[\JMS\Serializer\Annotation\SerializedName('mask')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DocumentMask')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DocumentMask $mask = null;
    
    /**
     * Options for creating a new transaction.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionOptions $newTransaction
     */
	#[\JMS\Serializer\Annotation\SerializedName('newTransaction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionOptions $newTransaction = null;
    
    /**
     * Reads documents as they were at the given time. This may not be older than 270 seconds.
     * 
     * @var ?string $readTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('readTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $readTime = null;
    
    /**
     * Reads documents in a transaction.
     * 
     * @var ?string $transaction
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transaction = null;
    
	public function __construct()
	{
		$this->documents = null;
		$this->mask = null;
		$this->newTransaction = null;
		$this->readTime = null;
		$this->transaction = null;
	}
}
