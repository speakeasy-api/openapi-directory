/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EntryDetailsElement {
    /**
     * Identification of a Cheque.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkId")
    public String checkId;

    public EntryDetailsElement withCheckId(String checkId) {
        this.checkId = checkId;
        return this;
    }
    
    /**
     * Reference to an account by either
     *   * IBAN, of a payment accounts, or
     *   * otherAccountIdentification, for payment accounts if there is no IBAN
     * adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorAccount")
    public AccountReference16CH creditorAccount;

    public EntryDetailsElement withCreditorAccount(AccountReference16CH creditorAccount) {
        this.creditorAccount = creditorAccount;
        return this;
    }
    
    /**
     * BICFI
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorAgent")
    public String creditorAgent;

    public EntryDetailsElement withCreditorAgent(String creditorAgent) {
        this.creditorAgent = creditorAgent;
        return this;
    }
    
    /**
     * Identification of Creditors, e.g. a SEPA Creditor ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorId")
    public String creditorId;

    public EntryDetailsElement withCreditorId(String creditorId) {
        this.creditorId = creditorId;
        return this;
    }
    
    /**
     * Creditor name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorName")
    public String creditorName;

    public EntryDetailsElement withCreditorName(String creditorName) {
        this.creditorName = creditorName;
        return this;
    }
    
    /**
     * Array of exchange rates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyExchange")
    public ReportExchangeRate[] currencyExchange;

    public EntryDetailsElement withCurrencyExchange(ReportExchangeRate[] currencyExchange) {
        this.currencyExchange = currencyExchange;
        return this;
    }
    
    /**
     * Reference to an account by either
     *   * IBAN, of a payment accounts, or
     *   * otherAccountIdentification, for payment accounts if there is no IBAN
     * adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debtorAccount")
    public AccountReference16CH debtorAccount;

    public EntryDetailsElement withDebtorAccount(AccountReference16CH debtorAccount) {
        this.debtorAccount = debtorAccount;
        return this;
    }
    
    /**
     * BICFI
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debtorAgent")
    public String debtorAgent;

    public EntryDetailsElement withDebtorAgent(String debtorAgent) {
        this.debtorAgent = debtorAgent;
        return this;
    }
    
    /**
     * Debtor name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debtorName")
    public String debtorName;

    public EntryDetailsElement withDebtorName(String debtorName) {
        this.debtorName = debtorName;
        return this;
    }
    
    /**
     * Unique end to end identity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endToEndId")
    public String endToEndId;

    public EntryDetailsElement withEndToEndId(String endToEndId) {
        this.endToEndId = endToEndId;
        return this;
    }
    
    /**
     * Identification of Mandates, e.g. a SEPA Mandate ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandateId")
    public String mandateId;

    public EntryDetailsElement withMandateId(String mandateId) {
        this.mandateId = mandateId;
        return this;
    }
    
    /**
     * ExternalPurpose1Code from ISO 20022.
     * 
     * Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purposeCode")
    public PurposeCodeEnum purposeCode;

    public EntryDetailsElement withPurposeCode(PurposeCodeEnum purposeCode) {
        this.purposeCode = purposeCode;
        return this;
    }
    
    /**
     * Structured remittance information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remittanceInformationStructured")
    public RemittanceInformationStructured remittanceInformationStructured;

    public EntryDetailsElement withRemittanceInformationStructured(RemittanceInformationStructured remittanceInformationStructured) {
        this.remittanceInformationStructured = remittanceInformationStructured;
        return this;
    }
    
    /**
     * Array of structured remittance information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remittanceInformationStructuredArray")
    public RemittanceInformationStructured[] remittanceInformationStructuredArray;

    public EntryDetailsElement withRemittanceInformationStructuredArray(RemittanceInformationStructured[] remittanceInformationStructuredArray) {
        this.remittanceInformationStructuredArray = remittanceInformationStructuredArray;
        return this;
    }
    
    /**
     * Unstructured remittance information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remittanceInformationUnstructured")
    public String remittanceInformationUnstructured;

    public EntryDetailsElement withRemittanceInformationUnstructured(String remittanceInformationUnstructured) {
        this.remittanceInformationUnstructured = remittanceInformationUnstructured;
        return this;
    }
    
    /**
     * Array of unstructured remittance information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remittanceInformationUnstructuredArray")
    public String[] remittanceInformationUnstructuredArray;

    public EntryDetailsElement withRemittanceInformationUnstructuredArray(String[] remittanceInformationUnstructuredArray) {
        this.remittanceInformationUnstructuredArray = remittanceInformationUnstructuredArray;
        return this;
    }
    
    @JsonProperty("transactionAmount")
    public Amount transactionAmount;

    public EntryDetailsElement withTransactionAmount(Amount transactionAmount) {
        this.transactionAmount = transactionAmount;
        return this;
    }
    
    /**
     * Ultimate creditor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ultimateCreditor")
    public String ultimateCreditor;

    public EntryDetailsElement withUltimateCreditor(String ultimateCreditor) {
        this.ultimateCreditor = ultimateCreditor;
        return this;
    }
    
    /**
     * Ultimate debtor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ultimateDebtor")
    public String ultimateDebtor;

    public EntryDetailsElement withUltimateDebtor(String ultimateDebtor) {
        this.ultimateDebtor = ultimateDebtor;
        return this;
    }
    
    public EntryDetailsElement(@JsonProperty("transactionAmount") Amount transactionAmount) {
        this.transactionAmount = transactionAmount;
  }
}
