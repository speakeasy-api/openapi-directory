// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CheckFailureReasonEnum string

const (
	CheckFailureReasonEnumAssumeRoleError        CheckFailureReasonEnum = "ASSUME_ROLE_ERROR"
	CheckFailureReasonEnumAccessDenied           CheckFailureReasonEnum = "ACCESS_DENIED"
	CheckFailureReasonEnumUnknownError           CheckFailureReasonEnum = "UNKNOWN_ERROR"
	CheckFailureReasonEnumPremiumSupportRequired CheckFailureReasonEnum = "PREMIUM_SUPPORT_REQUIRED"
)

func (e CheckFailureReasonEnum) ToPointer() *CheckFailureReasonEnum {
	return &e
}

func (e *CheckFailureReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASSUME_ROLE_ERROR":
		fallthrough
	case "ACCESS_DENIED":
		fallthrough
	case "UNKNOWN_ERROR":
		fallthrough
	case "PREMIUM_SUPPORT_REQUIRED":
		*e = CheckFailureReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckFailureReasonEnum: %v", v)
	}
}
