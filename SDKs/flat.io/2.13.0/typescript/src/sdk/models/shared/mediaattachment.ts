/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MediaScoreSharingModeEnum } from "./mediascoresharingmodeenum";
import { Expose } from "class-transformer";

/**
 * The type of the assignment resolved:
 *
 * @remarks
 * * `rich`, `photo`, `video` are attachment types that are automatically resolved from a `link` attachment.
 * * A `flat` attachment is a score document where the unique identifier will be specified in the `score` property. Its sharing mode will be provided in the `sharingMode` property.
 *
 */
export enum MediaAttachmentTypeEnum {
  Rich = "rich",
  Photo = "photo",
  Video = "video",
  Link = "link",
  Flat = "flat",
  GoogleDrive = "googleDrive",
  Worksheet = "worksheet",
  Performance = "performance",
}

/**
 * Media attachment. The API will automatically resolve the details, oEmbed,
 *
 * @remarks
 * and media available if possible and return them in this object
 *
 */
export class MediaAttachment extends SpeakeasyBase {
  /**
   * The resolved author name of the attachment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorName" })
  authorName?: string;

  /**
   * The resolved author url of the attachment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorUrl" })
  authorUrl?: string;

  /**
   * The resolved description of the attachment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The ID of the Google Drive File
   */
  @SpeakeasyMetadata()
  @Expose({ name: "googleDriveFileId" })
  googleDriveFileId?: string;

  /**
   * If the attachment type is `rich` or `video`, the HTML code of the
   *
   * @remarks
   * media to display
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "html" })
  html?: string;

  /**
   * If the `html` is available, the height of the widget
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlHeight" })
  htmlHeight?: string;

  /**
   * If the `html` is available, the width of the widget
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlWidth" })
  htmlWidth?: string;

  /**
   * The URL of the icon
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iconUrl" })
  iconUrl?: string;

  /**
   * To be used with a score attached in `sharingMode` `copy` (score used as template). If true, students won't be able to change the original notes of the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockScoreTemplate" })
  lockScoreTemplate?: boolean;

  /**
   * The mine type of the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mimeType" })
  mimeType?: string;

  /**
   * An unique revision identifier of a score
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revision" })
  revision?: string;

  /**
   * An unique Flat score identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score?: string;

  /**
   * The sharing mode of the score for classes post and assignments
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sharingMode" })
  sharingMode?: MediaScoreSharingModeEnum;

  /**
   * If the `thumbnailUrl` is available, the width of the thumbnail
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailHeight" })
  thumbnailHeight?: number;

  /**
   * If the attachment type is `rich`, `video`, `photo` or `link`, a
   *
   * @remarks
   * displayable thumbnail for this attachment
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailUrl" })
  thumbnailUrl?: string;

  /**
   * If the `thumbnailUrl` is available, the width of the thumbnail
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailWidth" })
  thumbnailWidth?: number;

  /**
   * The resolved title of the attachment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * A unique track identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "track" })
  track?: string;

  /**
   * The type of the assignment resolved:
   *
   * @remarks
   * * `rich`, `photo`, `video` are attachment types that are automatically resolved from a `link` attachment.
   * * A `flat` attachment is a score document where the unique identifier will be specified in the `score` property. Its sharing mode will be provided in the `sharingMode` property.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: MediaAttachmentTypeEnum;

  /**
   * The url of the attachment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * An unique worksheet identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "worksheet" })
  worksheet?: string;
}
