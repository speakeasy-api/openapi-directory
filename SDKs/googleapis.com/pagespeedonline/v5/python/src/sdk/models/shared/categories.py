"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lighthousecategoryv5 as shared_lighthousecategoryv5
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Categories:
    r"""The categories in a Lighthouse run."""
    
    accessibility: Optional[shared_lighthousecategoryv5.LighthouseCategoryV5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessibility'), 'exclude': lambda f: f is None }})
    r"""A Lighthouse category."""  
    best_practices: Optional[shared_lighthousecategoryv5.LighthouseCategoryV5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('best-practices'), 'exclude': lambda f: f is None }})
    r"""A Lighthouse category."""  
    performance: Optional[shared_lighthousecategoryv5.LighthouseCategoryV5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('performance'), 'exclude': lambda f: f is None }})
    r"""A Lighthouse category."""  
    pwa: Optional[shared_lighthousecategoryv5.LighthouseCategoryV5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pwa'), 'exclude': lambda f: f is None }})
    r"""A Lighthouse category."""  
    seo: Optional[shared_lighthousecategoryv5.LighthouseCategoryV5] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seo'), 'exclude': lambda f: f is None }})
    r"""A Lighthouse category."""  
    