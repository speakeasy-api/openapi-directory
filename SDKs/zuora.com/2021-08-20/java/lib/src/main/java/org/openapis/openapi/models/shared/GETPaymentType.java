/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * GETPaymentType - Container for custom fields of a Payment object.
 * 
 */
public class GETPaymentType {
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public GETPaymentType withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the payment's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public GETPaymentType withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Origin of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Origin__NS")
    public String originNS;
    public GETPaymentType withOriginNS(String originNS) {
        this.originNS = originNS;
        return this;
    }
    
    /**
     * Date when the payment was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public GETPaymentType withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * Related transaction in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Transaction__NS")
    public String transactionNS;
    public GETPaymentType withTransactionNS(String transactionNS) {
        this.transactionNS = transactionNS;
        return this;
    }
    
    /**
     * Customer account ID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountID")
    public String accountID;
    public GETPaymentType withAccountID(String accountID) {
        this.accountID = accountID;
        return this;
    }
    
    /**
     * Customer account name.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountName")
    public String accountName;
    public GETPaymentType withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }
    
    /**
     * Customer account number.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public GETPaymentType withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * Payment amount.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public String amount;
    public GETPaymentType withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Effective payment date as _yyyy-mm-dd_.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("effectiveDate")
    public LocalDate effectiveDate;
    public GETPaymentType withEffectiveDate(LocalDate effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }
    
    /**
     * Transaction ID from payment gateway.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatewayTransactionNumber")
    public String gatewayTransactionNumber;
    public GETPaymentType withGatewayTransactionNumber(String gatewayTransactionNumber) {
        this.gatewayTransactionNumber = gatewayTransactionNumber;
        return this;
    }
    
    /**
     * PaymentID.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETPaymentType withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Information about one or more invoices to which this payment was applied:
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paidInvoices")
    public GETPaidInvoicesType[] paidInvoices;
    public GETPaymentType withPaidInvoices(GETPaidInvoicesType[] paidInvoices) {
        this.paidInvoices = paidInvoices;
        return this;
    }
    
    /**
     * Payment method.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentMethodID")
    public String paymentMethodID;
    public GETPaymentType withPaymentMethodID(String paymentMethodID) {
        this.paymentMethodID = paymentMethodID;
        return this;
    }
    
    /**
     * Unique payment number.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentNumber")
    public String paymentNumber;
    public GETPaymentType withPaymentNumber(String paymentNumber) {
        this.paymentNumber = paymentNumber;
        return this;
    }
    
    /**
     * Possible values are: `Draft`, `Processing`, `Processed`, `Error`, `Voided`, `Canceled`, `Posted.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public GETPaymentType withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Possible values are: `External`, `Electronic`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public GETPaymentType withType(String type) {
        this.type = type;
        return this;
    }
    
}
