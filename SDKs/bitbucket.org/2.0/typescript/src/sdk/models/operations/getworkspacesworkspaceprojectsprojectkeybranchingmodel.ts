/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetWorkspacesWorkspaceProjectsProjectKeyBranchingModelSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey?: string;

  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2?: string;
}

export class GetWorkspacesWorkspaceProjectsProjectKeyBranchingModelRequest extends SpeakeasyBase {
  /**
   * The project in question. This is the actual `key` assigned
   *
   * @remarks
   * to the project.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project_key",
  })
  projectKey: string;

  /**
   * This can either be the workspace ID (slug) or the workspace UUID
   *
   * @remarks
   * surrounded by curly-braces, for example: `{workspace UUID}`.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=workspace",
  })
  workspace: string;
}

export class GetWorkspacesWorkspaceProjectsProjectKeyBranchingModelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * If the request was not authenticated
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * The branching model object
   */
  @SpeakeasyMetadata()
  projectBranchingModel?: Record<string, any>;
}
