"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .browser import Browser
from .client_invoices import ClientInvoices
from .clients import Clients
from .currency_exchange_rates import CurrencyExchangeRates
from .dictionaries import Dictionaries
from .files import Files
from .jobs_classic_ import JobsClassic
from .jobs_smart_v2_ import JobsSmartV2
from .license import License
from .macros import Macros
from .projects_classic_ import ProjectsClassic
from .projects_smart_v2_ import ProjectsSmartV2
from .quotes_classic_ import QuotesClassic
from .quotes_smart_v2_ import QuotesSmartV2
from .reports import Reports
from .subscription import Subscription
from .tasks_classic_ import TasksClassic
from .users import Users
from .vendor_invoices import VendorInvoices
from .vendors import Vendors
from sdk.models import shared

SERVERS = [
    "https://presentation.s.xtrf.eu/home-api",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\\"/home-api/openapi.json\\">here</a> <br>
      The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here:
    """
    browser: Browser
    r"""To change the description use /examples/TagsDescriptions.json"""
    client_invoices: ClientInvoices
    r"""To change the description use /examples/TagsDescriptions.json"""
    clients: Clients
    r"""To change the description use /examples/TagsDescriptions.json"""
    currency_exchange_rates: CurrencyExchangeRates
    r"""To change the description use /examples/TagsDescriptions.json"""
    dictionaries: Dictionaries
    r"""To change the description use /examples/TagsDescriptions.json"""
    files: Files
    r"""To change the description use /examples/TagsDescriptions.json"""
    jobs_classic: JobsClassic
    r"""To change the description use /examples/TagsDescriptions.json"""
    jobs_smart_v2: JobsSmartV2
    r"""To change the description use /examples/TagsDescriptions.json"""
    license: License
    r"""To change the description use /examples/TagsDescriptions.json"""
    macros: Macros
    r"""To change the description use /examples/TagsDescriptions.json"""
    projects_classic: ProjectsClassic
    r"""To change the description use /examples/TagsDescriptions.json"""
    projects_smart_v2: ProjectsSmartV2
    r"""To change the description use /examples/TagsDescriptions.json"""
    quotes_classic: QuotesClassic
    r"""To change the description use /examples/TagsDescriptions.json"""
    quotes_smart_v2: QuotesSmartV2
    r"""To change the description use /examples/TagsDescriptions.json"""
    reports: Reports
    r"""To change the description use /examples/TagsDescriptions.json"""
    subscription: Subscription
    r"""To change the description use /examples/TagsDescriptions.json"""
    tasks_classic: TasksClassic
    r"""To change the description use /examples/TagsDescriptions.json"""
    users: Users
    r"""To change the description use /examples/TagsDescriptions.json"""
    vendor_invoices: VendorInvoices
    r"""To change the description use /examples/TagsDescriptions.json"""
    vendors: Vendors
    r"""To change the description use /examples/TagsDescriptions.json"""

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 security: shared.Security = None,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param security: The security details required for authentication
        :type security: shared.Security
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = utils.configure_security_client(self._client, security)
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.browser = Browser(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.client_invoices = ClientInvoices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.clients = Clients(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.currency_exchange_rates = CurrencyExchangeRates(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.dictionaries = Dictionaries(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.files = Files(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.jobs_classic = JobsClassic(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.jobs_smart_v2 = JobsSmartV2(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.license = License(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.macros = Macros(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.projects_classic = ProjectsClassic(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.projects_smart_v2 = ProjectsSmartV2(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.quotes_classic = QuotesClassic(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.quotes_smart_v2 = QuotesSmartV2(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.reports = Reports(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.subscription = Subscription(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.tasks_classic = TasksClassic(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.users = Users(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vendor_invoices = VendorInvoices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vendors = Vendors(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    