"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudcontactcenterinsightsv1sentimentdata as shared_googlecloudcontactcenterinsightsv1sentimentdata
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudContactcenterinsightsV1EntityMentionDataTypeEnum(str, Enum):
    r"""The type of the entity mention."""
    MENTION_TYPE_UNSPECIFIED = 'MENTION_TYPE_UNSPECIFIED'
    PROPER = 'PROPER'
    COMMON = 'COMMON'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1EntityMentionData:
    r"""The data for an entity mention annotation. This represents a mention of an `Entity` in the conversation."""
    
    entity_unique_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entityUniqueId'), 'exclude': lambda f: f is None }})
    r"""The key of this entity in conversation entities. Can be used to retrieve the exact `Entity` this mention is attached to."""  
    sentiment: Optional[shared_googlecloudcontactcenterinsightsv1sentimentdata.GoogleCloudContactcenterinsightsV1SentimentData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sentiment'), 'exclude': lambda f: f is None }})
    r"""The data for a sentiment annotation."""  
    type: Optional[GoogleCloudContactcenterinsightsV1EntityMentionDataTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the entity mention."""  
    