/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrderForEvergreen - Represents the order information that will be returned in the GET call.
 */
public class OrderForEvergreen {
    /**
     * The ID of the user who created this order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public String createdBy;
    public OrderForEvergreen withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * The time that the order gets created in the system, in the `YYYY-MM-DD HH:MM:SS` format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdDate")
    public String createdDate;
    public OrderForEvergreen withCreatedDate(String createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * Currency code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public OrderForEvergreen withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Container for custom fields of an Order object.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public java.util.Map<String, Object> customFields;
    public OrderForEvergreen withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * A description of the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public OrderForEvergreen withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The account number that this order has been created under. This is also the invoice owner of the subscriptions included in this order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("existingAccountNumber")
    public String existingAccountNumber;
    public OrderForEvergreen withExistingAccountNumber(String existingAccountNumber) {
        this.existingAccountNumber = existingAccountNumber;
        return this;
    }
    
    /**
     * The date when the order is signed. All the order actions under this order will use this order date as the contract effective date if no additinal contractEffectiveDate is provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderDate")
    public String orderDate;
    public OrderForEvergreen withOrderDate(String orderDate) {
        this.orderDate = orderDate;
        return this;
    }
    
    /**
     * The order number of the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderNumber")
    public String orderNumber;
    public OrderForEvergreen withOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
        return this;
    }
    
    /**
     * The status of the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public OrderForEvergreen withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Represents a processed subscription, including the origin request (order actions) that create this version of subscription and the processing result (order metrics). The reference part in the request will be overridden with the info in the new subscription version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptions")
    public OrderForEvergreenSubscriptions[] subscriptions;
    public OrderForEvergreen withSubscriptions(OrderForEvergreenSubscriptions[] subscriptions) {
        this.subscriptions = subscriptions;
        return this;
    }
    
    /**
     * The ID of the user who updated this order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public String updatedBy;
    public OrderForEvergreen withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
    /**
     * The time that the order gets updated in the system (for example, an order description update), in the `YYYY-MM-DD HH:MM:SS` format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedDate")
    public String updatedDate;
    public OrderForEvergreen withUpdatedDate(String updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
