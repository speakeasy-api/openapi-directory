/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DistributionGroupsGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class DistributionGroupsGetRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the distribution group
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=distribution_group_name",
  })
  distributionGroupName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum DistributionGroupsGetDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class DistributionGroupsGetDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: DistributionGroupsGetDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class DistributionGroupsGetDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => DistributionGroupsGetDefaultApplicationJSONError)
  error: DistributionGroupsGetDefaultApplicationJSONError;
}

/**
 * The creation origin of this distribution group
 */
export enum DistributionGroupsGet200ApplicationJSONOriginEnum {
  Appcenter = "appcenter",
  Hockeyapp = "hockeyapp",
}

/**
 * Success
 */
export class DistributionGroupsGet200ApplicationJSON extends SpeakeasyBase {
  /**
   * The name of the distribution group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * The unique ID of the distribution group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Whether the distribution group is public
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_public" })
  isPublic: boolean;

  /**
   * The name of the distribution group used in URLs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The creation origin of this distribution group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: DistributionGroupsGet200ApplicationJSONOriginEnum;
}

export class DistributionGroupsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  distributionGroupsGet200ApplicationJSONObject?: DistributionGroupsGet200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  distributionGroupsGetDefaultApplicationJSONObject?: DistributionGroupsGetDefaultApplicationJSON;
}
