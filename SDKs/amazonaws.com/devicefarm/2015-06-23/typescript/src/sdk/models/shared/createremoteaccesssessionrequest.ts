/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CreateRemoteAccessSessionConfiguration } from "./createremoteaccesssessionconfiguration";
import { InteractionModeEnum } from "./interactionmodeenum";
import { Expose, Type } from "class-transformer";

/**
 * Creates and submits a request to start a remote access session.
 */
export class CreateRemoteAccessSessionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  @Type(() => CreateRemoteAccessSessionConfiguration)
  configuration?: CreateRemoteAccessSessionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceArn" })
  deviceArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceArn" })
  instanceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "interactionMode" })
  interactionMode?: InteractionModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "projectArn" })
  projectArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "remoteDebugEnabled" })
  remoteDebugEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "remoteRecordAppArn" })
  remoteRecordAppArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "remoteRecordEnabled" })
  remoteRecordEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "skipAppResign" })
  skipAppResign?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sshPublicKey" })
  sshPublicKey?: string;
}
