/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRetailV2betaUserEvent - UserEvent captures all metadata information Retail API needs to know about how end users interact with customers' website.
 */
public class GoogleCloudRetailV2betaUserEvent {
    /**
     * Extra user event features to include in the recommendation model. If you provide custom attributes for ingested user events, also include them in the user events that you associate with prediction requests. Custom attribute formatting must be consistent between imported events and events provided with prediction requests. This lets the Retail API use those custom attributes when training models and serving predictions, which helps improve recommendation quality. This field needs to pass all below criteria, otherwise an INVALID_ARGUMENT error is returned: * The key must be a UTF-8 encoded string with a length limit of 5,000 characters. * For text attributes, at most 400 values are allowed. Empty values are not allowed. Each value must be a UTF-8 encoded string with a length limit of 256 characters. * For number attributes, at most 400 values are allowed. For product recommendations, an example of extra user information is traffic_channel, which is how a user arrives at the site. Users can arrive at the site by coming to the site directly, coming through Google search, or in other ways.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public java.util.Map<String, GoogleCloudRetailV2betaCustomAttribute> attributes;
    public GoogleCloudRetailV2betaUserEvent withAttributes(java.util.Map<String, GoogleCloudRetailV2betaCustomAttribute> attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * Highly recommended for user events that are the result of PredictionService.Predict. This field enables accurate attribution of recommendation model performance. The value must be a valid PredictResponse.attribution_token for user events that are the result of PredictionService.Predict. The value must be a valid SearchResponse.attribution_token for user events that are the result of SearchService.Search. This token enables us to accurately attribute page view or purchase back to the event and the particular predict response containing this clicked/purchased product. If user clicks on product K in the recommendation results, pass PredictResponse.attribution_token as a URL parameter to product K's page. When recording events on product K's page, log the PredictResponse.attribution_token to this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributionToken")
    public String attributionToken;
    public GoogleCloudRetailV2betaUserEvent withAttributionToken(String attributionToken) {
        this.attributionToken = attributionToken;
        return this;
    }
    
    /**
     * Represents the banner of the user event, for projects that combine banners. For example: retailer can have events from multiple banners like retailer-main, retailer-baby, retailer-meds, etc. under one project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("banner")
    public String banner;
    public GoogleCloudRetailV2betaUserEvent withBanner(String banner) {
        this.banner = banner;
        return this;
    }
    
    /**
     * The ID or name of the associated shopping cart. This ID is used to associate multiple items added or present in the cart before purchase. This can only be set for `add-to-cart`, `purchase-complete`, or `shopping-cart-page-view` events.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cartId")
    public String cartId;
    public GoogleCloudRetailV2betaUserEvent withCartId(String cartId) {
        this.cartId = cartId;
        return this;
    }
    
    /**
     * Detailed completion information including completion attribution token and clicked completion info.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completionDetail")
    public GoogleCloudRetailV2betaCompletionDetail completionDetail;
    public GoogleCloudRetailV2betaUserEvent withCompletionDetail(GoogleCloudRetailV2betaCompletionDetail completionDetail) {
        this.completionDetail = completionDetail;
        return this;
    }
    
    /**
     * Only required for UserEventService.ImportUserEvents method. Timestamp of when the user event happened.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTime")
    public String eventTime;
    public GoogleCloudRetailV2betaUserEvent withEventTime(String eventTime) {
        this.eventTime = eventTime;
        return this;
    }
    
    /**
     * Required. User event type. Allowed values are: * `add-to-cart`: Products being added to cart. * `category-page-view`: Special pages such as sale or promotion pages viewed. * `detail-page-view`: Products detail page viewed. * `home-page-view`: Homepage viewed. * `promotion-offered`: Promotion is offered to a user. * `promotion-not-offered`: Promotion is not offered to a user. * `purchase-complete`: User finishing a purchase. * `search`: Product search. * `shopping-cart-page-view`: User viewing a shopping cart.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public String eventType;
    public GoogleCloudRetailV2betaUserEvent withEventType(String eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * A list of identifiers for the independent experiment groups this user event belongs to. This is used to distinguish between user events associated with different experiment setups (e.g. using Retail API, using different recommendation models).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("experimentIds")
    public String[] experimentIds;
    public GoogleCloudRetailV2betaUserEvent withExperimentIds(String[] experimentIds) {
        this.experimentIds = experimentIds;
        return this;
    }
    
    /**
     * The filter syntax consists of an expression language for constructing a predicate from one or more fields of the products being filtered. See SearchRequest.filter for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filter")
    public String filter;
    public GoogleCloudRetailV2betaUserEvent withFilter(String filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * An integer that specifies the current offset for pagination (the 0-indexed starting location, amongst the products deemed by the API as relevant). See SearchRequest.offset for definition. If this field is negative, an INVALID_ARGUMENT is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Integer offset;
    public GoogleCloudRetailV2betaUserEvent withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The order in which products are returned. See SearchRequest.order_by for definition and syntax. The value must be a UTF-8 encoded string with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This can only be set for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderBy")
    public String orderBy;
    public GoogleCloudRetailV2betaUserEvent withOrderBy(String orderBy) {
        this.orderBy = orderBy;
        return this;
    }
    
    /**
     * The categories associated with a category page. To represent full path of category, use '&gt;' sign to separate different hierarchies. If '&gt;' is part of the category name, replace it with other character(s). Category pages include special pages such as sales or promotions. For instance, a special sale page may have the category hierarchy: "pageCategories" : ["Sales &gt; 2017 Black Friday Deals"]. Required for `category-page-view` events. At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageCategories")
    public String[] pageCategories;
    public GoogleCloudRetailV2betaUserEvent withPageCategories(String[] pageCategories) {
        this.pageCategories = pageCategories;
        return this;
    }
    
    /**
     * A unique ID of a web page view. This should be kept the same for all user events triggered from the same pageview. For example, an item detail page view could trigger multiple events as the user is browsing the page. The `pageViewId` property should be kept the same for all these events so that they can be grouped together properly. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageViewId")
    public String pageViewId;
    public GoogleCloudRetailV2betaUserEvent withPageViewId(String pageViewId) {
        this.pageViewId = pageViewId;
        return this;
    }
    
    /**
     * The main product details related to the event. This field is optional except for the following event types: * `add-to-cart` * `detail-page-view` * `purchase-complete` In a `search` event, this field represents the products returned to the end user on the current page (the end user may have not finished browsing the whole page yet). When a new page is returned to the end user, after pagination/filtering/ordering even for the same query, a new `search` event with different product_details is desired. The end user may have not finished browsing the whole page yet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productDetails")
    public GoogleCloudRetailV2betaProductDetail[] productDetails;
    public GoogleCloudRetailV2betaUserEvent withProductDetails(GoogleCloudRetailV2betaProductDetail[] productDetails) {
        this.productDetails = productDetails;
        return this;
    }
    
    /**
     * A transaction represents the entire purchase transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseTransaction")
    public GoogleCloudRetailV2betaPurchaseTransaction purchaseTransaction;
    public GoogleCloudRetailV2betaUserEvent withPurchaseTransaction(GoogleCloudRetailV2betaPurchaseTransaction purchaseTransaction) {
        this.purchaseTransaction = purchaseTransaction;
        return this;
    }
    
    /**
     * The referrer URL of the current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("referrerUri")
    public String referrerUri;
    public GoogleCloudRetailV2betaUserEvent withReferrerUri(String referrerUri) {
        this.referrerUri = referrerUri;
        return this;
    }
    
    /**
     * The user's search query. See SearchRequest.query for definition. The value must be a UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. At least one of search_query or page_categories is required for `search` events. Other event types should not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchQuery")
    public String searchQuery;
    public GoogleCloudRetailV2betaUserEvent withSearchQuery(String searchQuery) {
        this.searchQuery = searchQuery;
        return this;
    }
    
    /**
     * A unique identifier for tracking a visitor session with a length limit of 128 bytes. A session is an aggregation of an end user behavior in a time span. A general guideline to populate the sesion_id: 1. If user has no activity for 30 min, a new session_id should be assigned. 2. The session_id should be unique across users, suggest use uuid or add visitor_id as prefix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sessionId")
    public String sessionId;
    public GoogleCloudRetailV2betaUserEvent withSessionId(String sessionId) {
        this.sessionId = sessionId;
        return this;
    }
    
    /**
     * Complete URL (window.location.href) of the user's current page. When using the client side event reporting with JavaScript pixel and Google Tag Manager, this value is filled in automatically. Maximum length 5,000 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;
    public GoogleCloudRetailV2betaUserEvent withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
    /**
     * Information of an end user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userInfo")
    public GoogleCloudRetailV2betaUserInfo userInfo;
    public GoogleCloudRetailV2betaUserEvent withUserInfo(GoogleCloudRetailV2betaUserInfo userInfo) {
        this.userInfo = userInfo;
        return this;
    }
    
    /**
     * Required. A unique identifier for tracking visitors. For example, this could be implemented with an HTTP cookie, which should be able to uniquely identify a visitor on a single device. This unique identifier should not change if the visitor log in/out of the website. Don't set the field to the same fixed ID for different users. This mixes the event history of those users together, which results in degraded model quality. The field must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. The field should not contain PII or user-data. We recommend to use Google Analytics [Client ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId) for this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visitorId")
    public String visitorId;
    public GoogleCloudRetailV2betaUserEvent withVisitorId(String visitorId) {
        this.visitorId = visitorId;
        return this;
    }
    
}
