/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class ConcurrentAccessRestriction extends SpeakeasyBase {
  /**
   * Whether access is granted for this (user, device, volume).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceAllowed" })
  deviceAllowed?: boolean;

  /**
   * Resource type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The maximum number of concurrent access licenses for this volume.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxConcurrentDevices" })
  maxConcurrentDevices?: number;

  /**
   * Error/warning message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Client nonce for verification. Download access and client-validation only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonce" })
  nonce?: string;

  /**
   * Error/warning reason code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reasonCode" })
  reasonCode?: string;

  /**
   * Whether this volume has any concurrent access restrictions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restricted" })
  restricted?: boolean;

  /**
   * Response signature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "signature" })
  signature?: string;

  /**
   * Client app identifier for verification. Download access and client-validation only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  /**
   * Time in seconds for license auto-expiration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeWindowSeconds" })
  timeWindowSeconds?: number;

  /**
   * Identifies the volume for which this entry applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "volumeId" })
  volumeId?: string;
}
