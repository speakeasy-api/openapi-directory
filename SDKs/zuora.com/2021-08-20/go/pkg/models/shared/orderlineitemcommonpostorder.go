// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// OrderLineItemCommonPostOrderItemStateEnum - The state of an Order Line Item. If you want to generate invoice or preview invoice for order line items, you must set this field to `SentToBilling`.
//
// See [Order Line Item states, Order states, and state transitions](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Order_Line_Items/AB_Order_Line_Item_States_and_Order_States) for more information.
type OrderLineItemCommonPostOrderItemStateEnum string

const (
	OrderLineItemCommonPostOrderItemStateEnumExecuting     OrderLineItemCommonPostOrderItemStateEnum = "Executing"
	OrderLineItemCommonPostOrderItemStateEnumSentToBilling OrderLineItemCommonPostOrderItemStateEnum = "SentToBilling"
	OrderLineItemCommonPostOrderItemStateEnumComplete      OrderLineItemCommonPostOrderItemStateEnum = "Complete"
	OrderLineItemCommonPostOrderItemStateEnumCancelled     OrderLineItemCommonPostOrderItemStateEnum = "Cancelled"
)

func (e *OrderLineItemCommonPostOrderItemStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Executing":
		fallthrough
	case "SentToBilling":
		fallthrough
	case "Complete":
		fallthrough
	case "Cancelled":
		*e = OrderLineItemCommonPostOrderItemStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderLineItemCommonPostOrderItemStateEnum: %s", s)
	}
}

// OrderLineItemCommonPostOrderItemTypeEnum - The type of the Order Line Item.
type OrderLineItemCommonPostOrderItemTypeEnum string

const (
	OrderLineItemCommonPostOrderItemTypeEnumProduct  OrderLineItemCommonPostOrderItemTypeEnum = "Product"
	OrderLineItemCommonPostOrderItemTypeEnumFee      OrderLineItemCommonPostOrderItemTypeEnum = "Fee"
	OrderLineItemCommonPostOrderItemTypeEnumServices OrderLineItemCommonPostOrderItemTypeEnum = "Services"
)

func (e *OrderLineItemCommonPostOrderItemTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Product":
		fallthrough
	case "Fee":
		fallthrough
	case "Services":
		*e = OrderLineItemCommonPostOrderItemTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderLineItemCommonPostOrderItemTypeEnum: %s", s)
	}
}

// OrderLineItemCommonPostOrderTaxModeEnum - The tax mode for the Order Line Item.
type OrderLineItemCommonPostOrderTaxModeEnum string

const (
	OrderLineItemCommonPostOrderTaxModeEnumTaxInclusive OrderLineItemCommonPostOrderTaxModeEnum = "TaxInclusive"
	OrderLineItemCommonPostOrderTaxModeEnumTaxExclusive OrderLineItemCommonPostOrderTaxModeEnum = "TaxExclusive"
)

func (e *OrderLineItemCommonPostOrderTaxModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TaxInclusive":
		fallthrough
	case "TaxExclusive":
		*e = OrderLineItemCommonPostOrderTaxModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderLineItemCommonPostOrderTaxModeEnum: %s", s)
	}
}

type OrderLineItemCommonPostOrder struct {
	// Specifies the units to measure usage.
	//
	Uom *string `json:"UOM,omitempty"`
	// The actual charged amount per unit for the Order Line Item.
	//
	AmountPerUnit *float64 `json:"amountPerUnit,omitempty"`
	// The target date for the Order Line Item to be picked up by bill run for billing.
	//
	BillTargetDate *types.Date `json:"billTargetDate,omitempty"`
	// Container for custom fields of an Order Line Item object.
	//
	CustomFields map[string]interface{} `json:"customFields,omitempty"`
	// The deferred revenue accounting code for the Order Line Item.
	//
	DeferredRevenueAccountingCode *string `json:"deferredRevenueAccountingCode,omitempty"`
	// The description of the Order Line Item.
	//
	Description *string `json:"description,omitempty"`
	// The name of the Order Line Item.
	//
	ItemName *string `json:"itemName,omitempty"`
	// The state of an Order Line Item. If you want to generate invoice or preview invoice for order line items, you must set this field to `SentToBilling`.
	//
	// See [Order Line Item states, Order states, and state transitions](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Order_Line_Items/AB_Order_Line_Item_States_and_Order_States) for more information.
	//
	ItemState *OrderLineItemCommonPostOrderItemStateEnum `json:"itemState,omitempty"`
	// The type of the Order Line Item.
	//
	ItemType *OrderLineItemCommonPostOrderItemTypeEnum `json:"itemType,omitempty"`
	// The list price per unit for the Order Line Item.
	//
	ListPricePerUnit *float64 `json:"listPricePerUnit,omitempty"`
	// The product code for the Order Line Item.
	//
	ProductCode *string `json:"productCode,omitempty"`
	// Id of a Product Rate Plan Charge. Only one-time charges are supported.
	//
	ProductRatePlanChargeID *types.Date `json:"productRatePlanChargeId,omitempty"`
	// Used by customers to specify the Purchase Order Number provided by the buyer.
	//
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	// The quantity of units, such as the number of authors in a hosted wiki service.
	//
	Quantity *float64 `json:"quantity,omitempty"`
	// The recognized revenue accounting code for the Order Line Item.
	//
	RecognizedRevenueAccountingCode *string `json:"recognizedRevenueAccountingCode,omitempty"`
	// The Revenue Recognition rule for the Order Line Item.
	//
	RevenueRecognitionRule *string `json:"revenueRecognitionRule,omitempty"`
	// The Id of an existing account. Use this field to assign an existing account as the sold-to contact of the Order Line Item (OLI).
	//
	// You can either use this field to assign an existing account or use the `soldToData` field to create a new account as the sold-to contact of the OLI.
	//
	// If neither this field nor the `soldToData` field is set, the system will automatically set the default sold-to contact under the OLI's invoice owner account as the sold-to contact of the OLI.
	//
	SoldTo *string `json:"soldTo,omitempty"`
	// Use this field to create a new account as the sold-to contact of the Order Line Item (OLI).
	//
	// You can either use this field to create a new account or use the `soldTo` field to assign an existing account as the sold-to contact of the OLI.
	//
	// If neither this field nor the `soldTo` field is set, the system will automatically set the default sold-to contact under the OLI's invoice owner account as the sold-to contact of the OLI.
	//
	SoldToData *OrderContact `json:"soldToData,omitempty"`
	// The tax code for the Order Line Item.
	//
	TaxCode *string `json:"taxCode,omitempty"`
	// The tax mode for the Order Line Item.
	//
	TaxMode *OrderLineItemCommonPostOrderTaxModeEnum `json:"taxMode,omitempty"`
	// The transaction date of the Order Line Item.
	//
	TransactionDate *types.Date `json:"transactionDate,omitempty"`
}
