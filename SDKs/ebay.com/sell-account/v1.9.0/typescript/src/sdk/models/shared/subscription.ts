/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TimeDuration } from "./timeduration";
import { Expose, Type } from "class-transformer";

/**
 * This type is used by the <strong>getSubscription</strong> response container, which defines the subscription types and levels for the seller account.
 */
export class Subscription extends SpeakeasyBase {
  /**
   * The marketplace with which the subscription is associated. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/ba:MarketplaceIdEnum'>eBay API documentation</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketplaceId" })
  marketplaceId?: string;

  /**
   * The subscription ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionId" })
  subscriptionId?: string;

  /**
   * The subscription level. For example, subscription levels for an eBay store include Starter, Basic, Featured, Anchor, and Enterprise levels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionLevel" })
  subscriptionLevel?: string;

  /**
   * The kind of entity with which the subscription is associated, such as an eBay store. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/account/types/api:SubscriptionTypeEnum'>eBay API documentation</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionType" })
  subscriptionType?: string;

  /**
   * A type used to specify a period of time using a specified time-measurement unit. Payment, return, and fulfillment business policies all use this type to specify time windows.<br/><br/>Whenever a container that uses this type is used in a request, both of these fields are required. Similarly, whenever a container that uses this type is returned in a response, both of these fields are always returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "term" })
  @Type(() => TimeDuration)
  term?: TimeDuration;
}
