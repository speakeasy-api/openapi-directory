// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TestNotificationConfigurationRequestEventTypesEnum string

const (
	TestNotificationConfigurationRequestEventTypesEnumAccountClosed                  TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_CLOSED"
	TestNotificationConfigurationRequestEventTypesEnumAccountCreated                 TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_CREATED"
	TestNotificationConfigurationRequestEventTypesEnumAccountFundsBelowThreshold     TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_FUNDS_BELOW_THRESHOLD"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderCreated           TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_CREATED"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderLimitReached      TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_LIMIT_REACHED"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderMigrated          TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_MIGRATED"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderPayout            TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_PAYOUT"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderStatusChange      TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_STATUS_CHANGE"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderStoreStatusChange TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_STORE_STATUS_CHANGE"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderUpcomingDeadline  TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_UPCOMING_DEADLINE"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderUpdated           TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_UPDATED"
	TestNotificationConfigurationRequestEventTypesEnumAccountHolderVerification      TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_HOLDER_VERIFICATION"
	TestNotificationConfigurationRequestEventTypesEnumAccountUpdated                 TestNotificationConfigurationRequestEventTypesEnum = "ACCOUNT_UPDATED"
	TestNotificationConfigurationRequestEventTypesEnumBeneficiarySetup               TestNotificationConfigurationRequestEventTypesEnum = "BENEFICIARY_SETUP"
	TestNotificationConfigurationRequestEventTypesEnumCompensateNegativeBalance      TestNotificationConfigurationRequestEventTypesEnum = "COMPENSATE_NEGATIVE_BALANCE"
	TestNotificationConfigurationRequestEventTypesEnumDirectDebitInitiated           TestNotificationConfigurationRequestEventTypesEnum = "DIRECT_DEBIT_INITIATED"
	TestNotificationConfigurationRequestEventTypesEnumFundsMigrated                  TestNotificationConfigurationRequestEventTypesEnum = "FUNDS_MIGRATED"
	TestNotificationConfigurationRequestEventTypesEnumPaymentFailure                 TestNotificationConfigurationRequestEventTypesEnum = "PAYMENT_FAILURE"
	TestNotificationConfigurationRequestEventTypesEnumPendingCredit                  TestNotificationConfigurationRequestEventTypesEnum = "PENDING_CREDIT"
	TestNotificationConfigurationRequestEventTypesEnumRefundFundsTransfer            TestNotificationConfigurationRequestEventTypesEnum = "REFUND_FUNDS_TRANSFER"
	TestNotificationConfigurationRequestEventTypesEnumReportAvailable                TestNotificationConfigurationRequestEventTypesEnum = "REPORT_AVAILABLE"
	TestNotificationConfigurationRequestEventTypesEnumScheduledRefunds               TestNotificationConfigurationRequestEventTypesEnum = "SCHEDULED_REFUNDS"
	TestNotificationConfigurationRequestEventTypesEnumScoreSignalTriggered           TestNotificationConfigurationRequestEventTypesEnum = "SCORE_SIGNAL_TRIGGERED"
	TestNotificationConfigurationRequestEventTypesEnumTransferFunds                  TestNotificationConfigurationRequestEventTypesEnum = "TRANSFER_FUNDS"
	TestNotificationConfigurationRequestEventTypesEnumTransferNotPaidoutTransfers    TestNotificationConfigurationRequestEventTypesEnum = "TRANSFER_NOT_PAIDOUT_TRANSFERS"
)

func (e TestNotificationConfigurationRequestEventTypesEnum) ToPointer() *TestNotificationConfigurationRequestEventTypesEnum {
	return &e
}

func (e *TestNotificationConfigurationRequestEventTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT_CLOSED":
		fallthrough
	case "ACCOUNT_CREATED":
		fallthrough
	case "ACCOUNT_FUNDS_BELOW_THRESHOLD":
		fallthrough
	case "ACCOUNT_HOLDER_CREATED":
		fallthrough
	case "ACCOUNT_HOLDER_LIMIT_REACHED":
		fallthrough
	case "ACCOUNT_HOLDER_MIGRATED":
		fallthrough
	case "ACCOUNT_HOLDER_PAYOUT":
		fallthrough
	case "ACCOUNT_HOLDER_STATUS_CHANGE":
		fallthrough
	case "ACCOUNT_HOLDER_STORE_STATUS_CHANGE":
		fallthrough
	case "ACCOUNT_HOLDER_UPCOMING_DEADLINE":
		fallthrough
	case "ACCOUNT_HOLDER_UPDATED":
		fallthrough
	case "ACCOUNT_HOLDER_VERIFICATION":
		fallthrough
	case "ACCOUNT_UPDATED":
		fallthrough
	case "BENEFICIARY_SETUP":
		fallthrough
	case "COMPENSATE_NEGATIVE_BALANCE":
		fallthrough
	case "DIRECT_DEBIT_INITIATED":
		fallthrough
	case "FUNDS_MIGRATED":
		fallthrough
	case "PAYMENT_FAILURE":
		fallthrough
	case "PENDING_CREDIT":
		fallthrough
	case "REFUND_FUNDS_TRANSFER":
		fallthrough
	case "REPORT_AVAILABLE":
		fallthrough
	case "SCHEDULED_REFUNDS":
		fallthrough
	case "SCORE_SIGNAL_TRIGGERED":
		fallthrough
	case "TRANSFER_FUNDS":
		fallthrough
	case "TRANSFER_NOT_PAIDOUT_TRANSFERS":
		*e = TestNotificationConfigurationRequestEventTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestNotificationConfigurationRequestEventTypesEnum: %v", v)
	}
}

type TestNotificationConfigurationRequest struct {
	// The event types to test.  If left blank, then all of the configured event types will be tested.
	// >Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
	EventTypes []TestNotificationConfigurationRequestEventTypesEnum `json:"eventTypes,omitempty"`
	// The ID of the notification subscription configuration to be tested.
	NotificationID int64 `json:"notificationId"`
}
