"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import endpointphonefrom as shared_endpointphonefrom
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class CreateCallRequestAnswerURLAnswerMethodEnum(str, Enum):
    r"""The HTTP method used to send event information to answer_url."""
    POST = 'POST'
    GET = 'GET'

class CreateCallRequestAnswerURLEventMethodEnum(str, Enum):
    r"""The HTTP method used to send event information to `event_url`."""
    POST = 'POST'
    GET = 'GET'

class CreateCallRequestAnswerURLMachineDetectionEnum(str, Enum):
    r"""Configure the behavior when Vonage detects that the call is answered by voicemail. If `continue`, Vonage sends an HTTP request to `event_url` with the Call event machine. If `hangup`, Vonage ends the call."""
    CONTINUE = 'continue'
    HANGUP = 'hangup'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateCallRequestAnswerURL:
    
    answer_url: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answer_url') }})
    r"""The webhook endpoint where you provide the [Nexmo Call Control Object](/voice/voice-api/ncco-reference) that governs this call."""  
    from_: shared_endpointphonefrom.EndpointPhoneFrom = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from') }})
    r"""Connect to a Phone (PSTN) number"""  
    to: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to') }})  
    answer_method: Optional[CreateCallRequestAnswerURLAnswerMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answer_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method used to send event information to answer_url."""  
    event_method: Optional[CreateCallRequestAnswerURLEventMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method used to send event information to `event_url`."""  
    event_url: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_url'), 'exclude': lambda f: f is None }})
    r"""**Required** unless `event_url` is configured at the application
    level, see [Create an Application](/api/application.v2#createApplication)
    
    The webhook endpoint where call progress events are
    sent to. For more information about the values sent, see
    [Event webhook](/voice/voice-api/webhook-reference#event-webhook).
    """  
    length_timer: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('length_timer'), 'exclude': lambda f: f is None }})
    r"""Set the number of seconds that elapse before Vonage hangs up after the call state changes to answered."""  
    machine_detection: Optional[CreateCallRequestAnswerURLMachineDetectionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machine_detection'), 'exclude': lambda f: f is None }})
    r"""Configure the behavior when Vonage detects that the call is answered by voicemail. If `continue`, Vonage sends an HTTP request to `event_url` with the Call event machine. If `hangup`, Vonage ends the call."""  
    random_from_number: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('random_from_number'), 'exclude': lambda f: f is None }})
    r"""Set to `true` to use random phone number as `from`. The number will be selected from the list of the numbers assigned to the current application. `random_from_number: true` cannot be used together with `from`."""  
    ringing_timer: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ringing_timer'), 'exclude': lambda f: f is None }})
    r"""Set the number of seconds that elapse before Vonage hangs up after the call state changes to ‘ringing’."""  
    