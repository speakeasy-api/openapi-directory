<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class IssuesUpdateRequestBody
{
    /**
     * Login for the user that this issue should be assigned to. **This field is deprecated.**
     * 
     * @var ?string $assignee
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $assignee = null;
    
    /**
     * Logins for Users to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this Issue. Send an empty array (`[]`) to clear all assignees from the Issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._
     * 
     * @var ?array<string> $assignees
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignees')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assignees = null;
    
    /**
     * The contents of the issue.
     * 
     * @var ?string $body
     */
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $body = null;
    
    /**
     * Labels to associate with this issue. Pass one or more Labels to _replace_ the set of Labels on this Issue. Send an empty array (`[]`) to clear all Labels from the Issue. _NOTE: Only users with push access can set labels for issues. Labels are silently dropped otherwise._
     * 
     * @var ?array<mixed> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('milestone')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $milestone = null;
    
    /**
     * State of the issue. Either `open` or `closed`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\IssuesUpdateRequestBodyStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\IssuesUpdateRequestBodyStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IssuesUpdateRequestBodyStateEnum $state = null;
    
    /**
     * The reason for the current state
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\IssuesUpdateRequestBodyStateReasonEnum $stateReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('state_reason')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\IssuesUpdateRequestBodyStateReasonEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IssuesUpdateRequestBodyStateReasonEnum $stateReason = null;
    
    /**
     * The title of the issue.
     * 
     * @var mixed $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $title = null;
    
	public function __construct()
	{
		$this->assignee = null;
		$this->assignees = null;
		$this->body = null;
		$this->labels = null;
		$this->milestone = null;
		$this->state = null;
		$this->stateReason = null;
		$this->title = null;
	}
}
