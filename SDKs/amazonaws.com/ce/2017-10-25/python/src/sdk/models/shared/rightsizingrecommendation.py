"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import currentinstance as shared_currentinstance
from ..shared import findingreasoncode_enum as shared_findingreasoncode_enum
from ..shared import modifyrecommendationdetail as shared_modifyrecommendationdetail
from ..shared import rightsizingtype_enum as shared_rightsizingtype_enum
from ..shared import terminaterecommendationdetail as shared_terminaterecommendationdetail
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RightsizingRecommendation:
    r"""Recommendations to rightsize resources."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountId'), 'exclude': lambda f: f is None }})  
    current_instance: Optional[shared_currentinstance.CurrentInstance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrentInstance'), 'exclude': lambda f: f is None }})  
    finding_reason_codes: Optional[list[shared_findingreasoncode_enum.FindingReasonCodeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FindingReasonCodes'), 'exclude': lambda f: f is None }})  
    modify_recommendation_detail: Optional[shared_modifyrecommendationdetail.ModifyRecommendationDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModifyRecommendationDetail'), 'exclude': lambda f: f is None }})  
    rightsizing_type: Optional[shared_rightsizingtype_enum.RightsizingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RightsizingType'), 'exclude': lambda f: f is None }})  
    terminate_recommendation_detail: Optional[shared_terminaterecommendationdetail.TerminateRecommendationDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TerminateRecommendationDetail'), 'exclude': lambda f: f is None }})  
    