"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class ProtocolSnmpv3AccessAddRequest:
    
    agent_num: int = dataclasses.field(metadata={'path_param': { 'field_name': 'agentNum', 'style': 'simple', 'explode': False }})
    r"""Agent to add the SNMPv3 access"""  
    context_match: str = dataclasses.field(metadata={'path_param': { 'field_name': 'contextMatch', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 access context match"""  
    group_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'groupName', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 access name"""  
    notify_view: str = dataclasses.field(metadata={'path_param': { 'field_name': 'notifyView', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 access notify view"""  
    prefix: str = dataclasses.field(metadata={'path_param': { 'field_name': 'prefix', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 prefix"""  
    read_view: str = dataclasses.field(metadata={'path_param': { 'field_name': 'readView', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 access read view"""  
    security_level: str = dataclasses.field(metadata={'path_param': { 'field_name': 'securityLevel', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 access security level"""  
    security_model: str = dataclasses.field(metadata={'path_param': { 'field_name': 'securityModel', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 access security model"""  
    write_view: str = dataclasses.field(metadata={'path_param': { 'field_name': 'writeView', 'style': 'simple', 'explode': False }})
    r"""SNMPv3 access write view"""  
    

@dataclasses.dataclass
class ProtocolSnmpv3AccessAddResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    protocol_snmpv3_access_add_200_application_json_string: Optional[str] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    