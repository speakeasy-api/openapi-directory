// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SettingItemWithOperationsInformationContextEnum - The context where this setting item is effective.
type SettingItemWithOperationsInformationContextEnum string

const (
	SettingItemWithOperationsInformationContextEnumTenant SettingItemWithOperationsInformationContextEnum = "Tenant"
	SettingItemWithOperationsInformationContextEnumEntity SettingItemWithOperationsInformationContextEnum = "Entity"
	SettingItemWithOperationsInformationContextEnumUser   SettingItemWithOperationsInformationContextEnum = "User"
	SettingItemWithOperationsInformationContextEnumNone   SettingItemWithOperationsInformationContextEnum = "None"
)

func (e *SettingItemWithOperationsInformationContextEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Tenant":
		fallthrough
	case "Entity":
		fallthrough
	case "User":
		fallthrough
	case "None":
		*e = SettingItemWithOperationsInformationContextEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SettingItemWithOperationsInformationContextEnum: %s", s)
	}
}

type SettingItemWithOperationsInformation struct {
	// The context where this setting item is effective.
	Context *SettingItemWithOperationsInformationContextEnum `json:"context,omitempty"`
	// The description of the setting item as you see from Zuora UI.
	Description *string `json:"description,omitempty"`
	// An array of HTTP operation methods that are supported on this setting endpoint.
	HTTPOperations []SettingItemHTTPOperation `json:"httpOperations,omitempty"`
	// The unique key to distinguish the setting item.
	Key *string `json:"key,omitempty"`
	// The path pattern of the setting endpoint, relative to `/settings`. For example, `/billing-rules`.
	PathPattern *string `json:"pathPattern,omitempty"`
}
