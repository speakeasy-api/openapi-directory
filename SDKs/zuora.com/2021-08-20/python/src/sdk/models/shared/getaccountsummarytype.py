"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import getaccountsummaryinvoicetype as shared_getaccountsummaryinvoicetype
from ..shared import getaccountsummarypaymenttype as shared_getaccountsummarypaymenttype
from ..shared import getaccountsummarysubscriptiontype as shared_getaccountsummarysubscriptiontype
from ..shared import getaccountsummarytypebasicinfo as shared_getaccountsummarytypebasicinfo
from ..shared import getaccountsummarytypebilltocontact as shared_getaccountsummarytypebilltocontact
from ..shared import getaccountsummarytypesoldtocontact as shared_getaccountsummarytypesoldtocontact
from ..shared import getaccountsummaryusagetype as shared_getaccountsummaryusagetype
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETAccountSummaryTypeTaxInfo:
    r"""Container for tax exempt information, used to establish the tax exempt status of a customer account."""
    
    company_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companyCode'), 'exclude': lambda f: f is None }})
    r"""Unique code that identifies a company account in Avalara."""  
    exempt_certificate_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptCertificateId'), 'exclude': lambda f: f is None }})
    r"""ID of the customer tax exemption certificate."""  
    exempt_certificate_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptCertificateType'), 'exclude': lambda f: f is None }})
    r"""Type of tax exemption certificate that the customer holds."""  
    exempt_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptDescription'), 'exclude': lambda f: f is None }})
    r"""Description of the tax exemption certificate that the customer holds."""  
    exempt_effective_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptEffectiveDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date when the customer tax exemption starts."""  
    exempt_entity_use_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptEntityUseCode'), 'exclude': lambda f: f is None }})
    r"""A unique entity use code to apply exemptions in Avalara AvaTax.
    
    This account-level field is required only when you choose Avalara as your tax engine. See [Exempt Transactions](https://developer.avalara.com/avatax/handling-tax-exempt-customers/)for more details.
    """  
    exempt_expiration_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptExpirationDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date when the customer tax exemption expires."""  
    exempt_issuing_jurisdiction: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptIssuingJurisdiction'), 'exclude': lambda f: f is None }})
    r"""Jurisdiction in which the customer tax exemption certificate was issued."""  
    exempt_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptStatus'), 'exclude': lambda f: f is None }})
    r"""Status of the account tax exemption."""  
    vat_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VATId'), 'exclude': lambda f: f is None }})
    r"""EU Value Added Tax ID."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETAccountSummaryType:
    
    basic_info: Optional[shared_getaccountsummarytypebasicinfo.GETAccountSummaryTypeBasicInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('basicInfo'), 'exclude': lambda f: f is None }})
    r"""Container for basic information about the account."""  
    bill_to_contact: Optional[shared_getaccountsummarytypebilltocontact.GETAccountSummaryTypeBillToContact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billToContact'), 'exclude': lambda f: f is None }})
    r"""Container for bill-to contact information."""  
    invoices: Optional[list[shared_getaccountsummaryinvoicetype.GETAccountSummaryInvoiceType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoices'), 'exclude': lambda f: f is None }})
    r"""Container for invoices. Only returns the last 6 invoices."""  
    payments: Optional[list[shared_getaccountsummarypaymenttype.GETAccountSummaryPaymentType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payments'), 'exclude': lambda f: f is None }})
    r"""Container for payments. Only returns the last 6 payments."""  
    sold_to_contact: Optional[shared_getaccountsummarytypesoldtocontact.GETAccountSummaryTypeSoldToContact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('soldToContact'), 'exclude': lambda f: f is None }})
    r"""Container for sold-to contact information; uses the same structure as `billToContact`."""  
    subscriptions: Optional[list[shared_getaccountsummarysubscriptiontype.GETAccountSummarySubscriptionType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscriptions'), 'exclude': lambda f: f is None }})
    r"""Container for subscriptions."""  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})
    r"""Returns `true` if the request was processed successfully."""  
    tax_info: Optional[GETAccountSummaryTypeTaxInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxInfo'), 'exclude': lambda f: f is None }})
    r"""Container for tax exempt information, used to establish the tax exempt status of a customer account."""  
    usage: Optional[list[shared_getaccountsummaryusagetype.GETAccountSummaryUsageType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usage'), 'exclude': lambda f: f is None }})
    r"""Container for usage data. Only returns the last 6 months of usage.
    
    **Note:** If the Active Rating feature is enabled, no usage data is returned in the response body field.
    """  
    