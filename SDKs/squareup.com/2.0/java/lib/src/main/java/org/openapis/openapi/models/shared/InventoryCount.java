/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InventoryCount - Represents Square-estimated quantity of items in a particular state at a
 * particular seller location based on the known history of physical counts and
 * inventory adjustments.
 */
public class InventoryCount {
    /**
     * An RFC 3339-formatted timestamp that indicates when the most recent physical count or adjustment affecting
     * the estimated count is received.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("calculated_at")
    public String calculatedAt;
    public InventoryCount withCalculatedAt(String calculatedAt) {
        this.calculatedAt = calculatedAt;
        return this;
    }
    
    /**
     * The Square-generated ID of the
     * [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalog_object_id")
    public String catalogObjectId;
    public InventoryCount withCatalogObjectId(String catalogObjectId) {
        this.catalogObjectId = catalogObjectId;
        return this;
    }
    
    /**
     * The [type](https://developer.squareup.com/reference/square_2021-08-18/enums/CatalogObjectType) of the
     * [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked. Tracking is only
     * supported for the `ITEM_VARIATION` type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalog_object_type")
    public String catalogObjectType;
    public InventoryCount withCatalogObjectType(String catalogObjectType) {
        this.catalogObjectType = catalogObjectType;
        return this;
    }
    
    /**
     * Whether the inventory count is for composed variation (TRUE) or not (FALSE). If true, the inventory count will not be present in the response of
     * any of these endpoints: [BatchChangeInventory](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-change-inventory), 
     * [BatchRetrieveInventoryChanges](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-changes), 
     * [BatchRetrieveInventoryCounts](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/batch-retrieve-inventory-counts), and 
     * [RetrieveInventoryChanges](https://developer.squareup.com/reference/square_2021-08-18/inventory-api/retrieve-inventory-changes).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_estimated")
    public Boolean isEstimated;
    public InventoryCount withIsEstimated(Boolean isEstimated) {
        this.isEstimated = isEstimated;
        return this;
    }
    
    /**
     * The Square-generated ID of the [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) where the related
     * quantity of items is being tracked.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_id")
    public String locationId;
    public InventoryCount withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * The number of items affected by the estimated count as a decimal string.
     * Can support up to 5 digits after the decimal point.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public String quantity;
    public InventoryCount withQuantity(String quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * The current [inventory state](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryState) for the related
     * quantity of items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public InventoryCount withState(String state) {
        this.state = state;
        return this;
    }
    
}
