/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TrialComponentSource } from "./trialcomponentsource";
import { TrialComponentStatus } from "./trialcomponentstatus";
import { UserContext } from "./usercontext";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A summary of the properties of a trial component. To get all the properties, call the <a>DescribeTrialComponent</a> API and provide the <code>TrialComponentName</code>.
 */
export class TrialComponentSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  @Type(() => UserContext)
  createdBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedBy" })
  @Type(() => UserContext)
  lastModifiedBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  @Type(() => TrialComponentStatus)
  status?: TrialComponentStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "TrialComponentArn" })
  trialComponentArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TrialComponentName" })
  trialComponentName?: string;

  /**
   * The Amazon Resource Name (ARN) and job type of the source of a trial component.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TrialComponentSource" })
  @Type(() => TrialComponentSource)
  trialComponentSource?: TrialComponentSource;
}
