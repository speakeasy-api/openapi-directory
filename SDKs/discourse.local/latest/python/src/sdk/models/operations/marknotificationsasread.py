"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MarkNotificationsAsReadRequestBody:
    
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""(optional) Leave off to mark all notifications as
    read
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MarkNotificationsAsRead200ApplicationJSON:
    r"""notifications marked read"""
    
    success: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class MarkNotificationsAsReadResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    mark_notifications_as_read_200_application_json_object: Optional[MarkNotificationsAsRead200ApplicationJSON] = dataclasses.field(default=None)
    r"""notifications marked read"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    