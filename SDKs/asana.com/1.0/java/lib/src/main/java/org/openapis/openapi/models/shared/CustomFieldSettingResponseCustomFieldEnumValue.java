/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CustomFieldSettingResponseCustomFieldEnumValue - Enum options are the possible values which an enum custom field can adopt. An enum custom field must contain at least 1 enum option but no more than 500.
 * 
 * You can add enum options to a custom field by using the `POST /custom_fields/custom_field_gid/enum_options` endpoint.
 * 
 * **It is not possible to remove or delete an enum option**. Instead, enum options can be disabled by updating the `enabled` field to false with the `PUT /enum_options/enum_option_gid` endpoint. Other attributes can be updated similarly.
 * 
 * On creation of an enum option, `enabled` is always set to `true`, meaning the enum option is a selectable value for the custom field. Setting `enabled=false` is equivalent to \u201ctrashing\u201d the enum option in the Asana web app within the \u201cEdit Fields\u201d dialog. The enum option will no longer be selectable but, if the enum option value was previously set within a task, the task will retain the value.
 * 
 * Enum options are an ordered list and by default new enum options are inserted at the end. Ordering in relation to existing enum options can be specified on creation by using `insert_before` or `insert_after` to reference an existing enum option. Only one of `insert_before` and `insert_after` can be provided when creating a new enum option.
 * 
 * An enum options list can be reordered with the `POST /custom_fields/custom_field_gid/enum_options/insert` endpoint.
 */
public class CustomFieldSettingResponseCustomFieldEnumValue {
    /**
     * The color of the enum option. Defaults to \u2018none\u2019.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public String color;

    public CustomFieldSettingResponseCustomFieldEnumValue withColor(String color) {
        this.color = color;
        return this;
    }
    
    /**
     * Whether or not the enum option is a selectable value for the custom field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public CustomFieldSettingResponseCustomFieldEnumValue withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;

    public CustomFieldSettingResponseCustomFieldEnumValue withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * The name of the enum option.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CustomFieldSettingResponseCustomFieldEnumValue withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;

    public CustomFieldSettingResponseCustomFieldEnumValue withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    public CustomFieldSettingResponseCustomFieldEnumValue(){}
}
