"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dockerrepository as shared_dockerrepository
from ..shared import mavenrepository as shared_mavenrepository
from ..shared import npmrepository as shared_npmrepository
from ..shared import pythonrepository as shared_pythonrepository
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RemoteRepositoryConfig:
    r"""Remote repository configuration."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of the remote source."""  
    docker_repository: Optional[shared_dockerrepository.DockerRepository] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dockerRepository'), 'exclude': lambda f: f is None }})
    r"""Configuration for a Docker remote repository."""  
    maven_repository: Optional[shared_mavenrepository.MavenRepository] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mavenRepository'), 'exclude': lambda f: f is None }})
    r"""Configuration for a Maven remote repository."""  
    npm_repository: Optional[shared_npmrepository.NpmRepository] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('npmRepository'), 'exclude': lambda f: f is None }})
    r"""Configuration for a Npm remote repository."""  
    python_repository: Optional[shared_pythonrepository.PythonRepository] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pythonRepository'), 'exclude': lambda f: f is None }})
    r"""Configuration for a Python remote repository."""  
    