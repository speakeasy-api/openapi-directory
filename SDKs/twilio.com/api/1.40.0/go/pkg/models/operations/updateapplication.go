// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateApplicationServerList = []string{
	"https://api.twilio.com",
}

type UpdateApplicationSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateApplicationPathParams struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Application resources to update.
	AccountSid string `pathParam:"style=simple,explode=false,name=AccountSid"`
	// The Twilio-provided string that uniquely identifies the Application resource to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

// UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum - The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`.
type UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum string

const (
	UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnumHead   UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum = "HEAD"
	UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnumGet    UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum = "GET"
	UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnumPost   UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum = "POST"
	UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnumPatch  UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum = "PATCH"
	UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnumPut    UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum = "PUT"
	UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnumDelete UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum = "DELETE"
)

func (e *UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum: %s", s)
	}
}

// UpdateApplicationUpdateApplicationRequestSmsMethodEnum - The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`.
type UpdateApplicationUpdateApplicationRequestSmsMethodEnum string

const (
	UpdateApplicationUpdateApplicationRequestSmsMethodEnumHead   UpdateApplicationUpdateApplicationRequestSmsMethodEnum = "HEAD"
	UpdateApplicationUpdateApplicationRequestSmsMethodEnumGet    UpdateApplicationUpdateApplicationRequestSmsMethodEnum = "GET"
	UpdateApplicationUpdateApplicationRequestSmsMethodEnumPost   UpdateApplicationUpdateApplicationRequestSmsMethodEnum = "POST"
	UpdateApplicationUpdateApplicationRequestSmsMethodEnumPatch  UpdateApplicationUpdateApplicationRequestSmsMethodEnum = "PATCH"
	UpdateApplicationUpdateApplicationRequestSmsMethodEnumPut    UpdateApplicationUpdateApplicationRequestSmsMethodEnum = "PUT"
	UpdateApplicationUpdateApplicationRequestSmsMethodEnumDelete UpdateApplicationUpdateApplicationRequestSmsMethodEnum = "DELETE"
)

func (e *UpdateApplicationUpdateApplicationRequestSmsMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateApplicationUpdateApplicationRequestSmsMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApplicationUpdateApplicationRequestSmsMethodEnum: %s", s)
	}
}

// UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum - The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST`.
type UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum string

const (
	UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnumHead   UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum = "HEAD"
	UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnumGet    UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum = "GET"
	UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnumPost   UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum = "POST"
	UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnumPatch  UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum = "PATCH"
	UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnumPut    UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum = "PUT"
	UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnumDelete UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum = "DELETE"
)

func (e *UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum: %s", s)
	}
}

// UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum - The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
type UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum string

const (
	UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnumHead   UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum = "HEAD"
	UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnumGet    UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum = "GET"
	UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnumPost   UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum = "POST"
	UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnumPatch  UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum = "PATCH"
	UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnumPut    UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum = "PUT"
	UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnumDelete UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum = "DELETE"
)

func (e *UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum: %s", s)
	}
}

// UpdateApplicationUpdateApplicationRequestVoiceMethodEnum - The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
type UpdateApplicationUpdateApplicationRequestVoiceMethodEnum string

const (
	UpdateApplicationUpdateApplicationRequestVoiceMethodEnumHead   UpdateApplicationUpdateApplicationRequestVoiceMethodEnum = "HEAD"
	UpdateApplicationUpdateApplicationRequestVoiceMethodEnumGet    UpdateApplicationUpdateApplicationRequestVoiceMethodEnum = "GET"
	UpdateApplicationUpdateApplicationRequestVoiceMethodEnumPost   UpdateApplicationUpdateApplicationRequestVoiceMethodEnum = "POST"
	UpdateApplicationUpdateApplicationRequestVoiceMethodEnumPatch  UpdateApplicationUpdateApplicationRequestVoiceMethodEnum = "PATCH"
	UpdateApplicationUpdateApplicationRequestVoiceMethodEnumPut    UpdateApplicationUpdateApplicationRequestVoiceMethodEnum = "PUT"
	UpdateApplicationUpdateApplicationRequestVoiceMethodEnumDelete UpdateApplicationUpdateApplicationRequestVoiceMethodEnum = "DELETE"
)

func (e *UpdateApplicationUpdateApplicationRequestVoiceMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateApplicationUpdateApplicationRequestVoiceMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApplicationUpdateApplicationRequestVoiceMethodEnum: %s", s)
	}
}

type UpdateApplicationUpdateApplicationRequest struct {
	// The API version to use to start a new TwiML session. Can be: `2010-04-01` or `2008-08-01`. The default value is your account's default API version.
	APIVersion *string `form:"name=ApiVersion"`
	// A descriptive string that you create to describe the resource. It can be up to 64 characters long.
	FriendlyName *string `form:"name=FriendlyName"`
	// The URL we should call using a POST method to send message status information to your application.
	MessageStatusCallback *string `form:"name=MessageStatusCallback"`
	// Whether to allow other Twilio accounts to dial this applicaton using Dial verb. Can be: `true` or `false`.
	PublicApplicationConnectEnabled *bool `form:"name=PublicApplicationConnectEnabled"`
	// The HTTP method we should use to call `sms_fallback_url`. Can be: `GET` or `POST`.
	SmsFallbackMethod *UpdateApplicationUpdateApplicationRequestSmsFallbackMethodEnum `form:"name=SmsFallbackMethod"`
	// The URL that we should call when an error occurs while retrieving or executing the TwiML from `sms_url`.
	SmsFallbackURL *string `form:"name=SmsFallbackUrl"`
	// The HTTP method we should use to call `sms_url`. Can be: `GET` or `POST`.
	SmsMethod *UpdateApplicationUpdateApplicationRequestSmsMethodEnum `form:"name=SmsMethod"`
	// Same as message_status_callback: The URL we should call using a POST method to send status information about SMS messages sent by the application. Deprecated, included for backwards compatibility.
	SmsStatusCallback *string `form:"name=SmsStatusCallback"`
	// The URL we should call when the phone number receives an incoming SMS message.
	SmsURL *string `form:"name=SmsUrl"`
	// The URL we should call using the `status_callback_method` to send status information to your application.
	StatusCallback *string `form:"name=StatusCallback"`
	// The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST`.
	StatusCallbackMethod *UpdateApplicationUpdateApplicationRequestStatusCallbackMethodEnum `form:"name=StatusCallbackMethod"`
	// Whether we should look up the caller's caller-ID name from the CNAM database (additional charges apply). Can be: `true` or `false`.
	VoiceCallerIDLookup *bool `form:"name=VoiceCallerIdLookup"`
	// The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
	VoiceFallbackMethod *UpdateApplicationUpdateApplicationRequestVoiceFallbackMethodEnum `form:"name=VoiceFallbackMethod"`
	// The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`.
	VoiceFallbackURL *string `form:"name=VoiceFallbackUrl"`
	// The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
	VoiceMethod *UpdateApplicationUpdateApplicationRequestVoiceMethodEnum `form:"name=VoiceMethod"`
	// The URL we should call when the phone number assigned to this application receives a call.
	VoiceURL *string `form:"name=VoiceUrl"`
}

type UpdateApplicationRequest struct {
	PathParams UpdateApplicationPathParams
	Request    *UpdateApplicationUpdateApplicationRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateApplicationSecurity
	ServerURL  *string
}

type UpdateApplicationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	APIV2010AccountApplication *shared.APIV2010AccountApplication
}
