/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetOrder200ApplicationJSONOrderResponseV2 - Requires hydrate to be set in the request and the corresponding node will be filled.
 */
public class GetOrder200ApplicationJSONOrderResponseV2 {
    @JsonProperty("currentStatus")
    public GetOrder200ApplicationJSONOrderResponseV2StatusEventV2 currentStatus;

    public GetOrder200ApplicationJSONOrderResponseV2 withCurrentStatus(GetOrder200ApplicationJSONOrderResponseV2StatusEventV2 currentStatus) {
        this.currentStatus = currentStatus;
        return this;
    }
    
    /**
     * DateTime order departed an FDC warehouse
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("departDate")
    public OffsetDateTime departDate;

    public GetOrder200ApplicationJSONOrderResponseV2 withDepartDate(OffsetDateTime departDate) {
        this.departDate = departDate;
        return this;
    }
    
    /**
     * DateTime order was dispatched for fulfillment by FDC
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("dispatchDate")
    public OffsetDateTime dispatchDate;

    public GetOrder200ApplicationJSONOrderResponseV2 withDispatchDate(OffsetDateTime dispatchDate) {
        this.dispatchDate = dispatchDate;
        return this;
    }
    
    /**
     * FDC ID for this order
     */
    @JsonProperty("id")
    public Long id;

    public GetOrder200ApplicationJSONOrderResponseV2 withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrator")
    public String integrator;

    public GetOrder200ApplicationJSONOrderResponseV2 withIntegrator(String integrator) {
        this.integrator = integrator;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineItems")
    public GetOrder200ApplicationJSONOrderResponseV2LineItemsResponseV2[] lineItems;

    public GetOrder200ApplicationJSONOrderResponseV2 withLineItems(GetOrder200ApplicationJSONOrderResponseV2LineItemsResponseV2[] lineItems) {
        this.lineItems = lineItems;
        return this;
    }
    
    @JsonProperty("merchant")
    public GetOrder200ApplicationJSONOrderResponseV2MerchantV2 merchant;

    public GetOrder200ApplicationJSONOrderResponseV2 withMerchant(GetOrder200ApplicationJSONOrderResponseV2MerchantV2 merchant) {
        this.merchant = merchant;
        return this;
    }
    
    /**
     * Merchant provided ID
     */
    @JsonProperty("merchantOrderId")
    public String merchantOrderId;

    public GetOrder200ApplicationJSONOrderResponseV2 withMerchantOrderId(String merchantOrderId) {
        this.merchantOrderId = merchantOrderId;
        return this;
    }
    
    /**
     * Requested ship method
     */
    @JsonProperty("merchantShippingMethod")
    public String merchantShippingMethod;

    public GetOrder200ApplicationJSONOrderResponseV2 withMerchantShippingMethod(String merchantShippingMethod) {
        this.merchantShippingMethod = merchantShippingMethod;
        return this;
    }
    
    @JsonProperty("originalConsignee")
    public GetOrder200ApplicationJSONOrderResponseV2ConsigneeV2 originalConsignee;

    public GetOrder200ApplicationJSONOrderResponseV2 withOriginalConsignee(GetOrder200ApplicationJSONOrderResponseV2ConsigneeV2 originalConsignee) {
        this.originalConsignee = originalConsignee;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentOrder")
    public GetOrder200ApplicationJSONOrderResponseV2ParentOrder parentOrder;

    public GetOrder200ApplicationJSONOrderResponseV2 withParentOrder(GetOrder200ApplicationJSONOrderResponseV2ParentOrder parentOrder) {
        this.parentOrder = parentOrder;
        return this;
    }
    
    /**
     * Merchant provided PO#
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseOrderNum")
    public String purchaseOrderNum;

    public GetOrder200ApplicationJSONOrderResponseV2 withPurchaseOrderNum(String purchaseOrderNum) {
        this.purchaseOrderNum = purchaseOrderNum;
        return this;
    }
    
    /**
     * DateTime order was recorded by FDC
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("recordedOn")
    public OffsetDateTime recordedOn;

    public GetOrder200ApplicationJSONOrderResponseV2 withRecordedOn(OffsetDateTime recordedOn) {
        this.recordedOn = recordedOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingNumbers")
    public GetOrder200ApplicationJSONOrderResponseV2TrackingNumbers[] trackingNumbers;

    public GetOrder200ApplicationJSONOrderResponseV2 withTrackingNumbers(GetOrder200ApplicationJSONOrderResponseV2TrackingNumbers[] trackingNumbers) {
        this.trackingNumbers = trackingNumbers;
        return this;
    }
    
    @JsonProperty("validatedConsignee")
    public org.openapis.openapi.models.shared.OneordersPostResponses201ContentApplication1jsonSchemaPropertiesOriginalConsignee validatedConsignee;

    public GetOrder200ApplicationJSONOrderResponseV2 withValidatedConsignee(org.openapis.openapi.models.shared.OneordersPostResponses201ContentApplication1jsonSchemaPropertiesOriginalConsignee validatedConsignee) {
        this.validatedConsignee = validatedConsignee;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warehouse")
    public GetOrder200ApplicationJSONOrderResponseV2WarehouseV2 warehouse;

    public GetOrder200ApplicationJSONOrderResponseV2 withWarehouse(GetOrder200ApplicationJSONOrderResponseV2WarehouseV2 warehouse) {
        this.warehouse = warehouse;
        return this;
    }
    
    public GetOrder200ApplicationJSONOrderResponseV2(@JsonProperty("currentStatus") GetOrder200ApplicationJSONOrderResponseV2StatusEventV2 currentStatus, @JsonProperty("id") Long id, @JsonProperty("merchant") GetOrder200ApplicationJSONOrderResponseV2MerchantV2 merchant, @JsonProperty("merchantOrderId") String merchantOrderId, @JsonProperty("merchantShippingMethod") String merchantShippingMethod, @JsonProperty("originalConsignee") GetOrder200ApplicationJSONOrderResponseV2ConsigneeV2 originalConsignee, @JsonProperty("recordedOn") OffsetDateTime recordedOn, @JsonProperty("validatedConsignee") org.openapis.openapi.models.shared.OneordersPostResponses201ContentApplication1jsonSchemaPropertiesOriginalConsignee validatedConsignee) {
        this.currentStatus = currentStatus;
        this.id = id;
        this.merchant = merchant;
        this.merchantOrderId = merchantOrderId;
        this.merchantShippingMethod = merchantShippingMethod;
        this.originalConsignee = originalConsignee;
        this.recordedOn = recordedOn;
        this.validatedConsignee = validatedConsignee;
  }
}
