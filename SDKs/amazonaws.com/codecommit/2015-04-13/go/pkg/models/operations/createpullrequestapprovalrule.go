// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreatePullRequestApprovalRuleXAmzTargetEnum
type CreatePullRequestApprovalRuleXAmzTargetEnum string

const (
	CreatePullRequestApprovalRuleXAmzTargetEnumCodeCommit20150413CreatePullRequestApprovalRule CreatePullRequestApprovalRuleXAmzTargetEnum = "CodeCommit_20150413.CreatePullRequestApprovalRule"
)

func (e *CreatePullRequestApprovalRuleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeCommit_20150413.CreatePullRequestApprovalRule":
		*e = CreatePullRequestApprovalRuleXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePullRequestApprovalRuleXAmzTargetEnum: %s", s)
	}
}

type CreatePullRequestApprovalRuleRequest struct {
	CreatePullRequestApprovalRuleInput shared.CreatePullRequestApprovalRuleInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         CreatePullRequestApprovalRuleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreatePullRequestApprovalRuleResponse struct {
	// ApprovalRuleContentRequiredException
	ApprovalRuleContentRequiredException interface{}
	// ApprovalRuleNameAlreadyExistsException
	ApprovalRuleNameAlreadyExistsException interface{}
	// ApprovalRuleNameRequiredException
	ApprovalRuleNameRequiredException interface{}
	ContentType                       string
	// Success
	CreatePullRequestApprovalRuleOutput *shared.CreatePullRequestApprovalRuleOutput
	// EncryptionIntegrityChecksFailedException
	EncryptionIntegrityChecksFailedException interface{}
	// EncryptionKeyAccessDeniedException
	EncryptionKeyAccessDeniedException interface{}
	// EncryptionKeyDisabledException
	EncryptionKeyDisabledException interface{}
	// EncryptionKeyNotFoundException
	EncryptionKeyNotFoundException interface{}
	// EncryptionKeyUnavailableException
	EncryptionKeyUnavailableException interface{}
	// InvalidApprovalRuleContentException
	InvalidApprovalRuleContentException interface{}
	// InvalidApprovalRuleNameException
	InvalidApprovalRuleNameException interface{}
	// InvalidPullRequestIdException
	InvalidPullRequestIDException interface{}
	// NumberOfRulesExceededException
	NumberOfRulesExceededException interface{}
	// PullRequestAlreadyClosedException
	PullRequestAlreadyClosedException interface{}
	// PullRequestDoesNotExistException
	PullRequestDoesNotExistException interface{}
	// PullRequestIdRequiredException
	PullRequestIDRequiredException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
}
