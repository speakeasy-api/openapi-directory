// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TargetHealthReasonEnum string

const (
	TargetHealthReasonEnumUnreachable             TargetHealthReasonEnum = "UNREACHABLE"
	TargetHealthReasonEnumConnectionFailed        TargetHealthReasonEnum = "CONNECTION_FAILED"
	TargetHealthReasonEnumAuthFailure             TargetHealthReasonEnum = "AUTH_FAILURE"
	TargetHealthReasonEnumPendingProxyCapacity    TargetHealthReasonEnum = "PENDING_PROXY_CAPACITY"
	TargetHealthReasonEnumInvalidReplicationState TargetHealthReasonEnum = "INVALID_REPLICATION_STATE"
)

func (e *TargetHealthReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNREACHABLE":
		fallthrough
	case "CONNECTION_FAILED":
		fallthrough
	case "AUTH_FAILURE":
		fallthrough
	case "PENDING_PROXY_CAPACITY":
		fallthrough
	case "INVALID_REPLICATION_STATE":
		*e = TargetHealthReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TargetHealthReasonEnum: %s", s)
	}
}
