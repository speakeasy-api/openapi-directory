/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CatalogModifierOverride } from "./catalogmodifieroverride";
import { Expose, Type } from "class-transformer";

/**
 * Options to control the properties of a `CatalogModifierList` applied to a `CatalogItem` instance.
 */
export class CatalogItemModifierListInfo extends SpeakeasyBase {
  /**
   * If `true`, enable this `CatalogModifierList`. The default value is `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * If 0 or larger, the largest number of `CatalogModifier`s that can be selected from this `CatalogModifierList`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_selected_modifiers" })
  maxSelectedModifiers?: number;

  /**
   * If 0 or larger, the smallest number of `CatalogModifier`s that must be selected from this `CatalogModifierList`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min_selected_modifiers" })
  minSelectedModifiers?: number;

  /**
   * The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modifier_list_id" })
  modifierListId: string;

  /**
   * A set of `CatalogModifierOverride` objects that override whether a given `CatalogModifier` is enabled by default.
   */
  @SpeakeasyMetadata({ elemType: CatalogModifierOverride })
  @Expose({ name: "modifier_overrides" })
  @Type(() => CatalogModifierOverride)
  modifierOverrides?: CatalogModifierOverride[];
}
