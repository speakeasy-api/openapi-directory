// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETBuildSuggestersActionEnum
type GETBuildSuggestersActionEnum string

const (
	GETBuildSuggestersActionEnumBuildSuggesters GETBuildSuggestersActionEnum = "BuildSuggesters"
)

func (e GETBuildSuggestersActionEnum) ToPointer() *GETBuildSuggestersActionEnum {
	return &e
}

func (e *GETBuildSuggestersActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BuildSuggesters":
		*e = GETBuildSuggestersActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBuildSuggestersActionEnum: %v", v)
	}
}

// GETBuildSuggestersVersionEnum
type GETBuildSuggestersVersionEnum string

const (
	GETBuildSuggestersVersionEnumTwoThousandAndThirteen0101 GETBuildSuggestersVersionEnum = "2013-01-01"
)

func (e GETBuildSuggestersVersionEnum) ToPointer() *GETBuildSuggestersVersionEnum {
	return &e
}

func (e *GETBuildSuggestersVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = GETBuildSuggestersVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBuildSuggestersVersionEnum: %v", v)
	}
}

type GETBuildSuggestersRequest struct {
	Action            GETBuildSuggestersActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DomainName        string                        `queryParam:"style=form,explode=true,name=DomainName"`
	Version           GETBuildSuggestersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETBuildSuggestersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
