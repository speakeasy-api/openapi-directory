/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AuthenticationConfig - Contains information about the authentication config that the connector supports.
 */
public class AuthenticationConfig {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customAuthConfigs")
    public CustomAuthConfig[] customAuthConfigs;
    public AuthenticationConfig withCustomAuthConfigs(CustomAuthConfig[] customAuthConfigs) {
        this.customAuthConfigs = customAuthConfigs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isApiKeyAuthSupported")
    public Boolean isApiKeyAuthSupported;
    public AuthenticationConfig withIsApiKeyAuthSupported(Boolean isApiKeyAuthSupported) {
        this.isApiKeyAuthSupported = isApiKeyAuthSupported;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isBasicAuthSupported")
    public Boolean isBasicAuthSupported;
    public AuthenticationConfig withIsBasicAuthSupported(Boolean isBasicAuthSupported) {
        this.isBasicAuthSupported = isBasicAuthSupported;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCustomAuthSupported")
    public Boolean isCustomAuthSupported;
    public AuthenticationConfig withIsCustomAuthSupported(Boolean isCustomAuthSupported) {
        this.isCustomAuthSupported = isCustomAuthSupported;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isOAuth2Supported")
    public Boolean isOAuth2Supported;
    public AuthenticationConfig withIsOAuth2Supported(Boolean isOAuth2Supported) {
        this.isOAuth2Supported = isOAuth2Supported;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oAuth2Defaults")
    public OAuth2Defaults oAuth2Defaults;
    public AuthenticationConfig withOAuth2Defaults(OAuth2Defaults oAuth2Defaults) {
        this.oAuth2Defaults = oAuth2Defaults;
        return this;
    }
    
}
