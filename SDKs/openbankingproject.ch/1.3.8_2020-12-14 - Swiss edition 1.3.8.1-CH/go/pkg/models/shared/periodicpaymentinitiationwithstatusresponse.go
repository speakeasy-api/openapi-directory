// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
	"time"
)

// PeriodicPaymentInitiationWithStatusResponse - Generic JSON response body consistion of the corresponding periodic payment initation JSON body together with an optional transaction status field.
type PeriodicPaymentInitiationWithStatusResponse struct {
	// Reference to an account by either
	//   * IBAN, of a payment accounts, or
	//   * otherAccountIdentification, for payment accounts if there is no IBAN
	// adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
	//
	CreditorAccount AccountReference16CH `json:"creditorAccount"`
	CreditorAddress *Address             `json:"creditorAddress,omitempty"`
	// Reference to an creditorAgent by either
	//   * BIC, of the creditor bank, or
	//   * IID, of the creditor bank, or
	//   * IID and optional name and address of the creditor bank or
	//   * Name and address of the creditor bank
	// adapted from ISO pain.001.001.03.ch.02 FinancialInstitutionIdentification7-CH
	//
	CreditorAgent *CreditorAgent7CH `json:"creditorAgent,omitempty"`
	// Creditor name.
	CreditorName string `json:"creditorName"`
	// Day of execution as string.
	//
	// This string consists of up two characters.
	// Leading zeroes are not allowed.
	//
	// 31 is ultimo of the month.
	//
	DayOfExecution *DayOfExecutionEnum `json:"dayOfExecution,omitempty"`
	// Reference to an account by either
	//   * IBAN, of a payment accounts, or
	//   * otherAccountIdentification, for payment accounts if there is no IBAN
	// adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
	//
	DebtorAccount AccountReference16CH `json:"debtorAccount"`
	// The last applicable day of execution.
	// If not given, it is an infinite standing order.
	//
	EndDate                *types.Date `json:"endDate,omitempty"`
	EndToEndIdentification *string     `json:"endToEndIdentification,omitempty"`
	// "following" or "preceding" supported as values.
	// This data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday.
	// The payment is then executed either the "preceding" or "following" working day.
	// ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting
	// this execution rule.
	//
	ExecutionRule *ExecutionRuleEnum `json:"executionRule,omitempty"`
	// The following codes from the "EventFrequency7Code" of ISO 20022 are supported:
	// - "Daily"
	// - "Weekly"
	// - "EveryTwoWeeks"
	// - "Monthly"
	// - "EveryTwoMonths"
	// - "Quarterly"
	// - "SemiAnnual"
	// - "Annual"
	// - "MonthlyVariable"
	//
	Frequency        FrequencyCodeEnum `json:"frequency"`
	InstructedAmount Amount            `json:"instructedAmount"`
	// ExternalPurpose1Code from ISO 20022.
	//
	// Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
	//
	PurposeCode *PurposeCodeEnum `json:"purposeCode,omitempty"`
	// Structured remittance information.
	//
	RemittanceInformationStructured *RemittanceInformationStructured `json:"remittanceInformationStructured,omitempty"`
	// Unstructured remittance information.
	//
	RemittanceInformationUnstructured *string `json:"remittanceInformationUnstructured,omitempty"`
	// Array of unstructured remittance information.
	//
	RemittanceInformationUnstructuredArray []string    `json:"remittanceInformationUnstructuredArray,omitempty"`
	RequestedExecutionDate                 *types.Date `json:"requestedExecutionDate,omitempty"`
	RequestedExecutionTime                 *time.Time  `json:"requestedExecutionTime,omitempty"`
	// The first applicable day of execution starting from this date is the first payment.
	//
	StartDate types.Date `json:"startDate"`
	// The transaction status is filled with codes of the ISO 20022 data table:
	// - 'ACCC': 'AcceptedSettlementCompleted' -
	//   Settlement on the creditor's account has been completed.
	// - 'ACCP': 'AcceptedCustomerProfile' -
	//   Preceding check of technical validation was successful.
	//   Customer profile check was also successful.
	// - 'ACSC': 'AcceptedSettlementCompleted' -
	//   Settlement on the debtoro?=s account has been completed.
	//
	//   **Usage:** this can be used by the first agent to report to the debtor that the transaction has been completed.
	//
	//   **Warning:** this status is provided for transaction status reasons, not for financial information.
	//   It can only be used after bilateral agreement.
	// - 'ACSP': 'AcceptedSettlementInProcess' -
	//   All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.
	// - 'ACTC': 'AcceptedTechnicalValidation' -
	//   Authentication and syntactical and semantical validation are successful.
	// - 'ACWC': 'AcceptedWithChange' -
	//   Instruction is accepted but a change will be made, such as date or remittance not sent.
	// - 'ACWP': 'AcceptedWithoutPosting' -
	//   Payment instruction included in the credit transfer is accepted without being posted to the creditor customero?=s account.
	// - 'RCVD': 'Received' -
	//   Payment initiation has been received by the receiving agent.
	// - 'PDNG': 'Pending' -
	//   Payment initiation or individual transaction included in the payment initiation is pending.
	//   Further checks and status update will be performed.
	// - 'RJCT': 'Rejected' -
	//   Payment initiation or individual transaction included in the payment initiation has been rejected.
	// - 'CANC': 'Cancelled'
	//   Payment initiation has been cancelled before execution
	//   Remark: This codeis accepted as new code by ISO20022.
	// - 'ACFC': 'AcceptedFundsChecked' -
	//   Preceding check of technical validation and customer profile was successful and an automatic funds check was positive .
	//   Remark: This code is accepted as new code by ISO20022.
	// - 'PATC': 'PartiallyAcceptedTechnical'
	//   Correct The payment initiation needs multiple authentications, where some but not yet all have been performed. Syntactical and semantical validations are successful.
	//   Remark: This code is accepted as new code by ISO20022.
	// - 'PART': 'PartiallyAccepted' -
	//   A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.
	//   Remark: This code may be used only in case of bulk payments. It is only used in a situation where all mandated authorisations have been applied, but some payments have been rejected.
	//
	TransactionStatus *TransactionStatusEnum `json:"transactionStatus,omitempty"`
	// Ultimate creditor.
	UltimateCreditor *string `json:"ultimateCreditor,omitempty"`
	// Ultimate debtor.
	UltimateDebtor *string `json:"ultimateDebtor,omitempty"`
}
