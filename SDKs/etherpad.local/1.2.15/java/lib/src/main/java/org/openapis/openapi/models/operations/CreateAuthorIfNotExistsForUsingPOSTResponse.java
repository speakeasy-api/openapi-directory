/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateAuthorIfNotExistsForUsingPOSTResponse {
    
    public String contentType;

    public CreateAuthorIfNotExistsForUsingPOSTResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateAuthorIfNotExistsForUsingPOSTResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateAuthorIfNotExistsForUsingPOSTResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ok (code 0)
     */
    
    public CreateAuthorIfNotExistsForUsingPOST200ApplicationJSON createAuthorIfNotExistsForUsingPOST200ApplicationJSONObject;

    public CreateAuthorIfNotExistsForUsingPOSTResponse withCreateAuthorIfNotExistsForUsingPOST200ApplicationJSONObject(CreateAuthorIfNotExistsForUsingPOST200ApplicationJSON createAuthorIfNotExistsForUsingPOST200ApplicationJSONObject) {
        this.createAuthorIfNotExistsForUsingPOST200ApplicationJSONObject = createAuthorIfNotExistsForUsingPOST200ApplicationJSONObject;
        return this;
    }
    
    /**
     * generic api error (code 1)
     */
    
    public CreateAuthorIfNotExistsForUsingPOST400ApplicationJSON createAuthorIfNotExistsForUsingPOST400ApplicationJSONObject;

    public CreateAuthorIfNotExistsForUsingPOSTResponse withCreateAuthorIfNotExistsForUsingPOST400ApplicationJSONObject(CreateAuthorIfNotExistsForUsingPOST400ApplicationJSON createAuthorIfNotExistsForUsingPOST400ApplicationJSONObject) {
        this.createAuthorIfNotExistsForUsingPOST400ApplicationJSONObject = createAuthorIfNotExistsForUsingPOST400ApplicationJSONObject;
        return this;
    }
    
    /**
     * no or wrong API key (code 4)
     */
    
    public CreateAuthorIfNotExistsForUsingPOST401ApplicationJSON createAuthorIfNotExistsForUsingPOST401ApplicationJSONObject;

    public CreateAuthorIfNotExistsForUsingPOSTResponse withCreateAuthorIfNotExistsForUsingPOST401ApplicationJSONObject(CreateAuthorIfNotExistsForUsingPOST401ApplicationJSON createAuthorIfNotExistsForUsingPOST401ApplicationJSONObject) {
        this.createAuthorIfNotExistsForUsingPOST401ApplicationJSONObject = createAuthorIfNotExistsForUsingPOST401ApplicationJSONObject;
        return this;
    }
    
    /**
     * internal api error (code 2)
     */
    
    public CreateAuthorIfNotExistsForUsingPOST500ApplicationJSON createAuthorIfNotExistsForUsingPOST500ApplicationJSONObject;

    public CreateAuthorIfNotExistsForUsingPOSTResponse withCreateAuthorIfNotExistsForUsingPOST500ApplicationJSONObject(CreateAuthorIfNotExistsForUsingPOST500ApplicationJSON createAuthorIfNotExistsForUsingPOST500ApplicationJSONObject) {
        this.createAuthorIfNotExistsForUsingPOST500ApplicationJSONObject = createAuthorIfNotExistsForUsingPOST500ApplicationJSONObject;
        return this;
    }
    
    public CreateAuthorIfNotExistsForUsingPOSTResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
