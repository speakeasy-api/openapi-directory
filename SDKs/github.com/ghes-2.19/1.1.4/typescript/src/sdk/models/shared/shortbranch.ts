/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BranchProtection } from "./branchprotection";
import { Expose, Type } from "class-transformer";

export class ShortBranchCommit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "sha" })
  sha: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

/**
 * Short Branch
 */
export class ShortBranch extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "commit" })
  @Type(() => ShortBranchCommit)
  commit: ShortBranchCommit;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "protected" })
  protected: boolean;

  /**
   * Branch Protection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protection" })
  @Type(() => BranchProtection)
  protection?: BranchProtection;

  @SpeakeasyMetadata()
  @Expose({ name: "protection_url" })
  protectionUrl?: string;
}
