/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { City } from "./city";
import { Country } from "./country";
import { Dma } from "./dma";
import { Image } from "./image";
import { Location } from "./location";
import { Market } from "./market";
import { Social } from "./social";
import { Source } from "./source";
import { State } from "./state";
import { VenueBoxOfficeInfo } from "./venueboxofficeinfo";
import { VenueGeneralInfo } from "./venuegeneralinfo";
import { Expose, Type } from "class-transformer";

/**
 * Type of the entity
 */
export enum VenueTypeEnum {
  Event = "event",
  Venue = "venue",
  Attraction = "attraction",
}

/**
 * Venue
 */
export class Venue extends SpeakeasyBase {
  /**
   * Venue accessible seating details - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessibleSeatingDetails" })
  accessibleSeatingDetails?: Record<string, string>;

  /**
   * Indicate if the entity is active, inactive entity won't appear in Discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Additional informations of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfos" })
  additionalInfos?: Record<string, string>;

  /**
   * Address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => Address)
  address?: Address;

  /**
   * Venue box office information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boxOfficeInfo" })
  @Type(() => VenueBoxOfficeInfo)
  boxOfficeInfo?: VenueBoxOfficeInfo;

  /**
   * City
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  @Type(() => City)
  city?: City;

  /**
   * Country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  @Type(() => Country)
  country?: Country;

  /**
   * Default currency of ticket prices for events in this venue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Descriptions of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "descriptions" })
  descriptions?: Record<string, string>;

  /**
   * True if the entity is dicoverable in discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discoverable" })
  discoverable?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "distance" })
  distance?: number;

  /**
   * The list of associated DMAs (Designated Market Areas) of the venue
   */
  @SpeakeasyMetadata({ elemType: Dma })
  @Expose({ name: "dma" })
  @Type(() => Dma)
  dma?: Dma[];

  /**
   * Venue general information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "generalInfo" })
  @Type(() => VenueGeneralInfo)
  generalInfo?: VenueGeneralInfo;

  /**
   * Images of the entity
   */
  @SpeakeasyMetadata({ elemType: Image })
  @Expose({ name: "images" })
  @Type(() => Image)
  images?: Image[];

  /**
   * Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => Location)
  location?: Location;

  /**
   * Markets of the venue
   */
  @SpeakeasyMetadata({ elemType: Market })
  @Expose({ name: "markets" })
  @Type(() => Market)
  markets?: Market[];

  /**
   * Names of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "names" })
  names?: Record<string, string>;

  /**
   * Venue parking info - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parkingDetails" })
  parkingDetails?: Record<string, string>;

  /**
   * Postal code / zipcode of the venue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * References of this entity in an other system. Reference is the exact same entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "references" })
  references?: Record<string, string>;

  /**
   * Relationships on the entity, like if the entity is a duplicate of another one
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  relationships?: Record<string, any>[];

  /**
   * Social networks data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "social" })
  @Type(() => Social)
  social?: Social;

  /**
   * Source
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => Source)
  source?: Source;

  /**
   * State
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(() => State)
  state?: State;

  /**
   * Indicate if this is a test entity, by default test entities won't appear in discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "test" })
  test?: boolean;

  /**
   * Timezone of the venue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;

  /**
   * Type of the entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: VenueTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "units" })
  units?: string;

  /**
   * URL of a web site detail page of the entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * Version of the entity. Version is to avoid updated an entity with an older version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
