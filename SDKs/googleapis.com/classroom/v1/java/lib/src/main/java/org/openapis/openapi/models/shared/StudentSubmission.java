/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StudentSubmission - Student submission for course work. StudentSubmission items are generated when a CourseWork item is created. StudentSubmissions that have never been accessed (i.e. with `state` = NEW) may not have a creation time or update time.
 */
public class StudentSubmission {
    /**
     * Absolute link to the submission in the Classroom web UI. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alternateLink")
    public String alternateLink;

    public StudentSubmission withAlternateLink(String alternateLink) {
        this.alternateLink = alternateLink;
        return this;
    }
    
    /**
     * Optional grade. If unset, no grade was set. This value must be non-negative. Decimal (that is, non-integer) values are allowed, but are rounded to two decimal places. This may be modified only by course teachers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignedGrade")
    public Double assignedGrade;

    public StudentSubmission withAssignedGrade(Double assignedGrade) {
        this.assignedGrade = assignedGrade;
        return this;
    }
    
    /**
     * Student work for an assignment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignmentSubmission")
    public AssignmentSubmission assignmentSubmission;

    public StudentSubmission withAssignmentSubmission(AssignmentSubmission assignmentSubmission) {
        this.assignmentSubmission = assignmentSubmission;
        return this;
    }
    
    /**
     * Whether this student submission is associated with the Developer Console project making the request. See CreateCourseWork for more details. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associatedWithDeveloper")
    public Boolean associatedWithDeveloper;

    public StudentSubmission withAssociatedWithDeveloper(Boolean associatedWithDeveloper) {
        this.associatedWithDeveloper = associatedWithDeveloper;
        return this;
    }
    
    /**
     * Identifier of the course. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("courseId")
    public String courseId;

    public StudentSubmission withCourseId(String courseId) {
        this.courseId = courseId;
        return this;
    }
    
    /**
     * Identifier for the course work this corresponds to. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("courseWorkId")
    public String courseWorkId;

    public StudentSubmission withCourseWorkId(String courseWorkId) {
        this.courseWorkId = courseWorkId;
        return this;
    }
    
    /**
     * Type of course work this submission is for. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("courseWorkType")
    public StudentSubmissionCourseWorkTypeEnum courseWorkType;

    public StudentSubmission withCourseWorkType(StudentSubmissionCourseWorkTypeEnum courseWorkType) {
        this.courseWorkType = courseWorkType;
        return this;
    }
    
    /**
     * Creation time of this submission. This may be unset if the student has not accessed this item. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;

    public StudentSubmission withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * Optional pending grade. If unset, no grade was set. This value must be non-negative. Decimal (that is, non-integer) values are allowed, but are rounded to two decimal places. This is only visible to and modifiable by course teachers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("draftGrade")
    public Double draftGrade;

    public StudentSubmission withDraftGrade(Double draftGrade) {
        this.draftGrade = draftGrade;
        return this;
    }
    
    /**
     * Classroom-assigned Identifier for the student submission. This is unique among submissions for the relevant course work. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public StudentSubmission withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether this submission is late. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("late")
    public Boolean late;

    public StudentSubmission withLate(Boolean late) {
        this.late = late;
        return this;
    }
    
    /**
     * Student work for a multiple-choice question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("multipleChoiceSubmission")
    public MultipleChoiceSubmission multipleChoiceSubmission;

    public StudentSubmission withMultipleChoiceSubmission(MultipleChoiceSubmission multipleChoiceSubmission) {
        this.multipleChoiceSubmission = multipleChoiceSubmission;
        return this;
    }
    
    /**
     * Student work for a short answer question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shortAnswerSubmission")
    public ShortAnswerSubmission shortAnswerSubmission;

    public StudentSubmission withShortAnswerSubmission(ShortAnswerSubmission shortAnswerSubmission) {
        this.shortAnswerSubmission = shortAnswerSubmission;
        return this;
    }
    
    /**
     * State of this submission. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public StudentSubmissionStateEnum state;

    public StudentSubmission withState(StudentSubmissionStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The history of the submission (includes state and grade histories). Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("submissionHistory")
    public SubmissionHistory[] submissionHistory;

    public StudentSubmission withSubmissionHistory(SubmissionHistory[] submissionHistory) {
        this.submissionHistory = submissionHistory;
        return this;
    }
    
    /**
     * Last update time of this submission. This may be unset if the student has not accessed this item. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public StudentSubmission withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * Identifier for the student that owns this submission. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userId")
    public String userId;

    public StudentSubmission withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public StudentSubmission(){}
}
