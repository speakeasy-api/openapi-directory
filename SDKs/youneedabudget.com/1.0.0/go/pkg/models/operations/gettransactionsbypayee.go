// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

// GetTransactionsByPayeeTypeEnum - If specified, only transactions of the specified type will be included. "uncategorized" and "unapproved" are currently supported.
type GetTransactionsByPayeeTypeEnum string

const (
	GetTransactionsByPayeeTypeEnumUncategorized GetTransactionsByPayeeTypeEnum = "uncategorized"
	GetTransactionsByPayeeTypeEnumUnapproved    GetTransactionsByPayeeTypeEnum = "unapproved"
)

func (e GetTransactionsByPayeeTypeEnum) ToPointer() *GetTransactionsByPayeeTypeEnum {
	return &e
}

func (e *GetTransactionsByPayeeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "uncategorized":
		fallthrough
	case "unapproved":
		*e = GetTransactionsByPayeeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransactionsByPayeeTypeEnum: %v", v)
	}
}

type GetTransactionsByPayeeRequest struct {
	// The id of the budget. "last-used" can be used to specify the last used budget and "default" can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget).
	BudgetID string `pathParam:"style=simple,explode=false,name=budget_id"`
	// The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.
	LastKnowledgeOfServer *int64 `queryParam:"style=form,explode=true,name=last_knowledge_of_server"`
	// The id of the payee
	PayeeID string `pathParam:"style=simple,explode=false,name=payee_id"`
	// If specified, only transactions on or after this date will be included.  The date should be ISO formatted (e.g. 2016-12-30).
	SinceDate *types.Date `queryParam:"style=form,explode=true,name=since_date"`
	// If specified, only transactions of the specified type will be included. "uncategorized" and "unapproved" are currently supported.
	Type *GetTransactionsByPayeeTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type GetTransactionsByPayeeResponse struct {
	ContentType string
	// No transactions were found
	ErrorResponse *shared.ErrorResponse
	// The list of requested transactions
	HybridTransactionsResponse *shared.HybridTransactionsResponse
	StatusCode                 int
	RawResponse                *http.Response
}
