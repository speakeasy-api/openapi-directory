/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InventoryAggregator } from "./inventoryaggregator";
import { InventoryFilter } from "./inventoryfilter";
import { ResultAttribute } from "./resultattribute";
import { Expose, Type } from "class-transformer";

export class GetInventoryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: InventoryAggregator })
  @Expose({ name: "Aggregators" })
  @Type(() => InventoryAggregator)
  aggregators?: InventoryAggregator[];

  @SpeakeasyMetadata({ elemType: InventoryFilter })
  @Expose({ name: "Filters" })
  @Type(() => InventoryFilter)
  filters?: InventoryFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: ResultAttribute })
  @Expose({ name: "ResultAttributes" })
  @Type(() => ResultAttribute)
  resultAttributes?: ResultAttribute[];
}
