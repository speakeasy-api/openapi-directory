// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ActivitySnippetTypeEnum - The type of activity that the resource describes.
type ActivitySnippetTypeEnum string

const (
	ActivitySnippetTypeEnumTypeUnspecified ActivitySnippetTypeEnum = "typeUnspecified"
	ActivitySnippetTypeEnumUpload          ActivitySnippetTypeEnum = "upload"
	ActivitySnippetTypeEnumLike            ActivitySnippetTypeEnum = "like"
	ActivitySnippetTypeEnumFavorite        ActivitySnippetTypeEnum = "favorite"
	ActivitySnippetTypeEnumComment         ActivitySnippetTypeEnum = "comment"
	ActivitySnippetTypeEnumSubscription    ActivitySnippetTypeEnum = "subscription"
	ActivitySnippetTypeEnumPlaylistItem    ActivitySnippetTypeEnum = "playlistItem"
	ActivitySnippetTypeEnumRecommendation  ActivitySnippetTypeEnum = "recommendation"
	ActivitySnippetTypeEnumBulletin        ActivitySnippetTypeEnum = "bulletin"
	ActivitySnippetTypeEnumSocial          ActivitySnippetTypeEnum = "social"
	ActivitySnippetTypeEnumChannelItem     ActivitySnippetTypeEnum = "channelItem"
	ActivitySnippetTypeEnumPromotedItem    ActivitySnippetTypeEnum = "promotedItem"
)

func (e ActivitySnippetTypeEnum) ToPointer() *ActivitySnippetTypeEnum {
	return &e
}

func (e *ActivitySnippetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "typeUnspecified":
		fallthrough
	case "upload":
		fallthrough
	case "like":
		fallthrough
	case "favorite":
		fallthrough
	case "comment":
		fallthrough
	case "subscription":
		fallthrough
	case "playlistItem":
		fallthrough
	case "recommendation":
		fallthrough
	case "bulletin":
		fallthrough
	case "social":
		fallthrough
	case "channelItem":
		fallthrough
	case "promotedItem":
		*e = ActivitySnippetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivitySnippetTypeEnum: %v", v)
	}
}

// ActivitySnippet - Basic details about an activity, including title, description, thumbnails, activity type and group. Next ID: 12
type ActivitySnippet struct {
	// The ID that YouTube uses to uniquely identify the channel associated with the activity.
	ChannelID *string `json:"channelId,omitempty"`
	// Channel title for the channel responsible for this activity
	ChannelTitle *string `json:"channelTitle,omitempty"`
	// The description of the resource primarily associated with the activity. @mutable youtube.activities.insert
	Description *string `json:"description,omitempty"`
	// The group ID associated with the activity. A group ID identifies user events that are associated with the same user and resource. For example, if a user rates a video and marks the same video as a favorite, the entries for those events would have the same group ID in the user's activity feed. In your user interface, you can avoid repetition by grouping events with the same groupId value.
	GroupID *string `json:"groupId,omitempty"`
	// The date and time that the video was uploaded.
	PublishedAt *time.Time `json:"publishedAt,omitempty"`
	// Internal representation of thumbnails for a YouTube resource.
	Thumbnails *ThumbnailDetails `json:"thumbnails,omitempty"`
	// The title of the resource primarily associated with the activity.
	Title *string `json:"title,omitempty"`
	// The type of activity that the resource describes.
	Type *ActivitySnippetTypeEnum `json:"type,omitempty"`
}
