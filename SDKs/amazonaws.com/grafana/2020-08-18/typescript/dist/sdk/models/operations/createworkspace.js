"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateWorkspaceResponse = exports.CreateWorkspaceRequest = exports.CreateWorkspaceRequestBody = exports.CreateWorkspaceRequestBodyVpcConfiguration = exports.CreateWorkspaceRequestBodyPermissionTypeEnum = exports.CreateWorkspaceRequestBodyNetworkAccessControl = exports.CreateWorkspaceRequestBodyAccountAccessTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * Specifies whether the workspace can access Amazon Web Services resources in this Amazon Web Services account only, or whether it can also access Amazon Web Services resources in other accounts in the same organization. If you specify <code>ORGANIZATION</code>, you must specify which organizational units the workspace can access in the <code>workspaceOrganizationalUnits</code> parameter.
 */
var CreateWorkspaceRequestBodyAccountAccessTypeEnum;
(function (CreateWorkspaceRequestBodyAccountAccessTypeEnum) {
    CreateWorkspaceRequestBodyAccountAccessTypeEnum["CurrentAccount"] = "CURRENT_ACCOUNT";
    CreateWorkspaceRequestBodyAccountAccessTypeEnum["Organization"] = "ORGANIZATION";
})(CreateWorkspaceRequestBodyAccountAccessTypeEnum = exports.CreateWorkspaceRequestBodyAccountAccessTypeEnum || (exports.CreateWorkspaceRequestBodyAccountAccessTypeEnum = {}));
/**
 * <p>The configuration settings for in-bound network access to your workspace.</p> <p>When this is configured, only listed IP addresses and VPC endpoints will be able to access your workspace. Standard Grafana authentication and authorization will still be required.</p> <p>If this is not configured, or is removed, then all IP addresses and VPC endpoints will be allowed. Standard Grafana authentication and authorization will still be required.</p>
 */
var CreateWorkspaceRequestBodyNetworkAccessControl = /** @class */ (function (_super) {
    __extends(CreateWorkspaceRequestBodyNetworkAccessControl, _super);
    function CreateWorkspaceRequestBodyNetworkAccessControl() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "prefixListIds" }),
        __metadata("design:type", Array)
    ], CreateWorkspaceRequestBodyNetworkAccessControl.prototype, "prefixListIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vpceIds" }),
        __metadata("design:type", Array)
    ], CreateWorkspaceRequestBodyNetworkAccessControl.prototype, "vpceIds", void 0);
    return CreateWorkspaceRequestBodyNetworkAccessControl;
}(utils_1.SpeakeasyBase));
exports.CreateWorkspaceRequestBodyNetworkAccessControl = CreateWorkspaceRequestBodyNetworkAccessControl;
/**
 * <p>When creating a workspace through the Amazon Web Services API, CLI or Amazon Web Services CloudFormation, you must manage IAM roles and provision the permissions that the workspace needs to use Amazon Web Services data sources and notification channels.</p> <p>You must also specify a <code>workspaceRoleArn</code> for a role that you will manage for the workspace to use when accessing those datasources and notification channels.</p> <p>The ability for Amazon Managed Grafana to create and update IAM roles on behalf of the user is supported only in the Amazon Managed Grafana console, where this value may be set to <code>SERVICE_MANAGED</code>.</p> <note> <p>Use only the <code>CUSTOMER_MANAGED</code> permission type when creating a workspace with the API, CLI or Amazon Web Services CloudFormation. </p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/grafana/latest/userguide/AMG-manage-permissions.html">Amazon Managed Grafana permissions and policies for Amazon Web Services data sources and notification channels</a>.</p>
 */
var CreateWorkspaceRequestBodyPermissionTypeEnum;
(function (CreateWorkspaceRequestBodyPermissionTypeEnum) {
    CreateWorkspaceRequestBodyPermissionTypeEnum["CustomerManaged"] = "CUSTOMER_MANAGED";
    CreateWorkspaceRequestBodyPermissionTypeEnum["ServiceManaged"] = "SERVICE_MANAGED";
})(CreateWorkspaceRequestBodyPermissionTypeEnum = exports.CreateWorkspaceRequestBodyPermissionTypeEnum || (exports.CreateWorkspaceRequestBodyPermissionTypeEnum = {}));
/**
 * <p>The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.</p> <note> <p>Provided <code>securityGroupIds</code> and <code>subnetIds</code> must be part of the same VPC.</p> </note>
 */
var CreateWorkspaceRequestBodyVpcConfiguration = /** @class */ (function (_super) {
    __extends(CreateWorkspaceRequestBodyVpcConfiguration, _super);
    function CreateWorkspaceRequestBodyVpcConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "securityGroupIds" }),
        __metadata("design:type", Array)
    ], CreateWorkspaceRequestBodyVpcConfiguration.prototype, "securityGroupIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subnetIds" }),
        __metadata("design:type", Array)
    ], CreateWorkspaceRequestBodyVpcConfiguration.prototype, "subnetIds", void 0);
    return CreateWorkspaceRequestBodyVpcConfiguration;
}(utils_1.SpeakeasyBase));
exports.CreateWorkspaceRequestBodyVpcConfiguration = CreateWorkspaceRequestBodyVpcConfiguration;
var CreateWorkspaceRequestBody = /** @class */ (function (_super) {
    __extends(CreateWorkspaceRequestBody, _super);
    function CreateWorkspaceRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountAccessType" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "accountAccessType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authenticationProviders" }),
        __metadata("design:type", Array)
    ], CreateWorkspaceRequestBody.prototype, "authenticationProviders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientToken" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "clientToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "configuration" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "configuration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "networkAccessControl" }),
        (0, class_transformer_1.Type)(function () { return CreateWorkspaceRequestBodyNetworkAccessControl; }),
        __metadata("design:type", CreateWorkspaceRequestBodyNetworkAccessControl)
    ], CreateWorkspaceRequestBody.prototype, "networkAccessControl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "organizationRoleName" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "organizationRoleName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "permissionType" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "permissionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stackSetName" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "stackSetName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        __metadata("design:type", Object)
    ], CreateWorkspaceRequestBody.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vpcConfiguration" }),
        (0, class_transformer_1.Type)(function () { return CreateWorkspaceRequestBodyVpcConfiguration; }),
        __metadata("design:type", CreateWorkspaceRequestBodyVpcConfiguration)
    ], CreateWorkspaceRequestBody.prototype, "vpcConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workspaceDataSources" }),
        __metadata("design:type", Array)
    ], CreateWorkspaceRequestBody.prototype, "workspaceDataSources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workspaceDescription" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "workspaceDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workspaceName" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "workspaceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workspaceNotificationDestinations" }),
        __metadata("design:type", Array)
    ], CreateWorkspaceRequestBody.prototype, "workspaceNotificationDestinations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workspaceOrganizationalUnits" }),
        __metadata("design:type", Array)
    ], CreateWorkspaceRequestBody.prototype, "workspaceOrganizationalUnits", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workspaceRoleArn" }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequestBody.prototype, "workspaceRoleArn", void 0);
    return CreateWorkspaceRequestBody;
}(utils_1.SpeakeasyBase));
exports.CreateWorkspaceRequestBody = CreateWorkspaceRequestBody;
var CreateWorkspaceRequest = /** @class */ (function (_super) {
    __extends(CreateWorkspaceRequest, _super);
    function CreateWorkspaceRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", CreateWorkspaceRequestBody)
    ], CreateWorkspaceRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], CreateWorkspaceRequest.prototype, "xAmzSignedHeaders", void 0);
    return CreateWorkspaceRequest;
}(utils_1.SpeakeasyBase));
exports.CreateWorkspaceRequest = CreateWorkspaceRequest;
var CreateWorkspaceResponse = /** @class */ (function (_super) {
    __extends(CreateWorkspaceResponse, _super);
    function CreateWorkspaceResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateWorkspaceResponse.prototype, "accessDeniedException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateWorkspaceResponse.prototype, "conflictException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateWorkspaceResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.CreateWorkspaceResponse)
    ], CreateWorkspaceResponse.prototype, "createWorkspaceResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateWorkspaceResponse.prototype, "internalServerException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateWorkspaceResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateWorkspaceResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateWorkspaceResponse.prototype, "serviceQuotaExceededException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateWorkspaceResponse.prototype, "throttlingException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateWorkspaceResponse.prototype, "validationException", void 0);
    return CreateWorkspaceResponse;
}(utils_1.SpeakeasyBase));
exports.CreateWorkspaceResponse = CreateWorkspaceResponse;
