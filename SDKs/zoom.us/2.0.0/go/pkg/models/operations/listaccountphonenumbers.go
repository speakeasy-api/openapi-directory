// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ListAccountPhoneNumbersSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// ListAccountPhoneNumbersExtensionTypeEnum - The type of assignee to whom the number is assigned. The value can be one of the following:<br>
// `user`<br> `callQueue`<br> `autoReceptionist`<br>
// `commonAreaPhone`
type ListAccountPhoneNumbersExtensionTypeEnum string

const (
	ListAccountPhoneNumbersExtensionTypeEnumUser             ListAccountPhoneNumbersExtensionTypeEnum = "user"
	ListAccountPhoneNumbersExtensionTypeEnumCallQueue        ListAccountPhoneNumbersExtensionTypeEnum = "callQueue"
	ListAccountPhoneNumbersExtensionTypeEnumAutoReceptionist ListAccountPhoneNumbersExtensionTypeEnum = "autoReceptionist"
	ListAccountPhoneNumbersExtensionTypeEnumCommonAreaPhone  ListAccountPhoneNumbersExtensionTypeEnum = "commonAreaPhone"
)

func (e *ListAccountPhoneNumbersExtensionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "callQueue":
		fallthrough
	case "autoReceptionist":
		fallthrough
	case "commonAreaPhone":
		*e = ListAccountPhoneNumbersExtensionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbersExtensionTypeEnum: %s", s)
	}
}

// ListAccountPhoneNumbersNumberTypeEnum - The type of phone number. The value can be either `toll` or `tollfree`.
type ListAccountPhoneNumbersNumberTypeEnum string

const (
	ListAccountPhoneNumbersNumberTypeEnumToll     ListAccountPhoneNumbersNumberTypeEnum = "toll"
	ListAccountPhoneNumbersNumberTypeEnumTollfree ListAccountPhoneNumbersNumberTypeEnum = "tollfree"
)

func (e *ListAccountPhoneNumbersNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "toll":
		fallthrough
	case "tollfree":
		*e = ListAccountPhoneNumbersNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbersNumberTypeEnum: %s", s)
	}
}

// ListAccountPhoneNumbersTypeEnum - Query response by number assignment. The value can be one of the following:
// <br>
// `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>
// `all`: Include both assigned and unassigned numbers in the response.<br>
// `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
type ListAccountPhoneNumbersTypeEnum string

const (
	ListAccountPhoneNumbersTypeEnumAssigned   ListAccountPhoneNumbersTypeEnum = "assigned"
	ListAccountPhoneNumbersTypeEnumUnassigned ListAccountPhoneNumbersTypeEnum = "unassigned"
	ListAccountPhoneNumbersTypeEnumAll        ListAccountPhoneNumbersTypeEnum = "all"
)

func (e *ListAccountPhoneNumbersTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "assigned":
		fallthrough
	case "unassigned":
		fallthrough
	case "all":
		*e = ListAccountPhoneNumbersTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbersTypeEnum: %s", s)
	}
}

type ListAccountPhoneNumbersRequest struct {
	// The type of assignee to whom the number is assigned. The value can be one of the following:<br>
	// `user`<br> `callQueue`<br> `autoReceptionist`<br>
	// `commonAreaPhone`
	ExtensionType *ListAccountPhoneNumbersExtensionTypeEnum `queryParam:"style=form,explode=true,name=extension_type"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The type of phone number. The value can be either `toll` or `tollfree`.
	NumberType *ListAccountPhoneNumbersNumberTypeEnum `queryParam:"style=form,explode=true,name=number_type"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Include or exclude pending numbers in the response. The value can be either `true` or `false`.
	PendingNumbers *bool `queryParam:"style=form,explode=true,name=pending_numbers"`
	// Unique identifier of the site. Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by a specific phone site. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details.
	SiteID *string `queryParam:"style=form,explode=true,name=site_id"`
	// Query response by number assignment. The value can be one of the following:
	// <br>
	// `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>
	// `all`: Include both assigned and unassigned numbers in the response.<br>
	// `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
	Type *ListAccountPhoneNumbersTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

// ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum - Indicates who the phone number belongs to.<br>
// `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum string

const (
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnumUser             ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum = "user"
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnumCallQueue        ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum = "callQueue"
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnumAutoReceptionist ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum = "autoReceptionist"
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnumCommonAreaPhone  ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum = "commonAreaPhone"
)

func (e *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "callQueue":
		fallthrough
	case "autoReceptionist":
		fallthrough
	case "commonAreaPhone":
		*e = ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum: %s", s)
	}
}

type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssignee struct {
	// Extension number of the Phone.
	ExtensionNumber *int64
	// Unique Identifier of the user to whom the number has been assigned.
	ID *string
	// Name of the user to whom the number has been assigned.
	Name *string
	// Indicates who the phone number belongs to.<br>
	// `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
	// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
	Type *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum
}

// ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersCarrier - Displayed when the `type` request parameter is `byoc`.
type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersCarrier struct {
	// The carrier code.
	Code *string
	// Name of the carrier to which the phone number is assigned.
	Name *string
}

// ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum - The type of number. Values can be one of the following:<br>
// `toll`, `tollfree`
type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum string

const (
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnumToll     ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum = "toll"
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnumTollfree ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum = "tollfree"
)

func (e *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "toll":
		fallthrough
	case "tollfree":
		*e = ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum: %s", s)
	}
}

// ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSipGroup - Displayed when the `type` request parameter is `byoc`.
type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSipGroup struct {
	// The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.
	ID *string
	// Name of the SIP group for which the phone number is assigned.
	Name *string
}

type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSite struct {
	// Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
	ID *string
	// Name of the site where the phone number is assigned.
	Name *string
}

// ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum - Source of phone number.
type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum string

const (
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnumInternal ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum = "internal"
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnumExternal ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum = "external"
)

func (e *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum: %s", s)
	}
}

// ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum - Status of the number.
type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum string

const (
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnumPending   ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum = "pending"
	ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnumAvailable ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum = "available"
)

func (e *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		*e = ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum: %s", s)
	}
}

type ListAccountPhoneNumbers200ApplicationXMLPhoneNumbers struct {
	Assignee *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssignee
	// The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.
	Capability []string
	// Displayed when the `type` request parameter is `byoc`.
	Carrier *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersCarrier
	// The display name for the phone number.
	DisplayName *string
	// Unique Identifier of the Phone Number.
	ID *string
	// Location (city, state and country) where the Phone number is assigned.
	Location *string
	// Phone number in E164 format.
	Number *string
	// The type of number. Values can be one of the following:<br>
	// `toll`, `tollfree`
	NumberType *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum
	// Displayed when the `type` request parameter is `byoc`.
	SipGroup *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSipGroup
	Site     *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSite
	// Source of phone number.
	Source *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum
	// Status of the number.
	Status *ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum
}

// ListAccountPhoneNumbers200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// Phone numbers listed successfully.
type ListAccountPhoneNumbers200ApplicationXML struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)
	NextPageToken *string
	// The number of records returned within a single API call.
	PageSize     *int64
	PhoneNumbers []ListAccountPhoneNumbers200ApplicationXMLPhoneNumbers
	// The total number of records returned.
	TotalRecords *int64
}

// ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum - Indicates who the phone number belongs to.<br>
// `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum string

const (
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnumUser             ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum = "user"
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnumCallQueue        ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum = "callQueue"
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnumAutoReceptionist ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum = "autoReceptionist"
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnumCommonAreaPhone  ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum = "commonAreaPhone"
)

func (e *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "callQueue":
		fallthrough
	case "autoReceptionist":
		fallthrough
	case "commonAreaPhone":
		*e = ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum: %s", s)
	}
}

type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssignee struct {
	// Extension number of the Phone.
	ExtensionNumber *int64 `json:"extension_number,omitempty"`
	// Unique Identifier of the user to whom the number has been assigned.
	ID *string `json:"id,omitempty"`
	// Name of the user to whom the number has been assigned.
	Name *string `json:"name,omitempty"`
	// Indicates who the phone number belongs to.<br>
	// `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
	// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
	Type *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum `json:"type,omitempty"`
}

// ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersCarrier - Displayed when the `type` request parameter is `byoc`.
type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersCarrier struct {
	// The carrier code.
	Code *string `json:"code,omitempty"`
	// Name of the carrier to which the phone number is assigned.
	Name *string `json:"name,omitempty"`
}

// ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum - The type of number. Values can be one of the following:<br>
// `toll`, `tollfree`
type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum string

const (
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnumToll     ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum = "toll"
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnumTollfree ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum = "tollfree"
)

func (e *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "toll":
		fallthrough
	case "tollfree":
		*e = ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum: %s", s)
	}
}

// ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSipGroup - Displayed when the `type` request parameter is `byoc`.
type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSipGroup struct {
	// The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.
	ID *string `json:"id,omitempty"`
	// Name of the SIP group for which the phone number is assigned.
	Name *string `json:"name,omitempty"`
}

type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSite struct {
	// Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
	ID *string `json:"id,omitempty"`
	// Name of the site where the phone number is assigned.
	Name *string `json:"name,omitempty"`
}

// ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum - Source of phone number.
type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum string

const (
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnumInternal ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum = "internal"
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnumExternal ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum = "external"
)

func (e *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum: %s", s)
	}
}

// ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum - Status of the number.
type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum string

const (
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnumPending   ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum = "pending"
	ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnumAvailable ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum = "available"
)

func (e *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		*e = ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum: %s", s)
	}
}

type ListAccountPhoneNumbers200ApplicationJSONPhoneNumbers struct {
	Assignee *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssignee `json:"assignee,omitempty"`
	// The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.
	Capability []string `json:"capability,omitempty"`
	// Displayed when the `type` request parameter is `byoc`.
	Carrier *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersCarrier `json:"carrier,omitempty"`
	// The display name for the phone number.
	DisplayName *string `json:"display_name,omitempty"`
	// Unique Identifier of the Phone Number.
	ID *string `json:"id,omitempty"`
	// Location (city, state and country) where the Phone number is assigned.
	Location *string `json:"location,omitempty"`
	// Phone number in E164 format.
	Number *string `json:"number,omitempty"`
	// The type of number. Values can be one of the following:<br>
	// `toll`, `tollfree`
	NumberType *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum `json:"number_type,omitempty"`
	// Displayed when the `type` request parameter is `byoc`.
	SipGroup *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSipGroup `json:"sip_group,omitempty"`
	Site     *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSite     `json:"site,omitempty"`
	// Source of phone number.
	Source *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum `json:"source,omitempty"`
	// Status of the number.
	Status *ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum `json:"status,omitempty"`
}

// ListAccountPhoneNumbers200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// Phone numbers listed successfully.
type ListAccountPhoneNumbers200ApplicationJSON struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of records returned within a single API call.
	PageSize     *int64                                                  `json:"page_size,omitempty"`
	PhoneNumbers []ListAccountPhoneNumbers200ApplicationJSONPhoneNumbers `json:"phone_numbers,omitempty"`
	// The total number of records returned.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type ListAccountPhoneNumbersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// Phone numbers listed successfully.
	ListAccountPhoneNumbers200ApplicationJSONObject *ListAccountPhoneNumbers200ApplicationJSON
}
