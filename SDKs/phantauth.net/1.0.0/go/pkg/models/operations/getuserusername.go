// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetUserUsernameRequest struct {
	// The username or email used for generation purposes.
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

// GetUserUsername200ApplicationJSONAddress - The user's preferred postal address.
type GetUserUsername200ApplicationJSONAddress struct {
	// Country name component.
	Country *string `json:"country,omitempty"`
	// Full mailing address, formatted for display or use on a mailing label. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair or as a single line feed character.
	Formatted *string `json:"formatted,omitempty"`
	// City or locality component.
	Locality *string `json:"locality,omitempty"`
	// Zip code or postal code component.
	PostalCode *string `json:"postal_code,omitempty"`
	// State, province, prefecture, or region component.
	Region *string `json:"region,omitempty"`
	// Full street address component, which MAY include house number, street name, post office box, and multi-line extended street address information. This field MAY contain multiple lines, separated by newlines. Newlines can be represented either as a carriage return/line feed pair or as a single line feed character.
	StreetAddress *string `json:"street_address,omitempty"`
}

// GetUserUsername200ApplicationJSON - OK
type GetUserUsername200ApplicationJSON struct {
	// The URL of the user's JSON representation.
	AtID *string `json:"@id,omitempty"`
	// The user's preferred postal address.
	Address *GetUserUsername200ApplicationJSONAddress `json:"address,omitempty"`
	// The user's birthday, represented as an ISO 8601:2004 [ISO8601â€‘2004] YYYY-MM-DD format.
	Birthdate *string `json:"birthdate,omitempty"`
	// The user's preferred email address.
	Email *string `json:"email,omitempty"`
	// True if the user's e-mail address has been verified; otherwise false.
	EmailVerified *bool `json:"email_verified,omitempty"`
	// The user's surname(s) or last name(s).
	FamilyName *string `json:"family_name,omitempty"`
	// The enduser's gender. Possible values are: female, male, and unknown.
	Gender *string `json:"gender,omitempty"`
	// The user's given name(s) or first name(s).
	GivenName *string `json:"given_name,omitempty"`
	// The user's locale, represented as a BCP47 [RFC5646] language tag. It is an ISO 639-1 Alpha-2 language code in lowercase and an ISO 3166-1 Alpha-2 country code in uppercase letters, separated by a dash.
	Locale *string `json:"locale,omitempty"`
	// The simplified URL of the user's profile page.
	Me *string `json:"me,omitempty"`
	// The user's middle name(s).
	MiddleName *string `json:"middle_name,omitempty"`
	// The user's full name in displayable form, including all name parts, possibly including titles and suffixes, ordered according to the enduser's locale and preferences.
	Name *string `json:"name,omitempty"`
	// A casual name of the User that may or may not be the same as the given_name.
	Nickname *string `json:"nickname,omitempty"`
	// The user's generated password.
	Password *string `json:"password,omitempty"`
	// The user's preferred telephone number.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// True if the enduser's phone number has been verified; otherwise false.
	PhoneNumberVerified *bool `json:"phone_number_verified,omitempty"`
	// The URL of the user's profile picture.
	Picture *string `json:"picture,omitempty"`
	// A shorthand name by which the user wishes to be referred to at the Relying Party.
	PreferredUsername *string `json:"preferred_username,omitempty"`
	// The URL of the user's profile page.
	Profile *string `json:"profile,omitempty"`
	// Subject - User identifier at the issuer.
	Sub string `json:"sub"`
	// The user's simplified, shortened identifier at the Issuer.
	UID *string `json:"uid,omitempty"`
	// The time when the User's information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time.
	UpdatedAt *float64 `json:"updated_at,omitempty"`
	// The URL of user's mailbox in a webmail application.
	Webmail *string `json:"webmail,omitempty"`
	// The URL of the user's webpage or blog.
	Website *string `json:"website,omitempty"`
	// A string from the zoneinfo time zone database representing the user's time zone. For example, Europe/Paris or America/Los_Angeles.
	Zoneinfo *string `json:"zoneinfo,omitempty"`
}

type GetUserUsernameResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	GetUserUsername200ApplicationJSONObject *GetUserUsername200ApplicationJSON
}
