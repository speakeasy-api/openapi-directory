// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETResetInstanceAttributeActionEnum
type GETResetInstanceAttributeActionEnum string

const (
	GETResetInstanceAttributeActionEnumResetInstanceAttribute GETResetInstanceAttributeActionEnum = "ResetInstanceAttribute"
)

func (e *GETResetInstanceAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ResetInstanceAttribute":
		*e = GETResetInstanceAttributeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetInstanceAttributeActionEnum: %s", s)
	}
}

// GETResetInstanceAttributeAttributeEnum - <p>The attribute to reset.</p> <important> <p>You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>.</p> </important>
type GETResetInstanceAttributeAttributeEnum string

const (
	GETResetInstanceAttributeAttributeEnumInstanceType                      GETResetInstanceAttributeAttributeEnum = "instanceType"
	GETResetInstanceAttributeAttributeEnumKernel                            GETResetInstanceAttributeAttributeEnum = "kernel"
	GETResetInstanceAttributeAttributeEnumRamdisk                           GETResetInstanceAttributeAttributeEnum = "ramdisk"
	GETResetInstanceAttributeAttributeEnumUserData                          GETResetInstanceAttributeAttributeEnum = "userData"
	GETResetInstanceAttributeAttributeEnumDisableAPITermination             GETResetInstanceAttributeAttributeEnum = "disableApiTermination"
	GETResetInstanceAttributeAttributeEnumInstanceInitiatedShutdownBehavior GETResetInstanceAttributeAttributeEnum = "instanceInitiatedShutdownBehavior"
	GETResetInstanceAttributeAttributeEnumRootDeviceName                    GETResetInstanceAttributeAttributeEnum = "rootDeviceName"
	GETResetInstanceAttributeAttributeEnumBlockDeviceMapping                GETResetInstanceAttributeAttributeEnum = "blockDeviceMapping"
	GETResetInstanceAttributeAttributeEnumProductCodes                      GETResetInstanceAttributeAttributeEnum = "productCodes"
	GETResetInstanceAttributeAttributeEnumSourceDestCheck                   GETResetInstanceAttributeAttributeEnum = "sourceDestCheck"
	GETResetInstanceAttributeAttributeEnumGroupSet                          GETResetInstanceAttributeAttributeEnum = "groupSet"
	GETResetInstanceAttributeAttributeEnumEbsOptimized                      GETResetInstanceAttributeAttributeEnum = "ebsOptimized"
	GETResetInstanceAttributeAttributeEnumSriovNetSupport                   GETResetInstanceAttributeAttributeEnum = "sriovNetSupport"
	GETResetInstanceAttributeAttributeEnumEnaSupport                        GETResetInstanceAttributeAttributeEnum = "enaSupport"
	GETResetInstanceAttributeAttributeEnumEnclaveOptions                    GETResetInstanceAttributeAttributeEnum = "enclaveOptions"
	GETResetInstanceAttributeAttributeEnumDisableAPIStop                    GETResetInstanceAttributeAttributeEnum = "disableApiStop"
)

func (e *GETResetInstanceAttributeAttributeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "instanceType":
		fallthrough
	case "kernel":
		fallthrough
	case "ramdisk":
		fallthrough
	case "userData":
		fallthrough
	case "disableApiTermination":
		fallthrough
	case "instanceInitiatedShutdownBehavior":
		fallthrough
	case "rootDeviceName":
		fallthrough
	case "blockDeviceMapping":
		fallthrough
	case "productCodes":
		fallthrough
	case "sourceDestCheck":
		fallthrough
	case "groupSet":
		fallthrough
	case "ebsOptimized":
		fallthrough
	case "sriovNetSupport":
		fallthrough
	case "enaSupport":
		fallthrough
	case "enclaveOptions":
		fallthrough
	case "disableApiStop":
		*e = GETResetInstanceAttributeAttributeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetInstanceAttributeAttributeEnum: %s", s)
	}
}

// GETResetInstanceAttributeVersionEnum
type GETResetInstanceAttributeVersionEnum string

const (
	GETResetInstanceAttributeVersionEnumTwoThousandAndSixteen1115 GETResetInstanceAttributeVersionEnum = "2016-11-15"
)

func (e *GETResetInstanceAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETResetInstanceAttributeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetInstanceAttributeVersionEnum: %s", s)
	}
}

type GETResetInstanceAttributeQueryParams struct {
	Action GETResetInstanceAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The attribute to reset.</p> <important> <p>You can only reset the following attributes: <code>kernel</code> | <code>ramdisk</code> | <code>sourceDestCheck</code>.</p> </important>
	Attribute GETResetInstanceAttributeAttributeEnum `queryParam:"style=form,explode=true,name=Attribute"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the instance.
	InstanceID string                               `queryParam:"style=form,explode=true,name=InstanceId"`
	Version    GETResetInstanceAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETResetInstanceAttributeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETResetInstanceAttributeRequest struct {
	QueryParams GETResetInstanceAttributeQueryParams
	Headers     GETResetInstanceAttributeHeaders
}

type GETResetInstanceAttributeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
