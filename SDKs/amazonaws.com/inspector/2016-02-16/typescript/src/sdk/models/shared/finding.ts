/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssetAttributes } from "./assetattributes";
import { AssetTypeEnum } from "./assettypeenum";
import { Attribute } from "./attribute";
import { InspectorServiceAttributes } from "./inspectorserviceattributes";
import { SeverityEnum } from "./severityenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about an Amazon Inspector finding. This data type is used as the response element in the <a>DescribeFindings</a> action.
 */
export class Finding extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assetAttributes" })
  @Type(() => AssetAttributes)
  assetAttributes?: AssetAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "assetType" })
  assetType?: AssetTypeEnum;

  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "attributes" })
  @Type(() => Attribute)
  attributes: Attribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "confidence" })
  confidence?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "indicatorOfCompromise" })
  indicatorOfCompromise?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "numericSeverity" })
  numericSeverity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendation" })
  recommendation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "schemaVersion" })
  schemaVersion?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "service" })
  service?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceAttributes" })
  @Type(() => InspectorServiceAttributes)
  serviceAttributes?: InspectorServiceAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: SeverityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata({ elemType: Attribute })
  @Expose({ name: "userAttributes" })
  @Type(() => Attribute)
  userAttributes: Attribute[];
}
