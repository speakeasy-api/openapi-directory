/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderFields {
    /**
     * Array of additional fields for the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additional_fields")
    public OrderAdditionalFields[] additionalFields;
    public OrderFields withAdditionalFields(OrderAdditionalFields[] additionalFields) {
        this.additionalFields = additionalFields;
        return this;
    }
    
    /**
     * Additional information for the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additional_information")
    public String additionalInformation;
    public OrderFields withAdditionalInformation(String additionalInformation) {
        this.additionalInformation = additionalInformation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billing_address")
    public OrderBillingAddress billingAddress;
    public OrderFields withBillingAddress(OrderBillingAddress billingAddress) {
        this.billingAddress = billingAddress;
        return this;
    }
    
    /**
     * Store Checkout Order URL for the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkout_url")
    public String checkoutUrl;
    public OrderFields withCheckoutUrl(String checkoutUrl) {
        this.checkoutUrl = checkoutUrl;
        return this;
    }
    
    /**
     * Promotion Coupons used on the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coupons")
    public String coupons;
    public OrderFields withCoupons(String coupons) {
        this.coupons = coupons;
        return this;
    }
    
    /**
     * Order date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;
    public OrderFields withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Currency of the Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public OrderFields withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customer")
    public Customer customer;
    public OrderFields withCustomer(Customer customer) {
        this.customer = customer;
        return this;
    }
    
    /**
     * Discount value for the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discount")
    public Float discount;
    public OrderFields withDiscount(Float discount) {
        this.discount = discount;
        return this;
    }
    
    /**
     * Duplicate Order URL for the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duplicate_url")
    public String duplicateUrl;
    public OrderFields withDuplicateUrl(String duplicateUrl) {
        this.duplicateUrl = duplicateUrl;
        return this;
    }
    
    /**
     * Rate id for selected External Shipping Method rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_shipping_rate_id")
    public String externalShippingRateId;
    public OrderFields withExternalShippingRateId(String externalShippingRateId) {
        this.externalShippingRateId = externalShippingRateId;
        return this;
    }
    
    /**
     * Unique identifier of the Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;
    public OrderFields withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Payment information for the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_information")
    public String paymentInformation;
    public OrderFields withPaymentInformation(String paymentInformation) {
        this.paymentInformation = paymentInformation;
        return this;
    }
    
    /**
     * Payment Method name used e.g. PayPal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_method_name")
    public String paymentMethodName;
    public OrderFields withPaymentMethodName(String paymentMethodName) {
        this.paymentMethodName = paymentMethodName;
        return this;
    }
    
    /**
     * Payment Method type used e.g. paypal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_method_type")
    public String paymentMethodType;
    public OrderFields withPaymentMethodType(String paymentMethodType) {
        this.paymentMethodType = paymentMethodType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("products")
    public OrderProduct[] products;
    public OrderFields withProducts(OrderProduct[] products) {
        this.products = products;
        return this;
    }
    
    /**
     * Recovery Order URL for the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recovery_url")
    public String recoveryUrl;
    public OrderFields withRecoveryUrl(String recoveryUrl) {
        this.recoveryUrl = recoveryUrl;
        return this;
    }
    
    /**
     * Shipment Status for Order Fulfillment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipment_status")
    public OrderFieldsShipmentStatusEnum shipmentStatus;
    public OrderFields withShipmentStatus(OrderFieldsShipmentStatusEnum shipmentStatus) {
        this.shipmentStatus = shipmentStatus;
        return this;
    }
    
    /**
     * Shipping value for the given Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping")
    public Float shipping;
    public OrderFields withShipping(Float shipping) {
        this.shipping = shipping;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_address")
    public OrderShippingAddress shippingAddress;
    public OrderFields withShippingAddress(OrderShippingAddress shippingAddress) {
        this.shippingAddress = shippingAddress;
        return this;
    }
    
    /**
     * Shipping Discount value for the given order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_discount")
    public Float shippingDiscount;
    public OrderFields withShippingDiscount(Float shippingDiscount) {
        this.shippingDiscount = shippingDiscount;
        return this;
    }
    
    /**
     * Shipping method e.g. Royal Mail
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_method_id")
    public Integer shippingMethodId;
    public OrderFields withShippingMethodId(Integer shippingMethodId) {
        this.shippingMethodId = shippingMethodId;
        return this;
    }
    
    /**
     * Shipping method e.g. Royal Mail
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_method_name")
    public String shippingMethodName;
    public OrderFields withShippingMethodName(String shippingMethodName) {
        this.shippingMethodName = shippingMethodName;
        return this;
    }
    
    /**
     * Shipping option for this order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_option")
    public OrderFieldsShippingOptionEnum shippingOption;
    public OrderFields withShippingOption(OrderFieldsShippingOptionEnum shippingOption) {
        this.shippingOption = shippingOption;
        return this;
    }
    
    /**
     * False if the order is digital.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_required")
    public Boolean shippingRequired;
    public OrderFields withShippingRequired(Boolean shippingRequired) {
        this.shippingRequired = shippingRequired;
        return this;
    }
    
    /**
     * Shipping Tax value for the given order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_tax")
    public Float shippingTax;
    public OrderFields withShippingTax(Float shippingTax) {
        this.shippingTax = shippingTax;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipping_taxes")
    public OrderShippingTax[] shippingTaxes;
    public OrderFields withShippingTaxes(OrderShippingTax[] shippingTaxes) {
        this.shippingTaxes = shippingTaxes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public TrafficSource source;
    public OrderFields withSource(TrafficSource source) {
        this.source = source;
        return this;
    }
    
    /**
     * Status of the Order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public OrderFieldsStatusEnum status;
    public OrderFields withStatus(OrderFieldsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Subtotal value for the given Order. Excluding taxes, shipping and discounts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtotal")
    public Float subtotal;
    public OrderFields withSubtotal(Float subtotal) {
        this.subtotal = subtotal;
        return this;
    }
    
    /**
     * Tax value for the given order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax")
    public Float tax;
    public OrderFields withTax(Float tax) {
        this.tax = tax;
        return this;
    }
    
    /**
     * Total value for the given Order. Including taxes, shipping and discounts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Float total;
    public OrderFields withTotal(Float total) {
        this.total = total;
        return this;
    }
    
    /**
     * Company Used for Order Fulfillment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking_company")
    public String trackingCompany;
    public OrderFields withTrackingCompany(String trackingCompany) {
        this.trackingCompany = trackingCompany;
        return this;
    }
    
    /**
     * Tracking Number for Order Fulfillment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking_number")
    public String trackingNumber;
    public OrderFields withTrackingNumber(String trackingNumber) {
        this.trackingNumber = trackingNumber;
        return this;
    }
    
    /**
     * Tracking URL for Order Fulfillment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking_url")
    public String trackingUrl;
    public OrderFields withTrackingUrl(String trackingUrl) {
        this.trackingUrl = trackingUrl;
        return this;
    }
    
}
