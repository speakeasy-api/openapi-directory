"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RegressionEvaluationMetrics:
    r"""Metrics for regression problems."""
    
    mean_absolute_error: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meanAbsoluteError'), 'exclude': lambda f: f is None }})
    r"""Output only. Mean Absolute Error (MAE)."""  
    mean_absolute_percentage_error: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meanAbsolutePercentageError'), 'exclude': lambda f: f is None }})
    r"""Output only. Mean absolute percentage error. Only set if all ground truth values are are positive."""  
    root_mean_squared_error: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rootMeanSquaredError'), 'exclude': lambda f: f is None }})
    r"""Output only. Root Mean Squared Error (RMSE)."""  
    root_mean_squared_log_error: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rootMeanSquaredLogError'), 'exclude': lambda f: f is None }})
    r"""Output only. Root mean squared log error."""  
    r_squared: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rSquared'), 'exclude': lambda f: f is None }})
    r"""Output only. R squared."""  
    