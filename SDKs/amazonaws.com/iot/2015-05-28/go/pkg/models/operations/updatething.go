// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateThingPathParams struct {
	// <p>The name of the thing to update.</p> <p>You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.</p>
	ThingName string `pathParam:"style=simple,explode=false,name=thingName"`
}

type UpdateThingHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateThingRequestBodyAttributePayload - The attribute payload.
type UpdateThingRequestBodyAttributePayload struct {
	Attributes map[string]string `json:"attributes,omitempty"`
	Merge      *bool             `json:"merge,omitempty"`
}

type UpdateThingRequestBody struct {
	// The attribute payload.
	AttributePayload *UpdateThingRequestBodyAttributePayload `json:"attributePayload,omitempty"`
	// The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.
	ExpectedVersion *int64 `json:"expectedVersion,omitempty"`
	// Remove a thing type association. If <b>true</b>, the association is removed.
	RemoveThingType *bool `json:"removeThingType,omitempty"`
	// The name of the thing type.
	ThingTypeName *string `json:"thingTypeName,omitempty"`
}

type UpdateThingRequest struct {
	PathParams UpdateThingPathParams
	Headers    UpdateThingHeaders
	Request    UpdateThingRequestBody `request:"mediaType=application/json"`
}

type UpdateThingResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
	// Success
	UpdateThingResponse map[string]interface{}
	// VersionConflictException
	VersionConflictException interface{}
}
