/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Estimated fractional progress for each step, from `0` to `1`.
 */
export class Progress extends SpeakeasyBase {
  /**
   * Estimated fractional progress for `analyzing` step.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "analyzed" })
  analyzed?: number;

  /**
   * Estimated fractional progress for `encoding` step.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encoded" })
  encoded?: number;

  /**
   * Estimated fractional progress for `notifying` step.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notified" })
  notified?: number;

  /**
   * Estimated fractional progress for `uploading` step.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uploaded" })
  uploaded?: number;
}
