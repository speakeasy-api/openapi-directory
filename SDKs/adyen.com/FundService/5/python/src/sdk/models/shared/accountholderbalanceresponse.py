"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountdetailbalance as shared_accountdetailbalance
from ..shared import detailbalance as shared_detailbalance
from ..shared import errorfieldtype as shared_errorfieldtype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountHolderBalanceResponse:
    r"""OK - the request has succeeded."""
    
    balance_per_account: Optional[list[shared_accountdetailbalance.AccountDetailBalance]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balancePerAccount'), 'exclude': lambda f: f is None }})
    r"""A list of each account and their balances."""  
    invalid_fields: Optional[list[shared_errorfieldtype.ErrorFieldType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalidFields'), 'exclude': lambda f: f is None }})
    r"""Contains field validation errors that would prevent requests from being processed."""  
    psp_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pspReference'), 'exclude': lambda f: f is None }})
    r"""The reference of a request. Can be used to uniquely identify the request."""  
    result_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultCode'), 'exclude': lambda f: f is None }})
    r"""The result code."""  
    total_balance: Optional[shared_detailbalance.DetailBalance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalBalance'), 'exclude': lambda f: f is None }})  
    