/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrderTrackingSignal - Represents a merchant trade from which signals are extracted, e.g. shipping.
 */
public class OrderTrackingSignal {
    /**
     * The price represented as a number and currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerShippingFee")
    public PriceAmount customerShippingFee;

    public OrderTrackingSignal withCustomerShippingFee(PriceAmount customerShippingFee) {
        this.customerShippingFee = customerShippingFee;
        return this;
    }
    
    /**
     * Required. The delivery postal code, as a continuous string without spaces or dashes, e.g. "95016". This field will be anonymized in returned OrderTrackingSignal creation response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryPostalCode")
    public String deliveryPostalCode;

    public OrderTrackingSignal withDeliveryPostalCode(String deliveryPostalCode) {
        this.deliveryPostalCode = deliveryPostalCode;
        return this;
    }
    
    /**
     * Required. The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryRegionCode")
    public String deliveryRegionCode;

    public OrderTrackingSignal withDeliveryRegionCode(String deliveryRegionCode) {
        this.deliveryRegionCode = deliveryRegionCode;
        return this;
    }
    
    /**
     * Information about line items in the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineItems")
    public OrderTrackingSignalLineItemDetails[] lineItems;

    public OrderTrackingSignal withLineItems(OrderTrackingSignalLineItemDetails[] lineItems) {
        this.lineItems = lineItems;
        return this;
    }
    
    /**
     * The Google merchant ID of this order tracking signal. This value is optional. If left unset, the caller's merchant ID is used. You must request access in order to provide data on behalf of another merchant. For more information, see [Submitting Order Tracking Signals](/shopping-content/guides/order-tracking-signals).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantId")
    public String merchantId;

    public OrderTrackingSignal withMerchantId(String merchantId) {
        this.merchantId = merchantId;
        return this;
    }
    
    /**
     * Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderCreatedTime")
    public DateTime orderCreatedTime;

    public OrderTrackingSignal withOrderCreatedTime(DateTime orderCreatedTime) {
        this.orderCreatedTime = orderCreatedTime;
        return this;
    }
    
    /**
     * Required. The ID of the order on the merchant side. This field will be hashed in returned OrderTrackingSignal creation response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderId")
    public String orderId;

    public OrderTrackingSignal withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * Output only. The ID that uniquely identifies this order tracking signal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderTrackingSignalId")
    public String orderTrackingSignalId;

    public OrderTrackingSignal withOrderTrackingSignalId(String orderTrackingSignalId) {
        this.orderTrackingSignalId = orderTrackingSignalId;
        return this;
    }
    
    /**
     * The mapping of the line items to the shipment information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipmentLineItemMapping")
    public OrderTrackingSignalShipmentLineItemMapping[] shipmentLineItemMapping;

    public OrderTrackingSignal withShipmentLineItemMapping(OrderTrackingSignalShipmentLineItemMapping[] shipmentLineItemMapping) {
        this.shipmentLineItemMapping = shipmentLineItemMapping;
        return this;
    }
    
    /**
     * The shipping information for the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingInfo")
    public OrderTrackingSignalShippingInfo[] shippingInfo;

    public OrderTrackingSignal withShippingInfo(OrderTrackingSignalShippingInfo[] shippingInfo) {
        this.shippingInfo = shippingInfo;
        return this;
    }
    
    public OrderTrackingSignal(){}
}
