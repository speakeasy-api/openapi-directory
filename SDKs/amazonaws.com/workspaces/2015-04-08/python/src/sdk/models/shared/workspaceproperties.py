"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import compute_enum as shared_compute_enum
from ..shared import protocol_enum as shared_protocol_enum
from ..shared import runningmode_enum as shared_runningmode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkspaceProperties:
    r"""Describes a WorkSpace."""
    
    compute_type_name: Optional[shared_compute_enum.ComputeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComputeTypeName'), 'exclude': lambda f: f is None }})  
    protocols: Optional[list[shared_protocol_enum.ProtocolEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Protocols'), 'exclude': lambda f: f is None }})  
    root_volume_size_gib: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RootVolumeSizeGib'), 'exclude': lambda f: f is None }})  
    running_mode: Optional[shared_runningmode_enum.RunningModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RunningMode'), 'exclude': lambda f: f is None }})  
    running_mode_auto_stop_timeout_in_minutes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RunningModeAutoStopTimeoutInMinutes'), 'exclude': lambda f: f is None }})  
    user_volume_size_gib: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UserVolumeSizeGib'), 'exclude': lambda f: f is None }})  
    