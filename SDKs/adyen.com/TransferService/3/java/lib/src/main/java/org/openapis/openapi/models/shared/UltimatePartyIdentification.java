/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class UltimatePartyIdentification {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public Address2 address;

    public UltimatePartyIdentification withAddress(Address2 address) {
        this.address = address;
        return this;
    }
    
    /**
     * The date of birth of the individual in [ISO-8601](https://www.w3.org/TR/NOTE-datetime) format. For example, **YYYY-MM-DD**.
     * 
     * Allowed only when `type` is **individual**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("dateOfBirth")
    public LocalDate dateOfBirth;

    public UltimatePartyIdentification withDateOfBirth(LocalDate dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }
    
    /**
     * First name of the individual.
     * 
     * Allowed only when `type` is **individual**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstName")
    public String firstName;

    public UltimatePartyIdentification withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * The name of the entity.
     */
    @JsonProperty("fullName")
    public String fullName;

    public UltimatePartyIdentification withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }
    
    /**
     * Last name of the individual.
     * 
     * Allowed only when `type` is **individual**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastName")
    public String lastName;

    public UltimatePartyIdentification withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Your unique reference of the party. This should be consistent for all transfers initiated to/from the same party/counterparty. e.g Your client's unique wallet or payee ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public UltimatePartyIdentification withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The type of entity that owns the bank account.
     * 
     *  Possible values: **individual**, **organization**, or **unknown**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public UltimatePartyIdentificationTypeEnum type;

    public UltimatePartyIdentification withType(UltimatePartyIdentificationTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public UltimatePartyIdentification(@JsonProperty("fullName") String fullName) {
        this.fullName = fullName;
  }
}
