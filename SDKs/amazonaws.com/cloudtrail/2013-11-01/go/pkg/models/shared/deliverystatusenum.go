// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeliveryStatusEnum string

const (
	DeliveryStatusEnumSuccess                 DeliveryStatusEnum = "SUCCESS"
	DeliveryStatusEnumFailed                  DeliveryStatusEnum = "FAILED"
	DeliveryStatusEnumFailedSigningFile       DeliveryStatusEnum = "FAILED_SIGNING_FILE"
	DeliveryStatusEnumPending                 DeliveryStatusEnum = "PENDING"
	DeliveryStatusEnumResourceNotFound        DeliveryStatusEnum = "RESOURCE_NOT_FOUND"
	DeliveryStatusEnumAccessDenied            DeliveryStatusEnum = "ACCESS_DENIED"
	DeliveryStatusEnumAccessDeniedSigningFile DeliveryStatusEnum = "ACCESS_DENIED_SIGNING_FILE"
	DeliveryStatusEnumCancelled               DeliveryStatusEnum = "CANCELLED"
	DeliveryStatusEnumUnknown                 DeliveryStatusEnum = "UNKNOWN"
)

func (e DeliveryStatusEnum) ToPointer() *DeliveryStatusEnum {
	return &e
}

func (e *DeliveryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "FAILED_SIGNING_FILE":
		fallthrough
	case "PENDING":
		fallthrough
	case "RESOURCE_NOT_FOUND":
		fallthrough
	case "ACCESS_DENIED":
		fallthrough
	case "ACCESS_DENIED_SIGNING_FILE":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "UNKNOWN":
		*e = DeliveryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeliveryStatusEnum: %v", v)
	}
}
