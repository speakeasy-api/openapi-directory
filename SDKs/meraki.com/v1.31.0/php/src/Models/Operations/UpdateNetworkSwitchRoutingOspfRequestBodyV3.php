<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateNetworkSwitchRoutingOspfRequestBodyV3 - OSPF v3 configuration
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateNetworkSwitchRoutingOspfRequestBodyV3
{
    /**
     * OSPF v3 areas
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchRoutingOspfRequestBodyV3Areas> $areas
     */
	#[\JMS\Serializer\Annotation\SerializedName('areas')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkSwitchRoutingOspfRequestBodyV3Areas>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $areas = null;
    
    /**
     * Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
     * 
     * @var ?int $deadTimerInSeconds
     */
	#[\JMS\Serializer\Annotation\SerializedName('deadTimerInSeconds')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $deadTimerInSeconds = null;
    
    /**
     * Boolean value to enable or disable V3 OSPF routing. OSPF V3 routing is disabled by default.
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
     * 
     * @var ?int $helloTimerInSeconds
     */
	#[\JMS\Serializer\Annotation\SerializedName('helloTimerInSeconds')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $helloTimerInSeconds = null;
    
	public function __construct()
	{
		$this->areas = null;
		$this->deadTimerInSeconds = null;
		$this->enabled = null;
		$this->helloTimerInSeconds = null;
	}
}
