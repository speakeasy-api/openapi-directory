"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TeamsAddOrUpdateProjectPermissionsRequestBodyPermissionEnum(str, Enum):
    r"""The permission to grant to the team for this project. Can be one of:
    \* `read` - team members can read, but not write to or administer this project.  
    \* `write` - team members can read and write, but not administer this project.  
    \* `admin` - team members can read, write and administer this project.  
    Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#http-verbs).\" 
    """
    READ = 'read'
    WRITE = 'write'
    ADMIN = 'admin'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TeamsAddOrUpdateProjectPermissionsRequestBody:
    
    permission: Optional[TeamsAddOrUpdateProjectPermissionsRequestBodyPermissionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permission'), 'exclude': lambda f: f is None }})
    r"""The permission to grant to the team for this project. Can be one of:
    \* `read` - team members can read, but not write to or administer this project.  
    \* `write` - team members can read and write, but not administer this project.  
    \* `admin` - team members can read, write and administer this project.  
    Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://docs.github.com/enterprise-server@2.20/rest/overview/resources-in-the-rest-api#http-verbs).\" 
    """  
    

@dataclasses.dataclass
class TeamsAddOrUpdateProjectPermissionsRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'accept', 'style': 'simple', 'explode': False }})
    r"""This API is under preview and subject to change."""  
    project_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'project_id', 'style': 'simple', 'explode': False }})  
    team_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'team_id', 'style': 'simple', 'explode': False }})  
    request_body: Optional[TeamsAddOrUpdateProjectPermissionsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TeamsAddOrUpdateProjectPermissions403ApplicationJSON:
    r"""Forbidden if the project is not owned by the organization"""
    
    documentation_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentation_url'), 'exclude': lambda f: f is None }})  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class TeamsAddOrUpdateProjectPermissionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    teams_add_or_update_project_permissions_403_application_json_object: Optional[TeamsAddOrUpdateProjectPermissions403ApplicationJSON] = dataclasses.field(default=None)
    r"""Forbidden if the project is not owned by the organization"""  
    