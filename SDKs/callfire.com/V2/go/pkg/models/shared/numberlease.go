// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NumberLeaseCallFeatureStatusEnum - A status of a call feature. Available values: DISABLED, ENABLED
type NumberLeaseCallFeatureStatusEnum string

const (
	NumberLeaseCallFeatureStatusEnumUnsupported NumberLeaseCallFeatureStatusEnum = "UNSUPPORTED"
	NumberLeaseCallFeatureStatusEnumPending     NumberLeaseCallFeatureStatusEnum = "PENDING"
	NumberLeaseCallFeatureStatusEnumDisabled    NumberLeaseCallFeatureStatusEnum = "DISABLED"
	NumberLeaseCallFeatureStatusEnumEnabled     NumberLeaseCallFeatureStatusEnum = "ENABLED"
)

func (e *NumberLeaseCallFeatureStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSUPPORTED":
		fallthrough
	case "PENDING":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ENABLED":
		*e = NumberLeaseCallFeatureStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberLeaseCallFeatureStatusEnum: %s", s)
	}
}

// NumberLeaseTextFeatureStatusEnum - A status of a text feature. Available values: DISABLED, ENABLED
type NumberLeaseTextFeatureStatusEnum string

const (
	NumberLeaseTextFeatureStatusEnumUnsupported NumberLeaseTextFeatureStatusEnum = "UNSUPPORTED"
	NumberLeaseTextFeatureStatusEnumPending     NumberLeaseTextFeatureStatusEnum = "PENDING"
	NumberLeaseTextFeatureStatusEnumDisabled    NumberLeaseTextFeatureStatusEnum = "DISABLED"
	NumberLeaseTextFeatureStatusEnumEnabled     NumberLeaseTextFeatureStatusEnum = "ENABLED"
)

func (e *NumberLeaseTextFeatureStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSUPPORTED":
		fallthrough
	case "PENDING":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ENABLED":
		*e = NumberLeaseTextFeatureStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberLeaseTextFeatureStatusEnum: %s", s)
	}
}

// NumberLeaseTypeEnum - ~
type NumberLeaseTypeEnum string

const (
	NumberLeaseTypeEnumPlan  NumberLeaseTypeEnum = "PLAN"
	NumberLeaseTypeEnumExtra NumberLeaseTypeEnum = "EXTRA"
)

func (e *NumberLeaseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PLAN":
		fallthrough
	case "EXTRA":
		*e = NumberLeaseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberLeaseTypeEnum: %s", s)
	}
}

// NumberLeaseInput - Represents a lease object for a given phone number
type NumberLeaseInput struct {
	// Enables the auto renewal of number lease at end of each billing cycle
	AutoRenew *bool `json:"autoRenew,omitempty"`
	// A status of a call feature. Available values: DISABLED, ENABLED
	CallFeatureStatus *NumberLeaseCallFeatureStatusEnum `json:"callFeatureStatus,omitempty"`
	// ~
	Labels []string `json:"labels,omitempty"`
	// A date and time of a lease start. Timestamp, formatted in unix time milliseconds (read only). Example: 1473781817000
	LeaseBegin *int64 `json:"leaseBegin,omitempty"`
	// A data and time of a lease finish. Timestamp, formatted in unix time milliseconds (read only). Example: 1473781817000
	LeaseEnd *int64 `json:"leaseEnd,omitempty"`
	// Formatted number with a country code
	NationalFormat *string `json:"nationalFormat,omitempty"`
	// A phone number in E.164 format (11-digit). Example: 12132000384
	Number *string `json:"number,omitempty"`
	// Every local number associated with a region. You can query regions to use them in subsequent purchase requests
	Region *Region `json:"region,omitempty"`
	// ~
	SendEmailOnCreate *bool `json:"sendEmailOnCreate,omitempty"`
	// A status of a text feature. Available values: DISABLED, ENABLED
	TextFeatureStatus *NumberLeaseTextFeatureStatusEnum `json:"textFeatureStatus,omitempty"`
	// A  toll-free number
	TollFree *bool `json:"tollFree,omitempty"`
	// ~
	Type *NumberLeaseTypeEnum `json:"type,omitempty"`
}

// NumberLeaseStatusEnum - A lease status. Available values: PENDING, ACTIVE, RELEASED, UNAVAILABLE
type NumberLeaseStatusEnum string

const (
	NumberLeaseStatusEnumPending     NumberLeaseStatusEnum = "PENDING"
	NumberLeaseStatusEnumActive      NumberLeaseStatusEnum = "ACTIVE"
	NumberLeaseStatusEnumReleased    NumberLeaseStatusEnum = "RELEASED"
	NumberLeaseStatusEnumUnavailable NumberLeaseStatusEnum = "UNAVAILABLE"
)

func (e *NumberLeaseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "RELEASED":
		fallthrough
	case "UNAVAILABLE":
		*e = NumberLeaseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberLeaseStatusEnum: %s", s)
	}
}

// NumberLease - Represents a lease object for a given phone number
type NumberLease struct {
	// Enables the auto renewal of number lease at end of each billing cycle
	AutoRenew *bool `json:"autoRenew,omitempty"`
	// A status of a call feature. Available values: DISABLED, ENABLED
	CallFeatureStatus *NumberLeaseCallFeatureStatusEnum `json:"callFeatureStatus,omitempty"`
	// ~
	Labels []string `json:"labels,omitempty"`
	// A date and time of a lease start. Timestamp, formatted in unix time milliseconds (read only). Example: 1473781817000
	LeaseBegin *int64 `json:"leaseBegin,omitempty"`
	// A data and time of a lease finish. Timestamp, formatted in unix time milliseconds (read only). Example: 1473781817000
	LeaseEnd *int64 `json:"leaseEnd,omitempty"`
	// Formatted number with a country code
	NationalFormat *string `json:"nationalFormat,omitempty"`
	// A phone number in E.164 format (11-digit). Example: 12132000384
	Number *string `json:"number,omitempty"`
	// Every local number associated with a region. You can query regions to use them in subsequent purchase requests
	Region *Region `json:"region,omitempty"`
	// ~
	SendEmailOnCreate *bool `json:"sendEmailOnCreate,omitempty"`
	// A lease status. Available values: PENDING, ACTIVE, RELEASED, UNAVAILABLE
	Status *NumberLeaseStatusEnum `json:"status,omitempty"`
	// A status of a text feature. Available values: DISABLED, ENABLED
	TextFeatureStatus *NumberLeaseTextFeatureStatusEnum `json:"textFeatureStatus,omitempty"`
	// A  toll-free number
	TollFree *bool `json:"tollFree,omitempty"`
	// ~
	Type *NumberLeaseTypeEnum `json:"type,omitempty"`
}
