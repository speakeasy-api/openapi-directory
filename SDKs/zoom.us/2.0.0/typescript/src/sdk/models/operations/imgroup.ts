/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ImGroupRequest extends SpeakeasyBase {
  /**
   * The group ID.<br>
   *
   * @remarks
   * Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=groupId",
  })
  groupId: string;
}

/**
 * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
 */
export enum ImGroup200ApplicationXMLTypeEnum {
  Normal = "normal",
  Shared = "shared",
  Restricted = "restricted",
}

/**
 * Group object.
 */
export class ImGroup200ApplicationXML extends SpeakeasyBase {
  /**
   * Group ID.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Group name.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Members can search for others under same account.
   */
  @SpeakeasyMetadata()
  searchByAccount?: boolean;

  /**
   * Members can search for others in the same email domain.
   */
  @SpeakeasyMetadata()
  searchByDomain?: boolean;

  /**
   * Members can search for others under same master account - including all sub accounts.
   */
  @SpeakeasyMetadata()
  searchByMaAccount?: boolean;

  /**
   * Total number of members in this group.
   */
  @SpeakeasyMetadata()
  totalMembers?: number;

  /**
   * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
   */
  @SpeakeasyMetadata()
  type?: ImGroup200ApplicationXMLTypeEnum;
}

/**
 * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
 */
export enum ImGroup200ApplicationJSONTypeEnum {
  Normal = "normal",
  Shared = "shared",
  Restricted = "restricted",
}

/**
 * Group object.
 */
export class ImGroup200ApplicationJSON extends SpeakeasyBase {
  /**
   * Group ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Group name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Members can search for others under same account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_by_account" })
  searchByAccount?: boolean;

  /**
   * Members can search for others in the same email domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_by_domain" })
  searchByDomain?: boolean;

  /**
   * Members can search for others under same master account - including all sub accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_by_ma_account" })
  searchByMaAccount?: boolean;

  /**
   * Total number of members in this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_members" })
  totalMembers?: number;

  /**
   * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ImGroup200ApplicationJSONTypeEnum;
}

export class ImGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` <br>
   *
   * @remarks
   * IM group object returned.<br>
   * **Error Code:** `200` <br>
   * Only available for paid account:{accountId}.
   */
  @SpeakeasyMetadata()
  imGroup200ApplicationJSONObject?: ImGroup200ApplicationJSON;
}
