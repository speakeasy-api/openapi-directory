// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MonitorProcessingStatusCodeEnum string

const (
	MonitorProcessingStatusCodeEnumOk                    MonitorProcessingStatusCodeEnum = "OK"
	MonitorProcessingStatusCodeEnumInactive              MonitorProcessingStatusCodeEnum = "INACTIVE"
	MonitorProcessingStatusCodeEnumCollectingData        MonitorProcessingStatusCodeEnum = "COLLECTING_DATA"
	MonitorProcessingStatusCodeEnumInsufficientData      MonitorProcessingStatusCodeEnum = "INSUFFICIENT_DATA"
	MonitorProcessingStatusCodeEnumFaultService          MonitorProcessingStatusCodeEnum = "FAULT_SERVICE"
	MonitorProcessingStatusCodeEnumFaultAccessCloudwatch MonitorProcessingStatusCodeEnum = "FAULT_ACCESS_CLOUDWATCH"
)

func (e *MonitorProcessingStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OK":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "COLLECTING_DATA":
		fallthrough
	case "INSUFFICIENT_DATA":
		fallthrough
	case "FAULT_SERVICE":
		fallthrough
	case "FAULT_ACCESS_CLOUDWATCH":
		*e = MonitorProcessingStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MonitorProcessingStatusCodeEnum: %s", s)
	}
}
