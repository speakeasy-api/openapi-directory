"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import workloadsummary as shared_workloadsummary
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MilestoneSummary:
    r"""A milestone summary return object."""
    
    milestone_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MilestoneName'), 'exclude': lambda f: f is None }})
    r"""<p>The name of the milestone in a workload.</p> <p>Milestone names must be unique within a workload.</p>"""  
    milestone_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MilestoneNumber'), 'exclude': lambda f: f is None }})
    r"""<p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>"""  
    recorded_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordedAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time recorded."""  
    workload_summary: Optional[shared_workloadsummary.WorkloadSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkloadSummary'), 'exclude': lambda f: f is None }})
    r"""A workload summary return object."""  
    