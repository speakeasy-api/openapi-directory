<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class StartConfigurationSessionRequestBody
{
    /**
     * The application ID or the application name.
     * 
     * @var string $applicationIdentifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('ApplicationIdentifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $applicationIdentifier;
    
    /**
     * The configuration profile ID or the configuration profile name.
     * 
     * @var string $configurationProfileIdentifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('ConfigurationProfileIdentifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configurationProfileIdentifier;
    
    /**
     * The environment ID or the environment name.
     * 
     * @var string $environmentIdentifier
     */
	#[\JMS\Serializer\Annotation\SerializedName('EnvironmentIdentifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $environmentIdentifier;
    
    /**
     * Sets a constraint on a session. If you specify a value of, for example, 60 seconds, then the client that established the session can't call <a>GetLatestConfiguration</a> more frequently than every 60 seconds.
     * 
     * @var ?int $requiredMinimumPollIntervalInSeconds
     */
	#[\JMS\Serializer\Annotation\SerializedName('RequiredMinimumPollIntervalInSeconds')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $requiredMinimumPollIntervalInSeconds = null;
    
	public function __construct()
	{
		$this->applicationIdentifier = "";
		$this->configurationProfileIdentifier = "";
		$this->environmentIdentifier = "";
		$this->requiredMinimumPollIntervalInSeconds = null;
	}
}
