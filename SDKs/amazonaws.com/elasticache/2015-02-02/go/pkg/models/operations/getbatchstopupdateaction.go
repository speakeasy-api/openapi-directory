// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETBatchStopUpdateActionActionEnum
type GETBatchStopUpdateActionActionEnum string

const (
	GETBatchStopUpdateActionActionEnumBatchStopUpdateAction GETBatchStopUpdateActionActionEnum = "BatchStopUpdateAction"
)

func (e *GETBatchStopUpdateActionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BatchStopUpdateAction":
		*e = GETBatchStopUpdateActionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBatchStopUpdateActionActionEnum: %s", s)
	}
}

// GETBatchStopUpdateActionVersionEnum
type GETBatchStopUpdateActionVersionEnum string

const (
	GETBatchStopUpdateActionVersionEnumTwoThousandAndFifteen0202 GETBatchStopUpdateActionVersionEnum = "2015-02-02"
)

func (e *GETBatchStopUpdateActionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = GETBatchStopUpdateActionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBatchStopUpdateActionVersionEnum: %s", s)
	}
}

type GETBatchStopUpdateActionQueryParams struct {
	Action GETBatchStopUpdateActionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The cache cluster IDs
	CacheClusterIds []string `queryParam:"style=form,explode=true,name=CacheClusterIds"`
	// The replication group IDs
	ReplicationGroupIds []string `queryParam:"style=form,explode=true,name=ReplicationGroupIds"`
	// The unique ID of the service update
	ServiceUpdateName string                              `queryParam:"style=form,explode=true,name=ServiceUpdateName"`
	Version           GETBatchStopUpdateActionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETBatchStopUpdateActionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETBatchStopUpdateActionRequest struct {
	QueryParams GETBatchStopUpdateActionQueryParams
	Headers     GETBatchStopUpdateActionHeaders
}

type GETBatchStopUpdateActionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
