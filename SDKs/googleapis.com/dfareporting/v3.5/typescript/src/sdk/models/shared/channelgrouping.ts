/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelGroupingRule } from "./channelgroupingrule";
import { Expose, Type } from "class-transformer";

/**
 * Represents a DfaReporting channel grouping.
 */
export class ChannelGrouping extends SpeakeasyBase {
  /**
   * ChannelGrouping fallback name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fallbackName" })
  fallbackName?: string;

  /**
   * The kind of resource this is, in this case dfareporting#channelGrouping.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * ChannelGrouping name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The rules contained within this channel grouping.
   */
  @SpeakeasyMetadata({ elemType: ChannelGroupingRule })
  @Expose({ name: "rules" })
  @Type(() => ChannelGroupingRule)
  rules?: ChannelGroupingRule[];
}
