// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountStateEnum - Output only. State of the account.
type AccountStateEnum string

const (
	AccountStateEnumStateUnspecified AccountStateEnum = "STATE_UNSPECIFIED"
	AccountStateEnumReady            AccountStateEnum = "READY"
	AccountStateEnumNeedsAttention   AccountStateEnum = "NEEDS_ATTENTION"
	AccountStateEnumClosed           AccountStateEnum = "CLOSED"
)

func (e AccountStateEnum) ToPointer() *AccountStateEnum {
	return &e
}

func (e *AccountStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "READY":
		fallthrough
	case "NEEDS_ATTENTION":
		fallthrough
	case "CLOSED":
		*e = AccountStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountStateEnum: %v", v)
	}
}

// Account - Representation of an account.
type Account struct {
	// Output only. Creation time of the account.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. Display name of this account.
	DisplayName *string `json:"displayName,omitempty"`
	// Output only. Resource name of the account. Format: accounts/pub-[0-9]+
	Name *string `json:"name,omitempty"`
	// Output only. Outstanding tasks that need to be completed as part of the sign-up process for a new account. e.g. "billing-profile-creation", "phone-pin-verification".
	PendingTasks []string `json:"pendingTasks,omitempty"`
	// Output only. Whether this account is premium.
	Premium *bool `json:"premium,omitempty"`
	// Output only. State of the account.
	State *AccountStateEnum `json:"state,omitempty"`
	// Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
	TimeZone *TimeZone `json:"timeZone,omitempty"`
}
