// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetGenresTopLevelOnlyEnum - Just show top level genres? If 1, yes, just show top level genres. If 0, no, show all genres.
type GetGenresTopLevelOnlyEnum string

const (
	GetGenresTopLevelOnlyEnumZero GetGenresTopLevelOnlyEnum = "0"
	GetGenresTopLevelOnlyEnumOne  GetGenresTopLevelOnlyEnum = "1"
)

func (e *GetGenresTopLevelOnlyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		*e = GetGenresTopLevelOnlyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGenresTopLevelOnlyEnum: %s", s)
	}
}

type GetGenresQueryParams struct {
	// Just show top level genres? If 1, yes, just show top level genres. If 0, no, show all genres.
	//
	TopLevelOnly *GetGenresTopLevelOnlyEnum `queryParam:"style=form,explode=true,name=top_level_only"`
}

type GetGenresHeaders struct {
	// Get API Key on listennotes.com/api
	XListenAPIKey string `header:"style=simple,explode=false,name=X-ListenAPI-Key"`
}

type GetGenresRequest struct {
	QueryParams GetGenresQueryParams
	Headers     GetGenresHeaders
}

type GetGenresResponse struct {
	ContentType string
	// OK
	GetGenresResponse *shared.GetGenresResponse
	Headers           map[string][]string
	StatusCode        int
	RawResponse       *http.Response
}
