"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inferenceinputnameconfiguration as shared_inferenceinputnameconfiguration
from ..shared import inferences3inputconfiguration as shared_inferences3inputconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InferenceInputConfiguration:
    r"""Specifies configuration information for the input data for the inference, including Amazon S3 location of input data.."""
    
    inference_input_name_configuration: Optional[shared_inferenceinputnameconfiguration.InferenceInputNameConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InferenceInputNameConfiguration'), 'exclude': lambda f: f is None }})  
    input_time_zone_offset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputTimeZoneOffset'), 'exclude': lambda f: f is None }})  
    s3_input_configuration: Optional[shared_inferences3inputconfiguration.InferenceS3InputConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3InputConfiguration'), 'exclude': lambda f: f is None }})  
    