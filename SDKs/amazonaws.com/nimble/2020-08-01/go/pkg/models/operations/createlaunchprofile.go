// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateLaunchProfilePathParams struct {
	// The studio ID.
	StudioID string `pathParam:"style=simple,explode=false,name=studioId"`
}

type CreateLaunchProfileHeaders struct {
	XAmzAlgorithm *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
	XAmzClientToken   *string `header:"style=simple,explode=false,name=X-Amz-Client-Token"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateLaunchProfileRequestBodyStreamConfiguration - Configuration for streaming workstations created using this launch profile.
type CreateLaunchProfileRequestBodyStreamConfiguration struct {
	AutomaticTerminationMode         *shared.AutomaticTerminationModeEnum      `json:"automaticTerminationMode,omitempty"`
	ClipboardMode                    *shared.StreamingClipboardModeEnum        `json:"clipboardMode,omitempty"`
	Ec2InstanceTypes                 []shared.StreamingInstanceTypeEnum        `json:"ec2InstanceTypes,omitempty"`
	MaxSessionLengthInMinutes        *int64                                    `json:"maxSessionLengthInMinutes,omitempty"`
	MaxStoppedSessionLengthInMinutes *int64                                    `json:"maxStoppedSessionLengthInMinutes,omitempty"`
	SessionBackup                    *shared.StreamConfigurationSessionBackup  `json:"sessionBackup,omitempty"`
	SessionPersistenceMode           *shared.SessionPersistenceModeEnum        `json:"sessionPersistenceMode,omitempty"`
	SessionStorage                   *shared.StreamConfigurationSessionStorage `json:"sessionStorage,omitempty"`
	StreamingImageIds                []string                                  `json:"streamingImageIds,omitempty"`
	VolumeConfiguration              *shared.VolumeConfiguration               `json:"volumeConfiguration,omitempty"`
}

type CreateLaunchProfileRequestBody struct {
	// A human-readable description of the launch profile.
	Description *string `json:"description,omitempty"`
	// Specifies the IDs of the EC2 subnets where streaming sessions will be accessible from. These subnets must support the specified instance types.
	Ec2SubnetIds []string `json:"ec2SubnetIds"`
	// The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
	LaunchProfileProtocolVersions []string `json:"launchProfileProtocolVersions"`
	// The name for the launch profile.
	Name string `json:"name"`
	// Configuration for streaming workstations created using this launch profile.
	StreamConfiguration CreateLaunchProfileRequestBodyStreamConfiguration `json:"streamConfiguration"`
	// Unique identifiers for a collection of studio components that can be used with this launch profile.
	StudioComponentIds []string `json:"studioComponentIds"`
	// A collection of labels, in the form of key-value pairs, that apply to this resource.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateLaunchProfileRequest struct {
	PathParams CreateLaunchProfilePathParams
	Headers    CreateLaunchProfileHeaders
	Request    CreateLaunchProfileRequestBody `request:"mediaType=application/json"`
}

type CreateLaunchProfileResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateLaunchProfileResponse *shared.CreateLaunchProfileResponse
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
