"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectorSummary = void 0;
var utils_1 = require("../../../internal/utils");
var capacitydescription_1 = require("./capacitydescription");
var connectorstateenum_1 = require("./connectorstateenum");
var kafkaclusterclientauthenticationdescription_1 = require("./kafkaclusterclientauthenticationdescription");
var kafkaclusterdescription_1 = require("./kafkaclusterdescription");
var kafkaclusterencryptionintransitdescription_1 = require("./kafkaclusterencryptionintransitdescription");
var logdeliverydescription_1 = require("./logdeliverydescription");
var plugindescription_1 = require("./plugindescription");
var workerconfigurationdescription_1 = require("./workerconfigurationdescription");
var class_transformer_1 = require("class-transformer");
/**
 * Summary of a connector.
 */
var ConnectorSummary = /** @class */ (function (_super) {
    __extends(ConnectorSummary, _super);
    function ConnectorSummary() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "capacity" }),
        (0, class_transformer_1.Type)(function () { return capacitydescription_1.CapacityDescription; }),
        __metadata("design:type", capacitydescription_1.CapacityDescription)
    ], ConnectorSummary.prototype, "capacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorArn" }),
        __metadata("design:type", String)
    ], ConnectorSummary.prototype, "connectorArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorDescription" }),
        __metadata("design:type", String)
    ], ConnectorSummary.prototype, "connectorDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorName" }),
        __metadata("design:type", String)
    ], ConnectorSummary.prototype, "connectorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorState" }),
        __metadata("design:type", String)
    ], ConnectorSummary.prototype, "connectorState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ConnectorSummary.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currentVersion" }),
        __metadata("design:type", String)
    ], ConnectorSummary.prototype, "currentVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kafkaCluster" }),
        (0, class_transformer_1.Type)(function () { return kafkaclusterdescription_1.KafkaClusterDescription; }),
        __metadata("design:type", kafkaclusterdescription_1.KafkaClusterDescription)
    ], ConnectorSummary.prototype, "kafkaCluster", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kafkaClusterClientAuthentication" }),
        (0, class_transformer_1.Type)(function () { return kafkaclusterclientauthenticationdescription_1.KafkaClusterClientAuthenticationDescription; }),
        __metadata("design:type", kafkaclusterclientauthenticationdescription_1.KafkaClusterClientAuthenticationDescription)
    ], ConnectorSummary.prototype, "kafkaClusterClientAuthentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kafkaClusterEncryptionInTransit" }),
        (0, class_transformer_1.Type)(function () { return kafkaclusterencryptionintransitdescription_1.KafkaClusterEncryptionInTransitDescription; }),
        __metadata("design:type", kafkaclusterencryptionintransitdescription_1.KafkaClusterEncryptionInTransitDescription)
    ], ConnectorSummary.prototype, "kafkaClusterEncryptionInTransit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kafkaConnectVersion" }),
        __metadata("design:type", String)
    ], ConnectorSummary.prototype, "kafkaConnectVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "logDelivery" }),
        (0, class_transformer_1.Type)(function () { return logdeliverydescription_1.LogDeliveryDescription; }),
        __metadata("design:type", logdeliverydescription_1.LogDeliveryDescription)
    ], ConnectorSummary.prototype, "logDelivery", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: plugindescription_1.PluginDescription }),
        (0, class_transformer_1.Expose)({ name: "plugins" }),
        (0, class_transformer_1.Type)(function () { return plugindescription_1.PluginDescription; }),
        __metadata("design:type", Array)
    ], ConnectorSummary.prototype, "plugins", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serviceExecutionRoleArn" }),
        __metadata("design:type", String)
    ], ConnectorSummary.prototype, "serviceExecutionRoleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workerConfiguration" }),
        (0, class_transformer_1.Type)(function () { return workerconfigurationdescription_1.WorkerConfigurationDescription; }),
        __metadata("design:type", workerconfigurationdescription_1.WorkerConfigurationDescription)
    ], ConnectorSummary.prototype, "workerConfiguration", void 0);
    return ConnectorSummary;
}(utils_1.SpeakeasyBase));
exports.ConnectorSummary = ConnectorSummary;
