// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RoomGroupNewGroupMemberAcceptanceEnum - Behaviour when new users are added to the group:
//
// * `autoallow`
//
// * `pending`
//
// Only relevant if `adminGroupIds` has items.
type RoomGroupNewGroupMemberAcceptanceEnum string

const (
	RoomGroupNewGroupMemberAcceptanceEnumAutoallow RoomGroupNewGroupMemberAcceptanceEnum = "autoallow"
	RoomGroupNewGroupMemberAcceptanceEnumPending   RoomGroupNewGroupMemberAcceptanceEnum = "pending"
)

func (e *RoomGroupNewGroupMemberAcceptanceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "autoallow":
		fallthrough
	case "pending":
		*e = RoomGroupNewGroupMemberAcceptanceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RoomGroupNewGroupMemberAcceptanceEnum: %s", s)
	}
}

// RoomGroup - Group information
type RoomGroup struct {
	// Unique identifier for the group
	ID int64 `json:"id"`
	// Is user granted room permissions
	IsGranted bool `json:"isGranted"`
	// Group name
	Name string `json:"name"`
	// Behaviour when new users are added to the group:
	//
	// * `autoallow`
	//
	// * `pending`
	//
	//
	//
	// Only relevant if `adminGroupIds` has items.
	NewGroupMemberAcceptance *RoomGroupNewGroupMemberAcceptanceEnum `json:"newGroupMemberAcceptance,omitempty"`
	// Node permissions
	Permissions *NodePermissions `json:"permissions,omitempty"`
}
