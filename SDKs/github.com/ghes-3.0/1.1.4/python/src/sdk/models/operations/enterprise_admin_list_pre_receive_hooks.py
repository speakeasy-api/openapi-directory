"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import direction_enum as shared_direction_enum
from ..shared import pre_receive_hook as shared_pre_receive_hook
from enum import Enum
from typing import Optional

class EnterpriseAdminListPreReceiveHooksSortEnum(str, Enum):
    r"""One of `created` (when the repository was starred) or `updated` (when it was last pushed to) or `name`."""
    CREATED = 'created'
    UPDATED = 'updated'
    NAME = 'name'


@dataclasses.dataclass
class EnterpriseAdminListPreReceiveHooksRequest:
    
    direction: Optional[shared_direction_enum.DirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})
    r"""One of `asc` (ascending) or `desc` (descending)."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number of the results to fetch."""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Results per page (max 100)"""  
    sort: Optional[EnterpriseAdminListPreReceiveHooksSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""One of `created` (when the repository was starred) or `updated` (when it was last pushed to) or `name`."""  
    

@dataclasses.dataclass
class EnterpriseAdminListPreReceiveHooksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    pre_receive_hooks: Optional[list[shared_pre_receive_hook.PreReceiveHook]] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    