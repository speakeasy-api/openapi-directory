/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateReplicationConfigurationTemplateRequestBody {
    /**
     * The Replication Configuration Template ARN.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;

    public UpdateReplicationConfigurationTemplateRequestBody withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    /**
     * Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration Template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associateDefaultSecurityGroup")
    public Boolean associateDefaultSecurityGroup;

    public UpdateReplicationConfigurationTemplateRequestBody withAssociateDefaultSecurityGroup(Boolean associateDefaultSecurityGroup) {
        this.associateDefaultSecurityGroup = associateDefaultSecurityGroup;
        return this;
    }
    
    /**
     * Whether to allow the AWS replication agent to automatically replicate newly added disks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoReplicateNewDisks")
    public Boolean autoReplicateNewDisks;

    public UpdateReplicationConfigurationTemplateRequestBody withAutoReplicateNewDisks(Boolean autoReplicateNewDisks) {
        this.autoReplicateNewDisks = autoReplicateNewDisks;
        return this;
    }
    
    /**
     * Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bandwidthThrottling")
    public Long bandwidthThrottling;

    public UpdateReplicationConfigurationTemplateRequestBody withBandwidthThrottling(Long bandwidthThrottling) {
        this.bandwidthThrottling = bandwidthThrottling;
        return this;
    }
    
    /**
     * Whether to create a Public IP for the Recovery Instance by default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createPublicIP")
    public Boolean createPublicIP;

    public UpdateReplicationConfigurationTemplateRequestBody withCreatePublicIP(Boolean createPublicIP) {
        this.createPublicIP = createPublicIP;
        return this;
    }
    
    /**
     * The data plane routing mechanism that will be used for replication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataPlaneRouting")
    public UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum dataPlaneRouting;

    public UpdateReplicationConfigurationTemplateRequestBody withDataPlaneRouting(UpdateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum dataPlaneRouting) {
        this.dataPlaneRouting = dataPlaneRouting;
        return this;
    }
    
    /**
     * The Staging Disk EBS volume type to be used during replication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultLargeStagingDiskType")
    public UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum defaultLargeStagingDiskType;

    public UpdateReplicationConfigurationTemplateRequestBody withDefaultLargeStagingDiskType(UpdateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum defaultLargeStagingDiskType) {
        this.defaultLargeStagingDiskType = defaultLargeStagingDiskType;
        return this;
    }
    
    /**
     * The type of EBS encryption to be used during replication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ebsEncryption")
    public UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum ebsEncryption;

    public UpdateReplicationConfigurationTemplateRequestBody withEbsEncryption(UpdateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum ebsEncryption) {
        this.ebsEncryption = ebsEncryption;
        return this;
    }
    
    /**
     * The ARN of the EBS encryption key to be used during replication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ebsEncryptionKeyArn")
    public String ebsEncryptionKeyArn;

    public UpdateReplicationConfigurationTemplateRequestBody withEbsEncryptionKeyArn(String ebsEncryptionKeyArn) {
        this.ebsEncryptionKeyArn = ebsEncryptionKeyArn;
        return this;
    }
    
    /**
     * The Point in time (PIT) policy to manage snapshots taken during replication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pitPolicy")
    public org.openapis.openapi.models.shared.PITPolicyRule[] pitPolicy;

    public UpdateReplicationConfigurationTemplateRequestBody withPitPolicy(org.openapis.openapi.models.shared.PITPolicyRule[] pitPolicy) {
        this.pitPolicy = pitPolicy;
        return this;
    }
    
    /**
     * The Replication Configuration Template ID.
     */
    @JsonProperty("replicationConfigurationTemplateID")
    public String replicationConfigurationTemplateID;

    public UpdateReplicationConfigurationTemplateRequestBody withReplicationConfigurationTemplateID(String replicationConfigurationTemplateID) {
        this.replicationConfigurationTemplateID = replicationConfigurationTemplateID;
        return this;
    }
    
    /**
     * The instance type to be used for the replication server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationServerInstanceType")
    public String replicationServerInstanceType;

    public UpdateReplicationConfigurationTemplateRequestBody withReplicationServerInstanceType(String replicationServerInstanceType) {
        this.replicationServerInstanceType = replicationServerInstanceType;
        return this;
    }
    
    /**
     * The security group IDs that will be used by the replication server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationServersSecurityGroupsIDs")
    public String[] replicationServersSecurityGroupsIDs;

    public UpdateReplicationConfigurationTemplateRequestBody withReplicationServersSecurityGroupsIDs(String[] replicationServersSecurityGroupsIDs) {
        this.replicationServersSecurityGroupsIDs = replicationServersSecurityGroupsIDs;
        return this;
    }
    
    /**
     * The subnet to be used by the replication staging area.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stagingAreaSubnetId")
    public String stagingAreaSubnetId;

    public UpdateReplicationConfigurationTemplateRequestBody withStagingAreaSubnetId(String stagingAreaSubnetId) {
        this.stagingAreaSubnetId = stagingAreaSubnetId;
        return this;
    }
    
    /**
     * A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stagingAreaTags")
    public java.util.Map<String, String> stagingAreaTags;

    public UpdateReplicationConfigurationTemplateRequestBody withStagingAreaTags(java.util.Map<String, String> stagingAreaTags) {
        this.stagingAreaTags = stagingAreaTags;
        return this;
    }
    
    /**
     * Whether to use a dedicated Replication Server in the replication staging area.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useDedicatedReplicationServer")
    public Boolean useDedicatedReplicationServer;

    public UpdateReplicationConfigurationTemplateRequestBody withUseDedicatedReplicationServer(Boolean useDedicatedReplicationServer) {
        this.useDedicatedReplicationServer = useDedicatedReplicationServer;
        return this;
    }
    
    public UpdateReplicationConfigurationTemplateRequestBody(@JsonProperty("replicationConfigurationTemplateID") String replicationConfigurationTemplateID) {
        this.replicationConfigurationTemplateID = replicationConfigurationTemplateID;
  }
}
