/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * JsonSmsInboundWithBody - Inbound SMS
 */
public class JsonSmsInboundWithBody {
    /**
     * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_id")
    public String accountId;
    public JsonSmsInboundWithBody withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Country where the request was sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public JsonSmsInboundWithBody withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Country name where the request was sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country_name")
    public String countryName;
    public JsonSmsInboundWithBody withCountryName(String countryName) {
        this.countryName = countryName;
        return this;
    }
    
    /**
     * Currency of the price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public JsonSmsInboundWithBody withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Date of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_received")
    public LocalDate dateReceived;
    public JsonSmsInboundWithBody withDateReceived(LocalDate dateReceived) {
        this.dateReceived = dateReceived;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public JsonSmsInboundWithBodyDirectionEnum direction;
    public JsonSmsInboundWithBody withDirection(JsonSmsInboundWithBodyDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Request from this number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;
    public JsonSmsInboundWithBody withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Body of the message sent. Only present if include_message parameter is set to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_body")
    public String messageBody;
    public JsonSmsInboundWithBody withMessageBody(String messageBody) {
        this.messageBody = messageBody;
        return this;
    }
    
    /**
     * Id of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_id")
    public String messageId;
    public JsonSmsInboundWithBody withMessageId(String messageId) {
        this.messageId = messageId;
        return this;
    }
    
    /**
     * Network used to send the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;
    public JsonSmsInboundWithBody withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Name of the network used to send the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network_name")
    public String networkName;
    public JsonSmsInboundWithBody withNetworkName(String networkName) {
        this.networkName = networkName;
        return this;
    }
    
    /**
     * Request to this number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;
    public JsonSmsInboundWithBody withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * Price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_price")
    public Double totalPrice;
    public JsonSmsInboundWithBody withTotalPrice(Double totalPrice) {
        this.totalPrice = totalPrice;
        return this;
    }
    
}
