"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UptimeCheckIPRegionEnum(str, Enum):
    r"""A broad region category in which the IP address is located."""
    REGION_UNSPECIFIED = 'REGION_UNSPECIFIED'
    USA = 'USA'
    EUROPE = 'EUROPE'
    SOUTH_AMERICA = 'SOUTH_AMERICA'
    ASIA_PACIFIC = 'ASIA_PACIFIC'
    USA_OREGON = 'USA_OREGON'
    USA_IOWA = 'USA_IOWA'
    USA_VIRGINIA = 'USA_VIRGINIA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UptimeCheckIP:
    r"""Contains the region, location, and list of IP addresses where checkers in the location run from."""
    
    ip_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipAddress'), 'exclude': lambda f: f is None }})
    r"""The IP address from which the Uptime check originates. This is a fully specified IP address (not an IP address range). Most IP addresses, as of this publication, are in IPv4 format; however, one should not rely on the IP addresses being in IPv4 format indefinitely, and should support interpreting this field in either IPv4 or IPv6 format."""  
    location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""A more specific location within the region that typically encodes a particular city/town/metro (and its containing state/province or country) within the broader umbrella region category."""  
    region: Optional[UptimeCheckIPRegionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region'), 'exclude': lambda f: f is None }})
    r"""A broad region category in which the IP address is located."""  
    