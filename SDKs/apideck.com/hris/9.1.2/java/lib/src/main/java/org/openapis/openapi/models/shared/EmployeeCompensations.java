/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EmployeeCompensations {
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public CurrencyEnum currency;
    public EmployeeCompensations withCurrency(CurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The date on which a change to an employee's compensation takes effect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effective_date")
    public String effectiveDate;
    public EmployeeCompensations withEffectiveDate(String effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }
    
    /**
     * The FLSA status for this compensation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flsa_status")
    public EmployeeCompensationsFlsaStatusEnum flsaStatus;
    public EmployeeCompensations withFlsaStatus(EmployeeCompensationsFlsaStatusEnum flsaStatus) {
        this.flsaStatus = flsaStatus;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public EmployeeCompensations withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the job to which the compensation belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("job_id")
    public String jobId;
    public EmployeeCompensations withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }
    
    /**
     * Unit of measurement for employee compensation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_unit")
    public PaymentUnitEnum paymentUnit;
    public EmployeeCompensations withPaymentUnit(PaymentUnitEnum paymentUnit) {
        this.paymentUnit = paymentUnit;
        return this;
    }
    
    /**
     * The amount paid per payment unit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rate")
    public Double rate;
    public EmployeeCompensations withRate(Double rate) {
        this.rate = rate;
        return this;
    }
    
}
