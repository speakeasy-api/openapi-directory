/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HealthEventStatusEnum } from "./healtheventstatusenum";
import { InternetHealth } from "./internethealth";
import { NetworkImpairment } from "./networkimpairment";
import { Expose, Type } from "class-transformer";

/**
 * <p>Information about a location impacted by a health event in Amazon CloudWatch Internet Monitor.</p> <p>Geographic regions are hierarchically categorized into country, subdivision, metro and city geographic granularities. The geographic region is identified based on the IP address used at the client locations.</p>
 */
export class ImpactedLocation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ASName" })
  asName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ASNumber" })
  asNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CausedBy" })
  @Type(() => NetworkImpairment)
  causedBy?: NetworkImpairment;

  @SpeakeasyMetadata()
  @Expose({ name: "City" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CountryCode" })
  countryCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InternetHealth" })
  @Type(() => InternetHealth)
  internetHealth?: InternetHealth;

  @SpeakeasyMetadata()
  @Expose({ name: "Latitude" })
  latitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Longitude" })
  longitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Metro" })
  metro?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceLocation" })
  serviceLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: HealthEventStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Subdivision" })
  subdivision?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubdivisionCode" })
  subdivisionCode?: string;
}
