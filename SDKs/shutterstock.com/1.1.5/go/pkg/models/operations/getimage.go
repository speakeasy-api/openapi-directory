// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetImageSecurity struct {
	Basic              *shared.SchemeBasic              `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *shared.SchemeCustomerAccessCode `security:"scheme,type=oauth2"`
}

type GetImagePathParams struct {
	// Image ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// GetImageViewEnum - Amount of detail to render in the response
type GetImageViewEnum string

const (
	GetImageViewEnumMinimal GetImageViewEnum = "minimal"
	GetImageViewEnumFull    GetImageViewEnum = "full"
)

func (e *GetImageViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "minimal":
		fallthrough
	case "full":
		*e = GetImageViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetImageViewEnum: %s", s)
	}
}

type GetImageQueryParams struct {
	// Language for the keywords and categories in the response
	Language *shared.LanguageEnum `queryParam:"style=form,explode=true,name=language"`
	// Amount of detail to render in the response
	View *GetImageViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type GetImageRequest struct {
	PathParams  GetImagePathParams
	QueryParams GetImageQueryParams
	Security    GetImageSecurity
}

type GetImageResponse struct {
	ContentType string
	// OK
	Image       *shared.Image
	StatusCode  int
	RawResponse *http.Response
}
