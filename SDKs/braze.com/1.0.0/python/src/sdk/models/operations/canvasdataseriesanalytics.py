"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class CanvasDataSeriesAnalyticsRequest:
    
    canvas_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'canvas_id', 'style': 'form', 'explode': True }})
    r"""(Required) String
    
    Canvas API Identifier
    """  
    ending_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ending_at', 'style': 'form', 'explode': True }})
    r"""(Required) DateTime (ISO 8601 string)
    
    Date on which the data export should end - defaults to time of the request
    """  
    include_deleted_step_data: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_deleted_step_data', 'style': 'form', 'explode': True }})
    r"""(Optional) Boolean
    
    Whether or not to include step stats for deleted steps (defaults to false)
    """  
    include_step_breakdown: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_step_breakdown', 'style': 'form', 'explode': True }})
    r"""(Optional) Boolean
    
    Whether or not to include step stats (defaults to false)
    """  
    include_variant_breakdown: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_variant_breakdown', 'style': 'form', 'explode': True }})
    r"""(Optional) Boolean
    
    Whether or not to include variant stats (defaults to false)
    """  
    length: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'length', 'style': 'form', 'explode': True }})
    r"""(Optional) DateTime (ISO 8601 string)
    
    Max number of days before ending_at to include in the returned series - must be between 1 and 14 inclusive (either length or starting_at required)
    """  
    starting_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'starting_at', 'style': 'form', 'explode': True }})
    r"""(Optional) DateTime (ISO 8601 string)
    
    Date on which the data export should begin (either length or starting_at are required)
    """  
    

@dataclasses.dataclass
class CanvasDataSeriesAnalyticsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    