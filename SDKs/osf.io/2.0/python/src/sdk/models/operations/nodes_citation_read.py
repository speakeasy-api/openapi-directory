"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class NodesCitationReadRequest:
    
    node_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'node_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the node."""  
    style_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'style_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the citation style."""  
    

@dataclasses.dataclass
class NodesCitationReadStyledCitationAttributes:
    r"""The properties of the citation style entity."""
    
    citation: Optional[str] = dataclasses.field(default=None)
    r"""The complete entity citation in the requested style."""  
    

@dataclasses.dataclass
class NodesCitationReadStyledCitation:
    r"""OK"""
    
    attributes: Optional[NodesCitationReadStyledCitationAttributes] = dataclasses.field(default=None)
    r"""The properties of the citation style entity."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""The identifier of the citation style, e.g. APA."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""The type identifier of the citation style entity (`styled-citations`)."""  
    

@dataclasses.dataclass
class NodesCitationReadResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    