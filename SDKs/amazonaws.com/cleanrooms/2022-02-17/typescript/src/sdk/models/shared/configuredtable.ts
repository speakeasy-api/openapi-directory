/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalysisMethodEnum } from "./analysismethodenum";
import { ConfiguredTableAnalysisRuleTypeEnum } from "./configuredtableanalysisruletypeenum";
import { TableReference } from "./tablereference";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A table that has been configured for use in a collaboration.
 */
export class ConfiguredTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowedColumns" })
  allowedColumns: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "analysisMethod" })
  analysisMethod: AnalysisMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "analysisRuleTypes" })
  analysisRuleTypes: ConfiguredTableAnalysisRuleTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tableReference" })
  @Type(() => TableReference)
  tableReference: TableReference;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
