/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AppProfile - A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.
 */
public class AppProfile {
    /**
     * Long form description of the use case for this AppProfile.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public AppProfile withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public AppProfile withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("multiClusterRoutingUseAny")
    public MultiClusterRoutingUseAny multiClusterRoutingUseAny;

    public AppProfile withMultiClusterRoutingUseAny(MultiClusterRoutingUseAny multiClusterRoutingUseAny) {
        this.multiClusterRoutingUseAny = multiClusterRoutingUseAny;
        return this;
    }
    
    /**
     * The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public AppProfile withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("singleClusterRouting")
    public SingleClusterRouting singleClusterRouting;

    public AppProfile withSingleClusterRouting(SingleClusterRouting singleClusterRouting) {
        this.singleClusterRouting = singleClusterRouting;
        return this;
    }
    
    public AppProfile(){}
}
