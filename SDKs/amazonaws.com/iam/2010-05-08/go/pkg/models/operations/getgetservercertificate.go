// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETServerCertificateActionEnum
type GETGETServerCertificateActionEnum string

const (
	GETGETServerCertificateActionEnumGetServerCertificate GETGETServerCertificateActionEnum = "GetServerCertificate"
)

func (e GETGETServerCertificateActionEnum) ToPointer() *GETGETServerCertificateActionEnum {
	return &e
}

func (e *GETGETServerCertificateActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetServerCertificate":
		*e = GETGETServerCertificateActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETServerCertificateActionEnum: %v", v)
	}
}

// GETGETServerCertificateVersionEnum
type GETGETServerCertificateVersionEnum string

const (
	GETGETServerCertificateVersionEnumTwoThousandAndTen0508 GETGETServerCertificateVersionEnum = "2010-05-08"
)

func (e GETGETServerCertificateVersionEnum) ToPointer() *GETGETServerCertificateVersionEnum {
	return &e
}

func (e *GETGETServerCertificateVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETGETServerCertificateVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETServerCertificateVersionEnum: %v", v)
	}
}

type GETGETServerCertificateRequest struct {
	Action GETGETServerCertificateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the server certificate you want to retrieve information about.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	ServerCertificateName string                             `queryParam:"style=form,explode=true,name=ServerCertificateName"`
	Version               GETGETServerCertificateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm         *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETServerCertificateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
