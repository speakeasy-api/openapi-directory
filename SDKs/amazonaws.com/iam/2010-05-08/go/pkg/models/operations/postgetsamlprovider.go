// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetSAMLProviderActionEnum
type POSTGetSAMLProviderActionEnum string

const (
	POSTGetSAMLProviderActionEnumGetSamlProvider POSTGetSAMLProviderActionEnum = "GetSAMLProvider"
)

func (e POSTGetSAMLProviderActionEnum) ToPointer() *POSTGetSAMLProviderActionEnum {
	return &e
}

func (e *POSTGetSAMLProviderActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetSAMLProvider":
		*e = POSTGetSAMLProviderActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetSAMLProviderActionEnum: %v", v)
	}
}

// POSTGetSAMLProviderVersionEnum
type POSTGetSAMLProviderVersionEnum string

const (
	POSTGetSAMLProviderVersionEnumTwoThousandAndTen0508 POSTGetSAMLProviderVersionEnum = "2010-05-08"
)

func (e POSTGetSAMLProviderVersionEnum) ToPointer() *POSTGetSAMLProviderVersionEnum {
	return &e
}

func (e *POSTGetSAMLProviderVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTGetSAMLProviderVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetSAMLProviderVersionEnum: %v", v)
	}
}

type POSTGetSAMLProviderRequest struct {
	Action            POSTGetSAMLProviderActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                         `request:"mediaType=text/xml"`
	Version           POSTGetSAMLProviderVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetSAMLProviderResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
