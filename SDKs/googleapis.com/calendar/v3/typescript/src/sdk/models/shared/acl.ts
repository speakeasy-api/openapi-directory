/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AclRule } from "./aclrule";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class Acl extends SpeakeasyBase {
  /**
   * ETag of the collection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * List of rules on the access control list.
   */
  @SpeakeasyMetadata({ elemType: AclRule })
  @Expose({ name: "items" })
  @Type(() => AclRule)
  items?: AclRule[];

  /**
   * Type of the collection ("calendar#acl").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextSyncToken" })
  nextSyncToken?: string;
}
