"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MeetingsResponse = exports.MeetingsGroupList = exports.MeetingsGroupListMeetings = exports.MeetingsGroupListMeetingsTypeEnum = exports.MeetingsRequest = exports.MeetingsTypeEnum = exports.MeetingsSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var MeetingsSecurity = /** @class */ (function (_super) {
    __extends(MeetingsSecurity, _super);
    function MeetingsSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MeetingsSecurity.prototype, "oAuth", void 0);
    return MeetingsSecurity;
}(utils_1.SpeakeasyBase));
exports.MeetingsSecurity = MeetingsSecurity;
/**
 * The meeting types: <br>`scheduled` - This includes all valid past meetings (unexpired), live meetings and upcoming scheduled meetings. It is equivalent to the combined list of "Previous Meetings" and "Upcoming Meetings" displayed in the user's [Meetings page](https://zoom.us/meeting) on the Zoom Web Portal.<br>`live` - All the ongoing meetings.<br>`upcoming` - All upcoming meetings including live meetings.
 */
var MeetingsTypeEnum;
(function (MeetingsTypeEnum) {
    MeetingsTypeEnum["Scheduled"] = "scheduled";
    MeetingsTypeEnum["Live"] = "live";
    MeetingsTypeEnum["Upcoming"] = "upcoming";
})(MeetingsTypeEnum = exports.MeetingsTypeEnum || (exports.MeetingsTypeEnum = {}));
var MeetingsRequest = /** @class */ (function (_super) {
    __extends(MeetingsRequest, _super);
    function MeetingsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=next_page_token",
        }),
        __metadata("design:type", String)
    ], MeetingsRequest.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=page_number",
        }),
        __metadata("design:type", String)
    ], MeetingsRequest.prototype, "pageNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=page_size",
        }),
        __metadata("design:type", Number)
    ], MeetingsRequest.prototype, "pageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=type" }),
        __metadata("design:type", String)
    ], MeetingsRequest.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=userId",
        }),
        __metadata("design:type", String)
    ], MeetingsRequest.prototype, "userId", void 0);
    return MeetingsRequest;
}(utils_1.SpeakeasyBase));
exports.MeetingsRequest = MeetingsRequest;
/**
 * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with fixed time.
 */
var MeetingsGroupListMeetingsTypeEnum;
(function (MeetingsGroupListMeetingsTypeEnum) {
    MeetingsGroupListMeetingsTypeEnum["One"] = "1";
    MeetingsGroupListMeetingsTypeEnum["Two"] = "2";
    MeetingsGroupListMeetingsTypeEnum["Three"] = "3";
    MeetingsGroupListMeetingsTypeEnum["Eight"] = "8";
})(MeetingsGroupListMeetingsTypeEnum = exports.MeetingsGroupListMeetingsTypeEnum || (exports.MeetingsGroupListMeetingsTypeEnum = {}));
var MeetingsGroupListMeetings = /** @class */ (function (_super) {
    __extends(MeetingsGroupListMeetings, _super);
    function MeetingsGroupListMeetings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "agenda" }),
        __metadata("design:type", String)
    ], MeetingsGroupListMeetings.prototype, "agenda", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], MeetingsGroupListMeetings.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "duration" }),
        __metadata("design:type", Number)
    ], MeetingsGroupListMeetings.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host_id" }),
        __metadata("design:type", String)
    ], MeetingsGroupListMeetings.prototype, "hostId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], MeetingsGroupListMeetings.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "join_url" }),
        __metadata("design:type", String)
    ], MeetingsGroupListMeetings.prototype, "joinUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pmi" }),
        __metadata("design:type", String)
    ], MeetingsGroupListMeetings.prototype, "pmi", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_time" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], MeetingsGroupListMeetings.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timezone" }),
        __metadata("design:type", String)
    ], MeetingsGroupListMeetings.prototype, "timezone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "topic" }),
        __metadata("design:type", String)
    ], MeetingsGroupListMeetings.prototype, "topic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], MeetingsGroupListMeetings.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uuid" }),
        __metadata("design:type", String)
    ], MeetingsGroupListMeetings.prototype, "uuid", void 0);
    return MeetingsGroupListMeetings;
}(utils_1.SpeakeasyBase));
exports.MeetingsGroupListMeetings = MeetingsGroupListMeetings;
/**
 * Pagination Object.
 */
var MeetingsGroupList = /** @class */ (function (_super) {
    __extends(MeetingsGroupList, _super);
    function MeetingsGroupList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: MeetingsGroupListMeetings }),
        (0, class_transformer_1.Expose)({ name: "meetings" }),
        (0, class_transformer_1.Type)(function () { return MeetingsGroupListMeetings; }),
        __metadata("design:type", Array)
    ], MeetingsGroupList.prototype, "meetings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "next_page_token" }),
        __metadata("design:type", String)
    ], MeetingsGroupList.prototype, "nextPageToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page_count" }),
        __metadata("design:type", Number)
    ], MeetingsGroupList.prototype, "pageCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page_number" }),
        __metadata("design:type", Number)
    ], MeetingsGroupList.prototype, "pageNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page_size" }),
        __metadata("design:type", Number)
    ], MeetingsGroupList.prototype, "pageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_records" }),
        __metadata("design:type", Number)
    ], MeetingsGroupList.prototype, "totalRecords", void 0);
    return MeetingsGroupList;
}(utils_1.SpeakeasyBase));
exports.MeetingsGroupList = MeetingsGroupList;
var MeetingsResponse = /** @class */ (function (_super) {
    __extends(MeetingsResponse, _super);
    function MeetingsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], MeetingsResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], MeetingsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", MeetingsGroupList)
    ], MeetingsResponse.prototype, "groupList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], MeetingsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], MeetingsResponse.prototype, "rawResponse", void 0);
    return MeetingsResponse;
}(utils_1.SpeakeasyBase));
exports.MeetingsResponse = MeetingsResponse;
