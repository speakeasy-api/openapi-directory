/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PaymentInitiationPaymentCreateRequest - PaymentInitiationPaymentCreateRequest defines the request schema for `/payment_initiation/payment/create`
 */
public class PaymentInitiationPaymentCreateRequest {
    /**
     * The amount and currency of a payment
     */
    @JsonProperty("amount")
    public java.util.Map<String, Object> amount;

    public PaymentInitiationPaymentCreateRequest withAmount(java.util.Map<String, Object> amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public PaymentInitiationPaymentCreateRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Additional payment options
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public java.util.Map<String, Object> options;

    public PaymentInitiationPaymentCreateRequest withOptions(java.util.Map<String, Object> options) {
        this.options = options;
        return this;
    }
    
    /**
     * The ID of the recipient the payment is for.
     */
    @JsonProperty("recipient_id")
    public String recipientId;

    public PaymentInitiationPaymentCreateRequest withRecipientId(String recipientId) {
        this.recipientId = recipientId;
        return this;
    }
    
    /**
     * A reference for the payment. This must be an alphanumeric string with at most 18 characters and must not contain any special characters (since not all institutions support them).
     * In order to track settlement via Payment Confirmation, each payment must have a unique reference. If the reference provided through the API is not unique, Plaid will adjust it.
     * Both the originally provided and automatically adjusted references (if any) can be found in the `reference` and `adjusted_reference` fields, respectively.
     */
    @JsonProperty("reference")
    public String reference;

    public PaymentInitiationPaymentCreateRequest withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The schedule that the payment will be executed on. If a schedule is provided, the payment is automatically set up as a standing order. If no schedule is specified, the payment will be executed only once.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public java.util.Map<String, Object> schedule;

    public PaymentInitiationPaymentCreateRequest withSchedule(java.util.Map<String, Object> schedule) {
        this.schedule = schedule;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;

    public PaymentInitiationPaymentCreateRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    public PaymentInitiationPaymentCreateRequest(@JsonProperty("amount") java.util.Map<String, Object> amount, @JsonProperty("recipient_id") String recipientId, @JsonProperty("reference") String reference) {
        this.amount = amount;
        this.recipientId = recipientId;
        this.reference = reference;
  }
}
