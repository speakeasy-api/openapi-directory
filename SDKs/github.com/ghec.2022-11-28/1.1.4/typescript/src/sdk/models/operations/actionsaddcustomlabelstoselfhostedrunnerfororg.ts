/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ActionsAddCustomLabelsToSelfHostedRunnerForOrgRequestBody extends SpeakeasyBase {
  /**
   * The names of the custom labels to add to the runner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels: string[];
}

export class ActionsAddCustomLabelsToSelfHostedRunnerForOrgRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ActionsAddCustomLabelsToSelfHostedRunnerForOrgRequestBody;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * Unique identifier of the self-hosted runner.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=runner_id",
  })
  runnerId: number;
}

/**
 * Response
 */
export class ActionsAddCustomLabelsToSelfHostedRunnerForOrg200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.RunnerLabel })
  @Expose({ name: "labels" })
  @Type(() => shared.RunnerLabel)
  labels: shared.RunnerLabel[];

  @SpeakeasyMetadata()
  @Expose({ name: "total_count" })
  totalCount: number;
}

export class ActionsAddCustomLabelsToSelfHostedRunnerForOrgResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  actionsAddCustomLabelsToSelfHostedRunnerForOrg200ApplicationJSONObject?: ActionsAddCustomLabelsToSelfHostedRunnerForOrg200ApplicationJSON;

  /**
   * Resource not found
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationErrorSimple?: shared.ValidationErrorSimple;
}
