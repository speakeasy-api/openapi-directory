/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * key details
 */
export class APIKey extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "counter" })
  counter?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inactive" })
  inactive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_used_at" })
  lastUsedAt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_used_ip" })
  lastUsedIp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_used_ua" })
  lastUsedUa?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "organization_id" })
  organizationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "usage_limit" })
  usageLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "usage_today" })
  usageToday?: number;
}
