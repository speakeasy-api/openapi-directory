/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InputInformation } from "./inputinformation";
import { OutputInformation } from "./outputinformation";
import { Expose, Type } from "class-transformer";

/**
 * Container Class for the Web API
 */
export class MeterFolderInformation extends SpeakeasyBase {
  /**
   * The Version of the Communication Module (if exists)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CommunicationModuleFirmwareVersion" })
  communicationModuleFirmwareVersion?: number;

  /**
   * The Version of the Communication Module (if exists)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CommunicationModuleHardwareVersion" })
  communicationModuleHardwareVersion?: number;

  /**
   * The Firmware Version of a Meter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FirmwareVersion" })
  firmwareVersion?: number;

  /**
   * The Hardware Version of a Meter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HardwareVersion" })
  hardwareVersion?: number;

  /**
   * Informations about the available Inputs
   */
  @SpeakeasyMetadata({ elemType: InputInformation })
  @Expose({ name: "InputInformations" })
  @Type(() => InputInformation)
  inputInformations?: InputInformation[];

  /**
   * Flag if it's a Folder or a Meter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsFolder" })
  isFolder?: boolean;

  /**
   * Name of the Meter or Folder
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * Informations about the available Outputs
   */
  @SpeakeasyMetadata({ elemType: OutputInformation })
  @Expose({ name: "OutputInformations" })
  @Type(() => OutputInformation)
  outputInformations?: OutputInformation[];
}
