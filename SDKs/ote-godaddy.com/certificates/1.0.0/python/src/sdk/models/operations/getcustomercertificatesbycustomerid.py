"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import certificatesummariesv2 as shared_certificatesummariesv2
from typing import Optional


@dataclasses.dataclass
class GetCustomerCertificatesByCustomerIDRequest:
    
    customer_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'customerId', 'style': 'simple', 'explode': False }})
    r"""An identifier for a customer"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Maximum number of items to return"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Number of results to skip for pagination"""  
    

@dataclasses.dataclass
class GetCustomerCertificatesByCustomerIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    certificate_summaries_v2: Optional[shared_certificatesummariesv2.CertificateSummariesV2] = dataclasses.field(default=None)
    r"""Customer certificate information retrieved."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    