// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum
type UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum string

const (
	UpdateNotebookInstanceLifecycleConfigXAmzTargetEnumSageMakerUpdateNotebookInstanceLifecycleConfig UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum = "SageMaker.UpdateNotebookInstanceLifecycleConfig"
)

func (e UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum) ToPointer() *UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum {
	return &e
}

func (e *UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.UpdateNotebookInstanceLifecycleConfig":
		*e = UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum: %v", v)
	}
}

type UpdateNotebookInstanceLifecycleConfigRequest struct {
	UpdateNotebookInstanceLifecycleConfigInput shared.UpdateNotebookInstanceLifecycleConfigInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                              *string                                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                          *string                                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                             *string                                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                   *string                                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                          *string                                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                              *string                                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                          *string                                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                 UpdateNotebookInstanceLifecycleConfigXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateNotebookInstanceLifecycleConfigResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ResourceLimitExceeded
	ResourceLimitExceeded interface{}
	// Success
	UpdateNotebookInstanceLifecycleConfigOutput map[string]interface{}
}
