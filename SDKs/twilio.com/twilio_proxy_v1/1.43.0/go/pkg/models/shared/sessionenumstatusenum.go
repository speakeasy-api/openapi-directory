// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SessionEnumStatusEnum string

const (
	SessionEnumStatusEnumOpen       SessionEnumStatusEnum = "open"
	SessionEnumStatusEnumInProgress SessionEnumStatusEnum = "in-progress"
	SessionEnumStatusEnumClosed     SessionEnumStatusEnum = "closed"
	SessionEnumStatusEnumFailed     SessionEnumStatusEnum = "failed"
	SessionEnumStatusEnumUnknown    SessionEnumStatusEnum = "unknown"
)

func (e SessionEnumStatusEnum) ToPointer() *SessionEnumStatusEnum {
	return &e
}

func (e *SessionEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "open":
		fallthrough
	case "in-progress":
		fallthrough
	case "closed":
		fallthrough
	case "failed":
		fallthrough
	case "unknown":
		*e = SessionEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SessionEnumStatusEnum: %v", v)
	}
}
