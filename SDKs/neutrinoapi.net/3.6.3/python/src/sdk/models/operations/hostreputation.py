"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import hostreputationresponse as shared_hostreputationresponse
from typing import Optional


@dataclasses.dataclass
class HostReputationRequest:
    
    host: str = dataclasses.field(metadata={'query_param': { 'field_name': 'host', 'style': 'form', 'explode': True }})
    r"""An IP address, domain name, FQDN or URL. <br>If you supply a domain/URL it will be checked against the URI DNSBL lists"""  
    list_rating: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'list-rating', 'style': 'form', 'explode': True }})
    r"""Only check lists with this rating or better"""  
    zones: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'zones', 'style': 'form', 'explode': True }})
    r"""Only check these DNSBL zones/hosts. Multiple zones can be supplied as comma-separated values"""  
    

@dataclasses.dataclass
class HostReputationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Your API request has been rejected. Check error code for details"""  
    host_reputation_response: Optional[shared_hostreputationresponse.HostReputationResponse] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    