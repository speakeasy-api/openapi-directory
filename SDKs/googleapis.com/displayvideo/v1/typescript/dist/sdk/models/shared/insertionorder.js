"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InsertionOrder = exports.InsertionOrderReservationTypeEnum = exports.InsertionOrderInput = exports.InsertionOrderInsertionOrderTypeEnum = exports.InsertionOrderEntityStatusEnum = exports.InsertionOrderBillableOutcomeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var biddingstrategy_1 = require("./biddingstrategy");
var frequencycap_1 = require("./frequencycap");
var insertionorderbudget_1 = require("./insertionorderbudget");
var integrationdetails_1 = require("./integrationdetails");
var pacing_1 = require("./pacing");
var partnercost_1 = require("./partnercost");
var performancegoal_1 = require("./performancegoal");
var class_transformer_1 = require("class-transformer");
/**
 * Immutable. The billable outcome of the insertion order.
 */
var InsertionOrderBillableOutcomeEnum;
(function (InsertionOrderBillableOutcomeEnum) {
    InsertionOrderBillableOutcomeEnum["BillableOutcomeUnspecified"] = "BILLABLE_OUTCOME_UNSPECIFIED";
    InsertionOrderBillableOutcomeEnum["BillableOutcomePayPerImpression"] = "BILLABLE_OUTCOME_PAY_PER_IMPRESSION";
    InsertionOrderBillableOutcomeEnum["BillableOutcomePayPerClick"] = "BILLABLE_OUTCOME_PAY_PER_CLICK";
    InsertionOrderBillableOutcomeEnum["BillableOutcomePayPerViewableImpression"] = "BILLABLE_OUTCOME_PAY_PER_VIEWABLE_IMPRESSION";
})(InsertionOrderBillableOutcomeEnum = exports.InsertionOrderBillableOutcomeEnum || (exports.InsertionOrderBillableOutcomeEnum = {}));
/**
 * Required. Controls whether or not the insertion order can spend its budget and bid on inventory. * For CreateInsertionOrder method, only `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * An insertion order cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not active.
 */
var InsertionOrderEntityStatusEnum;
(function (InsertionOrderEntityStatusEnum) {
    InsertionOrderEntityStatusEnum["EntityStatusUnspecified"] = "ENTITY_STATUS_UNSPECIFIED";
    InsertionOrderEntityStatusEnum["EntityStatusActive"] = "ENTITY_STATUS_ACTIVE";
    InsertionOrderEntityStatusEnum["EntityStatusArchived"] = "ENTITY_STATUS_ARCHIVED";
    InsertionOrderEntityStatusEnum["EntityStatusDraft"] = "ENTITY_STATUS_DRAFT";
    InsertionOrderEntityStatusEnum["EntityStatusPaused"] = "ENTITY_STATUS_PAUSED";
    InsertionOrderEntityStatusEnum["EntityStatusScheduledForDeletion"] = "ENTITY_STATUS_SCHEDULED_FOR_DELETION";
})(InsertionOrderEntityStatusEnum = exports.InsertionOrderEntityStatusEnum || (exports.InsertionOrderEntityStatusEnum = {}));
/**
 * The type of insertion order. If this field is unspecified in creation, the value defaults to `RTB`.
 */
var InsertionOrderInsertionOrderTypeEnum;
(function (InsertionOrderInsertionOrderTypeEnum) {
    InsertionOrderInsertionOrderTypeEnum["InsertionOrderTypeUnspecified"] = "INSERTION_ORDER_TYPE_UNSPECIFIED";
    InsertionOrderInsertionOrderTypeEnum["Rtb"] = "RTB";
    InsertionOrderInsertionOrderTypeEnum["OverTheTop"] = "OVER_THE_TOP";
})(InsertionOrderInsertionOrderTypeEnum = exports.InsertionOrderInsertionOrderTypeEnum || (exports.InsertionOrderInsertionOrderTypeEnum = {}));
/**
 * A single insertion order.
 */
var InsertionOrderInput = /** @class */ (function (_super) {
    __extends(InsertionOrderInput, _super);
    function InsertionOrderInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bidStrategy" }),
        (0, class_transformer_1.Type)(function () { return biddingstrategy_1.BiddingStrategy; }),
        __metadata("design:type", biddingstrategy_1.BiddingStrategy)
    ], InsertionOrderInput.prototype, "bidStrategy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billableOutcome" }),
        __metadata("design:type", String)
    ], InsertionOrderInput.prototype, "billableOutcome", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "budget" }),
        (0, class_transformer_1.Type)(function () { return insertionorderbudget_1.InsertionOrderBudget; }),
        __metadata("design:type", insertionorderbudget_1.InsertionOrderBudget)
    ], InsertionOrderInput.prototype, "budget", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "campaignId" }),
        __metadata("design:type", String)
    ], InsertionOrderInput.prototype, "campaignId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], InsertionOrderInput.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "entityStatus" }),
        __metadata("design:type", String)
    ], InsertionOrderInput.prototype, "entityStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "frequencyCap" }),
        (0, class_transformer_1.Type)(function () { return frequencycap_1.FrequencyCap; }),
        __metadata("design:type", frequencycap_1.FrequencyCap)
    ], InsertionOrderInput.prototype, "frequencyCap", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "insertionOrderType" }),
        __metadata("design:type", String)
    ], InsertionOrderInput.prototype, "insertionOrderType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "integrationDetails" }),
        (0, class_transformer_1.Type)(function () { return integrationdetails_1.IntegrationDetails; }),
        __metadata("design:type", integrationdetails_1.IntegrationDetails)
    ], InsertionOrderInput.prototype, "integrationDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pacing" }),
        (0, class_transformer_1.Type)(function () { return pacing_1.Pacing; }),
        __metadata("design:type", pacing_1.Pacing)
    ], InsertionOrderInput.prototype, "pacing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: partnercost_1.PartnerCost }),
        (0, class_transformer_1.Expose)({ name: "partnerCosts" }),
        (0, class_transformer_1.Type)(function () { return partnercost_1.PartnerCost; }),
        __metadata("design:type", Array)
    ], InsertionOrderInput.prototype, "partnerCosts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "performanceGoal" }),
        (0, class_transformer_1.Type)(function () { return performancegoal_1.PerformanceGoal; }),
        __metadata("design:type", performancegoal_1.PerformanceGoal)
    ], InsertionOrderInput.prototype, "performanceGoal", void 0);
    return InsertionOrderInput;
}(utils_1.SpeakeasyBase));
exports.InsertionOrderInput = InsertionOrderInput;
/**
 * Output only. The reservation type of the insertion order.
 */
var InsertionOrderReservationTypeEnum;
(function (InsertionOrderReservationTypeEnum) {
    InsertionOrderReservationTypeEnum["ReservationTypeUnspecified"] = "RESERVATION_TYPE_UNSPECIFIED";
    InsertionOrderReservationTypeEnum["ReservationTypeNotGuaranteed"] = "RESERVATION_TYPE_NOT_GUARANTEED";
    InsertionOrderReservationTypeEnum["ReservationTypeProgrammaticGuaranteed"] = "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED";
    InsertionOrderReservationTypeEnum["ReservationTypeTagGuaranteed"] = "RESERVATION_TYPE_TAG_GUARANTEED";
})(InsertionOrderReservationTypeEnum = exports.InsertionOrderReservationTypeEnum || (exports.InsertionOrderReservationTypeEnum = {}));
/**
 * A single insertion order.
 */
var InsertionOrder = /** @class */ (function (_super) {
    __extends(InsertionOrder, _super);
    function InsertionOrder() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "advertiserId" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "advertiserId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bidStrategy" }),
        (0, class_transformer_1.Type)(function () { return biddingstrategy_1.BiddingStrategy; }),
        __metadata("design:type", biddingstrategy_1.BiddingStrategy)
    ], InsertionOrder.prototype, "bidStrategy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billableOutcome" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "billableOutcome", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "budget" }),
        (0, class_transformer_1.Type)(function () { return insertionorderbudget_1.InsertionOrderBudget; }),
        __metadata("design:type", insertionorderbudget_1.InsertionOrderBudget)
    ], InsertionOrder.prototype, "budget", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "campaignId" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "campaignId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "entityStatus" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "entityStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "frequencyCap" }),
        (0, class_transformer_1.Type)(function () { return frequencycap_1.FrequencyCap; }),
        __metadata("design:type", frequencycap_1.FrequencyCap)
    ], InsertionOrder.prototype, "frequencyCap", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "insertionOrderId" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "insertionOrderId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "insertionOrderType" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "insertionOrderType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "integrationDetails" }),
        (0, class_transformer_1.Type)(function () { return integrationdetails_1.IntegrationDetails; }),
        __metadata("design:type", integrationdetails_1.IntegrationDetails)
    ], InsertionOrder.prototype, "integrationDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pacing" }),
        (0, class_transformer_1.Type)(function () { return pacing_1.Pacing; }),
        __metadata("design:type", pacing_1.Pacing)
    ], InsertionOrder.prototype, "pacing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: partnercost_1.PartnerCost }),
        (0, class_transformer_1.Expose)({ name: "partnerCosts" }),
        (0, class_transformer_1.Type)(function () { return partnercost_1.PartnerCost; }),
        __metadata("design:type", Array)
    ], InsertionOrder.prototype, "partnerCosts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "performanceGoal" }),
        (0, class_transformer_1.Type)(function () { return performancegoal_1.PerformanceGoal; }),
        __metadata("design:type", performancegoal_1.PerformanceGoal)
    ], InsertionOrder.prototype, "performanceGoal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reservationType" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "reservationType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updateTime" }),
        __metadata("design:type", String)
    ], InsertionOrder.prototype, "updateTime", void 0);
    return InsertionOrder;
}(utils_1.SpeakeasyBase));
exports.InsertionOrder = InsertionOrder;
