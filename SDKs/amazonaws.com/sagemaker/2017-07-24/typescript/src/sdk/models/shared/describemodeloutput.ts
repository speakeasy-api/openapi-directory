/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContainerDefinition } from "./containerdefinition";
import { InferenceExecutionConfig } from "./inferenceexecutionconfig";
import { VpcConfig } from "./vpcconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeModelOutput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ContainerDefinition })
  @Expose({ name: "Containers" })
  @Type(() => ContainerDefinition)
  containers?: ContainerDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableNetworkIsolation" })
  enableNetworkIsolation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionRoleArn" })
  executionRoleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceExecutionConfig" })
  @Type(() => InferenceExecutionConfig)
  inferenceExecutionConfig?: InferenceExecutionConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelArn" })
  modelArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelName" })
  modelName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PrimaryContainer" })
  @Type(() => ContainerDefinition)
  primaryContainer?: ContainerDefinition;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfig" })
  @Type(() => VpcConfig)
  vpcConfig?: VpcConfig;
}
