"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudresourcesettingsv1settingmetadata as shared_googlecloudresourcesettingsv1settingmetadata
from ..shared import googlecloudresourcesettingsv1value as shared_googlecloudresourcesettingsv1value
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudResourcesettingsV1Setting:
    r"""The schema for settings."""
    
    effective_value: Optional[shared_googlecloudresourcesettingsv1value.GoogleCloudResourcesettingsV1Value] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effectiveValue'), 'exclude': lambda f: f is None }})
    r"""The data in a setting value."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""A fingerprint used for optimistic concurrency. See UpdateSetting for more details."""  
    local_value: Optional[shared_googlecloudresourcesettingsv1value.GoogleCloudResourcesettingsV1Value] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localValue'), 'exclude': lambda f: f is None }})
    r"""The data in a setting value."""  
    metadata: Optional[shared_googlecloudresourcesettingsv1settingmetadata.GoogleCloudResourcesettingsV1SettingMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Metadata about a setting which is not editable by the end user."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \\"/projects/123/settings/gcp-enableMyFeature\\" """  
    