// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InspectorEventEnum string

const (
	InspectorEventEnumAssessmentRunStarted      InspectorEventEnum = "ASSESSMENT_RUN_STARTED"
	InspectorEventEnumAssessmentRunCompleted    InspectorEventEnum = "ASSESSMENT_RUN_COMPLETED"
	InspectorEventEnumAssessmentRunStateChanged InspectorEventEnum = "ASSESSMENT_RUN_STATE_CHANGED"
	InspectorEventEnumFindingReported           InspectorEventEnum = "FINDING_REPORTED"
	InspectorEventEnumOther                     InspectorEventEnum = "OTHER"
)

func (e *InspectorEventEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASSESSMENT_RUN_STARTED":
		fallthrough
	case "ASSESSMENT_RUN_COMPLETED":
		fallthrough
	case "ASSESSMENT_RUN_STATE_CHANGED":
		fallthrough
	case "FINDING_REPORTED":
		fallthrough
	case "OTHER":
		*e = InspectorEventEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InspectorEventEnum: %s", s)
	}
}
