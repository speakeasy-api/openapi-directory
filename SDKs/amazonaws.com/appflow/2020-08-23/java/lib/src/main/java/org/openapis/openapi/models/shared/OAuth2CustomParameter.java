/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OAuth2CustomParameter - Custom parameter required for OAuth 2.0 authentication.
 */
public class OAuth2CustomParameter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectorSuppliedValues")
    public String[] connectorSuppliedValues;

    public OAuth2CustomParameter withConnectorSuppliedValues(String[] connectorSuppliedValues) {
        this.connectorSuppliedValues = connectorSuppliedValues;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public OAuth2CustomParameter withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRequired")
    public Boolean isRequired;

    public OAuth2CustomParameter withIsRequired(Boolean isRequired) {
        this.isRequired = isRequired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isSensitiveField")
    public Boolean isSensitiveField;

    public OAuth2CustomParameter withIsSensitiveField(Boolean isSensitiveField) {
        this.isSensitiveField = isSensitiveField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public OAuth2CustomParameter withKey(String key) {
        this.key = key;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;

    public OAuth2CustomParameter withLabel(String label) {
        this.label = label;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public OAuth2CustomPropTypeEnum type;

    public OAuth2CustomParameter withType(OAuth2CustomPropTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public OAuth2CustomParameter(){}
}
