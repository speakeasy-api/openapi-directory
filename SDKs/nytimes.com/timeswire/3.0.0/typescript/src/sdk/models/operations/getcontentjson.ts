/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetContentJsonRequest extends SpeakeasyBase {
  /**
   * The complete URL of a specific news item, URL-encoded or backslash-escaped
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=url" })
  url: string;
}

/**
 * An array of Articles
 */
export class GetContentJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "num_results" })
  numResults?: number;

  @SpeakeasyMetadata({ elemType: shared.Article })
  @Expose({ name: "results" })
  @Type(() => shared.Article)
  results?: shared.Article[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class GetContentJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * An array of Articles
   */
  @SpeakeasyMetadata()
  getContentJSON200ApplicationJSONObject?: GetContentJson200ApplicationJSON;
}
