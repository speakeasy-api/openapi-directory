"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import portfolioactivations as shared_portfolioactivations
from typing import Optional


@dataclasses.dataclass
class GetOfferingsInfoTextPatternRequest:
    
    text_pattern: str = dataclasses.field(metadata={'path_param': { 'field_name': 'textPattern', 'style': 'simple', 'explode': False }})
    r"""Text pattern to search for (minimum of 3 characters length)."""  
    

@dataclasses.dataclass
class GetOfferingsInfoTextPatternResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Bad Request"""  
    portfolio_activations: Optional[list[shared_portfolioactivations.PortfolioActivations]] = dataclasses.field(default=None)
    r"""Offerings"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    