/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetPlayerSeasonPPARequest extends SpeakeasyBase {
  /**
   * Conference abbreviation filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=conference",
  })
  conference?: string;

  /**
   * Filter to remove garbage time plays from calculations
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=excludeGarbageTime",
  })
  excludeGarbageTime?: boolean;

  /**
   * Player id filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=playerId",
  })
  playerId?: number;

  /**
   * Position abbreviation filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=position",
  })
  position?: string;

  /**
   * Team filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=team" })
  team?: string;

  /**
   * Minimum play threshold filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=threshold",
  })
  threshold?: string;

  /**
   * Year filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

export class GetPlayerSeasonPPAResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * successful operation
   */
  @SpeakeasyMetadata({ elemType: shared.PlayerSeasonPPA })
  playerSeasonPPAS?: shared.PlayerSeasonPPA[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
