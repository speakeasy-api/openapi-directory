"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lineitempricingtaxdetail as shared_lineitempricingtaxdetail
from ..shared import orderfee as shared_orderfee
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderPricing:
    
    discount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discount') }})
    r"""Discount from promotional pricing"""  
    fees: shared_orderfee.OrderFee = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fees') }})  
    list_: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('list') }})
    r"""Sum of list prices for the entire cart"""  
    savings: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('savings') }})
    r"""Savings off of list price <pre>`savings` = `list` - `subtotal`</pre>"""  
    subtotal: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subtotal') }})
    r"""Price with `discount` and without taxes or fees"""  
    taxes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxes') }})
    r"""Taxes for the entire cart"""  
    total: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})
    r"""Price the customer pays <pre>`total` = `subtotal` + `taxes` + `fees.total`</pre>"""  
    id: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    tax_details: Optional[list[shared_lineitempricingtaxdetail.LineItemPricingTaxDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxDetails'), 'exclude': lambda f: f is None }})
    r"""A collection of line item tax details"""  
    