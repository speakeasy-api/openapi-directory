/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionTemplate } from "./executiontemplate";
import { Expose, Type } from "class-transformer";

/**
 * Output only. State of the underlying AI Platform job.
 */
export enum ExecutionStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Queued = "QUEUED",
  Preparing = "PREPARING",
  Running = "RUNNING",
  Succeeded = "SUCCEEDED",
  Failed = "FAILED",
  Cancelling = "CANCELLING",
  Cancelled = "CANCELLED",
  Expired = "EXPIRED",
  Initializing = "INITIALIZING",
}

/**
 * The definition of a single executed notebook.
 */
export class Execution extends SpeakeasyBase {
  /**
   * Output only. Time the Execution was instantiated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * A brief description of this execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The description a notebook execution workload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionTemplate" })
  @Type(() => ExecutionTemplate)
  executionTemplate?: ExecutionTemplate;

  /**
   * Output only. The URI of the external job used to execute the notebook.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobUri" })
  jobUri?: string;

  /**
   * Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output notebook file generated by this execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outputNotebookFile" })
  outputNotebookFile?: string;

  /**
   * Output only. State of the underlying AI Platform job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ExecutionStateEnum;

  /**
   * Output only. Time the Execution was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * The definition of a single executed notebook.
 */
export class ExecutionInput extends SpeakeasyBase {
  /**
   * A brief description of this execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The description a notebook execution workload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionTemplate" })
  @Type(() => ExecutionTemplate)
  executionTemplate?: ExecutionTemplate;

  /**
   * Output notebook file generated by this execution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outputNotebookFile" })
  outputNotebookFile?: string;
}
