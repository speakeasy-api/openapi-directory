// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MonitoredResourceDescriptorLaunchStageEnum - Optional. The launch stage of the monitored resource definition.
type MonitoredResourceDescriptorLaunchStageEnum string

const (
	MonitoredResourceDescriptorLaunchStageEnumLaunchStageUnspecified MonitoredResourceDescriptorLaunchStageEnum = "LAUNCH_STAGE_UNSPECIFIED"
	MonitoredResourceDescriptorLaunchStageEnumUnimplemented          MonitoredResourceDescriptorLaunchStageEnum = "UNIMPLEMENTED"
	MonitoredResourceDescriptorLaunchStageEnumPrelaunch              MonitoredResourceDescriptorLaunchStageEnum = "PRELAUNCH"
	MonitoredResourceDescriptorLaunchStageEnumEarlyAccess            MonitoredResourceDescriptorLaunchStageEnum = "EARLY_ACCESS"
	MonitoredResourceDescriptorLaunchStageEnumAlpha                  MonitoredResourceDescriptorLaunchStageEnum = "ALPHA"
	MonitoredResourceDescriptorLaunchStageEnumBeta                   MonitoredResourceDescriptorLaunchStageEnum = "BETA"
	MonitoredResourceDescriptorLaunchStageEnumGa                     MonitoredResourceDescriptorLaunchStageEnum = "GA"
	MonitoredResourceDescriptorLaunchStageEnumDeprecated             MonitoredResourceDescriptorLaunchStageEnum = "DEPRECATED"
)

func (e MonitoredResourceDescriptorLaunchStageEnum) ToPointer() *MonitoredResourceDescriptorLaunchStageEnum {
	return &e
}

func (e *MonitoredResourceDescriptorLaunchStageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LAUNCH_STAGE_UNSPECIFIED":
		fallthrough
	case "UNIMPLEMENTED":
		fallthrough
	case "PRELAUNCH":
		fallthrough
	case "EARLY_ACCESS":
		fallthrough
	case "ALPHA":
		fallthrough
	case "BETA":
		fallthrough
	case "GA":
		fallthrough
	case "DEPRECATED":
		*e = MonitoredResourceDescriptorLaunchStageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MonitoredResourceDescriptorLaunchStageEnum: %v", v)
	}
}

// MonitoredResourceDescriptor - An object that describes the schema of a MonitoredResource object using a type name and a set of labels. For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of "gce_instance" and specifies the use of the labels "instance_id" and "zone" to identify particular VM instances.Different APIs can support different monitored resource types. APIs generally provide a list method that returns the monitored resource descriptors used by the API.
type MonitoredResourceDescriptor struct {
	// Optional. A detailed description of the monitored resource type that might be used in documentation.
	Description *string `json:"description,omitempty"`
	// Optional. A concise name for the monitored resource type that might be displayed in user interfaces. It should be a Title Cased Noun Phrase, without any article or other determiners. For example, "Google Cloud SQL Database".
	DisplayName *string `json:"displayName,omitempty"`
	// Required. A set of labels used to describe instances of this monitored resource type. For example, an individual Google Cloud SQL database is identified by values for the labels "database_id" and "zone".
	Labels []LabelDescriptor `json:"labels,omitempty"`
	// Optional. The launch stage of the monitored resource definition.
	LaunchStage *MonitoredResourceDescriptorLaunchStageEnum `json:"launchStage,omitempty"`
	// Optional. The resource name of the monitored resource descriptor: "projects/{project_id}/monitoredResourceDescriptors/{type}" where {type} is the value of the type field in this object and {project_id} is a project ID that provides API-specific context for accessing the type. APIs that do not use project information can use the resource name format "monitoredResourceDescriptors/{type}".
	Name *string `json:"name,omitempty"`
	// Required. The monitored resource type. For example, the type "cloudsql_database" represents databases in Google Cloud SQL. For a list of types, see Monitoring resource types (https://cloud.google.com/monitoring/api/resources) and Logging resource types (https://cloud.google.com/logging/docs/api/v2/resource-list).
	Type *string `json:"type,omitempty"`
}
