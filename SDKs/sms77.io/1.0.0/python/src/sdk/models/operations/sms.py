"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SmsDebugEnum(str, Enum):
    r"""Disable message sending."""
    ONE = '1'
    ZERO = '0'

class SmsDetailsEnum(str, Enum):
    r"""Attach message details to response."""
    ONE = '1'
    ZERO = '0'

class SmsFlashEnum(str, Enum):
    r"""Send as flash."""
    ONE = '1'
    ZERO = '0'

class SmsJSONEnum(str, Enum):
    r"""Return a detailed JSON response."""
    ONE = '1'
    ZERO = '0'

class SmsNoReloadEnum(str, Enum):
    r"""Enable sending of duplicated messages within 180 seconds."""
    ONE = '1'
    ZERO = '0'

class SmsPerformanceTrackingEnum(str, Enum):
    r"""Enable performance tracking for found URLs."""
    ONE = '1'
    ZERO = '0'

class SmsReturnMsgIDEnum(str, Enum):
    r"""Attach message ID to second row in a text response."""
    ONE = '1'
    ZERO = '0'

class SmsUnicodeEnum(str, Enum):
    r"""Force unicode encoding. Reduces sms length to 70 chars."""
    ONE = '1'
    ZERO = '0'

class SmsUTF8Enum(str, Enum):
    r"""Force UTF8 encoding."""
    ONE = '1'
    ZERO = '0'


@dataclasses.dataclass
class SmsRequest:
    
    text: str = dataclasses.field(metadata={'query_param': { 'field_name': 'text', 'style': 'form', 'explode': True }})
    r"""The actual text message to send."""  
    to: str = dataclasses.field(metadata={'query_param': { 'field_name': 'to', 'style': 'form', 'explode': True }})
    r"""The recipient number or group name."""  
    debug: Optional[SmsDebugEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'debug', 'style': 'form', 'explode': True }})
    r"""Disable message sending."""  
    delay: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'delay', 'style': 'form', 'explode': True }})
    r"""Date/Time for delayed dispatch."""  
    details: Optional[SmsDetailsEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'details', 'style': 'form', 'explode': True }})
    r"""Attach message details to response."""  
    flash: Optional[SmsFlashEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'flash', 'style': 'form', 'explode': True }})
    r"""Send as flash."""  
    foreign_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'foreign_id', 'style': 'form', 'explode': True }})
    r"""Identifier to return in callbacks."""  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})
    r"""Set a custom sender name."""  
    json: Optional[SmsJSONEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'json', 'style': 'form', 'explode': True }})
    r"""Return a detailed JSON response."""  
    label: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'label', 'style': 'form', 'explode': True }})
    r"""A custom label."""  
    no_reload: Optional[SmsNoReloadEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'no_reload', 'style': 'form', 'explode': True }})
    r"""Enable sending of duplicated messages within 180 seconds."""  
    performance_tracking: Optional[SmsPerformanceTrackingEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'performance_tracking', 'style': 'form', 'explode': True }})
    r"""Enable performance tracking for found URLs."""  
    return_msg_id: Optional[SmsReturnMsgIDEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'return_msg_id', 'style': 'form', 'explode': True }})
    r"""Attach message ID to second row in a text response."""  
    udh: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'udh', 'style': 'form', 'explode': True }})
    r"""A custom User Data Header."""  
    unicode: Optional[SmsUnicodeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'unicode', 'style': 'form', 'explode': True }})
    r"""Force unicode encoding. Reduces sms length to 70 chars."""  
    utf8: Optional[SmsUTF8Enum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'utf8', 'style': 'form', 'explode': True }})
    r"""Force UTF8 encoding."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Sms200ApplicationJSONMessages:
    
    encoding: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encoding'), 'exclude': lambda f: f is None }})  
    error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})  
    error_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_text'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    messages: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messages'), 'exclude': lambda f: f is None }})  
    parts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parts'), 'exclude': lambda f: f is None }})  
    price: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})  
    recipient: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipient'), 'exclude': lambda f: f is None }})  
    sender: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sender'), 'exclude': lambda f: f is None }})  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})  
    
class Sms200ApplicationJSONSmsTypeEnum(str, Enum):
    ECONOMY = 'economy'
    DIRECT = 'direct'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Sms200ApplicationJSON:
    r"""OK"""
    
    balance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})  
    debug: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debug'), 'exclude': lambda f: f is None }})  
    messages: Optional[list[Sms200ApplicationJSONMessages]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('messages'), 'exclude': lambda f: f is None }})  
    sms_type: Optional[Sms200ApplicationJSONSmsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_type'), 'exclude': lambda f: f is None }})  
    success: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})  
    total_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_price'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class SmsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    sms_200_application_json_object: Optional[Sms200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    sms_200_text_plain_object: Optional[str] = dataclasses.field(default=None)
    r"""OK"""  
    