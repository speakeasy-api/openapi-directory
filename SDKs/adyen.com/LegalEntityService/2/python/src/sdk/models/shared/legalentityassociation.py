"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LegalEntityAssociationTypeEnum(str, Enum):
    r"""Defines the relationship of the legal entity to the current legal entity.
    
    Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **signatory**, or **ultimateParentCompany**. 
    
    Possible values for sole proprietorships: **soleProprietorship**.
    """
    PCI_SIGNATORY = 'pciSignatory'
    SIGNATORY = 'signatory'
    SOLE_PROPRIETORSHIP = 'soleProprietorship'
    UBO_THROUGH_CONTROL = 'uboThroughControl'
    UBO_THROUGH_OWNERSHIP = 'uboThroughOwnership'
    ULTIMATE_PARENT_COMPANY = 'ultimateParentCompany'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LegalEntityAssociationInput:
    
    legal_entity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalEntityId') }})
    r"""The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)."""  
    type: LegalEntityAssociationTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Defines the relationship of the legal entity to the current legal entity.
    
    Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **signatory**, or **ultimateParentCompany**. 
    
    Possible values for sole proprietorships: **soleProprietorship**.
    """  
    job_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobTitle'), 'exclude': lambda f: f is None }})
    r"""The individual's job title if the `type` is **uboThroughControl** or **signatory**."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LegalEntityAssociation:
    
    legal_entity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalEntityId') }})
    r"""The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id)."""  
    type: LegalEntityAssociationTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Defines the relationship of the legal entity to the current legal entity.
    
    Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **signatory**, or **ultimateParentCompany**. 
    
    Possible values for sole proprietorships: **soleProprietorship**.
    """  
    associator_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('associatorId'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of another legal entity with which the `legalEntityId` is associated. When the `legalEntityId` is associated to legal entities other than the current one, the response returns all the associations."""  
    entity_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entityType'), 'exclude': lambda f: f is None }})
    r"""The legal entity type of associated legal entity.
    
    For example, **organization**, **soleProprietorship** or **individual**.
    """  
    job_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobTitle'), 'exclude': lambda f: f is None }})
    r"""The individual's job title if the `type` is **uboThroughControl** or **signatory**."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
    
    - For **individual**, `name.firstName` and `name.lastName`.
    - For **organization**, `legalName`.
    - For **soleProprietorship**, `name`.
    """  
    