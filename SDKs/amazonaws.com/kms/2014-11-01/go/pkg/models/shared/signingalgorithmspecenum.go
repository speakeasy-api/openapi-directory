// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SigningAlgorithmSpecEnum string

const (
	SigningAlgorithmSpecEnumRsassaPssSha256      SigningAlgorithmSpecEnum = "RSASSA_PSS_SHA_256"
	SigningAlgorithmSpecEnumRsassaPssSha384      SigningAlgorithmSpecEnum = "RSASSA_PSS_SHA_384"
	SigningAlgorithmSpecEnumRsassaPssSha512      SigningAlgorithmSpecEnum = "RSASSA_PSS_SHA_512"
	SigningAlgorithmSpecEnumRsassaPkcs1V15Sha256 SigningAlgorithmSpecEnum = "RSASSA_PKCS1_V1_5_SHA_256"
	SigningAlgorithmSpecEnumRsassaPkcs1V15Sha384 SigningAlgorithmSpecEnum = "RSASSA_PKCS1_V1_5_SHA_384"
	SigningAlgorithmSpecEnumRsassaPkcs1V15Sha512 SigningAlgorithmSpecEnum = "RSASSA_PKCS1_V1_5_SHA_512"
	SigningAlgorithmSpecEnumEcdsaSha256          SigningAlgorithmSpecEnum = "ECDSA_SHA_256"
	SigningAlgorithmSpecEnumEcdsaSha384          SigningAlgorithmSpecEnum = "ECDSA_SHA_384"
	SigningAlgorithmSpecEnumEcdsaSha512          SigningAlgorithmSpecEnum = "ECDSA_SHA_512"
	SigningAlgorithmSpecEnumSm2Dsa               SigningAlgorithmSpecEnum = "SM2DSA"
)

func (e SigningAlgorithmSpecEnum) ToPointer() *SigningAlgorithmSpecEnum {
	return &e
}

func (e *SigningAlgorithmSpecEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RSASSA_PSS_SHA_256":
		fallthrough
	case "RSASSA_PSS_SHA_384":
		fallthrough
	case "RSASSA_PSS_SHA_512":
		fallthrough
	case "RSASSA_PKCS1_V1_5_SHA_256":
		fallthrough
	case "RSASSA_PKCS1_V1_5_SHA_384":
		fallthrough
	case "RSASSA_PKCS1_V1_5_SHA_512":
		fallthrough
	case "ECDSA_SHA_256":
		fallthrough
	case "ECDSA_SHA_384":
		fallthrough
	case "ECDSA_SHA_512":
		fallthrough
	case "SM2DSA":
		*e = SigningAlgorithmSpecEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SigningAlgorithmSpecEnum: %v", v)
	}
}
