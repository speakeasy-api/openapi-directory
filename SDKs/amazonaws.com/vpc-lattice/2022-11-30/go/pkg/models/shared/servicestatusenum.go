// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServiceStatusEnum string

const (
	ServiceStatusEnumActive           ServiceStatusEnum = "ACTIVE"
	ServiceStatusEnumCreateInProgress ServiceStatusEnum = "CREATE_IN_PROGRESS"
	ServiceStatusEnumDeleteInProgress ServiceStatusEnum = "DELETE_IN_PROGRESS"
	ServiceStatusEnumCreateFailed     ServiceStatusEnum = "CREATE_FAILED"
	ServiceStatusEnumDeleteFailed     ServiceStatusEnum = "DELETE_FAILED"
)

func (e ServiceStatusEnum) ToPointer() *ServiceStatusEnum {
	return &e
}

func (e *ServiceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "DELETE_IN_PROGRESS":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "DELETE_FAILED":
		*e = ServiceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceStatusEnum: %v", v)
	}
}
