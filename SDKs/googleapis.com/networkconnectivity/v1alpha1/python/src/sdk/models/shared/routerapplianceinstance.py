"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RouterApplianceInstance:
    r"""RouterAppliance represents a Router appliance which is specified by a VM URI and a NIC address."""
    
    ip_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipAddress'), 'exclude': lambda f: f is None }})
    r"""The IP address of the network interface to use for peering."""  
    network_interface: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkInterface'), 'exclude': lambda f: f is None }})  
    virtual_machine: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtualMachine'), 'exclude': lambda f: f is None }})
    r"""The URI of the virtual machine resource"""  
    