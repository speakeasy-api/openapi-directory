"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PatchJobInstanceDetailsStateEnum(str, Enum):
    r"""Current state of instance patch."""
    PATCH_STATE_UNSPECIFIED = 'PATCH_STATE_UNSPECIFIED'
    PENDING = 'PENDING'
    INACTIVE = 'INACTIVE'
    NOTIFIED = 'NOTIFIED'
    STARTED = 'STARTED'
    DOWNLOADING_PATCHES = 'DOWNLOADING_PATCHES'
    APPLYING_PATCHES = 'APPLYING_PATCHES'
    REBOOTING = 'REBOOTING'
    SUCCEEDED = 'SUCCEEDED'
    SUCCEEDED_REBOOT_REQUIRED = 'SUCCEEDED_REBOOT_REQUIRED'
    FAILED = 'FAILED'
    ACKED = 'ACKED'
    TIMED_OUT = 'TIMED_OUT'
    RUNNING_PRE_PATCH_STEP = 'RUNNING_PRE_PATCH_STEP'
    RUNNING_POST_PATCH_STEP = 'RUNNING_POST_PATCH_STEP'
    NO_AGENT_DETECTED = 'NO_AGENT_DETECTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchJobInstanceDetails:
    r"""Patch details for a VM instance. For more information about reviewing VM instance details, see [Listing all VM instance details for a specific patch job](https://cloud.google.com/compute/docs/os-patch-management/manage-patch-jobs#list-instance-details)."""
    
    attempt_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attemptCount'), 'exclude': lambda f: f is None }})
    r"""The number of times the agent that the agent attempts to apply the patch."""  
    failure_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureReason'), 'exclude': lambda f: f is None }})
    r"""If the patch fails, this field provides the reason."""  
    instance_system_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceSystemId'), 'exclude': lambda f: f is None }})
    r"""The unique identifier for the instance. This identifier is defined by the server."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The instance name in the form `projects/*/zones/*/instances/*`"""  
    state: Optional[PatchJobInstanceDetailsStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Current state of instance patch."""  
    