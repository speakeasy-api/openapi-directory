/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PurchaseInvoiceInvoiceLine {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accounting")public PurchaseInvoiceAccountingDetails accounting;
    public PurchaseInvoiceInvoiceLine withAccounting(PurchaseInvoiceAccountingDetails accounting) {
        this.accounting = accounting;
        return this;
    }
    
    /**
     * DEPRECATED - use allowance_charges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowance_charge")public Double allowanceCharge;
    public PurchaseInvoiceInvoiceLine withAllowanceCharge(Double allowanceCharge) {
        this.allowanceCharge = allowanceCharge;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowance_charge_array")public PurchaseInvoiceInvoiceLineAllowanceCharge[] allowanceChargeArray;
    public PurchaseInvoiceInvoiceLine withAllowanceChargeArray(PurchaseInvoiceInvoiceLineAllowanceCharge[] allowanceChargeArray) {
        this.allowanceChargeArray = allowanceChargeArray;
        return this;
    }
    
    /**
     * Deprecated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowance_charges")public Double[] allowanceCharges;
    public PurchaseInvoiceInvoiceLine withAllowanceCharges(Double[] allowanceCharges) {
        this.allowanceCharges = allowanceCharges;
        return this;
    }
    
    /**
     * The amount excluding Tax. This is equal to quantity x price_amount + \u2211 allowance_charges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount_excluding_tax")public Double amountExcludingTax;
    public PurchaseInvoiceInvoiceLine withAmountExcludingTax(Double amountExcludingTax) {
        this.amountExcludingTax = amountExcludingTax;
        return this;
    }
    
    /**
     * DEPRECATED - use amount_excluding_tax. The amount excluding VAT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount_excluding_vat")public Double amountExcludingVat;
    public PurchaseInvoiceInvoiceLine withAmountExcludingVat(Double amountExcludingVat) {
        this.amountExcludingVat = amountExcludingVat;
        return this;
    }
    
    /**
     * The description for the invoice line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")public String description;
    public PurchaseInvoiceInvoiceLine withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A short name for the invoice line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")public String name;
    public PurchaseInvoiceInvoiceLine withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The end date of the period this invoice line relates to. Format "YYYY-MM-DD".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("period_end")public String periodEnd;
    public PurchaseInvoiceInvoiceLine withPeriodEnd(String periodEnd) {
        this.periodEnd = periodEnd;
        return this;
    }
    
    /**
     * The start date of the period this invoice line relates to. Format "YYYY-MM-DD".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("period_start")public String periodStart;
    public PurchaseInvoiceInvoiceLine withPeriodStart(String periodStart) {
        this.periodStart = periodStart;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")public PurchaseInvoiceInvoiceLinePrice price;
    public PurchaseInvoiceInvoiceLine withPrice(PurchaseInvoiceInvoiceLinePrice price) {
        this.price = price;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax")public PurchaseInvoiceTax tax;
    public PurchaseInvoiceInvoiceLine withTax(PurchaseInvoiceTax tax) {
        this.tax = tax;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("units")public PurchaseInvoiceInvoiceLineItem units;
    public PurchaseInvoiceInvoiceLine withUnits(PurchaseInvoiceInvoiceLineItem units) {
        this.units = units;
        return this;
    }
    
    /**
     * DEPRECATED - use tax. The VAT details for the invoice line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vat")public PurchaseInvoiceInvoiceLineVATDetails vat;
    public PurchaseInvoiceInvoiceLine withVat(PurchaseInvoiceInvoiceLineVATDetails vat) {
        this.vat = vat;
        return this;
    }
    
}
