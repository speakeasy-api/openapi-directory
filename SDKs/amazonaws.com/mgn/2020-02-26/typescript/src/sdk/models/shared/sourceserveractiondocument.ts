/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ActionCategoryEnum } from "./actioncategoryenum";
import { SsmExternalParameter } from "./ssmexternalparameter";
import { SsmParameterStoreParameter } from "./ssmparameterstoreparameter";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class SourceServerActionDocument extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "actionID" })
  actionID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "actionName" })
  actionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: ActionCategoryEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "documentIdentifier" })
  documentIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "documentVersion" })
  documentVersion?: string;

  @SpeakeasyMetadata({ elemType: SsmExternalParameter })
  @Expose({ name: "externalParameters" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, SsmExternalParameter> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], SsmExternalParameter);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  externalParameters?: Record<string, SsmExternalParameter>;

  @SpeakeasyMetadata()
  @Expose({ name: "mustSucceedForCutover" })
  mustSucceedForCutover?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: number;

  @SpeakeasyMetadata({ elemType: SsmParameterStoreParameter, elemDepth: 2 })
  @Expose({ name: "parameters" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, SsmParameterStoreParameter[]> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], SsmParameterStoreParameter);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  parameters?: Record<string, SsmParameterStoreParameter[]>;

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutSeconds" })
  timeoutSeconds?: number;
}
