/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RBACRoleBindingLifecycleState } from "./rbacrolebindinglifecyclestate";
import { Role } from "./role";
import { Expose, Type } from "class-transformer";

/**
 * RBACRoleBinding represents a rbacrolebinding across the Fleet
 */
export class RBACRoleBinding extends SpeakeasyBase {
  /**
   * Output only. When the rbacrolebinding was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. When the rbacrolebinding was deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleteTime" })
  deleteTime?: string;

  /**
   * group is the group, as seen by the kubernetes cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group?: string;

  /**
   * The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Role is the type for Kubernetes roles
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  @Type(() => Role)
  role?: Role;

  /**
   * RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(() => RBACRoleBindingLifecycleState)
  state?: RBACRoleBindingLifecycleState;

  /**
   * Output only. Google-generated UUID for this resource. This is unique across all rbacrolebinding resources. If a rbacrolebinding resource is deleted and another resource with the same name is created, it gets a different uid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  /**
   * Output only. When the rbacrolebinding was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * user is the name of the user as seen by the kubernetes cluster, example "alice" or "alice@domain.tld"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}

/**
 * RBACRoleBinding represents a rbacrolebinding across the Fleet
 */
export class RBACRoleBindingInput extends SpeakeasyBase {
  /**
   * group is the group, as seen by the kubernetes cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group?: string;

  /**
   * The resource name for the rbacrolebinding `projects/{project}/locations/{location}/namespaces/{namespace}/rbacrolebindings/{rbacrolebinding}` or `projects/{project}/locations/{location}/memberships/{membership}/rbacrolebindings/{rbacrolebinding}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Role is the type for Kubernetes roles
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  @Type(() => Role)
  role?: Role;

  /**
   * user is the name of the user as seen by the kubernetes cluster, example "alice" or "alice@domain.tld"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}
