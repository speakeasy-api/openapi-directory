<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDialogflowCxV3beta1ImportFlowRequest - The request message for Flows.ImportFlow.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDialogflowCxV3beta1ImportFlowRequest
{
    /**
     * Uncompressed raw byte content for flow.
     * 
     * @var ?string $flowContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('flowContent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $flowContent = null;
    
    /**
     * The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import flow from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
     * 
     * @var ?string $flowUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('flowUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $flowUri = null;
    
    /**
     * Flow import mode. If not specified, `KEEP` is assumed.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDialogflowCxV3beta1ImportFlowRequestImportOptionEnum $importOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('importOption')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudDialogflowCxV3beta1ImportFlowRequestImportOptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDialogflowCxV3beta1ImportFlowRequestImportOptionEnum $importOption = null;
    
	public function __construct()
	{
		$this->flowContent = null;
		$this->flowUri = null;
		$this->importOption = null;
	}
}
