<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class AvailableVendorsFilter
{
    /**
     * Corporate account ID to filter for vendor authorization
     * 
     * @var ?float $corporateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('corporateId')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $corporateId = null;
    
    /**
     * Filter vendors for manual work permission
     * 
     * @var ?bool $manualWorkPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('manualWorkPermission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $manualWorkPermission = null;
    
    /**
     * Source language code
     * 
     * @var ?string $sourceLanguage
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceLanguage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceLanguage = null;
    
    /**
     * List of target language codes.
     * 
     * @var ?array<string> $targetLanguages
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetLanguages')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $targetLanguages = null;
    
    /**
     * List of vendor types
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AvailableVendorsFilterTypesEnum> $types
     */
	#[\JMS\Serializer\Annotation\SerializedName('types')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\AvailableVendorsFilterTypesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $types = null;
    
	public function __construct()
	{
		$this->corporateId = null;
		$this->manualWorkPermission = null;
		$this->sourceLanguage = null;
		$this->targetLanguages = null;
		$this->types = null;
	}
}
