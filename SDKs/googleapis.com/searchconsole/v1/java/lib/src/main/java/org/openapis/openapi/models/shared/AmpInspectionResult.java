/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AmpInspectionResult - AMP inspection result of the live page or the current information from Google's index, depending on whether you requested a live inspection or not.
 */
public class AmpInspectionResult {
    /**
     * Index status of the AMP URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ampIndexStatusVerdict")
    public AmpInspectionResultAmpIndexStatusVerdictEnum ampIndexStatusVerdict;
    public AmpInspectionResult withAmpIndexStatusVerdict(AmpInspectionResultAmpIndexStatusVerdictEnum ampIndexStatusVerdict) {
        this.ampIndexStatusVerdict = ampIndexStatusVerdict;
        return this;
    }
    
    /**
     * URL of the AMP that was inspected. If the submitted URL is a desktop page that refers to an AMP version, the AMP version will be inspected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ampUrl")
    public String ampUrl;
    public AmpInspectionResult withAmpUrl(String ampUrl) {
        this.ampUrl = ampUrl;
        return this;
    }
    
    /**
     * Whether or not the page blocks indexing through a noindex rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indexingState")
    public AmpInspectionResultIndexingStateEnum indexingState;
    public AmpInspectionResult withIndexingState(AmpInspectionResultIndexingStateEnum indexingState) {
        this.indexingState = indexingState;
        return this;
    }
    
    /**
     * A list of zero or more AMP issues found for the inspected URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issues")
    public AmpIssue[] issues;
    public AmpInspectionResult withIssues(AmpIssue[] issues) {
        this.issues = issues;
        return this;
    }
    
    /**
     * Last time this AMP version was crawled by Google. Absent if the URL was never crawled successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastCrawlTime")
    public String lastCrawlTime;
    public AmpInspectionResult withLastCrawlTime(String lastCrawlTime) {
        this.lastCrawlTime = lastCrawlTime;
        return this;
    }
    
    /**
     * Whether or not Google could fetch the AMP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageFetchState")
    public AmpInspectionResultPageFetchStateEnum pageFetchState;
    public AmpInspectionResult withPageFetchState(AmpInspectionResultPageFetchStateEnum pageFetchState) {
        this.pageFetchState = pageFetchState;
        return this;
    }
    
    /**
     * Whether or not the page is blocked to Google by a robots.txt rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("robotsTxtState")
    public AmpInspectionResultRobotsTxtStateEnum robotsTxtState;
    public AmpInspectionResult withRobotsTxtState(AmpInspectionResultRobotsTxtStateEnum robotsTxtState) {
        this.robotsTxtState = robotsTxtState;
        return this;
    }
    
    /**
     * The status of the most severe error on the page. If a page has both warnings and errors, the page status is error. Error status means the page cannot be shown in Search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verdict")
    public AmpInspectionResultVerdictEnum verdict;
    public AmpInspectionResult withVerdict(AmpInspectionResultVerdictEnum verdict) {
        this.verdict = verdict;
        return this;
    }
    
}
