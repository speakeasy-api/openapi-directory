/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Report - A DoubleClick Search report. This object contains the report request, some report metadata such as currency code, and the generated report rows or report files.
 */
public class Report {
    /**
     * Asynchronous report only. Contains a list of generated report files once the report has successfully completed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("files")
    public ReportFiles[] files;
    public Report withFiles(ReportFiles[] files) {
        this.files = files;
        return this;
    }
    
    /**
     * Asynchronous report only. Id of the report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Report withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Asynchronous report only. True if and only if the report has completed successfully and the report files are ready to be downloaded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isReportReady")
    public Boolean isReportReady;
    public Report withIsReportReady(Boolean isReportReady) {
        this.isReportReady = isReportReady;
        return this;
    }
    
    /**
     * Identifies this as a Report resource. Value: the fixed string `doubleclicksearch#report`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Report withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * A request object used to create a DoubleClick Search report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("request")
    public ReportRequest request;
    public Report withRequest(ReportRequest request) {
        this.request = request;
        return this;
    }
    
    /**
     * The number of report rows generated by the report, not including headers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rowCount")
    public Integer rowCount;
    public Report withRowCount(Integer rowCount) {
        this.rowCount = rowCount;
        return this;
    }
    
    /**
     * Synchronous report only. Generated report rows.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public java.util.Map<String, Object>[] rows;
    public Report withRows(java.util.Map<String, Object>[] rows) {
        this.rows = rows;
        return this;
    }
    
    /**
     * The currency code of all monetary values produced in the report, including values that are set by users (e.g., keyword bid settings) and metrics (e.g., cost and revenue). The currency code of a report is determined by the `statisticsCurrency` field of the report request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statisticsCurrencyCode")
    public String statisticsCurrencyCode;
    public Report withStatisticsCurrencyCode(String statisticsCurrencyCode) {
        this.statisticsCurrencyCode = statisticsCurrencyCode;
        return this;
    }
    
    /**
     * If all statistics of the report are sourced from the same time zone, this would be it. Otherwise the field is unset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statisticsTimeZone")
    public String statisticsTimeZone;
    public Report withStatisticsTimeZone(String statisticsTimeZone) {
        this.statisticsTimeZone = statisticsTimeZone;
        return this;
    }
    
}
