/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Debug {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Debug(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Checks whether an item is accessible by specified principal. Principal must be a user; groups and domain values aren't supported. **Note:** This API requires an admin account to execute.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsCheckAccessResponse cloudsearchDebugDatasourcesItemsCheckAccess(org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsCheckAccessRequest request, org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsCheckAccessSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsCheckAccessRequest.class, baseUrl, "/v1/debug/{name}:checkAccess", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "principal", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsCheckAccessRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsCheckAccessResponse res = new org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsCheckAccessResponse(contentType, httpRes.statusCode()) {{
            checkAccessResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.CheckAccessResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.CheckAccessResponse.class);
                res.checkAccessResponse = out;
            }
        }

        return res;
    }

    /**
     * Fetches the item whose viewUrl exactly matches that of the URL provided in the request. **Note:** This API requires an admin account to execute.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsSearchByViewUrlResponse cloudsearchDebugDatasourcesItemsSearchByViewUrl(org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsSearchByViewUrlRequest request, org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsSearchByViewUrlSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsSearchByViewUrlRequest.class, baseUrl, "/v1/debug/{name}/items:searchByViewUrl", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "searchItemsByViewUrlRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsSearchByViewUrlRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsSearchByViewUrlResponse res = new org.openapis.openapi.models.operations.CloudsearchDebugDatasourcesItemsSearchByViewUrlResponse(contentType, httpRes.statusCode()) {{
            searchItemsByViewUrlResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.SearchItemsByViewUrlResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.SearchItemsByViewUrlResponse.class);
                res.searchItemsByViewUrlResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists names of items associated with an unmapped identity. **Note:** This API requires an admin account to execute.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesItemsListForunmappedidentityResponse cloudsearchDebugIdentitysourcesItemsListForunmappedidentity(org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesItemsListForunmappedidentityRequest request, org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesItemsListForunmappedidentitySecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesItemsListForunmappedidentityRequest.class, baseUrl, "/v1/debug/{parent}/items:forunmappedidentity", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesItemsListForunmappedidentityRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesItemsListForunmappedidentityResponse res = new org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesItemsListForunmappedidentityResponse(contentType, httpRes.statusCode()) {{
            listItemNamesForUnmappedIdentityResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListItemNamesForUnmappedIdentityResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListItemNamesForUnmappedIdentityResponse.class);
                res.listItemNamesForUnmappedIdentityResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists unmapped user identities for an identity source. **Note:** This API requires an admin account to execute.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesUnmappedidsListResponse cloudsearchDebugIdentitysourcesUnmappedidsList(org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesUnmappedidsListRequest request, org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesUnmappedidsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesUnmappedidsListRequest.class, baseUrl, "/v1/debug/{parent}/unmappedids", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesUnmappedidsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesUnmappedidsListResponse res = new org.openapis.openapi.models.operations.CloudsearchDebugIdentitysourcesUnmappedidsListResponse(contentType, httpRes.statusCode()) {{
            listUnmappedIdentitiesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListUnmappedIdentitiesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListUnmappedIdentitiesResponse.class);
                res.listUnmappedIdentitiesResponse = out;
            }
        }

        return res;
    }
}