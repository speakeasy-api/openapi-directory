"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gradecategory as shared_gradecategory
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GradebookSettingsCalculationTypeEnum(str, Enum):
    r"""Indicates how the overall grade is calculated."""
    CALCULATION_TYPE_UNSPECIFIED = 'CALCULATION_TYPE_UNSPECIFIED'
    TOTAL_POINTS = 'TOTAL_POINTS'
    WEIGHTED_CATEGORIES = 'WEIGHTED_CATEGORIES'

class GradebookSettingsDisplaySettingEnum(str, Enum):
    r"""Indicates who can see the overall grade.."""
    DISPLAY_SETTING_UNSPECIFIED = 'DISPLAY_SETTING_UNSPECIFIED'
    SHOW_OVERALL_GRADE = 'SHOW_OVERALL_GRADE'
    HIDE_OVERALL_GRADE = 'HIDE_OVERALL_GRADE'
    SHOW_TEACHERS_ONLY = 'SHOW_TEACHERS_ONLY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GradebookSettings:
    r"""The gradebook settings for a course. See the [help center article](https://support.google.com/edu/classroom/answer/9184995) for details."""
    
    calculation_type: Optional[GradebookSettingsCalculationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calculationType'), 'exclude': lambda f: f is None }})
    r"""Indicates how the overall grade is calculated."""  
    display_setting: Optional[GradebookSettingsDisplaySettingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displaySetting'), 'exclude': lambda f: f is None }})
    r"""Indicates who can see the overall grade.."""  
    grade_categories: Optional[list[shared_gradecategory.GradeCategory]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gradeCategories'), 'exclude': lambda f: f is None }})
    r"""Grade categories that are available for coursework in the course."""  
    