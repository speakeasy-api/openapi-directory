/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict } from "./googlecloudrecaptchaenterprisev1fraudpreventionassessmentcardtestingverdict";
import { GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict } from "./googlecloudrecaptchaenterprisev1fraudpreventionassessmentstoleninstrumentverdict";
import { Expose, Type } from "class-transformer";

/**
 * Assessment for Fraud Prevention.
 */
export class GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessment extends SpeakeasyBase {
  /**
   * Information about card testing fraud, where an adversary is testing fraudulently obtained cards or brute forcing their details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cardTestingVerdict" })
  @Type(
    () =>
      GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict
  )
  cardTestingVerdict?: GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentCardTestingVerdict;

  /**
   * Information about stolen instrument fraud, where the user is not the legitimate owner of the instrument being used for the purchase.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stolenInstrumentVerdict" })
  @Type(
    () =>
      GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict
  )
  stolenInstrumentVerdict?: GoogleCloudRecaptchaenterpriseV1FraudPreventionAssessmentStolenInstrumentVerdict;

  /**
   * Probability (0-1) of this transaction being fraudulent. Summarizes the combined risk of attack vectors below.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transactionRisk" })
  transactionRisk?: number;
}
