// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetRepositoriesWorkspaceRepoSlugMergeBaseRevspecSecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

type GetRepositoriesWorkspaceRepoSlugMergeBaseRevspecPathParams struct {
	// This can either be the repository slug or the UUID of the repository,
	// surrounded by curly-braces, for example: `{repository UUID}`.
	//
	RepoSlug string `pathParam:"style=simple,explode=false,name=repo_slug"`
	// A commit range using double dot notation (e.g. `3a8b42..9ff173`).
	//
	Revspec string `pathParam:"style=simple,explode=false,name=revspec"`
	// This can either be the workspace ID (slug) or the workspace UUID
	// surrounded by curly-braces, for example: `{workspace UUID}`.
	//
	Workspace string `pathParam:"style=simple,explode=false,name=workspace"`
}

type GetRepositoriesWorkspaceRepoSlugMergeBaseRevspecRequest struct {
	PathParams GetRepositoriesWorkspaceRepoSlugMergeBaseRevspecPathParams
	Security   GetRepositoriesWorkspaceRepoSlugMergeBaseRevspecSecurity
}

type GetRepositoriesWorkspaceRepoSlugMergeBaseRevspecResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The merge base of the provided spec.
	Commit map[string]interface{}
	// If the request was not authenticated.
	Error map[string]interface{}
}
