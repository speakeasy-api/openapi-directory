"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import error as shared_error
from ..shared import loyaltyaccount as shared_loyaltyaccount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchLoyaltyAccountsResponse:
    r"""A response that includes loyalty accounts that satisfy the search criteria."""
    
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cursor'), 'exclude': lambda f: f is None }})
    r"""The pagination cursor to use in a subsequent
    request. If empty, this is the final response.
    For more information, 
    see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
    """  
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""Any errors that occurred during the request."""  
    loyalty_accounts: Optional[list[shared_loyaltyaccount.LoyaltyAccount]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loyalty_accounts'), 'exclude': lambda f: f is None }})
    r"""The loyalty accounts that met the search criteria,
    in order of creation date.
    """  
    