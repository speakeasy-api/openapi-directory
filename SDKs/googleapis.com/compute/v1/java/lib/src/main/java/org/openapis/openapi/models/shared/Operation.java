/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Operation - Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/v1/globalOperations) * [Regional](/compute/docs/reference/rest/v1/regionOperations) * [Zonal](/compute/docs/reference/rest/v1/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources.
 */
public class Operation {
    /**
     * [Output Only] The value of `requestId` if you provided it in the request. Not present otherwise.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientOperationId")
    public String clientOperationId;
    public Operation withClientOperationId(String clientOperationId) {
        this.clientOperationId = clientOperationId;
        return this;
    }
    
    /**
     * [Deprecated] This field is deprecated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public Operation withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * [Output Only] A textual description of the operation, which is set when the operation is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Operation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] The time that this operation was completed. This value is in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;
    public Operation withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * [Output Only] If errors are generated during processing of the operation, this field will be populated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public OperationError error;
    public Operation withError(OperationError error) {
        this.error = error;
        return this;
    }
    
    /**
     * [Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpErrorMessage")
    public String httpErrorMessage;
    public Operation withHttpErrorMessage(String httpErrorMessage) {
        this.httpErrorMessage = httpErrorMessage;
        return this;
    }
    
    /**
     * [Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpErrorStatusCode")
    public Integer httpErrorStatusCode;
    public Operation withHttpErrorStatusCode(Integer httpErrorStatusCode) {
        this.httpErrorStatusCode = httpErrorStatusCode;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the operation. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Operation withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] The time that this operation was requested. This value is in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insertTime")
    public String insertTime;
    public Operation withInsertTime(String insertTime) {
        this.insertTime = insertTime;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always `compute#operation` for Operation resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Operation withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * [Output Only] Name of the operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Operation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationGroupId")
    public String operationGroupId;
    public Operation withOperationGroupId(String operationGroupId) {
        this.operationGroupId = operationGroupId;
        return this;
    }
    
    /**
     * [Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationType")
    public String operationType;
    public Operation withOperationType(String operationType) {
        this.operationType = operationType;
        return this;
    }
    
    /**
     * [Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("progress")
    public Integer progress;
    public Operation withProgress(Integer progress) {
        this.progress = progress;
        return this;
    }
    
    /**
     * [Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;
    public Operation withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public Operation withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] The time that this operation was started by the server. This value is in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;
    public Operation withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public OperationStatusEnum status;
    public Operation withStatus(OperationStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * [Output Only] An optional textual description of the current status of the operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusMessage")
    public String statusMessage;
    public Operation withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    /**
     * [Output Only] The unique target ID, which identifies a specific incarnation of the target resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetId")
    public String targetId;
    public Operation withTargetId(String targetId) {
        this.targetId = targetId;
        return this;
    }
    
    /**
     * [Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetLink")
    public String targetLink;
    public Operation withTargetLink(String targetLink) {
        this.targetLink = targetLink;
        return this;
    }
    
    /**
     * [Output Only] User who requested the operation, for example: `user@example.com`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public String user;
    public Operation withUser(String user) {
        this.user = user;
        return this;
    }
    
    /**
     * [Output Only] If warning messages are generated during processing of the operation, this field will be populated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warnings")
    public OperationWarnings[] warnings;
    public Operation withWarnings(OperationWarnings[] warnings) {
        this.warnings = warnings;
        return this;
    }
    
    /**
     * [Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public Operation withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
