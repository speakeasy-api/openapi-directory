// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ClusterStateEnum string

const (
	ClusterStateEnumCreateInProgress     ClusterStateEnum = "CREATE_IN_PROGRESS"
	ClusterStateEnumUninitialized        ClusterStateEnum = "UNINITIALIZED"
	ClusterStateEnumInitializeInProgress ClusterStateEnum = "INITIALIZE_IN_PROGRESS"
	ClusterStateEnumInitialized          ClusterStateEnum = "INITIALIZED"
	ClusterStateEnumActive               ClusterStateEnum = "ACTIVE"
	ClusterStateEnumUpdateInProgress     ClusterStateEnum = "UPDATE_IN_PROGRESS"
	ClusterStateEnumDeleteInProgress     ClusterStateEnum = "DELETE_IN_PROGRESS"
	ClusterStateEnumDeleted              ClusterStateEnum = "DELETED"
	ClusterStateEnumDegraded             ClusterStateEnum = "DEGRADED"
)

func (e *ClusterStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "UNINITIALIZED":
		fallthrough
	case "INITIALIZE_IN_PROGRESS":
		fallthrough
	case "INITIALIZED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "UPDATE_IN_PROGRESS":
		fallthrough
	case "DELETE_IN_PROGRESS":
		fallthrough
	case "DELETED":
		fallthrough
	case "DEGRADED":
		*e = ClusterStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterStateEnum: %s", s)
	}
}
