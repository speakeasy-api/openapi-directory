/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * [Output Only] The status of the sub public delegated prefix.
 */
export enum PublicDelegatedPrefixPublicDelegatedSubPrefixStatusEnum {
  Active = "ACTIVE",
  Inactive = "INACTIVE",
}

/**
 * Represents a sub PublicDelegatedPrefix.
 */
export class PublicDelegatedPrefixPublicDelegatedSubPrefix extends SpeakeasyBase {
  /**
   * Name of the project scoping this PublicDelegatedSubPrefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delegateeProject" })
  delegateeProject?: string;

  /**
   * An optional description of this resource. Provide this property when you create the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The IPv4 address range, in CIDR format, represented by this sub public delegated prefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipCidrRange" })
  ipCidrRange?: string;

  /**
   * Whether the sub prefix is delegated to create Address resources in the delegatee project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isAddress" })
  isAddress?: boolean;

  /**
   * The name of the sub public delegated prefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * [Output Only] The region of the sub public delegated prefix if it is regional. If absent, the sub prefix is global.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * [Output Only] The status of the sub public delegated prefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: PublicDelegatedPrefixPublicDelegatedSubPrefixStatusEnum;
}
