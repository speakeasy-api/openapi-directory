/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IdentityVerificationRetryRequest - Request input for retrying an identity verification attempt
 */
public class IdentityVerificationRetryRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;
    public IdentityVerificationRetryRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * An identifier to help you connect this object to your internal systems. For example, your database ID corresponding to this object.
     */
    @JsonProperty("client_user_id")
    public String clientUserId;
    public IdentityVerificationRetryRequest withClientUserId(String clientUserId) {
        this.clientUserId = clientUserId;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;
    public IdentityVerificationRetryRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * Instructions for the `custom` retry strategy specifying which steps should be required or skipped.
     * 
     * 
     * Note:
     * 
     * 
     * This field must be provided when the retry strategy is `custom` and must be omitted otherwise.
     * 
     * Custom retries override settings in your Plaid Template. For example, if your Plaid Template has `verify_sms` disabled, a custom retry with `verify_sms` enabled will still require the step.
     * 
     * The `selfie_check` step is currently not supported on the sandbox server. Sandbox requests will silently disable the `selfie_check` step when provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("steps")
    public IdentityVerificationRetryRequestStepsObject steps;
    public IdentityVerificationRetryRequest withSteps(IdentityVerificationRetryRequestStepsObject steps) {
        this.steps = steps;
        return this;
    }
    
    /**
     * An instruction specifying what steps the new Identity Verification attempt should require the user to complete:
     * 
     * 
     * `reset` - Restart the user at the beginning of the session, regardless of whether they successfully completed part of their previous session.
     * 
     * `incomplete` - Start the new session at the step that the user failed in the previous session, skipping steps that have already been successfully completed.
     * 
     * `infer` - If the most recent Identity Verification attempt associated with the given `client_user_id` has a status of `failed` or `expired`, retry using the `incomplete` strategy. Otherwise, use the `reset` strategy.
     * 
     * `custom` - Start the new session with a custom configuration, specified by the value of the `steps` field
     * 
     * Note:
     * 
     * The `incomplete` strategy cannot be applied if the session's failing step is `screening` or `risk_check`.
     * 
     * The `infer` strategy cannot be applied if the session's status is still `active`
     */
    @JsonProperty("strategy")
    public StrategyEnum strategy;
    public IdentityVerificationRetryRequest withStrategy(StrategyEnum strategy) {
        this.strategy = strategy;
        return this;
    }
    
    /**
     * ID of the associated Identity Verification template.
     */
    @JsonProperty("template_id")
    public String templateId;
    public IdentityVerificationRetryRequest withTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }
    
}
