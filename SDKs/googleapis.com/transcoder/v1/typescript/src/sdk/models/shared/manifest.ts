/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Required. Type of the manifest, can be `HLS` or `DASH`.
 */
export enum ManifestTypeEnum {
  ManifestTypeUnspecified = "MANIFEST_TYPE_UNSPECIFIED",
  Hls = "HLS",
  Dash = "DASH",
}

/**
 * Manifest configuration.
 */
export class Manifest extends SpeakeasyBase {
  /**
   * The name of the generated file. The default is `manifest` with the extension suffix corresponding to the `Manifest.type`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileName" })
  fileName?: string;

  /**
   * Required. List of user given `MuxStream.key`s that should appear in this manifest. When `Manifest.type` is `HLS`, a media manifest with name `MuxStream.key` and `.m3u8` extension is generated for each element of the `Manifest.mux_streams`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "muxStreams" })
  muxStreams?: string[];

  /**
   * Required. Type of the manifest, can be `HLS` or `DASH`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ManifestTypeEnum;
}
