/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MigratingVmInput - MigratingVm describes the VM that will be migrated from a Source environment and its replication state.
 */
public class MigratingVmInput {
    /**
     * Represent the source AWS VM details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awsSourceVmDetails")
    public AwsSourceVmDetails awsSourceVmDetails;
    public MigratingVmInput withAwsSourceVmDetails(AwsSourceVmDetails awsSourceVmDetails) {
        this.awsSourceVmDetails = awsSourceVmDetails;
        return this;
    }
    
    /**
     * ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeEngineTargetDefaults")
    public ComputeEngineTargetDefaultsInput computeEngineTargetDefaults;
    public MigratingVmInput withComputeEngineTargetDefaults(ComputeEngineTargetDefaultsInput computeEngineTargetDefaults) {
        this.computeEngineTargetDefaults = computeEngineTargetDefaults;
        return this;
    }
    
    /**
     * TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeEngineVmDefaults")
    public TargetVMDetailsInput computeEngineVmDefaults;
    public MigratingVmInput withComputeEngineVmDefaults(TargetVMDetailsInput computeEngineVmDefaults) {
        this.computeEngineVmDefaults = computeEngineVmDefaults;
        return this;
    }
    
    /**
     * ReplicationCycle contains information about the current replication cycle status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentSyncInfo")
    public ReplicationCycleInput currentSyncInfo;
    public MigratingVmInput withCurrentSyncInfo(ReplicationCycleInput currentSyncInfo) {
        this.currentSyncInfo = currentSyncInfo;
        return this;
    }
    
    /**
     * The description attached to the migrating VM by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public MigratingVmInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The display name attached to the MigratingVm by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public MigratingVmInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;
    public MigratingVmInput withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * The labels of the migrating VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public MigratingVmInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * ReplicationCycle contains information about the current replication cycle status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastReplicationCycle")
    public ReplicationCycleInput lastReplicationCycle;
    public MigratingVmInput withLastReplicationCycle(ReplicationCycleInput lastReplicationCycle) {
        this.lastReplicationCycle = lastReplicationCycle;
        return this;
    }
    
    /**
     * ReplicationSync contain information about the last replica sync to the cloud.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastSync")
    public ReplicationSync lastSync;
    public MigratingVmInput withLastSync(ReplicationSync lastSync) {
        this.lastSync = lastSync;
        return this;
    }
    
    /**
     * A policy for scheduling replications.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policy")
    public SchedulePolicy policy;
    public MigratingVmInput withPolicy(SchedulePolicy policy) {
        this.policy = policy;
        return this;
    }
    
    /**
     * The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceVmId")
    public String sourceVmId;
    public MigratingVmInput withSourceVmId(String sourceVmId) {
        this.sourceVmId = sourceVmId;
        return this;
    }
    
    /**
     * TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetDefaults")
    public TargetVMDetailsInput targetDefaults;
    public MigratingVmInput withTargetDefaults(TargetVMDetailsInput targetDefaults) {
        this.targetDefaults = targetDefaults;
        return this;
    }
    
}
