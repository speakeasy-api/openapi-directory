<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GETAmendmentType
{
    /**
     * Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. 
     * 
     * 
     * 
     * @var ?bool $autoRenew
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoRenew')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoRenew = null;
    
    /**
     * The rate plan ID on which changes are made. Only the Update or Remove amendment returns a base rate plan ID.
     * 
     * 
     * 
     * @var ?string $baseRatePlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('baseRatePlanId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $baseRatePlanId = null;
    
    /**
     * The ID of the subscription based on which the amendment is created.
     * 
     * 
     * 
     * @var ?string $baseSubscriptionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('baseSubscriptionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $baseSubscriptionId = null;
    
    /**
     * The amendment code.
     * 
     * 
     * 
     * @var ?string $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $code = null;
    
    /**
     * The date when the amendment becomes effective for billing purposes, as `yyyy-mm-dd`.
     * 
     * 
     * 
     * @var ?\DateTime $contractEffectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('contractEffectiveDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $contractEffectiveDate = null;
    
    /**
     * The length of the period for the current subscription term. 
     * 
     * 
     * 
     * @var ?int $currentTerm
     */
	#[\JMS\Serializer\Annotation\SerializedName('currentTerm')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $currentTerm = null;
    
    /**
     * The period type for the current subscription term.
     * 
     * Possible values are:
     * 
     * - Month
     * - Year
     * - Day
     * - Week
     * 
     * 
     * @var ?string $currentTermPeriodType
     */
	#[\JMS\Serializer\Annotation\SerializedName('currentTermPeriodType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currentTermPeriodType = null;
    
    /**
     * The date when the customer accepts the amendment changes to the subscription, as `yyyy-mm-dd`.
     * 
     * 
     * 
     * @var ?\DateTime $customerAcceptanceDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('customerAcceptanceDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $customerAcceptanceDate = null;
    
    /**
     * Description of the amendment.
     * 
     * 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The ID of the account that the subscription is being transferred to.
     * 
     * 
     * 
     * @var ?string $destinationAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationAccountId = null;
    
    /**
     * The ID of the invoice that the subscription is being transferred to.
     * 
     * 
     * 
     * @var ?string $destinationInvoiceOwnerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationInvoiceOwnerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationInvoiceOwnerId = null;
    
    /**
     * The date when the amendment changes take effective. 
     * 
     * 
     * 
     * @var ?\DateTime $effectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $effectiveDate = null;
    
    /**
     * The amendment ID.
     * 
     * 
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The name of the amendment.
     * 
     * 
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The ID of the rate plan charge on which amendment is made. Only the Add or Update amendment returns a new rate plan ID.
     * 
     * 
     * 
     * @var ?string $newRatePlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('newRatePlanId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $newRatePlanId = null;
    
    /**
     * The ID of the subscription that the amendment changes.
     * 
     * 
     * 
     * @var ?string $newSubscriptionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('newSubscriptionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $newSubscriptionId = null;
    
    /**
     * Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.
     * 
     * Possible values are:
     * 
     * - RENEW_WITH_SPECIFIC_TERM
     * - RENEW_TO_EVERGREEN
     * 
     * 
     * @var ?string $renewalSetting
     */
	#[\JMS\Serializer\Annotation\SerializedName('renewalSetting')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $renewalSetting = null;
    
    /**
     * The term of renewal for the amended subscription.
     * 
     * 
     * 
     * @var ?int $renewalTerm
     */
	#[\JMS\Serializer\Annotation\SerializedName('renewalTerm')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $renewalTerm = null;
    
    /**
     * The period type for the subscription renewal term.
     * 
     * Possible values are:
     * 
     * - Month
     * - Year
     * - Day
     * - Week
     * 
     * 
     * @var ?string $renewalTermPeriodType
     */
	#[\JMS\Serializer\Annotation\SerializedName('renewalTermPeriodType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $renewalTermPeriodType = null;
    
    /**
     * The date when the subscription resumption takes effect, as `yyyy-mm-dd`.
     * 
     * 
     * **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     * 
     * @var ?\DateTime $resumeDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('resumeDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $resumeDate = null;
    
    /**
     * The date when service is activated, as `yyyy-mm-dd`.
     * 
     * 
     * 
     * @var ?\DateTime $serviceActivationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceActivationDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $serviceActivationDate = null;
    
    /**
     * The date when the Update Product amendment takes effect. 
     * 
     * Only for the Update Product amendments if there is already a future-dated Update Product amendment on
     * the subscription.
     * 
     * 
     * @var ?\DateTime $specificUpdateDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('specificUpdateDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $specificUpdateDate = null;
    
    /**
     * The status of the amendment.
     * 
     * Possible values are:
     * 
     * - Draft 
     * - Pending Activation
     * - Pending Acceptance
     * - Completed
     * 
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     * 
     * 
     * @var ?bool $success
     */
	#[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $success = null;
    
    /**
     * The date when the subscription suspension takes effect, as `yyyy-mm-dd`.
     * 
     * 
     * **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     * 
     * @var ?\DateTime $suspendDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('suspendDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $suspendDate = null;
    
    /**
     * The date when the new terms and conditions take effect.
     * 
     * 
     * 
     * @var ?\DateTime $termStartDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('termStartDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $termStartDate = null;
    
    /**
     * Indicates if the subscription is `TERMED` or `EVERGREEN`.
     * 
     * 
     * 
     * @var ?string $termType
     */
	#[\JMS\Serializer\Annotation\SerializedName('termType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $termType = null;
    
    /**
     * Type of the amendment.
     * 
     * Possible values are:
     * 
     * - Cancellation
     * - NewProduct
     * - OwnerTransfer
     * - RemoveProduct
     * - Renewal
     * - UpdateProduct
     * - TermsAndConditions
     * 
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->autoRenew = null;
		$this->baseRatePlanId = null;
		$this->baseSubscriptionId = null;
		$this->code = null;
		$this->contractEffectiveDate = null;
		$this->currentTerm = null;
		$this->currentTermPeriodType = null;
		$this->customerAcceptanceDate = null;
		$this->description = null;
		$this->destinationAccountId = null;
		$this->destinationInvoiceOwnerId = null;
		$this->effectiveDate = null;
		$this->id = null;
		$this->name = null;
		$this->newRatePlanId = null;
		$this->newSubscriptionId = null;
		$this->renewalSetting = null;
		$this->renewalTerm = null;
		$this->renewalTermPeriodType = null;
		$this->resumeDate = null;
		$this->serviceActivationDate = null;
		$this->specificUpdateDate = null;
		$this->status = null;
		$this->success = null;
		$this->suspendDate = null;
		$this->termStartDate = null;
		$this->termType = null;
		$this->type = null;
	}
}
