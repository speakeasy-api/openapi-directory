/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";
export const CancelBookingServerList = [
  /**
   * Sandbox server (uses test data)
   */
  "https://api.sandbox.viator.com/partner",
] as const;

export class CancelBookingRequest extends SpeakeasyBase {
  /**
   * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Accept-Language",
  })
  acceptLanguage: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  cancellationRequest?: shared.CancellationRequest;

  /**
   * The ID of the booking
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=booking-reference",
  })
  bookingReference: string;
}

export enum CancelBooking404ApplicationJSONCodeEnum {
  NotFound = "NOT_FOUND",
}

/**
 * The specified booking was not found; or, it was not created with this API key
 */
export enum CancelBooking404ApplicationJSONMessageEnum {
  BookingNotFound = "Booking not found",
}

/**
 * Not found
 */
export class CancelBooking404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: CancelBooking404ApplicationJSONCodeEnum;

  /**
   * The specified booking was not found; or, it was not created with this API key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: CancelBooking404ApplicationJSONMessageEnum;

  /**
   * Timestamp of the request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * Tracking identifier for this error response (useful when seeking support)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trackingId" })
  trackingId?: string;
}

export enum CancelBooking400ApplicationJSONCodeEnum {
  BadRequest = "BAD_REQUEST",
}

export enum CancelBooking400ApplicationJSONMessageEnum {
  MissingCancellationReason = "Missing cancellation reason",
}

/**
 * Bad request
 */
export class CancelBooking400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: CancelBooking400ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: CancelBooking400ApplicationJSONMessageEnum;

  /**
   * Timestamp of the request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * Tracking identifier for this error response (useful when seeking support)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trackingId" })
  trackingId?: string;
}

export class CancelBookingResponse extends SpeakeasyBase {
  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  fourHundredAndOneUNAUTHORIZED?: shared.FourHundredAndOneUNAUTHORIZED;

  /**
   * Not Acceptable
   */
  @SpeakeasyMetadata()
  fourHundredAndSixNOTACCEPTABLE?: shared.FourHundredAndSixNOTACCEPTABLE;

  /**
   * Internal Server Error
   */
  @SpeakeasyMetadata()
  fiveHundredINTERNALSERVERERROR?: shared.FiveHundredINTERNALSERVERERROR;

  /**
   * Service Unavailable
   */
  @SpeakeasyMetadata()
  fiveHundredAndThreeSERVICEUNAVAILABLE?: shared.FiveHundredAndThreeSERVICEUNAVAILABLE;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  cancelBookingResponse?: shared.CancelBookingResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad request
   */
  @SpeakeasyMetadata()
  cancelBooking400ApplicationJSONObject?: CancelBooking400ApplicationJSON;

  /**
   * Not found
   */
  @SpeakeasyMetadata()
  cancelBooking404ApplicationJSONObject?: CancelBooking404ApplicationJSON;
}
