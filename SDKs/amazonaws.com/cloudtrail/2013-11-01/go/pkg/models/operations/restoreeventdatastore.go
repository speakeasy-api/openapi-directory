// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RestoreEventDataStoreXAmzTargetEnum
type RestoreEventDataStoreXAmzTargetEnum string

const (
	RestoreEventDataStoreXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101RestoreEventDataStore RestoreEventDataStoreXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RestoreEventDataStore"
)

func (e *RestoreEventDataStoreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.RestoreEventDataStore":
		*e = RestoreEventDataStoreXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RestoreEventDataStoreXAmzTargetEnum: %s", s)
	}
}

type RestoreEventDataStoreRequest struct {
	RestoreEventDataStoreRequest shared.RestoreEventDataStoreRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   RestoreEventDataStoreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RestoreEventDataStoreResponse struct {
	// CloudTrailAccessNotEnabledException
	CloudTrailAccessNotEnabledException interface{}
	ContentType                         string
	// EventDataStoreARNInvalidException
	EventDataStoreARNInvalidException interface{}
	// EventDataStoreMaxLimitExceededException
	EventDataStoreMaxLimitExceededException interface{}
	// EventDataStoreNotFoundException
	EventDataStoreNotFoundException interface{}
	// InsufficientDependencyServiceAccessPermissionException
	InsufficientDependencyServiceAccessPermissionException interface{}
	// InvalidEventDataStoreStatusException
	InvalidEventDataStoreStatusException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NoManagementAccountSLRExistsException
	NoManagementAccountSLRExistsException interface{}
	// NotOrganizationMasterAccountException
	NotOrganizationMasterAccountException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// OrganizationNotInAllFeaturesModeException
	OrganizationNotInAllFeaturesModeException interface{}
	// OrganizationsNotInUseException
	OrganizationsNotInUseException interface{}
	// Success
	RestoreEventDataStoreResponse *shared.RestoreEventDataStoreResponse
	StatusCode                    int
	RawResponse                   *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
