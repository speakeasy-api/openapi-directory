/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventPayload } from "./eventpayload";
import { OperationTypeEnum } from "./operationtypeenum";
import { ProjectInformation } from "./projectinformation";
import { UserIdentity } from "./useridentity";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about an entry in an event log of Amazon CodeCatalyst activity.
 */
export class EventLogEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "errorCode" })
  errorCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventCategory" })
  eventCategory: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventName" })
  eventName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventSource" })
  eventSource: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "eventType" })
  eventType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operationType" })
  operationType: OperationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "projectInformation" })
  @Type(() => ProjectInformation)
  projectInformation?: ProjectInformation;

  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestPayload" })
  @Type(() => EventPayload)
  requestPayload?: EventPayload;

  @SpeakeasyMetadata()
  @Expose({ name: "responsePayload" })
  @Type(() => EventPayload)
  responsePayload?: EventPayload;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceIpAddress" })
  sourceIpAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userAgent" })
  userAgent?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userIdentity" })
  @Type(() => UserIdentity)
  userIdentity: UserIdentity;
}
