"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Card = exports.CardTypeEnum = exports.CardStatusEnum = exports.CardDigitalWallet = exports.CardBillingAddress = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The Card's billing address.
 */
var CardBillingAddress = /** @class */ (function (_super) {
    __extends(CardBillingAddress, _super);
    function CardBillingAddress() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city" }),
        __metadata("design:type", String)
    ], CardBillingAddress.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line1" }),
        __metadata("design:type", String)
    ], CardBillingAddress.prototype, "line1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line2" }),
        __metadata("design:type", String)
    ], CardBillingAddress.prototype, "line2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postal_code" }),
        __metadata("design:type", String)
    ], CardBillingAddress.prototype, "postalCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], CardBillingAddress.prototype, "state", void 0);
    return CardBillingAddress;
}(utils_1.SpeakeasyBase));
exports.CardBillingAddress = CardBillingAddress;
/**
 * The contact information used in the two-factor steps for digital wallet card creation. At least one field must be present to complete the digital wallet steps.
 */
var CardDigitalWallet = /** @class */ (function (_super) {
    __extends(CardDigitalWallet, _super);
    function CardDigitalWallet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_profile_id" }),
        __metadata("design:type", String)
    ], CardDigitalWallet.prototype, "cardProfileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        __metadata("design:type", String)
    ], CardDigitalWallet.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "phone" }),
        __metadata("design:type", String)
    ], CardDigitalWallet.prototype, "phone", void 0);
    return CardDigitalWallet;
}(utils_1.SpeakeasyBase));
exports.CardDigitalWallet = CardDigitalWallet;
/**
 * This indicates if payments can be made with the card.
 */
var CardStatusEnum;
(function (CardStatusEnum) {
    CardStatusEnum["Active"] = "active";
    CardStatusEnum["Disabled"] = "disabled";
    CardStatusEnum["Canceled"] = "canceled";
})(CardStatusEnum = exports.CardStatusEnum || (exports.CardStatusEnum = {}));
/**
 * A constant representing the object's type. For this resource it will always be `card`.
 */
var CardTypeEnum;
(function (CardTypeEnum) {
    CardTypeEnum["Card"] = "card";
})(CardTypeEnum = exports.CardTypeEnum || (exports.CardTypeEnum = {}));
/**
 * Cards are commercial credit cards. They'll immediately work for online purchases after you create them. All cards maintain a credit limit of 100% of the Accountâ€™s available balance at the time of transaction. Funds are deducted from the Account upon transaction settlement.
 */
var Card = /** @class */ (function (_super) {
    __extends(Card, _super);
    function Card() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_id" }),
        __metadata("design:type", String)
    ], Card.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billing_address" }),
        (0, class_transformer_1.Type)(function () { return CardBillingAddress; }),
        __metadata("design:type", CardBillingAddress)
    ], Card.prototype, "billingAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Card.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Card.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "digital_wallet" }),
        (0, class_transformer_1.Type)(function () { return CardDigitalWallet; }),
        __metadata("design:type", CardDigitalWallet)
    ], Card.prototype, "digitalWallet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expiration_month" }),
        __metadata("design:type", Number)
    ], Card.prototype, "expirationMonth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expiration_year" }),
        __metadata("design:type", Number)
    ], Card.prototype, "expirationYear", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Card.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last4" }),
        __metadata("design:type", String)
    ], Card.prototype, "last4", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Card.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Card.prototype, "type", void 0);
    return Card;
}(utils_1.SpeakeasyBase));
exports.Card = Card;
