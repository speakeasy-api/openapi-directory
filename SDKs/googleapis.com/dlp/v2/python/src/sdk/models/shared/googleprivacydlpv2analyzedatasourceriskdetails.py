"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2bigquerytable as shared_googleprivacydlpv2bigquerytable
from ..shared import googleprivacydlpv2categoricalstatsresult as shared_googleprivacydlpv2categoricalstatsresult
from ..shared import googleprivacydlpv2deltapresenceestimationresult as shared_googleprivacydlpv2deltapresenceestimationresult
from ..shared import googleprivacydlpv2kanonymityresult as shared_googleprivacydlpv2kanonymityresult
from ..shared import googleprivacydlpv2kmapestimationresult as shared_googleprivacydlpv2kmapestimationresult
from ..shared import googleprivacydlpv2ldiversityresult as shared_googleprivacydlpv2ldiversityresult
from ..shared import googleprivacydlpv2numericalstatsresult as shared_googleprivacydlpv2numericalstatsresult
from ..shared import googleprivacydlpv2privacymetric as shared_googleprivacydlpv2privacymetric
from ..shared import googleprivacydlpv2requestedriskanalysisoptions as shared_googleprivacydlpv2requestedriskanalysisoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails:
    r"""Result of a risk analysis operation request."""
    
    categorical_stats_result: Optional[shared_googleprivacydlpv2categoricalstatsresult.GooglePrivacyDlpV2CategoricalStatsResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categoricalStatsResult'), 'exclude': lambda f: f is None }})
    r"""Result of the categorical stats computation."""  
    delta_presence_estimation_result: Optional[shared_googleprivacydlpv2deltapresenceestimationresult.GooglePrivacyDlpV2DeltaPresenceEstimationResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deltaPresenceEstimationResult'), 'exclude': lambda f: f is None }})
    r"""Result of the Î´-presence computation. Note that these results are an estimation, not exact values."""  
    k_anonymity_result: Optional[shared_googleprivacydlpv2kanonymityresult.GooglePrivacyDlpV2KAnonymityResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kAnonymityResult'), 'exclude': lambda f: f is None }})
    r"""Result of the k-anonymity computation."""  
    k_map_estimation_result: Optional[shared_googleprivacydlpv2kmapestimationresult.GooglePrivacyDlpV2KMapEstimationResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kMapEstimationResult'), 'exclude': lambda f: f is None }})
    r"""Result of the reidentifiability analysis. Note that these results are an estimation, not exact values."""  
    l_diversity_result: Optional[shared_googleprivacydlpv2ldiversityresult.GooglePrivacyDlpV2LDiversityResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lDiversityResult'), 'exclude': lambda f: f is None }})
    r"""Result of the l-diversity computation."""  
    numerical_stats_result: Optional[shared_googleprivacydlpv2numericalstatsresult.GooglePrivacyDlpV2NumericalStatsResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numericalStatsResult'), 'exclude': lambda f: f is None }})
    r"""Result of the numerical stats computation."""  
    requested_options: Optional[shared_googleprivacydlpv2requestedriskanalysisoptions.GooglePrivacyDlpV2RequestedRiskAnalysisOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedOptions'), 'exclude': lambda f: f is None }})
    r"""Risk analysis options."""  
    requested_privacy_metric: Optional[shared_googleprivacydlpv2privacymetric.GooglePrivacyDlpV2PrivacyMetric] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedPrivacyMetric'), 'exclude': lambda f: f is None }})
    r"""Privacy metric to compute for reidentification risk analysis."""  
    requested_source_table: Optional[shared_googleprivacydlpv2bigquerytable.GooglePrivacyDlpV2BigQueryTable] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedSourceTable'), 'exclude': lambda f: f is None }})
    r"""Message defining the location of a BigQuery table. A table is uniquely identified by its project_id, dataset_id, and table_name. Within a query a table is often referenced with a string in the format of: `:.` or `..`."""  
    