"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EbayCollectAndRemitTax = void 0;
var utils_1 = require("../../../internal/utils");
var amount_1 = require("./amount");
var ebaytaxreference_1 = require("./ebaytaxreference");
var class_transformer_1 = require("class-transformer");
/**
 * This type contains information about the type and amount of tax that eBay will collect and remit to the state, province, country, or other taxing authority in the buyer's location, as required by that taxing authority.<br><br>'Collect and Remit' tax includes:<ul><li>US state-mandated sales tax</li><li>Federal and Provincial Sales Tax in Canada</li><li>'Goods and Services' tax in Canada, Australia, and New Zealand</li><li>VAT collected for the UK and EU countries</li></ul>
 */
var EbayCollectAndRemitTax = /** @class */ (function (_super) {
    __extends(EbayCollectAndRemitTax, _super);
    function EbayCollectAndRemitTax() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        (0, class_transformer_1.Type)(function () { return amount_1.Amount; }),
        __metadata("design:type", amount_1.Amount)
    ], EbayCollectAndRemitTax.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "collectionMethod" }),
        __metadata("design:type", String)
    ], EbayCollectAndRemitTax.prototype, "collectionMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ebayReference" }),
        (0, class_transformer_1.Type)(function () { return ebaytaxreference_1.EbayTaxReference; }),
        __metadata("design:type", ebaytaxreference_1.EbayTaxReference)
    ], EbayCollectAndRemitTax.prototype, "ebayReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taxType" }),
        __metadata("design:type", String)
    ], EbayCollectAndRemitTax.prototype, "taxType", void 0);
    return EbayCollectAndRemitTax;
}(utils_1.SpeakeasyBase));
exports.EbayCollectAndRemitTax = EbayCollectAndRemitTax;
