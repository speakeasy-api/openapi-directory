// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum string

const (
	UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnumRadius UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum = "radius"
	UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnumSnmp   UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum = "snmp"
	UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnumSyslog UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum = "syslog"
)

func (e UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum) ToPointer() *UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum {
	return &e
}

func (e *UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "radius":
		fallthrough
	case "snmp":
		fallthrough
	case "syslog":
		*e = UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum: %v", v)
	}
}

type UpdateNetworkSwitchAlternateManagementInterfaceRequestBodySwitches struct {
	// Switch alternative management IP. To remove a prior IP setting, provide an empty string
	AlternateManagementIP string `json:"alternateManagementIp"`
	// Switch gateway must be in IP format. Only and must be specified for Polaris switches
	Gateway *string `json:"gateway,omitempty"`
	// Switch serial number
	Serial string `json:"serial"`
	// Switch subnet mask must be in IP format. Only and must be specified for Polaris switches
	SubnetMask *string `json:"subnetMask,omitempty"`
}

type UpdateNetworkSwitchAlternateManagementInterfaceRequestBody struct {
	// Boolean value to enable or disable AMI configuration. If enabled, VLAN and protocols must be set
	Enabled *bool `json:"enabled,omitempty"`
	// Can be one or more of the following values: 'radius', 'snmp' or 'syslog'
	Protocols []UpdateNetworkSwitchAlternateManagementInterfaceRequestBodyProtocolsEnum `json:"protocols,omitempty"`
	// Array of switch serial number and IP assignment. If parameter is present, it cannot have empty body. Note: switches parameter is not applicable for template networks, in other words, do not put 'switches' in the body when updating template networks. Also, an empty 'switches' array will remove all previous assignments
	Switches []UpdateNetworkSwitchAlternateManagementInterfaceRequestBodySwitches `json:"switches,omitempty"`
	// Alternate management VLAN, must be between 1 and 4094
	VlanID *int64 `json:"vlanId,omitempty"`
}

type UpdateNetworkSwitchAlternateManagementInterfaceRequest struct {
	RequestBody *UpdateNetworkSwitchAlternateManagementInterfaceRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                                      `pathParam:"style=simple,explode=false,name=networkId"`
}

type UpdateNetworkSwitchAlternateManagementInterfaceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkSwitchAlternateManagementInterface200ApplicationJSONObject map[string]interface{}
}
