// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateCustomRoutingListenerXAmzTargetEnum
type UpdateCustomRoutingListenerXAmzTargetEnum string

const (
	UpdateCustomRoutingListenerXAmzTargetEnumGlobalAcceleratorV20180706UpdateCustomRoutingListener UpdateCustomRoutingListenerXAmzTargetEnum = "GlobalAccelerator_V20180706.UpdateCustomRoutingListener"
)

func (e *UpdateCustomRoutingListenerXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GlobalAccelerator_V20180706.UpdateCustomRoutingListener":
		*e = UpdateCustomRoutingListenerXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCustomRoutingListenerXAmzTargetEnum: %s", s)
	}
}

type UpdateCustomRoutingListenerRequest struct {
	UpdateCustomRoutingListenerRequest shared.UpdateCustomRoutingListenerRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         UpdateCustomRoutingListenerXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateCustomRoutingListenerResponse struct {
	ContentType string
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// InvalidPortRangeException
	InvalidPortRangeException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ListenerNotFoundException
	ListenerNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateCustomRoutingListenerResponse *shared.UpdateCustomRoutingListenerResponse
}
