/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PublisherAccount } from "./publisheraccount";
import { Expose, Type } from "class-transformer";

/**
 * Response for the publisher account list request.
 */
export class ListPublisherAccountsResponse extends SpeakeasyBase {
  /**
   * Publisher that the client credentials can access.
   */
  @SpeakeasyMetadata({ elemType: PublisherAccount })
  @Expose({ name: "account" })
  @Type(() => PublisherAccount)
  account?: PublisherAccount[];

  /**
   * If not empty, indicates that there might be more accounts for the request; you must pass this value in a new `ListPublisherAccountsRequest`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
