/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TypedValue - A single strongly-typed value.
 */
public class TypedValue {
    /**
     * A Boolean value: true or false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("boolValue")
    public Boolean boolValue;
    public TypedValue withBoolValue(Boolean boolValue) {
        this.boolValue = boolValue;
        return this;
    }
    
    /**
     * Distribution contains summary statistics for a population of values. It optionally contains a histogram representing the distribution of those values across a set of buckets.The summary statistics are the count, mean, sum of the squared deviation from the mean, the minimum, and the maximum of the set of population of values. The histogram is based on a sequence of buckets and gives a count of values that fall into each bucket. The boundaries of the buckets are given either explicitly or by formulas for buckets of fixed or exponentially increasing widths.Although it is not forbidden, it is generally a bad idea to include non-finite values (infinities or NaNs) in the population of values, as this will render the mean and sum_of_squared_deviation fields meaningless.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distributionValue")
    public Distribution distributionValue;
    public TypedValue withDistributionValue(Distribution distributionValue) {
        this.distributionValue = distributionValue;
        return this;
    }
    
    /**
     * A 64-bit double-precision floating-point number. Its magnitude is approximately \u00b110\u00b1300 and it has 16 significant digits of precision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doubleValue")
    public Double doubleValue;
    public TypedValue withDoubleValue(Double doubleValue) {
        this.doubleValue = doubleValue;
        return this;
    }
    
    /**
     * A 64-bit integer. Its range is approximately \u00b19.2x1018.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("int64Value")
    public String int64Value;
    public TypedValue withInt64Value(String int64Value) {
        this.int64Value = int64Value;
        return this;
    }
    
    /**
     * A variable-length string value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringValue")
    public String stringValue;
    public TypedValue withStringValue(String stringValue) {
        this.stringValue = stringValue;
        return this;
    }
    
}
