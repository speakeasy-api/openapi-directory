/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * KafkaSettings - Provides information that describes an Apache Kafka endpoint. This information includes the output format of records applied to the endpoint and details of transaction and control table data information.
 */
public class KafkaSettings {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Broker")
    public String broker;

    public KafkaSettings withBroker(String broker) {
        this.broker = broker;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IncludeControlDetails")
    public Boolean includeControlDetails;

    public KafkaSettings withIncludeControlDetails(Boolean includeControlDetails) {
        this.includeControlDetails = includeControlDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IncludeNullAndEmpty")
    public Boolean includeNullAndEmpty;

    public KafkaSettings withIncludeNullAndEmpty(Boolean includeNullAndEmpty) {
        this.includeNullAndEmpty = includeNullAndEmpty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IncludePartitionValue")
    public Boolean includePartitionValue;

    public KafkaSettings withIncludePartitionValue(Boolean includePartitionValue) {
        this.includePartitionValue = includePartitionValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IncludeTableAlterOperations")
    public Boolean includeTableAlterOperations;

    public KafkaSettings withIncludeTableAlterOperations(Boolean includeTableAlterOperations) {
        this.includeTableAlterOperations = includeTableAlterOperations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IncludeTransactionDetails")
    public Boolean includeTransactionDetails;

    public KafkaSettings withIncludeTransactionDetails(Boolean includeTransactionDetails) {
        this.includeTransactionDetails = includeTransactionDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MessageFormat")
    public MessageFormatValueEnum messageFormat;

    public KafkaSettings withMessageFormat(MessageFormatValueEnum messageFormat) {
        this.messageFormat = messageFormat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MessageMaxBytes")
    public Long messageMaxBytes;

    public KafkaSettings withMessageMaxBytes(Long messageMaxBytes) {
        this.messageMaxBytes = messageMaxBytes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NoHexPrefix")
    public Boolean noHexPrefix;

    public KafkaSettings withNoHexPrefix(Boolean noHexPrefix) {
        this.noHexPrefix = noHexPrefix;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PartitionIncludeSchemaTable")
    public Boolean partitionIncludeSchemaTable;

    public KafkaSettings withPartitionIncludeSchemaTable(Boolean partitionIncludeSchemaTable) {
        this.partitionIncludeSchemaTable = partitionIncludeSchemaTable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SaslMechanism")
    public KafkaSaslMechanismEnum saslMechanism;

    public KafkaSettings withSaslMechanism(KafkaSaslMechanismEnum saslMechanism) {
        this.saslMechanism = saslMechanism;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SaslPassword")
    public String saslPassword;

    public KafkaSettings withSaslPassword(String saslPassword) {
        this.saslPassword = saslPassword;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SaslUsername")
    public String saslUsername;

    public KafkaSettings withSaslUsername(String saslUsername) {
        this.saslUsername = saslUsername;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityProtocol")
    public KafkaSecurityProtocolEnum securityProtocol;

    public KafkaSettings withSecurityProtocol(KafkaSecurityProtocolEnum securityProtocol) {
        this.securityProtocol = securityProtocol;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SslCaCertificateArn")
    public String sslCaCertificateArn;

    public KafkaSettings withSslCaCertificateArn(String sslCaCertificateArn) {
        this.sslCaCertificateArn = sslCaCertificateArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SslClientCertificateArn")
    public String sslClientCertificateArn;

    public KafkaSettings withSslClientCertificateArn(String sslClientCertificateArn) {
        this.sslClientCertificateArn = sslClientCertificateArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SslClientKeyArn")
    public String sslClientKeyArn;

    public KafkaSettings withSslClientKeyArn(String sslClientKeyArn) {
        this.sslClientKeyArn = sslClientKeyArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SslClientKeyPassword")
    public String sslClientKeyPassword;

    public KafkaSettings withSslClientKeyPassword(String sslClientKeyPassword) {
        this.sslClientKeyPassword = sslClientKeyPassword;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Topic")
    public String topic;

    public KafkaSettings withTopic(String topic) {
        this.topic = topic;
        return this;
    }
    
    public KafkaSettings(){}
}
