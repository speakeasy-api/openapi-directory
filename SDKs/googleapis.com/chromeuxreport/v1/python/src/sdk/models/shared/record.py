"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import collectionperiod as shared_collectionperiod
from ..shared import key as shared_key
from ..shared import metric as shared_metric
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Record:
    r"""Record is a single Chrome UX report data record. It contains use experience statistics for a single url pattern and set of dimensions."""
    
    collection_period: Optional[shared_collectionperiod.CollectionPeriod] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collectionPeriod'), 'exclude': lambda f: f is None }})
    r"""The collection period is a date range which includes the `first` and `last` day."""  
    key: Optional[shared_key.Key] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Key defines all the dimensions that identify this record as unique."""  
    metrics: Optional[dict[str, shared_metric.Metric]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics'), 'exclude': lambda f: f is None }})
    r"""Metrics is the map of user experience data available for the record defined in the key field. Metrics are keyed on the metric name. Allowed key values: [\\"first_contentful_paint\\", \\"first_input_delay\\", \\"largest_contentful_paint\\", \\"cumulative_layout_shift\\", \\"experimental_time_to_first_byte\\", \\"experimental_interaction_to_next_paint\\"]"""  
    