/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2InfoType } from "./googleprivacydlpv2infotype";
import { GooglePrivacyDlpV2InspectionRule } from "./googleprivacydlpv2inspectionrule";
import { Expose, Type } from "class-transformer";

/**
 * Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set.
 */
export class GooglePrivacyDlpV2InspectionRuleSet extends SpeakeasyBase {
  /**
   * List of infoTypes this rule set is applied to.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2InfoType })
  @Expose({ name: "infoTypes" })
  @Type(() => GooglePrivacyDlpV2InfoType)
  infoTypes?: GooglePrivacyDlpV2InfoType[];

  /**
   * Set of rules to be applied to infoTypes. The rules are applied in order.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2InspectionRule })
  @Expose({ name: "rules" })
  @Type(() => GooglePrivacyDlpV2InspectionRule)
  rules?: GooglePrivacyDlpV2InspectionRule[];
}
