<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Certificate - A SSL/TLS X509 certificate
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Certificate
{
    /**
     * Allow Otoroshi to renew the certificate (if self signed)
     * 
     * @var string $autoRenew
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoRenew')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $autoRenew;
    
    /**
     * Certificate is a CA (read only)
     * 
     * @var string $ca
     */
	#[\JMS\Serializer\Annotation\SerializedName('ca')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ca;
    
    /**
     * Reference for a CA certificate in otoroshi
     * 
     * @var string $caRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('caRef')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $caRef;
    
    /**
     * Certificate chain of trust in PEM format
     * 
     * @var string $chain
     */
	#[\JMS\Serializer\Annotation\SerializedName('chain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $chain;
    
    /**
     * Domain of the certificate (read only)
     * 
     * @var string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $domain;
    
    /**
     * Start date of validity
     * 
     * @var string $from
     */
	#[\JMS\Serializer\Annotation\SerializedName('from')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $from;
    
    /**
     * Id of the certificate
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * PKCS8 private key in PEM format
     * 
     * @var string $privateKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $privateKey;
    
    /**
     * Certificate is self signed  read only)
     * 
     * @var string $selfSigned
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfSigned')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $selfSigned;
    
    /**
     * Subject of the certificate (read only)
     * 
     * @var string $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $subject;
    
    /**
     * End date of validity
     * 
     * @var string $to
     */
	#[\JMS\Serializer\Annotation\SerializedName('to')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $to;
    
    /**
     * Certificate is valid (read only)
     * 
     * @var string $valid
     */
	#[\JMS\Serializer\Annotation\SerializedName('valid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $valid;
    
	public function __construct()
	{
		$this->autoRenew = "";
		$this->ca = "";
		$this->caRef = "";
		$this->chain = "";
		$this->domain = "";
		$this->from = "";
		$this->id = "";
		$this->privateKey = "";
		$this->selfSigned = "";
		$this->subject = "";
		$this->to = "";
		$this->valid = "";
	}
}
