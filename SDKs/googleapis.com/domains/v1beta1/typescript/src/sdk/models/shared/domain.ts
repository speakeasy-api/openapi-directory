/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Money } from "./money";
import { Expose, Type } from "class-transformer";

/**
 * The state of this domain as a `Registration` resource.
 */
export enum DomainResourceStateEnum {
  ResourceStateUnspecified = "RESOURCE_STATE_UNSPECIFIED",
  Importable = "IMPORTABLE",
  Unsupported = "UNSUPPORTED",
  Suspended = "SUSPENDED",
  Expired = "EXPIRED",
  Deleted = "DELETED",
}

/**
 * A domain that the calling user manages in Google Domains.
 */
export class Domain extends SpeakeasyBase {
  /**
   * The domain name. Unicode domain names are expressed in Punycode format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domainName" })
  domainName?: string;

  /**
   * The state of this domain as a `Registration` resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceState" })
  resourceState?: DomainResourceStateEnum;

  /**
   * Represents an amount of money with its currency type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "yearlyPrice" })
  @Type(() => Money)
  yearlyPrice?: Money;
}
