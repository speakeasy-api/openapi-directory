/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AgentOrchestrationConfig } from "./agentorchestrationconfig";
import { ComputePlatformEnum } from "./computeplatformenum";
import { ProfilingStatus } from "./profilingstatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  Contains information about a profiling group.
 */
export class ProfilingGroupDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "agentOrchestrationConfig" })
  @Type(() => AgentOrchestrationConfig)
  agentOrchestrationConfig?: AgentOrchestrationConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "computePlatform" })
  computePlatform?: ComputePlatformEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "profilingStatus" })
  @Type(() => ProfilingStatus)
  profilingStatus?: ProfilingStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
