// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValidationCheckResultStateEnum - The validation check state.
type ValidationCheckResultStateEnum string

const (
	ValidationCheckResultStateEnumStateUnknown ValidationCheckResultStateEnum = "STATE_UNKNOWN"
	ValidationCheckResultStateEnumStateFailure ValidationCheckResultStateEnum = "STATE_FAILURE"
	ValidationCheckResultStateEnumStateSkipped ValidationCheckResultStateEnum = "STATE_SKIPPED"
	ValidationCheckResultStateEnumStateFatal   ValidationCheckResultStateEnum = "STATE_FATAL"
	ValidationCheckResultStateEnumStateWarning ValidationCheckResultStateEnum = "STATE_WARNING"
)

func (e ValidationCheckResultStateEnum) ToPointer() *ValidationCheckResultStateEnum {
	return &e
}

func (e *ValidationCheckResultStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNKNOWN":
		fallthrough
	case "STATE_FAILURE":
		fallthrough
	case "STATE_SKIPPED":
		fallthrough
	case "STATE_FATAL":
		fallthrough
	case "STATE_WARNING":
		*e = ValidationCheckResultStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidationCheckResultStateEnum: %v", v)
	}
}

// ValidationCheckResult - ValidationCheckResult defines the details about the validation check.
type ValidationCheckResult struct {
	// The category of the validation.
	Category *string `json:"category,omitempty"`
	// The description of the validation check.
	Description *string `json:"description,omitempty"`
	// Detailed failure information, which might be unformatted.
	Details *string `json:"details,omitempty"`
	// A human-readable message of the check failure.
	Reason *string `json:"reason,omitempty"`
	// The validation check state.
	State *ValidationCheckResultStateEnum `json:"state,omitempty"`
}
