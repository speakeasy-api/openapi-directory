"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import apikeycredentials as shared_apikeycredentials
from ..shared import authenticationtype_enum as shared_authenticationtype_enum
from ..shared import basicauthcredentials as shared_basicauthcredentials
from ..shared import customauthcredentials as shared_customauthcredentials
from ..shared import oauth2credentials as shared_oauth2credentials
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomConnectorProfileCredentials:
    r"""The connector-specific profile credentials that are required when using the custom connector."""
    
    authentication_type: shared_authenticationtype_enum.AuthenticationTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authenticationType') }})  
    api_key: Optional[shared_apikeycredentials.APIKeyCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiKey'), 'exclude': lambda f: f is None }})  
    basic: Optional[shared_basicauthcredentials.BasicAuthCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('basic'), 'exclude': lambda f: f is None }})  
    custom: Optional[shared_customauthcredentials.CustomAuthCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom'), 'exclude': lambda f: f is None }})  
    oauth2: Optional[shared_oauth2credentials.OAuth2Credentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth2'), 'exclude': lambda f: f is None }})  
    