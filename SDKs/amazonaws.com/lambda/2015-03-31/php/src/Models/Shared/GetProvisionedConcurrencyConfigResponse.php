<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetProvisionedConcurrencyConfigResponse - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetProvisionedConcurrencyConfigResponse
{
	#[\JMS\Serializer\Annotation\SerializedName('AllocatedProvisionedConcurrentExecutions')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $allocatedProvisionedConcurrentExecutions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('AvailableProvisionedConcurrentExecutions')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $availableProvisionedConcurrentExecutions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LastModified')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastModified = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('RequestedProvisionedConcurrentExecutions')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $requestedProvisionedConcurrentExecutions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProvisionedConcurrencyStatusEnumEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProvisionedConcurrencyStatusEnumEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StatusReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusReason = null;
    
	public function __construct()
	{
		$this->allocatedProvisionedConcurrentExecutions = null;
		$this->availableProvisionedConcurrentExecutions = null;
		$this->lastModified = null;
		$this->requestedProvisionedConcurrentExecutions = null;
		$this->status = null;
		$this->statusReason = null;
	}
}
