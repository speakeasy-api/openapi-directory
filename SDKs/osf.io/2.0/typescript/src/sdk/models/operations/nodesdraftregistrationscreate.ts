/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class NodesDraftRegistrationsCreateDraftRegistrationAttributesNodeLicense extends SpeakeasyBase {
  /**
   * A list of names of copyright holders for the license.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "copyright_holders" })
  copyrightHolders?: string[];

  /**
   * The year the copyright was made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "year" })
  year?: number;
}

/**
 * The properties of the Draft Registration entity.
 */
export class NodesDraftRegistrationsCreateDraftRegistrationAttributesInput extends SpeakeasyBase {
  /**
   * The category of the Draft Registration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  /**
   * The description of the Draft Registration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_license" })
  @Type(
    () => NodesDraftRegistrationsCreateDraftRegistrationAttributesNodeLicense
  )
  nodeLicense?: NodesDraftRegistrationsCreateDraftRegistrationAttributesNodeLicense;

  /**
   * This is a legacy format for `registration_responses`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registration_metadata" })
  registrationMetadata?: Record<string, any>;

  /**
   * A dictionary of question IDs and responses from the registration schema.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registration_responses" })
  registrationResponses?: Record<string, any>;

  /**
   * The searchable tags of the Draft Registration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * The title of the Draft Registration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class NodesDraftRegistrationsCreateDraftRegistrationInput extends SpeakeasyBase {
  /**
   * The properties of the Draft Registration entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => NodesDraftRegistrationsCreateDraftRegistrationAttributesInput)
  attributes: NodesDraftRegistrationsCreateDraftRegistrationAttributesInput;
}

export class NodesDraftRegistrationsCreateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: NodesDraftRegistrationsCreateDraftRegistrationInput;

  /**
   * The unique identifier of the node.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=node_id",
  })
  nodeId: string;
}

export class NodesDraftRegistrationsCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
