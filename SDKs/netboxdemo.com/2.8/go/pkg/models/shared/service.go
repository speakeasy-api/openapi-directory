// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

type ServiceProtocolLabelEnum string

const (
	ServiceProtocolLabelEnumTCP ServiceProtocolLabelEnum = "TCP"
	ServiceProtocolLabelEnumUDP ServiceProtocolLabelEnum = "UDP"
)

func (e *ServiceProtocolLabelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TCP":
		fallthrough
	case "UDP":
		*e = ServiceProtocolLabelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceProtocolLabelEnum: %s", s)
	}
}

type ServiceProtocolValueEnum string

const (
	ServiceProtocolValueEnumTCP ServiceProtocolValueEnum = "tcp"
	ServiceProtocolValueEnumUDP ServiceProtocolValueEnum = "udp"
)

func (e *ServiceProtocolValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tcp":
		fallthrough
	case "udp":
		*e = ServiceProtocolValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceProtocolValueEnum: %s", s)
	}
}

type ServiceProtocol struct {
	Label ServiceProtocolLabelEnum `json:"label"`
	Value ServiceProtocolValueEnum `json:"value"`
}

type Service struct {
	Created        *types.Date            `json:"created,omitempty"`
	CustomFields   map[string]interface{} `json:"custom_fields,omitempty"`
	Description    *string                `json:"description,omitempty"`
	Device         *NestedDevice          `json:"device,omitempty"`
	ID             *int64                 `json:"id,omitempty"`
	Ipaddresses    []NestedIPAddress      `json:"ipaddresses,omitempty"`
	LastUpdated    *time.Time             `json:"last_updated,omitempty"`
	Name           string                 `json:"name"`
	Port           int64                  `json:"port"`
	Protocol       *ServiceProtocol       `json:"protocol,omitempty"`
	Tags           []string               `json:"tags,omitempty"`
	VirtualMachine *NestedVirtualMachine  `json:"virtual_machine,omitempty"`
}
