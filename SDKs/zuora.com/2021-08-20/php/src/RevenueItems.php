<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class RevenueItems 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * List revenue items by revenue event number
     * 
     * This REST API reference describes how to get the details of each revenue item in a revenue event by specifying the revenue event number. Request and response field descriptions and sample code are provided.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueEventNumberRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueEventNumberResponse
     */
	public function getRevenueItemsByChargeRevenueEventNumber(
        \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueEventNumberRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueEventNumberResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/revenue-items/revenue-events/{event-number}', \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueEventNumberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueEventNumberRequest::class, $request, null));
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueEventNumberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getRevenueItemsType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GETRevenueItemsType', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List revenue items by charge revenue summary number
     * 
     * This REST API reference describes how to get the details for each revenue item in a charge revenue summary by specifying the charge revenue summary number. Request and response field descriptions and sample code are provided.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueSummaryNumberRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueSummaryNumberResponse
     */
	public function getRevenueItemsByChargeRevenueSummaryNumber(
        \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueSummaryNumberRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueSummaryNumberResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/revenue-items/charge-revenue-summaries/{crs-number}', \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueSummaryNumberRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueSummaryNumberRequest::class, $request, null));
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByChargeRevenueSummaryNumberResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getRevenueItemsType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GETRevenueItemsType', 'json');
            }
        }

        return $response;
    }
	
    /**
     * List all revenue items of a revenue schedule
     * 
     * This REST API reference describes how to get the details for each revenue items in a revenue schedule by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByRevenueScheduleRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByRevenueScheduleResponse
     */
	public function getRevenueItemsByRevenueSchedule(
        \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByRevenueScheduleRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByRevenueScheduleResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/revenue-items/revenue-schedules/{rs-number}', \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByRevenueScheduleRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByRevenueScheduleRequest::class, $request, null));
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GETRevenueItemsByRevenueScheduleResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->getRsRevenueItemsType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GETRsRevenueItemsType', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update custom fields on revenue items by revenue event number
     * 
     * This REST API reference describes how to update custom fields on revenue items by specifying the revenue event number. Request and response field descriptions and sample code are provided.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueEventRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueEventResponse
     */
	public function putCustomFieldsonRevenueItemsByRevenueEvent(
        \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueEventRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueEventResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/revenue-items/revenue-events/{event-number}', \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueEventRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "putEventRIDetailType", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueEventResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->commonResponseType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\CommonResponseType', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Update custom fields on revenue items by revenue schedule number
     * 
     * This REST API reference describes how to update custom fields on revenue Items by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.
     * 
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueScheduleRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueScheduleResponse
     */
	public function putCustomFieldsonRevenueItemsByRevenueSchedule(
        \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueScheduleRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueScheduleResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/revenue-items/revenue-schedules/{rs-number}', \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueScheduleRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "putScheduleRIDetailType", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PUTCustomFieldsonRevenueItemsByRevenueScheduleResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            $response->headers = $httpResponse->getHeaders();
            
            if (Utils\Utils::matchContentType($contentType, 'application/json; charset=utf-8')) {
                $serializer = Utils\JSON::createSerializer();
                $response->commonResponseType = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\CommonResponseType', 'json');
            }
        }

        return $response;
    }
}