/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * A configuration specification to be used when provisioning an application. A configuration consists of a classification, properties, and optional nested configurations. A classification refers to an application-specific configuration file. Properties are the settings you want to change in that file.
 */
export class Configuration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  classification: string;

  @SpeakeasyMetadata({ elemType: Configuration })
  @Expose({ name: "configurations" })
  @Type(() => Configuration)
  configurations?: Configuration[];

  /**
   * A set of properties specified within a configuration classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: any;
}
