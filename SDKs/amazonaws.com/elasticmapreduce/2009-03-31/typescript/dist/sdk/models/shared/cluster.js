"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cluster = void 0;
var utils_1 = require("../../../internal/utils");
var application_1 = require("./application");
var clusterstatus_1 = require("./clusterstatus");
var configuration_1 = require("./configuration");
var ec2instanceattributes_1 = require("./ec2instanceattributes");
var instancecollectiontypeenum_1 = require("./instancecollectiontypeenum");
var kerberosattributes_1 = require("./kerberosattributes");
var placementgroupconfig_1 = require("./placementgroupconfig");
var repoupgradeonbootenum_1 = require("./repoupgradeonbootenum");
var scaledownbehaviorenum_1 = require("./scaledownbehaviorenum");
var tag_1 = require("./tag");
var class_transformer_1 = require("class-transformer");
/**
 * The detailed description of the cluster.
 */
var Cluster = /** @class */ (function (_super) {
    __extends(Cluster, _super);
    function Cluster() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: application_1.Application }),
        (0, class_transformer_1.Expose)({ name: "Applications" }),
        (0, class_transformer_1.Type)(function () { return application_1.Application; }),
        __metadata("design:type", Array)
    ], Cluster.prototype, "applications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AutoScalingRole" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "autoScalingRole", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AutoTerminate" }),
        __metadata("design:type", Boolean)
    ], Cluster.prototype, "autoTerminate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ClusterArn" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "clusterArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: configuration_1.Configuration }),
        (0, class_transformer_1.Expose)({ name: "Configurations" }),
        (0, class_transformer_1.Type)(function () { return configuration_1.Configuration; }),
        __metadata("design:type", Array)
    ], Cluster.prototype, "configurations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CustomAmiId" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "customAmiId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EbsRootVolumeSize" }),
        __metadata("design:type", Number)
    ], Cluster.prototype, "ebsRootVolumeSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Ec2InstanceAttributes" }),
        (0, class_transformer_1.Type)(function () { return ec2instanceattributes_1.Ec2InstanceAttributes; }),
        __metadata("design:type", ec2instanceattributes_1.Ec2InstanceAttributes)
    ], Cluster.prototype, "ec2InstanceAttributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Id" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InstanceCollectionType" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "instanceCollectionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "KerberosAttributes" }),
        (0, class_transformer_1.Type)(function () { return kerberosattributes_1.KerberosAttributes; }),
        __metadata("design:type", kerberosattributes_1.KerberosAttributes)
    ], Cluster.prototype, "kerberosAttributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LogEncryptionKmsKeyId" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "logEncryptionKmsKeyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LogUri" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "logUri", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MasterPublicDnsName" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "masterPublicDnsName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Name" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "NormalizedInstanceHours" }),
        __metadata("design:type", Number)
    ], Cluster.prototype, "normalizedInstanceHours", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "OSReleaseLabel" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "osReleaseLabel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "OutpostArn" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "outpostArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: placementgroupconfig_1.PlacementGroupConfig }),
        (0, class_transformer_1.Expose)({ name: "PlacementGroups" }),
        (0, class_transformer_1.Type)(function () { return placementgroupconfig_1.PlacementGroupConfig; }),
        __metadata("design:type", Array)
    ], Cluster.prototype, "placementGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ReleaseLabel" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "releaseLabel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RepoUpgradeOnBoot" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "repoUpgradeOnBoot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RequestedAmiVersion" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "requestedAmiVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RunningAmiVersion" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "runningAmiVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ScaleDownBehavior" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "scaleDownBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SecurityConfiguration" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "securityConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ServiceRole" }),
        __metadata("design:type", String)
    ], Cluster.prototype, "serviceRole", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Status" }),
        (0, class_transformer_1.Type)(function () { return clusterstatus_1.ClusterStatus; }),
        __metadata("design:type", clusterstatus_1.ClusterStatus)
    ], Cluster.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StepConcurrencyLevel" }),
        __metadata("design:type", Number)
    ], Cluster.prototype, "stepConcurrencyLevel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: tag_1.Tag }),
        (0, class_transformer_1.Expose)({ name: "Tags" }),
        (0, class_transformer_1.Type)(function () { return tag_1.Tag; }),
        __metadata("design:type", Array)
    ], Cluster.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TerminationProtected" }),
        __metadata("design:type", Boolean)
    ], Cluster.prototype, "terminationProtected", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "VisibleToAllUsers" }),
        __metadata("design:type", Boolean)
    ], Cluster.prototype, "visibleToAllUsers", void 0);
    return Cluster;
}(utils_1.SpeakeasyBase));
exports.Cluster = Cluster;
