// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeJobExecutionRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Optional. A number that identifies a particular job execution on a particular device. If not specified, the latest job execution is returned.
	ExecutionNumber *int64 `queryParam:"style=form,explode=true,name=executionNumber"`
	// Optional. When set to true, the response contains the job document. The default is false.
	IncludeJobDocument *bool `queryParam:"style=form,explode=true,name=includeJobDocument"`
	// The unique identifier assigned to this job when it was created.
	JobID string `pathParam:"style=simple,explode=false,name=jobId"`
	// The thing name associated with the device the job execution is running on.
	ThingName string `pathParam:"style=simple,explode=false,name=thingName"`
}

type DescribeJobExecutionResponse struct {
	// CertificateValidationException
	CertificateValidationException interface{}
	ContentType                    string
	// Success
	DescribeJobExecutionResponse *shared.DescribeJobExecutionResponse
	// InvalidRequestException
	InvalidRequestException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TerminalStateException
	TerminalStateException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
