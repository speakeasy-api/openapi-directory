// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VirtualMachineConfigNicTypeEnum - Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
type VirtualMachineConfigNicTypeEnum string

const (
	VirtualMachineConfigNicTypeEnumUnspecifiedNicType VirtualMachineConfigNicTypeEnum = "UNSPECIFIED_NIC_TYPE"
	VirtualMachineConfigNicTypeEnumVirtioNet          VirtualMachineConfigNicTypeEnum = "VIRTIO_NET"
	VirtualMachineConfigNicTypeEnumGvnic              VirtualMachineConfigNicTypeEnum = "GVNIC"
)

func (e VirtualMachineConfigNicTypeEnum) ToPointer() *VirtualMachineConfigNicTypeEnum {
	return &e
}

func (e *VirtualMachineConfigNicTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED_NIC_TYPE":
		fallthrough
	case "VIRTIO_NET":
		fallthrough
	case "GVNIC":
		*e = VirtualMachineConfigNicTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualMachineConfigNicTypeEnum: %v", v)
	}
}

// VirtualMachineConfigInput - The config settings for virtual machine.
type VirtualMachineConfigInput struct {
	// Definition of the types of hardware accelerators that can be used. Definition of the types of hardware accelerators that can be used. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `nvidia-tesla-k80` * `nvidia-tesla-p100` * `nvidia-tesla-v100` * `nvidia-tesla-p4` * `nvidia-tesla-t4` * `nvidia-tesla-a100`
	AcceleratorConfig *RuntimeAcceleratorConfig `json:"acceleratorConfig,omitempty"`
	// Definition of the boot image used by the Runtime. Used to facilitate runtime upgradeability.
	BootImage map[string]interface{} `json:"bootImage,omitempty"`
	// Optional. Use a list of container images to use as Kernels in the notebook instance.
	ContainerImages []ContainerImage `json:"containerImages,omitempty"`
	// A Local attached disk resource.
	DataDisk *LocalDiskInput `json:"dataDisk,omitempty"`
	// Represents a custom encryption key configuration that can be applied to a resource. This will encrypt all disks in Virtual Machine.
	EncryptionConfig *EncryptionConfig `json:"encryptionConfig,omitempty"`
	// Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.
	InternalIPOnly *bool `json:"internalIpOnly,omitempty"`
	// Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
	Labels map[string]string `json:"labels,omitempty"`
	// Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples: * `n1-standard-2` * `e2-standard-8`
	MachineType *string `json:"machineType,omitempty"`
	// Optional. The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata map[string]string `json:"metadata,omitempty"`
	// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither `network` nor `subnet` is specified, the "default" network of the project is used, if it exists. A full URL or partial URI. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default` * `projects/[project_id]/global/networks/default` Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations: * Google Managed Network (Network & subnet are empty) * Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. * Shared VPC (network & subnet are required). Requires configuring Private Service Access.
	Network *string `json:"network,omitempty"`
	// Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
	NicType *VirtualMachineConfigNicTypeEnum `json:"nicType,omitempty"`
	// Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned. Example: managed-notebooks-range-c PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \ --global \ --prefix-length=24 \ --description="Google Cloud Managed Notebooks Range 24 c" \ --network=$NETWORK \ --addresses=192.168.0.0 \ --purpose=VPC_PEERING Field value will be: `managed-notebooks-range-c`
	ReservedIPRange *string `json:"reservedIpRange,omitempty"`
	// A set of Shielded Instance options. Check [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.
	ShieldedInstanceConfig *RuntimeShieldedInstanceConfig `json:"shieldedInstanceConfig,omitempty"`
	// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0`
	Subnet *string `json:"subnet,omitempty"`
	// Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
	Tags []string `json:"tags,omitempty"`
}

// VirtualMachineConfig - The config settings for virtual machine.
type VirtualMachineConfig struct {
	// Definition of the types of hardware accelerators that can be used. Definition of the types of hardware accelerators that can be used. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `nvidia-tesla-k80` * `nvidia-tesla-p100` * `nvidia-tesla-v100` * `nvidia-tesla-p4` * `nvidia-tesla-t4` * `nvidia-tesla-a100`
	AcceleratorConfig *RuntimeAcceleratorConfig `json:"acceleratorConfig,omitempty"`
	// Definition of the boot image used by the Runtime. Used to facilitate runtime upgradeability.
	BootImage map[string]interface{} `json:"bootImage,omitempty"`
	// Optional. Use a list of container images to use as Kernels in the notebook instance.
	ContainerImages []ContainerImage `json:"containerImages,omitempty"`
	// A Local attached disk resource.
	DataDisk *LocalDisk `json:"dataDisk,omitempty"`
	// Represents a custom encryption key configuration that can be applied to a resource. This will encrypt all disks in Virtual Machine.
	EncryptionConfig *EncryptionConfig `json:"encryptionConfig,omitempty"`
	// Output only. The Compute Engine guest attributes. (see [Project and instance guest attributes](https://cloud.google.com/compute/docs/storing-retrieving-metadata#guest_attributes)).
	GuestAttributes map[string]string `json:"guestAttributes,omitempty"`
	// Optional. If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.
	InternalIPOnly *bool `json:"internalIpOnly,omitempty"`
	// Optional. The labels to associate with this runtime. Label **keys** must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). Label **values** may be empty, but, if present, must contain 1 to 63 characters, and must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
	Labels map[string]string `json:"labels,omitempty"`
	// Required. The Compute Engine machine type used for runtimes. Short name is valid. Examples: * `n1-standard-2` * `e2-standard-8`
	MachineType *string `json:"machineType,omitempty"`
	// Optional. The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
	Metadata map[string]string `json:"metadata,omitempty"`
	// Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither `network` nor `subnet` is specified, the "default" network of the project is used, if it exists. A full URL or partial URI. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default` * `projects/[project_id]/global/networks/default` Runtimes are managed resources inside Google Infrastructure. Runtimes support the following network configurations: * Google Managed Network (Network & subnet are empty) * Consumer Project VPC (network & subnet are required). Requires configuring Private Service Access. * Shared VPC (network & subnet are required). Requires configuring Private Service Access.
	Network *string `json:"network,omitempty"`
	// Optional. The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
	NicType *VirtualMachineConfigNicTypeEnum `json:"nicType,omitempty"`
	// Optional. Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range *name* if it's assigned. Example: managed-notebooks-range-c PEERING_RANGE_NAME_3=managed-notebooks-range-c gcloud compute addresses create $PEERING_RANGE_NAME_3 \ --global \ --prefix-length=24 \ --description="Google Cloud Managed Notebooks Range 24 c" \ --network=$NETWORK \ --addresses=192.168.0.0 \ --purpose=VPC_PEERING Field value will be: `managed-notebooks-range-c`
	ReservedIPRange *string `json:"reservedIpRange,omitempty"`
	// A set of Shielded Instance options. Check [Images using supported Shielded VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm). Not all combinations are valid.
	ShieldedInstanceConfig *RuntimeShieldedInstanceConfig `json:"shieldedInstanceConfig,omitempty"`
	// Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0`
	Subnet *string `json:"subnet,omitempty"`
	// Optional. The Compute Engine tags to add to runtime (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
	Tags []string `json:"tags,omitempty"`
	// Output only. The zone where the virtual machine is located. If using regional request, the notebooks service will pick a location in the corresponding runtime region. On a get request, zone will always be present. Example: * `us-central1-b`
	Zone *string `json:"zone,omitempty"`
}
