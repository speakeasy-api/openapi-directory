"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetConfiguredInvestmentProductPricesSecurity:
    
    api_secret_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-api-key' }})  
    
class GetConfiguredInvestmentProductPricesStatusEnum(str, Enum):
    r"""status of investment product. If empty will return all investment products."""
    ACTIVE = 'active'
    INACTIVE = 'inactive'


@dataclasses.dataclass
class GetConfiguredInvestmentProductPricesRequest:
    
    x_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'x-api-key', 'style': 'simple', 'explode': False }})
    r"""ApiSecretKey"""  
    page_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_number', 'style': 'form', 'explode': True }})
    r"""Page number for the query. This end-point has paginations capabilities. This value should be a positive integer value. If this is not provided, both page_size and page_number will be defaulted to 1000 and 1. Results are sorted decending order of the created date & time."""  
    page_size: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""Page size for the query. This end-point has paginations capabilities. This value should be a positive integer value. If this is not provided, both page_size and page_number will be defaulted to 1000 and 1. Results are sorted decending order of the created date & time."""  
    status: Optional[GetConfiguredInvestmentProductPricesStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""status of investment product. If empty will return all investment products."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetConfiguredInvestmentProductPrices500ApplicationJSON:
    r"""System error. Retry later. If the error persist, contact WOS support"""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""Human readable description of the error"""  
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_code'), 'exclude': lambda f: f is None }})
    r"""Optional error code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetConfiguredInvestmentProductPrices429ApplicationJSON:
    r"""You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support"""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""Human readable description of the error"""  
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_code'), 'exclude': lambda f: f is None }})
    r"""Optional error code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetConfiguredInvestmentProductPrices404ApplicationJSON:
    r"""The specified resource was not found"""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""Human readable description of the error"""  
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_code'), 'exclude': lambda f: f is None }})
    r"""Optional error code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetConfiguredInvestmentProductPrices403ApplicationJSON:
    r"""Your authentication information is missing or invalid. Please check the keys are properly set and its correct"""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""Human readable description of the error"""  
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_code'), 'exclude': lambda f: f is None }})
    r"""Optional error code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetConfiguredInvestmentProductPrices401ApplicationJSON:
    r"""You do not have permissions to access this resource."""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""Human readable description of the error"""  
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_code'), 'exclude': lambda f: f is None }})
    r"""Optional error code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetConfiguredInvestmentProductPrices200ApplicationJSONInvestmentProductUnitPrices:
    
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""Currency of the current price"""  
    current_price: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('current_price'), 'exclude': lambda f: f is None }})
    r"""Numeral string with two decimal point precision"""  
    investment_product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('investment_product_id'), 'exclude': lambda f: f is None }})  
    price_on_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_on_date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetConfiguredInvestmentProductPrices200ApplicationJSON:
    r"""success"""
    
    investment_product_unit_prices: list[GetConfiguredInvestmentProductPrices200ApplicationJSONInvestmentProductUnitPrices] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('investment_product_unit_prices') }})  
    next_page_available: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_available') }})
    r"""This indicates the availability of the next page"""  
    

@dataclasses.dataclass
class GetConfiguredInvestmentProductPricesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_configured_investment_product_prices_200_application_json_object: Optional[GetConfiguredInvestmentProductPrices200ApplicationJSON] = dataclasses.field(default=None)
    r"""success"""  
    get_configured_investment_product_prices_401_application_json_object: Optional[GetConfiguredInvestmentProductPrices401ApplicationJSON] = dataclasses.field(default=None)
    r"""You do not have permissions to access this resource."""  
    get_configured_investment_product_prices_403_application_json_object: Optional[GetConfiguredInvestmentProductPrices403ApplicationJSON] = dataclasses.field(default=None)
    r"""Your authentication information is missing or invalid. Please check the keys are properly set and its correct"""  
    get_configured_investment_product_prices_404_application_json_object: Optional[GetConfiguredInvestmentProductPrices404ApplicationJSON] = dataclasses.field(default=None)
    r"""The specified resource was not found"""  
    get_configured_investment_product_prices_429_application_json_object: Optional[GetConfiguredInvestmentProductPrices429ApplicationJSON] = dataclasses.field(default=None)
    r"""You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support"""  
    get_configured_investment_product_prices_500_application_json_object: Optional[GetConfiguredInvestmentProductPrices500ApplicationJSON] = dataclasses.field(default=None)
    r"""System error. Retry later. If the error persist, contact WOS support"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    