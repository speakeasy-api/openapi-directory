// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BankLevelEnum string

const (
	BankLevelEnumConfidential BankLevelEnum = "confidential"
	BankLevelEnumRegular      BankLevelEnum = "regular"
	BankLevelEnumPublic       BankLevelEnum = "public"
)

func (e *BankLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = BankLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BankLevelEnum: %s", s)
	}
}

// Bank - A bank folder
type Bank struct {
	About             *string        `json:"About,omitempty"`
	ArchivalDate      *string        `json:"ArchivalDate,omitempty"`
	Class             *string        `json:"Class,omitempty"`
	Comment           *string        `json:"Comment,omitempty"`
	ContractReference *string        `json:"ContractReference,omitempty"`
	Designation       *string        `json:"Designation,omitempty"`
	End               *string        `json:"End,omitempty"`
	Home              *bool          `json:"Home,omitempty"`
	ID                *string        `json:"Id,omitempty"`
	Keywords          []string       `json:"Keywords,omitempty"`
	Level             *BankLevelEnum `json:"Level,omitempty"`
	ModificationDate  *string        `json:"ModificationDate,omitempty"`
	Name              *string        `json:"Name,omitempty"`
	Parent            *string        `json:"Parent,omitempty"`
	Start             *string        `json:"Start,omitempty"`
}
