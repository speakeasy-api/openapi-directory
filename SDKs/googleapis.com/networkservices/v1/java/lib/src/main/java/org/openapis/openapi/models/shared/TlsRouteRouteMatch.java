/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TlsRouteRouteMatch - RouteMatch defines the predicate used to match requests to a given action. Multiple match types are "AND"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.
 */
public class TlsRouteRouteMatch {
    /**
     * Optional. ALPN (Application-Layer Protocol Negotiation) to match against. Examples: "http/1.1", "h2". At least one of sni_host and alpn is required. Up to 5 alpns across all matches can be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alpn")
    public String[] alpn;

    public TlsRouteRouteMatch withAlpn(String[] alpn) {
        this.alpn = alpn;
        return this;
    }
    
    /**
     * Optional. SNI (server name indicator) to match against. SNI will be matched against all wildcard domains, i.e. `www.example.com` will be first matched against `www.example.com`, then `*.example.com`, then `*.com.` Partial wildcards are not supported, and values like *w.example.com are invalid. At least one of sni_host and alpn is required. Up to 5 sni hosts across all matches can be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sniHost")
    public String[] sniHost;

    public TlsRouteRouteMatch withSniHost(String[] sniHost) {
        this.sniHost = sniHost;
        return this;
    }
    
    public TlsRouteRouteMatch(){}
}
