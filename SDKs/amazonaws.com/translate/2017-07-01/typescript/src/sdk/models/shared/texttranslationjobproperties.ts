/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InputDataConfig } from "./inputdataconfig";
import { JobDetails } from "./jobdetails";
import { JobStatusEnum } from "./jobstatusenum";
import { OutputDataConfig } from "./outputdataconfig";
import { TranslationSettings } from "./translationsettings";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides information about a translation job.
 */
export class TextTranslationJobProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataAccessRoleArn" })
  dataAccessRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataConfig" })
  @Type(() => InputDataConfig)
  inputDataConfig?: InputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "JobDetails" })
  @Type(() => JobDetails)
  jobDetails?: JobDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "JobId" })
  jobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobName" })
  jobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobStatus" })
  jobStatus?: JobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputDataConfig" })
  @Type(() => OutputDataConfig)
  outputDataConfig?: OutputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ParallelDataNames" })
  parallelDataNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Settings" })
  @Type(() => TranslationSettings)
  settings?: TranslationSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceLanguageCode" })
  sourceLanguageCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubmittedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submittedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TargetLanguageCodes" })
  targetLanguageCodes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "TerminologyNames" })
  terminologyNames?: string[];
}
