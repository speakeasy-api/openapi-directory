// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateDBInstanceReadReplicaActionEnum
type GETCreateDBInstanceReadReplicaActionEnum string

const (
	GETCreateDBInstanceReadReplicaActionEnumCreateDbInstanceReadReplica GETCreateDBInstanceReadReplicaActionEnum = "CreateDBInstanceReadReplica"
)

func (e GETCreateDBInstanceReadReplicaActionEnum) ToPointer() *GETCreateDBInstanceReadReplicaActionEnum {
	return &e
}

func (e *GETCreateDBInstanceReadReplicaActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateDBInstanceReadReplica":
		*e = GETCreateDBInstanceReadReplicaActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDBInstanceReadReplicaActionEnum: %v", v)
	}
}

// GETCreateDBInstanceReadReplicaVersionEnum
type GETCreateDBInstanceReadReplicaVersionEnum string

const (
	GETCreateDBInstanceReadReplicaVersionEnumTwoThousandAndThirteen0212 GETCreateDBInstanceReadReplicaVersionEnum = "2013-02-12"
)

func (e GETCreateDBInstanceReadReplicaVersionEnum) ToPointer() *GETCreateDBInstanceReadReplicaVersionEnum {
	return &e
}

func (e *GETCreateDBInstanceReadReplicaVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-02-12":
		*e = GETCreateDBInstanceReadReplicaVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDBInstanceReadReplicaVersionEnum: %v", v)
	}
}

type GETCreateDBInstanceReadReplicaRequest struct {
	Action                     GETCreateDBInstanceReadReplicaActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	AutoMinorVersionUpgrade    *bool                                     `queryParam:"style=form,explode=true,name=AutoMinorVersionUpgrade"`
	AvailabilityZone           *string                                   `queryParam:"style=form,explode=true,name=AvailabilityZone"`
	DBInstanceClass            *string                                   `queryParam:"style=form,explode=true,name=DBInstanceClass"`
	DBInstanceIdentifier       string                                    `queryParam:"style=form,explode=true,name=DBInstanceIdentifier"`
	Iops                       *int64                                    `queryParam:"style=form,explode=true,name=Iops"`
	OptionGroupName            *string                                   `queryParam:"style=form,explode=true,name=OptionGroupName"`
	Port                       *int64                                    `queryParam:"style=form,explode=true,name=Port"`
	PubliclyAccessible         *bool                                     `queryParam:"style=form,explode=true,name=PubliclyAccessible"`
	SourceDBInstanceIdentifier string                                    `queryParam:"style=form,explode=true,name=SourceDBInstanceIdentifier"`
	Version                    GETCreateDBInstanceReadReplicaVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm              *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateDBInstanceReadReplicaResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
