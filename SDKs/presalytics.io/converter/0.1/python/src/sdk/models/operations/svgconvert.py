"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class SvgconvertFileToConvertFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})  
    

@dataclasses.dataclass
class SvgconvertFileToConvert:
    r"""Fizepath to pptx file"""
    
    file: Optional[SvgconvertFileToConvertFile] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SvgconvertFileURL:
    r"""Url of svg file"""
    
    blob_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blob_name'), 'exclude': lambda f: f is None }})  
    blob_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blob_url'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class SvgconvertResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    file_url: Optional[SvgconvertFileURL] = dataclasses.field(default=None)
    r"""Url of svg file"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    