/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetInstanceMetricDataRequest {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;
    public GetInstanceMetricDataRequest withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonProperty("instanceName")
    public String instanceName;
    public GetInstanceMetricDataRequest withInstanceName(String instanceName) {
        this.instanceName = instanceName;
        return this;
    }
    
    @JsonProperty("metricName")
    public InstanceMetricNameEnum metricName;
    public GetInstanceMetricDataRequest withMetricName(InstanceMetricNameEnum metricName) {
        this.metricName = metricName;
        return this;
    }
    
    @JsonProperty("period")
    public Long period;
    public GetInstanceMetricDataRequest withPeriod(Long period) {
        this.period = period;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;
    public GetInstanceMetricDataRequest withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonProperty("statistics")
    public MetricStatisticEnum[] statistics;
    public GetInstanceMetricDataRequest withStatistics(MetricStatisticEnum[] statistics) {
        this.statistics = statistics;
        return this;
    }
    
    @JsonProperty("unit")
    public MetricUnitEnum unit;
    public GetInstanceMetricDataRequest withUnit(MetricUnitEnum unit) {
        this.unit = unit;
        return this;
    }
    
}
