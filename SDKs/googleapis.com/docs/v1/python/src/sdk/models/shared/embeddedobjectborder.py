"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from ..shared import optionalcolor as shared_optionalcolor
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EmbeddedObjectBorderDashStyleEnum(str, Enum):
    r"""The dash style of the border."""
    DASH_STYLE_UNSPECIFIED = 'DASH_STYLE_UNSPECIFIED'
    SOLID = 'SOLID'
    DOT = 'DOT'
    DASH = 'DASH'

class EmbeddedObjectBorderPropertyStateEnum(str, Enum):
    r"""The property state of the border property."""
    RENDERED = 'RENDERED'
    NOT_RENDERED = 'NOT_RENDERED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EmbeddedObjectBorder:
    r"""A border around an EmbeddedObject."""
    
    color: Optional[shared_optionalcolor.OptionalColor] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('color'), 'exclude': lambda f: f is None }})
    r"""A color that can either be fully opaque or fully transparent."""  
    dash_style: Optional[EmbeddedObjectBorderDashStyleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashStyle'), 'exclude': lambda f: f is None }})
    r"""The dash style of the border."""  
    property_state: Optional[EmbeddedObjectBorderPropertyStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyState'), 'exclude': lambda f: f is None }})
    r"""The property state of the border property."""  
    width: Optional[shared_dimension.Dimension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width'), 'exclude': lambda f: f is None }})
    r"""A magnitude in a single direction in the specified units."""  
    