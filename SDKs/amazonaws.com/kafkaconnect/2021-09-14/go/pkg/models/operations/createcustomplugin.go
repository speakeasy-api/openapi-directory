// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateCustomPluginRequestBodyContentTypeEnum - The type of the plugin file.
type CreateCustomPluginRequestBodyContentTypeEnum string

const (
	CreateCustomPluginRequestBodyContentTypeEnumJar CreateCustomPluginRequestBodyContentTypeEnum = "JAR"
	CreateCustomPluginRequestBodyContentTypeEnumZip CreateCustomPluginRequestBodyContentTypeEnum = "ZIP"
)

func (e *CreateCustomPluginRequestBodyContentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "JAR":
		fallthrough
	case "ZIP":
		*e = CreateCustomPluginRequestBodyContentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCustomPluginRequestBodyContentTypeEnum: %s", s)
	}
}

// CreateCustomPluginRequestBodyLocation - Information about the location of a custom plugin.
type CreateCustomPluginRequestBodyLocation struct {
	S3Location *shared.S3Location `json:"s3Location,omitempty"`
}

type CreateCustomPluginRequestBody struct {
	// The type of the plugin file.
	ContentType CreateCustomPluginRequestBodyContentTypeEnum `json:"contentType"`
	// A summary description of the custom plugin.
	Description *string `json:"description,omitempty"`
	// Information about the location of a custom plugin.
	Location CreateCustomPluginRequestBodyLocation `json:"location"`
	// The name of the custom plugin.
	Name string `json:"name"`
}

type CreateCustomPluginRequest struct {
	RequestBody       CreateCustomPluginRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateCustomPluginResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateCustomPluginResponse *shared.CreateCustomPluginResponse
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
