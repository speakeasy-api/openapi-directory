// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateParallelDataXAmzTargetEnum
type CreateParallelDataXAmzTargetEnum string

const (
	CreateParallelDataXAmzTargetEnumAwsShineFrontendService20170701CreateParallelData CreateParallelDataXAmzTargetEnum = "AWSShineFrontendService_20170701.CreateParallelData"
)

func (e *CreateParallelDataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSShineFrontendService_20170701.CreateParallelData":
		*e = CreateParallelDataXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateParallelDataXAmzTargetEnum: %s", s)
	}
}

type CreateParallelDataRequest struct {
	CreateParallelDataRequest shared.CreateParallelDataRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                CreateParallelDataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateParallelDataResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateParallelDataResponse *shared.CreateParallelDataResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// TooManyTagsException
	TooManyTagsException interface{}
}
