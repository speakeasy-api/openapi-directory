/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DetectMitigationActionExecutionStatusEnum } from "./detectmitigationactionexecutionstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 *  Describes which mitigation actions should be executed.
 */
export class DetectMitigationActionExecution extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "actionName" })
  actionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "errorCode" })
  errorCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "executionEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executionEndDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "executionStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executionStartDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: DetectMitigationActionExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "taskId" })
  taskId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thingName" })
  thingName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "violationId" })
  violationId?: string;
}
