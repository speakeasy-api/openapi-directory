"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import labeldescriptor as shared_labeldescriptor
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NotificationChannelDescriptorLaunchStageEnum(str, Enum):
    r"""The product launch stage for channels of this type."""
    LAUNCH_STAGE_UNSPECIFIED = 'LAUNCH_STAGE_UNSPECIFIED'
    UNIMPLEMENTED = 'UNIMPLEMENTED'
    PRELAUNCH = 'PRELAUNCH'
    EARLY_ACCESS = 'EARLY_ACCESS'
    ALPHA = 'ALPHA'
    BETA = 'BETA'
    GA = 'GA'
    DEPRECATED = 'DEPRECATED'

class NotificationChannelDescriptorSupportedTiersEnum(str, Enum):
    SERVICE_TIER_UNSPECIFIED = 'SERVICE_TIER_UNSPECIFIED'
    SERVICE_TIER_BASIC = 'SERVICE_TIER_BASIC'
    SERVICE_TIER_PREMIUM = 'SERVICE_TIER_PREMIUM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NotificationChannelDescriptor:
    r"""A description of a notification channel. The descriptor includes the properties of the channel and the set of labels or fields that must be specified to configure channels of a given type."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A human-readable description of the notification channel type. The description may include a description of the properties of the channel and pointers to external documentation."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""A human-readable name for the notification channel type. This form of the name is suitable for a user interface."""  
    labels: Optional[list[shared_labeldescriptor.LabelDescriptor]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""The set of labels that must be defined to identify a particular channel of the corresponding type. Each label includes a description for how that field should be populated."""  
    launch_stage: Optional[NotificationChannelDescriptorLaunchStageEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('launchStage'), 'exclude': lambda f: f is None }})
    r"""The product launch stage for channels of this type."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The full REST resource name for this descriptor. The format is: projects/[PROJECT_ID_OR_NUMBER]/notificationChannelDescriptors/[TYPE] In the above, [TYPE] is the value of the type field."""  
    supported_tiers: Optional[list[NotificationChannelDescriptorSupportedTiersEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportedTiers'), 'exclude': lambda f: f is None }})
    r"""The tiers that support this notification channel; the project service tier must be one of the supported_tiers."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of notification channel, such as \\"email\\" and \\"sms\\". To view the full list of channels, see Channel descriptors (https://cloud.google.com/monitoring/alerts/using-channels-api#ncd). Notification channel types are globally unique."""  
    