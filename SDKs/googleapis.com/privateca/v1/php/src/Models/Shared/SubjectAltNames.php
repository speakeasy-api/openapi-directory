<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SubjectAltNames - SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the "common name" in the distinguished name).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SubjectAltNames
{
    /**
     * Contains additional subject alternative name values. For each custom_san, the `value` field must contain an ASN.1 encoded UTF8String.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\X509Extension> $customSans
     */
	#[\JMS\Serializer\Annotation\SerializedName('customSans')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\X509Extension>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customSans = null;
    
    /**
     * Contains only valid, fully-qualified host names.
     * 
     * @var ?array<string> $dnsNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dnsNames = null;
    
    /**
     * Contains only valid RFC 2822 E-mail addresses.
     * 
     * @var ?array<string> $emailAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emailAddresses = null;
    
    /**
     * Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
     * 
     * @var ?array<string> $ipAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ipAddresses = null;
    
    /**
     * Contains only valid RFC 3986 URIs.
     * 
     * @var ?array<string> $uris
     */
	#[\JMS\Serializer\Annotation\SerializedName('uris')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $uris = null;
    
	public function __construct()
	{
		$this->customSans = null;
		$this->dnsNames = null;
		$this->emailAddresses = null;
		$this->ipAddresses = null;
		$this->uris = null;
	}
}
