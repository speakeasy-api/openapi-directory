/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostScrobbleEpisodesRequestBody extends SpeakeasyBase {
  /**
   * The TVmaze episode ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "episode_id" })
  episodeId?: number;

  /**
   * Epoch timestamp for when the user watched the episode, or 0 for unknown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marked_at" })
  markedAt?: number;

  /**
   * 0 for watched, 1 for acquired, 2 for skipped
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: any;
}

export class PostScrobbleEpisodesResponse extends SpeakeasyBase {
  /**
   * All episodes were succesfully marked
   */
  @SpeakeasyMetadata({ elemType: shared.BulkResponse })
  bulkResponse?: shared.BulkResponse[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
