// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetBng2latlongEastingNorthingRequest struct {
	// An OSGB36 (British National Grid) easting.
	Easting int64 `pathParam:"style=simple,explode=false,name=easting"`
	// An OSGB36 (British National Grid) northing.
	Northing int64 `pathParam:"style=simple,explode=false,name=northing"`
}

type GetBng2latlongEastingNorthing200ApplicationJSONStatusEnum string

const (
	GetBng2latlongEastingNorthing200ApplicationJSONStatusEnumOk    GetBng2latlongEastingNorthing200ApplicationJSONStatusEnum = "ok"
	GetBng2latlongEastingNorthing200ApplicationJSONStatusEnumError GetBng2latlongEastingNorthing200ApplicationJSONStatusEnum = "error"
)

func (e *GetBng2latlongEastingNorthing200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ok":
		fallthrough
	case "error":
		*e = GetBng2latlongEastingNorthing200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBng2latlongEastingNorthing200ApplicationJSONStatusEnum: %s", s)
	}
}

// GetBng2latlongEastingNorthing200ApplicationJSON - A JSON object containing the original easting and northing, and the converted latitude and longitude.
type GetBng2latlongEastingNorthing200ApplicationJSON struct {
	Easting   *int64                                                     `json:"easting,omitempty"`
	Error     *string                                                    `json:"error,omitempty"`
	Latitude  *float64                                                   `json:"latitude,omitempty"`
	Longitude *float64                                                   `json:"longitude,omitempty"`
	Northing  *int64                                                     `json:"northing,omitempty"`
	Status    *GetBng2latlongEastingNorthing200ApplicationJSONStatusEnum `json:"status,omitempty"`
}

type GetBng2latlongEastingNorthingResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A JSON object containing the original easting and northing, and the converted latitude and longitude.
	GetBng2latlongEastingNorthing200ApplicationJSONObject *GetBng2latlongEastingNorthing200ApplicationJSON
}
