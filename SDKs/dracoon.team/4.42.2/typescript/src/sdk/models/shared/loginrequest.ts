/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Authentication methods
 */
export enum LoginRequestAuthTypeEnum {
  Basic = "basic",
  ActiveDirectory = "active_directory",
  Radius = "radius",
}

/**
 * User credentials
 */
export class LoginRequest extends SpeakeasyBase {
  /**
   * Authentication methods
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authType" })
  authType?: LoginRequestAuthTypeEnum;

  /**
   * &#128679; Deprecated since v4.7.0
   *
   * @remarks
   *
   * Language ID or ISO 639-1 code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * &#128679; Deprecated since v4.7.0
   *
   * @remarks
   *
   * User login name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "login" })
  login?: string;

  /**
   * Password
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password: string;

  /**
   * For RADIUS Access-Challenge
   *
   * @remarks
   *
   * If a `replyState` is returned, it must be included as `state` in the following request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * RADIUS Token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;

  /**
   * &#128640; Since v4.13.0
   *
   * @remarks
   *
   * Username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userName" })
  userName?: string;
}
