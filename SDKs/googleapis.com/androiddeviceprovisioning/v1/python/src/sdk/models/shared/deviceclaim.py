"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeviceClaimAdditionalServiceEnum(str, Enum):
    r"""The Additional service registered for the device."""
    ADDITIONAL_SERVICE_UNSPECIFIED = 'ADDITIONAL_SERVICE_UNSPECIFIED'
    DEVICE_PROTECTION = 'DEVICE_PROTECTION'

class DeviceClaimSectionTypeEnum(str, Enum):
    r"""Output only. The type of claim made on the device."""
    SECTION_TYPE_UNSPECIFIED = 'SECTION_TYPE_UNSPECIFIED'
    SECTION_TYPE_SIM_LOCK = 'SECTION_TYPE_SIM_LOCK'
    SECTION_TYPE_ZERO_TOUCH = 'SECTION_TYPE_ZERO_TOUCH'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceClaim:
    r"""A record of a device claimed by a reseller for a customer. Devices claimed for zero-touch enrollment have a claim with the type `SECTION_TYPE_ZERO_TOUCH`. To learn more, read [Claim devices for customers](/zero-touch/guides/how-it-works#claim)."""
    
    additional_service: Optional[DeviceClaimAdditionalServiceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalService'), 'exclude': lambda f: f is None }})
    r"""The Additional service registered for the device."""  
    google_workspace_customer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('googleWorkspaceCustomerId'), 'exclude': lambda f: f is None }})
    r"""The ID of the Google Workspace account that owns the Chrome OS device."""  
    owner_company_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ownerCompanyId'), 'exclude': lambda f: f is None }})
    r"""The ID of the Customer that purchased the device."""  
    reseller_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resellerId'), 'exclude': lambda f: f is None }})
    r"""The ID of the reseller that claimed the device."""  
    section_type: Optional[DeviceClaimSectionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionType'), 'exclude': lambda f: f is None }})
    r"""Output only. The type of claim made on the device."""  
    vacation_mode_expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vacationModeExpireTime'), 'exclude': lambda f: f is None }})
    r"""The timestamp when the device will exit ‘vacation mode’. This value is present iff the device is in 'vacation mode'."""  
    vacation_mode_start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vacationModeStartTime'), 'exclude': lambda f: f is None }})
    r"""The timestamp when the device was put into ‘vacation mode’. This value is present iff the device is in 'vacation mode'."""  
    