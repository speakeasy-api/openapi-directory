/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * OK. Embargo for article
 */
export class ArticleEmbargo extends SpeakeasyBase {
  /**
   * Date when embargo lifts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_date" })
  embargoDate: string;

  /**
   * List of embargo permissions that are associated with the article. If the type is logged_in and the group_ids list is empty, then the whole institution can see the article; if there are multiple group_ids, then only users that are under those groups can see the article.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_options" })
  embargoOptions: Record<string, any>[];

  /**
   * Reason for embargo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_reason" })
  embargoReason: string;

  /**
   * Title for embargo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_title" })
  embargoTitle: string;

  /**
   * Embargo type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embargo_type" })
  embargoType: string;

  /**
   * True if embargoed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_embargoed" })
  isEmbargoed: boolean;
}
