// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BeezUPCommonColumnDataTypeEnum - Data type of the column, will be used for parsing and for consolidation proces
type BeezUPCommonColumnDataTypeEnum string

const (
	BeezUPCommonColumnDataTypeEnumString     BeezUPCommonColumnDataTypeEnum = "String"
	BeezUPCommonColumnDataTypeEnumURL        BeezUPCommonColumnDataTypeEnum = "Url"
	BeezUPCommonColumnDataTypeEnumText       BeezUPCommonColumnDataTypeEnum = "Text"
	BeezUPCommonColumnDataTypeEnumDecimal    BeezUPCommonColumnDataTypeEnum = "Decimal"
	BeezUPCommonColumnDataTypeEnumDateTime   BeezUPCommonColumnDataTypeEnum = "DateTime"
	BeezUPCommonColumnDataTypeEnumInt        BeezUPCommonColumnDataTypeEnum = "Int"
	BeezUPCommonColumnDataTypeEnumSpecialInt BeezUPCommonColumnDataTypeEnum = "SpecialInt"
	BeezUPCommonColumnDataTypeEnumInStock    BeezUPCommonColumnDataTypeEnum = "InStock"
	BeezUPCommonColumnDataTypeEnumUnknown    BeezUPCommonColumnDataTypeEnum = "Unknown"
	BeezUPCommonColumnDataTypeEnumImageURL   BeezUPCommonColumnDataTypeEnum = "ImageUrl"
)

func (e BeezUPCommonColumnDataTypeEnum) ToPointer() *BeezUPCommonColumnDataTypeEnum {
	return &e
}

func (e *BeezUPCommonColumnDataTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "String":
		fallthrough
	case "Url":
		fallthrough
	case "Text":
		fallthrough
	case "Decimal":
		fallthrough
	case "DateTime":
		fallthrough
	case "Int":
		fallthrough
	case "SpecialInt":
		fallthrough
	case "InStock":
		fallthrough
	case "Unknown":
		fallthrough
	case "ImageUrl":
		*e = BeezUPCommonColumnDataTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BeezUPCommonColumnDataTypeEnum: %v", v)
	}
}
