/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IntentConfirmationSetting - Provides a prompt for making sure that the user is ready for the intent to be fulfilled.
 */
public class IntentConfirmationSetting {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public IntentConfirmationSetting withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codeHook")
    public DialogCodeHookInvocationSetting codeHook;

    public IntentConfirmationSetting withCodeHook(DialogCodeHookInvocationSetting codeHook) {
        this.codeHook = codeHook;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confirmationConditional")
    public ConditionalSpecification confirmationConditional;

    public IntentConfirmationSetting withConfirmationConditional(ConditionalSpecification confirmationConditional) {
        this.confirmationConditional = confirmationConditional;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confirmationNextStep")
    public DialogState confirmationNextStep;

    public IntentConfirmationSetting withConfirmationNextStep(DialogState confirmationNextStep) {
        this.confirmationNextStep = confirmationNextStep;
        return this;
    }
    
    /**
     * Specifies a list of message groups that Amazon Lex uses to respond the user input.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confirmationResponse")
    public ResponseSpecification confirmationResponse;

    public IntentConfirmationSetting withConfirmationResponse(ResponseSpecification confirmationResponse) {
        this.confirmationResponse = confirmationResponse;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("declinationConditional")
    public ConditionalSpecification declinationConditional;

    public IntentConfirmationSetting withDeclinationConditional(ConditionalSpecification declinationConditional) {
        this.declinationConditional = declinationConditional;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("declinationNextStep")
    public DialogState declinationNextStep;

    public IntentConfirmationSetting withDeclinationNextStep(DialogState declinationNextStep) {
        this.declinationNextStep = declinationNextStep;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("declinationResponse")
    public ResponseSpecification declinationResponse;

    public IntentConfirmationSetting withDeclinationResponse(ResponseSpecification declinationResponse) {
        this.declinationResponse = declinationResponse;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("elicitationCodeHook")
    public ElicitationCodeHookInvocationSetting elicitationCodeHook;

    public IntentConfirmationSetting withElicitationCodeHook(ElicitationCodeHookInvocationSetting elicitationCodeHook) {
        this.elicitationCodeHook = elicitationCodeHook;
        return this;
    }
    
    /**
     * Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureConditional")
    public ConditionalSpecification failureConditional;

    public IntentConfirmationSetting withFailureConditional(ConditionalSpecification failureConditional) {
        this.failureConditional = failureConditional;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureNextStep")
    public DialogState failureNextStep;

    public IntentConfirmationSetting withFailureNextStep(DialogState failureNextStep) {
        this.failureNextStep = failureNextStep;
        return this;
    }
    
    /**
     * Specifies a list of message groups that Amazon Lex uses to respond the user input.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureResponse")
    public ResponseSpecification failureResponse;

    public IntentConfirmationSetting withFailureResponse(ResponseSpecification failureResponse) {
        this.failureResponse = failureResponse;
        return this;
    }
    
    @JsonProperty("promptSpecification")
    public PromptSpecification promptSpecification;

    public IntentConfirmationSetting withPromptSpecification(PromptSpecification promptSpecification) {
        this.promptSpecification = promptSpecification;
        return this;
    }
    
    public IntentConfirmationSetting(@JsonProperty("promptSpecification") PromptSpecification promptSpecification) {
        this.promptSpecification = promptSpecification;
  }
}
