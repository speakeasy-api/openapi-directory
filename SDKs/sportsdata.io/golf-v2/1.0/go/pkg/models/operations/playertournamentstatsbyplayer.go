// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PlayerTournamentStatsByPlayerFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PlayerTournamentStatsByPlayerFormatEnum string

const (
	PlayerTournamentStatsByPlayerFormatEnumXML  PlayerTournamentStatsByPlayerFormatEnum = "XML"
	PlayerTournamentStatsByPlayerFormatEnumJSON PlayerTournamentStatsByPlayerFormatEnum = "JSON"
)

func (e *PlayerTournamentStatsByPlayerFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = PlayerTournamentStatsByPlayerFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerTournamentStatsByPlayerFormatEnum: %s", s)
	}
}

type PlayerTournamentStatsByPlayerRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PlayerTournamentStatsByPlayerFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Player ID.
	// Example:<code>40000019</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
	// The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.
	Tournamentid string `pathParam:"style=simple,explode=false,name=tournamentid"`
}

type PlayerTournamentStatsByPlayerResponse struct {
	ContentType      string
	PlayerTournament *shared.PlayerTournament
	StatusCode       int
	RawResponse      *http.Response
}
