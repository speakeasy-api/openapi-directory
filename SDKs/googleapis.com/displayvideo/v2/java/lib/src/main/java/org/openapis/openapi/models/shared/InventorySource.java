/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InventorySource - An inventory source.
 */
public class InventorySource {
    /**
     * Whether the inventory source has a guaranteed or non-guaranteed delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commitment")
    public InventorySourceCommitmentEnum commitment;

    public InventorySource withCommitment(InventorySourceCommitmentEnum commitment) {
        this.commitment = commitment;
        return this;
    }
    
    /**
     * The creative requirements of the inventory source. Not applicable for auction packages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeConfigs")
    public CreativeConfig[] creativeConfigs;

    public InventorySource withCreativeConfigs(CreativeConfig[] creativeConfigs) {
        this.creativeConfigs = creativeConfigs;
        return this;
    }
    
    /**
     * The ID in the exchange space that uniquely identifies the inventory source. Must be unique across buyers within each exchange but not necessarily unique across exchanges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealId")
    public String dealId;

    public InventorySource withDealId(String dealId) {
        this.dealId = dealId;
        return this;
    }
    
    /**
     * The delivery method of the inventory source. * For non-guaranteed inventory sources, the only acceptable value is `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`. * For guaranteed inventory sources, acceptable values are `INVENTORY_SOURCE_DELIVERY_METHOD_TAG` and `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryMethod")
    public InventorySourceDeliveryMethodEnum deliveryMethod;

    public InventorySource withDeliveryMethod(InventorySourceDeliveryMethodEnum deliveryMethod) {
        this.deliveryMethod = deliveryMethod;
        return this;
    }
    
    /**
     * The display name of the inventory source. Must be UTF-8 encoded with a maximum size of 240 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public InventorySource withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The exchange to which the inventory source belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exchange")
    public InventorySourceExchangeEnum exchange;

    public InventorySource withExchange(InventorySourceExchangeEnum exchange) {
        this.exchange = exchange;
        return this;
    }
    
    /**
     * Immutable. The ID of the guaranteed order that this inventory source belongs to. Only applicable when commitment is `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("guaranteedOrderId")
    public String guaranteedOrderId;

    public InventorySource withGuaranteedOrderId(String guaranteedOrderId) {
        this.guaranteedOrderId = guaranteedOrderId;
        return this;
    }
    
    /**
     * Output only. The unique ID of the inventory source. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventorySourceId")
    public String inventorySourceId;

    public InventorySource withInventorySourceId(String inventorySourceId) {
        this.inventorySourceId = inventorySourceId;
        return this;
    }
    
    /**
     * Output only. The product type of the inventory source, denoting the way through which it sells inventory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventorySourceProductType")
    public InventorySourceInventorySourceProductTypeEnum inventorySourceProductType;

    public InventorySource withInventorySourceProductType(InventorySourceInventorySourceProductTypeEnum inventorySourceProductType) {
        this.inventorySourceProductType = inventorySourceProductType;
        return this;
    }
    
    /**
     * Denotes the type of the inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventorySourceType")
    public InventorySourceInventorySourceTypeEnum inventorySourceType;

    public InventorySource withInventorySourceType(InventorySourceInventorySourceTypeEnum inventorySourceType) {
        this.inventorySourceType = inventorySourceType;
        return this;
    }
    
    /**
     * Output only. The resource name of the inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public InventorySource withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The publisher/seller name of the inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publisherName")
    public String publisherName;

    public InventorySource withPublisherName(String publisherName) {
        this.publisherName = publisherName;
        return this;
    }
    
    /**
     * The rate related settings of the inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rateDetails")
    public RateDetails rateDetails;

    public InventorySource withRateDetails(RateDetails rateDetails) {
        this.rateDetails = rateDetails;
        return this;
    }
    
    /**
     * Output only. The IDs of advertisers with read-only access to the inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readAdvertiserIds")
    public String[] readAdvertiserIds;

    public InventorySource withReadAdvertiserIds(String[] readAdvertiserIds) {
        this.readAdvertiserIds = readAdvertiserIds;
        return this;
    }
    
    /**
     * Output only. The IDs of partners with read-only access to the inventory source. All advertisers of partners in this field inherit read-only access to the inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readPartnerIds")
    public String[] readPartnerIds;

    public InventorySource withReadPartnerIds(String[] readPartnerIds) {
        this.readPartnerIds = readPartnerIds;
        return this;
    }
    
    /**
     * The partner or advertisers with access to the inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readWriteAccessors")
    public InventorySourceAccessors readWriteAccessors;

    public InventorySource withReadWriteAccessors(InventorySourceAccessors readWriteAccessors) {
        this.readWriteAccessors = readWriteAccessors;
        return this;
    }
    
    /**
     * The status related settings of the inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public InventorySourceStatus status;

    public InventorySource withStatus(InventorySourceStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * Immutable. The unique ID of the sub-site property assigned to this inventory source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subSitePropertyId")
    public String subSitePropertyId;

    public InventorySource withSubSitePropertyId(String subSitePropertyId) {
        this.subSitePropertyId = subSitePropertyId;
        return this;
    }
    
    /**
     * A time range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeRange")
    public TimeRange timeRange;

    public InventorySource withTimeRange(TimeRange timeRange) {
        this.timeRange = timeRange;
        return this;
    }
    
    /**
     * Output only. The timestamp when the inventory source was last updated. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public InventorySource withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public InventorySource(){}
}
