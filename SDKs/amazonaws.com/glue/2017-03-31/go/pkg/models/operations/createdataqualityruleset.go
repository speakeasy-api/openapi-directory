// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateDataQualityRulesetXAmzTargetEnum
type CreateDataQualityRulesetXAmzTargetEnum string

const (
	CreateDataQualityRulesetXAmzTargetEnumAwsGlueCreateDataQualityRuleset CreateDataQualityRulesetXAmzTargetEnum = "AWSGlue.CreateDataQualityRuleset"
)

func (e CreateDataQualityRulesetXAmzTargetEnum) ToPointer() *CreateDataQualityRulesetXAmzTargetEnum {
	return &e
}

func (e *CreateDataQualityRulesetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.CreateDataQualityRuleset":
		*e = CreateDataQualityRulesetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDataQualityRulesetXAmzTargetEnum: %v", v)
	}
}

type CreateDataQualityRulesetRequest struct {
	CreateDataQualityRulesetRequest shared.CreateDataQualityRulesetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      CreateDataQualityRulesetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateDataQualityRulesetResponse struct {
	// AlreadyExistsException
	AlreadyExistsException interface{}
	ContentType            string
	// Success
	CreateDataQualityRulesetResponse *shared.CreateDataQualityRulesetResponse
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// ResourceNumberLimitExceededException
	ResourceNumberLimitExceededException interface{}
	StatusCode                           int
	RawResponse                          *http.Response
}
