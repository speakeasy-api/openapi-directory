/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class CreateBackupResponse {
    /**
     * BackupInUseException
     */
    
    public Object backupInUseException;
    public CreateBackupResponse withBackupInUseException(Object backupInUseException) {
        this.backupInUseException = backupInUseException;
        return this;
    }
    
    
    public String contentType;
    public CreateBackupResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * ContinuousBackupsUnavailableException
     */
    
    public Object continuousBackupsUnavailableException;
    public CreateBackupResponse withContinuousBackupsUnavailableException(Object continuousBackupsUnavailableException) {
        this.continuousBackupsUnavailableException = continuousBackupsUnavailableException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateBackupOutput createBackupOutput;
    public CreateBackupResponse withCreateBackupOutput(org.openapis.openapi.models.shared.CreateBackupOutput createBackupOutput) {
        this.createBackupOutput = createBackupOutput;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;
    public CreateBackupResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;
    public CreateBackupResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    
    public Integer statusCode;
    public CreateBackupResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public CreateBackupResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TableInUseException
     */
    
    public Object tableInUseException;
    public CreateBackupResponse withTableInUseException(Object tableInUseException) {
        this.tableInUseException = tableInUseException;
        return this;
    }
    
    /**
     * TableNotFoundException
     */
    
    public Object tableNotFoundException;
    public CreateBackupResponse withTableNotFoundException(Object tableNotFoundException) {
        this.tableNotFoundException = tableNotFoundException;
        return this;
    }
    
}
