// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type CreateAuditSuppressionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateAuditSuppressionRequestBodyResourceIdentifier - Information that identifies the noncompliant resource.
type CreateAuditSuppressionRequestBodyResourceIdentifier struct {
	Account                     *string                             `json:"account,omitempty"`
	CaCertificateID             *string                             `json:"caCertificateId,omitempty"`
	ClientID                    *string                             `json:"clientId,omitempty"`
	CognitoIdentityPoolID       *string                             `json:"cognitoIdentityPoolId,omitempty"`
	DeviceCertificateArn        *string                             `json:"deviceCertificateArn,omitempty"`
	DeviceCertificateID         *string                             `json:"deviceCertificateId,omitempty"`
	IamRoleArn                  *string                             `json:"iamRoleArn,omitempty"`
	IssuerCertificateIdentifier *shared.IssuerCertificateIdentifier `json:"issuerCertificateIdentifier,omitempty"`
	PolicyVersionIdentifier     *shared.PolicyVersionIdentifier     `json:"policyVersionIdentifier,omitempty"`
	RoleAliasArn                *string                             `json:"roleAliasArn,omitempty"`
}

type CreateAuditSuppressionRequestBody struct {
	// An audit check name. Checks must be enabled for your account. (Use <code>DescribeAccountAuditConfiguration</code> to see the list of all checks, including those that are enabled or use <code>UpdateAccountAuditConfiguration</code> to select which checks are enabled.)
	CheckName string `json:"checkName"`
	//  Each audit supression must have a unique client request token. If you try to create a new audit suppression with the same token as one that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request.
	ClientRequestToken string `json:"clientRequestToken"`
	//  The description of the audit suppression.
	Description *string `json:"description,omitempty"`
	//  The epoch timestamp in seconds at which this suppression expires.
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	// Information that identifies the noncompliant resource.
	ResourceIdentifier CreateAuditSuppressionRequestBodyResourceIdentifier `json:"resourceIdentifier"`
	//  Indicates whether a suppression should exist indefinitely or not.
	SuppressIndefinitely *bool `json:"suppressIndefinitely,omitempty"`
}

type CreateAuditSuppressionRequest struct {
	Headers CreateAuditSuppressionHeaders
	Request CreateAuditSuppressionRequestBody `request:"mediaType=application/json"`
}

type CreateAuditSuppressionResponse struct {
	ContentType string
	// Success
	CreateAuditSuppressionResponse map[string]interface{}
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
