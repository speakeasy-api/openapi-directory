// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// IdentificationDataTypeEnum - Type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity type.
//
// When providing ID numbers:
// * For **individual**, the `type` values can be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.
//
// When uploading photo IDs:
// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, or **passport**.
//
// When uploading other documents:
// * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**, **vatDocument**, **proofOfOrganizationTaxInfo**, **proofOfOwnership**, or **proofOfIndustry**.
//
// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, **passport**, **proofOfNationalIdNumber**, **proofOfResidency**, **proofOfIndustry**, or **proofOfIndividualTaxId**.
//
// * For **soleProprietorship**, the `type` values can be **constitutionalDocument**, **proofOfAddress**, or **proofOfIndustry**.
//
// * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
type IdentificationDataTypeEnum string

const (
	IdentificationDataTypeEnumBankStatement              IdentificationDataTypeEnum = "bankStatement"
	IdentificationDataTypeEnumDriversLicense             IdentificationDataTypeEnum = "driversLicense"
	IdentificationDataTypeEnumIdentityCard               IdentificationDataTypeEnum = "identityCard"
	IdentificationDataTypeEnumNationalIDNumber           IdentificationDataTypeEnum = "nationalIdNumber"
	IdentificationDataTypeEnumPassport                   IdentificationDataTypeEnum = "passport"
	IdentificationDataTypeEnumProofOfAddress             IdentificationDataTypeEnum = "proofOfAddress"
	IdentificationDataTypeEnumProofOfNationalIDNumber    IdentificationDataTypeEnum = "proofOfNationalIdNumber"
	IdentificationDataTypeEnumProofOfResidency           IdentificationDataTypeEnum = "proofOfResidency"
	IdentificationDataTypeEnumRegistrationDocument       IdentificationDataTypeEnum = "registrationDocument"
	IdentificationDataTypeEnumVatDocument                IdentificationDataTypeEnum = "vatDocument"
	IdentificationDataTypeEnumProofOfOrganizationTaxInfo IdentificationDataTypeEnum = "proofOfOrganizationTaxInfo"
	IdentificationDataTypeEnumProofOfIndustry            IdentificationDataTypeEnum = "proofOfIndustry"
	IdentificationDataTypeEnumConstitutionalDocument     IdentificationDataTypeEnum = "constitutionalDocument"
)

func (e *IdentificationDataTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "bankStatement":
		fallthrough
	case "driversLicense":
		fallthrough
	case "identityCard":
		fallthrough
	case "nationalIdNumber":
		fallthrough
	case "passport":
		fallthrough
	case "proofOfAddress":
		fallthrough
	case "proofOfNationalIdNumber":
		fallthrough
	case "proofOfResidency":
		fallthrough
	case "registrationDocument":
		fallthrough
	case "vatDocument":
		fallthrough
	case "proofOfOrganizationTaxInfo":
		fallthrough
	case "proofOfIndustry":
		fallthrough
	case "constitutionalDocument":
		*e = IdentificationDataTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for IdentificationDataTypeEnum: %s", s)
	}
}

type IdentificationData struct {
	// The card number of the document that was issued (AU only).
	CardNumber *string `json:"cardNumber,omitempty"`
	// The expiry date of the document, in YYYY-MM-DD format.
	ExpiryDate *string `json:"expiryDate,omitempty"`
	// The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the document was issued. For example, **US**.
	IssuerCountry *string `json:"issuerCountry,omitempty"`
	// The state or province where the document was issued (AU only).
	IssuerState *string `json:"issuerState,omitempty"`
	// Applies only to individuals in the US. Set to **true** if the individual does not have an SSN. To verify their identity, Adyen will require them to upload an ID document.
	NationalIDExempt *bool `json:"nationalIdExempt,omitempty"`
	// The number in the document.
	Number *string `json:"number,omitempty"`
	// Type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity type.
	//
	// When providing ID numbers:
	// * For **individual**, the `type` values can be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.
	//
	// When uploading photo IDs:
	// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, or **passport**.
	//
	// When uploading other documents:
	// * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**, **vatDocument**, **proofOfOrganizationTaxInfo**, **proofOfOwnership**, or **proofOfIndustry**.
	//
	// * For **individual**, the `type` values can be **identityCard**, **driversLicense**, **passport**, **proofOfNationalIdNumber**, **proofOfResidency**, **proofOfIndustry**, or **proofOfIndividualTaxId**.
	//
	// * For **soleProprietorship**, the `type` values can be **constitutionalDocument**, **proofOfAddress**, or **proofOfIndustry**.
	//
	// * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
	Type IdentificationDataTypeEnum `json:"type"`
}
