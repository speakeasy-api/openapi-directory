"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CampaignRequestFilters:
    
    attributes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributes'), 'exclude': lambda f: f is None }})  
    contacts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contacts'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})  
    
class CampaignRequestTriggerCodeEnum(str, Enum):
    r"""Campaign type specifies how it sources contacts and what event triggers its execution  Sort order
      * `M` - Manual
      * `S` - Scheduled
      * `FU` - File Upload
    """
    M = 'M'
    S = 'S'
    FU = 'FU'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CampaignRequestTrigger:
    
    code: Optional[CampaignRequestTriggerCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Campaign type specifies how it sources contacts and what event triggers its execution  Sort order
      * `M` - Manual
      * `S` - Scheduled
      * `FU` - File Upload
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CampaignRequest:
    
    filters: Optional[CampaignRequestFilters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filters'), 'exclude': lambda f: f is None }})  
    template: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('template'), 'exclude': lambda f: f is None }})  
    trigger: Optional[CampaignRequestTrigger] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trigger'), 'exclude': lambda f: f is None }})  
    