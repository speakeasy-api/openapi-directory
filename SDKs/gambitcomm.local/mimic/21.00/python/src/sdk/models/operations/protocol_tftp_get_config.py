"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import configtftp as shared_configtftp
from typing import Optional


@dataclasses.dataclass
class ProtocolTftpGetConfigRequest:
    
    agent_num: int = dataclasses.field(metadata={'path_param': { 'field_name': 'agentNum', 'style': 'simple', 'explode': False }})
    r"""Agent to show the TFTP configuration"""  
    

@dataclasses.dataclass
class ProtocolTftpGetConfigResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    config_tftp: Optional[shared_configtftp.ConfigTFTP] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    