/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Allotment } from "./allotment";
import { LicenseFormat } from "./licenseformat";
import { Price } from "./price";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Subscription information
 */
export class Subscription extends SpeakeasyBase {
  /**
   * An allotment of credits as part of a subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allotment" })
  @Type(() => Allotment)
  allotment?: Allotment;

  /**
   * Identifier for the type of assets associated with this subscription (images, videos, audio, editorial)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "asset_type" })
  assetType?: string;

  /**
   * Description of the subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Date the subscription ends
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiration_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationTime?: Date;

  /**
   * List of formats that are licensable for the subscription
   */
  @SpeakeasyMetadata({ elemType: LicenseFormat })
  @Expose({ name: "formats" })
  @Type(() => LicenseFormat)
  formats?: LicenseFormat[];

  /**
   * Unique internal identifier for the subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Internal identifier for the type of subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "license" })
  license?: string;

  /**
   * Subscription metadata; different for each customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, any>;

  /**
   * Price
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_per_download" })
  @Type(() => Price)
  pricePerDownload?: Price;
}
