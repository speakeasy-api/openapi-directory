/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The criteria to use in the filter that defines the archive rule. For more information on available filter keys, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-reference-filter-keys.html">IAM Access Analyzer filter keys</a>.
 */
export class Criterion extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "contains" })
  contains?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "eq" })
  eq?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "exists" })
  exists?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "neq" })
  neq?: string[];
}
