// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type LookupTypeTypeEnum string

const (
	LookupTypeTypeEnumGroup                          LookupTypeTypeEnum = "GROUP"
	LookupTypeTypeEnumMenu                           LookupTypeTypeEnum = "MENU"
	LookupTypeTypeEnumRole                           LookupTypeTypeEnum = "ROLE"
	LookupTypeTypeEnumCodeStandard                   LookupTypeTypeEnum = "CODE_STANDARD"
	LookupTypeTypeEnumCodeType                       LookupTypeTypeEnum = "CODE_TYPE"
	LookupTypeTypeEnumFeatureType                    LookupTypeTypeEnum = "FEATURE_TYPE"
	LookupTypeTypeEnumRelationshipType               LookupTypeTypeEnum = "RELATIONSHIP_TYPE"
	LookupTypeTypeEnumIdentifier                     LookupTypeTypeEnum = "IDENTIFIER"
	LookupTypeTypeEnumContactPointType               LookupTypeTypeEnum = "CONTACT_POINT_TYPE"
	LookupTypeTypeEnumStatisticType                  LookupTypeTypeEnum = "STATISTIC_TYPE"
	LookupTypeTypeEnumNewsType                       LookupTypeTypeEnum = "NEWS_TYPE"
	LookupTypeTypeEnumGender                         LookupTypeTypeEnum = "GENDER"
	LookupTypeTypeEnumIbdCrohnslocation              LookupTypeTypeEnum = "IBD_CROHNSLOCATION"
	LookupTypeTypeEnumIbdCrohnsproximalterminalileum LookupTypeTypeEnum = "IBD_CROHNSPROXIMALTERMINALILEUM"
	LookupTypeTypeEnumIbdCrohnsperianal              LookupTypeTypeEnum = "IBD_CROHNSPERIANAL"
	LookupTypeTypeEnumIbdCrohnsbehaviour             LookupTypeTypeEnum = "IBD_CROHNSBEHAVIOUR"
	LookupTypeTypeEnumIbdUcextent                    LookupTypeTypeEnum = "IBD_UCEXTENT"
	LookupTypeTypeEnumIbdEgimcomplication            LookupTypeTypeEnum = "IBD_EGIMCOMPLICATION"
	LookupTypeTypeEnumIbdSurgerymainprocedure        LookupTypeTypeEnum = "IBD_SURGERYMAINPROCEDURE"
	LookupTypeTypeEnumIbdSmokingstatus               LookupTypeTypeEnum = "IBD_SMOKINGSTATUS"
	LookupTypeTypeEnumIbdFamilyhistory               LookupTypeTypeEnum = "IBD_FAMILYHISTORY"
	LookupTypeTypeEnumLinkType                       LookupTypeTypeEnum = "LINK_TYPE"
)

func (e LookupTypeTypeEnum) ToPointer() *LookupTypeTypeEnum {
	return &e
}

func (e *LookupTypeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GROUP":
		fallthrough
	case "MENU":
		fallthrough
	case "ROLE":
		fallthrough
	case "CODE_STANDARD":
		fallthrough
	case "CODE_TYPE":
		fallthrough
	case "FEATURE_TYPE":
		fallthrough
	case "RELATIONSHIP_TYPE":
		fallthrough
	case "IDENTIFIER":
		fallthrough
	case "CONTACT_POINT_TYPE":
		fallthrough
	case "STATISTIC_TYPE":
		fallthrough
	case "NEWS_TYPE":
		fallthrough
	case "GENDER":
		fallthrough
	case "IBD_CROHNSLOCATION":
		fallthrough
	case "IBD_CROHNSPROXIMALTERMINALILEUM":
		fallthrough
	case "IBD_CROHNSPERIANAL":
		fallthrough
	case "IBD_CROHNSBEHAVIOUR":
		fallthrough
	case "IBD_UCEXTENT":
		fallthrough
	case "IBD_EGIMCOMPLICATION":
		fallthrough
	case "IBD_SURGERYMAINPROCEDURE":
		fallthrough
	case "IBD_SMOKINGSTATUS":
		fallthrough
	case "IBD_FAMILYHISTORY":
		fallthrough
	case "LINK_TYPE":
		*e = LookupTypeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LookupTypeTypeEnum: %v", v)
	}
}

type LookupType struct {
	Created     *time.Time          `json:"created,omitempty"`
	Description *string             `json:"description,omitempty"`
	ID          *int64              `json:"id,omitempty"`
	LastUpdate  *time.Time          `json:"lastUpdate,omitempty"`
	Type        *LookupTypeTypeEnum `json:"type,omitempty"`
}
