"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resourcefile as shared_resourcefile
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MultiInstanceSettings:
    r"""Information about the settings required for multi-instance task."""
    
    number_of_instances: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfInstances') }})
    r"""Gets or sets the number of compute node instances used for multi-instance task."""  
    common_resource_files: Optional[list[shared_resourcefile.ResourceFile]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commonResourceFiles'), 'exclude': lambda f: f is None }})
    r"""Gets or sets a list of files that Batch will download on all subtasks."""  
    coordination_command_line: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('coordinationCommandLine'), 'exclude': lambda f: f is None }})
    r"""Gets or sets the command to be run on the compute node instances to setup coordination among the subtasks."""  
    