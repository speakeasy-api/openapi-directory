/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceIdentifier } from "./resourceidentifier";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The current status of the season
 */
export enum SeasonAttributesStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class SeasonAttributes extends SpeakeasyBase {
  /**
   * This will be replaced by the relationship `cascaded_cover_image` in a future update.<br/>
   *
   * @remarks
   * The image ID of the cover art for this season. If there is no specific cover for the season,
   * the image ID of the series' cover art will be returned.
   * The `/images` endpoint provideds details to the image.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cascaded_cover_image_id" })
  cascadedCoverImageId?: string;

  /**
   * This will be replaced by the relationship `cover_image` in a future update.<br/>
   *
   * @remarks
   * The image ID of the cover art for this season. The `/images` endpoint provideds details to the image.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cover_image_id" })
  coverImageId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The description of the season eventually in HTML format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Determines whether `description` is in HTML format or plain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description_is_html" })
  descriptionIsHtml?: boolean;

  /**
   * The description with all HTML markup removed. If the description does not contain markup
   *
   * @remarks
   * this is identitcal to `description`.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description_plain" })
  descriptionPlain?: string;

  /**
   * This will be replaced by the relationship `first_released_episode` in a future update.<br/>
   *
   * @remarks
   * The ID of the first released episode within the season
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_released_episode_id" })
  firstReleasedEpisodeId?: string;

  /**
   * This will be replaced by the relationship `last_released_episode` in a future update.<br/>
   *
   * @remarks
   * The ID of the most recently released episode within the season
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_released_episode_id" })
  lastReleasedEpisodeId?: string;

  /**
   * The number of the season. This could be `null` as well.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "season_number" })
  seasonNumber?: number;

  /**
   * The title of the season modified for sorting. This converts all characters to
   *
   * @remarks
   * lower case, removes an eventually leading `The` as well as leading and trailling whitespace characters.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sort_title" })
  sortTitle?: string;

  /**
   * The current status of the season
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: SeasonAttributesStatusEnum;

  /**
   * The title of the season
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

/**
 * The cover art for this season. If there is no specific cover for the season,
 *
 * @remarks
 * the cover image of the series' cover art will be returned.
 * The `/images` endpoint provideds details to the image.
 *
 */
export class SeasonRelationshipsCascadedCoverImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class SeasonRelationshipsAListOfClassificationsAssociatedWithTheSeason extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ResourceIdentifier })
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier[];
}

/**
 * The cover image for the season
 */
export class SeasonRelationshipsCoverImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class SeasonRelationshipsAListOfCreditsGivenToPeopleInTheSeason extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ResourceIdentifier })
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier[];
}

export class SeasonRelationshipsAListOfPublishedAndReleasedEpisodesWithAnActualMediaFileWithinTheSeason extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ResourceIdentifier })
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier[];
}

/**
 * The first released episode within the season
 */
export class SeasonRelationshipsFirstReleasedEpisode extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class SeasonRelationshipsBothTheCoverImageAndTheCascadedCoverImageForTheSeason extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ResourceIdentifier })
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier[];
}

/**
 * The most recently released episode within the season
 */
export class SeasonRelationshipsLastReleasedEpisode extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class SeasonRelationshipsTheSeriesTheSeasonBelongsTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class SeasonRelationshipsAListOfAssociationsLinkingTagsToTheSeason extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ResourceIdentifier })
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier[];
}

export class SeasonRelationshipsAListOfTagsAssociatedWithTheSeason extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ResourceIdentifier })
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier[];
}

export class SeasonRelationships extends SpeakeasyBase {
  /**
   * The cover art for this season. If there is no specific cover for the season,
   *
   * @remarks
   * the cover image of the series' cover art will be returned.
   * The `/images` endpoint provideds details to the image.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cascaded_cover_image" })
  @Type(() => SeasonRelationshipsCascadedCoverImage)
  cascadedCoverImage?: SeasonRelationshipsCascadedCoverImage;

  @SpeakeasyMetadata()
  @Expose({ name: "classification_inclusions" })
  @Type(() => SeasonRelationshipsAListOfClassificationsAssociatedWithTheSeason)
  classificationInclusions?: SeasonRelationshipsAListOfClassificationsAssociatedWithTheSeason;

  /**
   * The cover image for the season
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cover_image" })
  @Type(() => SeasonRelationshipsCoverImage)
  coverImage?: SeasonRelationshipsCoverImage;

  @SpeakeasyMetadata()
  @Expose({ name: "credits" })
  @Type(() => SeasonRelationshipsAListOfCreditsGivenToPeopleInTheSeason)
  credits?: SeasonRelationshipsAListOfCreditsGivenToPeopleInTheSeason;

  @SpeakeasyMetadata()
  @Expose({ name: "episodes" })
  @Type(
    () =>
      SeasonRelationshipsAListOfPublishedAndReleasedEpisodesWithAnActualMediaFileWithinTheSeason
  )
  episodes?: SeasonRelationshipsAListOfPublishedAndReleasedEpisodesWithAnActualMediaFileWithinTheSeason;

  /**
   * The first released episode within the season
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_released_episode" })
  @Type(() => SeasonRelationshipsFirstReleasedEpisode)
  firstReleasedEpisode?: SeasonRelationshipsFirstReleasedEpisode;

  @SpeakeasyMetadata()
  @Expose({ name: "images" })
  @Type(
    () =>
      SeasonRelationshipsBothTheCoverImageAndTheCascadedCoverImageForTheSeason
  )
  images?: SeasonRelationshipsBothTheCoverImageAndTheCascadedCoverImageForTheSeason;

  /**
   * The most recently released episode within the season
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_released_episode" })
  @Type(() => SeasonRelationshipsLastReleasedEpisode)
  lastReleasedEpisode?: SeasonRelationshipsLastReleasedEpisode;

  @SpeakeasyMetadata()
  @Expose({ name: "series" })
  @Type(() => SeasonRelationshipsTheSeriesTheSeasonBelongsTo)
  series?: SeasonRelationshipsTheSeriesTheSeasonBelongsTo;

  @SpeakeasyMetadata()
  @Expose({ name: "taggings" })
  @Type(() => SeasonRelationshipsAListOfAssociationsLinkingTagsToTheSeason)
  taggings?: SeasonRelationshipsAListOfAssociationsLinkingTagsToTheSeason;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  @Type(() => SeasonRelationshipsAListOfTagsAssociatedWithTheSeason)
  tags?: SeasonRelationshipsAListOfTagsAssociatedWithTheSeason;
}

export class Season extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => SeasonAttributes)
  attributes?: SeasonAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => SeasonRelationships)
  relationships?: SeasonRelationships;

  /**
   * The type of resource. This is always `seasons`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
