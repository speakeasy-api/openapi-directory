// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FundingEventTypeEnum string

const (
	FundingEventTypeEnumPayorFundingDetected            FundingEventTypeEnum = "PAYOR_FUNDING_DETECTED"
	FundingEventTypeEnumPayorFundingRequested           FundingEventTypeEnum = "PAYOR_FUNDING_REQUESTED"
	FundingEventTypeEnumPayorFundingReturnReceived      FundingEventTypeEnum = "PAYOR_FUNDING_RETURN_RECEIVED"
	FundingEventTypeEnumFundingReturnDetected           FundingEventTypeEnum = "FUNDING_RETURN_DETECTED"
	FundingEventTypeEnumPayorFundingRequestSubmitted    FundingEventTypeEnum = "PAYOR_FUNDING_REQUEST_SUBMITTED"
	FundingEventTypeEnumPayorFundingEntryDetailReceived FundingEventTypeEnum = "PAYOR_FUNDING_ENTRY_DETAIL_RECEIVED"
	FundingEventTypeEnumFundingDeallocated              FundingEventTypeEnum = "FUNDING_DEALLOCATED"
)

func (e *FundingEventTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PAYOR_FUNDING_DETECTED":
		fallthrough
	case "PAYOR_FUNDING_REQUESTED":
		fallthrough
	case "PAYOR_FUNDING_RETURN_RECEIVED":
		fallthrough
	case "FUNDING_RETURN_DETECTED":
		fallthrough
	case "PAYOR_FUNDING_REQUEST_SUBMITTED":
		fallthrough
	case "PAYOR_FUNDING_ENTRY_DETAIL_RECEIVED":
		fallthrough
	case "FUNDING_DEALLOCATED":
		*e = FundingEventTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FundingEventTypeEnum: %s", s)
	}
}
