<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ResourcePolicyVmMaintenancePolicy
{
    /**
     * A concurrency control configuration. Defines a group config that, when attached to an instance, recognizes that instance as part of a group of instances where only up the concurrency_limit of instances in that group can undergo simultaneous maintenance. For more information: go/concurrency-control-design-doc
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResourcePolicyVmMaintenancePolicyConcurrencyControl $concurrencyControlGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('concurrencyControlGroup')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResourcePolicyVmMaintenancePolicyConcurrencyControl')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResourcePolicyVmMaintenancePolicyConcurrencyControl $concurrencyControlGroup = null;
    
    /**
     * A maintenance window for VMs. When set, we restrict our maintenance operations to this window.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResourcePolicyVmMaintenancePolicyMaintenanceWindow $maintenanceWindow
     */
	#[\JMS\Serializer\Annotation\SerializedName('maintenanceWindow')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResourcePolicyVmMaintenancePolicyMaintenanceWindow')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResourcePolicyVmMaintenancePolicyMaintenanceWindow $maintenanceWindow = null;
    
	public function __construct()
	{
		$this->concurrencyControlGroup = null;
		$this->maintenanceWindow = null;
	}
}
