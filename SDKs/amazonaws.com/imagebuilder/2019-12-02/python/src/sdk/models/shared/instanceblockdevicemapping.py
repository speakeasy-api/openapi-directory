"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ebsinstanceblockdevicespecification as shared_ebsinstanceblockdevicespecification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InstanceBlockDeviceMapping:
    r"""Defines block device mappings for the instance used to configure your image."""
    
    device_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceName'), 'exclude': lambda f: f is None }})  
    ebs: Optional[shared_ebsinstanceblockdevicespecification.EbsInstanceBlockDeviceSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ebs'), 'exclude': lambda f: f is None }})  
    no_device: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noDevice'), 'exclude': lambda f: f is None }})  
    virtual_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtualName'), 'exclude': lambda f: f is None }})  
    