/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETAuthorizeClientVpnIngressQueryParams {
    /**
     * The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if &lt;code&gt;AuthorizeAllGroups&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt; or not specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AccessGroupId")
    public String accessGroupId;
    public GETAuthorizeClientVpnIngressQueryParams withAccessGroupId(String accessGroupId) {
        this.accessGroupId = accessGroupId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETAuthorizeClientVpnIngressActionEnum action;
    public GETAuthorizeClientVpnIngressQueryParams withAction(GETAuthorizeClientVpnIngressActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Indicates whether to grant access to all clients. Specify &lt;code&gt;true&lt;/code&gt; to grant all clients who successfully establish a VPN connection access to the network. Must be set to &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;AccessGroupId&lt;/code&gt; is not specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AuthorizeAllGroups")
    public Boolean authorizeAllGroups;
    public GETAuthorizeClientVpnIngressQueryParams withAuthorizeAllGroups(Boolean authorizeAllGroups) {
        this.authorizeAllGroups = authorizeAllGroups;
        return this;
    }
    
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html"&gt;How to ensure idempotency&lt;/a&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientToken")
    public String clientToken;
    public GETAuthorizeClientVpnIngressQueryParams withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The ID of the Client VPN endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientVpnEndpointId")
    public String clientVpnEndpointId;
    public GETAuthorizeClientVpnIngressQueryParams withClientVpnEndpointId(String clientVpnEndpointId) {
        this.clientVpnEndpointId = clientVpnEndpointId;
        return this;
    }
    
    /**
     * A brief description of the authorization rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Description")
    public String description;
    public GETAuthorizeClientVpnIngressQueryParams withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETAuthorizeClientVpnIngressQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The IPv4 address range, in CIDR notation, of the network for which access is being authorized.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TargetNetworkCidr")
    public String targetNetworkCidr;
    public GETAuthorizeClientVpnIngressQueryParams withTargetNetworkCidr(String targetNetworkCidr) {
        this.targetNetworkCidr = targetNetworkCidr;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETAuthorizeClientVpnIngressVersionEnum version;
    public GETAuthorizeClientVpnIngressQueryParams withVersion(GETAuthorizeClientVpnIngressVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
