// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContentSubmoduleLinks struct {
	Git  string `json:"git"`
	HTML string `json:"html"`
	Self string `json:"self"`
}

type ContentSubmoduleTypeEnum string

const (
	ContentSubmoduleTypeEnumSubmodule ContentSubmoduleTypeEnum = "submodule"
)

func (e ContentSubmoduleTypeEnum) ToPointer() *ContentSubmoduleTypeEnum {
	return &e
}

func (e *ContentSubmoduleTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "submodule":
		*e = ContentSubmoduleTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentSubmoduleTypeEnum: %v", v)
	}
}

// ContentSubmodule - An object describing a submodule
type ContentSubmodule struct {
	Links           ContentSubmoduleLinks    `json:"_links"`
	DownloadURL     string                   `json:"download_url"`
	GitURL          string                   `json:"git_url"`
	HTMLURL         string                   `json:"html_url"`
	Name            string                   `json:"name"`
	Path            string                   `json:"path"`
	Sha             string                   `json:"sha"`
	Size            int64                    `json:"size"`
	SubmoduleGitURL string                   `json:"submodule_git_url"`
	Type            ContentSubmoduleTypeEnum `json:"type"`
	URL             string                   `json:"url"`
}
