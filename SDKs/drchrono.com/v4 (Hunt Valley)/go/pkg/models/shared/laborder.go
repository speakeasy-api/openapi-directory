// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LabOrderIcd10Code struct {
	// The numeric ICD-10 code
	Code *string `json:"code,omitempty"`
	// Short description  of the ICD-10 code
	Description *string `json:"description,omitempty"`
}

// LabOrderPriorityEnum - `"Normal"` or `"STAT"`. Default `"Normal"`
type LabOrderPriorityEnum string

const (
	LabOrderPriorityEnumN LabOrderPriorityEnum = "N"
	LabOrderPriorityEnumS LabOrderPriorityEnum = "S"
)

func (e *LabOrderPriorityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "N":
		fallthrough
	case "S":
		*e = LabOrderPriorityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LabOrderPriorityEnum: %s", s)
	}
}

// LabOrder - Created
type LabOrder struct {
	// For external use only
	AccessionNumber *string `json:"accession_number,omitempty"`
	Doctor          int64   `json:"doctor"`
	// Associated `/lab_documents` objects
	Documents []string `json:"documents,omitempty"`
	// ICD-10 codes of the conditions which the tests concerns.
	Icd10Codes []LabOrderIcd10Code `json:"icd10_codes,omitempty"`
	ID         *int64              `json:"id,omitempty"`
	Notes      *string             `json:"notes,omitempty"`
	Patient    int64               `json:"patient"`
	// `"Normal"` or `"STAT"`. Default `"Normal"`
	Priority *LabOrderPriorityEnum `json:"priority,omitempty"`
	// The ID printed on the requisition PDF. Generally the same as id.
	RequisitionID *string `json:"requisition_id,omitempty"`
	// Equivalent to HL7's ORC.5. Defaults to `"N"`.
	// Value | Notes
	// ----- | -----
	// `"N"` | not sent                                          |
	// `"Q"` | queued for processing                             |
	// `"A"` | `ABN (Advance Beneficiary Notice)` required       |
	// `"S"` | send                                              |
	// `"R"` | results received                                  |
	// `"E"` | error                                             |
	//
	Status *string `json:"status,omitempty"`
	Sublab int64   `json:"sublab"`
	// Time at which the order was submitted. Defaults to now
	Timestamp *string `json:"timestamp,omitempty"`
}
