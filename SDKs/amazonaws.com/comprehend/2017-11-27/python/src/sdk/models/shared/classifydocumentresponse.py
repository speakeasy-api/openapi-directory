"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import documentclass as shared_documentclass
from ..shared import documentlabel as shared_documentlabel
from ..shared import documentmetadata as shared_documentmetadata
from ..shared import documenttypelistitem as shared_documenttypelistitem
from ..shared import errorslistitem as shared_errorslistitem
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClassifyDocumentResponse:
    r"""Success"""
    
    classes: Optional[list[shared_documentclass.DocumentClass]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Classes'), 'exclude': lambda f: f is None }})  
    document_metadata: Optional[shared_documentmetadata.DocumentMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentMetadata'), 'exclude': lambda f: f is None }})  
    document_type: Optional[list[shared_documenttypelistitem.DocumentTypeListItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentType'), 'exclude': lambda f: f is None }})  
    errors: Optional[list[shared_errorslistitem.ErrorsListItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Errors'), 'exclude': lambda f: f is None }})  
    labels: Optional[list[shared_documentlabel.DocumentLabel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Labels'), 'exclude': lambda f: f is None }})  
    