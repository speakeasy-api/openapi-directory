"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceInPast:
    r"""Container Class for the Web API. Conatinas the MeterValues in the Past"""
    
    counter_reading: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReading'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading (Total Energy used)"""  
    counter_reading_export: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingExport'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Export"""  
    counter_reading_export_t1: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingExportT1'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Export Tariff 1"""  
    counter_reading_export_t2: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingExportT2'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Export Tariff 2"""  
    counter_reading_export_t3: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingExportT3'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Export Tariff 3"""  
    counter_reading_export_t4: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingExportT4'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Export Tariff 4"""  
    counter_reading_import: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingImport'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Import"""  
    counter_reading_import_t1: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingImportT1'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Import Tariff 1"""  
    counter_reading_import_t2: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingImportT2'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Import Tariff 2"""  
    counter_reading_import_t3: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingImportT3'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Import Tariff 3"""  
    counter_reading_import_t4: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingImportT4'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Import Tariff 4"""  
    counter_reading_t1: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingT1'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Tariff 1"""  
    counter_reading_t2: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingT2'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Tariff 2"""  
    counter_reading_t3: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingT3'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Tariff 3"""  
    counter_reading_t4: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingT4'), 'exclude': lambda f: f is None }})
    r"""The Meter Counter Reading Tariff 4"""  
    counter_reading_unit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CounterReadingUnit'), 'exclude': lambda f: f is None }})
    r"""The Unit of the Counter Reading"""  
    date_: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Date'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The Date of the Values"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""The ID of the device"""  
    serial: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Serial'), 'exclude': lambda f: f is None }})
    r"""The Serial number"""  
    