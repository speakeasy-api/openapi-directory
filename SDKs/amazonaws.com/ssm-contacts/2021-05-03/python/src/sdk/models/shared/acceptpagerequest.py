"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import acceptcodevalidation_enum as shared_acceptcodevalidation_enum
from ..shared import accepttype_enum as shared_accepttype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AcceptPageRequest:
    
    accept_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceptCode') }})  
    accept_type: shared_accepttype_enum.AcceptTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceptType') }})  
    page_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PageId') }})  
    accept_code_validation: Optional[shared_acceptcodevalidation_enum.AcceptCodeValidationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceptCodeValidation'), 'exclude': lambda f: f is None }})  
    contact_channel_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContactChannelId'), 'exclude': lambda f: f is None }})  
    note: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Note'), 'exclude': lambda f: f is None }})  
    