<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudRecommenderV1Operation - Contains an operation for a resource loosely based on the JSON-PATCH format with support for: * Custom filters for describing partial array patch. * Extended path values for describing nested arrays. * Custom fields for describing the resource for which the operation is being described. * Allows extension to custom operations not natively supported by RFC6902. See https://tools.ietf.org/html/rfc6902 for details on the original RFC.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudRecommenderV1Operation
{
    /**
     * Type of this operation. Contains one of 'add', 'remove', 'replace', 'move', 'copy', 'test' and custom operations. This field is case-insensitive and always populated.
     * 
     * @var ?string $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $action = null;
    
    /**
     * Path to the target field being operated on. If the operation is at the resource level, then path should be "/". This field is always populated.
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * Set of filters to apply if `path` refers to array elements or nested array elements in order to narrow down to a single unique element that is being tested/modified. This is intended to be an exact match per filter. To perform advanced matching, use path_value_matchers. * Example: ``` { "/versions/* /name" : "it-123" "/versions/* /targetSize/percent": 20 } ``` * Example: ``` { "/bindings/* /role": "roles/owner" "/bindings/* /condition" : null } ``` * Example: ``` { "/bindings/* /role": "roles/owner" "/bindings/* /members/*" : ["x@example.com", "y@example.com"] } ``` When both path_filters and path_value_matchers are set, an implicit AND must be performed.
     * 
     * @var ?array<string, mixed> $pathFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('pathFilters')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $pathFilters = null;
    
    /**
     * Similar to path_filters, this contains set of filters to apply if `path` field refers to array elements. This is meant to support value matching beyond exact match. To perform exact match, use path_filters. When both path_filters and path_value_matchers are set, an implicit AND must be performed.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecommenderV1ValueMatcher> $pathValueMatchers
     */
	#[\JMS\Serializer\Annotation\SerializedName('pathValueMatchers')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecommenderV1ValueMatcher>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $pathValueMatchers = null;
    
    /**
     * Contains the fully qualified resource name. This field is always populated. ex: //cloudresourcemanager.googleapis.com/projects/foo.
     * 
     * @var ?string $resource
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resource = null;
    
    /**
     * Type of GCP resource being modified/tested. This field is always populated. Example: cloudresourcemanager.googleapis.com/Project, compute.googleapis.com/Instance
     * 
     * @var ?string $resourceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('resourceType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resourceType = null;
    
    /**
     * Can be set with action 'copy' or 'move' to indicate the source field within resource or source_resource, ignored if provided for other operation types.
     * 
     * @var ?string $sourcePath
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourcePath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourcePath = null;
    
    /**
     * Can be set with action 'copy' to copy resource configuration across different resources of the same type. Example: A resource clone can be done via action = 'copy', path = "/", from = "/", source_resource = and resource_name = . This field is empty for all other values of `action`.
     * 
     * @var ?string $sourceResource
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceResource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceResource = null;
    
    /**
     * Value for the `path` field. Will be set for actions:'add'/'replace'. Maybe set for action: 'test'. Either this or `value_matcher` will be set for 'test' operation. An exact match must be performed.
     * 
     * @var mixed $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $value = null;
    
    /**
     * Contains various matching options for values for a GCP resource field.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecommenderV1ValueMatcher $valueMatcher
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueMatcher')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecommenderV1ValueMatcher')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRecommenderV1ValueMatcher $valueMatcher = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->path = null;
		$this->pathFilters = null;
		$this->pathValueMatchers = null;
		$this->resource = null;
		$this->resourceType = null;
		$this->sourcePath = null;
		$this->sourceResource = null;
		$this->value = null;
		$this->valueMatcher = null;
	}
}
