/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class NewsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=query",
  })
  query: string;
}

export class News200ApplicationJSONEntries extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "guidislink" })
  guidislink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "published" })
  published?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "published_parsed" })
  publishedParsed?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sub_articles" })
  subArticles?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "summary" })
  summary?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "summary_detail" })
  summaryDetail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title_detail" })
  titleDetail?: string;
}

export class News200ApplicationJSONFeed extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "generator" })
  generator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "generator_detail" })
  generatorDetail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publisher" })
  publisher?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publisher_detail" })
  publisherDetail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rights" })
  rights?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rights_detail" })
  rightsDetail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subtitle" })
  subtitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subtitle_detail" })
  subtitleDetail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  updated?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_parsed" })
  updatedParsed?: string;
}

/**
 * OK
 */
export class News200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: News200ApplicationJSONEntries })
  @Expose({ name: "entries" })
  @Type(() => News200ApplicationJSONEntries)
  entries?: News200ApplicationJSONEntries[];

  @SpeakeasyMetadata()
  @Expose({ name: "feed" })
  @Type(() => News200ApplicationJSONFeed)
  feed?: News200ApplicationJSONFeed;
}

export class NewsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unprocessable Entity (WebDAV)
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  news200ApplicationJSONObject?: News200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
