<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeers
{
    /**
     * [optional] The IKE version to be used for the IPsec VPN peer configuration. Defaults to '1' when omitted.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIkeVersionEnum $ikeVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('ikeVersion')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIkeVersionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIkeVersionEnum $ikeVersion = null;
    
    /**
     * Custom IPSec policies for the VPN peer. If not included and a preset has not been chosen, the default preset for IPSec policies will be used.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPolicies $ipsecPolicies
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipsecPolicies')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPolicies')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateOrganizationApplianceVPNThirdPartyVPNPeersRequestBodyPeersIpsecPolicies $ipsecPolicies = null;
    
    /**
     * One of the following available presets: 'default', 'aws', 'azure'. If this is provided, the 'ipsecPolicies' parameter is ignored.
     * 
     * @var ?string $ipsecPoliciesPreset
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipsecPoliciesPreset')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipsecPoliciesPreset = null;
    
    /**
     * [optional] The local ID is used to identify the MX to the peer. This will apply to all MXs this peer applies to.
     * 
     * @var ?string $localId
     */
	#[\JMS\Serializer\Annotation\SerializedName('localId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $localId = null;
    
    /**
     * The name of the VPN peer
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * A list of network tags that will connect with this peer. Use ['all'] for all networks. Use ['none'] for no networks. If not included, the default is ['all'].
     * 
     * @var ?array<string> $networkTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkTags')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $networkTags = null;
    
    /**
     * The list of the private subnets of the VPN peer
     * 
     * @var array<string> $privateSubnets
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateSubnets')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $privateSubnets;
    
    /**
     * [optional] The public IP of the VPN peer
     * 
     * @var ?string $publicIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('publicIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicIp = null;
    
    /**
     * [optional] The remote ID is used to identify the connecting VPN peer. This can either be a valid IPv4 Address, FQDN or User FQDN.
     * 
     * @var ?string $remoteId
     */
	#[\JMS\Serializer\Annotation\SerializedName('remoteId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $remoteId = null;
    
    /**
     * The shared secret with the VPN peer
     * 
     * @var string $secret
     */
	#[\JMS\Serializer\Annotation\SerializedName('secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $secret;
    
	public function __construct()
	{
		$this->ikeVersion = null;
		$this->ipsecPolicies = null;
		$this->ipsecPoliciesPreset = null;
		$this->localId = null;
		$this->name = "";
		$this->networkTags = null;
		$this->privateSubnets = [];
		$this->publicIp = null;
		$this->remoteId = null;
		$this->secret = "";
	}
}
