// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AlbumAPIGetOnePathParams struct {
	// Album Id (required).
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// AlbumAPIGetOneFieldsEnum - Optional fields (optional). Possible values are artists, names, pvs, tags, tracks, webLinks.
type AlbumAPIGetOneFieldsEnum string

const (
	AlbumAPIGetOneFieldsEnumNone            AlbumAPIGetOneFieldsEnum = "None"
	AlbumAPIGetOneFieldsEnumAdditionalNames AlbumAPIGetOneFieldsEnum = "AdditionalNames"
	AlbumAPIGetOneFieldsEnumArtists         AlbumAPIGetOneFieldsEnum = "Artists"
	AlbumAPIGetOneFieldsEnumDescription     AlbumAPIGetOneFieldsEnum = "Description"
	AlbumAPIGetOneFieldsEnumDiscs           AlbumAPIGetOneFieldsEnum = "Discs"
	AlbumAPIGetOneFieldsEnumIdentifiers     AlbumAPIGetOneFieldsEnum = "Identifiers"
	AlbumAPIGetOneFieldsEnumMainPicture     AlbumAPIGetOneFieldsEnum = "MainPicture"
	AlbumAPIGetOneFieldsEnumNames           AlbumAPIGetOneFieldsEnum = "Names"
	AlbumAPIGetOneFieldsEnumPVs             AlbumAPIGetOneFieldsEnum = "PVs"
	AlbumAPIGetOneFieldsEnumReleaseEvent    AlbumAPIGetOneFieldsEnum = "ReleaseEvent"
	AlbumAPIGetOneFieldsEnumTags            AlbumAPIGetOneFieldsEnum = "Tags"
	AlbumAPIGetOneFieldsEnumTracks          AlbumAPIGetOneFieldsEnum = "Tracks"
	AlbumAPIGetOneFieldsEnumWebLinks        AlbumAPIGetOneFieldsEnum = "WebLinks"
)

func (e *AlbumAPIGetOneFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Artists":
		fallthrough
	case "Description":
		fallthrough
	case "Discs":
		fallthrough
	case "Identifiers":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "Tags":
		fallthrough
	case "Tracks":
		fallthrough
	case "WebLinks":
		*e = AlbumAPIGetOneFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetOneFieldsEnum: %s", s)
	}
}

// AlbumAPIGetOneLangEnum - Content language preference (optional).
type AlbumAPIGetOneLangEnum string

const (
	AlbumAPIGetOneLangEnumDefault  AlbumAPIGetOneLangEnum = "Default"
	AlbumAPIGetOneLangEnumJapanese AlbumAPIGetOneLangEnum = "Japanese"
	AlbumAPIGetOneLangEnumRomaji   AlbumAPIGetOneLangEnum = "Romaji"
	AlbumAPIGetOneLangEnumEnglish  AlbumAPIGetOneLangEnum = "English"
)

func (e *AlbumAPIGetOneLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = AlbumAPIGetOneLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetOneLangEnum: %s", s)
	}
}

// AlbumAPIGetOneSongFieldsEnum - Optional fields for tracks, if included (optional).
type AlbumAPIGetOneSongFieldsEnum string

const (
	AlbumAPIGetOneSongFieldsEnumNone            AlbumAPIGetOneSongFieldsEnum = "None"
	AlbumAPIGetOneSongFieldsEnumAdditionalNames AlbumAPIGetOneSongFieldsEnum = "AdditionalNames"
	AlbumAPIGetOneSongFieldsEnumAlbums          AlbumAPIGetOneSongFieldsEnum = "Albums"
	AlbumAPIGetOneSongFieldsEnumArtists         AlbumAPIGetOneSongFieldsEnum = "Artists"
	AlbumAPIGetOneSongFieldsEnumLyrics          AlbumAPIGetOneSongFieldsEnum = "Lyrics"
	AlbumAPIGetOneSongFieldsEnumMainPicture     AlbumAPIGetOneSongFieldsEnum = "MainPicture"
	AlbumAPIGetOneSongFieldsEnumNames           AlbumAPIGetOneSongFieldsEnum = "Names"
	AlbumAPIGetOneSongFieldsEnumPVs             AlbumAPIGetOneSongFieldsEnum = "PVs"
	AlbumAPIGetOneSongFieldsEnumReleaseEvent    AlbumAPIGetOneSongFieldsEnum = "ReleaseEvent"
	AlbumAPIGetOneSongFieldsEnumTags            AlbumAPIGetOneSongFieldsEnum = "Tags"
	AlbumAPIGetOneSongFieldsEnumThumbURL        AlbumAPIGetOneSongFieldsEnum = "ThumbUrl"
	AlbumAPIGetOneSongFieldsEnumWebLinks        AlbumAPIGetOneSongFieldsEnum = "WebLinks"
)

func (e *AlbumAPIGetOneSongFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Albums":
		fallthrough
	case "Artists":
		fallthrough
	case "Lyrics":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "Tags":
		fallthrough
	case "ThumbUrl":
		fallthrough
	case "WebLinks":
		*e = AlbumAPIGetOneSongFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetOneSongFieldsEnum: %s", s)
	}
}

type AlbumAPIGetOneQueryParams struct {
	// Optional fields (optional). Possible values are artists, names, pvs, tags, tracks, webLinks.
	Fields *AlbumAPIGetOneFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Content language preference (optional).
	Lang *AlbumAPIGetOneLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// Optional fields for tracks, if included (optional).
	SongFields *AlbumAPIGetOneSongFieldsEnum `queryParam:"style=form,explode=true,name=songFields"`
}

type AlbumAPIGetOneRequest struct {
	PathParams  AlbumAPIGetOnePathParams
	QueryParams AlbumAPIGetOneQueryParams
}

type AlbumAPIGetOneResponse struct {
	// OK
	AlbumForAPIContract *shared.AlbumForAPIContract
	Body                []byte
	ContentType         string
	StatusCode          int
	RawResponse         *http.Response
}
