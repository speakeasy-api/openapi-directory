// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DevicelistSecurity struct {
	CodeOauth     *shared.SchemeCodeOauth     `security:"scheme,type=oauth2"`
	PasswordOauth *shared.SchemePasswordOauth `security:"scheme,type=oauth2"`
}

// DevicelistAppTypeEnum - Defines which device type will be returned by devicelist. It could be app_thermostat or app_station (by default if not provided)
type DevicelistAppTypeEnum string

const (
	DevicelistAppTypeEnumAppThermostat DevicelistAppTypeEnum = "app_thermostat"
	DevicelistAppTypeEnumAppStation    DevicelistAppTypeEnum = "app_station"
)

func (e *DevicelistAppTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "app_thermostat":
		fallthrough
	case "app_station":
		*e = DevicelistAppTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DevicelistAppTypeEnum: %s", s)
	}
}

type DevicelistQueryParams struct {
	// Defines which device type will be returned by devicelist. It could be app_thermostat or app_station (by default if not provided)
	AppType *DevicelistAppTypeEnum `queryParam:"style=form,explode=true,name=app_type"`
	// Specify a device_id if you want to retrieve only this device informations.
	DeviceID *string `queryParam:"style=form,explode=true,name=device_id"`
	// When set to "true", the favorite devices of the user are returned. This flag is available only if the devices requested are Weather Stations.
	GetFavorites *bool `queryParam:"style=form,explode=true,name=get_favorites"`
}

type DevicelistRequest struct {
	QueryParams DevicelistQueryParams
	Security    DevicelistSecurity
}

type DevicelistResponse struct {
	ContentType string
	// Successful response
	NADeviceListResponse *shared.NADeviceListResponse
	StatusCode           int
	RawResponse          *http.Response
}
