<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DataSourceParameter - A parameter used to define custom fields in a data source definition.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DataSourceParameter
{
    /**
     * All possible values for the parameter.
     * 
     * @var ?array<string> $allowedValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowedValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowedValues = null;
    
    /**
     * If true, it should not be used in new transfers, and it should not be visible to users.
     * 
     * @var ?bool $deprecated
     */
	#[\JMS\Serializer\Annotation\SerializedName('deprecated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deprecated = null;
    
    /**
     * Parameter description.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Parameter display name in the user interface.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Deprecated. This field has no effect.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DataSourceParameter> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DataSourceParameter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fields = null;
    
    /**
     * Cannot be changed after initial creation.
     * 
     * @var ?bool $immutable
     */
	#[\JMS\Serializer\Annotation\SerializedName('immutable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $immutable = null;
    
    /**
     * For integer and double values specifies maximum allowed value.
     * 
     * @var ?float $maxValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maxValue = null;
    
    /**
     * For integer and double values specifies minimum allowed value.
     * 
     * @var ?float $minValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('minValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $minValue = null;
    
    /**
     * Parameter identifier.
     * 
     * @var ?string $paramId
     */
	#[\JMS\Serializer\Annotation\SerializedName('paramId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paramId = null;
    
    /**
     * Deprecated. This field has no effect.
     * 
     * @var ?bool $recurse
     */
	#[\JMS\Serializer\Annotation\SerializedName('recurse')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recurse = null;
    
    /**
     * Deprecated. This field has no effect.
     * 
     * @var ?bool $repeated
     */
	#[\JMS\Serializer\Annotation\SerializedName('repeated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $repeated = null;
    
    /**
     * Is parameter required.
     * 
     * @var ?bool $required
     */
	#[\JMS\Serializer\Annotation\SerializedName('required')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $required = null;
    
    /**
     * Parameter type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DataSourceParameterTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DataSourceParameterTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DataSourceParameterTypeEnum $type = null;
    
    /**
     * Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values.
     * 
     * @var ?string $validationDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('validationDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $validationDescription = null;
    
    /**
     * URL to a help document to further explain the naming requirements.
     * 
     * @var ?string $validationHelpUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('validationHelpUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $validationHelpUrl = null;
    
    /**
     * Regular expression which can be used for parameter validation.
     * 
     * @var ?string $validationRegex
     */
	#[\JMS\Serializer\Annotation\SerializedName('validationRegex')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $validationRegex = null;
    
	public function __construct()
	{
		$this->allowedValues = null;
		$this->deprecated = null;
		$this->description = null;
		$this->displayName = null;
		$this->fields = null;
		$this->immutable = null;
		$this->maxValue = null;
		$this->minValue = null;
		$this->paramId = null;
		$this->recurse = null;
		$this->repeated = null;
		$this->required = null;
		$this->type = null;
		$this->validationDescription = null;
		$this->validationHelpUrl = null;
		$this->validationRegex = null;
	}
}
