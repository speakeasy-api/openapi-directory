// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetPathParams struct {
	// Shopper whose details are to be retrieved
	ShopperID string `pathParam:"style=simple,explode=false,name=shopperId"`
}

type GetIncludesEnum string

const (
	GetIncludesEnumCustomerID GetIncludesEnum = "customerId"
)

func (e *GetIncludesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customerId":
		*e = GetIncludesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIncludesEnum: %s", s)
	}
}

type GetQueryParams struct {
	// Additional properties to be included in the response shopper object
	Includes []GetIncludesEnum `queryParam:"style=form,explode=false,name=includes"`
}

type GetRequest struct {
	PathParams  GetPathParams
	QueryParams GetQueryParams
}

type GetResponse struct {
	Body        []byte
	ContentType string
	// Request was malformed
	Error *shared.Error
	// Too many requests received within interval
	ErrorLimit *shared.ErrorLimit
	// Request was successful
	Shopper     *shared.Shopper
	StatusCode  int
	RawResponse *http.Response
}
