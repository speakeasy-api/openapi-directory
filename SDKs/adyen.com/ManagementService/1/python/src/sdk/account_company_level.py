"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class AccountCompanyLevel:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_companies(self, request: operations.GetCompaniesRequest, security: operations.GetCompaniesSecurity) -> operations.GetCompaniesResponse:
        r"""Get a list of company accounts
        Returns the list of company accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.
        
        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        
        * Management API—Account read
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/companies'
        
        query_params = utils.get_query_params(operations.GetCompaniesRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetCompaniesResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.ListCompanyResponse])
                res.list_company_response = out
        elif http_res.status_code in [400, 401, 403, 422, 500]:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.RestServiceError])
                res.rest_service_error = out

        return res

    def get_companies_company_id(self, request: operations.GetCompaniesCompanyIDRequest, security: operations.GetCompaniesCompanyIDSecurity) -> operations.GetCompaniesCompanyIDResponse:
        r"""Get a company account
        Returns the company account specified in the path. Your API credential must have access to the company account. 
        
        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Account read
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetCompaniesCompanyIDRequest, base_url, '/companies/{companyId}', request)
        
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetCompaniesCompanyIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Company])
                res.company = out
        elif http_res.status_code in [400, 401, 403, 422, 500]:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.RestServiceError])
                res.rest_service_error = out

        return res

    def get_companies_company_id_merchants(self, request: operations.GetCompaniesCompanyIDMerchantsRequest, security: operations.GetCompaniesCompanyIDMerchantsSecurity) -> operations.GetCompaniesCompanyIDMerchantsResponse:
        r"""Get a list of merchant accounts
        Returns the list of merchant accounts under the company account specified in the path. The list only includes merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters. 
        
        To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
        * Management API—Account read
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetCompaniesCompanyIDMerchantsRequest, base_url, '/companies/{companyId}/merchants', request)
        
        query_params = utils.get_query_params(operations.GetCompaniesCompanyIDMerchantsRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetCompaniesCompanyIDMerchantsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.ListMerchantResponse])
                res.list_merchant_response = out
        elif http_res.status_code in [400, 401, 403, 422, 500]:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.RestServiceError])
                res.rest_service_error = out

        return res

    