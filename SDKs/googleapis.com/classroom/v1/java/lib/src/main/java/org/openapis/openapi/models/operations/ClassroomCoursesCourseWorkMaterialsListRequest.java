/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ClassroomCoursesCourseWorkMaterialsListRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;

    public ClassroomCoursesCourseWorkMaterialsListRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;

    public ClassroomCoursesCourseWorkMaterialsListRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public ClassroomCoursesCourseWorkMaterialsListRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;

    public ClassroomCoursesCourseWorkMaterialsListRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * Identifier of the course. This identifier can be either the Classroom-assigned identifier or an alias.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=courseId")
    public String courseId;

    public ClassroomCoursesCourseWorkMaterialsListRequest withCourseId(String courseId) {
        this.courseId = courseId;
        return this;
    }
    
    /**
     * Restriction on the work status to return. Only course work material that matches is returned. If unspecified, items with a work status of `PUBLISHED` is returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=courseWorkMaterialStates")
    public ClassroomCoursesCourseWorkMaterialsListCourseWorkMaterialStatesEnum[] courseWorkMaterialStates;

    public ClassroomCoursesCourseWorkMaterialsListRequest withCourseWorkMaterialStates(ClassroomCoursesCourseWorkMaterialsListCourseWorkMaterialStatesEnum[] courseWorkMaterialStates) {
        this.courseWorkMaterialStates = courseWorkMaterialStates;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public ClassroomCoursesCourseWorkMaterialsListRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public ClassroomCoursesCourseWorkMaterialsListRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Optional filtering for course work material with at least one Drive material whose ID matches the provided string. If `material_link` is also specified, course work material must have materials matching both filters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=materialDriveId")
    public String materialDriveId;

    public ClassroomCoursesCourseWorkMaterialsListRequest withMaterialDriveId(String materialDriveId) {
        this.materialDriveId = materialDriveId;
        return this;
    }
    
    /**
     * Optional filtering for course work material with at least one link material whose URL partially matches the provided string.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=materialLink")
    public String materialLink;

    public ClassroomCoursesCourseWorkMaterialsListRequest withMaterialLink(String materialLink) {
        this.materialLink = materialLink;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public ClassroomCoursesCourseWorkMaterialsListRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Optional sort ordering for results. A comma-separated list of fields with an optional sort direction keyword. Supported field is `updateTime`. Supported direction keywords are `asc` and `desc`. If not specified, `updateTime desc` is the default behavior. Examples: `updateTime asc`, `updateTime`
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=orderBy")
    public String orderBy;

    public ClassroomCoursesCourseWorkMaterialsListRequest withOrderBy(String orderBy) {
        this.orderBy = orderBy;
        return this;
    }
    
    /**
     * Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;

    public ClassroomCoursesCourseWorkMaterialsListRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * nextPageToken value returned from a previous list call, indicating that the subsequent page of results should be returned. The list request must be otherwise identical to the one that resulted in this token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageToken")
    public String pageToken;

    public ClassroomCoursesCourseWorkMaterialsListRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public ClassroomCoursesCourseWorkMaterialsListRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public ClassroomCoursesCourseWorkMaterialsListRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;

    public ClassroomCoursesCourseWorkMaterialsListRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;

    public ClassroomCoursesCourseWorkMaterialsListRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
    public ClassroomCoursesCourseWorkMaterialsListRequest(@JsonProperty("courseId") String courseId) {
        this.courseId = courseId;
  }
}
