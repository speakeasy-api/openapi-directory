// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateSimulationApplicationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateSimulationApplicationRequestBodyEnvironment - The object that contains the Docker image URI for either your robot or simulation applications.
type CreateSimulationApplicationRequestBodyEnvironment struct {
	URI *string `json:"uri,omitempty"`
}

// CreateSimulationApplicationRequestBodyRenderingEngine - Information about a rendering engine.
type CreateSimulationApplicationRequestBodyRenderingEngine struct {
	Name    *shared.RenderingEngineTypeEnum `json:"name,omitempty"`
	Version *string                         `json:"version,omitempty"`
}

// CreateSimulationApplicationRequestBodyRobotSoftwareSuite - Information about a robot software suite (ROS distribution).
type CreateSimulationApplicationRequestBodyRobotSoftwareSuite struct {
	Name    *shared.RobotSoftwareSuiteTypeEnum        `json:"name,omitempty"`
	Version *shared.RobotSoftwareSuiteVersionTypeEnum `json:"version,omitempty"`
}

// CreateSimulationApplicationRequestBodySimulationSoftwareSuite - Information about a simulation software suite.
type CreateSimulationApplicationRequestBodySimulationSoftwareSuite struct {
	Name    *shared.SimulationSoftwareSuiteTypeEnum `json:"name,omitempty"`
	Version *string                                 `json:"version,omitempty"`
}

type CreateSimulationApplicationRequestBody struct {
	// The object that contains the Docker image URI for either your robot or simulation applications.
	Environment *CreateSimulationApplicationRequestBodyEnvironment `json:"environment,omitempty"`
	// The name of the simulation application.
	Name string `json:"name"`
	// Information about a rendering engine.
	RenderingEngine *CreateSimulationApplicationRequestBodyRenderingEngine `json:"renderingEngine,omitempty"`
	// Information about a robot software suite (ROS distribution).
	RobotSoftwareSuite CreateSimulationApplicationRequestBodyRobotSoftwareSuite `json:"robotSoftwareSuite"`
	// Information about a simulation software suite.
	SimulationSoftwareSuite CreateSimulationApplicationRequestBodySimulationSoftwareSuite `json:"simulationSoftwareSuite"`
	// The sources of the simulation application.
	Sources []shared.SourceConfig `json:"sources,omitempty"`
	// A map that contains tag keys and tag values that are attached to the simulation application.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateSimulationApplicationRequest struct {
	Headers CreateSimulationApplicationHeaders
	Request CreateSimulationApplicationRequestBody `request:"mediaType=application/json"`
}

type CreateSimulationApplicationResponse struct {
	ContentType string
	// Success
	CreateSimulationApplicationResponse *shared.CreateSimulationApplicationResponse
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
