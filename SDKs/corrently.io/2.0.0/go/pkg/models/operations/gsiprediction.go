// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GsiPredictionQueryParams struct {
	// Any valid Stromkonto account (address).
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Zipcode (Postleitzahl) of a city in Germany.
	Zip *string `queryParam:"style=form,explode=true,name=zip"`
}

type GsiPredictionRequest struct {
	QueryParams GsiPredictionQueryParams
}

// GsiPrediction200ApplicationJSONLocation - Standarized location info sourced for prediction
type GsiPrediction200ApplicationJSONLocation struct {
	// Pretty Print city name
	City *string `json:"city,omitempty"`
	// Zipcode (Postleitzahl)
	Zip *string `json:"zip,omitempty"`
}

// GsiPrediction200ApplicationJSONMatrixH0 - Indicates number of hours a device should run
type GsiPrediction200ApplicationJSONMatrixH0 struct {
	// device should run in 1 hour
	Avg1 *string `json:"avg_1,omitempty"`
	// device should run in 2 hours
	Avg2 *string `json:"avg_2,omitempty"`
	// device should run in 3 hour
	Avg3 *string `json:"avg_3,omitempty"`
}

// GsiPrediction200ApplicationJSONMatrix - Device switching recommendation.
type GsiPrediction200ApplicationJSONMatrix struct {
	// Indicates number of hours a device should run
	H0 *GsiPrediction200ApplicationJSONMatrixH0 `json:"h0,omitempty"`
}

// GsiPrediction200ApplicationJSON - Success
type GsiPrediction200ApplicationJSON struct {
	// Prediction for the upcomming hours
	Forecast []shared.ForecastItem `json:"forecast,omitempty"`
	// Standarized location info sourced for prediction
	Location *GsiPrediction200ApplicationJSONLocation `json:"location,omitempty"`
	// Device switching recommendation.
	Matrix *GsiPrediction200ApplicationJSONMatrix `json:"matrix,omitempty"`
}

type GsiPredictionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	GsiPrediction200ApplicationJSONObject *GsiPrediction200ApplicationJSON
}
