/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class TokenRequest extends SpeakeasyBase {
  /**
   * The [capabilities](https://www.ably.io/documentation/core-features/authentication#capabilities-explained) (i.e. a set of channel names/namespaces and, for each, a set of operations) which should be a subset of the set of capabilities associated with the key specified in keyName.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capability" })
  capability: Record<string, any>;

  /**
   * The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients) to be assosciated with the token. Can be set to * to allow for any client ID to be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Name of the key used for the TokenRequest. The keyName comprises of the app ID and key ID on an API Key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keyName" })
  keyName: string;

  /**
   * An unquoted, un-escaped random string of at least 16 characters. Used to ensure the Ably TokenRequest cannot be reused.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonce" })
  nonce: string;

  /**
   * Time of creation of the Ably TokenRequest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp: number;
}
