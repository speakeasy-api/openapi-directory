<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CatalogObject - The wrapper object for the Catalog entries of a given object type.
 * 
 * 
 * The type of a particular `CatalogObject` is determined by the value of the
 * `type` attribute and only the corresponding data attribute can be set on the `CatalogObject` instance.
 * For example, the following list shows some instances of `CatalogObject` of a given `type` and
 * their corresponding data attribute that can be set:
 * - For a `CatalogObject` of the `ITEM` type, set the `item_data` attribute to yield the `CatalogItem` object.
 * - For a `CatalogObject` of the `ITEM_VARIATION` type, set the `item_variation_data` attribute to yield the `CatalogItemVariation` object.
 * - For a `CatalogObject` of the `MODIFIER` type, set the `modifier_data` attribute to yield the `CatalogModifier` object.
 * - For a `CatalogObject` of the `MODIFIER_LIST` type, set the `modifier_list_data` attribute to yield the `CatalogModifierList` object.
 * - For a `CatalogObject` of the `CATEGORY` type, set the `category_data` attribute to yield the `CatalogCategory` object.
 * - For a `CatalogObject` of the `DISCOUNT` type, set the `discount_data` attribute to yield the `CatalogDiscount` object.
 * - For a `CatalogObject` of the `TAX` type, set the `tax_data` attribute to yield the `CatalogTax` object.
 * - For a `CatalogObject` of the `IMAGE` type, set the `image_data` attribute to yield the `CatalogImageData`  object.
 * - For a `CatalogObject` of the `QUICK_AMOUNTS_SETTINGS` type, set the `quick_amounts_settings_data` attribute to yield the `CatalogQuickAmountsSettings` object.
 * - For a `CatalogObject` of the `PRICING_RULE` type, set the `pricing_rule_data` attribute to yield the `CatalogPricingRule` object.
 * - For a `CatalogObject` of the `TIME_PERIOD` type, set the `time_period_data` attribute to yield the `CatalogTimePeriod` object.
 * - For a `CatalogObject` of the `PRODUCT_SET` type, set the `product_set_data` attribute to yield the `CatalogProductSet`  object.
 * - For a `CatalogObject` of the `SUBSCRIPTION_PLAN` type, set the `subscription_plan_data` attribute to yield the `CatalogSubscriptionPlan` object.
 * 
 * 
 * For a more detailed discussion of the Catalog data model, please see the
 * [Design a Catalog](https://developer.squareup.com/docs/catalog-api/design-a-catalog) guide.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CatalogObject
{
    /**
     * A list of locations where the object is not present, even if `present_at_all_locations` is `true`.
     * 
     * This can include locations that are deactivated.
     * 
     * @var ?array<string> $absentAtLocationIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('absent_at_location_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $absentAtLocationIds = null;
    
    /**
     * The Connect v1 IDs for this object at each location where it is present, where they
     * 
     * differ from the object's Connect V2 ID. The field will only be present for objects that
     * have been created or modified by legacy APIs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CatalogV1Id> $catalogV1Ids
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalog_v1_ids')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CatalogV1Id>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $catalogV1Ids = null;
    
    /**
     * A category to which a `CatalogItem` instance belongs.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogCategory $categoryData
     */
	#[\JMS\Serializer\Annotation\SerializedName('category_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogCategory')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogCategory $categoryData = null;
    
    /**
     * Contains information defining a custom attribute. Custom attributes are
     * 
     * intended to store additional information about a catalog object or to associate a
     * catalog object with an entity in another system. Do not use custom attributes
     * to store any sensitive information (personally identifiable information, card details, etc.).
     * [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinition $customAttributeDefinitionData
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_attribute_definition_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogCustomAttributeDefinition $customAttributeDefinitionData = null;
    
    /**
     * A map (key-value pairs) of application-defined custom attribute values. The value of a key-value pair
     * 
     * is a [CatalogCustomAttributeValue](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogCustomAttributeValue) object. The key is the `key` attribute
     * value defined in the associated [CatalogCustomAttributeDefinition](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogCustomAttributeDefinition)
     * object defined by the application making the request.
     * 
     * If the `CatalogCustomAttributeDefinition` object is
     * defined by another application, the `CatalogCustomAttributeDefinition`'s key attribute value is prefixed by
     * the defining application ID. For example, if the `CatalogCustomAttributeDefinition` has a `key` attribute of
     * `"cocoa_brand"` and the defining application ID is `"abcd1234"`, the key in the map is `"abcd1234:cocoa_brand"`
     * if the application making the request is different from the application defining the custom attribute definition.
     * Otherwise, the key used in the map is simply `"cocoa_brand"`.
     * 
     * Application-defined custom attributes that are set at a global (location-independent) level.
     * Custom attribute values are intended to store additional information about a catalog object
     * or associations with an entity in another system. Do not use custom attributes
     * to store any sensitive information (personally identifiable information, card details, etc.).
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeValue> $customAttributeValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_attribute_values')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customAttributeValues = null;
    
    /**
     * A discount applicable to items.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogDiscount $discountData
     */
	#[\JMS\Serializer\Annotation\SerializedName('discount_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogDiscount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogDiscount $discountData = null;
    
    /**
     * An identifier to reference this object in the catalog. When a new `CatalogObject`
     * 
     * is inserted, the client should set the id to a temporary identifier starting with
     * a "`#`" character. Other objects being inserted or updated within the same request
     * may use this identifier to refer to the new object.
     * 
     * When the server receives the new object, it will supply a unique identifier that
     * replaces the temporary identifier for all future references.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * An image file to use in Square catalogs. It can be associated with catalog
     * 
     * items, item variations, and categories.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogImage $imageData
     */
	#[\JMS\Serializer\Annotation\SerializedName('image_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogImage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogImage $imageData = null;
    
    /**
     * Identifies the `CatalogImage` attached to this `CatalogObject`.
     * 
     * @var ?string $imageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('image_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $imageId = null;
    
    /**
     * If `true`, the object has been deleted from the database. Must be `false` for new objects
     * 
     * being inserted. When deleted, the `updated_at` field will equal the deletion time.
     * 
     * @var ?bool $isDeleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isDeleted = null;
    
    /**
     * A [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) instance of the `ITEM` type, also referred to as an item, in the catalog.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogItem $itemData
     */
	#[\JMS\Serializer\Annotation\SerializedName('item_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogItem')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogItem $itemData = null;
    
    /**
     * A group of variations for a `CatalogItem`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogItemOption $itemOptionData
     */
	#[\JMS\Serializer\Annotation\SerializedName('item_option_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogItemOption')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogItemOption $itemOptionData = null;
    
    /**
     * An enumerated value that can link a
     * 
     * `CatalogItemVariation` to an item option as one of
     * its item option values.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogItemOptionValue $itemOptionValueData
     */
	#[\JMS\Serializer\Annotation\SerializedName('item_option_value_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogItemOptionValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogItemOptionValue $itemOptionValueData = null;
    
    /**
     * An item variation (i.e., product) in the Catalog object model. Each item
     * 
     * may have a maximum of 250 item variations.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogItemVariation $itemVariationData
     */
	#[\JMS\Serializer\Annotation\SerializedName('item_variation_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogItemVariation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogItemVariation $itemVariationData = null;
    
    /**
     * Represents the unit used to measure a `CatalogItemVariation` and
     * 
     * specifies the precision for decimal quantities.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogMeasurementUnit $measurementUnitData
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurement_unit_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogMeasurementUnit')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogMeasurementUnit $measurementUnitData = null;
    
    /**
     * A modifier applicable to items at the time of sale.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogModifier $modifierData
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifier_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogModifier')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogModifier $modifierData = null;
    
    /**
     * A list of modifiers applicable to items at the time of sale.
     * 
     * 
     * For example, a "Condiments" modifier list applicable to a "Hot Dog" item
     * may contain "Ketchup", "Mustard", and "Relish" modifiers.
     * Use the `selection_type` field to specify whether or not multiple selections from
     * the modifier list are allowed.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogModifierList $modifierListData
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifier_list_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogModifierList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogModifierList $modifierListData = null;
    
    /**
     * If `true`, this object is present at all locations (including future locations), except where specified in
     * 
     * the `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),
     * except where specified in the `present_at_location_ids` field. If not specified, defaults to `true`.
     * 
     * @var ?bool $presentAtAllLocations
     */
	#[\JMS\Serializer\Annotation\SerializedName('present_at_all_locations')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $presentAtAllLocations = null;
    
    /**
     * A list of locations where the object is present, even if `present_at_all_locations` is `false`.
     * 
     * This can include locations that are deactivated.
     * 
     * @var ?array<string> $presentAtLocationIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('present_at_location_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $presentAtLocationIds = null;
    
    /**
     * Defines how discounts are automatically applied to a set of items that match the pricing rule
     * 
     * during the active time period.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogPricingRule $pricingRuleData
     */
	#[\JMS\Serializer\Annotation\SerializedName('pricing_rule_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogPricingRule')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogPricingRule $pricingRuleData = null;
    
    /**
     * Represents a collection of catalog objects for the purpose of applying a
     * 
     * `PricingRule`. Including a catalog object will include all of its subtypes.
     * For example, including a category in a product set will include all of its
     * items and associated item variations in the product set. Including an item in
     * a product set will also include its item variations.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogProductSet $productSetData
     */
	#[\JMS\Serializer\Annotation\SerializedName('product_set_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogProductSet')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogProductSet $productSetData = null;
    
    /**
     * A parent Catalog Object model represents a set of Quick Amounts and the settings control the amounts.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogQuickAmountsSettings $quickAmountsSettingsData
     */
	#[\JMS\Serializer\Annotation\SerializedName('quick_amounts_settings_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogQuickAmountsSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogQuickAmountsSettings $quickAmountsSettingsData = null;
    
    /**
     * Describes a subscription plan. For more information, see
     * 
     * [Set Up and Manage a Subscription Plan](https://developer.squareup.com/docs/subscriptions-api/setup-plan).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogSubscriptionPlan $subscriptionPlanData
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscription_plan_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogSubscriptionPlan')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogSubscriptionPlan $subscriptionPlanData = null;
    
    /**
     * A tax applicable to an item.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogTax $taxData
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogTax')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogTax $taxData = null;
    
    /**
     * Represents a time period - either a single period or a repeating period.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogTimePeriod $timePeriodData
     */
	#[\JMS\Serializer\Annotation\SerializedName('time_period_data')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogTimePeriod')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogTimePeriod $timePeriodData = null;
    
    /**
     * The type of this object. Each object type has expected
     * 
     * properties expressed in a structured format within its corresponding `*_data` field below.
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
    /**
     * Last modification [timestamp](https://developer.squareup.com/docs/build-basics/working-with-dates) in RFC 3339 format, e.g., `"2016-08-15T23:59:33.123Z"`
     * 
     * would indicate the UTC time (denoted by `Z`) of August 15, 2016 at 23:59:33 and 123 milliseconds.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
    /**
     * The version of the object. When updating an object, the version supplied
     * 
     * must match the version in the database, otherwise the write will be rejected as conflicting.
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->absentAtLocationIds = null;
		$this->catalogV1Ids = null;
		$this->categoryData = null;
		$this->customAttributeDefinitionData = null;
		$this->customAttributeValues = null;
		$this->discountData = null;
		$this->id = "";
		$this->imageData = null;
		$this->imageId = null;
		$this->isDeleted = null;
		$this->itemData = null;
		$this->itemOptionData = null;
		$this->itemOptionValueData = null;
		$this->itemVariationData = null;
		$this->measurementUnitData = null;
		$this->modifierData = null;
		$this->modifierListData = null;
		$this->presentAtAllLocations = null;
		$this->presentAtLocationIds = null;
		$this->pricingRuleData = null;
		$this->productSetData = null;
		$this->quickAmountsSettingsData = null;
		$this->subscriptionPlanData = null;
		$this->taxData = null;
		$this->timePeriodData = null;
		$this->type = "";
		$this->updatedAt = null;
		$this->version = null;
	}
}
