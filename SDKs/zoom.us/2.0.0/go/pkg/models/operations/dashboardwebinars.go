// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
	"time"
)

type DashboardWebinarsSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

// DashboardWebinarsTypeEnum - The webinar type.
type DashboardWebinarsTypeEnum string

const (
	DashboardWebinarsTypeEnumPast DashboardWebinarsTypeEnum = "past"
	DashboardWebinarsTypeEnumLive DashboardWebinarsTypeEnum = "live"
)

func (e *DashboardWebinarsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "past":
		fallthrough
	case "live":
		*e = DashboardWebinarsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DashboardWebinarsTypeEnum: %s", s)
	}
}

type DashboardWebinarsQueryParams struct {
	// Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
	From types.Date `queryParam:"style=form,explode=true,name=from"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// End date.
	To types.Date `queryParam:"style=form,explode=true,name=to"`
	// The webinar type.
	Type *DashboardWebinarsTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type DashboardWebinarsRequest struct {
	QueryParams DashboardWebinarsQueryParams
	Security    DashboardWebinarsSecurity
}

type DashboardWebinars200ApplicationXMLWebinarMetricsCustomKeys struct {
	// Custom key associated with the Webinar.
	Key *string
	// Value of the custom key associated with the Webinar.
	Value *string
}

// DashboardWebinars200ApplicationXMLWebinarMetrics - Webinar metric details.
type DashboardWebinars200ApplicationXMLWebinarMetrics struct {
	// Custom keys and values assigned to the Webinar.
	CustomKeys []DashboardWebinars200ApplicationXMLWebinarMetricsCustomKeys
	// Department of the host.
	Dept *string
	// Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.
	Duration *string
	// User email.
	Email *string
	// Webinar end time.
	EndTime *time.Time
	// Indicates whether or not TSP was used for the Webinar.
	Has3rdPartyAudio *bool
	// Indicates whether or not PSTN was used for the Webinar.
	HasPstn *bool
	// Indicates whether or not recording was used for the Webinar.
	HasRecording *bool
	// Indicates whether or not screen sharing was used for the Webinar.
	HasScreenShare *bool
	// Indicates whether or not SIP was used for the Webinar.
	HasSip *bool
	// Indicates whether or not video was used for the Webinar.
	HasVideo *bool
	// Indicates whether or not VoIP was used for the Webinar.
	HasVoip *bool
	// User display name.
	Host *string
	// Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
	ID *int64
	// Webinar participant count.
	Participants *int64
	// Webinar start time.
	StartTime *time.Time
	// Webinar topic.
	Topic *string
	// User type.
	UserType *string
	// Webinar UUID.
	UUID *string
}

// DashboardWebinars200ApplicationXML - Pagination object.
type DashboardWebinars200ApplicationXML struct {
	// Start date for this report in 'yyyy-mm-dd' format.
	From *types.Date
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// The number of pages returned for the request made.
	PageCount *int64
	// The number of records returned within a single API call.
	PageSize *int64
	// End date for this report in 'yyyy-mm-dd' format.
	To *types.Date
	// The number of all records available across pages.
	TotalRecords *int64
	// Array of webinar objects.
	Webinars []DashboardWebinars200ApplicationXMLWebinarMetrics
}

type DashboardWebinars200ApplicationJSONWebinarMetricsCustomKeys struct {
	// Custom key associated with the Webinar.
	Key *string `json:"key,omitempty"`
	// Value of the custom key associated with the Webinar.
	Value *string `json:"value,omitempty"`
}

// DashboardWebinars200ApplicationJSONWebinarMetrics - Webinar metric details.
type DashboardWebinars200ApplicationJSONWebinarMetrics struct {
	// Custom keys and values assigned to the Webinar.
	CustomKeys []DashboardWebinars200ApplicationJSONWebinarMetricsCustomKeys `json:"custom_keys,omitempty"`
	// Department of the host.
	Dept *string `json:"dept,omitempty"`
	// Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.
	Duration *string `json:"duration,omitempty"`
	// User email.
	Email *string `json:"email,omitempty"`
	// Webinar end time.
	EndTime *time.Time `json:"end_time,omitempty"`
	// Indicates whether or not TSP was used for the Webinar.
	Has3rdPartyAudio *bool `json:"has_3rd_party_audio,omitempty"`
	// Indicates whether or not PSTN was used for the Webinar.
	HasPstn *bool `json:"has_pstn,omitempty"`
	// Indicates whether or not recording was used for the Webinar.
	HasRecording *bool `json:"has_recording,omitempty"`
	// Indicates whether or not screen sharing was used for the Webinar.
	HasScreenShare *bool `json:"has_screen_share,omitempty"`
	// Indicates whether or not SIP was used for the Webinar.
	HasSip *bool `json:"has_sip,omitempty"`
	// Indicates whether or not video was used for the Webinar.
	HasVideo *bool `json:"has_video,omitempty"`
	// Indicates whether or not VoIP was used for the Webinar.
	HasVoip *bool `json:"has_voip,omitempty"`
	// User display name.
	Host *string `json:"host,omitempty"`
	// Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
	ID *int64 `json:"id,omitempty"`
	// Webinar participant count.
	Participants *int64 `json:"participants,omitempty"`
	// Webinar start time.
	StartTime *time.Time `json:"start_time,omitempty"`
	// Webinar topic.
	Topic *string `json:"topic,omitempty"`
	// User type.
	UserType *string `json:"user_type,omitempty"`
	// Webinar UUID.
	UUID *string `json:"uuid,omitempty"`
}

// DashboardWebinars200ApplicationJSON - Pagination object.
type DashboardWebinars200ApplicationJSON struct {
	// Start date for this report in 'yyyy-mm-dd' format.
	From *types.Date `json:"from,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of pages returned for the request made.
	PageCount *int64 `json:"page_count,omitempty"`
	// The number of records returned within a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// End date for this report in 'yyyy-mm-dd' format.
	To *types.Date `json:"to,omitempty"`
	// The number of all records available across pages.
	TotalRecords *int64 `json:"total_records,omitempty"`
	// Array of webinar objects.
	Webinars []DashboardWebinars200ApplicationJSONWebinarMetrics `json:"webinars,omitempty"`
}

type DashboardWebinarsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Meetings returned.<br>
	// Only available for paid accounts that have enabled the Dashboard feature.
	DashboardWebinars200ApplicationJSONObject *DashboardWebinars200ApplicationJSON
}
