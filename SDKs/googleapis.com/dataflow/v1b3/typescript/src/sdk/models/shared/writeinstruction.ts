/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstructionInput } from "./instructioninput";
import { Sink } from "./sink";
import { Expose, Type } from "class-transformer";

/**
 * An instruction that writes records. Takes one input, produces no outputs.
 */
export class WriteInstruction extends SpeakeasyBase {
  /**
   * An input of an instruction, as a reference to an output of a producer instruction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "input" })
  @Type(() => InstructionInput)
  input?: InstructionInput;

  /**
   * A sink that records can be encoded and written to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sink" })
  @Type(() => Sink)
  sink?: Sink;
}
