/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PreReceiveHook - Response
 */
public class PreReceiveHook {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_downstream_configuration")
    public Boolean allowDownstreamConfiguration;

    public PreReceiveHook withAllowDownstreamConfiguration(Boolean allowDownstreamConfiguration) {
        this.allowDownstreamConfiguration = allowDownstreamConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enforcement")
    public String enforcement;

    public PreReceiveHook withEnforcement(String enforcement) {
        this.enforcement = enforcement;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment")
    public PreReceiveHookEnvironment environment;

    public PreReceiveHook withEnvironment(PreReceiveHookEnvironment environment) {
        this.environment = environment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public PreReceiveHook withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public PreReceiveHook withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("script")
    public String script;

    public PreReceiveHook withScript(String script) {
        this.script = script;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("script_repository")
    public PreReceiveHookScriptRepository scriptRepository;

    public PreReceiveHook withScriptRepository(PreReceiveHookScriptRepository scriptRepository) {
        this.scriptRepository = scriptRepository;
        return this;
    }
    
    public PreReceiveHook(){}
}
