/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Annotation } from "./annotation";
import { MessageEvent } from "./messageevent";
import { Expose, Type } from "class-transformer";

/**
 * A time-stamped annotation or message event in the Span.
 */
export class TimeEvent extends SpeakeasyBase {
  /**
   * Text annotation with a set of attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotation" })
  @Type(() => Annotation)
  annotation?: Annotation;

  /**
   * An event describing a message sent/received between Spans.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageEvent" })
  @Type(() => MessageEvent)
  messageEvent?: MessageEvent;

  /**
   * The timestamp indicating the time the event occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time?: string;
}
