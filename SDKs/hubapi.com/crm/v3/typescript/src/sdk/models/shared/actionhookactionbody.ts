/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionConfirmationBody } from "./actionconfirmationbody";
import { Expose, Type } from "class-transformer";

export enum ActionHookActionBodyHttpMethodEnum {
  Connect = "CONNECT",
  Delete = "DELETE",
  Get = "GET",
  Head = "HEAD",
  Options = "OPTIONS",
  Patch = "PATCH",
  Post = "POST",
  Put = "PUT",
  Trace = "TRACE",
}

export enum ActionHookActionBodyTypeEnum {
  ActionHook = "ACTION_HOOK",
}

export class ActionHookActionBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "confirmation" })
  @Type(() => ActionConfirmationBody)
  confirmation?: ActionConfirmationBody;

  @SpeakeasyMetadata()
  @Expose({ name: "httpMethod" })
  httpMethod: ActionHookActionBodyHttpMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "propertyNamesIncluded" })
  propertyNamesIncluded: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ActionHookActionBodyTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
