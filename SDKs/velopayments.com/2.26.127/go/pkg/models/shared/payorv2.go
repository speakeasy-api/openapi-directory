// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PayorV2LanguageEnum - The payor’s language preference. Must be one of [EN, FR].
type PayorV2LanguageEnum string

const (
	PayorV2LanguageEnumEn PayorV2LanguageEnum = "EN"
	PayorV2LanguageEnumFr PayorV2LanguageEnum = "FR"
)

func (e *PayorV2LanguageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EN":
		fallthrough
	case "FR":
		*e = PayorV2LanguageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PayorV2LanguageEnum: %s", s)
	}
}

// PayorV2 - Get Payor Details
type PayorV2 struct {
	Address *PayorAddressV2 `json:"address,omitempty"`
	// Whether or not the payor allows language choice in the UI.
	AllowsLanguageChoice *bool `json:"allowsLanguageChoice,omitempty"`
	// How the payor has chosen to refer to payees.
	CollectiveAlias *string `json:"collectiveAlias,omitempty"`
	// The payor’s 'Doing Business As' name.
	DbaName         *string `json:"dbaName,omitempty"`
	IncludesReports *bool   `json:"includesReports,omitempty"`
	// The kyc state of the payor.
	KycState *KycStateEnum `json:"kycState,omitempty"`
	// The payor’s language preference. Must be one of [EN, FR].
	Language *PayorV2LanguageEnum `json:"language,omitempty"`
	// Whether or not the payor has been manually locked by the backoffice.
	ManualLockout        *bool  `json:"manualLockout,omitempty"`
	MaxMasterPayorAdmins *int64 `json:"maxMasterPayorAdmins,omitempty"`
	// The grace period for paying payees in days.
	PayeeGracePeriodDays *int64 `json:"payeeGracePeriodDays,omitempty"`
	// Whether grace period processing is enabled.
	PayeeGracePeriodProcessingEnabled *bool             `json:"payeeGracePeriodProcessingEnabled,omitempty"`
	PaymentRails                      *PaymentRailsEnum `json:"paymentRails,omitempty"`
	PayorID                           string            `json:"payorId"`
	// The name of the payor.
	PayorName string `json:"payorName"`
	// A unique identifier that an external system uses to reference the payor in their system
	PayorXid *string `json:"payorXid,omitempty"`
	// Primary contact email for the payor.
	PrimaryContactEmail *string `json:"primaryContactEmail,omitempty"`
	// Name of primary contact for the payor.
	PrimaryContactName *string `json:"primaryContactName,omitempty"`
	// Primary contact phone number for the payor.
	PrimaryContactPhone *string `json:"primaryContactPhone,omitempty"`
	// Whether or not the payor has opted-out of reminder emails being sent.
	ReminderEmailsOptOut *bool `json:"reminderEmailsOptOut,omitempty"`
	// The payor’s supported remote systems by id
	RemoteSystemIds []string `json:"remoteSystemIds,omitempty"`
	// The payor’s support contact email address.
	SupportContact    *string             `json:"supportContact,omitempty"`
	TransmissionTypes *TransmissionTypes2 `json:"transmissionTypes,omitempty"`
	WuCustomerID      *string             `json:"wuCustomerId,omitempty"`
}
