<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetEventsRequest
{
    /**
     * The ID of the conversation
     * 
     * @var string $conversationId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=conversation_id')]
    public string $conversationId;
    
    /**
     * The cursor to start returning results from.
     * 
     * 
     * You are not expected to provide this manually, but to follow the url provided in `_links.next.href` in the response which contains a `cursor` value
     * 
     * 
     * @var ?string $cursor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cursor')]
    public ?string $cursor = null;
    
    /**
     * The ID to end returning events at
     * 
     * @var ?string $endId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=end_id')]
    public ?string $endId = null;
    
    /**
     * The type of event to search for. Does not currently support custom events
     * 
     * @var ?string $eventType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=event_type')]
    public ?string $eventType = null;
    
    /**
     * Show the most (`desc`) / least (`asc`) recently created entries first
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OrderEnum $order
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order')]
    public ?\OpenAPI\OpenAPI\Models\Shared\OrderEnum $order = null;
    
    /**
     * The number of results returned per page.   The default value is `10`. The maximum value is `100`.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page_size')]
    public ?int $pageSize = null;
    
    /**
     * The ID to start returning events at
     * 
     * @var ?string $startId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=start_id')]
    public ?string $startId = null;
    
	public function __construct()
	{
		$this->conversationId = "";
		$this->cursor = null;
		$this->endId = null;
		$this->eventType = null;
		$this->order = null;
		$this->pageSize = null;
		$this->startId = null;
	}
}
