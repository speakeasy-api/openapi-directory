/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Official - Information about a person holding an elected office.
 */
public class Official {
    /**
     * Addresses at which to contact the official.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public SimpleAddressType[] address;

    public Official withAddress(SimpleAddressType[] address) {
        this.address = address;
        return this;
    }
    
    /**
     * A list of known (social) media channels for this official.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channels")
    public Channel[] channels;

    public Official withChannels(Channel[] channels) {
        this.channels = channels;
        return this;
    }
    
    /**
     * The direct email addresses for the official.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emails")
    public String[] emails;

    public Official withEmails(String[] emails) {
        this.emails = emails;
        return this;
    }
    
    /**
     * Detailed summary about the official's address's geocoding
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geocodingSummaries")
    public GeocodingSummary[] geocodingSummaries;

    public Official withGeocodingSummaries(GeocodingSummary[] geocodingSummaries) {
        this.geocodingSummaries = geocodingSummaries;
        return this;
    }
    
    /**
     * The official's name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Official withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The full name of the party the official belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("party")
    public String party;

    public Official withParty(String party) {
        this.party = party;
        return this;
    }
    
    /**
     * The official's public contact phone numbers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phones")
    public String[] phones;

    public Official withPhones(String[] phones) {
        this.phones = phones;
        return this;
    }
    
    /**
     * A URL for a photo of the official.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoUrl")
    public String photoUrl;

    public Official withPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
        return this;
    }
    
    /**
     * The official's public website URLs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urls")
    public String[] urls;

    public Official withUrls(String[] urls) {
        this.urls = urls;
        return this;
    }
    
    public Official(){}
}
