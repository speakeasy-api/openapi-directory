// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PlusActivitiesSearchSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type PlusActivitiesSearchSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type PlusActivitiesSearchSecurity struct {
	Option1 *PlusActivitiesSearchSecurityOption1 `security:"option"`
	Option2 *PlusActivitiesSearchSecurityOption2 `security:"option"`
}

// PlusActivitiesSearchOrderByEnum - Specifies how to order search results.
type PlusActivitiesSearchOrderByEnum string

const (
	PlusActivitiesSearchOrderByEnumBest   PlusActivitiesSearchOrderByEnum = "best"
	PlusActivitiesSearchOrderByEnumRecent PlusActivitiesSearchOrderByEnum = "recent"
)

func (e *PlusActivitiesSearchOrderByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "best":
		fallthrough
	case "recent":
		*e = PlusActivitiesSearchOrderByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlusActivitiesSearchOrderByEnum: %s", s)
	}
}

type PlusActivitiesSearchRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Specify the preferred language to search with. See search language codes for available values.
	Language *string `queryParam:"style=form,explode=true,name=language"`
	// The maximum number of activities to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Specifies how to order search results.
	OrderBy *PlusActivitiesSearchOrderByEnum `queryParam:"style=form,explode=true,name=orderBy"`
	// The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of "nextPageToken" from the previous response. This token can be of any length.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Full-text search query string.
	Query string `queryParam:"style=form,explode=true,name=query"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type PlusActivitiesSearchResponse struct {
	// Successful response
	ActivityFeed *shared.ActivityFeed
	ContentType  string
	StatusCode   int
	RawResponse  *http.Response
}
