/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SearchCriteria {
    /**
     * This option allows activate the one-way combinable feature
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addOneWayOffers")
    public Boolean addOneWayOffers;
    public SearchCriteria withAddOneWayOffers(Boolean addOneWayOffers) {
        this.addOneWayOffers = addOneWayOffers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalInformation")
    public SearchCriteriaAdditionalInformation additionalInformation;
    public SearchCriteria withAdditionalInformation(SearchCriteriaAdditionalInformation additionalInformation) {
        this.additionalInformation = additionalInformation;
        return this;
    }
    
    /**
     * This option allows to default to a standard fareOption if no offers are found for the selected fareOption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowAlternativeFareOptions")
    public Boolean allowAlternativeFareOptions;
    public SearchCriteria withAllowAlternativeFareOptions(Boolean allowAlternativeFareOptions) {
        this.allowAlternativeFareOptions = allowAlternativeFareOptions;
        return this;
    }
    
    /**
     * This option allows to exclude the isAllotment flag associated to a booking class in the search response when it exist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludeAllotments")
    public Boolean excludeAllotments;
    public SearchCriteria withExcludeAllotments(Boolean excludeAllotments) {
        this.excludeAllotments = excludeAllotments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flightFilters")
    public SearchCriteriaFlightFilters flightFilters;
    public SearchCriteria withFlightFilters(SearchCriteriaFlightFilters flightFilters) {
        this.flightFilters = flightFilters;
        return this;
    }
    
    /**
     * Maximum number of flight offers returned (Max 250)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxFlightOffers")
    public Double maxFlightOffers;
    public SearchCriteria withMaxFlightOffers(Double maxFlightOffers) {
        this.maxFlightOffers = maxFlightOffers;
        return this;
    }
    
    /**
     * maximum price per traveler. By default, no limit is applied. If specified, the value should be a positive number with no decimals
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxPrice")
    public Long maxPrice;
    public SearchCriteria withMaxPrice(Long maxPrice) {
        this.maxPrice = maxPrice;
        return this;
    }
    
    /**
     * Requests the system to find at least one flight-offer per day, if possible, when a range of dates is specified. Default is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oneFlightOfferPerDay")
    public Boolean oneFlightOfferPerDay;
    public SearchCriteria withOneFlightOfferPerDay(Boolean oneFlightOfferPerDay) {
        this.oneFlightOfferPerDay = oneFlightOfferPerDay;
        return this;
    }
    
    /**
     * fare filter options
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pricingOptions")
    public ExtendedPricingOptions pricingOptions;
    public SearchCriteria withPricingOptions(ExtendedPricingOptions pricingOptions) {
        this.pricingOptions = pricingOptions;
        return this;
    }
    
}
