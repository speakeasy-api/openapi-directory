"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contactgroup as shared_contactgroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListContactGroupsResponse:
    r"""The response to a list contact groups request."""
    
    contact_groups: Optional[list[shared_contactgroup.ContactGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactGroups'), 'exclude': lambda f: f is None }})
    r"""The list of contact groups. Members of the contact groups are not populated."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""The token that can be used to retrieve the next page of results."""  
    next_sync_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextSyncToken'), 'exclude': lambda f: f is None }})
    r"""The token that can be used to retrieve changes since the last request."""  
    total_items: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItems'), 'exclude': lambda f: f is None }})
    r"""The total number of items in the list without pagination."""  
    