"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class URLDispatchRule:
    r"""Rules to match an HTTP request and dispatch that request to a service."""
    
    domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain'), 'exclude': lambda f: f is None }})
    r"""Domain name to match against. The wildcard \\"*\\" is supported if specified before a period: \\"*.\\".Defaults to matching all domains: \\"*\\"."""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""Pathname within the host. Must start with a \\"/\\". A single \\"*\\" can be included at the end of the path.The sum of the lengths of the domain and path may not exceed 100 characters."""  
    service: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service'), 'exclude': lambda f: f is None }})
    r"""Resource ID of a service in this application that should serve the matched request. The service must already exist. Example: default."""  
    