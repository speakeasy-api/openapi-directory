"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudmlv1_measurement as shared_googlecloudmlv1_measurement
from ..shared import googlecloudmlv1_trial_parameter as shared_googlecloudmlv1_trial_parameter
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudMlV1TrialStateEnum(str, Enum):
    r"""The detailed state of a trial."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    REQUESTED = 'REQUESTED'
    ACTIVE = 'ACTIVE'
    COMPLETED = 'COMPLETED'
    STOPPING = 'STOPPING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMlV1Trial:
    r"""A message representing a trial."""
    
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientId'), 'exclude': lambda f: f is None }})
    r"""Output only. The identifier of the client that originally requested this trial."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the trial's status changed to COMPLETED."""  
    final_measurement: Optional[shared_googlecloudmlv1_measurement.GoogleCloudMlV1Measurement] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finalMeasurement'), 'exclude': lambda f: f is None }})
    r"""A message representing a measurement."""  
    infeasible_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infeasibleReason'), 'exclude': lambda f: f is None }})
    r"""Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true."""  
    measurements: Optional[list[shared_googlecloudmlv1_measurement.GoogleCloudMlV1Measurement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measurements'), 'exclude': lambda f: f is None }})
    r"""A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Name of the trial assigned by the service."""  
    parameters: Optional[list[shared_googlecloudmlv1_trial_parameter.GoogleCloudMlV1TrialParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""The parameters of the trial."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time at which the trial was started."""  
    state: Optional[GoogleCloudMlV1TrialStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The detailed state of a trial."""  
    trial_infeasible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trialInfeasible'), 'exclude': lambda f: f is None }})
    r"""Output only. If true, the parameters in this trial are not attempted again."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMlV1TrialInput:
    r"""A message representing a trial."""
    
    final_measurement: Optional[shared_googlecloudmlv1_measurement.GoogleCloudMlV1Measurement] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finalMeasurement'), 'exclude': lambda f: f is None }})
    r"""A message representing a measurement."""  
    measurements: Optional[list[shared_googlecloudmlv1_measurement.GoogleCloudMlV1Measurement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measurements'), 'exclude': lambda f: f is None }})
    r"""A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations."""  
    parameters: Optional[list[shared_googlecloudmlv1_trial_parameter.GoogleCloudMlV1TrialParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})
    r"""The parameters of the trial."""  
    state: Optional[GoogleCloudMlV1TrialStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The detailed state of a trial."""  
    