/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class StartImportResponse {
    /**
     * AccountHasOngoingImportException
     */
    
    public Object accountHasOngoingImportException;
    public StartImportResponse withAccountHasOngoingImportException(Object accountHasOngoingImportException) {
        this.accountHasOngoingImportException = accountHasOngoingImportException;
        return this;
    }
    
    
    public String contentType;
    public StartImportResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * EventDataStoreARNInvalidException
     */
    
    public Object eventDataStoreARNInvalidException;
    public StartImportResponse withEventDataStoreARNInvalidException(Object eventDataStoreARNInvalidException) {
        this.eventDataStoreARNInvalidException = eventDataStoreARNInvalidException;
        return this;
    }
    
    /**
     * EventDataStoreNotFoundException
     */
    
    public Object eventDataStoreNotFoundException;
    public StartImportResponse withEventDataStoreNotFoundException(Object eventDataStoreNotFoundException) {
        this.eventDataStoreNotFoundException = eventDataStoreNotFoundException;
        return this;
    }
    
    /**
     * ImportNotFoundException
     */
    
    public Object importNotFoundException;
    public StartImportResponse withImportNotFoundException(Object importNotFoundException) {
        this.importNotFoundException = importNotFoundException;
        return this;
    }
    
    /**
     * InactiveEventDataStoreException
     */
    
    public Object inactiveEventDataStoreException;
    public StartImportResponse withInactiveEventDataStoreException(Object inactiveEventDataStoreException) {
        this.inactiveEventDataStoreException = inactiveEventDataStoreException;
        return this;
    }
    
    /**
     * InsufficientEncryptionPolicyException
     */
    
    public Object insufficientEncryptionPolicyException;
    public StartImportResponse withInsufficientEncryptionPolicyException(Object insufficientEncryptionPolicyException) {
        this.insufficientEncryptionPolicyException = insufficientEncryptionPolicyException;
        return this;
    }
    
    /**
     * InvalidEventDataStoreCategoryException
     */
    
    public Object invalidEventDataStoreCategoryException;
    public StartImportResponse withInvalidEventDataStoreCategoryException(Object invalidEventDataStoreCategoryException) {
        this.invalidEventDataStoreCategoryException = invalidEventDataStoreCategoryException;
        return this;
    }
    
    /**
     * InvalidEventDataStoreStatusException
     */
    
    public Object invalidEventDataStoreStatusException;
    public StartImportResponse withInvalidEventDataStoreStatusException(Object invalidEventDataStoreStatusException) {
        this.invalidEventDataStoreStatusException = invalidEventDataStoreStatusException;
        return this;
    }
    
    /**
     * InvalidImportSourceException
     */
    
    public Object invalidImportSourceException;
    public StartImportResponse withInvalidImportSourceException(Object invalidImportSourceException) {
        this.invalidImportSourceException = invalidImportSourceException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;
    public StartImportResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;
    public StartImportResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.StartImportResponse startImportResponse;
    public StartImportResponse withStartImportResponse(org.openapis.openapi.models.shared.StartImportResponse startImportResponse) {
        this.startImportResponse = startImportResponse;
        return this;
    }
    
    
    public Integer statusCode;
    public StartImportResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public StartImportResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;
    public StartImportResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
}
