"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListAccountPhoneNumbersSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class ListAccountPhoneNumbersExtensionTypeEnum(str, Enum):
    r"""The type of assignee to whom the number is assigned. The value can be one of the following:<br>
    `user`<br> `callQueue`<br> `autoReceptionist`<br>
    `commonAreaPhone`
    """
    USER = 'user'
    CALL_QUEUE = 'callQueue'
    AUTO_RECEPTIONIST = 'autoReceptionist'
    COMMON_AREA_PHONE = 'commonAreaPhone'

class ListAccountPhoneNumbersNumberTypeEnum(str, Enum):
    r"""The type of phone number. The value can be either `toll` or `tollfree`."""
    TOLL = 'toll'
    TOLLFREE = 'tollfree'

class ListAccountPhoneNumbersTypeEnum(str, Enum):
    r"""Query response by number assignment. The value can be one of the following:
    <br>
    `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>
    `all`: Include both assigned and unassigned numbers in the response.<br>
    `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
    """
    ASSIGNED = 'assigned'
    UNASSIGNED = 'unassigned'
    ALL = 'all'


@dataclasses.dataclass
class ListAccountPhoneNumbersRequest:
    
    extension_type: Optional[ListAccountPhoneNumbersExtensionTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'extension_type', 'style': 'form', 'explode': True }})
    r"""The type of assignee to whom the number is assigned. The value can be one of the following:<br>
    `user`<br> `callQueue`<br> `autoReceptionist`<br>
    `commonAreaPhone`
    """  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    number_type: Optional[ListAccountPhoneNumbersNumberTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'number_type', 'style': 'form', 'explode': True }})
    r"""The type of phone number. The value can be either `toll` or `tollfree`."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned within a single API call."""  
    pending_numbers: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pending_numbers', 'style': 'form', 'explode': True }})
    r"""Include or exclude pending numbers in the response. The value can be either `true` or `false`."""  
    site_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'site_id', 'style': 'form', 'explode': True }})
    r"""Unique identifier of the site. Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by a specific phone site. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details."""  
    type: Optional[ListAccountPhoneNumbersTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Query response by number assignment. The value can be one of the following:
    <br>
    `assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist or a common area phone in an account. <br>`unassigned`: The number is not assigned to anyone.<br>
    `all`: Include both assigned and unassigned numbers in the response.<br>
    `byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.
    """  
    
class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum(str, Enum):
    r"""Indicates who the phone number belongs to.<br>
    `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
    `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
    """
    USER = 'user'
    CALL_QUEUE = 'callQueue'
    AUTO_RECEPTIONIST = 'autoReceptionist'
    COMMON_AREA_PHONE = 'commonAreaPhone'


@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssignee:
    
    extension_number: Optional[int] = dataclasses.field(default=None)
    r"""Extension number of the Phone."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the user to whom the number has been assigned."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the user to whom the number has been assigned."""  
    type: Optional[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssigneeTypeEnum] = dataclasses.field(default=None)
    r"""Indicates who the phone number belongs to.<br>
    `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
    `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
    """  
    

@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersCarrier:
    r"""Displayed when the `type` request parameter is `byoc`."""
    
    code: Optional[str] = dataclasses.field(default=None)
    r"""The carrier code."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the carrier to which the phone number is assigned."""  
    
class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum(str, Enum):
    r"""The type of number. Values can be one of the following:<br>
    `toll`, `tollfree`
    """
    TOLL = 'toll'
    TOLLFREE = 'tollfree'


@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSipGroup:
    r"""Displayed when the `type` request parameter is `byoc`."""
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the SIP group for which the phone number is assigned."""  
    

@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSite:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the site where the phone number is assigned."""  
    
class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum(str, Enum):
    r"""Source of phone number."""
    INTERNAL = 'internal'
    EXTERNAL = 'external'

class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum(str, Enum):
    r"""Status of the number."""
    PENDING = 'pending'
    AVAILABLE = 'available'


@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationXMLPhoneNumbers:
    
    assignee: Optional[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersAssignee] = dataclasses.field(default=None)  
    capability: Optional[list[str]] = dataclasses.field(default=None)
    r"""The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values."""  
    carrier: Optional[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersCarrier] = dataclasses.field(default=None)
    r"""Displayed when the `type` request parameter is `byoc`."""  
    display_name: Optional[str] = dataclasses.field(default=None)
    r"""The display name for the phone number."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the Phone Number."""  
    location: Optional[str] = dataclasses.field(default=None)
    r"""Location (city, state and country) where the Phone number is assigned."""  
    number: Optional[str] = dataclasses.field(default=None)
    r"""Phone number in E164 format."""  
    number_type: Optional[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersNumberTypeEnum] = dataclasses.field(default=None)
    r"""The type of number. Values can be one of the following:<br>
    `toll`, `tollfree`
    """  
    sip_group: Optional[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSipGroup] = dataclasses.field(default=None)
    r"""Displayed when the `type` request parameter is `byoc`."""  
    site: Optional[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSite] = dataclasses.field(default=None)  
    source: Optional[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersSourceEnum] = dataclasses.field(default=None)
    r"""Source of phone number."""  
    status: Optional[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbersStatusEnum] = dataclasses.field(default=None)
    r"""Status of the number."""  
    

@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Phone numbers listed successfully.
    """
    
    next_page_token: Optional[str] = dataclasses.field(default=None)
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)"""  
    page_size: Optional[int] = dataclasses.field(default=None)
    r"""The number of records returned within a single API call."""  
    phone_numbers: Optional[list[ListAccountPhoneNumbers200ApplicationXMLPhoneNumbers]] = dataclasses.field(default=None)  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""The total number of records returned."""  
    
class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum(str, Enum):
    r"""Indicates who the phone number belongs to.<br>
    `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
    `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
    """
    USER = 'user'
    CALL_QUEUE = 'callQueue'
    AUTO_RECEPTIONIST = 'autoReceptionist'
    COMMON_AREA_PHONE = 'commonAreaPhone'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssignee:
    
    extension_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Extension number of the Phone."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the user to whom the number has been assigned."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the user to whom the number has been assigned."""  
    type: Optional[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssigneeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Indicates who the phone number belongs to.<br>
    `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).
    `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersCarrier:
    r"""Displayed when the `type` request parameter is `byoc`."""
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The carrier code."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the carrier to which the phone number is assigned."""  
    
class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum(str, Enum):
    r"""The type of number. Values can be one of the following:<br>
    `toll`, `tollfree`
    """
    TOLL = 'toll'
    TOLLFREE = 'tollfree'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSipGroup:
    r"""Displayed when the `type` request parameter is `byoc`."""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the SIP group for which the phone number is assigned."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSite:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the site where the phone number is assigned."""  
    
class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum(str, Enum):
    r"""Source of phone number."""
    INTERNAL = 'internal'
    EXTERNAL = 'external'

class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum(str, Enum):
    r"""Status of the number."""
    PENDING = 'pending'
    AVAILABLE = 'available'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationJSONPhoneNumbers:
    
    assignee: Optional[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersAssignee] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignee'), 'exclude': lambda f: f is None }})  
    capability: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capability'), 'exclude': lambda f: f is None }})
    r"""The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values."""  
    carrier: Optional[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersCarrier] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier'), 'exclude': lambda f: f is None }})
    r"""Displayed when the `type` request parameter is `byoc`."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name'), 'exclude': lambda f: f is None }})
    r"""The display name for the phone number."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the Phone Number."""  
    location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""Location (city, state and country) where the Phone number is assigned."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""Phone number in E164 format."""  
    number_type: Optional[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersNumberTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_type'), 'exclude': lambda f: f is None }})
    r"""The type of number. Values can be one of the following:<br>
    `toll`, `tollfree`
    """  
    sip_group: Optional[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSipGroup] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sip_group'), 'exclude': lambda f: f is None }})
    r"""Displayed when the `type` request parameter is `byoc`."""  
    site: Optional[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site'), 'exclude': lambda f: f is None }})  
    source: Optional[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""Source of phone number."""  
    status: Optional[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbersStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the number."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListAccountPhoneNumbers200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Phone numbers listed successfully.
    """
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""The number of records returned within a single API call."""  
    phone_numbers: Optional[list[ListAccountPhoneNumbers200ApplicationJSONPhoneNumbers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_numbers'), 'exclude': lambda f: f is None }})  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""The total number of records returned."""  
    

@dataclasses.dataclass
class ListAccountPhoneNumbersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_account_phone_numbers_200_application_json_object: Optional[ListAccountPhoneNumbers200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Phone numbers listed successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    