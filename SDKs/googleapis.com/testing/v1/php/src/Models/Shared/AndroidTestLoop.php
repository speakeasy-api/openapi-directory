<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AndroidTestLoop - A test of an Android Application with a Test Loop. The intent \ will be implicitly added, since Games is the only user of this api, for the time being.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AndroidTestLoop
{
    /**
     * A reference to a file, used for user inputs.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FileReference $appApk
     */
	#[\JMS\Serializer\Annotation\SerializedName('appApk')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FileReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FileReference $appApk = null;
    
    /**
     * An Android App Bundle file format, containing a BundleConfig.pb file, a base module directory, zero or more dynamic feature module directories. See https://developer.android.com/guide/app-bundle/build for guidance on building App Bundles.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AppBundle $appBundle
     */
	#[\JMS\Serializer\Annotation\SerializedName('appBundle')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AppBundle')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AppBundle $appBundle = null;
    
    /**
     * The java package for the application under test. The default is determined by examining the application's manifest.
     * 
     * @var ?string $appPackageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('appPackageId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $appPackageId = null;
    
    /**
     * The list of scenario labels that should be run during the test. The scenario labels should map to labels defined in the application's manifest. For example, player_experience and com.google.test.loops.player_experience add all of the loops labeled in the manifest with the com.google.test.loops.player_experience name to the execution. Scenarios can also be specified in the scenarios field.
     * 
     * @var ?array<string> $scenarioLabels
     */
	#[\JMS\Serializer\Annotation\SerializedName('scenarioLabels')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scenarioLabels = null;
    
    /**
     * The list of scenarios that should be run during the test. The default is all test loops, derived from the application's manifest.
     * 
     * @var ?array<int> $scenarios
     */
	#[\JMS\Serializer\Annotation\SerializedName('scenarios')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scenarios = null;
    
	public function __construct()
	{
		$this->appApk = null;
		$this->appBundle = null;
		$this->appPackageId = null;
		$this->scenarioLabels = null;
		$this->scenarios = null;
	}
}
