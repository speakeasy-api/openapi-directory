"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createdisputeevidencetextrequest as shared_createdisputeevidencetextrequest
from ..shared import createdisputeevidencetextresponse as shared_createdisputeevidencetextresponse
from typing import Optional


@dataclasses.dataclass
class CreateDisputeEvidenceTextSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class CreateDisputeEvidenceTextRequest:
    
    create_dispute_evidence_text_request: shared_createdisputeevidencetextrequest.CreateDisputeEvidenceTextRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""An object containing the fields to POST for the request.
    
    See the corresponding object definition for field details.
    """  
    dispute_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'dispute_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the dispute you want to upload evidence for."""  
    

@dataclasses.dataclass
class CreateDisputeEvidenceTextResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_dispute_evidence_text_response: Optional[shared_createdisputeevidencetextresponse.CreateDisputeEvidenceTextResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    