<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class FinancialMetricPeriods
{
    /**
     * $errors
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FinancialMetricPeriodsErrors> $errors
     */
	#[\JMS\Serializer\Annotation\SerializedName('errors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FinancialMetricPeriodsErrors>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $errors = null;
    
    /**
     * The date from which the report starts.
     * 
     * @var ?\DateTime $fromDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $fromDate = null;
    
    /**
     * $inputs
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FinancialMetricPeriodsInputs> $inputs
     */
	#[\JMS\Serializer\Annotation\SerializedName('inputs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FinancialMetricPeriodsInputs>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $inputs = null;
    
    /**
     * The date on which the report ends (inclusive of day).
     * 
     * @var ?\DateTime $toDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('toDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $toDate = null;
    
    /**
     * The top level metric value that is calculated for the specified period. 
     * 
     * 
     * If the system cannot calculate for that period, the value will be null. The system will still show the metric inputs.
     * 
     * @var ?float $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $value = null;
    
	public function __construct()
	{
		$this->errors = null;
		$this->fromDate = null;
		$this->inputs = null;
		$this->toDate = null;
		$this->value = null;
	}
}
