"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import errorlimit as shared_errorlimit
from ..shared import legalagreement as shared_legalagreement
from typing import Optional


@dataclasses.dataclass
class GetRequest:
    
    keys: list[str] = dataclasses.field(metadata={'query_param': { 'field_name': 'keys', 'style': 'form', 'explode': False }})
    r"""Keys for Agreements whose details are to be retrieved"""  
    x_market_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Market-Id', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the Market used to retrieve/translate Legal Agreements"""  
    x_private_label_id: Optional[int] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Private-Label-Id', 'style': 'simple', 'explode': False }})
    r"""PrivateLabelId to operate as, if different from JWT"""  
    

@dataclasses.dataclass
class GetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Request was malformed"""  
    error_limit: Optional[shared_errorlimit.ErrorLimit] = dataclasses.field(default=None)
    r"""Too many requests received within interval"""  
    legal_agreements: Optional[list[shared_legalagreement.LegalAgreement]] = dataclasses.field(default=None)
    r"""Request was successful"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    