"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillbeeInterfacesBillbeeAPIModelUpdateStockResponseData:
    
    current_stock: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrentStock'), 'exclude': lambda f: f is None }})
    r"""The new value for current stock after the update"""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message'), 'exclude': lambda f: f is None }})
    r"""A human readable message that explains the result of the operation"""  
    old_stock: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OldStock'), 'exclude': lambda f: f is None }})
    r"""The old value for current stock before the update"""  
    sku: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SKU'), 'exclude': lambda f: f is None }})
    r"""The SKU of the article to update the current stock"""  
    unfulfilled_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnfulfilledAmount'), 'exclude': lambda f: f is None }})
    r"""The value of the unfulfilled amount (reserved) of the article"""  
    