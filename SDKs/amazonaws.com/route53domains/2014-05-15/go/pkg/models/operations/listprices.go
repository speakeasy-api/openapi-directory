// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListPricesXAmzTargetEnum
type ListPricesXAmzTargetEnum string

const (
	ListPricesXAmzTargetEnumRoute53DomainsV20140515ListPrices ListPricesXAmzTargetEnum = "Route53Domains_v20140515.ListPrices"
)

func (e ListPricesXAmzTargetEnum) ToPointer() *ListPricesXAmzTargetEnum {
	return &e
}

func (e *ListPricesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Route53Domains_v20140515.ListPrices":
		*e = ListPricesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPricesXAmzTargetEnum: %v", v)
	}
}

type ListPricesRequest struct {
	ListPricesRequest shared.ListPricesRequest `request:"mediaType=application/json"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                  `queryParam:"style=form,explode=true,name=MaxItems"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListPricesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListPricesResponse struct {
	ContentType string
	// InvalidInput
	InvalidInput interface{}
	// Success
	ListPricesResponse *shared.ListPricesResponse
	StatusCode         int
	RawResponse        *http.Response
	// UnsupportedTLD
	UnsupportedTLD interface{}
}
