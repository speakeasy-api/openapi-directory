// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateClientAddressPathParams struct {
	// ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field.
	AddressID string `pathParam:"style=simple,explode=false,name=addressId"`
	// ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter.
	ProfileID string `pathParam:"style=simple,explode=false,name=profileId"`
}

type UpdateClientAddressQueryParams struct {
	// The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.
	//
	// > Currently, there are two possible values for this parameter: `email` and `document`.
	AlternativeKey *string `queryParam:"style=form,explode=true,name=alternativeKey"`
}

type UpdateClientAddressHeaders struct {
	// HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent.
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type UpdateClientAddressRequestBody struct {
	// Name of administrative area, such as the state or province.
	AdministrativeAreaLevel1 *string `json:"administrativeAreaLevel1,omitempty"`
	// Two letter country code.
	CountryCode *string `json:"countryCode,omitempty"`
	// Name of the address country.
	CountryName *string `json:"countryName,omitempty"`
	// Name of address locality, such as the city.
	Locality *string `json:"locality,omitempty"`
	// Name of the address locality area, such as the neighborhood or district.
	LocalityAreaLevel1 *string `json:"localityAreaLevel1,omitempty"`
	// Address postal code.
	PostalCode *string `json:"postalCode,omitempty"`
	// Name of the address country.
	Route *string `json:"route,omitempty"`
	// Name of the address country.
	StreetNumber *string `json:"streetNumber,omitempty"`
}

type UpdateClientAddressRequest struct {
	PathParams  UpdateClientAddressPathParams
	QueryParams UpdateClientAddressQueryParams
	Headers     UpdateClientAddressHeaders
	Request     *UpdateClientAddressRequestBody `request:"mediaType=application/json"`
}

type UpdateClientAddressResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	UpdateClientAddress200ApplicationJSONObject map[string]interface{}
}
