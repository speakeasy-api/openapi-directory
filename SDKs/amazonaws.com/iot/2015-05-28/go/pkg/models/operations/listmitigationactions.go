// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListMitigationActionsActionTypeEnum - Specify a value to limit the result to mitigation actions with a specific action type.
type ListMitigationActionsActionTypeEnum string

const (
	ListMitigationActionsActionTypeEnumUpdateDeviceCertificate     ListMitigationActionsActionTypeEnum = "UPDATE_DEVICE_CERTIFICATE"
	ListMitigationActionsActionTypeEnumUpdateCaCertificate         ListMitigationActionsActionTypeEnum = "UPDATE_CA_CERTIFICATE"
	ListMitigationActionsActionTypeEnumAddThingsToThingGroup       ListMitigationActionsActionTypeEnum = "ADD_THINGS_TO_THING_GROUP"
	ListMitigationActionsActionTypeEnumReplaceDefaultPolicyVersion ListMitigationActionsActionTypeEnum = "REPLACE_DEFAULT_POLICY_VERSION"
	ListMitigationActionsActionTypeEnumEnableIotLogging            ListMitigationActionsActionTypeEnum = "ENABLE_IOT_LOGGING"
	ListMitigationActionsActionTypeEnumPublishFindingToSns         ListMitigationActionsActionTypeEnum = "PUBLISH_FINDING_TO_SNS"
)

func (e *ListMitigationActionsActionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UPDATE_DEVICE_CERTIFICATE":
		fallthrough
	case "UPDATE_CA_CERTIFICATE":
		fallthrough
	case "ADD_THINGS_TO_THING_GROUP":
		fallthrough
	case "REPLACE_DEFAULT_POLICY_VERSION":
		fallthrough
	case "ENABLE_IOT_LOGGING":
		fallthrough
	case "PUBLISH_FINDING_TO_SNS":
		*e = ListMitigationActionsActionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListMitigationActionsActionTypeEnum: %s", s)
	}
}

type ListMitigationActionsQueryParams struct {
	// Specify a value to limit the result to mitigation actions with a specific action type.
	ActionType *ListMitigationActionsActionTypeEnum `queryParam:"style=form,explode=true,name=actionType"`
	// The maximum number of results to return at one time. The default is 25.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token for the next set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListMitigationActionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListMitigationActionsRequest struct {
	QueryParams ListMitigationActionsQueryParams
	Headers     ListMitigationActionsHeaders
}

type ListMitigationActionsResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListMitigationActionsResponse *shared.ListMitigationActionsResponse
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
