// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreativeCustomEventAdvertiserCustomEventTypeEnum - Type of the event. This is a read-only field.
type CreativeCustomEventAdvertiserCustomEventTypeEnum string

const (
	CreativeCustomEventAdvertiserCustomEventTypeEnumAdvertiserEventTimer   CreativeCustomEventAdvertiserCustomEventTypeEnum = "ADVERTISER_EVENT_TIMER"
	CreativeCustomEventAdvertiserCustomEventTypeEnumAdvertiserEventExit    CreativeCustomEventAdvertiserCustomEventTypeEnum = "ADVERTISER_EVENT_EXIT"
	CreativeCustomEventAdvertiserCustomEventTypeEnumAdvertiserEventCounter CreativeCustomEventAdvertiserCustomEventTypeEnum = "ADVERTISER_EVENT_COUNTER"
)

func (e CreativeCustomEventAdvertiserCustomEventTypeEnum) ToPointer() *CreativeCustomEventAdvertiserCustomEventTypeEnum {
	return &e
}

func (e *CreativeCustomEventAdvertiserCustomEventTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ADVERTISER_EVENT_TIMER":
		fallthrough
	case "ADVERTISER_EVENT_EXIT":
		fallthrough
	case "ADVERTISER_EVENT_COUNTER":
		*e = CreativeCustomEventAdvertiserCustomEventTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeCustomEventAdvertiserCustomEventTypeEnum: %v", v)
	}
}

// CreativeCustomEventArtworkTypeEnum - Artwork type used by the creative.This is a read-only field.
type CreativeCustomEventArtworkTypeEnum string

const (
	CreativeCustomEventArtworkTypeEnumArtworkTypeFlash CreativeCustomEventArtworkTypeEnum = "ARTWORK_TYPE_FLASH"
	CreativeCustomEventArtworkTypeEnumArtworkTypeHtml5 CreativeCustomEventArtworkTypeEnum = "ARTWORK_TYPE_HTML5"
	CreativeCustomEventArtworkTypeEnumArtworkTypeMixed CreativeCustomEventArtworkTypeEnum = "ARTWORK_TYPE_MIXED"
	CreativeCustomEventArtworkTypeEnumArtworkTypeImage CreativeCustomEventArtworkTypeEnum = "ARTWORK_TYPE_IMAGE"
)

func (e CreativeCustomEventArtworkTypeEnum) ToPointer() *CreativeCustomEventArtworkTypeEnum {
	return &e
}

func (e *CreativeCustomEventArtworkTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARTWORK_TYPE_FLASH":
		fallthrough
	case "ARTWORK_TYPE_HTML5":
		fallthrough
	case "ARTWORK_TYPE_MIXED":
		fallthrough
	case "ARTWORK_TYPE_IMAGE":
		*e = CreativeCustomEventArtworkTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeCustomEventArtworkTypeEnum: %v", v)
	}
}

// CreativeCustomEventTargetTypeEnum - Target type used by the event.
type CreativeCustomEventTargetTypeEnum string

const (
	CreativeCustomEventTargetTypeEnumTargetBlank  CreativeCustomEventTargetTypeEnum = "TARGET_BLANK"
	CreativeCustomEventTargetTypeEnumTargetTop    CreativeCustomEventTargetTypeEnum = "TARGET_TOP"
	CreativeCustomEventTargetTypeEnumTargetSelf   CreativeCustomEventTargetTypeEnum = "TARGET_SELF"
	CreativeCustomEventTargetTypeEnumTargetParent CreativeCustomEventTargetTypeEnum = "TARGET_PARENT"
	CreativeCustomEventTargetTypeEnumTargetPopup  CreativeCustomEventTargetTypeEnum = "TARGET_POPUP"
)

func (e CreativeCustomEventTargetTypeEnum) ToPointer() *CreativeCustomEventTargetTypeEnum {
	return &e
}

func (e *CreativeCustomEventTargetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TARGET_BLANK":
		fallthrough
	case "TARGET_TOP":
		fallthrough
	case "TARGET_SELF":
		fallthrough
	case "TARGET_PARENT":
		fallthrough
	case "TARGET_POPUP":
		*e = CreativeCustomEventTargetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeCustomEventTargetTypeEnum: %v", v)
	}
}

// CreativeCustomEvent - Creative Custom Event.
type CreativeCustomEvent struct {
	// Unique ID of this event used by Reporting and Data Transfer. This is a read-only field.
	AdvertiserCustomEventID *string `json:"advertiserCustomEventId,omitempty"`
	// User-entered name for the event.
	AdvertiserCustomEventName *string `json:"advertiserCustomEventName,omitempty"`
	// Type of the event. This is a read-only field.
	AdvertiserCustomEventType *CreativeCustomEventAdvertiserCustomEventTypeEnum `json:"advertiserCustomEventType,omitempty"`
	// Artwork label column, used to link events in Campaign Manager back to events in Studio. This is a required field and should not be modified after insertion.
	ArtworkLabel *string `json:"artworkLabel,omitempty"`
	// Artwork type used by the creative.This is a read-only field.
	ArtworkType *CreativeCustomEventArtworkTypeEnum `json:"artworkType,omitempty"`
	// Click-through URL
	ExitClickThroughURL *CreativeClickThroughURL `json:"exitClickThroughUrl,omitempty"`
	// ID of this event. This is a required field and should not be modified after insertion.
	ID *string `json:"id,omitempty"`
	// Popup Window Properties.
	PopupWindowProperties *PopupWindowProperties `json:"popupWindowProperties,omitempty"`
	// Target type used by the event.
	TargetType *CreativeCustomEventTargetTypeEnum `json:"targetType,omitempty"`
	// Video reporting ID, used to differentiate multiple videos in a single creative. This is a read-only field.
	VideoReportingID *string `json:"videoReportingId,omitempty"`
}
