/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ReposCreateDispatchEventRequestBody extends SpeakeasyBase {
  /**
   * JSON payload with extra information about the webhook event that your action or worklow may use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_payload" })
  clientPayload?: Record<string, any>;

  /**
   * A custom webhook event name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_type" })
  eventType: string;
}

export class ReposCreateDispatchEventRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ReposCreateDispatchEventRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class ReposCreateDispatchEventResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
