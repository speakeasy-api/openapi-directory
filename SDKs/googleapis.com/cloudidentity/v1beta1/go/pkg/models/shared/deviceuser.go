// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeviceUserCompromisedStateEnum - Compromised State of the DeviceUser object
type DeviceUserCompromisedStateEnum string

const (
	DeviceUserCompromisedStateEnumCompromisedStateUnspecified DeviceUserCompromisedStateEnum = "COMPROMISED_STATE_UNSPECIFIED"
	DeviceUserCompromisedStateEnumCompromised                 DeviceUserCompromisedStateEnum = "COMPROMISED"
	DeviceUserCompromisedStateEnumNotCompromised              DeviceUserCompromisedStateEnum = "NOT_COMPROMISED"
)

func (e *DeviceUserCompromisedStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPROMISED_STATE_UNSPECIFIED":
		fallthrough
	case "COMPROMISED":
		fallthrough
	case "NOT_COMPROMISED":
		*e = DeviceUserCompromisedStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceUserCompromisedStateEnum: %s", s)
	}
}

// DeviceUserManagementStateEnum - Output only. Management state of the user on the device.
type DeviceUserManagementStateEnum string

const (
	DeviceUserManagementStateEnumManagementStateUnspecified DeviceUserManagementStateEnum = "MANAGEMENT_STATE_UNSPECIFIED"
	DeviceUserManagementStateEnumWiping                     DeviceUserManagementStateEnum = "WIPING"
	DeviceUserManagementStateEnumWiped                      DeviceUserManagementStateEnum = "WIPED"
	DeviceUserManagementStateEnumApproved                   DeviceUserManagementStateEnum = "APPROVED"
	DeviceUserManagementStateEnumBlocked                    DeviceUserManagementStateEnum = "BLOCKED"
	DeviceUserManagementStateEnumPendingApproval            DeviceUserManagementStateEnum = "PENDING_APPROVAL"
	DeviceUserManagementStateEnumUnenrolled                 DeviceUserManagementStateEnum = "UNENROLLED"
)

func (e *DeviceUserManagementStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MANAGEMENT_STATE_UNSPECIFIED":
		fallthrough
	case "WIPING":
		fallthrough
	case "WIPED":
		fallthrough
	case "APPROVED":
		fallthrough
	case "BLOCKED":
		fallthrough
	case "PENDING_APPROVAL":
		fallthrough
	case "UNENROLLED":
		*e = DeviceUserManagementStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceUserManagementStateEnum: %s", s)
	}
}

// DeviceUserPasswordStateEnum - Password state of the DeviceUser object
type DeviceUserPasswordStateEnum string

const (
	DeviceUserPasswordStateEnumPasswordStateUnspecified DeviceUserPasswordStateEnum = "PASSWORD_STATE_UNSPECIFIED"
	DeviceUserPasswordStateEnumPasswordSet              DeviceUserPasswordStateEnum = "PASSWORD_SET"
	DeviceUserPasswordStateEnumPasswordNotSet           DeviceUserPasswordStateEnum = "PASSWORD_NOT_SET"
)

func (e *DeviceUserPasswordStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PASSWORD_STATE_UNSPECIFIED":
		fallthrough
	case "PASSWORD_SET":
		fallthrough
	case "PASSWORD_NOT_SET":
		*e = DeviceUserPasswordStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceUserPasswordStateEnum: %s", s)
	}
}

// DeviceUser - Represents a user's use of a Device in the Cloud Identity Devices API. A DeviceUser is a resource representing a user's use of a Device
type DeviceUser struct {
	// Compromised State of the DeviceUser object
	CompromisedState *DeviceUserCompromisedStateEnum `json:"compromisedState,omitempty"`
	// When the user first signed in to the device
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. Most recent time when user registered with this service.
	FirstSyncTime *string `json:"firstSyncTime,omitempty"`
	// Output only. Default locale used on device, in IETF BCP-47 format.
	LanguageCode *string `json:"languageCode,omitempty"`
	// Output only. Last time when user synced with policies.
	LastSyncTime *string `json:"lastSyncTime,omitempty"`
	// Output only. Management state of the user on the device.
	ManagementState *DeviceUserManagementStateEnum `json:"managementState,omitempty"`
	// Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the DeviceUser in format: `devices/{device_id}/deviceUsers/{device_user_id}`, where `device_user_id` uniquely identifies a user's use of a device.
	Name *string `json:"name,omitempty"`
	// Password state of the DeviceUser object
	PasswordState *DeviceUserPasswordStateEnum `json:"passwordState,omitempty"`
	// Output only. User agent on the device for this specific user
	UserAgent *string `json:"userAgent,omitempty"`
	// Email address of the user registered on the device.
	UserEmail *string `json:"userEmail,omitempty"`
}
