// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PlusPeopleListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type PlusPeopleListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type PlusPeopleListSecurity struct {
	Option1 *PlusPeopleListSecurityOption1 `security:"option"`
	Option2 *PlusPeopleListSecurityOption2 `security:"option"`
}

// PlusPeopleListCollectionEnum - The collection of people to list.
type PlusPeopleListCollectionEnum string

const (
	PlusPeopleListCollectionEnumConnected PlusPeopleListCollectionEnum = "connected"
	PlusPeopleListCollectionEnumVisible   PlusPeopleListCollectionEnum = "visible"
)

func (e PlusPeopleListCollectionEnum) ToPointer() *PlusPeopleListCollectionEnum {
	return &e
}

func (e *PlusPeopleListCollectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "connected":
		fallthrough
	case "visible":
		*e = PlusPeopleListCollectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlusPeopleListCollectionEnum: %v", v)
	}
}

// PlusPeopleListOrderByEnum - The order to return people in.
type PlusPeopleListOrderByEnum string

const (
	PlusPeopleListOrderByEnumAlphabetical PlusPeopleListOrderByEnum = "alphabetical"
	PlusPeopleListOrderByEnumBest         PlusPeopleListOrderByEnum = "best"
)

func (e PlusPeopleListOrderByEnum) ToPointer() *PlusPeopleListOrderByEnum {
	return &e
}

func (e *PlusPeopleListOrderByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "alphabetical":
		fallthrough
	case "best":
		*e = PlusPeopleListOrderByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlusPeopleListOrderByEnum: %v", v)
	}
}

type PlusPeopleListRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// The collection of people to list.
	Collection PlusPeopleListCollectionEnum `pathParam:"style=simple,explode=false,name=collection"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The maximum number of people to include in the response, which is used for paging. For any response, the actual number returned might be less than the specified maxResults.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The order to return people in.
	OrderBy *PlusPeopleListOrderByEnum `queryParam:"style=form,explode=true,name=orderBy"`
	// The continuation token, which is used to page through large result sets. To get the next page of results, set this parameter to the value of "nextPageToken" from the previous response.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Get the collection of people for the person identified. Use "me" to indicate the authenticated user.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type PlusPeopleListResponse struct {
	ContentType string
	// Successful response
	PeopleFeed  *shared.PeopleFeed
	StatusCode  int
	RawResponse *http.Response
}
