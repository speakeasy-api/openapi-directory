<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ParameterConstraints - The constraints that the administrator has put on the parameter.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ParameterConstraints
{
	#[\JMS\Serializer\Annotation\SerializedName('AllowedPattern')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $allowedPattern = null;
    
    /**
     * $allowedValues
     * 
     * @var ?array<string> $allowedValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('AllowedValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allowedValues = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ConstraintDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $constraintDescription = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MaxLength')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maxLength = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MaxValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maxValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MinLength')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minLength = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MinValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minValue = null;
    
	public function __construct()
	{
		$this->allowedPattern = null;
		$this->allowedValues = null;
		$this->constraintDescription = null;
		$this->maxLength = null;
		$this->maxValue = null;
		$this->minLength = null;
		$this->minValue = null;
	}
}
