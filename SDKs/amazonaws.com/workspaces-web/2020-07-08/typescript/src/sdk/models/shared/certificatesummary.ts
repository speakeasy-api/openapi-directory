/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The summary of the certificate.
 */
export class CertificateSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "issuer" })
  issuer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notValidAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notValidAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "notValidBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notValidBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thumbprint" })
  thumbprint?: string;
}
