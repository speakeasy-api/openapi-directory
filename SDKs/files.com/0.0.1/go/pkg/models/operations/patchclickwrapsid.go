// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PatchClickwrapsIDPathParams struct {
	// Clickwrap ID.
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// PatchClickwrapsIDRequestBodyUseWithBundlesEnum - Use this Clickwrap for Bundles?
type PatchClickwrapsIDRequestBodyUseWithBundlesEnum string

const (
	PatchClickwrapsIDRequestBodyUseWithBundlesEnumNone      PatchClickwrapsIDRequestBodyUseWithBundlesEnum = "none"
	PatchClickwrapsIDRequestBodyUseWithBundlesEnumAvailable PatchClickwrapsIDRequestBodyUseWithBundlesEnum = "available"
	PatchClickwrapsIDRequestBodyUseWithBundlesEnumRequire   PatchClickwrapsIDRequestBodyUseWithBundlesEnum = "require"
)

func (e *PatchClickwrapsIDRequestBodyUseWithBundlesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "available":
		fallthrough
	case "require":
		*e = PatchClickwrapsIDRequestBodyUseWithBundlesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchClickwrapsIDRequestBodyUseWithBundlesEnum: %s", s)
	}
}

// PatchClickwrapsIDRequestBodyUseWithInboxesEnum - Use this Clickwrap for Inboxes?
type PatchClickwrapsIDRequestBodyUseWithInboxesEnum string

const (
	PatchClickwrapsIDRequestBodyUseWithInboxesEnumNone      PatchClickwrapsIDRequestBodyUseWithInboxesEnum = "none"
	PatchClickwrapsIDRequestBodyUseWithInboxesEnumAvailable PatchClickwrapsIDRequestBodyUseWithInboxesEnum = "available"
	PatchClickwrapsIDRequestBodyUseWithInboxesEnumRequire   PatchClickwrapsIDRequestBodyUseWithInboxesEnum = "require"
)

func (e *PatchClickwrapsIDRequestBodyUseWithInboxesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "available":
		fallthrough
	case "require":
		*e = PatchClickwrapsIDRequestBodyUseWithInboxesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchClickwrapsIDRequestBodyUseWithInboxesEnum: %s", s)
	}
}

// PatchClickwrapsIDRequestBodyUseWithUsersEnum - Use this Clickwrap for User Registrations?  Note: This only applies to User Registrations where the User is invited to your Files.com site using an E-Mail invitation process where they then set their own password.
type PatchClickwrapsIDRequestBodyUseWithUsersEnum string

const (
	PatchClickwrapsIDRequestBodyUseWithUsersEnumNone    PatchClickwrapsIDRequestBodyUseWithUsersEnum = "none"
	PatchClickwrapsIDRequestBodyUseWithUsersEnumRequire PatchClickwrapsIDRequestBodyUseWithUsersEnum = "require"
)

func (e *PatchClickwrapsIDRequestBodyUseWithUsersEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "require":
		*e = PatchClickwrapsIDRequestBodyUseWithUsersEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchClickwrapsIDRequestBodyUseWithUsersEnum: %s", s)
	}
}

type PatchClickwrapsIDRequestBody struct {
	// Body text of Clickwrap (supports Markdown formatting).
	Body *string `multipartForm:"name=body"`
	// Name of the Clickwrap agreement (used when selecting from multiple Clickwrap agreements.)
	Name *string `multipartForm:"name=name"`
	// Use this Clickwrap for Bundles?
	UseWithBundles *PatchClickwrapsIDRequestBodyUseWithBundlesEnum `multipartForm:"name=use_with_bundles"`
	// Use this Clickwrap for Inboxes?
	UseWithInboxes *PatchClickwrapsIDRequestBodyUseWithInboxesEnum `multipartForm:"name=use_with_inboxes"`
	// Use this Clickwrap for User Registrations?  Note: This only applies to User Registrations where the User is invited to your Files.com site using an E-Mail invitation process where they then set their own password.
	UseWithUsers *PatchClickwrapsIDRequestBodyUseWithUsersEnum `multipartForm:"name=use_with_users"`
}

type PatchClickwrapsIDRequest struct {
	PathParams PatchClickwrapsIDPathParams
	Request    *PatchClickwrapsIDRequestBody `request:"mediaType=multipart/form-data"`
}

type PatchClickwrapsIDResponse struct {
	// The Clickwraps object.
	ClickwrapEntity *shared.ClickwrapEntity
	ContentType     string
	StatusCode      int
	RawResponse     *http.Response
}
