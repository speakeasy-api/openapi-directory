/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The units for translate elements.
 */
export enum AffineTransformUnitEnum {
  UnitUnspecified = "UNIT_UNSPECIFIED",
  Emu = "EMU",
  Pt = "PT",
}

/**
 * AffineTransform uses a 3x3 matrix with an implied last row of [ 0 0 1 ] to transform source coordinates (x,y) into destination coordinates (x', y') according to: x' x = shear_y scale_y translate_y 1 [ 1 ] After transformation, x' = scale_x * x + shear_x * y + translate_x; y' = scale_y * y + shear_y * x + translate_y; This message is therefore composed of these six matrix elements.
 */
export class AffineTransform extends SpeakeasyBase {
  /**
   * The X coordinate scaling element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scaleX" })
  scaleX?: number;

  /**
   * The Y coordinate scaling element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scaleY" })
  scaleY?: number;

  /**
   * The X coordinate shearing element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shearX" })
  shearX?: number;

  /**
   * The Y coordinate shearing element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shearY" })
  shearY?: number;

  /**
   * The X coordinate translation element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "translateX" })
  translateX?: number;

  /**
   * The Y coordinate translation element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "translateY" })
  translateY?: number;

  /**
   * The units for translate elements.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: AffineTransformUnitEnum;
}
