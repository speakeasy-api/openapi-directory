<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Transcript - A list of messages in the session.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Transcript
{
	#[\JMS\Serializer\Annotation\SerializedName('BeginOffsetMillis')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $beginOffsetMillis;
    
	#[\JMS\Serializer\Annotation\SerializedName('Content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $content;
    
	#[\JMS\Serializer\Annotation\SerializedName('EndOffsetMillis')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $endOffsetMillis;
    
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * $issuesDetected
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\IssueDetected> $issuesDetected
     */
	#[\JMS\Serializer\Annotation\SerializedName('IssuesDetected')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\IssueDetected>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $issuesDetected = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ParticipantId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $participantId;
    
	#[\JMS\Serializer\Annotation\SerializedName('ParticipantRole')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $participantRole;
    
	#[\JMS\Serializer\Annotation\SerializedName('Sentiment')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SentimentValueEnum>')]
    public SentimentValueEnum $sentiment;
    
	public function __construct()
	{
		$this->beginOffsetMillis = 0;
		$this->content = "";
		$this->endOffsetMillis = 0;
		$this->id = "";
		$this->issuesDetected = null;
		$this->participantId = "";
		$this->participantRole = "";
		$this->sentiment = \OpenAPI\OpenAPI\Models\Shared\SentimentValueEnum::POSITIVE;
	}
}
