/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HparamTuningTrial - Training info of a trial in [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models.
 */
public class HparamTuningTrial {
    /**
     * Ending time of the trial.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTimeMs")
    public String endTimeMs;

    public HparamTuningTrial withEndTimeMs(String endTimeMs) {
        this.endTimeMs = endTimeMs;
        return this;
    }
    
    /**
     * Error message for FAILED and INFEASIBLE trial.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;

    public HparamTuningTrial withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * Loss computed on the eval data at the end of trial.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evalLoss")
    public Double evalLoss;

    public HparamTuningTrial withEvalLoss(Double evalLoss) {
        this.evalLoss = evalLoss;
        return this;
    }
    
    /**
     * Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evaluationMetrics")
    public EvaluationMetrics evaluationMetrics;

    public HparamTuningTrial withEvaluationMetrics(EvaluationMetrics evaluationMetrics) {
        this.evaluationMetrics = evaluationMetrics;
        return this;
    }
    
    /**
     * Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hparamTuningEvaluationMetrics")
    public EvaluationMetrics hparamTuningEvaluationMetrics;

    public HparamTuningTrial withHparamTuningEvaluationMetrics(EvaluationMetrics hparamTuningEvaluationMetrics) {
        this.hparamTuningEvaluationMetrics = hparamTuningEvaluationMetrics;
        return this;
    }
    
    /**
     * Options used in model training.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hparams")
    public TrainingOptions hparams;

    public HparamTuningTrial withHparams(TrainingOptions hparams) {
        this.hparams = hparams;
        return this;
    }
    
    /**
     * Starting time of the trial.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTimeMs")
    public String startTimeMs;

    public HparamTuningTrial withStartTimeMs(String startTimeMs) {
        this.startTimeMs = startTimeMs;
        return this;
    }
    
    /**
     * The status of the trial.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public HparamTuningTrialStatusEnum status;

    public HparamTuningTrial withStatus(HparamTuningTrialStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Loss computed on the training data at the end of trial.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trainingLoss")
    public Double trainingLoss;

    public HparamTuningTrial withTrainingLoss(Double trainingLoss) {
        this.trainingLoss = trainingLoss;
        return this;
    }
    
    /**
     * 1-based index of the trial.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trialId")
    public String trialId;

    public HparamTuningTrial withTrialId(String trialId) {
        this.trialId = trialId;
        return this;
    }
    
    public HparamTuningTrial(){}
}
