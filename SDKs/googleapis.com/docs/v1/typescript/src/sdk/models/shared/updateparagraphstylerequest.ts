/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParagraphStyle } from "./paragraphstyle";
import { Range } from "./range";
import { Expose, Type } from "class-transformer";

/**
 * Update the styling of all paragraphs that overlap with the given range.
 */
export class UpdateParagraphStyleRequest extends SpeakeasyBase {
  /**
   * The fields that should be updated. At least one field must be specified. The root `paragraph_style` is implied and should not be specified. A single `"*"` can be used as short-hand for listing every field. For example, to update the paragraph style's alignment property, set `fields` to `"alignment"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields?: string;

  /**
   * Styles that apply to a whole paragraph. Inherited paragraph styles are represented as unset fields in this message. A paragraph style's parent depends on where the paragraph style is defined: * The ParagraphStyle on a Paragraph inherits from the paragraph's corresponding named style type. * The ParagraphStyle on a named style inherits from the normal text named style. * The ParagraphStyle of the normal text named style inherits from the default paragraph style in the Docs editor. * The ParagraphStyle on a Paragraph element that's contained in a table may inherit its paragraph style from the table style. If the paragraph style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paragraphStyle" })
  @Type(() => ParagraphStyle)
  paragraphStyle?: ParagraphStyle;

  /**
   * Specifies a contiguous range of text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => Range)
  range?: Range;
}
