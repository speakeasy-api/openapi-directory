<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class RadAnalyst
{
    /**
     * ID of RAD analyst.
     * 
     * @var ?float $analystId
     */
	#[\JMS\Serializer\Annotation\SerializedName('analyst_id')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $analystId = null;
    
    /**
     * Short ID of RAD analyst.
     * 
     * @var ?float $analystShortId
     */
	#[\JMS\Serializer\Annotation\SerializedName('analyst_short_id')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $analystShortId = null;
    
    /**
     * Date of most recent RAD analyst assignment change
     * 
     * @var ?\DateTime $assignmentUpdateDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignment_update_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $assignmentUpdateDate = null;
    
    /**
     * 
     * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
     * 
     * 
     * @var string $committeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('committee_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $committeeId;
    
    /**
     * The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
     * 
     * @var ?string $committeeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('committee_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $committeeName = null;
    
    /**
     * Email of RAD analyst
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Fist name of RAD analyst
     * 
     * @var ?string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
    /**
     * Last name of RAD analyst
     * 
     * @var ?string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastName = null;
    
    /**
     * Branch of RAD analyst
     * 
     * @var ?string $radBranch
     */
	#[\JMS\Serializer\Annotation\SerializedName('rad_branch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $radBranch = null;
    
    /**
     * Telephone extension of RAD analyst
     * 
     * @var ?float $telephoneExt
     */
	#[\JMS\Serializer\Annotation\SerializedName('telephone_ext')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $telephoneExt = null;
    
    /**
     * Title of RAD analyst
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->analystId = null;
		$this->analystShortId = null;
		$this->assignmentUpdateDate = null;
		$this->committeeId = "";
		$this->committeeName = null;
		$this->email = null;
		$this->firstName = null;
		$this->lastName = null;
		$this->radBranch = null;
		$this->telephoneExt = null;
		$this->title = null;
	}
}
