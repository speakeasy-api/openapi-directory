/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BranchRestrictionPolicy } from "./branchrestrictionpolicy";
import { Integration } from "./integration";
import { SimpleUser } from "./simpleuser";
import { StatusCheckPolicy } from "./statuscheckpolicy";
import { Team } from "./team";
import { Expose, Type } from "class-transformer";

export class ProtectedBranchAllowDeletions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;
}

export class ProtectedBranchAllowForcePushes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;
}

export class ProtectedBranchBlockCreations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;
}

export class ProtectedBranchEnforceAdmins extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

export class ProtectedBranchRequiredConversationResolution extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

export class ProtectedBranchRequiredLinearHistory extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;
}

export class ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Integration })
  @Expose({ name: "apps" })
  @Type(() => Integration)
  apps?: Integration[];

  @SpeakeasyMetadata({ elemType: Team })
  @Expose({ name: "teams" })
  @Type(() => Team)
  teams: Team[];

  @SpeakeasyMetadata()
  @Expose({ name: "teams_url" })
  teamsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  @SpeakeasyMetadata({ elemType: SimpleUser })
  @Expose({ name: "users" })
  @Type(() => SimpleUser)
  users: SimpleUser[];

  @SpeakeasyMetadata()
  @Expose({ name: "users_url" })
  usersUrl: string;
}

export class ProtectedBranchRequiredPullRequestReviews extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dismiss_stale_reviews" })
  dismissStaleReviews?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "dismissal_restrictions" })
  @Type(() => ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions)
  dismissalRestrictions?: ProtectedBranchRequiredPullRequestReviewsDismissalRestrictions;

  @SpeakeasyMetadata()
  @Expose({ name: "require_code_owner_reviews" })
  requireCodeOwnerReviews?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "required_approving_review_count" })
  requiredApprovingReviewCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

export class ProtectedBranchRequiredSignatures extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

/**
 * Branch protections protect branches
 */
export class ProtectedBranch extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allow_deletions" })
  @Type(() => ProtectedBranchAllowDeletions)
  allowDeletions?: ProtectedBranchAllowDeletions;

  @SpeakeasyMetadata()
  @Expose({ name: "allow_force_pushes" })
  @Type(() => ProtectedBranchAllowForcePushes)
  allowForcePushes?: ProtectedBranchAllowForcePushes;

  @SpeakeasyMetadata()
  @Expose({ name: "block_creations" })
  @Type(() => ProtectedBranchBlockCreations)
  blockCreations?: ProtectedBranchBlockCreations;

  @SpeakeasyMetadata()
  @Expose({ name: "enforce_admins" })
  @Type(() => ProtectedBranchEnforceAdmins)
  enforceAdmins?: ProtectedBranchEnforceAdmins;

  @SpeakeasyMetadata()
  @Expose({ name: "required_conversation_resolution" })
  @Type(() => ProtectedBranchRequiredConversationResolution)
  requiredConversationResolution?: ProtectedBranchRequiredConversationResolution;

  @SpeakeasyMetadata()
  @Expose({ name: "required_linear_history" })
  @Type(() => ProtectedBranchRequiredLinearHistory)
  requiredLinearHistory?: ProtectedBranchRequiredLinearHistory;

  @SpeakeasyMetadata()
  @Expose({ name: "required_pull_request_reviews" })
  @Type(() => ProtectedBranchRequiredPullRequestReviews)
  requiredPullRequestReviews?: ProtectedBranchRequiredPullRequestReviews;

  @SpeakeasyMetadata()
  @Expose({ name: "required_signatures" })
  @Type(() => ProtectedBranchRequiredSignatures)
  requiredSignatures?: ProtectedBranchRequiredSignatures;

  /**
   * Status Check Policy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required_status_checks" })
  @Type(() => StatusCheckPolicy)
  requiredStatusChecks?: StatusCheckPolicy;

  /**
   * Branch Restriction Policy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictions" })
  @Type(() => BranchRestrictionPolicy)
  restrictions?: BranchRestrictionPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
