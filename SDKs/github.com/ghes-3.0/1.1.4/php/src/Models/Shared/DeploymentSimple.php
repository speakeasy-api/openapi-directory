<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DeploymentSimple - A deployment created as the result of an Actions check run from a workflow that references an environment
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DeploymentSimple
{
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * Name for the target deployment environment.
     * 
     * @var string $environment
     */
	#[\JMS\Serializer\Annotation\SerializedName('environment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $environment;
    
    /**
     * Unique identifier of the deployment
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
	#[\JMS\Serializer\Annotation\SerializedName('original_environment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalEnvironment = null;
    
    /**
     * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NullableIntegration $performedViaGithubApp
     */
	#[\JMS\Serializer\Annotation\SerializedName('performed_via_github_app')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableIntegration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NullableIntegration $performedViaGithubApp = null;
    
    /**
     * Specifies if the given environment is one that end-users directly interact with. Default: false.
     * 
     * @var ?bool $productionEnvironment
     */
	#[\JMS\Serializer\Annotation\SerializedName('production_environment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $productionEnvironment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('repository_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $repositoryUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('statuses_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $statusesUrl;
    
    /**
     * Parameter to specify a task to execute
     * 
     * @var string $task
     */
	#[\JMS\Serializer\Annotation\SerializedName('task')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $task;
    
    /**
     * Specifies if the given environment is will no longer exist at some point in the future. Default: false.
     * 
     * @var ?bool $transientEnvironment
     */
	#[\JMS\Serializer\Annotation\SerializedName('transient_environment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $transientEnvironment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->createdAt = new \DateTime();
		$this->description = "";
		$this->environment = "";
		$this->id = 0;
		$this->nodeId = "";
		$this->originalEnvironment = null;
		$this->performedViaGithubApp = null;
		$this->productionEnvironment = null;
		$this->repositoryUrl = "";
		$this->statusesUrl = "";
		$this->task = "";
		$this->transientEnvironment = null;
		$this->updatedAt = new \DateTime();
		$this->url = "";
	}
}
