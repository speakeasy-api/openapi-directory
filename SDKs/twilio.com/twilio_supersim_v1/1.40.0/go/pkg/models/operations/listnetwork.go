// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListNetworkServerList = []string{
	"https://supersim.twilio.com",
}

type ListNetworkSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListNetworkRequest struct {
	// The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Network resources to read.
	IsoCountry *string `queryParam:"style=form,explode=true,name=IsoCountry"`
	// The 'mobile country code' of a country. Network resources with this `mcc` in their `identifiers` will be read.
	Mcc *string `queryParam:"style=form,explode=true,name=Mcc"`
	// The 'mobile network code' of a mobile operator network. Network resources with this `mnc` in their `identifiers` will be read.
	Mnc *string `queryParam:"style=form,explode=true,name=Mnc"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
}

type ListNetworkListNetworkResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListNetworkListNetworkResponse - OK
type ListNetworkListNetworkResponse struct {
	Meta     *ListNetworkListNetworkResponseMeta `json:"meta,omitempty"`
	Networks []shared.SupersimV1Network          `json:"networks,omitempty"`
}

type ListNetworkResponse struct {
	ContentType string
	// OK
	ListNetworkResponse *ListNetworkListNetworkResponse
	StatusCode          int
	RawResponse         *http.Response
}
