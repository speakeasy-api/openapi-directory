"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resourcedatasyncs3destination as shared_resourcedatasyncs3destination
from ..shared import resourcedatasyncsource as shared_resourcedatasyncsource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateResourceDataSyncRequest:
    
    sync_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SyncName') }})  
    s3_destination: Optional[shared_resourcedatasyncs3destination.ResourceDataSyncS3Destination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Destination'), 'exclude': lambda f: f is None }})  
    sync_source: Optional[shared_resourcedatasyncsource.ResourceDataSyncSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SyncSource'), 'exclude': lambda f: f is None }})  
    sync_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SyncType'), 'exclude': lambda f: f is None }})  
    