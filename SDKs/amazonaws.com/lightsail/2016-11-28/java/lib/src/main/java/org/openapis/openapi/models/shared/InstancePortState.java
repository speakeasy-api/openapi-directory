/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstancePortState - Describes open ports on an instance, the IP addresses allowed to connect to the instance through the ports, and the protocol.
 */
public class InstancePortState {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cidrListAliases")
    public String[] cidrListAliases;

    public InstancePortState withCidrListAliases(String[] cidrListAliases) {
        this.cidrListAliases = cidrListAliases;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cidrs")
    public String[] cidrs;

    public InstancePortState withCidrs(String[] cidrs) {
        this.cidrs = cidrs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromPort")
    public Long fromPort;

    public InstancePortState withFromPort(Long fromPort) {
        this.fromPort = fromPort;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6Cidrs")
    public String[] ipv6Cidrs;

    public InstancePortState withIpv6Cidrs(String[] ipv6Cidrs) {
        this.ipv6Cidrs = ipv6Cidrs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public NetworkProtocolEnum protocol;

    public InstancePortState withProtocol(NetworkProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public PortStateEnum state;

    public InstancePortState withState(PortStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toPort")
    public Long toPort;

    public InstancePortState withToPort(Long toPort) {
        this.toPort = toPort;
        return this;
    }
    
    public InstancePortState(){}
}
