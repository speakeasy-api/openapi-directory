// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutAttributesXAmzTargetEnum
type PutAttributesXAmzTargetEnum string

const (
	PutAttributesXAmzTargetEnumAmazonEc2ContainerServiceV20141113PutAttributes PutAttributesXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.PutAttributes"
)

func (e PutAttributesXAmzTargetEnum) ToPointer() *PutAttributesXAmzTargetEnum {
	return &e
}

func (e *PutAttributesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerServiceV20141113.PutAttributes":
		*e = PutAttributesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAttributesXAmzTargetEnum: %v", v)
	}
}

type PutAttributesRequest struct {
	PutAttributesRequest shared.PutAttributesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           PutAttributesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutAttributesResponse struct {
	// AttributeLimitExceededException
	AttributeLimitExceededException interface{}
	// ClusterNotFoundException
	ClusterNotFoundException interface{}
	ContentType              string
	// InvalidParameterException
	InvalidParameterException interface{}
	// Success
	PutAttributesResponse *shared.PutAttributesResponse
	StatusCode            int
	RawResponse           *http.Response
	// TargetNotFoundException
	TargetNotFoundException interface{}
}
