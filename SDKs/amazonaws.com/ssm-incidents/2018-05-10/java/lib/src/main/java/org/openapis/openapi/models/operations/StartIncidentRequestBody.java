/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StartIncidentRequestBody {
    /**
     * A token ensuring that the operation is called only once with the specified details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;
    public StartIncidentRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * &lt;p&gt;Defines the impact to the customers. Providing an impact overwrites the impact provided by a response plan.&lt;/p&gt; &lt;p class="title"&gt; &lt;b&gt;Possible impacts:&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;1&lt;/code&gt; - Critical impact, this typically relates to full application failure that impacts many to all customers. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;2&lt;/code&gt; - High impact, partial application failure with impact to many customers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;3&lt;/code&gt; - Medium impact, the application is providing reduced service to customers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;4&lt;/code&gt; - Low impact, customer might aren't impacted by the problem yet.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;5&lt;/code&gt; - No impact, customers aren't currently impacted but urgent action is needed to avoid impact.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("impact")
    public Long impact;
    public StartIncidentRequestBody withImpact(Long impact) {
        this.impact = impact;
        return this;
    }
    
    /**
     * Add related items to the incident for other responders to use. Related items are Amazon Web Services resources, external links, or files uploaded to an Amazon S3 bucket. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedItems")
    public org.openapis.openapi.models.shared.RelatedItem[] relatedItems;
    public StartIncidentRequestBody withRelatedItems(org.openapis.openapi.models.shared.RelatedItem[] relatedItems) {
        this.relatedItems = relatedItems;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the response plan that pre-defines summary, chat channels, Amazon SNS topics, runbooks, title, and impact of the incident. 
     */
    @JsonProperty("responsePlanArn")
    public String responsePlanArn;
    public StartIncidentRequestBody withResponsePlanArn(String responsePlanArn) {
        this.responsePlanArn = responsePlanArn;
        return this;
    }
    
    /**
     * Provide a title for the incident. Providing a title overwrites the title provided by the response plan. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public StartIncidentRequestBody withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Details about what caused the incident to be created in Incident Manager.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerDetails")
    public StartIncidentRequestBodyTriggerDetails triggerDetails;
    public StartIncidentRequestBody withTriggerDetails(StartIncidentRequestBodyTriggerDetails triggerDetails) {
        this.triggerDetails = triggerDetails;
        return this;
    }
    
}
