"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AssignedUserRoleUserRoleEnum(str, Enum):
    r"""Required. The user role to assign to a user for the entity."""
    USER_ROLE_UNSPECIFIED = 'USER_ROLE_UNSPECIFIED'
    ADMIN = 'ADMIN'
    ADMIN_PARTNER_CLIENT = 'ADMIN_PARTNER_CLIENT'
    STANDARD = 'STANDARD'
    STANDARD_PLANNER = 'STANDARD_PLANNER'
    STANDARD_PLANNER_LIMITED = 'STANDARD_PLANNER_LIMITED'
    STANDARD_PARTNER_CLIENT = 'STANDARD_PARTNER_CLIENT'
    READ_ONLY = 'READ_ONLY'
    REPORTING_ONLY = 'REPORTING_ONLY'
    LIMITED_REPORTING_ONLY = 'LIMITED_REPORTING_ONLY'
    CREATIVE = 'CREATIVE'
    CREATIVE_ADMIN = 'CREATIVE_ADMIN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssignedUserRoleInput:
    r"""A single assigned user role, which defines a user's authorized interaction with a specified partner or advertiser."""
    
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""The ID of the advertiser that the assigend user role applies to."""  
    partner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partnerId'), 'exclude': lambda f: f is None }})
    r"""The ID of the partner that the assigned user role applies to."""  
    user_role: Optional[AssignedUserRoleUserRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userRole'), 'exclude': lambda f: f is None }})
    r"""Required. The user role to assign to a user for the entity."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssignedUserRole:
    r"""A single assigned user role, which defines a user's authorized interaction with a specified partner or advertiser."""
    
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""The ID of the advertiser that the assigend user role applies to."""  
    assigned_user_role_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignedUserRoleId'), 'exclude': lambda f: f is None }})
    r"""Output only. The ID of the assigned user role."""  
    partner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partnerId'), 'exclude': lambda f: f is None }})
    r"""The ID of the partner that the assigned user role applies to."""  
    user_role: Optional[AssignedUserRoleUserRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userRole'), 'exclude': lambda f: f is None }})
    r"""Required. The user role to assign to a user for the entity."""  
    