<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleChromeManagementV1NetworkStatusReport - State of visible/configured networks. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportNetworkStatus](https://chromeenterprise.google/policies/#ReportNetworkStatus) * Data Collection Frequency: 60 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: Yes * Granular permission needed: TELEMETRY_API_NETWORK_REPORT
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleChromeManagementV1NetworkStatusReport
{
    /**
     * Output only. Current connection state of the network.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1NetworkStatusReportConnectionStateEnum $connectionState
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectionState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1NetworkStatusReportConnectionStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1NetworkStatusReportConnectionStateEnum $connectionState = null;
    
    /**
     * Output only. Network connection type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1NetworkStatusReportConnectionTypeEnum $connectionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectionType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1NetworkStatusReportConnectionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1NetworkStatusReportConnectionTypeEnum $connectionType = null;
    
    /**
     * Output only. Whether the wifi encryption key is turned off.
     * 
     * @var ?bool $encryptionOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptionOn')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $encryptionOn = null;
    
    /**
     * Output only. Gateway IP address.
     * 
     * @var ?string $gatewayIpAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('gatewayIpAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gatewayIpAddress = null;
    
    /**
     * Output only. Network connection guid.
     * 
     * @var ?string $guid
     */
	#[\JMS\Serializer\Annotation\SerializedName('guid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $guid = null;
    
    /**
     * Output only. LAN IP address.
     * 
     * @var ?string $lanIpAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('lanIpAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lanIpAddress = null;
    
    /**
     * Output only. Receiving bit rate measured in Megabits per second.
     * 
     * @var ?string $receivingBitRateMbps
     */
	#[\JMS\Serializer\Annotation\SerializedName('receivingBitRateMbps')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $receivingBitRateMbps = null;
    
    /**
     * Output only. Time at which the network state was reported.
     * 
     * @var ?string $reportTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportTime = null;
    
    /**
     * Output only. Frequency the report is sampled.
     * 
     * @var ?string $sampleFrequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('sampleFrequency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sampleFrequency = null;
    
    /**
     * Output only. Signal strength for wireless networks measured in decibels.
     * 
     * @var ?int $signalStrengthDbm
     */
	#[\JMS\Serializer\Annotation\SerializedName('signalStrengthDbm')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $signalStrengthDbm = null;
    
    /**
     * Output only. Transmission bit rate measured in Megabits per second.
     * 
     * @var ?string $transmissionBitRateMbps
     */
	#[\JMS\Serializer\Annotation\SerializedName('transmissionBitRateMbps')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transmissionBitRateMbps = null;
    
    /**
     * Output only. Transmission power measured in decibels.
     * 
     * @var ?int $transmissionPowerDbm
     */
	#[\JMS\Serializer\Annotation\SerializedName('transmissionPowerDbm')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $transmissionPowerDbm = null;
    
    /**
     * Output only. Wifi link quality. Value ranges from [0, 70]. 0 indicates no signal and 70 indicates a strong signal.
     * 
     * @var ?string $wifiLinkQuality
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifiLinkQuality')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wifiLinkQuality = null;
    
    /**
     * Output only. Wifi power management enabled
     * 
     * @var ?bool $wifiPowerManagementEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('wifiPowerManagementEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $wifiPowerManagementEnabled = null;
    
	public function __construct()
	{
		$this->connectionState = null;
		$this->connectionType = null;
		$this->encryptionOn = null;
		$this->gatewayIpAddress = null;
		$this->guid = null;
		$this->lanIpAddress = null;
		$this->receivingBitRateMbps = null;
		$this->reportTime = null;
		$this->sampleFrequency = null;
		$this->signalStrengthDbm = null;
		$this->transmissionBitRateMbps = null;
		$this->transmissionPowerDbm = null;
		$this->wifiLinkQuality = null;
		$this->wifiPowerManagementEnabled = null;
	}
}
