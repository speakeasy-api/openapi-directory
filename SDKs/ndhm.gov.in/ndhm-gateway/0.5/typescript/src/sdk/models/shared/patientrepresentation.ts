/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CareContextRepresentation } from "./carecontextrepresentation";
import { IdentifierTypeEnum } from "./identifiertypeenum";
import { Expose, Type } from "class-transformer";

export class PatientRepresentation extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CareContextRepresentation })
  @Expose({ name: "careContexts" })
  @Type(() => CareContextRepresentation)
  careContexts?: CareContextRepresentation[];

  @SpeakeasyMetadata()
  @Expose({ name: "display" })
  display: string;

  @SpeakeasyMetadata()
  @Expose({ name: "matchedBy" })
  matchedBy?: IdentifierTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "referenceNumber" })
  referenceNumber: string;
}
