<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FirstLastNameGenderedOut - Represents the output of inferring the LIKELY gender from a personal name.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FirstLastNameGenderedOut
{
    /**
     * The first name (also known as given name)
     * 
     * @var ?string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('firstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
    /**
     * Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.
     * 
     * @var ?float $genderScale
     */
	#[\JMS\Serializer\Annotation\SerializedName('genderScale')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $genderScale = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The last name (also known as family name, or surname)
     * 
     * @var ?string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastName = null;
    
    /**
     * Most likely gender
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FirstLastNameGenderedOutLikelyGenderEnum $likelyGender
     */
	#[\JMS\Serializer\Annotation\SerializedName('likelyGender')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FirstLastNameGenderedOutLikelyGenderEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FirstLastNameGenderedOutLikelyGenderEnum $likelyGender = null;
    
    /**
     * The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. 
     * 
     * @var ?float $probabilityCalibrated
     */
	#[\JMS\Serializer\Annotation\SerializedName('probabilityCalibrated')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $probabilityCalibrated = null;
    
    /**
     * Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. 
     * 
     * @var ?float $score
     */
	#[\JMS\Serializer\Annotation\SerializedName('score')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $score = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('script')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $script = null;
    
	public function __construct()
	{
		$this->firstName = null;
		$this->genderScale = null;
		$this->id = null;
		$this->lastName = null;
		$this->likelyGender = null;
		$this->probabilityCalibrated = null;
		$this->score = null;
		$this->script = null;
	}
}
