<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class RatePlanChargeTier
{
    /**
     * The ID of the Zuora user who created the RatePlanChargeTier object.
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?string $createdById
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreatedById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdById = null;
    
    /**
     *  The date when the RatePlanChargeTier object was created.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreatedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdDate = null;
    
    /**
     *  The end number of a range of units for the tier. This field is only required if the charge mode is `Tiered Pricing` or `Tierred with Overage Pricing`.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: any positive decimal value 
     * 
     * @var ?float $endingUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('EndingUnit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $endingUnit = null;
    
    /**
     *  Indicates if the price is an overage price. An overage occurs when usage surpasses the last defined tier. This field is applicable only to tier pricing and volume pricing models.
     * 
     * 
     * 
     * 
     * **Values**: true, false 
     * 
     * @var ?bool $isOveragePrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('IsOveragePrice')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isOveragePrice = null;
    
    /**
     *  The price of the tier if the charge is a flat fee, or the price of each unit in the tier if the change model is tiered pricing.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: any positive decimal value 
     * 
     * @var ?float $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('Price')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $price = null;
    
    /**
     *  Indicates if the price is a flat fee or is per unit.
     * 
     * 
     * 
     * **Character limit**: 8
     * 
     * 
     * **Values**: `FlatFee`, `PerUnit` 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RatePlanChargeTierPriceFormatEnum $priceFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('PriceFormat')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RatePlanChargeTierPriceFormatEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RatePlanChargeTierPriceFormatEnum $priceFormat = null;
    
    /**
     *  The ID of the subscription or amendment rate plan charge associated with this tier. You can't create an unassociated tier.
     * 
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: inherited from `RatePlanCharge`.`Id` 
     * 
     * @var string $ratePlanChargeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('RatePlanChargeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ratePlanChargeId;
    
    /**
     *  The start number of a range of units for the tier. This field is only required if the charge mode is `Tiered Pricing` or `Tierred with Overage Pricing`.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: any positive decimal value 
     * 
     * @var ?float $startingUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('StartingUnit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $startingUnit = null;
    
    /**
     *  A unique number that identifies the tier that the price applies to.
     * 
     * 
     * 
     * **Character limit**: 20
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?int $tier
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tier')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $tier = null;
    
    /**
     * The ID of the last user to update the object.
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?string $updatedById
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdatedById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedById = null;
    
    /**
     *  The date when the object was last updated.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $updatedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdatedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedDate = null;
    
	public function __construct()
	{
		$this->createdById = null;
		$this->createdDate = null;
		$this->endingUnit = null;
		$this->isOveragePrice = null;
		$this->price = null;
		$this->priceFormat = null;
		$this->ratePlanChargeId = "";
		$this->startingUnit = null;
		$this->tier = null;
		$this->updatedById = null;
		$this->updatedDate = null;
	}
}
