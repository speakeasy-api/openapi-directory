/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Operation - Represents information regarding an operation.
 */
public class Operation {
    /**
     * Identity of the consumer who is using the service. This field should be filled in for the operations initiated by a consumer, but not for service-initiated operations that are not related to a specific consumer. - This can be in one of the following formats: - project:PROJECT_ID, - project`_`number:PROJECT_NUMBER, - projects/PROJECT_ID or PROJECT_NUMBER, - folders/FOLDER_NUMBER, - organizations/ORGANIZATION_NUMBER, - api`_`key:API_KEY.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumerId")
    public String consumerId;

    public Operation withConsumerId(String consumerId) {
        this.consumerId = consumerId;
        return this;
    }
    
    /**
     * End time of the operation. Required when the operation is used in ServiceController.Report, but optional when the operation is used in ServiceController.Check.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public Operation withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * DO NOT USE. This is an experimental field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("importance")
    public OperationImportanceEnum importance;

    public Operation withImportance(OperationImportanceEnum importance) {
        this.importance = importance;
        return this;
    }
    
    /**
     * Labels describing the operation. Only the following labels are allowed: - Labels describing monitored resources as defined in the service configuration. - Default labels of metric values. When specified, labels defined in the metric value override these default. - The following labels defined by Google Cloud Platform: - `cloud.googleapis.com/location` describing the location where the operation happened, - `servicecontrol.googleapis.com/user_agent` describing the user agent of the API request, - `servicecontrol.googleapis.com/service_agent` describing the service used to handle the API request (e.g. ESP), - `servicecontrol.googleapis.com/platform` describing the platform where the API is served, such as App Engine, Compute Engine, or Kubernetes Engine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Operation withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Represents information to be logged.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logEntries")
    public LogEntry[] logEntries;

    public Operation withLogEntries(LogEntry[] logEntries) {
        this.logEntries = logEntries;
        return this;
    }
    
    /**
     * Represents information about this operation. Each MetricValueSet corresponds to a metric defined in the service configuration. The data type used in the MetricValueSet must agree with the data type specified in the metric definition. Within a single operation, it is not allowed to have more than one MetricValue instances that have the same metric names and identical label value combinations. If a request has such duplicated MetricValue instances, the entire request is rejected with an invalid argument error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricValueSets")
    public MetricValueSet[] metricValueSets;

    public Operation withMetricValueSets(MetricValueSet[] metricValueSets) {
        this.metricValueSets = metricValueSets;
        return this;
    }
    
    /**
     * Identity of the operation. This must be unique within the scope of the service that generated the operation. If the service calls Check() and Report() on the same operation, the two calls should carry the same id. UUID version 4 is recommended, though not required. In scenarios where an operation is computed from existing information and an idempotent id is desirable for deduplication purpose, UUID version 5 is recommended. See RFC 4122 for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationId")
    public String operationId;

    public Operation withOperationId(String operationId) {
        this.operationId = operationId;
        return this;
    }
    
    /**
     * Fully qualified name of the operation. Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationName")
    public String operationName;

    public Operation withOperationName(String operationName) {
        this.operationName = operationName;
        return this;
    }
    
    /**
     * Represents the properties needed for quota operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quotaProperties")
    public QuotaProperties quotaProperties;

    public Operation withQuotaProperties(QuotaProperties quotaProperties) {
        this.quotaProperties = quotaProperties;
        return this;
    }
    
    /**
     * The resources that are involved in the operation. The maximum supported number of entries in this field is 100.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resources")
    public ResourceInfo[] resources;

    public Operation withResources(ResourceInfo[] resources) {
        this.resources = resources;
        return this;
    }
    
    /**
     * Required. Start time of the operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public Operation withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Unimplemented. A list of Cloud Trace spans. The span names shall contain the id of the destination project which can be either the produce or the consumer project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("traceSpans")
    public TraceSpan[] traceSpans;

    public Operation withTraceSpans(TraceSpan[] traceSpans) {
        this.traceSpans = traceSpans;
        return this;
    }
    
    /**
     * Private Preview. This feature is only available for approved services. User defined labels for the resource that this operation is associated with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userLabels")
    public java.util.Map<String, String> userLabels;

    public Operation withUserLabels(java.util.Map<String, String> userLabels) {
        this.userLabels = userLabels;
        return this;
    }
    
    public Operation(){}
}
