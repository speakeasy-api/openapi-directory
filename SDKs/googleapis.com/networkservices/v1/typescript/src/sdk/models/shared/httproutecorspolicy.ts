/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The Specification for allowing client side cross-origin requests.
 */
export class HttpRouteCorsPolicy extends SpeakeasyBase {
  /**
   * In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access-Control-Allow-Credentials header. Default value is false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowCredentials" })
  allowCredentials?: boolean;

  /**
   * Specifies the content for Access-Control-Allow-Headers header.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowHeaders" })
  allowHeaders?: string[];

  /**
   * Specifies the content for Access-Control-Allow-Methods header.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowMethods" })
  allowMethods?: string[];

  /**
   * Specifies the regular expression patterns that match allowed origins. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowOriginRegexes" })
  allowOriginRegexes?: string[];

  /**
   * Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either an item in allow_origins or an item in allow_origin_regexes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowOrigins" })
  allowOrigins?: string[];

  /**
   * If true, the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  /**
   * Specifies the content for Access-Control-Expose-Headers header.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exposeHeaders" })
  exposeHeaders?: string[];

  /**
   * Specifies how long result of a preflight request can be cached in seconds. This translates to the Access-Control-Max-Age header.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxAge" })
  maxAge?: string;
}
