// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PlayerGameLogsBySeasonFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PlayerGameLogsBySeasonFormatEnum string

const (
	PlayerGameLogsBySeasonFormatEnumJSON PlayerGameLogsBySeasonFormatEnum = "JSON"
	PlayerGameLogsBySeasonFormatEnumXML  PlayerGameLogsBySeasonFormatEnum = "XML"
)

func (e *PlayerGameLogsBySeasonFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "JSON":
		fallthrough
	case "XML":
		*e = PlayerGameLogsBySeasonFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerGameLogsBySeasonFormatEnum: %s", s)
	}
}

type PlayerGameLogsBySeasonPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PlayerGameLogsBySeasonFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// How many games to return. Example <code>all</code>, <code>10</code>, <code>25</code>
	Numberofgames string `pathParam:"style=simple,explode=false,name=numberofgames"`
	// Unique FantasyData Player ID. Example:<code>17920</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
	// Season to get games from. Example <code>2019POST</code>, <code>2020</code>
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type PlayerGameLogsBySeasonRequest struct {
	PathParams PlayerGameLogsBySeasonPathParams
}

type PlayerGameLogsBySeasonResponse struct {
	ContentType string
	PlayerGames []shared.PlayerGame
	StatusCode  int
	RawResponse *http.Response
}
