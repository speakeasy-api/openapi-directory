/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The status of the domain name migration. The valid values are AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain cannot be modified further until the existing operation is complete. If it is AVAILABLE, the domain can be updated.
 */
export enum DomainNameConfigurationDomainNameStatusEnum {
  Available = "AVAILABLE",
  Updating = "UPDATING",
  PendingCertificateReimport = "PENDING_CERTIFICATE_REIMPORT",
  PendingOwnershipVerification = "PENDING_OWNERSHIP_VERIFICATION",
}

/**
 * The endpoint type.
 */
export enum DomainNameConfigurationEndpointTypeEnum {
  Regional = "REGIONAL",
  Edge = "EDGE",
}

/**
 * The Transport Layer Security (TLS) version of the security policy for this domain name. The valid values are TLS_1_0 and TLS_1_2.
 */
export enum DomainNameConfigurationSecurityPolicyEnum {
  Tls10 = "TLS_1_0",
  Tls12 = "TLS_1_2",
}

/**
 * The domain name configuration.
 */
export class DomainNameConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApiGatewayDomainName" })
  apiGatewayDomainName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateArn" })
  certificateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateName" })
  certificateName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateUploadDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  certificateUploadDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainNameStatus" })
  domainNameStatus?: DomainNameConfigurationDomainNameStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainNameStatusMessage" })
  domainNameStatusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointType" })
  endpointType?: DomainNameConfigurationEndpointTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "HostedZoneId" })
  hostedZoneId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OwnershipVerificationCertificateArn" })
  ownershipVerificationCertificateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityPolicy" })
  securityPolicy?: DomainNameConfigurationSecurityPolicyEnum;
}
