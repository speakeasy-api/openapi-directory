/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The additional direct deposit model
 */
export class DirectDepositAdditionalDirectDeposit extends SpeakeasyBase {
  /**
   * Account number, entered without special characters and spaces. <br  />Max length: 17<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountNumber" })
  accountNumber?: string;

  /**
   * Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountType" })
  accountType?: string;

  /**
   * Amount value to be deposited to the account.<br  />Decimal (12,2)<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * Amount type to indicate the context of the amount. Common values are *F* (FLAT), *F-* (Net Minus), *P* (Percent). <br  /> Max length: 5<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amountType" })
  amountType?: string;

  /**
   * Indicates if direct deposit should be blocked when special check types such as Bonus are processed.<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockSpecial" })
  blockSpecial?: boolean;

  /**
   * Indicates if account will not pre-note.<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSkipPreNote" })
  isSkipPreNote?: boolean;

  /**
   * Name on the bank account. Defaults to employee's name. <br  />Max length: 30<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameOnAccount" })
  nameOnAccount?: string;

  /**
   * Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preNoteDate" })
  preNoteDate?: string;

  /**
   * ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "routingNumber" })
  routingNumber?: string;
}

/**
 * The main Direct Deposit account.
 */
export class DirectDepositMainDirectDeposit extends SpeakeasyBase {
  /**
   * Account number, entered without special characters and spaces. <br  />Max length: 17
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountNumber" })
  accountNumber?: string;

  /**
   * Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountType" })
  accountType?: string;

  /**
   * Indicates if direct deposit should be blocked when special check types such as Bonus are processed.<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockSpecial" })
  blockSpecial?: boolean;

  /**
   * Indicates if account will not pre-note.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSkipPreNote" })
  isSkipPreNote?: boolean;

  /**
   * Name on the bank account. Defaults to employee's name. <br  />Max length: 30<br />
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameOnAccount" })
  nameOnAccount?: string;

  /**
   * Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preNoteDate" })
  preNoteDate?: string;

  /**
   * ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9
   */
  @SpeakeasyMetadata()
  @Expose({ name: "routingNumber" })
  routingNumber?: string;
}

/**
 * The Direct Deposit model
 */
export class DirectDeposit extends SpeakeasyBase {
  /**
   * Additional Direct Deposits that are not the main Direct Deposit.
   */
  @SpeakeasyMetadata({ elemType: DirectDepositAdditionalDirectDeposit })
  @Expose({ name: "additionalDirectDeposit" })
  @Type(() => DirectDepositAdditionalDirectDeposit)
  additionalDirectDeposit?: DirectDepositAdditionalDirectDeposit[];

  /**
   * The main Direct Deposit account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mainDirectDeposit" })
  @Type(() => DirectDepositMainDirectDeposit)
  mainDirectDeposit?: DirectDepositMainDirectDeposit;
}
