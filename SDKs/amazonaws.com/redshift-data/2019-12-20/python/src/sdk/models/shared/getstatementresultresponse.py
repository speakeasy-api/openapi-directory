"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import columnmetadata as shared_columnmetadata
from ..shared import field as shared_field
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetStatementResultResponse:
    r"""Success"""
    
    records: list[list[shared_field.Field]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Records') }})  
    column_metadata: Optional[list[shared_columnmetadata.ColumnMetadata]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ColumnMetadata'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    total_num_rows: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalNumRows'), 'exclude': lambda f: f is None }})  
    