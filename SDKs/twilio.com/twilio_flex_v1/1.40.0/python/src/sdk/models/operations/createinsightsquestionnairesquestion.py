"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import flex_v1_insights_questionnaires_question as shared_flex_v1_insights_questionnaires_question
from typing import Optional

CREATE_INSIGHTS_QUESTIONNAIRES_QUESTION_SERVERS = [
	"https://flex-api.twilio.com",
]


@dataclasses.dataclass
class CreateInsightsQuestionnairesQuestionSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateInsightsQuestionnairesQuestionCreateInsightsQuestionnairesQuestionRequest:
    
    allow_na: bool = dataclasses.field(metadata={'form': { 'field_name': 'AllowNa' }})
    r"""The flag to enable for disable NA for answer."""  
    answer_set_id: str = dataclasses.field(metadata={'form': { 'field_name': 'AnswerSetId' }})
    r"""The answer_set for the question."""  
    category_id: str = dataclasses.field(metadata={'form': { 'field_name': 'CategoryId' }})
    r"""The ID of the category"""  
    question: str = dataclasses.field(metadata={'form': { 'field_name': 'Question' }})
    r"""The question."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Description' }})
    r"""The description for the question."""  
    

@dataclasses.dataclass
class CreateInsightsQuestionnairesQuestionRequest:
    
    request_body: Optional[CreateInsightsQuestionnairesQuestionCreateInsightsQuestionnairesQuestionRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Token', 'style': 'simple', 'explode': False }})
    r"""The Token HTTP request header"""  
    

@dataclasses.dataclass
class CreateInsightsQuestionnairesQuestionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    flex_v1_insights_questionnaires_question: Optional[shared_flex_v1_insights_questionnaires_question.FlexV1InsightsQuestionnairesQuestion] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    