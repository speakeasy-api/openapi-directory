"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import carrankrequest as shared_carrankrequest
from ..shared import carrankresponse as shared_carrankresponse
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class RankCarRequest:
    
    car_rank_request: shared_carrankrequest.CarRankRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Inputs needed for ranking a group of car listings"""  
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""The API Authentication Key. Mandatory with all API calls."""  
    append_api_key: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'append_api_key', 'style': 'form', 'explode': True }})
    r"""Flag on whether to include api_key in response API urls (if any)"""  
    

@dataclasses.dataclass
class RankCarResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    car_rank_response: Optional[shared_carrankresponse.CarRankResponse] = dataclasses.field(default=None)
    r"""Rank listings based on inputs provided."""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    