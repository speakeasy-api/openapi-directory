// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteNetworkInsightsAccessScopeActionEnum
type GETDeleteNetworkInsightsAccessScopeActionEnum string

const (
	GETDeleteNetworkInsightsAccessScopeActionEnumDeleteNetworkInsightsAccessScope GETDeleteNetworkInsightsAccessScopeActionEnum = "DeleteNetworkInsightsAccessScope"
)

func (e GETDeleteNetworkInsightsAccessScopeActionEnum) ToPointer() *GETDeleteNetworkInsightsAccessScopeActionEnum {
	return &e
}

func (e *GETDeleteNetworkInsightsAccessScopeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteNetworkInsightsAccessScope":
		*e = GETDeleteNetworkInsightsAccessScopeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteNetworkInsightsAccessScopeActionEnum: %v", v)
	}
}

// GETDeleteNetworkInsightsAccessScopeVersionEnum
type GETDeleteNetworkInsightsAccessScopeVersionEnum string

const (
	GETDeleteNetworkInsightsAccessScopeVersionEnumTwoThousandAndSixteen1115 GETDeleteNetworkInsightsAccessScopeVersionEnum = "2016-11-15"
)

func (e GETDeleteNetworkInsightsAccessScopeVersionEnum) ToPointer() *GETDeleteNetworkInsightsAccessScopeVersionEnum {
	return &e
}

func (e *GETDeleteNetworkInsightsAccessScopeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteNetworkInsightsAccessScopeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteNetworkInsightsAccessScopeVersionEnum: %v", v)
	}
}

type GETDeleteNetworkInsightsAccessScopeRequest struct {
	Action GETDeleteNetworkInsightsAccessScopeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the Network Access Scope.
	NetworkInsightsAccessScopeID string                                         `queryParam:"style=form,explode=true,name=NetworkInsightsAccessScopeId"`
	Version                      GETDeleteNetworkInsightsAccessScopeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteNetworkInsightsAccessScopeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
