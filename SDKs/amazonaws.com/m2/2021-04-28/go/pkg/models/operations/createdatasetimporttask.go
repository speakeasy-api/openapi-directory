// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateDataSetImportTaskPathParams struct {
	// The unique identifier of the application for which you want to import data sets.
	ApplicationID string `pathParam:"style=simple,explode=false,name=applicationId"`
}

type CreateDataSetImportTaskHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateDataSetImportTaskRequestBodyImportConfig - Identifies one or more data sets you want to import with the <a>CreateDataSetImportTask</a> operation.
type CreateDataSetImportTaskRequestBodyImportConfig struct {
	DataSets   []shared.DataSetImportItem `json:"dataSets,omitempty"`
	S3Location *string                    `json:"s3Location,omitempty"`
}

type CreateDataSetImportTaskRequestBody struct {
	//  Unique, case-sensitive identifier you provide to ensure the idempotency of the request to create a data set import. The service generates the clientToken when the API call is triggered. The token expires after one hour, so if you retry the API within this timeframe with the same clientToken, you will get the same response. The service also handles deleting the clientToken after it expires.
	ClientToken *string `json:"clientToken,omitempty"`
	// Identifies one or more data sets you want to import with the <a>CreateDataSetImportTask</a> operation.
	ImportConfig CreateDataSetImportTaskRequestBodyImportConfig `json:"importConfig"`
}

type CreateDataSetImportTaskRequest struct {
	PathParams CreateDataSetImportTaskPathParams
	Headers    CreateDataSetImportTaskHeaders
	Request    CreateDataSetImportTaskRequestBody `request:"mediaType=application/json"`
}

type CreateDataSetImportTaskResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateDataSetImportTaskResponse *shared.CreateDataSetImportTaskResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
