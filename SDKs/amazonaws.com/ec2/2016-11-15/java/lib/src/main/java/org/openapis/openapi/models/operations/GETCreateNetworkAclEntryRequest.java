/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreateNetworkAclEntryRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETCreateNetworkAclEntryActionEnum action;

    public GETCreateNetworkAclEntryRequest withAction(GETCreateNetworkAclEntryActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The IPv4 network range to allow or deny, in CIDR notation (for example &lt;code&gt;172.16.0.0/24&lt;/code&gt;). We modify the specified CIDR block to its canonical form; for example, if you specify &lt;code&gt;100.68.0.18/18&lt;/code&gt;, we modify it to &lt;code&gt;100.68.0.0/18&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CidrBlock")
    public String cidrBlock;

    public GETCreateNetworkAclEntryRequest withCidrBlock(String cidrBlock) {
        this.cidrBlock = cidrBlock;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;

    public GETCreateNetworkAclEntryRequest withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Egress")
    public Boolean egress;

    public GETCreateNetworkAclEntryRequest withEgress(Boolean egress) {
        this.egress = egress;
        return this;
    }
    
    /**
     * ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Icmp")
    public GETCreateNetworkAclEntryIcmp icmp;

    public GETCreateNetworkAclEntryRequest withIcmp(GETCreateNetworkAclEntryIcmp icmp) {
        this.icmp = icmp;
        return this;
    }
    
    /**
     * The IPv6 network range to allow or deny, in CIDR notation (for example &lt;code&gt;2001:db8:1234:1a00::/64&lt;/code&gt;).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Ipv6CidrBlock")
    public String ipv6CidrBlock;

    public GETCreateNetworkAclEntryRequest withIpv6CidrBlock(String ipv6CidrBlock) {
        this.ipv6CidrBlock = ipv6CidrBlock;
        return this;
    }
    
    /**
     * The ID of the network ACL.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NetworkAclId")
    public String networkAclId;

    public GETCreateNetworkAclEntryRequest withNetworkAclId(String networkAclId) {
        this.networkAclId = networkAclId;
        return this;
    }
    
    /**
     * TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PortRange")
    public GETCreateNetworkAclEntryPortRange portRange;

    public GETCreateNetworkAclEntryRequest withPortRange(GETCreateNetworkAclEntryPortRange portRange) {
        this.portRange = portRange;
        return this;
    }
    
    /**
     * The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Protocol")
    public String protocol;

    public GETCreateNetworkAclEntryRequest withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * Indicates whether to allow or deny the traffic that matches the rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RuleAction")
    public GETCreateNetworkAclEntryRuleActionEnum ruleAction;

    public GETCreateNetworkAclEntryRequest withRuleAction(GETCreateNetworkAclEntryRuleActionEnum ruleAction) {
        this.ruleAction = ruleAction;
        return this;
    }
    
    /**
     * &lt;p&gt;The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.&lt;/p&gt; &lt;p&gt;Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RuleNumber")
    public Long ruleNumber;

    public GETCreateNetworkAclEntryRequest withRuleNumber(Long ruleNumber) {
        this.ruleNumber = ruleNumber;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETCreateNetworkAclEntryVersionEnum version;

    public GETCreateNetworkAclEntryRequest withVersion(GETCreateNetworkAclEntryVersionEnum version) {
        this.version = version;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;

    public GETCreateNetworkAclEntryRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;

    public GETCreateNetworkAclEntryRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;

    public GETCreateNetworkAclEntryRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;

    public GETCreateNetworkAclEntryRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;

    public GETCreateNetworkAclEntryRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;

    public GETCreateNetworkAclEntryRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;

    public GETCreateNetworkAclEntryRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    public GETCreateNetworkAclEntryRequest(@JsonProperty("Action") GETCreateNetworkAclEntryActionEnum action, @JsonProperty("Egress") Boolean egress, @JsonProperty("NetworkAclId") String networkAclId, @JsonProperty("Protocol") String protocol, @JsonProperty("RuleAction") GETCreateNetworkAclEntryRuleActionEnum ruleAction, @JsonProperty("RuleNumber") Long ruleNumber, @JsonProperty("Version") GETCreateNetworkAclEntryVersionEnum version) {
        this.action = action;
        this.egress = egress;
        this.networkAclId = networkAclId;
        this.protocol = protocol;
        this.ruleAction = ruleAction;
        this.ruleNumber = ruleNumber;
        this.version = version;
  }
}
