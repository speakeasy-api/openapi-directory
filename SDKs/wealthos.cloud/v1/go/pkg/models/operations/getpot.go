// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetPotSecurity struct {
	APISecretKey string `security:"scheme,type=apiKey,subtype=header,name=x-api-key"`
}

type GetPotRequest struct {
	// Pot Id
	PotID string `pathParam:"style=simple,explode=false,name=pot_id"`
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// GetPot500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type GetPot500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPot429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type GetPot429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPot404ApplicationJSON - The specified resource was not found
type GetPot404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPot403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type GetPot403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPot401ApplicationJSON - You do not have permissions to access this resource.
type GetPot401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetPot200ApplicationJSONPotCurrencyEnum - If not populated, will be defaulted to tenancy currency
type GetPot200ApplicationJSONPotCurrencyEnum string

const (
	GetPot200ApplicationJSONPotCurrencyEnumGbp GetPot200ApplicationJSONPotCurrencyEnum = "GBP"
	GetPot200ApplicationJSONPotCurrencyEnumCad GetPot200ApplicationJSONPotCurrencyEnum = "CAD"
	GetPot200ApplicationJSONPotCurrencyEnumUsd GetPot200ApplicationJSONPotCurrencyEnum = "USD"
)

func (e *GetPot200ApplicationJSONPotCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GBP":
		fallthrough
	case "CAD":
		fallthrough
	case "USD":
		*e = GetPot200ApplicationJSONPotCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPot200ApplicationJSONPotCurrencyEnum: %s", s)
	}
}

type GetPot200ApplicationJSONStatusEnum string

const (
	GetPot200ApplicationJSONStatusEnumActive   GetPot200ApplicationJSONStatusEnum = "active"
	GetPot200ApplicationJSONStatusEnumInactive GetPot200ApplicationJSONStatusEnum = "inactive"
)

func (e *GetPot200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = GetPot200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPot200ApplicationJSONStatusEnum: %s", s)
	}
}

// GetPot200ApplicationJSON - success
type GetPot200ApplicationJSON struct {
	AccountID                 *string    `json:"account_id,omitempty"`
	CreatedAt                 *time.Time `json:"created_at,omitempty"`
	CustodianAccountReference *string    `json:"custodian_account_reference,omitempty"`
	CustodianClientRef        *string    `json:"custodian_client_ref,omitempty"`
	CustodianID               *string    `json:"custodian_id,omitempty"`
	FinancialProductID        string     `json:"financial_product_id"`
	InvestorID                []string   `json:"investor_id"`
	PortfolioTemplateID       *string    `json:"portfolio_template_id,omitempty"`
	// If not populated, will be defaulted to tenancy currency
	PotCurrency *GetPot200ApplicationJSONPotCurrencyEnum `json:"pot_currency,omitempty"`
	// system generated id
	PotID              *string                            `json:"pot_id,omitempty"`
	PotName            string                             `json:"pot_name"`
	ReferenceVersion   *int64                             `json:"reference_version,omitempty"`
	RegulatorAdvisorID *string                            `json:"regulator_advisor_id,omitempty"`
	Status             GetPot200ApplicationJSONStatusEnum `json:"status"`
	UpdatedAt          *time.Time                         `json:"updated_at,omitempty"`
}

type GetPotResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success
	GetPot200ApplicationJSONObject *GetPot200ApplicationJSON
	// You do not have permissions to access this resource.
	GetPot401ApplicationJSONObject *GetPot401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	GetPot403ApplicationJSONObject *GetPot403ApplicationJSON
	// The specified resource was not found
	GetPot404ApplicationJSONObject *GetPot404ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	GetPot429ApplicationJSONObject *GetPot429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	GetPot500ApplicationJSONObject *GetPot500ApplicationJSON
}
