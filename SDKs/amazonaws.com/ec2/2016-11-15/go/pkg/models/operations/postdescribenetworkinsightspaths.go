// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeNetworkInsightsPathsActionEnum
type POSTDescribeNetworkInsightsPathsActionEnum string

const (
	POSTDescribeNetworkInsightsPathsActionEnumDescribeNetworkInsightsPaths POSTDescribeNetworkInsightsPathsActionEnum = "DescribeNetworkInsightsPaths"
)

func (e *POSTDescribeNetworkInsightsPathsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeNetworkInsightsPaths":
		*e = POSTDescribeNetworkInsightsPathsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeNetworkInsightsPathsActionEnum: %s", s)
	}
}

// POSTDescribeNetworkInsightsPathsVersionEnum
type POSTDescribeNetworkInsightsPathsVersionEnum string

const (
	POSTDescribeNetworkInsightsPathsVersionEnumTwoThousandAndSixteen1115 POSTDescribeNetworkInsightsPathsVersionEnum = "2016-11-15"
)

func (e *POSTDescribeNetworkInsightsPathsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDescribeNetworkInsightsPathsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeNetworkInsightsPathsVersionEnum: %s", s)
	}
}

type POSTDescribeNetworkInsightsPathsQueryParams struct {
	Action POSTDescribeNetworkInsightsPathsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string                                     `queryParam:"style=form,explode=true,name=NextToken"`
	Version   POSTDescribeNetworkInsightsPathsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeNetworkInsightsPathsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeNetworkInsightsPathsRequest struct {
	QueryParams POSTDescribeNetworkInsightsPathsQueryParams
	Headers     POSTDescribeNetworkInsightsPathsHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeNetworkInsightsPathsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
