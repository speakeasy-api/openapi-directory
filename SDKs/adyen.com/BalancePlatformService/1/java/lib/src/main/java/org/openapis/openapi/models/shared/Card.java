/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Card {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authentication")
    public Authentication authentication;
    public Card withAuthentication(Authentication authentication) {
        this.authentication = authentication;
        return this;
    }
    
    /**
     * The bank identification number (BIN) of the card number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bin")
    public String bin;
    public Card withBin(String bin) {
        this.bin = bin;
        return this;
    }
    
    /**
     * The brand of the physical or the virtual card.
     * Possible values: **visa**, **mc**.
     */
    @JsonProperty("brand")
    public String brand;
    public Card withBrand(String brand) {
        this.brand = brand;
        return this;
    }
    
    /**
     * The brand variant of the physical or the virtual card.
     * &gt;Contact your Adyen Implementation Manager to get the values that are relevant to your integration. Examples: **visadebit**, **mcprepaid**.
     */
    @JsonProperty("brandVariant")
    public String brandVariant;
    public Card withBrandVariant(String brandVariant) {
        this.brandVariant = brandVariant;
        return this;
    }
    
    /**
     * The name of the cardholder.
     *  Maximum length: 26 characters.
     */
    @JsonProperty("cardholderName")
    public String cardholderName;
    public Card withCardholderName(String cardholderName) {
        this.cardholderName = cardholderName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuration")
    public CardConfiguration configuration;
    public Card withConfiguration(CardConfiguration configuration) {
        this.configuration = configuration;
        return this;
    }
    
    /**
     * The CVC2 value of the card.
     * &gt; The CVC2 is not sent by default. This is only returned in the `POST` response for single-use virtual cards.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cvc")
    public String cvc;
    public Card withCvc(String cvc) {
        this.cvc = cvc;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryContact")
    public Contact deliveryContact;
    public Card withDeliveryContact(Contact deliveryContact) {
        this.deliveryContact = deliveryContact;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiration")
    public Expiry expiration;
    public Card withExpiration(Expiry expiration) {
        this.expiration = expiration;
        return this;
    }
    
    /**
     * The form factor of the card.
     * Possible values: **virtual**, **physical**.
     */
    @JsonProperty("formFactor")
    public CardFormFactorEnum formFactor;
    public Card withFormFactor(CardFormFactorEnum formFactor) {
        this.formFactor = formFactor;
        return this;
    }
    
    /**
     * Last last four digits of the card number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastFour")
    public String lastFour;
    public Card withLastFour(String lastFour) {
        this.lastFour = lastFour;
        return this;
    }
    
    /**
     * The primary account number (PAN) of the card.
     * &gt; The PAN is masked by default and returned only for single-use virtual cards.
     */
    @JsonProperty("number")
    public String number;
    public Card withNumber(String number) {
        this.number = number;
        return this;
    }
    
}
