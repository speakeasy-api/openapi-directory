<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PrincipalSummaryV1
{
    /**
     * ID of the authentication domain for a specified principal.
     * 
     * @var string $authDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('authDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $authDomainId;
    
    /**
     * The type of authentication domain.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AuthDomainTypeEnum $authDomainType
     */
	#[\JMS\Serializer\Annotation\SerializedName('authDomainType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuthDomainTypeEnum>')]
    public AuthDomainTypeEnum $authDomainType;
    
    /**
     * Short description for a principal of type group. For all other types the value is null.
     * 
     * 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Email address associated with a principal.
     * 
     * @var ?string $emailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emailAddress = null;
    
    /**
     * First name of a principal of type user. For all other types the value is null.
     * 
     * 
     * 
     * @var ?string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('firstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
    /**
     * ID of a principal in an authentication domain.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * A Boolean that specifies whether the principal has any roles assigned. When this value is 'true,' the principal has one or more roles assigned.
     * 
     * 
     * 
     * @var bool $isAssignedRoles
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAssignedRoles')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isAssignedRoles;
    
    /**
     * A Boolean that specifies whether the principal is a local user or has any roles assigned. When this value is 'true,' the principal either has one or more roles assigned or is a local user.
     * 
     * 
     * 
     * @var bool $isAssignedRolesOrIsLocal
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAssignedRolesOrIsLocal')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isAssignedRolesOrIsLocal;
    
    /**
     * Boolean value that shows the lock state of a user account. Value is true when the account is locked and false when the account is not locked.
     * 
     * 
     * 
     * @var bool $isLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isLocked;
    
    /**
     * Indicates if the principal has TOTP authentication enabled. Returns true when TOTP is enabled, returns false when TOTP is not enabled.
     * 
     * 
     * 
     * @var ?bool $isTotpEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('isTotpEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isTotpEnabled = null;
    
    /**
     * Indicates if the TOTP authentication is enforced. Returns true when TOTP is enforced, returns false when TOTP is not enforced.
     * 
     * 
     * 
     * @var ?bool $isTotpEnforced
     */
	#[\JMS\Serializer\Annotation\SerializedName('isTotpEnforced')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isTotpEnforced = null;
    
    /**
     * Last name of a principal of type user. For all other types the value is null.
     * 
     * 
     * 
     * @var ?string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastName = null;
    
    /**
     * Name of the MFA server assgined to the user.
     * 
     * 
     * 
     * @var ?string $mfaServerName
     */
	#[\JMS\Serializer\Annotation\SerializedName('mfaServerName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mfaServerName = null;
    
    /**
     * The name of a principal in an authentication domain.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The Type of a principal in an authentication domain. Type can be user or group.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PrincipalTypeEnum $principalType
     */
	#[\JMS\Serializer\Annotation\SerializedName('principalType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PrincipalTypeEnum>')]
    public PrincipalTypeEnum $principalType;
    
    /**
     * Roles assigned to this principal.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\RoleInfo> $roles
     */
	#[\JMS\Serializer\Annotation\SerializedName('roles')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RoleInfo>')]
    public array $roles;
    
	public function __construct()
	{
		$this->authDomainId = "";
		$this->authDomainType = \OpenAPI\OpenAPI\Models\Shared\AuthDomainTypeEnum::LOCAL;
		$this->description = null;
		$this->emailAddress = null;
		$this->firstName = null;
		$this->id = "";
		$this->isAssignedRoles = false;
		$this->isAssignedRolesOrIsLocal = false;
		$this->isLocked = false;
		$this->isTotpEnabled = null;
		$this->isTotpEnforced = null;
		$this->lastName = null;
		$this->mfaServerName = null;
		$this->name = "";
		$this->principalType = \OpenAPI\OpenAPI\Models\Shared\PrincipalTypeEnum::USER;
		$this->roles = [];
	}
}
