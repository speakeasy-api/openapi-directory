"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelCatalogColumnMapping:
    r"""Represent a mapping between a channel column (considering channel category mapping) and a catalog column"""
    
    channel_column_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelColumnId') }})
    r"""The channel column identifier"""  
    catalog_column_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalogColumnId'), 'exclude': lambda f: f is None }})
    r"""The catalog column identifier (catalog or custom column)"""  
    channel_category_path: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelCategoryPath'), 'exclude': lambda f: f is None }})
    r"""The channel category path"""  
    