/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountAggregationSource } from "./accountaggregationsource";
import { OrganizationAggregationSource } from "./organizationaggregationsource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The details about the configuration aggregator, including information about source accounts, regions, and metadata of the aggregator.
 */
export class ConfigurationAggregator extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AccountAggregationSource })
  @Expose({ name: "AccountAggregationSources" })
  @Type(() => AccountAggregationSource)
  accountAggregationSources?: AccountAggregationSource[];

  @SpeakeasyMetadata()
  @Expose({ name: "ConfigurationAggregatorArn" })
  configurationAggregatorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConfigurationAggregatorName" })
  configurationAggregatorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "OrganizationAggregationSource" })
  @Type(() => OrganizationAggregationSource)
  organizationAggregationSource?: OrganizationAggregationSource;
}
