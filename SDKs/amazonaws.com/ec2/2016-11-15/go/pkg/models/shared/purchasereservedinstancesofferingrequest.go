// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum - The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.
type PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum string

const (
	PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnumUsd PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum = "USD"
)

func (e *PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USD":
		*e = PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum: %s", s)
	}
}

// PurchaseReservedInstancesOfferingRequestLimitPrice - Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.
type PurchaseReservedInstancesOfferingRequestLimitPrice struct {
	Amount       *float64
	CurrencyCode *PurchaseReservedInstancesOfferingRequestLimitPriceCurrencyCodeEnum
}

// PurchaseReservedInstancesOfferingRequest - Contains the parameters for PurchaseReservedInstancesOffering.
type PurchaseReservedInstancesOfferingRequest struct {
	DryRun                      *bool
	InstanceCount               int64
	LimitPrice                  *PurchaseReservedInstancesOfferingRequestLimitPrice
	PurchaseTime                *time.Time
	ReservedInstancesOfferingID string
}
