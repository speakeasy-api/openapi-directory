"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class TrackDataRequestOnlyForUploadingForPROUsers:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    only_for_uploading_for_pro_users: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'Only for uploading, for PRO users' }})  
    

@dataclasses.dataclass
class TrackDataRequestOnlyForUploading:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    only_for_uploading: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'Only for uploading' }})  
    
class TrackDataRequestTrackEmbeddableByEnum(str, Enum):
    r"""who can embed this track \\"all\\", \\"me\\", or \\"none\\" """
    ALL = 'all'
    ME = 'me'
    NONE = 'none'

class TrackDataRequestTrackLicenseEnum(str, Enum):
    r"""Possible values: no-rights-reserved, all-rights-reserved, cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa"""
    NO_RIGHTS_RESERVED = 'no-rights-reserved'
    ALL_RIGHTS_RESERVED = 'all-rights-reserved'
    CC_BY = 'cc-by'
    CC_BY_NC = 'cc-by-nc'
    CC_BY_ND = 'cc-by-nd'
    CC_BY_SA = 'cc-by-sa'
    CC_BY_NC_ND = 'cc-by-nc-nd'
    CC_BY_NC_SA = 'cc-by-nc-sa'

class TrackDataRequestTrackSharingEnum(str, Enum):
    PUBLIC = 'public'
    PRIVATE = 'private'


@dataclasses.dataclass
class TrackDataRequest:
    r"""Track payload"""
    
    track_artwork_data: Optional[TrackDataRequestOnlyForUploadingForPROUsers] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})  
    track_asset_data: Optional[TrackDataRequestOnlyForUploading] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})  
    track_commentable: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[commentable]' }})  
    track_description: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[description]' }})  
    track_downloadable: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[downloadable]' }})  
    track_embeddable_by: Optional[TrackDataRequestTrackEmbeddableByEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[embeddable_by]' }})
    r"""who can embed this track \\"all\\", \\"me\\", or \\"none\\" """  
    track_genre: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[genre]' }})  
    track_isrc: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[isrc]' }})  
    track_label_name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[label_name]' }})  
    track_license: Optional[TrackDataRequestTrackLicenseEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[license]' }})
    r"""Possible values: no-rights-reserved, all-rights-reserved, cc-by, cc-by-nc, cc-by-nd, cc-by-sa, cc-by-nc-nd, cc-by-nc-sa"""  
    track_permalink: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[permalink]' }})  
    track_purchase_url: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[purchase_url]' }})  
    track_release_date: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[release_date]' }})
    r"""string, formatted as yyyy-mm-dd, representing release date"""  
    track_release: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[release]' }})  
    track_sharing: Optional[TrackDataRequestTrackSharingEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[sharing]' }})  
    track_streamable: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[streamable]' }})  
    track_tag_list: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[tag_list]' }})
    r"""The tag_list property contains a list of tags separated by spaces. Multiword tags are quoted in double quotes. We also support machine tags that follow the pattern NAMESPACE:KEY=VALUE. For example: geo:lat=43.555 camel:size=medium “machine:tag=with space” Machine tags are not revealed to the user on the track pages."""  
    track_title: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'track[title]' }})  
    