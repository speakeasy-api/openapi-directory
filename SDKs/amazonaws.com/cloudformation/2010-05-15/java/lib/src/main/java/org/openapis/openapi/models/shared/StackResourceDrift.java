/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.OffsetDateTime;

/**
 * StackResourceDrift - &lt;p&gt;Contains the drift information for a resource that has been checked for drift. This includes actual and expected property values for resources in which CloudFormation has detected drift. Only resource properties explicitly defined in the stack template are checked for drift. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift.html"&gt;Detecting Unregulated Configuration Changes to Stacks and Resources&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Resources that don't currently support drift detection can't be checked. For a list of resources that support drift detection, see &lt;a href="http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-stack-drift-resource-list.html"&gt;Resources that Support Drift Detection&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Use &lt;a&gt;DetectStackResourceDrift&lt;/a&gt; to detect drift on individual resources, or &lt;a&gt;DetectStackDrift&lt;/a&gt; to detect drift on all resources in a given stack that support drift detection.&lt;/p&gt;
 */
public class StackResourceDrift {
    
    public String actualProperties;
    public StackResourceDrift withActualProperties(String actualProperties) {
        this.actualProperties = actualProperties;
        return this;
    }
    
    
    public String expectedProperties;
    public StackResourceDrift withExpectedProperties(String expectedProperties) {
        this.expectedProperties = expectedProperties;
        return this;
    }
    
    
    public String logicalResourceId;
    public StackResourceDrift withLogicalResourceId(String logicalResourceId) {
        this.logicalResourceId = logicalResourceId;
        return this;
    }
    
    
    public ModuleInfo moduleInfo;
    public StackResourceDrift withModuleInfo(ModuleInfo moduleInfo) {
        this.moduleInfo = moduleInfo;
        return this;
    }
    
    
    public String physicalResourceId;
    public StackResourceDrift withPhysicalResourceId(String physicalResourceId) {
        this.physicalResourceId = physicalResourceId;
        return this;
    }
    
    
    public PhysicalResourceIdContextKeyValuePair[] physicalResourceIdContext;
    public StackResourceDrift withPhysicalResourceIdContext(PhysicalResourceIdContextKeyValuePair[] physicalResourceIdContext) {
        this.physicalResourceIdContext = physicalResourceIdContext;
        return this;
    }
    
    
    public PropertyDifference[] propertyDifferences;
    public StackResourceDrift withPropertyDifferences(PropertyDifference[] propertyDifferences) {
        this.propertyDifferences = propertyDifferences;
        return this;
    }
    
    
    public String resourceType;
    public StackResourceDrift withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    
    public String stackId;
    public StackResourceDrift withStackId(String stackId) {
        this.stackId = stackId;
        return this;
    }
    
    
    public StackResourceDriftStatusEnum stackResourceDriftStatus;
    public StackResourceDrift withStackResourceDriftStatus(StackResourceDriftStatusEnum stackResourceDriftStatus) {
        this.stackResourceDriftStatus = stackResourceDriftStatus;
        return this;
    }
    
    
    public OffsetDateTime timestamp;
    public StackResourceDrift withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
}
