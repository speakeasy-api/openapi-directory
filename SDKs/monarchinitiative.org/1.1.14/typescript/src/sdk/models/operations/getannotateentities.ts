/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetAnnotateEntitiesRequest extends SpeakeasyBase {
  /**
   * The text content to annotate
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=content",
  })
  content?: string;

  /**
   * Categories to exclude for annotation
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=exclude_category",
  })
  excludeCategory?: string[];

  /**
   * Should abbreviations be included
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_abbreviation",
  })
  includeAbbreviation?: boolean;

  /**
   * Should acronyms be included
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_acronym",
  })
  includeAcronym?: boolean;

  /**
   * Categories to include for annotation
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_category",
  })
  includeCategory?: string[];

  /**
   * Should numbers be included
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_numbers",
  })
  includeNumbers?: boolean;

  /**
   * Should only the longest entity be returned for an overlapping group
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=longest_only",
  })
  longestOnly?: boolean;

  /**
   * The minimum number of characters in the annotated entity
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_length",
  })
  minLength?: string;
}

export class GetAnnotateEntitiesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  entityAnnotationResult?: shared.EntityAnnotationResult;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
