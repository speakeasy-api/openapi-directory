// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateSynonymOptionsActionEnum
type GETUpdateSynonymOptionsActionEnum string

const (
	GETUpdateSynonymOptionsActionEnumUpdateSynonymOptions GETUpdateSynonymOptionsActionEnum = "UpdateSynonymOptions"
)

func (e GETUpdateSynonymOptionsActionEnum) ToPointer() *GETUpdateSynonymOptionsActionEnum {
	return &e
}

func (e *GETUpdateSynonymOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UpdateSynonymOptions":
		*e = GETUpdateSynonymOptionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateSynonymOptionsActionEnum: %v", v)
	}
}

// GETUpdateSynonymOptionsVersionEnum
type GETUpdateSynonymOptionsVersionEnum string

const (
	GETUpdateSynonymOptionsVersionEnumTwoThousandAndEleven0201 GETUpdateSynonymOptionsVersionEnum = "2011-02-01"
)

func (e GETUpdateSynonymOptionsVersionEnum) ToPointer() *GETUpdateSynonymOptionsVersionEnum {
	return &e
}

func (e *GETUpdateSynonymOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-02-01":
		*e = GETUpdateSynonymOptionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateSynonymOptionsVersionEnum: %v", v)
	}
}

type GETUpdateSynonymOptionsRequest struct {
	Action            GETUpdateSynonymOptionsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DomainName        string                             `queryParam:"style=form,explode=true,name=DomainName"`
	Synonyms          string                             `queryParam:"style=form,explode=true,name=Synonyms"`
	Version           GETUpdateSynonymOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateSynonymOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
