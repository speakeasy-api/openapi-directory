/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: number;
}

/**
 * Operating system of device.
 */
export enum GetUserUserMobileApplicationOSEnum {
  Android = "Android",
  Ios = "IOS",
  Other = "OTHER",
}

/**
 * type of device.
 */
export enum GetUserUserMobileApplicationDeviceNameEnum {
  IPhone = "iPhone",
  Android = "Android",
  Other = "Other",
}

/**
 * Status of user
 */
export enum GetUserUserMobileApplicationStatusEnum {
  Live = "LIVE",
  Closed = "CLOSED",
  Locked = "LOCKED",
  SmsSent = "SMS_SENT",
}

export class GetUserUserMobileApplication extends SpeakeasyBase {
  /**
   * Operating system of device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OS" })
  os?: GetUserUserMobileApplicationOSEnum;

  /**
   * Business user ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "businessUserId" })
  businessUserId?: number;

  /**
   * Client ID of user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientID" })
  clientID?: string;

  /**
   * type of device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceName" })
  deviceName?: GetUserUserMobileApplicationDeviceNameEnum;

  /**
   * OS version for device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceOSVersion" })
  deviceOSVersion?: string;

  /**
   * Mobile application id for user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mobileApplicationId" })
  mobileApplicationId?: number;

  /**
   * Status of user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetUserUserMobileApplicationStatusEnum;
}

/**
 * User role
 */
export enum GetUserUserRoleEnum {
  Admin = "ADMIN",
  FullUser = "FULL_USER",
  ReadOnly = "READ_ONLY",
  CardOnly = "CARD_ONLY",
}

/**
 * Status of user
 */
export enum GetUserUserStatusEnum {
  Live = "LIVE",
  Closed = "CLOSED",
  Frozen = "FROZEN",
  InviteSent = "INVITE_SENT",
  SmsCodeSent = "SMS_CODE_SENT",
}

/**
 * Unique information about a User.
 */
export class GetUserUser extends SpeakeasyBase {
  /**
   * email address for user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailAddress" })
  emailAddress?: string;

  /**
   * User first name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  /**
   * The User ID for this User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * User second name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  /**
   * Timestamp on when user last logged in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastlogin" })
  lastlogin?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mobileApplicationDetails" })
  @Type(() => GetUserUserMobileApplication)
  mobileApplicationDetails?: GetUserUserMobileApplication;

  /**
   * User mobile number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mobileNumber" })
  mobileNumber?: string;

  /**
   * User role
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: GetUserUserRoleEnum;

  /**
   * Status of user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetUserUserStatusEnum;

  /**
   * Users Cvl type ID (shows up when status is LIVE)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userCvl" })
  userCvl?: string;
}

export class GetUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Unique information about a User.
   */
  @SpeakeasyMetadata()
  user?: GetUserUser;
}
