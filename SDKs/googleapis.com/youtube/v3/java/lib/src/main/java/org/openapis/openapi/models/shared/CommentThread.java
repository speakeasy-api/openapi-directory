/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CommentThread - A *comment thread* represents information that applies to a top level comment and all its replies. It can also include the top level comment itself and some of the replies.
 */
public class CommentThread {
    /**
     * Etag of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public CommentThread withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The ID that YouTube uses to uniquely identify the comment thread.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CommentThread withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "youtube#commentThread".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public CommentThread withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Comments written in (direct or indirect) reply to the top level comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replies")
    public CommentThreadReplies replies;

    public CommentThread withReplies(CommentThreadReplies replies) {
        this.replies = replies;
        return this;
    }
    
    /**
     * Basic details about a comment thread.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snippet")
    public CommentThreadSnippet snippet;

    public CommentThread withSnippet(CommentThreadSnippet snippet) {
        this.snippet = snippet;
        return this;
    }
    
    public CommentThread(){}
}
