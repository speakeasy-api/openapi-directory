// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServiceUserConversationEnumStateEnum string

const (
	ServiceUserConversationEnumStateEnumInactive ServiceUserConversationEnumStateEnum = "inactive"
	ServiceUserConversationEnumStateEnumActive   ServiceUserConversationEnumStateEnum = "active"
	ServiceUserConversationEnumStateEnumClosed   ServiceUserConversationEnumStateEnum = "closed"
)

func (e ServiceUserConversationEnumStateEnum) ToPointer() *ServiceUserConversationEnumStateEnum {
	return &e
}

func (e *ServiceUserConversationEnumStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inactive":
		fallthrough
	case "active":
		fallthrough
	case "closed":
		*e = ServiceUserConversationEnumStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceUserConversationEnumStateEnum: %v", v)
	}
}
