/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The gender.
 *
 * @remarks
 * >The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.
 */
export enum ViasNameGenderEnum {
  Male = "MALE",
  Female = "FEMALE",
  Unknown = "UNKNOWN",
}

export class ViasName extends SpeakeasyBase {
  /**
   * The first name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  /**
   * The gender.
   *
   * @remarks
   * >The following values are permitted: `MALE`, `FEMALE`, `UNKNOWN`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: ViasNameGenderEnum;

  /**
   * The name's infix, if applicable.
   *
   * @remarks
   * >A maximum length of twenty (20) characters is imposed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "infix" })
  infix?: string;

  /**
   * The last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;
}
