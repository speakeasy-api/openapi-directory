/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class DevicesListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class DevicesListRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the distribution group.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=distribution_group_name",
  })
  distributionGroupName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * when provided, gets the provisioning state of the devices owned by users of this distribution group when compared to the provided release.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=release_id",
  })
  releaseId?: number;
}

export enum DevicesList404ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * <b>not_found</b>: A distribution group can't be found.
 *
 * @remarks
 *
 */
export class DevicesList404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: DevicesList404ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export enum DevicesList400ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * <b>bad_request</b>: Devices information can only be requested for iOS apps.
 *
 * @remarks
 *
 */
export class DevicesList400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: DevicesList400ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The information for a single iOS device
 */
export class DevicesList200ApplicationJSON extends SpeakeasyBase {
  /**
   * The device description, in the format "iPhone 7 Plus (A1784)"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device_name" })
  deviceName: string;

  /**
   * A combination of the device model name and the owner name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "full_device_name" })
  fullDeviceName?: string;

  /**
   * The device's International Mobile Equipment Identity number. Always empty or undefined at present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imei" })
  imei?: string;

  /**
   * The model identifier of the device, in the format iDeviceM,N
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model: string;

  /**
   * The last known OS version running on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_build" })
  osBuild: string;

  /**
   * The last known OS version running on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os_version" })
  osVersion: string;

  /**
   * The user ID of the device owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner_id" })
  ownerId?: string;

  /**
   * Timestamp of when the device was registered in ISO format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registered_at" })
  registeredAt?: string;

  /**
   * The device's serial number. Always empty or undefined at present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  /**
   * The provisioning status of the device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * The Unique Device IDentifier of the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "udid" })
  udid: string;
}

export class DevicesListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: DevicesList200ApplicationJSON })
  devicesList200ApplicationJSONObjects?: DevicesList200ApplicationJSON[];

  /**
   * <b>bad_request</b>: Devices information can only be requested for iOS apps.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  devicesList400ApplicationJSONObject?: DevicesList400ApplicationJSON;

  /**
   * <b>not_found</b>: A distribution group can't be found.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  devicesList404ApplicationJSONObject?: DevicesList404ApplicationJSON;
}
