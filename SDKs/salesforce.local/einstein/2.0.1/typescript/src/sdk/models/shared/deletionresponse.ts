/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum DeletionResponseStatusOfTheDeletionEnum {
  Queued = "QUEUED",
  Running = "RUNNING",
  SucceededWaitingForCacheRemoval = "SUCCEEDED_WAITING_FOR_CACHE_REMOVAL",
  Succeeded = "SUCCEEDED",
  Killed = "KILLED",
  Failed = "FAILED",
  Retry = "RETRY",
}

export enum DeletionResponseObjectThatSBeingDeletedEnum {
  Dataset = "DATASET",
  Model = "MODEL",
}

/**
 * Success
 */
export class DeletionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "deletedObjectId" })
  deletedObjectId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  object?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "organizationId" })
  organizationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "progress" })
  progress?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: DeletionResponseStatusOfTheDeletionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: DeletionResponseObjectThatSBeingDeletedEnum;
}
