<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GETPaymentMethodResponse - Container for custom fields of a payment method object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GETPaymentMethodResponse
{
    /**
     * ID of a PayPal billing agreement. For example, I-1TJ3GAGG82Y9.
     * 
     * 
     * 
     * @var ?string $baid
     */
	#[\JMS\Serializer\Annotation\SerializedName('BAID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $baid = null;
    
    /**
     * The International Bank Account Number used to create the SEPA payment method. The value is masked.
     * 
     * 
     * 
     * @var ?string $iban
     */
	#[\JMS\Serializer\Annotation\SerializedName('IBAN')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iban = null;
    
    /**
     * The account holder information.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPMAccountHolderInfo $accountHolderInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountHolderInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GETPMAccountHolderInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPMAccountHolderInfo $accountHolderInfo = null;
    
    /**
     * The number of the customer's bank account and it is masked.
     * 
     * 
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     * The nine-digit routing number or ABA number used by banks. This field is only required if the `type` field is set to `ACH`.
     * 
     * 
     * 
     * @var ?string $bankABACode
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankABACode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankABACode = null;
    
    /**
     * The name of the account holder, which can be either a person or a company. This field is only required if the `type` field is set to `ACH`.
     * 
     * 
     * 
     * @var ?string $bankAccountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankAccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankAccountName = null;
    
    /**
     * The bank account number associated with the ACH payment. This field is only required if the `type` field is set to `ACH`.
     * 
     * 
     * 
     * @var ?string $bankAccountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankAccountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankAccountNumber = null;
    
    /**
     * The type of bank account associated with the ACH payment. This field is only required if the `type` field is set to `ACH`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPaymentMethodResponseBankAccountTypeEnum $bankAccountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankAccountType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETPaymentMethodResponseBankAccountTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPaymentMethodResponseBankAccountTypeEnum $bankAccountType = null;
    
    /**
     * The sort code or number that identifies the bank. This is also known as the sort code.         
     * 
     * 
     * 
     * @var ?string $bankCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankCode = null;
    
    /**
     * The name of the bank where the ACH payment account is held. This field is only required if the `type` field is set to `ACH`.
     * 
     * 
     * 
     * @var ?string $bankName
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankName = null;
    
    /**
     * The type of the Bank Transfer payment method. For example, `SEPA`.
     * 
     * 
     * 
     * @var ?string $bankTransferType
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankTransferType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankTransferType = null;
    
    /**
     * The branch code of the bank used for Direct Debit.          
     * 
     * 
     * 
     * @var ?string $branchCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('branchCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $branchCode = null;
    
    /**
     * The BIC code used for SEPA. The value is masked.       
     * 
     * 
     * 
     * @var ?string $businessIdentificationCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('businessIdentificationCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $businessIdentificationCode = null;
    
    /**
     * The masked credit card number. 
     * 
     * 
     * 
     * @var ?string $cardNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardNumber = null;
    
    /**
     * Email address associated with the PayPal payment method. 
     * 
     * 
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * One or two digits expiration month (1-12).
     * 
     *         
     * 
     * 
     * @var ?int $expirationMonth
     */
	#[\JMS\Serializer\Annotation\SerializedName('expirationMonth')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $expirationMonth = null;
    
    /**
     * Four-digit expiration year.
     * 
     * 
     * 
     * @var ?int $expirationYear
     */
	#[\JMS\Serializer\Annotation\SerializedName('expirationYear')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $expirationYear = null;
    
    /**
     * The payment method ID.
     * 
     * 
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The identity number used for Bank Transfer.        
     * 
     * 
     * 
     * @var ?string $identityNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('identityNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $identityNumber = null;
    
    /**
     * Indicates whether this payment method is the default payment method for the account.
     * 
     * 
     * 
     * @var ?bool $isDefault
     */
	#[\JMS\Serializer\Annotation\SerializedName('isDefault')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isDefault = null;
    
    /**
     * The mandate information for the Credit Card, ACH, or Bank Transfer payment method.
     * 
     * 
     * The following mandate fields are specific to the ACH and Bank Transfer payment methods:
     * * `mandateId`
     * * `mandateReceivedStatus`
     * * `existingMandateStatus`
     * * `mandateCreationDate`
     * * `mandateUpdateDate`
     * * `mandateStatus`
     * * `mandateReason`
     * 
     * The following mandate fields are specific to the Credit Card payment method:
     * * `mitTransactionId`
     * * `mitProfileAgreedOn`
     * * `mitConsentAgreementRef`
     * * `mitConsentAgreementSrc`
     * * `mitProfileType`
     * * `mitProfileAction`
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfo $mandateInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\POSTPMMandateInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTPMMandateInfo $mandateInfo = null;
    
    /**
     * The PayPal preapproval key.
     * 
     * 
     * 
     * @var ?string $preapprovalKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('preapprovalKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $preapprovalKey = null;
    
    /**
     * The CVV or CVV2 security code for the credit card or debit card.
     * 
     *             Only required if changing expirationMonth, expirationYear, or cardHolderName.
     *             To ensure PCI compliance, this value isn''t stored and can''t be queried.                  
     * 
     * 
     * @var ?string $securityCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('securityCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $securityCode = null;
    
    /**
     * The status of the payment method.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETPaymentMethodResponseStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETPaymentMethodResponseStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETPaymentMethodResponseStatusEnum $status = null;
    
    /**
     * The type of the payment method. For example, `CreditCard`.
     * 
     * 
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->baid = null;
		$this->iban = null;
		$this->accountHolderInfo = null;
		$this->accountNumber = null;
		$this->bankABACode = null;
		$this->bankAccountName = null;
		$this->bankAccountNumber = null;
		$this->bankAccountType = null;
		$this->bankCode = null;
		$this->bankName = null;
		$this->bankTransferType = null;
		$this->branchCode = null;
		$this->businessIdentificationCode = null;
		$this->cardNumber = null;
		$this->email = null;
		$this->expirationMonth = null;
		$this->expirationYear = null;
		$this->id = null;
		$this->identityNumber = null;
		$this->isDefault = null;
		$this->mandateInfo = null;
		$this->preapprovalKey = null;
		$this->securityCode = null;
		$this->status = null;
		$this->type = null;
	}
}
