// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum - How the parameter should be scaled. Leave unset for categorical parameters.
type GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum string

const (
	GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnumScaleTypeUnspecified GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum = "SCALE_TYPE_UNSPECIFIED"
	GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnumUnitLinearScale      GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum = "UNIT_LINEAR_SCALE"
	GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnumUnitLogScale         GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum = "UNIT_LOG_SCALE"
	GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnumUnitReverseLogScale  GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum = "UNIT_REVERSE_LOG_SCALE"
)

func (e GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum) ToPointer() *GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum {
	return &e
}

func (e *GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SCALE_TYPE_UNSPECIFIED":
		fallthrough
	case "UNIT_LINEAR_SCALE":
		fallthrough
	case "UNIT_LOG_SCALE":
		fallthrough
	case "UNIT_REVERSE_LOG_SCALE":
		*e = GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum: %v", v)
	}
}

// GoogleCloudMlV1StudyConfigParameterSpecTypeEnum - Required. The type of the parameter.
type GoogleCloudMlV1StudyConfigParameterSpecTypeEnum string

const (
	GoogleCloudMlV1StudyConfigParameterSpecTypeEnumParameterTypeUnspecified GoogleCloudMlV1StudyConfigParameterSpecTypeEnum = "PARAMETER_TYPE_UNSPECIFIED"
	GoogleCloudMlV1StudyConfigParameterSpecTypeEnumDouble                   GoogleCloudMlV1StudyConfigParameterSpecTypeEnum = "DOUBLE"
	GoogleCloudMlV1StudyConfigParameterSpecTypeEnumInteger                  GoogleCloudMlV1StudyConfigParameterSpecTypeEnum = "INTEGER"
	GoogleCloudMlV1StudyConfigParameterSpecTypeEnumCategorical              GoogleCloudMlV1StudyConfigParameterSpecTypeEnum = "CATEGORICAL"
	GoogleCloudMlV1StudyConfigParameterSpecTypeEnumDiscrete                 GoogleCloudMlV1StudyConfigParameterSpecTypeEnum = "DISCRETE"
)

func (e GoogleCloudMlV1StudyConfigParameterSpecTypeEnum) ToPointer() *GoogleCloudMlV1StudyConfigParameterSpecTypeEnum {
	return &e
}

func (e *GoogleCloudMlV1StudyConfigParameterSpecTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PARAMETER_TYPE_UNSPECIFIED":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "INTEGER":
		fallthrough
	case "CATEGORICAL":
		fallthrough
	case "DISCRETE":
		*e = GoogleCloudMlV1StudyConfigParameterSpecTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1StudyConfigParameterSpecTypeEnum: %v", v)
	}
}

// GoogleCloudMlV1StudyConfigParameterSpec - Represents a single parameter to optimize.
type GoogleCloudMlV1StudyConfigParameterSpec struct {
	CategoricalValueSpec *GoogleCloudMlV1StudyConfigParameterSpecCategoricalValueSpec `json:"categoricalValueSpec,omitempty"`
	// A child node is active if the parameter's value matches the child node's matching_parent_values. If two items in child_parameter_specs have the same name, they must have disjoint matching_parent_values.
	ChildParameterSpecs []GoogleCloudMlV1StudyConfigParameterSpec                 `json:"childParameterSpecs,omitempty"`
	DiscreteValueSpec   *GoogleCloudMlV1StudyConfigParameterSpecDiscreteValueSpec `json:"discreteValueSpec,omitempty"`
	DoubleValueSpec     *GoogleCloudMlV1StudyConfigParameterSpecDoubleValueSpec   `json:"doubleValueSpec,omitempty"`
	IntegerValueSpec    *GoogleCloudMlV1StudyConfigParameterSpecIntegerValueSpec  `json:"integerValueSpec,omitempty"`
	// Required. The parameter name must be unique amongst all ParameterSpecs.
	Parameter *string `json:"parameter,omitempty"`
	// Represents the spec to match categorical values from parent parameter.
	ParentCategoricalValues *GoogleCloudMlV1StudyConfigParameterSpecMatchingParentCategoricalValueSpec `json:"parentCategoricalValues,omitempty"`
	// Represents the spec to match discrete values from parent parameter.
	ParentDiscreteValues *GoogleCloudMlV1StudyConfigParameterSpecMatchingParentDiscreteValueSpec `json:"parentDiscreteValues,omitempty"`
	// Represents the spec to match integer values from parent parameter.
	ParentIntValues *GoogleCloudMlV1StudyConfigParameterSpecMatchingParentIntValueSpec `json:"parentIntValues,omitempty"`
	// How the parameter should be scaled. Leave unset for categorical parameters.
	ScaleType *GoogleCloudMlV1StudyConfigParameterSpecScaleTypeEnum `json:"scaleType,omitempty"`
	// Required. The type of the parameter.
	Type *GoogleCloudMlV1StudyConfigParameterSpecTypeEnum `json:"type,omitempty"`
}
