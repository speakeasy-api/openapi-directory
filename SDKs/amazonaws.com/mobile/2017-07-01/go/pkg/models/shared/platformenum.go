// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlatformEnum -  Developer desktop or target mobile app or website platform.
type PlatformEnum string

const (
	PlatformEnumOsx        PlatformEnum = "OSX"
	PlatformEnumWindows    PlatformEnum = "WINDOWS"
	PlatformEnumLinux      PlatformEnum = "LINUX"
	PlatformEnumObjc       PlatformEnum = "OBJC"
	PlatformEnumSwift      PlatformEnum = "SWIFT"
	PlatformEnumAndroid    PlatformEnum = "ANDROID"
	PlatformEnumJavascript PlatformEnum = "JAVASCRIPT"
)

func (e PlatformEnum) ToPointer() *PlatformEnum {
	return &e
}

func (e *PlatformEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OSX":
		fallthrough
	case "WINDOWS":
		fallthrough
	case "LINUX":
		fallthrough
	case "OBJC":
		fallthrough
	case "SWIFT":
		fallthrough
	case "ANDROID":
		fallthrough
	case "JAVASCRIPT":
		*e = PlatformEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlatformEnum: %v", v)
	}
}
