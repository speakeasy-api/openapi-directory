/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SourceControlDetails - The details for a source control configuration for a job, allowing synchronization of job artifacts to or from a remote repository.
 */
public class SourceControlDetails {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthStrategy")
    public SourceControlAuthStrategyEnum authStrategy;
    public SourceControlDetails withAuthStrategy(SourceControlAuthStrategyEnum authStrategy) {
        this.authStrategy = authStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthToken")
    public String authToken;
    public SourceControlDetails withAuthToken(String authToken) {
        this.authToken = authToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Branch")
    public String branch;
    public SourceControlDetails withBranch(String branch) {
        this.branch = branch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Folder")
    public String folder;
    public SourceControlDetails withFolder(String folder) {
        this.folder = folder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastCommitId")
    public String lastCommitId;
    public SourceControlDetails withLastCommitId(String lastCommitId) {
        this.lastCommitId = lastCommitId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Owner")
    public String owner;
    public SourceControlDetails withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Provider")
    public SourceControlProviderEnum provider;
    public SourceControlDetails withProvider(SourceControlProviderEnum provider) {
        this.provider = provider;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Repository")
    public String repository;
    public SourceControlDetails withRepository(String repository) {
        this.repository = repository;
        return this;
    }
    
}
