/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImageScanFindingsSummary } from "./imagescanfindingssummary";
import { ImageScanStatus } from "./imagescanstatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An object that describes an image returned by a <a>DescribeImages</a> operation.
 */
export class ImageDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "artifactMediaType" })
  artifactMediaType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imageDigest" })
  imageDigest?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imageManifestMediaType" })
  imageManifestMediaType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imagePushedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  imagePushedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "imageScanFindingsSummary" })
  @Type(() => ImageScanFindingsSummary)
  imageScanFindingsSummary?: ImageScanFindingsSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "imageScanStatus" })
  @Type(() => ImageScanStatus)
  imageScanStatus?: ImageScanStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "imageSizeInBytes" })
  imageSizeInBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "imageTags" })
  imageTags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "lastRecordedPullTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastRecordedPullTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "registryId" })
  registryId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryName" })
  repositoryName?: string;
}
