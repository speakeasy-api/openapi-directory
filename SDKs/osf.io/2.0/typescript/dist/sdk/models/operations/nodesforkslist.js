"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NodesForksListResponse = exports.NodesForksListNode = exports.NodesForksListNodeRelationships = exports.NodesForksListNodeLinks = exports.NodesForksListNodeAttributes = exports.NodesForksListNodeAttributesCategoryEnum = exports.NodesForksListRequest = void 0;
var utils_1 = require("../../../internal/utils");
var NodesForksListRequest = /** @class */ (function (_super) {
    __extends(NodesForksListRequest, _super);
    function NodesForksListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=node_id",
        }),
        __metadata("design:type", String)
    ], NodesForksListRequest.prototype, "nodeId", void 0);
    return NodesForksListRequest;
}(utils_1.SpeakeasyBase));
exports.NodesForksListRequest = NodesForksListRequest;
/**
 * The category of the node, as selected by project contributors.
 */
var NodesForksListNodeAttributesCategoryEnum;
(function (NodesForksListNodeAttributesCategoryEnum) {
    NodesForksListNodeAttributesCategoryEnum["Analysis"] = "analysis";
    NodesForksListNodeAttributesCategoryEnum["Communication"] = "communication";
    NodesForksListNodeAttributesCategoryEnum["Data"] = "data";
    NodesForksListNodeAttributesCategoryEnum["Hypothesis"] = "hypothesis";
    NodesForksListNodeAttributesCategoryEnum["Instrumentation"] = "instrumentation";
    NodesForksListNodeAttributesCategoryEnum["MethodsAndMeasures"] = "methods and measures";
    NodesForksListNodeAttributesCategoryEnum["Procedure"] = "procedure";
    NodesForksListNodeAttributesCategoryEnum["Project"] = "project";
    NodesForksListNodeAttributesCategoryEnum["Software"] = "software";
    NodesForksListNodeAttributesCategoryEnum["Other"] = "other";
})(NodesForksListNodeAttributesCategoryEnum = exports.NodesForksListNodeAttributesCategoryEnum || (exports.NodesForksListNodeAttributesCategoryEnum = {}));
/**
 * The properties of the node entity.
 */
var NodesForksListNodeAttributes = /** @class */ (function (_super) {
    __extends(NodesForksListNodeAttributes, _super);
    function NodesForksListNodeAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeAttributes.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesForksListNodeAttributes.prototype, "collection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesForksListNodeAttributes.prototype, "currentUserCanComment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], NodesForksListNodeAttributes.prototype, "currentUserPermissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], NodesForksListNodeAttributes.prototype, "dateCreated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], NodesForksListNodeAttributes.prototype, "dateModified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeAttributes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesForksListNodeAttributes.prototype, "fork", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], NodesForksListNodeAttributes.prototype, "forkedDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeAttributes.prototype, "nodeLicense", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesForksListNodeAttributes.prototype, "preprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesForksListNodeAttributes.prototype, "public", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], NodesForksListNodeAttributes.prototype, "registration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], NodesForksListNodeAttributes.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeAttributes.prototype, "templateFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeAttributes.prototype, "title", void 0);
    return NodesForksListNodeAttributes;
}(utils_1.SpeakeasyBase));
exports.NodesForksListNodeAttributes = NodesForksListNodeAttributes;
/**
 * URLs to alternative representations of the node entity.
 */
var NodesForksListNodeLinks = /** @class */ (function (_super) {
    __extends(NodesForksListNodeLinks, _super);
    function NodesForksListNodeLinks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeLinks.prototype, "html", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeLinks.prototype, "self", void 0);
    return NodesForksListNodeLinks;
}(utils_1.SpeakeasyBase));
exports.NodesForksListNodeLinks = NodesForksListNodeLinks;
/**
 * URLs to other entities or entity collections that have a relationship to the node entity.
 */
var NodesForksListNodeRelationships = /** @class */ (function (_super) {
    __extends(NodesForksListNodeRelationships, _super);
    function NodesForksListNodeRelationships() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "affiliatedInstitutions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "children", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "citation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "comments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "contributors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "draftRegistrations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "files", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "forkedFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "forks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "identifiers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "license", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "linkedNodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "logs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "nodeLinks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "parent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "preprints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "registrations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "root", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "templateNode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "viewOnlyLinks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNodeRelationships.prototype, "wikis", void 0);
    return NodesForksListNodeRelationships;
}(utils_1.SpeakeasyBase));
exports.NodesForksListNodeRelationships = NodesForksListNodeRelationships;
var NodesForksListNode = /** @class */ (function (_super) {
    __extends(NodesForksListNode, _super);
    function NodesForksListNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", NodesForksListNodeAttributes)
    ], NodesForksListNode.prototype, "attributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNode.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", NodesForksListNodeLinks)
    ], NodesForksListNode.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", NodesForksListNodeRelationships)
    ], NodesForksListNode.prototype, "relationships", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListNode.prototype, "type", void 0);
    return NodesForksListNode;
}(utils_1.SpeakeasyBase));
exports.NodesForksListNode = NodesForksListNode;
var NodesForksListResponse = /** @class */ (function (_super) {
    __extends(NodesForksListResponse, _super);
    function NodesForksListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], NodesForksListResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], NodesForksListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], NodesForksListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], NodesForksListResponse.prototype, "rawResponse", void 0);
    return NodesForksListResponse;
}(utils_1.SpeakeasyBase));
exports.NodesForksListResponse = NodesForksListResponse;
