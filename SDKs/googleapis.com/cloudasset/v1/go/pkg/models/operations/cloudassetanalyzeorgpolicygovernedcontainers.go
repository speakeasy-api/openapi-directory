// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CloudassetAnalyzeOrgPolicyGovernedContainersSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type CloudassetAnalyzeOrgPolicyGovernedContainersPathParams struct {
	// Required. The organization to scope the request. Only organization policies within the scope will be analyzed. The output containers will also be limited to the ones governed by those in-scope organization policies. * organizations/{ORGANIZATION_NUMBER} (e.g., "organizations/123456")
	Scope string `pathParam:"style=simple,explode=false,name=scope"`
}

type CloudassetAnalyzeOrgPolicyGovernedContainersQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Required. The name of the constraint to analyze governed containers for. The analysis only contains organization policies for the provided constraint.
	Constraint *string `queryParam:"style=form,explode=true,name=constraint"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// The expression to filter the governed containers in result. The only supported field is `parent`, and the only supported operator is `=`. Example: parent="//cloudresourcemanager.googleapis.com/folders/001" will return all containers under "folders/001".
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of items to return per page. If unspecified, AnalyzeOrgPolicyGovernedContainersResponse.governed_containers will contain 100 items with a maximum of 200.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// The pagination token to retrieve the next page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type CloudassetAnalyzeOrgPolicyGovernedContainersRequest struct {
	PathParams  CloudassetAnalyzeOrgPolicyGovernedContainersPathParams
	QueryParams CloudassetAnalyzeOrgPolicyGovernedContainersQueryParams
	Security    CloudassetAnalyzeOrgPolicyGovernedContainersSecurity
}

type CloudassetAnalyzeOrgPolicyGovernedContainersResponse struct {
	// Successful response
	AnalyzeOrgPolicyGovernedContainersResponse *shared.AnalyzeOrgPolicyGovernedContainersResponse
	ContentType                                string
	StatusCode                                 int
	RawResponse                                *http.Response
}
