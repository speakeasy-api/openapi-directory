"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdatePipeResponse = exports.UpdatePipeRequest = exports.UpdatePipeRequestBody = exports.UpdatePipeRequestBodyTargetParameters = exports.UpdatePipeRequestBodySourceParameters = exports.UpdatePipeRequestBodyEnrichmentParameters = exports.UpdatePipeRequestBodyDesiredStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * The state the pipe should be in.
 */
var UpdatePipeRequestBodyDesiredStateEnum;
(function (UpdatePipeRequestBodyDesiredStateEnum) {
    UpdatePipeRequestBodyDesiredStateEnum["Running"] = "RUNNING";
    UpdatePipeRequestBodyDesiredStateEnum["Stopped"] = "STOPPED";
})(UpdatePipeRequestBodyDesiredStateEnum = exports.UpdatePipeRequestBodyDesiredStateEnum || (exports.UpdatePipeRequestBodyDesiredStateEnum = {}));
/**
 * The parameters required to set up enrichment on your pipe.
 */
var UpdatePipeRequestBodyEnrichmentParameters = /** @class */ (function (_super) {
    __extends(UpdatePipeRequestBodyEnrichmentParameters, _super);
    function UpdatePipeRequestBodyEnrichmentParameters() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "HttpParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeEnrichmentHttpParameters; }),
        __metadata("design:type", shared.PipeEnrichmentHttpParameters)
    ], UpdatePipeRequestBodyEnrichmentParameters.prototype, "httpParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InputTemplate" }),
        __metadata("design:type", String)
    ], UpdatePipeRequestBodyEnrichmentParameters.prototype, "inputTemplate", void 0);
    return UpdatePipeRequestBodyEnrichmentParameters;
}(utils_1.SpeakeasyBase));
exports.UpdatePipeRequestBodyEnrichmentParameters = UpdatePipeRequestBodyEnrichmentParameters;
/**
 * The parameters required to set up a source for your pipe.
 */
var UpdatePipeRequestBodySourceParameters = /** @class */ (function (_super) {
    __extends(UpdatePipeRequestBodySourceParameters, _super);
    function UpdatePipeRequestBodySourceParameters() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ActiveMQBrokerParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.UpdatePipeSourceActiveMQBrokerParameters; }),
        __metadata("design:type", shared.UpdatePipeSourceActiveMQBrokerParameters)
    ], UpdatePipeRequestBodySourceParameters.prototype, "activeMQBrokerParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DynamoDBStreamParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.UpdatePipeSourceDynamoDBStreamParameters; }),
        __metadata("design:type", shared.UpdatePipeSourceDynamoDBStreamParameters)
    ], UpdatePipeRequestBodySourceParameters.prototype, "dynamoDBStreamParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FilterCriteria" }),
        (0, class_transformer_1.Type)(function () { return shared.FilterCriteria; }),
        __metadata("design:type", shared.FilterCriteria)
    ], UpdatePipeRequestBodySourceParameters.prototype, "filterCriteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "KinesisStreamParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.UpdatePipeSourceKinesisStreamParameters; }),
        __metadata("design:type", shared.UpdatePipeSourceKinesisStreamParameters)
    ], UpdatePipeRequestBodySourceParameters.prototype, "kinesisStreamParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ManagedStreamingKafkaParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.UpdatePipeSourceManagedStreamingKafkaParameters; }),
        __metadata("design:type", shared.UpdatePipeSourceManagedStreamingKafkaParameters)
    ], UpdatePipeRequestBodySourceParameters.prototype, "managedStreamingKafkaParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RabbitMQBrokerParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.UpdatePipeSourceRabbitMQBrokerParameters; }),
        __metadata("design:type", shared.UpdatePipeSourceRabbitMQBrokerParameters)
    ], UpdatePipeRequestBodySourceParameters.prototype, "rabbitMQBrokerParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SelfManagedKafkaParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.UpdatePipeSourceSelfManagedKafkaParameters; }),
        __metadata("design:type", shared.UpdatePipeSourceSelfManagedKafkaParameters)
    ], UpdatePipeRequestBodySourceParameters.prototype, "selfManagedKafkaParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SqsQueueParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.UpdatePipeSourceSqsQueueParameters; }),
        __metadata("design:type", shared.UpdatePipeSourceSqsQueueParameters)
    ], UpdatePipeRequestBodySourceParameters.prototype, "sqsQueueParameters", void 0);
    return UpdatePipeRequestBodySourceParameters;
}(utils_1.SpeakeasyBase));
exports.UpdatePipeRequestBodySourceParameters = UpdatePipeRequestBodySourceParameters;
/**
 * The parameters required to set up a target for your pipe.
 */
var UpdatePipeRequestBodyTargetParameters = /** @class */ (function (_super) {
    __extends(UpdatePipeRequestBodyTargetParameters, _super);
    function UpdatePipeRequestBodyTargetParameters() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BatchJobParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetBatchJobParameters; }),
        __metadata("design:type", shared.PipeTargetBatchJobParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "batchJobParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CloudWatchLogsParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetCloudWatchLogsParameters; }),
        __metadata("design:type", shared.PipeTargetCloudWatchLogsParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "cloudWatchLogsParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EcsTaskParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetEcsTaskParameters; }),
        __metadata("design:type", shared.PipeTargetEcsTaskParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "ecsTaskParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EventBridgeEventBusParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetEventBridgeEventBusParameters; }),
        __metadata("design:type", shared.PipeTargetEventBridgeEventBusParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "eventBridgeEventBusParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "HttpParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetHttpParameters; }),
        __metadata("design:type", shared.PipeTargetHttpParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "httpParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InputTemplate" }),
        __metadata("design:type", String)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "inputTemplate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "KinesisStreamParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetKinesisStreamParameters; }),
        __metadata("design:type", shared.PipeTargetKinesisStreamParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "kinesisStreamParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LambdaFunctionParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetLambdaFunctionParameters; }),
        __metadata("design:type", shared.PipeTargetLambdaFunctionParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "lambdaFunctionParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RedshiftDataParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetRedshiftDataParameters; }),
        __metadata("design:type", shared.PipeTargetRedshiftDataParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "redshiftDataParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SageMakerPipelineParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetSageMakerPipelineParameters; }),
        __metadata("design:type", shared.PipeTargetSageMakerPipelineParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "sageMakerPipelineParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SqsQueueParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetSqsQueueParameters; }),
        __metadata("design:type", shared.PipeTargetSqsQueueParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "sqsQueueParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StepFunctionStateMachineParameters" }),
        (0, class_transformer_1.Type)(function () { return shared.PipeTargetStateMachineParameters; }),
        __metadata("design:type", shared.PipeTargetStateMachineParameters)
    ], UpdatePipeRequestBodyTargetParameters.prototype, "stepFunctionStateMachineParameters", void 0);
    return UpdatePipeRequestBodyTargetParameters;
}(utils_1.SpeakeasyBase));
exports.UpdatePipeRequestBodyTargetParameters = UpdatePipeRequestBodyTargetParameters;
var UpdatePipeRequestBody = /** @class */ (function (_super) {
    __extends(UpdatePipeRequestBody, _super);
    function UpdatePipeRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Description" }),
        __metadata("design:type", String)
    ], UpdatePipeRequestBody.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DesiredState" }),
        __metadata("design:type", String)
    ], UpdatePipeRequestBody.prototype, "desiredState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Enrichment" }),
        __metadata("design:type", String)
    ], UpdatePipeRequestBody.prototype, "enrichment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EnrichmentParameters" }),
        (0, class_transformer_1.Type)(function () { return UpdatePipeRequestBodyEnrichmentParameters; }),
        __metadata("design:type", UpdatePipeRequestBodyEnrichmentParameters)
    ], UpdatePipeRequestBody.prototype, "enrichmentParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RoleArn" }),
        __metadata("design:type", String)
    ], UpdatePipeRequestBody.prototype, "roleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SourceParameters" }),
        (0, class_transformer_1.Type)(function () { return UpdatePipeRequestBodySourceParameters; }),
        __metadata("design:type", UpdatePipeRequestBodySourceParameters)
    ], UpdatePipeRequestBody.prototype, "sourceParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Target" }),
        __metadata("design:type", String)
    ], UpdatePipeRequestBody.prototype, "target", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TargetParameters" }),
        (0, class_transformer_1.Type)(function () { return UpdatePipeRequestBodyTargetParameters; }),
        __metadata("design:type", UpdatePipeRequestBodyTargetParameters)
    ], UpdatePipeRequestBody.prototype, "targetParameters", void 0);
    return UpdatePipeRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdatePipeRequestBody = UpdatePipeRequestBody;
var UpdatePipeRequest = /** @class */ (function (_super) {
    __extends(UpdatePipeRequest, _super);
    function UpdatePipeRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=Name",
        }),
        __metadata("design:type", String)
    ], UpdatePipeRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdatePipeRequestBody)
    ], UpdatePipeRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], UpdatePipeRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], UpdatePipeRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], UpdatePipeRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], UpdatePipeRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], UpdatePipeRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], UpdatePipeRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], UpdatePipeRequest.prototype, "xAmzSignedHeaders", void 0);
    return UpdatePipeRequest;
}(utils_1.SpeakeasyBase));
exports.UpdatePipeRequest = UpdatePipeRequest;
var UpdatePipeResponse = /** @class */ (function (_super) {
    __extends(UpdatePipeResponse, _super);
    function UpdatePipeResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdatePipeResponse.prototype, "conflictException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdatePipeResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdatePipeResponse.prototype, "internalException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdatePipeResponse.prototype, "notFoundException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdatePipeResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdatePipeResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdatePipeResponse.prototype, "throttlingException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.UpdatePipeResponse)
    ], UpdatePipeResponse.prototype, "updatePipeResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdatePipeResponse.prototype, "validationException", void 0);
    return UpdatePipeResponse;
}(utils_1.SpeakeasyBase));
exports.UpdatePipeResponse = UpdatePipeResponse;
