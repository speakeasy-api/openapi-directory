"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .actions import Actions
from .activity import Activity
from .apps import Apps
from .billing import Billing
from .checks import Checks
from .code_scanning import CodeScanning
from .codes_of_conduct import CodesOfConduct
from .dependabot import Dependabot
from .emojis import Emojis
from .enterprise_admin import EnterpriseAdmin
from .gists import Gists
from .git import Git
from .gitignore import Gitignore
from .issues import Issues
from .licenses import Licenses
from .markdown import Markdown
from .meta import Meta
from .migrations import Migrations
from .oauth_authorizations import OauthAuthorizations
from .orgs import Orgs
from .projects import Projects
from .pulls import Pulls
from .rate_limit import RateLimit
from .reactions import Reactions
from .repos import Repos
from .search import Search
from .secret_scanning import SecretScanning
from .teams import Teams
from .users import Users

SERVERS = [
    "https://github.com/",
    "https://{protocol}://{hostname}/api/v3",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""GitHub's v3 REST API.
    https://docs.github.com/enterprise-server@3.4/rest/ - GitHub Enterprise Developer Docs
    """
    actions: Actions
    r"""Endpoints to manage GitHub Actions using the REST API."""
    activity: Activity
    r"""Activity APIs provide access to notifications, subscriptions, and timelines."""
    apps: Apps
    r"""Information for integrations and installations."""
    billing: Billing
    r"""Monitor charges and usage from Actions and Packages."""
    checks: Checks
    r"""Rich interactions with checks run by your integrations."""
    code_scanning: CodeScanning
    r"""Retrieve code scanning alerts from a repository."""
    codes_of_conduct: CodesOfConduct
    r"""Insight into codes of conduct for your communities."""
    dependabot: Dependabot
    r"""Endpoints to manage Dependabot."""
    emojis: Emojis
    r"""List emojis available to use on GitHub."""
    enterprise_admin: EnterpriseAdmin
    r"""Enterprise Administration"""
    gists: Gists
    r"""View, modify your gists."""
    git: Git
    r"""Raw Git functionality."""
    gitignore: Gitignore
    r"""View gitignore templates"""
    issues: Issues
    r"""Interact with GitHub Issues."""
    licenses: Licenses
    r"""View various OSS licenses."""
    markdown: Markdown
    r"""Render GitHub flavored markdown"""
    meta: Meta
    r"""Endpoints that give information about the API."""
    migrations: Migrations
    r"""Move projects to or from GitHub."""
    oauth_authorizations: OauthAuthorizations
    orgs: Orgs
    r"""Interact with GitHub Orgs."""
    projects: Projects
    r"""Interact with GitHub Projects."""
    pulls: Pulls
    r"""Interact with GitHub Pull Requests."""
    rate_limit: RateLimit
    r"""Check your current rate limit status"""
    reactions: Reactions
    r"""Interact with reactions to various GitHub entities."""
    repos: Repos
    r"""Interact with GitHub Repos."""
    search: Search
    r"""Look for stuff on GitHub."""
    secret_scanning: SecretScanning
    r"""Retrieve secret scanning alerts from a repository."""
    teams: Teams
    r"""Interact with GitHub Teams."""
    users: Users
    r"""Interact with and view information about users and also current user."""

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.actions = Actions(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.activity = Activity(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.apps = Apps(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.billing = Billing(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.checks = Checks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.code_scanning = CodeScanning(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.codes_of_conduct = CodesOfConduct(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.dependabot = Dependabot(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.emojis = Emojis(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.enterprise_admin = EnterpriseAdmin(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.gists = Gists(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.git = Git(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.gitignore = Gitignore(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.issues = Issues(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.licenses = Licenses(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.markdown = Markdown(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.meta = Meta(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.migrations = Migrations(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.oauth_authorizations = OauthAuthorizations(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.orgs = Orgs(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.projects = Projects(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.pulls = Pulls(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rate_limit = RateLimit(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.reactions = Reactions(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.repos = Repos(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.search = Search(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.secret_scanning = SecretScanning(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.teams = Teams(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.users = Users(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    