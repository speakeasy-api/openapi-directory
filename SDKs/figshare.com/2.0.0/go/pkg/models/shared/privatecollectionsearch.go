// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PrivateCollectionSearchOrderEnum - The field by which to order.
type PrivateCollectionSearchOrderEnum string

const (
	PrivateCollectionSearchOrderEnumPublishedDate PrivateCollectionSearchOrderEnum = "published_date"
	PrivateCollectionSearchOrderEnumModifiedDate  PrivateCollectionSearchOrderEnum = "modified_date"
	PrivateCollectionSearchOrderEnumViews         PrivateCollectionSearchOrderEnum = "views"
	PrivateCollectionSearchOrderEnumShares        PrivateCollectionSearchOrderEnum = "shares"
	PrivateCollectionSearchOrderEnumCites         PrivateCollectionSearchOrderEnum = "cites"
)

func (e PrivateCollectionSearchOrderEnum) ToPointer() *PrivateCollectionSearchOrderEnum {
	return &e
}

func (e *PrivateCollectionSearchOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "published_date":
		fallthrough
	case "modified_date":
		fallthrough
	case "views":
		fallthrough
	case "shares":
		fallthrough
	case "cites":
		*e = PrivateCollectionSearchOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateCollectionSearchOrderEnum: %v", v)
	}
}

// PrivateCollectionSearchOrderDirectionEnum - Direction of ordering
type PrivateCollectionSearchOrderDirectionEnum string

const (
	PrivateCollectionSearchOrderDirectionEnumAsc  PrivateCollectionSearchOrderDirectionEnum = "asc"
	PrivateCollectionSearchOrderDirectionEnumDesc PrivateCollectionSearchOrderDirectionEnum = "desc"
)

func (e PrivateCollectionSearchOrderDirectionEnum) ToPointer() *PrivateCollectionSearchOrderDirectionEnum {
	return &e
}

func (e *PrivateCollectionSearchOrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = PrivateCollectionSearchOrderDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateCollectionSearchOrderDirectionEnum: %v", v)
	}
}

// PrivateCollectionSearch - Search Parameters
type PrivateCollectionSearch struct {
	// Only return collections with this doi
	Doi *string `json:"doi,omitempty"`
	// only return collections from this group
	Group *int `json:"group,omitempty"`
	// Only return collections with this handle
	Handle *string `json:"handle,omitempty"`
	// only return collections from this institution
	Institution *int `json:"institution,omitempty"`
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `json:"limit,omitempty"`
	// Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	ModifiedSince *string `json:"modified_since,omitempty"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `json:"offset,omitempty"`
	// The field by which to order.
	Order *PrivateCollectionSearchOrderEnum `json:"order,omitempty"`
	// Direction of ordering
	OrderDirection *PrivateCollectionSearchOrderDirectionEnum `json:"order_direction,omitempty"`
	// Page number. Used for pagination with page_size
	Page *int64 `json:"page,omitempty"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `json:"page_size,omitempty"`
	// Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	PublishedSince *string `json:"published_since,omitempty"`
	// Only return collections with this resource_doi
	ResourceDoi *string `json:"resource_doi,omitempty"`
	// only return collections with this resource_id
	ResourceID *string `json:"resource_id,omitempty"`
	// Search term
	SearchFor *string `json:"search_for,omitempty"`
}
