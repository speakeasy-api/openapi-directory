// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ParameterConstraintInEnum - Parameter location
type ParameterConstraintInEnum string

const (
	ParameterConstraintInEnumPath   ParameterConstraintInEnum = "path"
	ParameterConstraintInEnumQuery  ParameterConstraintInEnum = "query"
	ParameterConstraintInEnumHeader ParameterConstraintInEnum = "header"
)

func (e ParameterConstraintInEnum) ToPointer() *ParameterConstraintInEnum {
	return &e
}

func (e *ParameterConstraintInEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "path":
		fallthrough
	case "query":
		fallthrough
	case "header":
		*e = ParameterConstraintInEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ParameterConstraintInEnum: %v", v)
	}
}

// ParameterConstraint - Companion object for Operation that may be used to express constraints on request parameters
type ParameterConstraint struct {
	// Parameter location
	In *ParameterConstraintInEnum `json:"in,omitempty"`
	// Whether it's a regular expression matching constraint
	MustMatchRegexp *string `json:"mustMatchRegexp,omitempty"`
	// Parameter name
	Name string `json:"name"`
	// Whether it's a recopy constraint
	Recopy *bool `json:"recopy,omitempty"`
	// Whether it's a required constraint
	Required *bool `json:"required,omitempty"`
}
