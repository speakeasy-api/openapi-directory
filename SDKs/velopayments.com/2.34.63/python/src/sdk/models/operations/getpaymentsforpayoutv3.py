"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import inline_response_404 as shared_inline_response_404
from ..shared import pagedpaymentsresponsev3 as shared_pagedpaymentsresponsev3
from enum import Enum
from typing import Optional

class GetPaymentsForPayoutV3StatusEnum(str, Enum):
    r"""Payment Status
    * ACCEPTED: any payment which was accepted at submission time (status may have changed since)
    * REJECTED: any payment rejected by initial submission processing
    * WITHDRAWN: any payment which has been withdrawn
    * WITHDRAWABLE: any payment eligible for withdrawal
    """
    ACCEPTED = 'ACCEPTED'
    REJECTED = 'REJECTED'
    WITHDRAWN = 'WITHDRAWN'
    WITHDRAWABLE = 'WITHDRAWABLE'

class GetPaymentsForPayoutV3TransmissionTypeEnum(str, Enum):
    r"""Transmission Type
    * ACH
    * SAME_DAY_ACH
    * WIRE
    """
    ACH = 'ACH'
    SAME_DAY_ACH = 'SAME_DAY_ACH'
    WIRE = 'WIRE'


@dataclasses.dataclass
class GetPaymentsForPayoutV3Request:
    
    payout_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'payoutId', 'style': 'simple', 'explode': False }})
    r"""Id of the payout"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number. Default is 1."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""The number of results to return in a page"""  
    payment_memo: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paymentMemo', 'style': 'form', 'explode': True }})
    r"""Payment Memo of the Payment"""  
    payor_payment_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'payorPaymentId', 'style': 'form', 'explode': True }})
    r"""Payor's Id of the Payment"""  
    remote_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'remoteId', 'style': 'form', 'explode': True }})
    r"""The remote id of the payees."""  
    source_account_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sourceAccountName', 'style': 'form', 'explode': True }})
    r"""Physical Account Name"""  
    status: Optional[GetPaymentsForPayoutV3StatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Payment Status
    * ACCEPTED: any payment which was accepted at submission time (status may have changed since)
    * REJECTED: any payment rejected by initial submission processing
    * WITHDRAWN: any payment which has been withdrawn
    * WITHDRAWABLE: any payment eligible for withdrawal
    """  
    transmission_type: Optional[GetPaymentsForPayoutV3TransmissionTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'transmissionType', 'style': 'form', 'explode': True }})
    r"""Transmission Type
    * ACH
    * SAME_DAY_ACH
    * WIRE
    """  
    

@dataclasses.dataclass
class GetPaymentsForPayoutV3Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    inline_response_404: Optional[shared_inline_response_404.InlineResponse404] = dataclasses.field(default=None)
    r"""The resource was not found or is no longer available"""  
    paged_payments_response_v3: Optional[shared_pagedpaymentsresponsev3.PagedPaymentsResponseV3] = dataclasses.field(default=None)
    r"""Payments for payout"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    