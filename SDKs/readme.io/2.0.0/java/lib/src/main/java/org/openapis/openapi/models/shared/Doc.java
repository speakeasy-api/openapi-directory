/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Doc - Doc object
 */
public class Doc {
    /**
     * Body content of the page, formatted in ReadMe or Github flavored Markdown. Accepts long page content, for example, greater than 100k characters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("body")
    public String body;

    public Doc withBody(String body) {
        this.body = body;
        return this;
    }
    
    /**
     * Category ID of the page, which you can get through https://docs.readme.com/developers/reference/categories#getcategory 
     */
    @JsonProperty("category")
    public String category;

    public Doc withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * Visibility of the page
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hidden")
    public Boolean hidden;

    public Doc withHidden(Boolean hidden) {
        this.hidden = hidden;
        return this;
    }
    
    /**
     * For a subpage, specify the parent doc ID, which you can get through https://docs.readme.com/developers/reference/docs#getdoc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentDoc")
    public String parentDoc;

    public Doc withParentDoc(String parentDoc) {
        this.parentDoc = parentDoc;
        return this;
    }
    
    /**
     * Title of the page
     */
    @JsonProperty("title")
    public String title;

    public Doc withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Type of the page. The available types all show up under the /docs/ URL path of your docs project (also known as the "guides" section). Can be "basic" (most common), "error" (page desribing an API error), or "link" (page that redirects to an external link)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public DocTypeEnum type;

    public Doc withType(DocTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public Doc(@JsonProperty("category") String category, @JsonProperty("title") String title) {
        this.category = category;
        this.title = title;
  }
}
