"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudchannelv1edudata as shared_googlecloudchannelv1edudata
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudChannelV1CloudIdentityInfoCustomerTypeEnum(str, Enum):
    r"""CustomerType indicates verification type needed for using services."""
    CUSTOMER_TYPE_UNSPECIFIED = 'CUSTOMER_TYPE_UNSPECIFIED'
    DOMAIN = 'DOMAIN'
    TEAM = 'TEAM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudChannelV1CloudIdentityInfoInput:
    r"""Cloud Identity information for the Cloud Channel Customer."""
    
    alternate_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alternateEmail'), 'exclude': lambda f: f is None }})
    r"""The alternate email."""  
    customer_type: Optional[GoogleCloudChannelV1CloudIdentityInfoCustomerTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerType'), 'exclude': lambda f: f is None }})
    r"""CustomerType indicates verification type needed for using services."""  
    edu_data: Optional[shared_googlecloudchannelv1edudata.GoogleCloudChannelV1EduData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eduData'), 'exclude': lambda f: f is None }})
    r"""Required Edu Attributes"""  
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""Language code."""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneNumber'), 'exclude': lambda f: f is None }})
    r"""Phone number associated with the Cloud Identity."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudChannelV1CloudIdentityInfo:
    r"""Cloud Identity information for the Cloud Channel Customer."""
    
    admin_console_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adminConsoleUri'), 'exclude': lambda f: f is None }})
    r"""Output only. URI of Customer's Admin console dashboard."""  
    alternate_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alternateEmail'), 'exclude': lambda f: f is None }})
    r"""The alternate email."""  
    customer_type: Optional[GoogleCloudChannelV1CloudIdentityInfoCustomerTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerType'), 'exclude': lambda f: f is None }})
    r"""CustomerType indicates verification type needed for using services."""  
    edu_data: Optional[shared_googlecloudchannelv1edudata.GoogleCloudChannelV1EduData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eduData'), 'exclude': lambda f: f is None }})
    r"""Required Edu Attributes"""  
    is_domain_verified: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDomainVerified'), 'exclude': lambda f: f is None }})
    r"""Output only. Whether the domain is verified. This field is not returned for a Customer's cloud_identity_info resource. Partners can use the domains.get() method of the Workspace SDK's Directory API, or listen to the PRIMARY_DOMAIN_VERIFIED Pub/Sub event in to track domain verification of their resolve Workspace customers."""  
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""Language code."""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneNumber'), 'exclude': lambda f: f is None }})
    r"""Phone number associated with the Cloud Identity."""  
    primary_domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryDomain'), 'exclude': lambda f: f is None }})
    r"""Output only. The primary domain name."""  
    