"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ospolicyresourcefilegcs as shared_ospolicyresourcefilegcs
from ..shared import ospolicyresourcefileremote as shared_ospolicyresourcefileremote
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OSPolicyResourceFile:
    r"""A remote or local file."""
    
    allow_insecure: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowInsecure'), 'exclude': lambda f: f is None }})
    r"""Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified."""  
    gcs: Optional[shared_ospolicyresourcefilegcs.OSPolicyResourceFileGcs] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcs'), 'exclude': lambda f: f is None }})
    r"""Specifies a file available as a Cloud Storage Object."""  
    local_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localPath'), 'exclude': lambda f: f is None }})
    r"""A local path within the VM to use."""  
    remote: Optional[shared_ospolicyresourcefileremote.OSPolicyResourceFileRemote] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remote'), 'exclude': lambda f: f is None }})
    r"""Specifies a file available via some URI."""  
    