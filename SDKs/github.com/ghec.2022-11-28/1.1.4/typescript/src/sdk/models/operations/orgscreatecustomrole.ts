/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The system role from which this role inherits permissions.
 */
export enum OrgsCreateCustomRoleRequestBodyBaseRoleEnum {
  Read = "read",
  Triage = "triage",
  Write = "write",
  Maintain = "maintain",
}

export class OrgsCreateCustomRoleRequestBody extends SpeakeasyBase {
  /**
   * The system role from which this role inherits permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "base_role" })
  baseRole: OrgsCreateCustomRoleRequestBodyBaseRoleEnum;

  /**
   * A short description about the intended usage of this role or what permissions it grants.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The name of the custom role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * A list of additional permissions included in this role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions: string[];
}

export class OrgsCreateCustomRoleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: OrgsCreateCustomRoleRequestBody;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;
}

export class OrgsCreateCustomRoleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Resource not found
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  organizationCustomRepositoryRole?: shared.OrganizationCustomRepositoryRole;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
