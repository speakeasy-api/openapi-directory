"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Node = exports.NodeTypeEnum = exports.NodeClassificationEnum = void 0;
var utils_1 = require("../../../internal/utils");
var encryptioninfo_1 = require("./encryptioninfo");
var nodepermissions_1 = require("./nodepermissions");
var userinfo_1 = require("./userinfo");
var class_transformer_1 = require("class-transformer");
/**
 * Classification ID:
 *
 * @remarks
 *
 * * `1` - public
 *
 * * `2` - internal
 *
 * * `3` - confidential
 *
 * * `4` - strictly confidential
 */
var NodeClassificationEnum;
(function (NodeClassificationEnum) {
    NodeClassificationEnum["One"] = "1";
    NodeClassificationEnum["Two"] = "2";
    NodeClassificationEnum["Three"] = "3";
    NodeClassificationEnum["Four"] = "4";
})(NodeClassificationEnum = exports.NodeClassificationEnum || (exports.NodeClassificationEnum = {}));
/**
 * Node type
 */
var NodeTypeEnum;
(function (NodeTypeEnum) {
    NodeTypeEnum["Room"] = "room";
    NodeTypeEnum["Folder"] = "folder";
    NodeTypeEnum["File"] = "file";
})(NodeTypeEnum = exports.NodeTypeEnum || (exports.NodeTypeEnum = {}));
/**
 * Node information (Node can be a room, folder or file)
 */
var Node = /** @class */ (function (_super) {
    __extends(Node, _super);
    function Node() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authParentId" }),
        __metadata("design:type", Number)
    ], Node.prototype, "authParentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "branchVersion" }),
        __metadata("design:type", Number)
    ], Node.prototype, "branchVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Node }),
        (0, class_transformer_1.Expose)({ name: "children" }),
        (0, class_transformer_1.Type)(function () { return Node; }),
        __metadata("design:type", Array)
    ], Node.prototype, "children", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "classification" }),
        __metadata("design:type", String)
    ], Node.prototype, "classification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cntChildren" }),
        __metadata("design:type", Number)
    ], Node.prototype, "cntChildren", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cntComments" }),
        __metadata("design:type", Number)
    ], Node.prototype, "cntComments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cntDeletedVersions" }),
        __metadata("design:type", Number)
    ], Node.prototype, "cntDeletedVersions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cntDownloadShares" }),
        __metadata("design:type", Number)
    ], Node.prototype, "cntDownloadShares", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cntFiles" }),
        __metadata("design:type", Number)
    ], Node.prototype, "cntFiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cntFolders" }),
        __metadata("design:type", Number)
    ], Node.prototype, "cntFolders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cntRooms" }),
        __metadata("design:type", Number)
    ], Node.prototype, "cntRooms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cntUploadShares" }),
        __metadata("design:type", Number)
    ], Node.prototype, "cntUploadShares", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Node.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdBy" }),
        (0, class_transformer_1.Type)(function () { return userinfo_1.UserInfo; }),
        __metadata("design:type", userinfo_1.UserInfo)
    ], Node.prototype, "createdBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encryptionInfo" }),
        (0, class_transformer_1.Type)(function () { return encryptioninfo_1.EncryptionInfo; }),
        __metadata("design:type", encryptioninfo_1.EncryptionInfo)
    ], Node.prototype, "encryptionInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expireAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Node.prototype, "expireAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileType" }),
        __metadata("design:type", String)
    ], Node.prototype, "fileType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hasActivitiesLog" }),
        __metadata("design:type", Boolean)
    ], Node.prototype, "hasActivitiesLog", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hash" }),
        __metadata("design:type", String)
    ], Node.prototype, "hash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], Node.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inheritPermissions" }),
        __metadata("design:type", Boolean)
    ], Node.prototype, "inheritPermissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isBrowsable" }),
        __metadata("design:type", Boolean)
    ], Node.prototype, "isBrowsable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isEncrypted" }),
        __metadata("design:type", Boolean)
    ], Node.prototype, "isEncrypted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isFavorite" }),
        __metadata("design:type", Boolean)
    ], Node.prototype, "isFavorite", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mediaToken" }),
        __metadata("design:type", String)
    ], Node.prototype, "mediaToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mediaType" }),
        __metadata("design:type", String)
    ], Node.prototype, "mediaType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Node.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], Node.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parentId" }),
        __metadata("design:type", Number)
    ], Node.prototype, "parentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parentPath" }),
        __metadata("design:type", String)
    ], Node.prototype, "parentPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "permissions" }),
        (0, class_transformer_1.Type)(function () { return nodepermissions_1.NodePermissions; }),
        __metadata("design:type", nodepermissions_1.NodePermissions)
    ], Node.prototype, "permissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quota" }),
        __metadata("design:type", Number)
    ], Node.prototype, "quota", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recycleBinRetentionPeriod" }),
        __metadata("design:type", Number)
    ], Node.prototype, "recycleBinRetentionPeriod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referenceId" }),
        __metadata("design:type", Number)
    ], Node.prototype, "referenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "size" }),
        __metadata("design:type", Number)
    ], Node.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timestampCreation" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Node.prototype, "timestampCreation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timestampModification" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Node.prototype, "timestampModification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Node.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Node.prototype, "updatedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedBy" }),
        (0, class_transformer_1.Type)(function () { return userinfo_1.UserInfo; }),
        __metadata("design:type", userinfo_1.UserInfo)
    ], Node.prototype, "updatedBy", void 0);
    return Node;
}(utils_1.SpeakeasyBase));
exports.Node = Node;
