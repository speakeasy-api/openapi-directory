// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeletePullThroughCacheRuleXAmzTargetEnum
type DeletePullThroughCacheRuleXAmzTargetEnum string

const (
	DeletePullThroughCacheRuleXAmzTargetEnumAmazonEc2ContainerRegistryV20150921DeletePullThroughCacheRule DeletePullThroughCacheRuleXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.DeletePullThroughCacheRule"
)

func (e DeletePullThroughCacheRuleXAmzTargetEnum) ToPointer() *DeletePullThroughCacheRuleXAmzTargetEnum {
	return &e
}

func (e *DeletePullThroughCacheRuleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerRegistry_V20150921.DeletePullThroughCacheRule":
		*e = DeletePullThroughCacheRuleXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeletePullThroughCacheRuleXAmzTargetEnum: %v", v)
	}
}

type DeletePullThroughCacheRuleRequest struct {
	DeletePullThroughCacheRuleRequest shared.DeletePullThroughCacheRuleRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        DeletePullThroughCacheRuleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeletePullThroughCacheRuleResponse struct {
	ContentType string
	// Success
	DeletePullThroughCacheRuleResponse *shared.DeletePullThroughCacheRuleResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// PullThroughCacheRuleNotFoundException
	PullThroughCacheRuleNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
	// ValidationException
	ValidationException interface{}
}
