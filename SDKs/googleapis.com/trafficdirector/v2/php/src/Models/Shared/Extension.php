<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Extension - Version and identification for an Envoy extension. [#next-free-field: 6]
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Extension
{
    /**
     * Category of the extension. Extension category names use reverse DNS notation. For instance "envoy.filters.listener" for Envoy's built-in listener filters or "com.acme.filters.http" for HTTP filters from acme.com vendor. [#comment:
     * 
     * @var ?string $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $category = null;
    
    /**
     * Indicates that the extension is present but was disabled via dynamic configuration.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * This is the name of the Envoy filter as specified in the Envoy configuration, e.g. envoy.filters.http.router, com.acme.widget.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * [#not-implemented-hide:] Type descriptor of extension configuration proto. [#comment:
     * 
     * @var ?string $typeDescriptor
     */
	#[\JMS\Serializer\Annotation\SerializedName('typeDescriptor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $typeDescriptor = null;
    
    /**
     * BuildVersion combines SemVer version of extension with free-form build information (i.e. 'alpha', 'private-build') as a set of strings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BuildVersion $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BuildVersion')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BuildVersion $version = null;
    
	public function __construct()
	{
		$this->category = null;
		$this->disabled = null;
		$this->name = null;
		$this->typeDescriptor = null;
		$this->version = null;
	}
}
