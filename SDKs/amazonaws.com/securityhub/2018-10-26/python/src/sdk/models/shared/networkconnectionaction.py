"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import actionlocalportdetails as shared_actionlocalportdetails
from ..shared import actionremoteipdetails as shared_actionremoteipdetails
from ..shared import actionremoteportdetails as shared_actionremoteportdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkConnectionAction:
    r"""Provided if <code>ActionType</code> is <code>NETWORK_CONNECTION</code>. It provides details about the attempted network connection that was detected."""
    
    blocked: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Blocked'), 'exclude': lambda f: f is None }})  
    connection_direction: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectionDirection'), 'exclude': lambda f: f is None }})  
    local_port_details: Optional[shared_actionlocalportdetails.ActionLocalPortDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalPortDetails'), 'exclude': lambda f: f is None }})  
    protocol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Protocol'), 'exclude': lambda f: f is None }})  
    remote_ip_details: Optional[shared_actionremoteipdetails.ActionRemoteIPDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RemoteIpDetails'), 'exclude': lambda f: f is None }})  
    remote_port_details: Optional[shared_actionremoteportdetails.ActionRemotePortDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RemotePortDetails'), 'exclude': lambda f: f is None }})  
    