// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Event - An event related to the person.
type Event struct {
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	Date *Date `json:"date,omitempty"`
	// Output only. The type of the event translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
	FormattedType *string `json:"formattedType,omitempty"`
	// Metadata about a field.
	Metadata *FieldMetadata `json:"metadata,omitempty"`
	// The type of the event. The type can be custom or one of these predefined values: * `anniversary` * `other`
	Type *string `json:"type,omitempty"`
}

// EventInput - An event related to the person.
type EventInput struct {
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	Date *Date `json:"date,omitempty"`
	// Metadata about a field.
	Metadata *FieldMetadataInput `json:"metadata,omitempty"`
	// The type of the event. The type can be custom or one of these predefined values: * `anniversary` * `other`
	Type *string `json:"type,omitempty"`
}
