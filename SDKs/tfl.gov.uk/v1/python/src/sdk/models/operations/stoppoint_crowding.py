"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tfl_api_presentation_entities_stoppoint as shared_tfl_api_presentation_entities_stoppoint
from enum import Enum
from typing import Optional

class StopPointCrowdingDirectionEnum(str, Enum):
    r"""The direction of travel. Can be inbound or outbound."""
    INBOUND = 'inbound'
    OUTBOUND = 'outbound'
    ALL = 'all'


@dataclasses.dataclass
class StopPointCrowdingRequest:
    
    direction: StopPointCrowdingDirectionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})
    r"""The direction of travel. Can be inbound or outbound."""  
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The Naptan id of the stop"""  
    line: str = dataclasses.field(metadata={'path_param': { 'field_name': 'line', 'style': 'simple', 'explode': False }})
    r"""A particular line e.g. victoria, circle, northern etc."""  
    

@dataclasses.dataclass
class StopPointCrowdingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tfl_api_presentation_entities_stop_points: Optional[list[shared_tfl_api_presentation_entities_stoppoint.TflAPIPresentationEntitiesStopPoint]] = dataclasses.field(default=None)
    r"""OK"""  
    