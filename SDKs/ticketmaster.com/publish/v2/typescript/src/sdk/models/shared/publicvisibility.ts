/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The class defines the public visibility period on the Discovery/Publish API.
 */
export class PublicVisibility extends SpeakeasyBase {
  /**
   * The end of the public visibility. The date and time when the event will be public visible
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDateTime?: Date;

  /**
   * The start of the public visibility. The date and time when the event will be public visible
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDateTime?: Date;

  /**
   * True if you want to have the event visible in the discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visible" })
  visible?: boolean;
}
