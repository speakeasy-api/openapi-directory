/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateJobFromSourceControlRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthStrategy")
    public SourceControlAuthStrategyEnum authStrategy;

    public UpdateJobFromSourceControlRequest withAuthStrategy(SourceControlAuthStrategyEnum authStrategy) {
        this.authStrategy = authStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthToken")
    public String authToken;

    public UpdateJobFromSourceControlRequest withAuthToken(String authToken) {
        this.authToken = authToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BranchName")
    public String branchName;

    public UpdateJobFromSourceControlRequest withBranchName(String branchName) {
        this.branchName = branchName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CommitId")
    public String commitId;

    public UpdateJobFromSourceControlRequest withCommitId(String commitId) {
        this.commitId = commitId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Folder")
    public String folder;

    public UpdateJobFromSourceControlRequest withFolder(String folder) {
        this.folder = folder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobName")
    public String jobName;

    public UpdateJobFromSourceControlRequest withJobName(String jobName) {
        this.jobName = jobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Provider")
    public SourceControlProviderEnum provider;

    public UpdateJobFromSourceControlRequest withProvider(SourceControlProviderEnum provider) {
        this.provider = provider;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RepositoryName")
    public String repositoryName;

    public UpdateJobFromSourceControlRequest withRepositoryName(String repositoryName) {
        this.repositoryName = repositoryName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RepositoryOwner")
    public String repositoryOwner;

    public UpdateJobFromSourceControlRequest withRepositoryOwner(String repositoryOwner) {
        this.repositoryOwner = repositoryOwner;
        return this;
    }
    
    public UpdateJobFromSourceControlRequest(){}
}
