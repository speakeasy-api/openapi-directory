// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkflowInvocationActionStateEnum - Output only. This action's current state.
type WorkflowInvocationActionStateEnum string

const (
	WorkflowInvocationActionStateEnumPending   WorkflowInvocationActionStateEnum = "PENDING"
	WorkflowInvocationActionStateEnumRunning   WorkflowInvocationActionStateEnum = "RUNNING"
	WorkflowInvocationActionStateEnumSkipped   WorkflowInvocationActionStateEnum = "SKIPPED"
	WorkflowInvocationActionStateEnumDisabled  WorkflowInvocationActionStateEnum = "DISABLED"
	WorkflowInvocationActionStateEnumSucceeded WorkflowInvocationActionStateEnum = "SUCCEEDED"
	WorkflowInvocationActionStateEnumCancelled WorkflowInvocationActionStateEnum = "CANCELLED"
	WorkflowInvocationActionStateEnumFailed    WorkflowInvocationActionStateEnum = "FAILED"
)

func (e *WorkflowInvocationActionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SKIPPED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		*e = WorkflowInvocationActionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowInvocationActionStateEnum: %s", s)
	}
}

// WorkflowInvocationAction - Represents a single action in a workflow invocation.
type WorkflowInvocationAction struct {
	// Represents a workflow action that will run against BigQuery.
	BigqueryAction *BigQueryAction `json:"bigqueryAction,omitempty"`
	// Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
	CanonicalTarget *Target `json:"canonicalTarget,omitempty"`
	// Output only. If and only if action's state is FAILED a failure reason is set.
	FailureReason *string `json:"failureReason,omitempty"`
	// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
	InvocationTiming *Interval `json:"invocationTiming,omitempty"`
	// Output only. This action's current state.
	State *WorkflowInvocationActionStateEnum `json:"state,omitempty"`
	// Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
	Target *Target `json:"target,omitempty"`
}
