// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateRsaMfaServerRequestBody - Configuration of RSA server.
type UpdateRsaMfaServerRequestBody struct {
	// The name of a Cloud Authentication Service policy. This setting is only required for RSA Cloud Service configurations.
	//
	AssurancePolicyName *string `json:"assurancePolicyName,omitempty"`
	// The base url for RSA REST API server including the host name and port number. A valid input looks like https://<SECURID_ACCESS_HOST >:<REST_API_PORT>/mfa/v1_1.
	//
	BaseURL *string `json:"baseUrl,omitempty"`
	// ID corresponding to the imported certificate.
	CertificateID *string `json:"certificateId,omitempty"`
	// A unique name to identify the client. When the client is configured to use RSA Authentication Manager, the client ID must match an authentication agent name.
	//
	ClientID *string `json:"clientId,omitempty"`
	// LDAP attribute to query the username used for performing MFA.
	//
	LdapUsernameAttribute *string `json:"ldapUsernameAttribute,omitempty"`
	// Unique name to identify MFA server configuration.
	Name *string `json:"name,omitempty"`
	// A unique string that RSA SecurID Access uses to identify individual REST API clients (not to be confused with a REST API Key described above).
	//
	RestAPIAccessID *string `json:"restApiAccessId,omitempty"`
	// A unique string that RSA SecurID Access generates and uses as a shared secret with REST API clients.
	//
	RestAPIKey *string `json:"restApiKey,omitempty"`
	// Specifies a number of seconds to wait for server response to a given authentication method.
	//
	Timeout *int `json:"timeout,omitempty"`
}

type UpdateRsaMfaServerRequest struct {
	// Configuration of RSA server.
	RequestBody UpdateRsaMfaServerRequestBody `request:"mediaType=application/json"`
	// ID of the RSA server.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type UpdateRsaMfaServerResponse struct {
	ContentType string
	// Updated RSA server configuration.
	RsaMfaServerDetail *shared.RsaMfaServerDetail
	StatusCode         int
	RawResponse        *http.Response
}
