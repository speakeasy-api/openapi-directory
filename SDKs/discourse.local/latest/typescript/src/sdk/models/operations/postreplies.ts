/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostRepliesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class PostReplies200ApplicationJSONActionsSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "can_act" })
  canAct: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

export class PostReplies200ApplicationJSONReplyToUser extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;
}

export class PostReplies200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PostReplies200ApplicationJSONActionsSummary })
  @Expose({ name: "actions_summary" })
  @Type(() => PostReplies200ApplicationJSONActionsSummary)
  actionsSummary: PostReplies200ApplicationJSONActionsSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "admin" })
  admin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bookmarked" })
  bookmarked: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_delete" })
  canDelete: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_edit" })
  canEdit: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_recover" })
  canRecover: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_view_edit_history" })
  canViewEditHistory: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_wiki" })
  canWiki: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "cooked" })
  cooked: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted_at" })
  deletedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "display_username" })
  displayUsername: string;

  @SpeakeasyMetadata()
  @Expose({ name: "edit_reason" })
  editReason: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_bg_color" })
  flairBgColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_color" })
  flairColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_name" })
  flairName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_url" })
  flairUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "incoming_link_count" })
  incomingLinkCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "moderator" })
  moderator: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "post_number" })
  postNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "post_type" })
  postType: number;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_group_name" })
  primaryGroupName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "quote_count" })
  quoteCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "readers_count" })
  readersCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reads" })
  reads: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_count" })
  replyCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_to_post_number" })
  replyToPostNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_to_user" })
  @Type(() => PostReplies200ApplicationJSONReplyToUser)
  replyToUser: PostReplies200ApplicationJSONReplyToUser;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_id" })
  reviewableId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_score_count" })
  reviewableScoreCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_score_pending_count" })
  reviewableScorePendingCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score: number;

  @SpeakeasyMetadata()
  @Expose({ name: "staff" })
  staff: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_id" })
  topicId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_slug" })
  topicSlug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trust_level" })
  trustLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_deleted" })
  userDeleted: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "user_title" })
  userTitle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: number;

  @SpeakeasyMetadata()
  @Expose({ name: "wiki" })
  wiki: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "yours" })
  yours: boolean;
}

export class PostRepliesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * post replies
   */
  @SpeakeasyMetadata({ elemType: PostReplies200ApplicationJSON })
  postReplies200ApplicationJSONObjects?: PostReplies200ApplicationJSON[];
}
