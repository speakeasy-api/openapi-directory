/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScheduledTask - Success
 */
public class ScheduledTask {
    /**
     * Cron expression of scheduled task.&lt;br /&gt;
     * 5-digit expressions (* /5 * * * *) are required in the following sequence:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Minute (0 - 59, also * /5, * /10, * /15 and * /30 as every 5 minutes, every 10 minutes, every quarter or every half-hour are allowed)&lt;/li&gt;&lt;li&gt;Hour (0 - 23, also * as every hour is allowed)&lt;/li&gt;&lt;li&gt;Day of the month (1 - 31, also * as every day is allowed)&lt;/li&gt;&lt;li&gt;Month (1 - 12 as January to December, also * as every month is allowed)&lt;/li&gt;&lt;li&gt;Day of the week (1 - 7 as Monday to Sunday, also * as every day is allowed)&lt;/li&gt;&lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cron_expression")
    public String cronExpression;
    public ScheduledTask withCronExpression(String cronExpression) {
        this.cronExpression = cronExpression;
        return this;
    }
    
    /**
     * Enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public ScheduledTask withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * The id of the scheduled task.&lt;br /&gt;
     * This value is ignored for creation of new scheduled tasks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ScheduledTask withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Absolute path from this linux hosting to execute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("script_location")
    public String scriptLocation;
    public ScheduledTask withScriptLocation(String scriptLocation) {
        this.scriptLocation = scriptLocation;
        return this;
    }
    
}
