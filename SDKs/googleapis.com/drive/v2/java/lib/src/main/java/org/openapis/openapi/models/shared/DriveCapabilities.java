/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DriveCapabilities - Capabilities the current user has on this shared drive.
 */
public class DriveCapabilities {
    /**
     * Whether the current user can add children to folders in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canAddChildren")
    public Boolean canAddChildren;

    public DriveCapabilities withCanAddChildren(Boolean canAddChildren) {
        this.canAddChildren = canAddChildren;
        return this;
    }
    
    /**
     * Whether the current user can change the copyRequiresWriterPermission restriction of this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canChangeCopyRequiresWriterPermissionRestriction")
    public Boolean canChangeCopyRequiresWriterPermissionRestriction;

    public DriveCapabilities withCanChangeCopyRequiresWriterPermissionRestriction(Boolean canChangeCopyRequiresWriterPermissionRestriction) {
        this.canChangeCopyRequiresWriterPermissionRestriction = canChangeCopyRequiresWriterPermissionRestriction;
        return this;
    }
    
    /**
     * Whether the current user can change the domainUsersOnly restriction of this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canChangeDomainUsersOnlyRestriction")
    public Boolean canChangeDomainUsersOnlyRestriction;

    public DriveCapabilities withCanChangeDomainUsersOnlyRestriction(Boolean canChangeDomainUsersOnlyRestriction) {
        this.canChangeDomainUsersOnlyRestriction = canChangeDomainUsersOnlyRestriction;
        return this;
    }
    
    /**
     * Whether the current user can change the background of this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canChangeDriveBackground")
    public Boolean canChangeDriveBackground;

    public DriveCapabilities withCanChangeDriveBackground(Boolean canChangeDriveBackground) {
        this.canChangeDriveBackground = canChangeDriveBackground;
        return this;
    }
    
    /**
     * Whether the current user can change the driveMembersOnly restriction of this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canChangeDriveMembersOnlyRestriction")
    public Boolean canChangeDriveMembersOnlyRestriction;

    public DriveCapabilities withCanChangeDriveMembersOnlyRestriction(Boolean canChangeDriveMembersOnlyRestriction) {
        this.canChangeDriveMembersOnlyRestriction = canChangeDriveMembersOnlyRestriction;
        return this;
    }
    
    /**
     * Whether the current user can change the sharingFoldersRequiresOrganizerPermission restriction of this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canChangeSharingFoldersRequiresOrganizerPermissionRestriction")
    public Boolean canChangeSharingFoldersRequiresOrganizerPermissionRestriction;

    public DriveCapabilities withCanChangeSharingFoldersRequiresOrganizerPermissionRestriction(Boolean canChangeSharingFoldersRequiresOrganizerPermissionRestriction) {
        this.canChangeSharingFoldersRequiresOrganizerPermissionRestriction = canChangeSharingFoldersRequiresOrganizerPermissionRestriction;
        return this;
    }
    
    /**
     * Whether the current user can comment on files in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canComment")
    public Boolean canComment;

    public DriveCapabilities withCanComment(Boolean canComment) {
        this.canComment = canComment;
        return this;
    }
    
    /**
     * Whether the current user can copy files in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canCopy")
    public Boolean canCopy;

    public DriveCapabilities withCanCopy(Boolean canCopy) {
        this.canCopy = canCopy;
        return this;
    }
    
    /**
     * Whether the current user can delete children from folders in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canDeleteChildren")
    public Boolean canDeleteChildren;

    public DriveCapabilities withCanDeleteChildren(Boolean canDeleteChildren) {
        this.canDeleteChildren = canDeleteChildren;
        return this;
    }
    
    /**
     * Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canDeleteDrive")
    public Boolean canDeleteDrive;

    public DriveCapabilities withCanDeleteDrive(Boolean canDeleteDrive) {
        this.canDeleteDrive = canDeleteDrive;
        return this;
    }
    
    /**
     * Whether the current user can download files in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canDownload")
    public Boolean canDownload;

    public DriveCapabilities withCanDownload(Boolean canDownload) {
        this.canDownload = canDownload;
        return this;
    }
    
    /**
     * Whether the current user can edit files in this shared drive
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canEdit")
    public Boolean canEdit;

    public DriveCapabilities withCanEdit(Boolean canEdit) {
        this.canEdit = canEdit;
        return this;
    }
    
    /**
     * Whether the current user can list the children of folders in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canListChildren")
    public Boolean canListChildren;

    public DriveCapabilities withCanListChildren(Boolean canListChildren) {
        this.canListChildren = canListChildren;
        return this;
    }
    
    /**
     * Whether the current user can add members to this shared drive or remove them or change their role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canManageMembers")
    public Boolean canManageMembers;

    public DriveCapabilities withCanManageMembers(Boolean canManageMembers) {
        this.canManageMembers = canManageMembers;
        return this;
    }
    
    /**
     * Whether the current user can read the revisions resource of files in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canReadRevisions")
    public Boolean canReadRevisions;

    public DriveCapabilities withCanReadRevisions(Boolean canReadRevisions) {
        this.canReadRevisions = canReadRevisions;
        return this;
    }
    
    /**
     * Whether the current user can rename files or folders in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canRename")
    public Boolean canRename;

    public DriveCapabilities withCanRename(Boolean canRename) {
        this.canRename = canRename;
        return this;
    }
    
    /**
     * Whether the current user can rename this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canRenameDrive")
    public Boolean canRenameDrive;

    public DriveCapabilities withCanRenameDrive(Boolean canRenameDrive) {
        this.canRenameDrive = canRenameDrive;
        return this;
    }
    
    /**
     * Whether the current user can reset the shared drive restrictions to defaults.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canResetDriveRestrictions")
    public Boolean canResetDriveRestrictions;

    public DriveCapabilities withCanResetDriveRestrictions(Boolean canResetDriveRestrictions) {
        this.canResetDriveRestrictions = canResetDriveRestrictions;
        return this;
    }
    
    /**
     * Whether the current user can share files or folders in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canShare")
    public Boolean canShare;

    public DriveCapabilities withCanShare(Boolean canShare) {
        this.canShare = canShare;
        return this;
    }
    
    /**
     * Whether the current user can trash children from folders in this shared drive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canTrashChildren")
    public Boolean canTrashChildren;

    public DriveCapabilities withCanTrashChildren(Boolean canTrashChildren) {
        this.canTrashChildren = canTrashChildren;
        return this;
    }
    
    public DriveCapabilities(){}
}
