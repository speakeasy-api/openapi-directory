// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum - <p>Indicates whether the HTTP metadata endpoint on your instances is enabled or disabled.</p> <p>If the value is <code>disabled</code>, you cannot access your instance metadata.</p>
type ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum string

const (
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnumDisabled ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum = "disabled"
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnumEnabled  ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum = "enabled"
)

func (e ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum) ToPointer() *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum {
	return &e
}

func (e *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum: %v", v)
	}
}

// ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum - Indicates whether the IPv6 endpoint for the instance metadata service is enabled or disabled.
type ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum string

const (
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6EnumDisabled ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum = "disabled"
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6EnumEnabled  ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum = "enabled"
)

func (e ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum) ToPointer() *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum {
	return &e
}

func (e *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum: %v", v)
	}
}

// ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum - <p>IMDSv2 uses token-backed sessions. Indicates whether the use of HTTP tokens is <code>optional</code> (in other words, indicates whether the use of IMDSv2 is <code>optional</code>) or <code>required</code> (in other words, indicates whether the use of IMDSv2 is <code>required</code>).</p> <ul> <li> <p> <code>optional</code> - When IMDSv2 is optional, you can choose to retrieve instance metadata with or without a session token in your request. If you retrieve the IAM role credentials without a token, the IMDSv1 role credentials are returned. If you retrieve the IAM role credentials using a valid session token, the IMDSv2 role credentials are returned.</p> </li> <li> <p> <code>required</code> - When IMDSv2 is required, you must send a session token with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns IMDSv2 credentials; IMDSv1 credentials are not available.</p> </li> </ul> <p>Default: <code>optional</code> </p>
type ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum string

const (
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnumOptional ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum = "optional"
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnumRequired ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum = "required"
)

func (e ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum) ToPointer() *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum {
	return &e
}

func (e *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "optional":
		fallthrough
	case "required":
		*e = ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum: %v", v)
	}
}

// ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum - Indicates whether access to instance tags from the instance metadata is enabled or disabled. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.
type ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum string

const (
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnumDisabled ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum = "disabled"
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnumEnabled  ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum = "enabled"
)

func (e ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum) ToPointer() *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum {
	return &e
}

func (e *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "enabled":
		*e = ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum: %v", v)
	}
}

// ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum - <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata options have been successfully applied on the instance.</p>
type ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum string

const (
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnumPending ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum = "pending"
	ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnumApplied ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum = "applied"
)

func (e ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum) ToPointer() *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum {
	return &e
}

func (e *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "applied":
		*e = ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum: %v", v)
	}
}

// ModifyInstanceMetadataOptionsResultInstanceMetadataOptions - The metadata options for the instance.
type ModifyInstanceMetadataOptionsResultInstanceMetadataOptions struct {
	HTTPEndpoint            *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPEndpointEnum
	HTTPProtocolIpv6        *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPProtocolIpv6Enum
	HTTPPutResponseHopLimit *int64
	HTTPTokens              *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsHTTPTokensEnum
	InstanceMetadataTags    *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsInstanceMetadataTagsEnum
	State                   *ModifyInstanceMetadataOptionsResultInstanceMetadataOptionsStateEnum
}

// ModifyInstanceMetadataOptionsResult - Success
type ModifyInstanceMetadataOptionsResult struct {
	InstanceID              *string
	InstanceMetadataOptions *ModifyInstanceMetadataOptionsResultInstanceMetadataOptions
}
