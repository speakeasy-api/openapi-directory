/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomRoutingAcceleratorStatusEnum } from "./customroutingacceleratorstatusenum";
import { IpAddressTypeEnum } from "./ipaddresstypeenum";
import { IpSet } from "./ipset";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Attributes of a custom routing accelerator.
 */
export class CustomRoutingAccelerator extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AcceleratorArn" })
  acceleratorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DnsName" })
  dnsName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IpAddressType" })
  ipAddressType?: IpAddressTypeEnum;

  @SpeakeasyMetadata({ elemType: IpSet })
  @Expose({ name: "IpSets" })
  @Type(() => IpSet)
  ipSets?: IpSet[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: CustomRoutingAcceleratorStatusEnum;
}
