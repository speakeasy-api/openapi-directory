/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Identity } from "./identity";
import { PermissionEnum } from "./permissionenum";
import { Resource } from "./resource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains an access policy that defines an identity's access to an IoT SiteWise Monitor resource.
 */
export class AccessPolicySummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "identity" })
  @Type(() => Identity)
  identity: Identity;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  permission: PermissionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  @Type(() => Resource)
  resource: Resource;
}
