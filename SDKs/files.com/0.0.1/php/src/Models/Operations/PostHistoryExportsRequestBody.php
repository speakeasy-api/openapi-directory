<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PostHistoryExportsRequestBody
{
    /**
     * End date/time of export range.
     * 
     * @var ?\DateTime $endAt
     */
	#[SpeakeasyMetadata('multipartForm:name=end_at,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $endAt = null;
    
    /**
     * Filter results by this this action type. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`
     * 
     * @var ?string $queryAction
     */
	#[SpeakeasyMetadata('multipartForm:name=query_action')]
    public ?string $queryAction = null;
    
    /**
     * Return results that are file moves with this path as destination.
     * 
     * @var ?string $queryDestination
     */
	#[SpeakeasyMetadata('multipartForm:name=query_destination')]
    public ?string $queryDestination = null;
    
    /**
     * If searching for Histories about login failures, this parameter restricts results to failures of this specific type.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`
     * 
     * @var ?string $queryFailureType
     */
	#[SpeakeasyMetadata('multipartForm:name=query_failure_type')]
    public ?string $queryFailureType = null;
    
    /**
     * Return results that are file actions related to the file indicated by this File ID
     * 
     * @var ?string $queryFileId
     */
	#[SpeakeasyMetadata('multipartForm:name=query_file_id')]
    public ?string $queryFileId = null;
    
    /**
     * Return results that are file actions related to files or folders inside this folder path.
     * 
     * @var ?string $queryFolder
     */
	#[SpeakeasyMetadata('multipartForm:name=query_folder')]
    public ?string $queryFolder = null;
    
    /**
     * Filter results by this this interface type. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`
     * 
     * @var ?string $queryInterface
     */
	#[SpeakeasyMetadata('multipartForm:name=query_interface')]
    public ?string $queryInterface = null;
    
    /**
     * Filter results by this IP address.
     * 
     * @var ?string $queryIp
     */
	#[SpeakeasyMetadata('multipartForm:name=query_ip')]
    public ?string $queryIp = null;
    
    /**
     * Return results that are file actions inside the parent folder specified by this folder ID
     * 
     * @var ?string $queryParentId
     */
	#[SpeakeasyMetadata('multipartForm:name=query_parent_id')]
    public ?string $queryParentId = null;
    
    /**
     * Return results that are file actions related to this path.
     * 
     * @var ?string $queryPath
     */
	#[SpeakeasyMetadata('multipartForm:name=query_path')]
    public ?string $queryPath = null;
    
    /**
     * Return results that are file moves originating from this path.
     * 
     * @var ?string $querySrc
     */
	#[SpeakeasyMetadata('multipartForm:name=query_src')]
    public ?string $querySrc = null;
    
    /**
     * If searching for Histories about specific objects (such as Users, or API Keys), this paremeter restricts results to objects that match this ID.
     * 
     * @var ?string $queryTargetId
     */
	#[SpeakeasyMetadata('multipartForm:name=query_target_id')]
    public ?string $queryTargetId = null;
    
    /**
     * If searching for Histories about Users, Groups or other objects with names, this parameter restricts results to objects with this name/username.
     * 
     * @var ?string $queryTargetName
     */
	#[SpeakeasyMetadata('multipartForm:name=query_target_name')]
    public ?string $queryTargetName = null;
    
    /**
     * If searching for Histories about Permisisons, this parameter restricts results to permissions of this level.
     * 
     * @var ?string $queryTargetPermission
     */
	#[SpeakeasyMetadata('multipartForm:name=query_target_permission')]
    public ?string $queryTargetPermission = null;
    
    /**
     * If searching for Histories about API keys, this parameter restricts results to API keys with this permission set.
     * 
     * @var ?string $queryTargetPermissionSet
     */
	#[SpeakeasyMetadata('multipartForm:name=query_target_permission_set')]
    public ?string $queryTargetPermissionSet = null;
    
    /**
     * If searching for Histories about API keys, this parameter restricts results to API keys associated with this platform.
     * 
     * @var ?string $queryTargetPlatform
     */
	#[SpeakeasyMetadata('multipartForm:name=query_target_platform')]
    public ?string $queryTargetPlatform = null;
    
    /**
     * If searching for Histories about API keys, this parameter restricts results to API keys created by/for this user ID.
     * 
     * @var ?string $queryTargetUserId
     */
	#[SpeakeasyMetadata('multipartForm:name=query_target_user_id')]
    public ?string $queryTargetUserId = null;
    
    /**
     * If searching for Histories about API keys, this parameter restricts results to API keys created by/for this username.
     * 
     * @var ?string $queryTargetUsername
     */
	#[SpeakeasyMetadata('multipartForm:name=query_target_username')]
    public ?string $queryTargetUsername = null;
    
    /**
     * Return results that are actions performed by the user indiciated by this User ID
     * 
     * @var ?string $queryUserId
     */
	#[SpeakeasyMetadata('multipartForm:name=query_user_id')]
    public ?string $queryUserId = null;
    
    /**
     * Filter results by this username.
     * 
     * @var ?string $queryUsername
     */
	#[SpeakeasyMetadata('multipartForm:name=query_username')]
    public ?string $queryUsername = null;
    
    /**
     * Start date/time of export range.
     * 
     * @var ?\DateTime $startAt
     */
	#[SpeakeasyMetadata('multipartForm:name=start_at,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $startAt = null;
    
    /**
     * User ID.  Provide a value of `0` to operate the current session's user.
     * 
     * @var ?int $userId
     */
	#[SpeakeasyMetadata('multipartForm:name=user_id')]
    public ?int $userId = null;
    
	public function __construct()
	{
		$this->endAt = null;
		$this->queryAction = null;
		$this->queryDestination = null;
		$this->queryFailureType = null;
		$this->queryFileId = null;
		$this->queryFolder = null;
		$this->queryInterface = null;
		$this->queryIp = null;
		$this->queryParentId = null;
		$this->queryPath = null;
		$this->querySrc = null;
		$this->queryTargetId = null;
		$this->queryTargetName = null;
		$this->queryTargetPermission = null;
		$this->queryTargetPermissionSet = null;
		$this->queryTargetPlatform = null;
		$this->queryTargetUserId = null;
		$this->queryTargetUsername = null;
		$this->queryUserId = null;
		$this->queryUsername = null;
		$this->startAt = null;
		$this->userId = null;
	}
}
