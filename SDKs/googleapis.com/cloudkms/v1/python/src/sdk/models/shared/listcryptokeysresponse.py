"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cryptokey as shared_cryptokey
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListCryptoKeysResponse:
    r"""Response message for KeyManagementService.ListCryptoKeys."""
    
    crypto_keys: Optional[list[shared_cryptokey.CryptoKey]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cryptoKeys'), 'exclude': lambda f: f is None }})
    r"""The list of CryptoKeys."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""A token to retrieve next page of results. Pass this value in ListCryptoKeysRequest.page_token to retrieve the next page of results."""  
    total_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalSize'), 'exclude': lambda f: f is None }})
    r"""The total number of CryptoKeys that matched the query."""  
    