"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import applicationreference as shared_applicationreference
from ..shared import appliedlabelchange as shared_appliedlabelchange
from ..shared import comment as shared_comment
from ..shared import create as shared_create
from ..shared import dataleakpreventionchange as shared_dataleakpreventionchange
from ..shared import delete as shared_delete
from ..shared import move as shared_move
from ..shared import permissionchange as shared_permissionchange
from ..shared import rename as shared_rename
from ..shared import restore as shared_restore
from ..shared import settingschange as shared_settingschange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionDetail:
    r"""Data describing the type and additional information of an action."""
    
    applied_label_change: Optional[shared_appliedlabelchange.AppliedLabelChange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appliedLabelChange'), 'exclude': lambda f: f is None }})
    r"""Label changes that were made on the Target."""  
    comment: Optional[shared_comment.Comment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""A change about comments on an object."""  
    create: Optional[shared_create.Create] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('create'), 'exclude': lambda f: f is None }})
    r"""An object was created."""  
    delete: Optional[shared_delete.Delete] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delete'), 'exclude': lambda f: f is None }})
    r"""An object was deleted."""  
    dlp_change: Optional[shared_dataleakpreventionchange.DataLeakPreventionChange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dlpChange'), 'exclude': lambda f: f is None }})
    r"""A change in the object's data leak prevention status."""  
    edit: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('edit'), 'exclude': lambda f: f is None }})
    r"""An empty message indicating an object was edited."""  
    move: Optional[shared_move.Move] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('move'), 'exclude': lambda f: f is None }})
    r"""An object was moved."""  
    permission_change: Optional[shared_permissionchange.PermissionChange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissionChange'), 'exclude': lambda f: f is None }})
    r"""A change of the permission setting on an item."""  
    reference: Optional[shared_applicationreference.ApplicationReference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference'), 'exclude': lambda f: f is None }})
    r"""Activity in applications other than Drive."""  
    rename: Optional[shared_rename.Rename] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rename'), 'exclude': lambda f: f is None }})
    r"""An object was renamed."""  
    restore: Optional[shared_restore.Restore] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restore'), 'exclude': lambda f: f is None }})
    r"""A deleted object was restored."""  
    settings_change: Optional[shared_settingschange.SettingsChange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settingsChange'), 'exclude': lambda f: f is None }})
    r"""Information about settings changes."""  
    