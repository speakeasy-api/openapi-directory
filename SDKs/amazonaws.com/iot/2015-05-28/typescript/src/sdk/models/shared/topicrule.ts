/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Action } from "./action";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a rule.
 */
export class TopicRule extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Action })
  @Expose({ name: "actions" })
  @Type(() => Action)
  actions?: Action[];

  @SpeakeasyMetadata()
  @Expose({ name: "awsIotSqlVersion" })
  awsIotSqlVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "errorAction" })
  @Type(() => Action)
  errorAction?: Action;

  @SpeakeasyMetadata()
  @Expose({ name: "ruleDisabled" })
  ruleDisabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ruleName" })
  ruleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sql" })
  sql?: string;
}
