"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NfsExportPermissionsEnum(str, Enum):
    r"""Export permissions."""
    PERMISSIONS_UNSPECIFIED = 'PERMISSIONS_UNSPECIFIED'
    READ_ONLY = 'READ_ONLY'
    READ_WRITE = 'READ_WRITE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NfsExport:
    r"""A NFS export entry."""
    
    allow_dev: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowDev'), 'exclude': lambda f: f is None }})
    r"""Allow dev."""  
    allow_suid: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowSuid'), 'exclude': lambda f: f is None }})
    r"""Allow the setuid flag."""  
    cidr: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cidr'), 'exclude': lambda f: f is None }})
    r"""A CIDR range."""  
    machine_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineId'), 'exclude': lambda f: f is None }})
    r"""Either a single machine, identified by an ID, or a comma-separated list of machine IDs."""  
    network_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkId'), 'exclude': lambda f: f is None }})
    r"""Network to use to publish the export."""  
    no_root_squash: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noRootSquash'), 'exclude': lambda f: f is None }})
    r"""Disable root squashing."""  
    permissions: Optional[NfsExportPermissionsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})
    r"""Export permissions."""  
    