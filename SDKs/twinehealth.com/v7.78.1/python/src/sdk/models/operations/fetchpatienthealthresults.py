"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import fetcherrorresponse as shared_fetcherrorresponse
from ..shared import fetchpatienthealthresultresponse as shared_fetchpatienthealthresultresponse
from typing import Optional


@dataclasses.dataclass
class FetchPatientHealthResultsRequest:
    
    filter_patient: str = dataclasses.field(metadata={'query_param': { 'field_name': 'filter[patient]', 'style': 'form', 'explode': True }})
    r"""Filter the patient health results for a specified patient"""  
    filter_actions: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[actions]', 'style': 'form', 'explode': True }})
    r"""A comma-separated list of action identifiers"""  
    filter_created_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[created_at]', 'style': 'form', 'explode': True }})
    r"""The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for results created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`"""  
    filter_end_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[end_at]', 'style': 'form', 'explode': True }})
    r"""Filter results that occurred before the passed ISO date and time string"""  
    filter_start_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[start_at]', 'style': 'form', 'explode': True }})
    r"""Filter results that occurred after the passed ISO date and time string"""  
    filter_threads: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[threads]', 'style': 'form', 'explode': True }})
    r"""A comma-separated list of thread identifiers"""  
    filter_updated_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[updated_at]', 'style': 'form', 'explode': True }})
    r"""The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for results updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`"""  
    page_after: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[after]', 'style': 'form', 'explode': True }})
    r"""Page cursor"""  
    page_limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[limit]', 'style': 'form', 'explode': True }})
    r"""Page limit"""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[number]', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[size]', 'style': 'form', 'explode': True }})
    r"""Page size"""  
    

@dataclasses.dataclass
class FetchPatientHealthResultsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    fetch_error_response: Optional[shared_fetcherrorresponse.FetchErrorResponse] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    fetch_patient_health_result_response: Optional[shared_fetchpatienthealthresultresponse.FetchPatientHealthResultResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    