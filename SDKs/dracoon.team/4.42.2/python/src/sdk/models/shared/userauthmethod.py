"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import keyvalueentry as shared_keyvalueentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserAuthMethod:
    r"""Authentication method"""
    
    auth_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authId') }})
    r"""Authentication method
    
    
    
    Authentication methods:
    
    * `basic`
    
    * `active_directory`
    
    * `radius`
    
    * `openid`
    """  
    is_enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isEnabled') }})
    r"""Is enabled"""  
    options: Optional[list[shared_keyvalueentry.KeyValueEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})
    r"""Authentication method options"""  
    