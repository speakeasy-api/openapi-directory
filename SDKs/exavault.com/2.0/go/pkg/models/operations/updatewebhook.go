// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum - Version of the webhooks message to send to the endpoint
type UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum string

const (
	UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnumV2 UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum = "v2"
	UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnumV1 UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum = "v1"
)

func (e *UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "v2":
		fallthrough
	case "v1":
		*e = UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum: %s", s)
	}
}

type UpdateWebhookUpdateWebhookRequestBody struct {
	// New endpoint URL to use for the webhook configuration
	EndpointURL *string `json:"endpointUrl,omitempty"`
	// Resource identifier of the top folder watched by this webhook.
	Resource *string `json:"resource,omitempty"`
	// Version of the webhooks message to send to the endpoint
	ResponseVersion *UpdateWebhookUpdateWebhookRequestBodyResponseVersionEnum `json:"responseVersion,omitempty"`
	Triggers        *shared.WebhookTriggers                                   `json:"triggers,omitempty"`
}

type UpdateWebhookRequest struct {
	RequestBody *UpdateWebhookUpdateWebhookRequestBody `request:"mediaType=application/json"`
	// Access token required to make the API call.
	EvAccessToken string `header:"style=simple,explode=false,name=ev-access-token"`
	// API key required to make the API call.
	EvAPIKey string `header:"style=simple,explode=false,name=ev-api-key"`
	// Webhook endpoint ID
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

type UpdateWebhookResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful Operation
	WebhookResponse *shared.WebhookResponse
}
