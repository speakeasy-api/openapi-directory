"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAWireTransferParameters:
    
    account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_id') }})
    r"""The identifier for the account that will send the transfer."""  
    amount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    r"""The transfer amount in cents."""  
    beneficiary_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_name') }})
    r"""The beneficiary's name."""  
    message_to_recipient: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message_to_recipient') }})
    r"""The message that will show on the recipient's bank statement."""  
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_number'), 'exclude': lambda f: f is None }})
    r"""The account number for the destination account."""  
    beneficiary_address_line1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_address_line1'), 'exclude': lambda f: f is None }})
    r"""The beneficiary's address line 1."""  
    beneficiary_address_line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_address_line2'), 'exclude': lambda f: f is None }})
    r"""The beneficiary's address line 2."""  
    beneficiary_address_line3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_address_line3'), 'exclude': lambda f: f is None }})
    r"""The beneficiary's address line 3."""  
    external_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('external_account_id'), 'exclude': lambda f: f is None }})
    r"""The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number` and `routing_number` must be absent."""  
    require_approval: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('require_approval'), 'exclude': lambda f: f is None }})
    r"""Whether the transfer requires explicit approval via the dashboard or API."""  
    routing_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routing_number'), 'exclude': lambda f: f is None }})
    r"""The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account."""  
    