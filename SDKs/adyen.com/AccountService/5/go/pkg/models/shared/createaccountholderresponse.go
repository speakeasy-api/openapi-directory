// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateAccountHolderResponseLegalEntityEnum - The type of legal entity of the new account holder.
type CreateAccountHolderResponseLegalEntityEnum string

const (
	CreateAccountHolderResponseLegalEntityEnumBusiness   CreateAccountHolderResponseLegalEntityEnum = "Business"
	CreateAccountHolderResponseLegalEntityEnumIndividual CreateAccountHolderResponseLegalEntityEnum = "Individual"
	CreateAccountHolderResponseLegalEntityEnumNonProfit  CreateAccountHolderResponseLegalEntityEnum = "NonProfit"
)

func (e CreateAccountHolderResponseLegalEntityEnum) ToPointer() *CreateAccountHolderResponseLegalEntityEnum {
	return &e
}

func (e *CreateAccountHolderResponseLegalEntityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Business":
		fallthrough
	case "Individual":
		fallthrough
	case "NonProfit":
		*e = CreateAccountHolderResponseLegalEntityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccountHolderResponseLegalEntityEnum: %v", v)
	}
}

// CreateAccountHolderResponse - OK - the request has succeeded.
type CreateAccountHolderResponse struct {
	// The code of a new account created for the account holder.
	AccountCode *string `json:"accountCode,omitempty"`
	// The code of the new account holder.
	AccountHolderCode    *string               `json:"accountHolderCode,omitempty"`
	AccountHolderDetails *AccountHolderDetails `json:"accountHolderDetails,omitempty"`
	AccountHolderStatus  *AccountHolderStatus  `json:"accountHolderStatus,omitempty"`
	// The description of the new account holder.
	Description *string `json:"description,omitempty"`
	// A list of fields that caused the `/createAccountHolder` request to fail.
	InvalidFields []ErrorFieldType `json:"invalidFields,omitempty"`
	// The type of legal entity of the new account holder.
	LegalEntity *CreateAccountHolderResponseLegalEntityEnum `json:"legalEntity,omitempty"`
	// The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals.
	PrimaryCurrency *string `json:"primaryCurrency,omitempty"`
	// The reference of a request. Can be used to uniquely identify the request.
	PspReference *string `json:"pspReference,omitempty"`
	// The result code.
	ResultCode   *string                `json:"resultCode,omitempty"`
	Verification *KYCVerificationResult `json:"verification,omitempty"`
}
