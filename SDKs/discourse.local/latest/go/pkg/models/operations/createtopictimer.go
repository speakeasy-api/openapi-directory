// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateTopicTimerRequestBody struct {
	BasedOnLastPost *bool   `json:"based_on_last_post,omitempty"`
	CategoryID      *int64  `json:"category_id,omitempty"`
	StatusType      *string `json:"status_type,omitempty"`
	Time            *string `json:"time,omitempty"`
}

type CreateTopicTimerRequest struct {
	APIKey      string                       `header:"style=simple,explode=false,name=Api-Key"`
	APIUsername string                       `header:"style=simple,explode=false,name=Api-Username"`
	RequestBody *CreateTopicTimerRequestBody `request:"mediaType=application/json"`
	ID          string                       `pathParam:"style=simple,explode=false,name=id"`
}

// CreateTopicTimer200ApplicationJSON - topic updated
type CreateTopicTimer200ApplicationJSON struct {
	BasedOnLastPost *bool   `json:"based_on_last_post,omitempty"`
	CategoryID      *string `json:"category_id,omitempty"`
	Closed          *bool   `json:"closed,omitempty"`
	Duration        *string `json:"duration,omitempty"`
	ExecuteAt       *string `json:"execute_at,omitempty"`
	Success         *string `json:"success,omitempty"`
}

type CreateTopicTimerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// topic updated
	CreateTopicTimer200ApplicationJSONObject *CreateTopicTimer200ApplicationJSON
}
