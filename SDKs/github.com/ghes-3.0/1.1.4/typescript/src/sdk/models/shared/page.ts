/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PagesHttpsCertificate } from "./pageshttpscertificate";
import { PagesSourceHash } from "./pagessourcehash";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The state if the domain is verified
 */
export enum PageProtectedDomainStateEnum {
  Pending = "pending",
  Verified = "verified",
  Unverified = "unverified",
}

/**
 * The status of the most recent build of the Page.
 */
export enum PageStatusEnum {
  Built = "built",
  Building = "building",
  Errored = "errored",
}

/**
 * The configuration for GitHub Pages for a repository.
 */
export class Page extends SpeakeasyBase {
  /**
   * The Pages site's custom domain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cname" })
  cname: string;

  /**
   * Whether the Page has a custom 404 page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_404" })
  custom404: boolean;

  /**
   * The web address the Page can be accessed from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "https_certificate" })
  @Type(() => PagesHttpsCertificate)
  httpsCertificate?: PagesHttpsCertificate;

  /**
   * Whether https is enabled on the domain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "https_enforced" })
  httpsEnforced?: boolean;

  /**
   * The timestamp when a pending domain becomes unverified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pending_domain_unverified_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  pendingDomainUnverifiedAt?: Date;

  /**
   * The state if the domain is verified
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protected_domain_state" })
  protectedDomainState?: PageProtectedDomainStateEnum;

  /**
   * Whether the GitHub Pages site is publicly visible. If set to `true`, the site is accessible to anyone on the internet. If set to `false`, the site will only be accessible to users who have at least `read` access to the repository that published the site.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public" })
  public: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => PagesSourceHash)
  source?: PagesSourceHash;

  /**
   * The status of the most recent build of the Page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: PageStatusEnum;

  /**
   * The API address for accessing this Page resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
