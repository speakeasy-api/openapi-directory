/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HttpUrlDestinationSummary } from "./httpurldestinationsummary";
import { TopicRuleDestinationStatusEnum } from "./topicruledestinationstatusenum";
import { VpcDestinationSummary } from "./vpcdestinationsummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about the topic rule destination.
 */
export class TopicRuleDestinationSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "httpUrlSummary" })
  @Type(() => HttpUrlDestinationSummary)
  httpUrlSummary?: HttpUrlDestinationSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TopicRuleDestinationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  statusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vpcDestinationSummary" })
  @Type(() => VpcDestinationSummary)
  vpcDestinationSummary?: VpcDestinationSummary;
}
