"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ipprotocol_enum as shared_ipprotocol_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IPPermission:
    r"""A range of IP addresses and port settings that allow inbound traffic to connect to server processes on an instance in a fleet. New game sessions are assigned an IP address/port number combination, which must fall into the fleet's allowed ranges. Fleets with custom game builds must have permissions explicitly set. For Realtime Servers fleets, GameLift automatically opens two port ranges, one for TCP messaging and one for UDP."""
    
    from_port: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FromPort') }})  
    ip_range: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpRange') }})  
    protocol: shared_ipprotocol_enum.IPProtocolEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Protocol') }})  
    to_port: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ToPort') }})  
    