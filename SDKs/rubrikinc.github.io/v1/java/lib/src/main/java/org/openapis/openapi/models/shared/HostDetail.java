/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HostDetail - Summary information from registration of the host.
 */
public class HostDetail {
    /**
     * ID of the Rubrik Backup Service (RBS) installed on the host.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("agentId")
    public String agentId;

    public HostDetail withAgentId(String agentId) {
        this.agentId = agentId;
        return this;
    }
    
    /**
     * A user-specified string that returns this host in searches.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alias")
    public String alias;

    public HostDetail withAlias(String alias) {
        this.alias = alias;
        return this;
    }
    
    /**
     * Indicates if compression is enabled while transferring data between the host and the Rubrik cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compressionEnabled")
    public Boolean compressionEnabled;

    public HostDetail withCompressionEnabled(Boolean compressionEnabled) {
        this.compressionEnabled = compressionEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hdfsBaseConfig")
    public HdfsBaseConfig hdfsBaseConfig;

    public HostDetail withHdfsBaseConfig(HdfsBaseConfig hdfsBaseConfig) {
        this.hdfsBaseConfig = hdfsBaseConfig;
        return this;
    }
    
    /**
     * VFD host install state.
     */
    @JsonProperty("hostVfdDriverState")
    public HostVfdStateEnum hostVfdDriverState;

    public HostDetail withHostVfdDriverState(HostVfdStateEnum hostVfdDriverState) {
        this.hostVfdDriverState = hostVfdDriverState;
        return this;
    }
    
    /**
     * VFD host support status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostVfdEnabled")
    public HostVfdInstallConfigEnum hostVfdEnabled;

    public HostDetail withHostVfdEnabled(HostVfdInstallConfigEnum hostVfdEnabled) {
        this.hostVfdEnabled = hostVfdEnabled;
        return this;
    }
    
    /**
     * Deprecated. Please use 'name' instead.
     */
    @JsonProperty("hostname")
    public String hostname;

    public HostDetail withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * Unique identifier for host.
     */
    @JsonProperty("id")
    public String id;

    public HostDetail withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Specifies whether this is an Oracle host. This indicates whether to show Oracle discovery fields in the UI.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isOracleHost")
    public Boolean isOracleHost;

    public HostDetail withIsOracleHost(Boolean isOracleHost) {
        this.isOracleHost = isOracleHost;
        return this;
    }
    
    /**
     * A relic host is deleted, but still may have snapshots associated with its children (e.g. Fileset).
     */
    @JsonProperty("isRelic")
    public Boolean isRelic;

    public HostDetail withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * Indicates if the CBT driver is installed for SQL Server instances on the specified Windows host. Set to true when the CBT driver is installed. Set to false when the CBT driver is not installed.
     */
    @JsonProperty("mssqlCbtDriverInstalled")
    public Boolean mssqlCbtDriverInstalled;

    public HostDetail withMssqlCbtDriverInstalled(Boolean mssqlCbtDriverInstalled) {
        this.mssqlCbtDriverInstalled = mssqlCbtDriverInstalled;
        return this;
    }
    
    /**
     * Effective CBT host status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mssqlCbtEffectiveStatus")
    public MssqlCbtEffectiveStatusTypeEnum mssqlCbtEffectiveStatus;

    public HostDetail withMssqlCbtEffectiveStatus(MssqlCbtEffectiveStatusTypeEnum mssqlCbtEffectiveStatus) {
        this.mssqlCbtEffectiveStatus = mssqlCbtEffectiveStatus;
        return this;
    }
    
    /**
     * CBT host support status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mssqlCbtEnabled")
    public MssqlCbtStatusTypeEnum mssqlCbtEnabled;

    public HostDetail withMssqlCbtEnabled(MssqlCbtStatusTypeEnum mssqlCbtEnabled) {
        this.mssqlCbtEnabled = mssqlCbtEnabled;
        return this;
    }
    
    /**
     * IP address or hostname of the host.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public HostDetail withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nasBaseConfig")
    public NasBaseConfig nasBaseConfig;

    public HostDetail withNasBaseConfig(NasBaseConfig nasBaseConfig) {
        this.nasBaseConfig = nasBaseConfig;
        return this;
    }
    
    /**
     * Operating system of the host. One of Windows, Linux, AIX, HPUX, and SunOS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatingSystem")
    public String operatingSystem;

    public HostDetail withOperatingSystem(String operatingSystem) {
        this.operatingSystem = operatingSystem;
        return this;
    }
    
    /**
     * The operating system of the host. Possible choices are Windows, Linux, AIX, HPUX, SunOS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatingSystemType")
    public String operatingSystemType;

    public HostDetail withOperatingSystemType(String operatingSystemType) {
        this.operatingSystemType = operatingSystemType;
        return this;
    }
    
    /**
     * Specifies the Oracle username for an account with query privileges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oracleQueryUser")
    public String oracleQueryUser;

    public HostDetail withOracleQueryUser(String oracleQueryUser) {
        this.oracleQueryUser = oracleQueryUser;
        return this;
    }
    
    /**
     * Specifies the Oracle username for an account with sysdba privileges.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oracleSysDbaUser")
    public String oracleSysDbaUser;

    public HostDetail withOracleSysDbaUser(String oracleSysDbaUser) {
        this.oracleSysDbaUser = oracleSysDbaUser;
        return this;
    }
    
    /**
     * The ID of the organization to which the host is assigned (set by envoy).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationId")
    public String organizationId;

    public HostDetail withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * The name of the organization to which the host is assigned (set by envoy).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationName")
    public String organizationName;

    public HostDetail withOrganizationName(String organizationName) {
        this.organizationName = organizationName;
        return this;
    }
    
    /**
     * ID of the Rubrik cluster to which the host belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public HostDetail withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Specifies the connect status for the host. Status is Refreshing while discovery is running or Connected once discovery was successful and the host is available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public HostDetail withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public HostDetail(@JsonProperty("hostVfdDriverState") HostVfdStateEnum hostVfdDriverState, @JsonProperty("hostname") String hostname, @JsonProperty("id") String id, @JsonProperty("isRelic") Boolean isRelic, @JsonProperty("mssqlCbtDriverInstalled") Boolean mssqlCbtDriverInstalled) {
        this.hostVfdDriverState = hostVfdDriverState;
        this.hostname = hostname;
        this.id = id;
        this.isRelic = isRelic;
        this.mssqlCbtDriverInstalled = mssqlCbtDriverInstalled;
  }
}
