"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error_response_body as shared_error_response_body
from ..shared import label_status_enum as shared_label_status_enum
from datetime import datetime
from enum import Enum
from typing import Any, Optional

class ListLabelsSortByEnum(str, Enum):
    r"""Controls which field the query is sorted by."""
    MODIFIED_AT = 'modified_at'
    CREATED_AT = 'created_at'

class ListLabelsSortDirSortDirEnum(str, Enum):
    r"""Controls the sort order of queries
    
    |Value     |Description
    |:---------|:-----------------------------------------------------
    |`asc`     |Return results in ascending order
    |`desc`    |Return results in descending order
    """
    ASC = 'asc'
    DESC = 'desc'


@dataclasses.dataclass
class ListLabelsRequest:
    
    batch_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'batch_id', 'style': 'form', 'explode': True }})
    r"""Only return labels that were created in a specific [batch](https://www.shipengine.com/docs/labels/bulk/)"""  
    carrier_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'carrier_id', 'style': 'form', 'explode': True }})
    r"""Only return labels for a specific [carrier account](https://www.shipengine.com/docs/carriers/setup/)"""  
    created_at_end: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created_at_end', 'style': 'form', 'explode': True }})
    r"""Only return labels that were created on or before a specific date/time"""  
    created_at_start: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created_at_start', 'style': 'form', 'explode': True }})
    r"""Only return labels that were created on or after a specific date/time"""  
    label_status: Optional[shared_label_status_enum.LabelStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'label_status', 'style': 'form', 'explode': True }})
    r"""Only return labels that are currently in the specified status"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Return a specific page of results. Defaults to the first page. If set to a number that's greater than the number of pages of results, an empty page is returned."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of results to return per response."""  
    rate_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'rate_id', 'style': 'form', 'explode': True }})
    r"""Rate ID"""  
    service_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'service_code', 'style': 'form', 'explode': True }})
    r"""Only return labels for a specific [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/)"""  
    shipment_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'shipment_id', 'style': 'form', 'explode': True }})
    r"""Shipment ID"""  
    sort_by: Optional[ListLabelsSortByEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_by', 'style': 'form', 'explode': True }})
    r"""Controls which field the query is sorted by."""  
    sort_dir: Optional[ListLabelsSortDirSortDirEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_dir', 'style': 'form', 'explode': True }})
    r"""Controls the sort order of the query."""  
    tracking_number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tracking_number', 'style': 'form', 'explode': True }})
    r"""Only return labels with a specific tracking number"""  
    warehouse_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'warehouse_id', 'style': 'form', 'explode': True }})
    r"""Only return labels that originate from a specific [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/)"""  
    

@dataclasses.dataclass
class ListLabelsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response_body: Optional[shared_error_response_body.ErrorResponseBody] = dataclasses.field(default=None)
    r"""The request contained errors."""  
    list_labels_response_body: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""The response includes a `labels` array containing a page of results (as determined by the `page_size` query parameter).  It also includes other useful information, such as the total number of labels that match the query criteria, the number of pages of results, and the URLs of the first, last, next, and previous pages of results."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    