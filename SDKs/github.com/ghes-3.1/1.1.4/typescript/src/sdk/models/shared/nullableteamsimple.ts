/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Groups of organization members that gives permissions on specified repositories.
 */
export class NullableTeamSimple extends SpeakeasyBase {
  /**
   * Description of the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * Unique identifier of the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Distinguished Name (DN) that team maps to within LDAP environment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ldap_dn" })
  ldapDn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "members_url" })
  membersUrl: string;

  /**
   * Name of the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  /**
   * Permission that the team will have for its repositories
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  permission: string;

  /**
   * The level of privacy this team should have
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privacy" })
  privacy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repositories_url" })
  repositoriesUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  /**
   * URL for the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
