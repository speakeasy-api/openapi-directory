/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The method used to extract the uncorrelated risk factors from the asset covariance matrix
 */
export enum PostPortfolioAnalysisEffectiveNumberOfBetsRequestBodyFactorsExtractionMethodEnum {
  PrincipalComponentAnalysis = "principalComponentAnalysis",
  ExactMinimumLinearTorsion = "exactMinimumLinearTorsion",
  ApproximateMinimumLinearTorsion = "approximateMinimumLinearTorsion",
}

export class PostPortfolioAnalysisEffectiveNumberOfBetsRequestBodyPortfolios extends SpeakeasyBase {
  /**
   * assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsWeights" })
  assetsWeights: number[];
}

export class PostPortfolioAnalysisEffectiveNumberOfBetsRequestBody extends SpeakeasyBase {
  /**
   * The number of assets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assets" })
  assets: number;

  /**
   * assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsCovarianceMatrix" })
  assetsCovarianceMatrix: number[][];

  /**
   * The method used to extract the uncorrelated risk factors from the asset covariance matrix
   */
  @SpeakeasyMetadata()
  @Expose({ name: "factorsExtractionMethod" })
  factorsExtractionMethod?: PostPortfolioAnalysisEffectiveNumberOfBetsRequestBodyFactorsExtractionMethodEnum;

  @SpeakeasyMetadata({
    elemType: PostPortfolioAnalysisEffectiveNumberOfBetsRequestBodyPortfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(() => PostPortfolioAnalysisEffectiveNumberOfBetsRequestBodyPortfolios)
  portfolios: PostPortfolioAnalysisEffectiveNumberOfBetsRequestBodyPortfolios[];
}

export class PostPortfolioAnalysisEffectiveNumberOfBets200ApplicationJSONPortfolios extends SpeakeasyBase {
  /**
   * The effective number of bets of the portfolio
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioEffectiveNumberOfBets" })
  portfolioEffectiveNumberOfBets: number;
}

/**
 * OK
 */
export class PostPortfolioAnalysisEffectiveNumberOfBets200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      PostPortfolioAnalysisEffectiveNumberOfBets200ApplicationJSONPortfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(
    () => PostPortfolioAnalysisEffectiveNumberOfBets200ApplicationJSONPortfolios
  )
  portfolios: PostPortfolioAnalysisEffectiveNumberOfBets200ApplicationJSONPortfolios[];
}

export class PostPortfolioAnalysisEffectiveNumberOfBetsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postPortfolioAnalysisEffectiveNumberOfBets200ApplicationJSONObject?: PostPortfolioAnalysisEffectiveNumberOfBets200ApplicationJSON;
}
