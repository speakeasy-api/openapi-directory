"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasettype_enum as shared_datasettype_enum
from ..shared import dataviewtype_enum as shared_dataviewtype_enum
from ..shared import timespantype_enum as shared_timespantype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatasetModel:
    
    name: Optional[shared_datasettype_enum.DatasetTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    timespans: Optional[list[shared_timespantype_enum.TimespanTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timespans'), 'exclude': lambda f: f is None }})  
    views: Optional[list[shared_dataviewtype_enum.DataviewTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('views'), 'exclude': lambda f: f is None }})  
    