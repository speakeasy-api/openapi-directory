/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AsyncInferenceConfig } from "./asyncinferenceconfig";
import { DataCaptureConfig } from "./datacaptureconfig";
import { ExplainerConfig } from "./explainerconfig";
import { ProductionVariant } from "./productionvariant";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateEndpointConfigInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AsyncInferenceConfig" })
  @Type(() => AsyncInferenceConfig)
  asyncInferenceConfig?: AsyncInferenceConfig;

  /**
   * Configuration to control how SageMaker captures inference data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DataCaptureConfig" })
  @Type(() => DataCaptureConfig)
  dataCaptureConfig?: DataCaptureConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointConfigName" })
  endpointConfigName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExplainerConfig" })
  @Type(() => ExplainerConfig)
  explainerConfig?: ExplainerConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata({ elemType: ProductionVariant })
  @Expose({ name: "ProductionVariants" })
  @Type(() => ProductionVariant)
  productionVariants: ProductionVariant[];

  @SpeakeasyMetadata({ elemType: ProductionVariant })
  @Expose({ name: "ShadowProductionVariants" })
  @Type(() => ProductionVariant)
  shadowProductionVariants?: ProductionVariant[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
