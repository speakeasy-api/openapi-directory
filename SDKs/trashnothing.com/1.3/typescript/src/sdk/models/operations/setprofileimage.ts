/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class SetProfileImageRequestBodyPhoto extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=photo" })
  photo: string;
}

export class SetProfileImageRequestBody extends SpeakeasyBase {
  /**
   * If the photo needs to be cropped, a JSON encoded object with the crop arguments can be passed. The supported crop arguments are below.  All arguments except rotate are required. <br /><br /> - **original_width**: Original width of the photo before being cropped or rotated (in pixels).<br /> - **original_height**: Original height of the photo before being cropped or rotated (in pixels).<br /> - **x**: The x-coordinate of the top left corner of the cropped area.<br /> - **y**: The y-coordinate of the top left corner of the cropped area.<br /> - **size**: The size of the square cropped area.<br /> - **rotate**: (optional) The number of degrees to rotate the image before cropping.
   *
   * @remarks
   *   Currently only 90, 180 and 270 are supported which correspond to rotate left, rotate upside down and rotate right.
   * <br />
   *
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=crop" })
  crop?: string;

  /**
   * Client device pixel ratio used to determine thumbnail size (default 1.0).
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=device_pixel_ratio" })
  devicePixelRatio?: number;

  /**
   * Photo to upload.
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  photo?: SetProfileImageRequestBodyPhoto;

  /**
   * Photo to use (if already uploaded).
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=photo_id" })
  photoId?: string;

  /**
   * Whether or not to set the photo as the users' default profile image.  Set to 1 to enable and 0 to disable.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=set_default" })
  setDefault?: number;
}

/**
 * The updated user and the photo.
 */
export class SetProfileImage200ApplicationJSON extends SpeakeasyBase {
  /**
   * The result of uploading or editing a photo.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photo" })
  @Type(() => shared.PhotoResult)
  photo?: shared.PhotoResult;

  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => shared.CurrentUser)
  user?: shared.CurrentUser;
}

export class SetProfileImageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The updated user and the photo.
   */
  @SpeakeasyMetadata()
  setProfileImage200ApplicationJSONObject?: SetProfileImage200ApplicationJSON;
}
