"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowcxv3beta1experimentdefinition as shared_googleclouddialogflowcxv3beta1experimentdefinition
from ..shared import googleclouddialogflowcxv3beta1experimentresult as shared_googleclouddialogflowcxv3beta1experimentresult
from ..shared import googleclouddialogflowcxv3beta1rolloutconfig as shared_googleclouddialogflowcxv3beta1rolloutconfig
from ..shared import googleclouddialogflowcxv3beta1rolloutstate as shared_googleclouddialogflowcxv3beta1rolloutstate
from ..shared import googleclouddialogflowcxv3beta1variantshistory as shared_googleclouddialogflowcxv3beta1variantshistory
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowCxV3beta1ExperimentStateEnum(str, Enum):
    r"""The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    DRAFT = 'DRAFT'
    RUNNING = 'RUNNING'
    DONE = 'DONE'
    ROLLOUT_FAILED = 'ROLLOUT_FAILED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3beta1Experiment:
    r"""Represents an experiment in an environment."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Creation time of this experiment."""  
    definition: Optional[shared_googleclouddialogflowcxv3beta1experimentdefinition.GoogleCloudDialogflowCxV3beta1ExperimentDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('definition'), 'exclude': lambda f: f is None }})
    r"""Definition of the experiment."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The human-readable description of the experiment."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""End time of this experiment."""  
    experiment_length: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('experimentLength'), 'exclude': lambda f: f is None }})
    r"""Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days."""  
    last_update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastUpdateTime'), 'exclude': lambda f: f is None }})
    r"""Last update time of this experiment."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the experiment. Format: projects//locations//agents//environments//experiments/.."""  
    result: Optional[shared_googleclouddialogflowcxv3beta1experimentresult.GoogleCloudDialogflowCxV3beta1ExperimentResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    r"""The inference result which includes an objective metric to optimize and the confidence interval."""  
    rollout_config: Optional[shared_googleclouddialogflowcxv3beta1rolloutconfig.GoogleCloudDialogflowCxV3beta1RolloutConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rolloutConfig'), 'exclude': lambda f: f is None }})
    r"""The configuration for auto rollout."""  
    rollout_failure_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rolloutFailureReason'), 'exclude': lambda f: f is None }})
    r"""The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED."""  
    rollout_state: Optional[shared_googleclouddialogflowcxv3beta1rolloutstate.GoogleCloudDialogflowCxV3beta1RolloutState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rolloutState'), 'exclude': lambda f: f is None }})
    r"""State of the auto-rollout process."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Start time of this experiment."""  
    state: Optional[GoogleCloudDialogflowCxV3beta1ExperimentStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE."""  
    variants_history: Optional[list[shared_googleclouddialogflowcxv3beta1variantshistory.GoogleCloudDialogflowCxV3beta1VariantsHistory]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variantsHistory'), 'exclude': lambda f: f is None }})
    r"""The history of updates to the experiment variants."""  
    