// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETBatchApplyUpdateActionActionEnum
type GETBatchApplyUpdateActionActionEnum string

const (
	GETBatchApplyUpdateActionActionEnumBatchApplyUpdateAction GETBatchApplyUpdateActionActionEnum = "BatchApplyUpdateAction"
)

func (e GETBatchApplyUpdateActionActionEnum) ToPointer() *GETBatchApplyUpdateActionActionEnum {
	return &e
}

func (e *GETBatchApplyUpdateActionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BatchApplyUpdateAction":
		*e = GETBatchApplyUpdateActionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBatchApplyUpdateActionActionEnum: %v", v)
	}
}

// GETBatchApplyUpdateActionVersionEnum
type GETBatchApplyUpdateActionVersionEnum string

const (
	GETBatchApplyUpdateActionVersionEnumTwoThousandAndFifteen0202 GETBatchApplyUpdateActionVersionEnum = "2015-02-02"
)

func (e GETBatchApplyUpdateActionVersionEnum) ToPointer() *GETBatchApplyUpdateActionVersionEnum {
	return &e
}

func (e *GETBatchApplyUpdateActionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETBatchApplyUpdateActionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBatchApplyUpdateActionVersionEnum: %v", v)
	}
}

type GETBatchApplyUpdateActionRequest struct {
	Action GETBatchApplyUpdateActionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The cache cluster IDs
	CacheClusterIds []string `queryParam:"style=form,explode=true,name=CacheClusterIds"`
	// The replication group IDs
	ReplicationGroupIds []string `queryParam:"style=form,explode=true,name=ReplicationGroupIds"`
	// The unique ID of the service update
	ServiceUpdateName string                               `queryParam:"style=form,explode=true,name=ServiceUpdateName"`
	Version           GETBatchApplyUpdateActionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETBatchApplyUpdateActionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
