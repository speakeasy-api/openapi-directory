"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error_v1 as shared_error_v1
from ..shared import product_v1 as shared_product_v1
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetProductsRequest:
    
    producer_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'producer_id', 'style': 'form', 'explode': True }})
    r"""`id` for a specific producer."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProducts400ApplicationJSON:
    r"""Bad Request: something was wrong with the included query param(s)"""
    
    errors: Optional[list[shared_error_v1.ErrorV1]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProducts200ApplicationJSON:
    r"""OK"""
    
    products: Optional[list[shared_product_v1.ProductV1]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('products'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetProductsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_products_200_application_json_object: Optional[GetProducts200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    get_products_400_application_json_object: Optional[GetProducts400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad Request: something was wrong with the included query param(s)"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    