/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The order type. The default orderType is `VALUE`.
 */
export enum OrderByOrderTypeEnum {
  OrderTypeUnspecified = "ORDER_TYPE_UNSPECIFIED",
  Value = "VALUE",
  Delta = "DELTA",
  Smart = "SMART",
  HistogramBucket = "HISTOGRAM_BUCKET",
  DimensionAsInteger = "DIMENSION_AS_INTEGER",
}

/**
 * The sorting order for the field.
 */
export enum OrderBySortOrderEnum {
  SortOrderUnspecified = "SORT_ORDER_UNSPECIFIED",
  Ascending = "ASCENDING",
  Descending = "DESCENDING",
}

/**
 * Specifies the sorting options.
 */
export class OrderBy extends SpeakeasyBase {
  /**
   * The field which to sort by. The default sort order is ascending. Example: `ga:browser`. Note, that you can only specify one field for sort here. For example, `ga:browser, ga:city` is not valid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldName" })
  fieldName?: string;

  /**
   * The order type. The default orderType is `VALUE`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderType" })
  orderType?: OrderByOrderTypeEnum;

  /**
   * The sorting order for the field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: OrderBySortOrderEnum;
}
