"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ValidateAttestationOccurrenceResponseResultEnum(str, Enum):
    r"""The result of the Attestation validation."""
    RESULT_UNSPECIFIED = 'RESULT_UNSPECIFIED'
    VERIFIED = 'VERIFIED'
    ATTESTATION_NOT_VERIFIABLE = 'ATTESTATION_NOT_VERIFIABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ValidateAttestationOccurrenceResponse:
    r"""Response message for ValidationHelperV1.ValidateAttestationOccurrence."""
    
    denial_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('denialReason'), 'exclude': lambda f: f is None }})
    r"""The reason for denial if the Attestation couldn't be validated."""  
    result: Optional[ValidateAttestationOccurrenceResponseResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    r"""The result of the Attestation validation."""  
    