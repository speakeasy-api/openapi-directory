// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateServiceLinkedRoleActionEnum
type GETCreateServiceLinkedRoleActionEnum string

const (
	GETCreateServiceLinkedRoleActionEnumCreateServiceLinkedRole GETCreateServiceLinkedRoleActionEnum = "CreateServiceLinkedRole"
)

func (e GETCreateServiceLinkedRoleActionEnum) ToPointer() *GETCreateServiceLinkedRoleActionEnum {
	return &e
}

func (e *GETCreateServiceLinkedRoleActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateServiceLinkedRole":
		*e = GETCreateServiceLinkedRoleActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateServiceLinkedRoleActionEnum: %v", v)
	}
}

// GETCreateServiceLinkedRoleVersionEnum
type GETCreateServiceLinkedRoleVersionEnum string

const (
	GETCreateServiceLinkedRoleVersionEnumTwoThousandAndTen0508 GETCreateServiceLinkedRoleVersionEnum = "2010-05-08"
)

func (e GETCreateServiceLinkedRoleVersionEnum) ToPointer() *GETCreateServiceLinkedRoleVersionEnum {
	return &e
}

func (e *GETCreateServiceLinkedRoleVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETCreateServiceLinkedRoleVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateServiceLinkedRoleVersionEnum: %v", v)
	}
}

type GETCreateServiceLinkedRoleRequest struct {
	// <p>The service principal for the Amazon Web Services service to which this role is attached. You use a string similar to a URL but without the http:// in front. For example: <code>elasticbeanstalk.amazonaws.com</code>. </p> <p>Service principals are unique and case-sensitive. To find the exact service principal for your service-linked role, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_aws-services-that-work-with-iam.html">Amazon Web Services services that work with IAM</a> in the <i>IAM User Guide</i>. Look for the services that have <b>Yes </b>in the <b>Service-Linked Role</b> column. Choose the <b>Yes</b> link to view the service-linked role documentation for that service.</p>
	AWSServiceName string                               `queryParam:"style=form,explode=true,name=AWSServiceName"`
	Action         GETCreateServiceLinkedRoleActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p/> <p>A string that you provide, which is combined with the service-provided prefix to form the complete role name. If you make multiple requests for the same service, then you must supply a different <code>CustomSuffix</code> for each request. Otherwise the request fails with a duplicate role name error. For example, you could add <code>-1</code> or <code>-debug</code> to the suffix.</p> <p>Some services do not support the <code>CustomSuffix</code> parameter. If you provide an optional suffix and the operation fails, try the operation again without the suffix.</p>
	CustomSuffix *string `queryParam:"style=form,explode=true,name=CustomSuffix"`
	// The description of the role.
	Description       *string                               `queryParam:"style=form,explode=true,name=Description"`
	Version           GETCreateServiceLinkedRoleVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateServiceLinkedRoleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
