/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Merchant - OK - the request has succeeded.
 */
public class Merchant {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    public MerchantLinks links;

    public Merchant withLinks(MerchantLinks links) {
        this.links = links;
        return this;
    }
    
    /**
     * The [capture delay](https://docs.adyen.com/online-payments/capture#capture-delay) set for the merchant account.
     * 
     * Possible values:
     * * **Immediate**
     * * **Manual**
     * * Number of days from **1** to **29**
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("captureDelay")
    public String captureDelay;

    public Merchant withCaptureDelay(String captureDelay) {
        this.captureDelay = captureDelay;
        return this;
    }
    
    /**
     * The unique identifier of the company account this merchant belongs to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyId")
    public String companyId;

    public Merchant withCompanyId(String companyId) {
        this.companyId = companyId;
        return this;
    }
    
    /**
     * List of available data centers.
     * 
     * Adyen has several data centers around the world.In the URL that you use for making API requests, we recommend you use the live URL prefix from the data center closest to your shoppers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataCenters")
    public DataCenter[] dataCenters;

    public Merchant withDataCenters(DataCenter[] dataCenters) {
        this.dataCenters = dataCenters;
        return this;
    }
    
    /**
     * The default [`shopperInteraction`](https://docs.adyen.com/api-explorer/#/CheckoutService/v68/post/payments__reqParam_shopperInteraction) value used when processing payments through this merchant account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultShopperInteraction")
    public String defaultShopperInteraction;

    public Merchant withDefaultShopperInteraction(String defaultShopperInteraction) {
        this.defaultShopperInteraction = defaultShopperInteraction;
        return this;
    }
    
    /**
     * Your description for the merchant account, maximum 300 characters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Merchant withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The unique identifier of the merchant account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Merchant withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The city where the legal entity of this merchant account is registered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantCity")
    public String merchantCity;

    public Merchant withMerchantCity(String merchantCity) {
        this.merchantCity = merchantCity;
        return this;
    }
    
    /**
     * The name of the legal entity associated with the merchant account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Merchant withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Only applies to merchant accounts managed by Adyen's partners. The name of the pricing plan assigned to the merchant account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pricingPlan")
    public String pricingPlan;

    public Merchant withPricingPlan(String pricingPlan) {
        this.pricingPlan = pricingPlan;
        return this;
    }
    
    /**
     * The currency of the country where the legal entity of this merchant account is registered. Format: [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, a legal entity based in the United States has USD as the primary settlement currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primarySettlementCurrency")
    public String primarySettlementCurrency;

    public Merchant withPrimarySettlementCurrency(String primarySettlementCurrency) {
        this.primarySettlementCurrency = primarySettlementCurrency;
        return this;
    }
    
    /**
     * Reference of the merchant account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public Merchant withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The URL for the ecommerce website used with this merchant account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopWebAddress")
    public String shopWebAddress;

    public Merchant withShopWebAddress(String shopWebAddress) {
        this.shopWebAddress = shopWebAddress;
        return this;
    }
    
    /**
     * The status of the merchant account.
     * 
     * Possible values:
     * 
     * * **PreActive**: The merchant account has been created. Users cannot access the merchant account in the Customer Area. The account cannot process payments.
     * * **Active**: Users can access the merchant account in the Customer Area. If the company account is also **Active**, then payment processing and payouts are enabled.
     * * **InactiveWithModifications**: Users can access the merchant account in the Customer Area. You cannot process new payments but you can still modify payments, for example issue refunds. You can still receive payouts.
     * * **Inactive**: Users can access the merchant account in the Customer Area. Payment processing and payouts are disabled.
     * * **Closed**: The account is closed and this cannot be reversed. Users cannot log in. Payment processing and payouts are disabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public Merchant withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public Merchant(){}
}
