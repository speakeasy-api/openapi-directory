"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import paginated_pullrequests as shared_paginated_pullrequests
from ..shared import security as shared_security
from enum import Enum
from typing import Any, Optional


@dataclasses.dataclass
class GetPullrequestsSelectedUserSecurity:
    
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Authorization' }})  
    basic: Optional[shared_security.SchemeBasic] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    oauth2: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetPullrequestsSelectedUserStateEnum(str, Enum):
    r"""Only return pull requests that are in this state. This parameter can be repeated."""
    OPEN = 'OPEN'
    MERGED = 'MERGED'
    DECLINED = 'DECLINED'
    SUPERSEDED = 'SUPERSEDED'


@dataclasses.dataclass
class GetPullrequestsSelectedUserRequest:
    
    selected_user: str = dataclasses.field(metadata={'path_param': { 'field_name': 'selected_user', 'style': 'simple', 'explode': False }})
    r"""This can either be the username of the pull request author, the author's UUID
    surrounded by curly-braces, for example: `{account UUID}`, or the author's Atlassian ID.
    """  
    state: Optional[GetPullrequestsSelectedUserStateEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'state', 'style': 'form', 'explode': True }})
    r"""Only return pull requests that are in this state. This parameter can be repeated."""  
    

@dataclasses.dataclass
class GetPullrequestsSelectedUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""If the specified user does not exist."""  
    paginated_pullrequests: Optional[shared_paginated_pullrequests.PaginatedPullrequests] = dataclasses.field(default=None)
    r"""All pull requests authored by the specified user."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    