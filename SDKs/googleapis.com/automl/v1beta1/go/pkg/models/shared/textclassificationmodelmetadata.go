// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TextClassificationModelMetadataClassificationTypeEnum - Output only. Classification type of the dataset used to train this model.
type TextClassificationModelMetadataClassificationTypeEnum string

const (
	TextClassificationModelMetadataClassificationTypeEnumClassificationTypeUnspecified TextClassificationModelMetadataClassificationTypeEnum = "CLASSIFICATION_TYPE_UNSPECIFIED"
	TextClassificationModelMetadataClassificationTypeEnumMulticlass                    TextClassificationModelMetadataClassificationTypeEnum = "MULTICLASS"
	TextClassificationModelMetadataClassificationTypeEnumMultilabel                    TextClassificationModelMetadataClassificationTypeEnum = "MULTILABEL"
)

func (e TextClassificationModelMetadataClassificationTypeEnum) ToPointer() *TextClassificationModelMetadataClassificationTypeEnum {
	return &e
}

func (e *TextClassificationModelMetadataClassificationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CLASSIFICATION_TYPE_UNSPECIFIED":
		fallthrough
	case "MULTICLASS":
		fallthrough
	case "MULTILABEL":
		*e = TextClassificationModelMetadataClassificationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TextClassificationModelMetadataClassificationTypeEnum: %v", v)
	}
}

// TextClassificationModelMetadata - Model metadata that is specific to text classification.
type TextClassificationModelMetadata struct {
	// Output only. Classification type of the dataset used to train this model.
	ClassificationType *TextClassificationModelMetadataClassificationTypeEnum `json:"classificationType,omitempty"`
}
