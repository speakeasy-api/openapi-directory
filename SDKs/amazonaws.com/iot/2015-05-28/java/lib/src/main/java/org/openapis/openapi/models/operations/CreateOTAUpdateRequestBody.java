/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateOTAUpdateRequestBody {
    /**
     * A list of additional OTA update parameters which are name-value pairs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalParameters")
    public java.util.Map<String, String> additionalParameters;
    public CreateOTAUpdateRequestBody withAdditionalParameters(java.util.Map<String, String> additionalParameters) {
        this.additionalParameters = additionalParameters;
        return this;
    }
    
    /**
     * The criteria that determine when and how a job abort takes place.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awsJobAbortConfig")
    public CreateOTAUpdateRequestBodyAwsJobAbortConfig awsJobAbortConfig;
    public CreateOTAUpdateRequestBody withAwsJobAbortConfig(CreateOTAUpdateRequestBodyAwsJobAbortConfig awsJobAbortConfig) {
        this.awsJobAbortConfig = awsJobAbortConfig;
        return this;
    }
    
    /**
     * Configuration for the rollout of OTA updates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awsJobExecutionsRolloutConfig")
    public CreateOTAUpdateRequestBodyAwsJobExecutionsRolloutConfig awsJobExecutionsRolloutConfig;
    public CreateOTAUpdateRequestBody withAwsJobExecutionsRolloutConfig(CreateOTAUpdateRequestBodyAwsJobExecutionsRolloutConfig awsJobExecutionsRolloutConfig) {
        this.awsJobExecutionsRolloutConfig = awsJobExecutionsRolloutConfig;
        return this;
    }
    
    /**
     * Configuration information for pre-signed URLs. Valid when &lt;code&gt;protocols&lt;/code&gt; contains HTTP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awsJobPresignedUrlConfig")
    public CreateOTAUpdateRequestBodyAwsJobPresignedUrlConfig awsJobPresignedUrlConfig;
    public CreateOTAUpdateRequestBody withAwsJobPresignedUrlConfig(CreateOTAUpdateRequestBodyAwsJobPresignedUrlConfig awsJobPresignedUrlConfig) {
        this.awsJobPresignedUrlConfig = awsJobPresignedUrlConfig;
        return this;
    }
    
    /**
     * Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to &lt;code&gt;IN_PROGRESS&lt;/code&gt;. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to &lt;code&gt;TIMED_OUT&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awsJobTimeoutConfig")
    public CreateOTAUpdateRequestBodyAwsJobTimeoutConfig awsJobTimeoutConfig;
    public CreateOTAUpdateRequestBody withAwsJobTimeoutConfig(CreateOTAUpdateRequestBodyAwsJobTimeoutConfig awsJobTimeoutConfig) {
        this.awsJobTimeoutConfig = awsJobTimeoutConfig;
        return this;
    }
    
    /**
     * The description of the OTA update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CreateOTAUpdateRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The files to be streamed by the OTA update.
     */
    @JsonProperty("files")
    public org.openapis.openapi.models.shared.OTAUpdateFile[] files;
    public CreateOTAUpdateRequestBody withFiles(org.openapis.openapi.models.shared.OTAUpdateFile[] files) {
        this.files = files;
        return this;
    }
    
    /**
     * The protocol used to transfer the OTA update image. Valid values are [HTTP], [MQTT], [HTTP, MQTT]. When both HTTP and MQTT are specified, the target device can choose the protocol.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocols")
    public org.openapis.openapi.models.shared.ProtocolEnum[] protocols;
    public CreateOTAUpdateRequestBody withProtocols(org.openapis.openapi.models.shared.ProtocolEnum[] protocols) {
        this.protocols = protocols;
        return this;
    }
    
    /**
     * The IAM role that grants Amazon Web Services IoT Core access to the Amazon S3, IoT jobs and Amazon Web Services Code Signing resources to create an OTA update job.
     */
    @JsonProperty("roleArn")
    public String roleArn;
    public CreateOTAUpdateRequestBody withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    /**
     * Metadata which can be used to manage updates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public org.openapis.openapi.models.shared.Tag[] tags;
    public CreateOTAUpdateRequestBody withTags(org.openapis.openapi.models.shared.Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Specifies whether the update will continue to run (CONTINUOUS), or will be complete after all the things specified as targets have completed the update (SNAPSHOT). If continuous, the update may also be run on a thing when a change is detected in a target. For example, an update will run on a thing when the thing is added to a target group, even after the update was completed by all things originally in the group. Valid values: CONTINUOUS | SNAPSHOT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetSelection")
    public CreateOTAUpdateRequestBodyTargetSelectionEnum targetSelection;
    public CreateOTAUpdateRequestBody withTargetSelection(CreateOTAUpdateRequestBodyTargetSelectionEnum targetSelection) {
        this.targetSelection = targetSelection;
        return this;
    }
    
    /**
     * The devices targeted to receive OTA updates.
     */
    @JsonProperty("targets")
    public String[] targets;
    public CreateOTAUpdateRequestBody withTargets(String[] targets) {
        this.targets = targets;
        return this;
    }
    
}
