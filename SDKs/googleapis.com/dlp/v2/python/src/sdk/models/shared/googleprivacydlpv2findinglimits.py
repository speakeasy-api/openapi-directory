"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2infotypelimit as shared_googleprivacydlpv2infotypelimit
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2FindingLimits:
    r"""Configuration to control the number of findings returned for inspection. This is not used for de-identification or data profiling. When redacting sensitive data from images, finding limits don't apply. They can cause unexpected or inconsistent results, where only some data is redacted. Don't include finding limits in RedactImage requests. Otherwise, Cloud DLP returns an error."""
    
    max_findings_per_info_type: Optional[list[shared_googleprivacydlpv2infotypelimit.GooglePrivacyDlpV2InfoTypeLimit]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxFindingsPerInfoType'), 'exclude': lambda f: f is None }})
    r"""Configuration of findings limit given for specified infoTypes."""  
    max_findings_per_item: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxFindingsPerItem'), 'exclude': lambda f: f is None }})
    r"""Max number of findings that will be returned for each item scanned. When set within `InspectJobConfig`, the maximum returned is 2000 regardless if this is set higher. When set within `InspectContentRequest`, this field is ignored."""  
    max_findings_per_request: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxFindingsPerRequest'), 'exclude': lambda f: f is None }})
    r"""Max number of findings that will be returned per request/job. When set within `InspectContentRequest`, the maximum returned is 2000 regardless if this is set higher."""  
    