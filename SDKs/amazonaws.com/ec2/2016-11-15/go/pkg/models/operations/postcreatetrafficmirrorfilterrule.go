// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateTrafficMirrorFilterRuleActionEnum
type POSTCreateTrafficMirrorFilterRuleActionEnum string

const (
	POSTCreateTrafficMirrorFilterRuleActionEnumCreateTrafficMirrorFilterRule POSTCreateTrafficMirrorFilterRuleActionEnum = "CreateTrafficMirrorFilterRule"
)

func (e POSTCreateTrafficMirrorFilterRuleActionEnum) ToPointer() *POSTCreateTrafficMirrorFilterRuleActionEnum {
	return &e
}

func (e *POSTCreateTrafficMirrorFilterRuleActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateTrafficMirrorFilterRule":
		*e = POSTCreateTrafficMirrorFilterRuleActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateTrafficMirrorFilterRuleActionEnum: %v", v)
	}
}

// POSTCreateTrafficMirrorFilterRuleVersionEnum
type POSTCreateTrafficMirrorFilterRuleVersionEnum string

const (
	POSTCreateTrafficMirrorFilterRuleVersionEnumTwoThousandAndSixteen1115 POSTCreateTrafficMirrorFilterRuleVersionEnum = "2016-11-15"
)

func (e POSTCreateTrafficMirrorFilterRuleVersionEnum) ToPointer() *POSTCreateTrafficMirrorFilterRuleVersionEnum {
	return &e
}

func (e *POSTCreateTrafficMirrorFilterRuleVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTCreateTrafficMirrorFilterRuleVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateTrafficMirrorFilterRuleVersionEnum: %v", v)
	}
}

type POSTCreateTrafficMirrorFilterRuleRequest struct {
	Action            POSTCreateTrafficMirrorFilterRuleActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                       `request:"mediaType=text/xml"`
	Version           POSTCreateTrafficMirrorFilterRuleVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateTrafficMirrorFilterRuleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
