/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class QuerySuggestedImagesRawRequest extends SpeakeasyBase {
  /**
   * Contains properties we need to query suggested images.
   */
  @SpeakeasyMetadata({ data: "request, media_type=text/xml" })
  requestBody: Uint8Array;

  /**
   * IterationId to use for the suggested tags and regions.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=iterationId",
  })
  iterationId: string;

  /**
   * The project id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: string;
}

export class QuerySuggestedImagesRawResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error response
   */
  @SpeakeasyMetadata()
  customVisionError?: shared.CustomVisionError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  suggestedTagAndRegionQuery?: shared.SuggestedTagAndRegionQuery;
}
