/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetOauthAuthorizeRequest extends SpeakeasyBase {
  /**
   * Client ID, obtained during app registration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=client_id",
  })
  clientId: string;

  /**
   * Added in 2.6.0. Forces the user to re-login, which is necessary for authorizing with multiple accounts from the same instance.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=force_login",
  })
  forceLogin?: boolean;

  /**
   * Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the authorization code will be shown instead. Must match one of the redirect URIs declared during app registration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=redirect_uri",
  })
  redirectUri: string;

  /**
   * Should be set equal to code.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=response_type",
  })
  responseType: string;

  /**
   * List of requested OAuth scopes, separated by spaces (or by pluses, if using query parameters). Must be a subset of scopes declared during app registration. If not provided, defaults to read.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=scope" })
  scope?: string;
}

export class GetOauthAuthorizeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * If the authorization code is incorrect or has been used already, the request will fail.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
