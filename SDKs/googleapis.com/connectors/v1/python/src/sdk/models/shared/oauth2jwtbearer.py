"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import jwtclaims as shared_jwtclaims
from ..shared import secret as shared_secret
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Oauth2JwtBearer:
    r"""Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details."""
    
    client_key: Optional[shared_secret.Secret] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientKey'), 'exclude': lambda f: f is None }})
    r"""Secret provides a reference to entries in Secret Manager."""  
    jwt_claims: Optional[shared_jwtclaims.JwtClaims] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jwtClaims'), 'exclude': lambda f: f is None }})
    r"""JWT claims used for the jwt-bearer authorization grant."""  
    