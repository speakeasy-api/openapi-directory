/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PrivateConnectionInput - The PrivateConnection resource is used to establish private connectivity with the customer's network.
 */
public class PrivateConnectionInput {
    /**
     * The private connection display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public PrivateConnectionInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;
    public PrivateConnectionInput withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * The resource labels for private connections to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public PrivateConnectionInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The name of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PrivateConnectionInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The VPC peering configuration is used to create VPC peering with the consumer's VPC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcPeeringConfig")
    public VpcPeeringConfig vpcPeeringConfig;
    public PrivateConnectionInput withVpcPeeringConfig(VpcPeeringConfig vpcPeeringConfig) {
        this.vpcPeeringConfig = vpcPeeringConfig;
        return this;
    }
    
}
