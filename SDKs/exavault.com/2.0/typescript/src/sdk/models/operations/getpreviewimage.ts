/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The size of the image.
 */
export enum GetPreviewImageSizeEnum {
  Small = "small",
  Medium = "medium",
  Large = "large",
}

export class GetPreviewImageRequest extends SpeakeasyBase {
  /**
   * Access Token
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-access-token",
  })
  evAccessToken: string;

  /**
   * API Key
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-api-key",
  })
  evApiKey: string;

  /**
   * Overrides sizes. Sets to a specific height.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=height",
  })
  height?: number;

  /**
   * Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Resource identifier for the image file.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resource",
  })
  resource: string;

  /**
   * The size of the image.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=size" })
  size: GetPreviewImageSizeEnum;

  /**
   * Overrides sizes. Sets to a specific width.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=width" })
  width?: number;
}

export class GetPreviewImageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful Operation
   */
  @SpeakeasyMetadata()
  previewFileResponse?: shared.PreviewFileResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
