/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * New Store plan name.
 */
export enum PartnerStoreCreatePlanNameEnum {
  Pro = "pro",
  Plus = "plus",
  Premium = "premium",
}

/**
 * New partnered Store parameters.
 */
export class PartnerStoreCreate extends SpeakeasyBase {
  /**
   * Partner code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aff" })
  aff?: string;

  /**
   * New Store administrator email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * ISO3166-2 code for the store langauge.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locale" })
  locale?: string;

  /**
   * New Store administrator password.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * New Store plan name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_name" })
  planName?: PartnerStoreCreatePlanNameEnum;

  /**
   * Indicates whether the request should fail if the Store name provided is already in use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reject_duplicates" })
  rejectDuplicates?: boolean;

  /**
   * New Store name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "store_name" })
  storeName?: string;
}
