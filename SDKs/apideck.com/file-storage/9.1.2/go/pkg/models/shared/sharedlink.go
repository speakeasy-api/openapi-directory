// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// SharedLinkScopeEnum - The scope of the shared link.
type SharedLinkScopeEnum string

const (
	SharedLinkScopeEnumPublic  SharedLinkScopeEnum = "public"
	SharedLinkScopeEnumCompany SharedLinkScopeEnum = "company"
)

func (e *SharedLinkScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "public":
		fallthrough
	case "company":
		*e = SharedLinkScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SharedLinkScopeEnum: %s", s)
	}
}

type SharedLinkInput struct {
	// The URL that can be used to download the file.
	DownloadURL *string `json:"download_url,omitempty"`
	// Optional password for the shared link.
	Password *string `json:"password,omitempty"`
	// The scope of the shared link.
	Scope *SharedLinkScopeEnum `json:"scope,omitempty"`
	// The ID of the file or folder to link.
	TargetID string `json:"target_id"`
}

type SharedLinkOutput struct {
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The URL that can be used to download the file.
	DownloadURL *string    `json:"download_url,omitempty"`
	ExpiresAt   *time.Time `json:"expires_at,omitempty"`
	// Indicated if the shared link is password protected.
	PasswordProtected *bool `json:"password_protected,omitempty"`
	// The scope of the shared link.
	Scope  *SharedLinkScopeEnum `json:"scope,omitempty"`
	Target *SharedLinkTarget    `json:"target,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The URL that can be used to view the file.
	URL *string `json:"url,omitempty"`
}
