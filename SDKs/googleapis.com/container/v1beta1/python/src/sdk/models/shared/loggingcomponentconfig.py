"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LoggingComponentConfigEnableComponentsEnum(str, Enum):
    COMPONENT_UNSPECIFIED = 'COMPONENT_UNSPECIFIED'
    SYSTEM_COMPONENTS = 'SYSTEM_COMPONENTS'
    WORKLOADS = 'WORKLOADS'
    APISERVER = 'APISERVER'
    SCHEDULER = 'SCHEDULER'
    CONTROLLER_MANAGER = 'CONTROLLER_MANAGER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LoggingComponentConfig:
    r"""LoggingComponentConfig is cluster logging component configuration."""
    
    enable_components: Optional[list[LoggingComponentConfigEnableComponentsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableComponents'), 'exclude': lambda f: f is None }})
    r"""Select components to collect logs. An empty set would disable all logging."""  
    