/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataSourceToIndexFieldMapping } from "./datasourcetoindexfieldmapping";
import { DataSourceVpcConfiguration } from "./datasourcevpcconfiguration";
import { SlackEntityEnum } from "./slackentityenum";
import { Expose, Type } from "class-transformer";

/**
 * Provides the configuration information to connect to Slack as your data source.
 */
export class SlackConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CrawlBotMessage" })
  crawlBotMessage?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExcludeArchived" })
  excludeArchived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExclusionPatterns" })
  exclusionPatterns?: string[];

  @SpeakeasyMetadata({ elemType: DataSourceToIndexFieldMapping })
  @Expose({ name: "FieldMappings" })
  @Type(() => DataSourceToIndexFieldMapping)
  fieldMappings?: DataSourceToIndexFieldMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "InclusionPatterns" })
  inclusionPatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "LookBackPeriod" })
  lookBackPeriod?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PrivateChannelFilter" })
  privateChannelFilter?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "PublicChannelFilter" })
  publicChannelFilter?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SecretArn" })
  secretArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SinceCrawlDate" })
  sinceCrawlDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SlackEntityList" })
  slackEntityList: SlackEntityEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "TeamId" })
  teamId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UseChangeLog" })
  useChangeLog?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfiguration" })
  @Type(() => DataSourceVpcConfiguration)
  vpcConfiguration?: DataSourceVpcConfiguration;
}
