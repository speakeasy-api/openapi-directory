<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class StatementGetResponse
{
    /**
     * Actions that the Policy will execute
     * 
     * @var ?array<mixed> $actions
     */
	#[\JMS\Serializer\Annotation\SerializedName('actions')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $actions = null;
    
    /**
     * Condition to activate this policy. This object can have a maximum of ten recursive conditions
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StatementGetResponseCondition $condition
     */
	#[\JMS\Serializer\Annotation\SerializedName('condition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StatementGetResponseCondition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StatementGetResponseCondition $condition = null;
    
    /**
     * This field is not functional at the moment. To create a correct request, fill the field with `Allow`
     * 
     * @var string $effect
     */
	#[\JMS\Serializer\Annotation\SerializedName('effect')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effect;
    
    /**
     * This operation will determine if all the conditions need to be valid or at least one of them, if the conditions array is not empty.  The possible values to these fields are `None`, `stringEquals`, `stringEqualsIgnoreCase`, `numericEquals`, `numericLessThan`, `numericLessThanEquals`,   `numericGreaterThan`, `numericGreaterThanEquals`, `bool`, `not`, `or`, `and`, `dateTimeUtcGreaterThan`, `dateTimeUtcLessThan`, and `between`
     * 
     * @var ?string $operation
     */
	#[\JMS\Serializer\Annotation\SerializedName('operation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operation = null;
    
    /**
     * Scope on which this policy must be evaluated
     * 
     * @var ?string $resource
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resource = null;
    
	public function __construct()
	{
		$this->actions = null;
		$this->condition = null;
		$this->effect = "";
		$this->operation = null;
		$this->resource = null;
	}
}
