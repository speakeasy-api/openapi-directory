/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LambdaFunctionAggregation - The details that define a findings aggregation based on AWS Lambda functions.
 */
public class LambdaFunctionAggregation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("functionNames")
    public StringFilter[] functionNames;

    public LambdaFunctionAggregation withFunctionNames(StringFilter[] functionNames) {
        this.functionNames = functionNames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("functionTags")
    public MapFilter[] functionTags;

    public LambdaFunctionAggregation withFunctionTags(MapFilter[] functionTags) {
        this.functionTags = functionTags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceIds")
    public StringFilter[] resourceIds;

    public LambdaFunctionAggregation withResourceIds(StringFilter[] resourceIds) {
        this.resourceIds = resourceIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtimes")
    public StringFilter[] runtimes;

    public LambdaFunctionAggregation withRuntimes(StringFilter[] runtimes) {
        this.runtimes = runtimes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortBy")
    public LambdaFunctionSortByEnum sortBy;

    public LambdaFunctionAggregation withSortBy(LambdaFunctionSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortOrder")
    public SortOrderEnum sortOrder;

    public LambdaFunctionAggregation withSortOrder(SortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public LambdaFunctionAggregation(){}
}
