"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class TaxRatesByCountryCodeRequest:
    
    country_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'country_code', 'style': 'form', 'explode': True }})
    r"""Country code alpha 2"""  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date', 'style': 'form', 'explode': True }})  
    domain: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'domain', 'style': 'form', 'explode': True }})
    r"""Domain name: api.taxrates.io"""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""You can filter your taxes by one of following types: 'standard', 'reduced', 'second reduced', 'third reduced' and 'super reduced'."""  
    product_codes: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'product_codes[]', 'style': 'form', 'explode': True }})
    r"""Use one or many product code/s."""  
    province: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'province ', 'style': 'form', 'explode': True }})
    r"""Use for Canada"""  
    zip: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'zip', 'style': 'form', 'explode': True }})
    r"""You must provide a zip code if one of your selected countries is United States and you've had selected a state on your Taxrates.io member's dashboard."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaxRatesByCountryCode500ApplicationJSON:
    r"""Unexpected error"""
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaxRatesByCountryCode200ApplicationJSONTaxes:
    
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Country'), 'exclude': lambda f: f is None }})  
    data_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_name'), 'exclude': lambda f: f is None }})  
    data_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_value'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaxRatesByCountryCode200ApplicationJSON:
    r"""Success"""
    
    country_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country_name'), 'exclude': lambda f: f is None }})  
    taxes: Optional[list[TaxRatesByCountryCode200ApplicationJSONTaxes]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxes'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class TaxRatesByCountryCodeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tax_rates_by_country_code_200_application_json_object: Optional[TaxRatesByCountryCode200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    tax_rates_by_country_code_500_application_json_object: Optional[TaxRatesByCountryCode500ApplicationJSON] = dataclasses.field(default=None)
    r"""Unexpected error"""  
    