/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PutObjectHeaders {
    /**
     * &lt;p&gt;An optional &lt;code&gt;CacheControl&lt;/code&gt; header that allows the caller to control the object's cache behavior. Headers can be passed in as specified in the HTTP at &lt;a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9"&gt;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Headers with a custom user-defined value are also accepted.&lt;/p&gt;
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Cache-Control")
    public String cacheControl;
    public PutObjectHeaders withCacheControl(String cacheControl) {
        this.cacheControl = cacheControl;
        return this;
    }
    
    /**
     * The content type of the object.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Content-Type")
    public String contentType;
    public PutObjectHeaders withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public PutObjectHeaders withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public PutObjectHeaders withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public PutObjectHeaders withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public PutObjectHeaders withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public PutObjectHeaders withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public PutObjectHeaders withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public PutObjectHeaders withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    /**
     * Indicates the storage class of a &lt;code&gt;Put&lt;/code&gt; request. Defaults to high-performance temporal storage class, and objects are persisted into durable storage shortly after being received.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-amz-storage-class")
    public PutObjectXAmzStorageClassEnum xAmzStorageClass;
    public PutObjectHeaders withXAmzStorageClass(PutObjectXAmzStorageClassEnum xAmzStorageClass) {
        this.xAmzStorageClass = xAmzStorageClass;
        return this;
    }
    
    /**
     * &lt;p&gt;Indicates the availability of an object while it is still uploading. If the value is set to &lt;code&gt;streaming&lt;/code&gt;, the object is available for downloading after some initial buffering but before the object is uploaded completely. If the value is set to &lt;code&gt;standard&lt;/code&gt;, the object is available for downloading only when it is uploaded completely. The default value for this header is &lt;code&gt;standard&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To use this header, you must also set the HTTP &lt;code&gt;Transfer-Encoding&lt;/code&gt; header to &lt;code&gt;chunked&lt;/code&gt;.&lt;/p&gt;
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-amz-upload-availability")
    public PutObjectXAmzUploadAvailabilityEnum xAmzUploadAvailability;
    public PutObjectHeaders withXAmzUploadAvailability(PutObjectXAmzUploadAvailabilityEnum xAmzUploadAvailability) {
        this.xAmzUploadAvailability = xAmzUploadAvailability;
        return this;
    }
    
}
