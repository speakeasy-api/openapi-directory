"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2inspecttemplate as shared_googleprivacydlpv2inspecttemplate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2ListInspectTemplatesResponse:
    r"""Response message for ListInspectTemplates."""
    
    inspect_templates: Optional[list[shared_googleprivacydlpv2inspecttemplate.GooglePrivacyDlpV2InspectTemplate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inspectTemplates'), 'exclude': lambda f: f is None }})
    r"""List of inspectTemplates, up to page_size in ListInspectTemplatesRequest."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""If the next page is available then the next page token to be used in following ListInspectTemplates request."""  
    