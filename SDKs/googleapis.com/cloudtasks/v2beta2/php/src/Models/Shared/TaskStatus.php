<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TaskStatus - Status of the task.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TaskStatus
{
    /**
     * Output only. The number of attempts dispatched. This count includes attempts which have been dispatched but haven't received a response.
     * 
     * @var ?int $attemptDispatchCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('attemptDispatchCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $attemptDispatchCount = null;
    
    /**
     * Output only. The number of attempts which have received a response. This field is not calculated for pull tasks.
     * 
     * @var ?int $attemptResponseCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('attemptResponseCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $attemptResponseCount = null;
    
    /**
     * The status of a task attempt.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AttemptStatus $firstAttemptStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('firstAttemptStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AttemptStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AttemptStatus $firstAttemptStatus = null;
    
    /**
     * The status of a task attempt.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AttemptStatus $lastAttemptStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastAttemptStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AttemptStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AttemptStatus $lastAttemptStatus = null;
    
	public function __construct()
	{
		$this->attemptDispatchCount = null;
		$this->attemptResponseCount = null;
		$this->firstAttemptStatus = null;
		$this->lastAttemptStatus = null;
	}
}
