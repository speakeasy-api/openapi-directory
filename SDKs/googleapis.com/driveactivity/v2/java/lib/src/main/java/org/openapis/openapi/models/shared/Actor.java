/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Actor - The actor of a Drive activity.
 */
public class Actor {
    /**
     * Empty message representing an administrator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("administrator")
    public java.util.Map<String, Object> administrator;
    public Actor withAdministrator(java.util.Map<String, Object> administrator) {
        this.administrator = administrator;
        return this;
    }
    
    /**
     * Empty message representing an anonymous user or indicating the authenticated user should be anonymized.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("anonymous")
    public java.util.Map<String, Object> anonymous;
    public Actor withAnonymous(java.util.Map<String, Object> anonymous) {
        this.anonymous = anonymous;
        return this;
    }
    
    /**
     * Information about an impersonation, where an admin acts on behalf of an end user. Information about the acting admin is not currently available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("impersonation")
    public Impersonation impersonation;
    public Actor withImpersonation(Impersonation impersonation) {
        this.impersonation = impersonation;
        return this;
    }
    
    /**
     * Event triggered by system operations instead of end users.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("system")
    public SystemEvent system;
    public Actor withSystem(SystemEvent system) {
        this.system = system;
        return this;
    }
    
    /**
     * Information about an end user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public User user;
    public Actor withUser(User user) {
        this.user = user;
        return this;
    }
    
}
