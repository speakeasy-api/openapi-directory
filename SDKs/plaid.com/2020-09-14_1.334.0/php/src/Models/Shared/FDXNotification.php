<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FDXNotification - Provides the base fields of a notification. Clients will read the `type` property to determine the expected notification payload
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FDXNotification
{
    /**
     * Category of Notification
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FDXNotificationCategoryEnum $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FDXNotificationCategoryEnum>')]
    public FDXNotificationCategoryEnum $category;
    
    /**
     * Id of notification
     * 
     * @var string $notificationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('notificationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $notificationId;
    
    /**
     * Custom key-value pairs payload for a notification
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FDXNotificationPayload $notificationPayload
     */
	#[\JMS\Serializer\Annotation\SerializedName('notificationPayload')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FDXNotificationPayload')]
    public FDXNotificationPayload $notificationPayload;
    
    /**
     * Priority of notification
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FDXNotificationPriorityEnum $priority
     */
	#[\JMS\Serializer\Annotation\SerializedName('priority')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FDXNotificationPriorityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FDXNotificationPriorityEnum $priority = null;
    
    /**
     * FDX Participant - an entity or person that is a part of a FDX API transaction
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FDXParty $publisher
     */
	#[\JMS\Serializer\Annotation\SerializedName('publisher')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FDXParty')]
    public FDXParty $publisher;
    
    /**
     * ISO 8601 date-time in format 'YYYY-MM-DDThh:mm:ss.nnn[Z|[+|-]hh:mm]' according to [IETF RFC3339](https://xml2rfc.tools.ietf.org/public/rfc/html/rfc3339.html#anchor14)
     * 
     * @var \DateTime $sentOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('sentOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $sentOn;
    
    /**
     * Severity level of notification
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FDXNotificationSeverityEnum $severity
     */
	#[\JMS\Serializer\Annotation\SerializedName('severity')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FDXNotificationSeverityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FDXNotificationSeverityEnum $severity = null;
    
    /**
     * FDX Participant - an entity or person that is a part of a FDX API transaction
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FDXParty $subscriber
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriber')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FDXParty')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FDXParty $subscriber = null;
    
    /**
     * Type of Notification
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FDXNotificationTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FDXNotificationTypeEnum>')]
    public FDXNotificationTypeEnum $type;
    
    /**
     * REST application constraint (Hypermedia As The Engine Of Application State)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FDXHateoasLink $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FDXHateoasLink')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FDXHateoasLink $url = null;
    
	public function __construct()
	{
		$this->category = \OpenAPI\OpenAPI\Models\Shared\FDXNotificationCategoryEnum::SECURITY;
		$this->notificationId = "";
		$this->notificationPayload = new \OpenAPI\OpenAPI\Models\Shared\FDXNotificationPayload();
		$this->priority = null;
		$this->publisher = new \OpenAPI\OpenAPI\Models\Shared\FDXParty();
		$this->sentOn = new \DateTime();
		$this->severity = null;
		$this->subscriber = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\FDXNotificationTypeEnum::CONSENT_REVOKED;
		$this->url = null;
	}
}
