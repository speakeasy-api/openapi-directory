/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleAnalyticsAdminV1alphaAccessFilterExpression - Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
 */
public class GoogleAnalyticsAdminV1alphaAccessFilterExpression {
    /**
     * An expression to filter dimension or metric values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessFilter")
    public GoogleAnalyticsAdminV1alphaAccessFilter accessFilter;

    public GoogleAnalyticsAdminV1alphaAccessFilterExpression withAccessFilter(GoogleAnalyticsAdminV1alphaAccessFilter accessFilter) {
        this.accessFilter = accessFilter;
        return this;
    }
    
    /**
     * A list of filter expressions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("andGroup")
    public GoogleAnalyticsAdminV1alphaAccessFilterExpressionList andGroup;

    public GoogleAnalyticsAdminV1alphaAccessFilterExpression withAndGroup(GoogleAnalyticsAdminV1alphaAccessFilterExpressionList andGroup) {
        this.andGroup = andGroup;
        return this;
    }
    
    /**
     * Expresses dimension or metric filters. The fields in the same expression need to be either all dimensions or all metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notExpression")
    public GoogleAnalyticsAdminV1alphaAccessFilterExpression notExpression;

    public GoogleAnalyticsAdminV1alphaAccessFilterExpression withNotExpression(GoogleAnalyticsAdminV1alphaAccessFilterExpression notExpression) {
        this.notExpression = notExpression;
        return this;
    }
    
    /**
     * A list of filter expressions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orGroup")
    public GoogleAnalyticsAdminV1alphaAccessFilterExpressionList orGroup;

    public GoogleAnalyticsAdminV1alphaAccessFilterExpression withOrGroup(GoogleAnalyticsAdminV1alphaAccessFilterExpressionList orGroup) {
        this.orGroup = orGroup;
        return this;
    }
    
    public GoogleAnalyticsAdminV1alphaAccessFilterExpression(){}
}
