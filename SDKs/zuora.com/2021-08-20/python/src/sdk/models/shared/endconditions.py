"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class EndConditionsEndDateConditionEnum(str, Enum):
    r"""Condition for the charge to become inactive.
    
    If the value of this field is `Fixed_Period`, the charge is active for a predefined duration based on the value of the `upToPeriodsType` and `upToPeriods` fields.
    
    If the value of this field is `Specific_End_Date`, use the `specificEndDate` field to specify the date when then charge becomes inactive.
    """
    SUBSCRIPTION_END = 'Subscription_End'
    FIXED_PERIOD = 'Fixed_Period'
    SPECIFIC_END_DATE = 'Specific_End_Date'

class EndConditionsUpToPeriodsTypeEnum(str, Enum):
    r"""Unit of time that the charge duration is measured in. Only applicable if the value of the `endDateCondition` field is `Fixed_Period`."""
    BILLING_PERIODS = 'Billing_Periods'
    DAYS = 'Days'
    WEEKS = 'Weeks'
    MONTHS = 'Months'
    YEARS = 'Years'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EndConditions:
    r"""Specifies when a charge becomes inactive."""
    
    end_date_condition: Optional[EndConditionsEndDateConditionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endDateCondition'), 'exclude': lambda f: f is None }})
    r"""Condition for the charge to become inactive.
    
    If the value of this field is `Fixed_Period`, the charge is active for a predefined duration based on the value of the `upToPeriodsType` and `upToPeriods` fields.
    
    If the value of this field is `Specific_End_Date`, use the `specificEndDate` field to specify the date when then charge becomes inactive.
    """  
    specific_end_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('specificEndDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date in YYYY-MM-DD format. Only applicable if the value of the `endDateCondition` field is `Specific_End_Date`."""  
    up_to_periods: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upToPeriods'), 'exclude': lambda f: f is None }})
    r"""Duration of the charge in billing periods, days, weeks, months, or years, depending on the value of the `upToPeriodsType` field. Only applicable if the value of the `endDateCondition` field is `Fixed_Period`."""  
    up_to_periods_type: Optional[EndConditionsUpToPeriodsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('upToPeriodsType'), 'exclude': lambda f: f is None }})
    r"""Unit of time that the charge duration is measured in. Only applicable if the value of the `endDateCondition` field is `Fixed_Period`."""  
    