<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TitleAsset - The TitleAsset clip type lets you create video titles from a text string and apply styling and positioning.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TitleAsset
{
    /**
     * Apply a background color behind the text. Set the text color using hexadecimal color notation. Transparency is supported by setting the first two characters of the hex string (opposite to HTML),  i.e. #80ffffff will be white with 50% transparency. Omit to use transparent background.
     * 
     * @var ?string $background
     */
	#[\JMS\Serializer\Annotation\SerializedName('background')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $background = null;
    
    /**
     * Set the text color using hexadecimal color notation. Transparency is supported by setting the first two characters of the hex string (opposite to HTML),  i.e. #80ffffff will be white with  50% transparency.
     * 
     * @var ?string $color
     */
	#[\JMS\Serializer\Annotation\SerializedName('color')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $color = null;
    
    /**
     * Offsets the position of an asset horizontally or vertically by a relative distance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Offset $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Offset')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Offset $offset = null;
    
    /**
     * Place the title in one of nine predefined positions of the viewport. <ul>
     * 
     *   <li>`top` - top (center)</li>
     *   <li>`topRight` - top right</li>
     *   <li>`right` - right (center)</li>
     *   <li>`bottomRight` - bottom right</li>
     *   <li>`bottom` - bottom (center)</li>
     *   <li>`bottomLeft` - bottom left</li>
     *   <li>`left` - left (center)</li>
     *   <li>`topLeft` - top left</li>
     *   <li>`center` - center</li>
     * </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TitleAssetPositionEnum $position
     */
	#[\JMS\Serializer\Annotation\SerializedName('position')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TitleAssetPositionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TitleAssetPositionEnum $position = null;
    
    /**
     * Set the relative size of the text using predefined sizes from xx-small to xx-large. <ul>
     * 
     *   <li>`xx-small`</li>
     *   <li>`x-small`</li>
     *   <li>`small`</li>
     *   <li>`medium`</li>
     *   <li>`large`</li>
     *   <li>`x-large`</li>
     *   <li>`xx-large`</li>
     * </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TitleAssetSizeEnum $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TitleAssetSizeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TitleAssetSizeEnum $size = null;
    
    /**
     * Uses a preset to apply font properties and styling to the title. <ul>
     * 
     *   <li>`minimal`</li>
     *   <li>`blockbuster`</li>
     *   <li>`vogue`</li>
     *   <li>`sketchy`</li>
     *   <li>`skinny`</li>
     *   <li>`chunk`</li>
     *   <li>`chunkLight`</li>
     *   <li>`marker`</li>
     *   <li>`future`</li>
     *   <li>`subtitle`</li>
     * </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TitleAssetStyleEnum $style
     */
	#[\JMS\Serializer\Annotation\SerializedName('style')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TitleAssetStyleEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TitleAssetStyleEnum $style = null;
    
    /**
     * The title text string - i.e. "My Title".
     * 
     * @var string $text
     */
	#[\JMS\Serializer\Annotation\SerializedName('text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $text;
    
    /**
     * The type of asset - set to `title` for titles.
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->background = null;
		$this->color = null;
		$this->offset = null;
		$this->position = null;
		$this->size = null;
		$this->style = null;
		$this->text = "";
		$this->type = "";
	}
}
