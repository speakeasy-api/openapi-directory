// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type TagAPIGetByNamePathParams struct {
	// Tag name (required).
	Name string `pathParam:"style=simple,explode=false,name=name"`
}

// TagAPIGetByNameFieldsEnum - List of optional fields (optional).
type TagAPIGetByNameFieldsEnum string

const (
	TagAPIGetByNameFieldsEnumNone                  TagAPIGetByNameFieldsEnum = "None"
	TagAPIGetByNameFieldsEnumAdditionalNames       TagAPIGetByNameFieldsEnum = "AdditionalNames"
	TagAPIGetByNameFieldsEnumAliasedTo             TagAPIGetByNameFieldsEnum = "AliasedTo"
	TagAPIGetByNameFieldsEnumDescription           TagAPIGetByNameFieldsEnum = "Description"
	TagAPIGetByNameFieldsEnumMainPicture           TagAPIGetByNameFieldsEnum = "MainPicture"
	TagAPIGetByNameFieldsEnumNames                 TagAPIGetByNameFieldsEnum = "Names"
	TagAPIGetByNameFieldsEnumParent                TagAPIGetByNameFieldsEnum = "Parent"
	TagAPIGetByNameFieldsEnumRelatedTags           TagAPIGetByNameFieldsEnum = "RelatedTags"
	TagAPIGetByNameFieldsEnumTranslatedDescription TagAPIGetByNameFieldsEnum = "TranslatedDescription"
	TagAPIGetByNameFieldsEnumWebLinks              TagAPIGetByNameFieldsEnum = "WebLinks"
)

func (e *TagAPIGetByNameFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "AliasedTo":
		fallthrough
	case "Description":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "Parent":
		fallthrough
	case "RelatedTags":
		fallthrough
	case "TranslatedDescription":
		fallthrough
	case "WebLinks":
		*e = TagAPIGetByNameFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagAPIGetByNameFieldsEnum: %s", s)
	}
}

// TagAPIGetByNameLangEnum - Content language preference (optional).
type TagAPIGetByNameLangEnum string

const (
	TagAPIGetByNameLangEnumDefault  TagAPIGetByNameLangEnum = "Default"
	TagAPIGetByNameLangEnumJapanese TagAPIGetByNameLangEnum = "Japanese"
	TagAPIGetByNameLangEnumRomaji   TagAPIGetByNameLangEnum = "Romaji"
	TagAPIGetByNameLangEnumEnglish  TagAPIGetByNameLangEnum = "English"
)

func (e *TagAPIGetByNameLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = TagAPIGetByNameLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagAPIGetByNameLangEnum: %s", s)
	}
}

type TagAPIGetByNameQueryParams struct {
	// List of optional fields (optional).
	Fields *TagAPIGetByNameFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Content language preference (optional).
	Lang *TagAPIGetByNameLangEnum `queryParam:"style=form,explode=true,name=lang"`
}

type TagAPIGetByNameRequest struct {
	PathParams  TagAPIGetByNamePathParams
	QueryParams TagAPIGetByNameQueryParams
}

type TagAPIGetByNameResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TagForAPIContract *shared.TagForAPIContract
}
