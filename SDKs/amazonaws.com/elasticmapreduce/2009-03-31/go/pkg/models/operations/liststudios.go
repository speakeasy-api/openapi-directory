// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListStudiosXAmzTargetEnum
type ListStudiosXAmzTargetEnum string

const (
	ListStudiosXAmzTargetEnumElasticMapReduceListStudios ListStudiosXAmzTargetEnum = "ElasticMapReduce.ListStudios"
)

func (e ListStudiosXAmzTargetEnum) ToPointer() *ListStudiosXAmzTargetEnum {
	return &e
}

func (e *ListStudiosXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ElasticMapReduce.ListStudios":
		*e = ListStudiosXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListStudiosXAmzTargetEnum: %v", v)
	}
}

type ListStudiosRequest struct {
	ListStudiosInput shared.ListStudiosInput `request:"mediaType=application/json"`
	// Pagination token
	Marker            *string                   `queryParam:"style=form,explode=true,name=Marker"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListStudiosXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListStudiosResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListStudiosOutput *shared.ListStudiosOutput
	StatusCode        int
	RawResponse       *http.Response
}
