// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUsersUserTypeEnum
type GetUsersUserTypeEnum string

const (
	GetUsersUserTypeEnumVendor GetUsersUserTypeEnum = "vendor"
	GetUsersUserTypeEnumAll    GetUsersUserTypeEnum = "all"
)

func (e GetUsersUserTypeEnum) ToPointer() *GetUsersUserTypeEnum {
	return &e
}

func (e *GetUsersUserTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vendor":
		fallthrough
	case "all":
		*e = GetUsersUserTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUsersUserTypeEnum: %v", v)
	}
}

type GetUsersRequest struct {
	Email    *string               `queryParam:"style=form,explode=true,name=email"`
	Page     *int64                `queryParam:"style=form,explode=true,name=page"`
	PerPage  *int64                `queryParam:"style=form,explode=true,name=per_page"`
	Search   *string               `queryParam:"style=form,explode=true,name=search"`
	UserType *GetUsersUserTypeEnum `queryParam:"style=form,explode=true,name=user_type"`
}

type GetUsersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// User list
	UserList *shared.UserList
}
