// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// JobStateEnum - Output only. The current state of the job.
type JobStateEnum string

const (
	JobStateEnumProcessingStateUnspecified JobStateEnum = "PROCESSING_STATE_UNSPECIFIED"
	JobStateEnumPending                    JobStateEnum = "PENDING"
	JobStateEnumRunning                    JobStateEnum = "RUNNING"
	JobStateEnumSucceeded                  JobStateEnum = "SUCCEEDED"
	JobStateEnumFailed                     JobStateEnum = "FAILED"
)

func (e JobStateEnum) ToPointer() *JobStateEnum {
	return &e
}

func (e *JobStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROCESSING_STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		*e = JobStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobStateEnum: %v", v)
	}
}

// Job - Transcoding job resource.
type Job struct {
	// Job configuration
	Config *JobConfig `json:"config,omitempty"`
	// Output only. The time the job was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The time the transcoding finished.
	EndTime *string `json:"endTime,omitempty"`
	// Output only. List of failure details. This property may contain additional information about the failure when `failure_reason` is present. *Note*: This feature is not yet available.
	FailureDetails []FailureDetail `json:"failureDetails,omitempty"`
	// Output only. A description of the reason for the failure. This property is always present when `state` is `FAILED`.
	FailureReason *string `json:"failureReason,omitempty"`
	// Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`).
	InputURI *string `json:"inputUri,omitempty"`
	// The resource name of the job. Format: `projects/{project}/locations/{location}/jobs/{job}`
	Name *string `json:"name,omitempty"`
	// The origin URI.
	OriginURI *OriginURI `json:"originUri,omitempty"`
	// Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`.
	OutputURI *string `json:"outputUri,omitempty"`
	// Specify the priority of the job. Enter a value between 0 and 100, where 0 is the lowest priority and 100 is the highest priority. The default is 0.
	Priority *int `json:"priority,omitempty"`
	// Estimated fractional progress for each step, from `0` to `1`.
	Progress *Progress `json:"progress,omitempty"`
	// Output only. The time the transcoding started.
	StartTime *string `json:"startTime,omitempty"`
	// Output only. The current state of the job.
	State *JobStateEnum `json:"state,omitempty"`
	// Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`. Preset Transcoder templates: - `preset/{preset_id}` - User defined JobTemplate: `{job_template_id}`
	TemplateID *string `json:"templateId,omitempty"`
	// Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.
	TTLAfterCompletionDays *int `json:"ttlAfterCompletionDays,omitempty"`
}

// JobInput - Transcoding job resource.
type JobInput struct {
	// Job configuration
	Config *JobConfig `json:"config,omitempty"`
	// Input only. Specify the `input_uri` to populate empty `uri` fields in each element of `Job.config.inputs` or `JobTemplate.config.inputs` when using template. URI of the media. Input files must be at least 5 seconds in duration and stored in Cloud Storage (for example, `gs://bucket/inputs/file.mp4`).
	InputURI *string `json:"inputUri,omitempty"`
	// The resource name of the job. Format: `projects/{project}/locations/{location}/jobs/{job}`
	Name *string `json:"name,omitempty"`
	// The origin URI.
	OriginURI *OriginURI `json:"originUri,omitempty"`
	// Input only. Specify the `output_uri` to populate an empty `Job.config.output.uri` or `JobTemplate.config.output.uri` when using template. URI for the output file(s). For example, `gs://my-bucket/outputs/`.
	OutputURI *string `json:"outputUri,omitempty"`
	// Specify the priority of the job. Enter a value between 0 and 100, where 0 is the lowest priority and 100 is the highest priority. The default is 0.
	Priority *int `json:"priority,omitempty"`
	// Estimated fractional progress for each step, from `0` to `1`.
	Progress *Progress `json:"progress,omitempty"`
	// Input only. Specify the `template_id` to use for populating `Job.config`. The default is `preset/web-hd`. Preset Transcoder templates: - `preset/{preset_id}` - User defined JobTemplate: `{job_template_id}`
	TemplateID *string `json:"templateId,omitempty"`
	// Job time to live value in days, which will be effective after job completion. Job should be deleted automatically after the given TTL. Enter a value between 1 and 90. The default is 30.
	TTLAfterCompletionDays *int `json:"ttlAfterCompletionDays,omitempty"`
}
