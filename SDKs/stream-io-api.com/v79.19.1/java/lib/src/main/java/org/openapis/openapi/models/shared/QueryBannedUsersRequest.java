/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class QueryBannedUsersRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at_after")
    public OffsetDateTime createdAtAfter;
    public QueryBannedUsersRequest withCreatedAtAfter(OffsetDateTime createdAtAfter) {
        this.createdAtAfter = createdAtAfter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at_after_or_equal")
    public OffsetDateTime createdAtAfterOrEqual;
    public QueryBannedUsersRequest withCreatedAtAfterOrEqual(OffsetDateTime createdAtAfterOrEqual) {
        this.createdAtAfterOrEqual = createdAtAfterOrEqual;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at_before")
    public OffsetDateTime createdAtBefore;
    public QueryBannedUsersRequest withCreatedAtBefore(OffsetDateTime createdAtBefore) {
        this.createdAtBefore = createdAtBefore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at_before_or_equal")
    public OffsetDateTime createdAtBeforeOrEqual;
    public QueryBannedUsersRequest withCreatedAtBeforeOrEqual(OffsetDateTime createdAtBeforeOrEqual) {
        this.createdAtBeforeOrEqual = createdAtBeforeOrEqual;
        return this;
    }
    
    @JsonProperty("filter_conditions")
    public java.util.Map<String, Object> filterConditions;
    public QueryBannedUsersRequest withFilterConditions(java.util.Map<String, Object> filterConditions) {
        this.filterConditions = filterConditions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Double limit;
    public QueryBannedUsersRequest withLimit(Double limit) {
        this.limit = limit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Double offset;
    public QueryBannedUsersRequest withOffset(Double offset) {
        this.offset = offset;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sort")
    public SortParam[] sort;
    public QueryBannedUsersRequest withSort(SortParam[] sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Represents chat user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public java.util.Map<String, Object> user;
    public QueryBannedUsersRequest withUser(java.util.Map<String, Object> user) {
        this.user = user;
        return this;
    }
    
    /**
     * **Server-side only**. User ID which server acts upon
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public QueryBannedUsersRequest withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
