/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Standing order information
 */
export class SandboxStandingOrder extends SpeakeasyBase {
  /**
   * Standing order amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * Standing order short description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Standing order final collection date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finalPaymentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  finalPaymentDate?: Date;

  /**
   * Standing order first collection date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstPaymentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstPaymentDate?: Date;

  /**
   * Standing order frequency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  frequency: string;

  /**
   * Standing order last executed payment date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastPaymentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastPaymentDate?: Date;

  /**
   * Standing order next collection date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPaymentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextPaymentDate?: Date;

  /**
   * Standing order status (Active, Inactive)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
