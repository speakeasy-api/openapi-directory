/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FilterInput - JSON template for an Analytics account filter.
 */
public class FilterInput {
    /**
     * Account ID to which this filter belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public FilterInput withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Details for the filter of the type ADVANCED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advancedDetails")
    public FilterAdvancedDetails advancedDetails;

    public FilterInput withAdvancedDetails(FilterAdvancedDetails advancedDetails) {
        this.advancedDetails = advancedDetails;
        return this;
    }
    
    /**
     * JSON template for an Analytics filter expression.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludeDetails")
    public FilterExpression excludeDetails;

    public FilterInput withExcludeDetails(FilterExpression excludeDetails) {
        this.excludeDetails = excludeDetails;
        return this;
    }
    
    /**
     * Filter ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public FilterInput withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * JSON template for an Analytics filter expression.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeDetails")
    public FilterExpression includeDetails;

    public FilterInput withIncludeDetails(FilterExpression includeDetails) {
        this.includeDetails = includeDetails;
        return this;
    }
    
    /**
     * Details for the filter of the type LOWER.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lowercaseDetails")
    public FilterLowercaseDetails lowercaseDetails;

    public FilterInput withLowercaseDetails(FilterLowercaseDetails lowercaseDetails) {
        this.lowercaseDetails = lowercaseDetails;
        return this;
    }
    
    /**
     * Name of this filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public FilterInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Parent link for this filter. Points to the account to which this filter belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentLink")
    public FilterParentLink parentLink;

    public FilterInput withParentLink(FilterParentLink parentLink) {
        this.parentLink = parentLink;
        return this;
    }
    
    /**
     * Details for the filter of the type SEARCH_AND_REPLACE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchAndReplaceDetails")
    public FilterSearchAndReplaceDetails searchAndReplaceDetails;

    public FilterInput withSearchAndReplaceDetails(FilterSearchAndReplaceDetails searchAndReplaceDetails) {
        this.searchAndReplaceDetails = searchAndReplaceDetails;
        return this;
    }
    
    /**
     * Type of this filter. Possible values are INCLUDE, EXCLUDE, LOWERCASE, UPPERCASE, SEARCH_AND_REPLACE and ADVANCED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public FilterInput withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Details for the filter of the type UPPER.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uppercaseDetails")
    public FilterUppercaseDetails uppercaseDetails;

    public FilterInput withUppercaseDetails(FilterUppercaseDetails uppercaseDetails) {
        this.uppercaseDetails = uppercaseDetails;
        return this;
    }
    
    public FilterInput(){}
}
