"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleSecuritySafebrowsingV4ThreatHitThreatSourceTypeEnum(str, Enum):
    r"""The type of source reported."""
    THREAT_SOURCE_TYPE_UNSPECIFIED = 'THREAT_SOURCE_TYPE_UNSPECIFIED'
    MATCHING_URL = 'MATCHING_URL'
    TAB_URL = 'TAB_URL'
    TAB_REDIRECT = 'TAB_REDIRECT'
    TAB_RESOURCE = 'TAB_RESOURCE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleSecuritySafebrowsingV4ThreatHitThreatSource:
    r"""A single resource related to a threat hit."""
    
    referrer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referrer'), 'exclude': lambda f: f is None }})
    r"""Referrer of the resource. Only set if the referrer is available."""  
    remote_ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remoteIp'), 'exclude': lambda f: f is None }})
    r"""The remote IP of the resource in ASCII format. Either IPv4 or IPv6."""  
    type: Optional[GoogleSecuritySafebrowsingV4ThreatHitThreatSourceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of source reported."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The URL of the resource."""  
    