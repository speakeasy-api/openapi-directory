// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RealtimebiddingBuyersUserListsGetSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// RealtimebiddingBuyersUserListsGetViewEnum - Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as "FULL".
type RealtimebiddingBuyersUserListsGetViewEnum string

const (
	RealtimebiddingBuyersUserListsGetViewEnumCreativeViewUnspecified RealtimebiddingBuyersUserListsGetViewEnum = "CREATIVE_VIEW_UNSPECIFIED"
	RealtimebiddingBuyersUserListsGetViewEnumServingDecisionOnly     RealtimebiddingBuyersUserListsGetViewEnum = "SERVING_DECISION_ONLY"
	RealtimebiddingBuyersUserListsGetViewEnumFull                    RealtimebiddingBuyersUserListsGetViewEnum = "FULL"
)

func (e RealtimebiddingBuyersUserListsGetViewEnum) ToPointer() *RealtimebiddingBuyersUserListsGetViewEnum {
	return &e
}

func (e *RealtimebiddingBuyersUserListsGetViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATIVE_VIEW_UNSPECIFIED":
		fallthrough
	case "SERVING_DECISION_ONLY":
		fallthrough
	case "FULL":
		*e = RealtimebiddingBuyersUserListsGetViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RealtimebiddingBuyersUserListsGetViewEnum: %v", v)
	}
}

type RealtimebiddingBuyersUserListsGetRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Required. The name of the user list to be retrieved. See UserList.name.
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as "FULL".
	View *RealtimebiddingBuyersUserListsGetViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type RealtimebiddingBuyersUserListsGetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	UserList *shared.UserList
}
