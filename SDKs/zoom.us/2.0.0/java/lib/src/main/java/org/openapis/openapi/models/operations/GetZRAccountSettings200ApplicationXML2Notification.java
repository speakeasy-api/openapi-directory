/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



/**
 * GetZRAccountSettings200ApplicationXML2Notification - [Notifications Settings](https://support.zoom.us/hc/en-us/articles/205394099-Zoom-Room-Alerts#h_b430b5f2-5150-4522-9c96-c77f22ab70bc) includes the circumstances in which the room sends an email alert to the support team to notify them of a potentially urgent issue. These issues can affect the operation of the room, but do not display on the TV screen. The email alert is sent to the email address specified in the Notification Email Recipients section. 
 */
public class GetZRAccountSettings200ApplicationXML2Notification {
    /**
     * Send an alert when the audio echo test result meets usability threshold.
     */
    
    public Boolean audioMeetUsabilityThreshold;
    public GetZRAccountSettings200ApplicationXML2Notification withAudioMeetUsabilityThreshold(Boolean audioMeetUsabilityThreshold) {
        this.audioMeetUsabilityThreshold = audioMeetUsabilityThreshold;
        return this;
    }
    
    /**
     * Send an alert when the audio echo test result does not meet usability threshold.
     */
    
    public Boolean audioNotMeetUsabilityThreshold;
    public GetZRAccountSettings200ApplicationXML2Notification withAudioNotMeetUsabilityThreshold(Boolean audioNotMeetUsabilityThreshold) {
        this.audioNotMeetUsabilityThreshold = audioNotMeetUsabilityThreshold;
        return this;
    }
    
    /**
     * Send an alert when the battery starts charging.
     */
    
    public Boolean batteryIsCharging;
    public GetZRAccountSettings200ApplicationXML2Notification withBatteryIsCharging(Boolean batteryIsCharging) {
        this.batteryIsCharging = batteryIsCharging;
        return this;
    }
    
    /**
     * Send an alert when the battery of the controller or the scheduling display is low (at 20%) and is not being charged.
     */
    
    public Boolean batteryLowAndNotCharging;
    public GetZRAccountSettings200ApplicationXML2Notification withBatteryLowAndNotCharging(Boolean batteryLowAndNotCharging) {
        this.batteryLowAndNotCharging = batteryLowAndNotCharging;
        return this;
    }
    
    /**
     * Specify a percentage so that an alert is sent when the battery is less than the {battery_percentage} that you specified.
     */
    
    public String batteryPercentage;
    public GetZRAccountSettings200ApplicationXML2Notification withBatteryPercentage(String batteryPercentage) {
        this.batteryPercentage = batteryPercentage;
        return this;
    }
    
    /**
     * Send an alert when the connection to the Controller or Scheduling Display cannot be detected.
     */
    
    public Boolean controllerSchedulingDisconnected;
    public GetZRAccountSettings200ApplicationXML2Notification withControllerSchedulingDisconnected(Boolean controllerSchedulingDisconnected) {
        this.controllerSchedulingDisconnected = controllerSchedulingDisconnected;
        return this;
    }
    
    /**
     * Send an alert when the Controller or Scheduling Display can be detected again.
     */
    
    public Boolean controllerSchedulingReconnected;
    public GetZRAccountSettings200ApplicationXML2Notification withControllerSchedulingReconnected(Boolean controllerSchedulingReconnected) {
        this.controllerSchedulingReconnected = controllerSchedulingReconnected;
        return this;
    }
    
    /**
     * Send an alert when CPU usage is above 90%.
     */
    
    public Boolean cpuUsageHighDetected;
    public GetZRAccountSettings200ApplicationXML2Notification withCpuUsageHighDetected(Boolean cpuUsageHighDetected) {
        this.cpuUsageHighDetected = cpuUsageHighDetected;
        return this;
    }
    
    /**
     * Send an alert when the mic, speaker or camera is disconnected in the Zoom Room.
     */
    
    public Boolean micSpeakerCameraDisconnected;
    public GetZRAccountSettings200ApplicationXML2Notification withMicSpeakerCameraDisconnected(Boolean micSpeakerCameraDisconnected) {
        this.micSpeakerCameraDisconnected = micSpeakerCameraDisconnected;
        return this;
    }
    
    /**
     * Send an alert when the mic, speaker or camera is reconnected.
     */
    
    public Boolean micSpeakerCameraReconnected;
    public GetZRAccountSettings200ApplicationXML2Notification withMicSpeakerCameraReconnected(Boolean micSpeakerCameraReconnected) {
        this.micSpeakerCameraReconnected = micSpeakerCameraReconnected;
        return this;
    }
    
    /**
     * Send an alert when low bandwidth network is detected
     */
    
    public Boolean networkUnstableDetected;
    public GetZRAccountSettings200ApplicationXML2Notification withNetworkUnstableDetected(Boolean networkUnstableDetected) {
        this.networkUnstableDetected = networkUnstableDetected;
        return this;
    }
    
    /**
     * Send an alert when SIP registration stops working. 
     */
    
    public Boolean sipRegistrationFailed;
    public GetZRAccountSettings200ApplicationXML2Notification withSipRegistrationFailed(Boolean sipRegistrationFailed) {
        this.sipRegistrationFailed = sipRegistrationFailed;
        return this;
    }
    
    /**
     * Send an alert after the SIP registration is re-enabled.
     */
    
    public Boolean sipRegistrationReEnabled;
    public GetZRAccountSettings200ApplicationXML2Notification withSipRegistrationReEnabled(Boolean sipRegistrationReEnabled) {
        this.sipRegistrationReEnabled = sipRegistrationReEnabled;
        return this;
    }
    
    /**
     * Send an alert when the Zoom Room is online after previously being offline.
     */
    
    public Boolean zoomRoomComeBackOnline;
    public GetZRAccountSettings200ApplicationXML2Notification withZoomRoomComeBackOnline(Boolean zoomRoomComeBackOnline) {
        this.zoomRoomComeBackOnline = zoomRoomComeBackOnline;
        return this;
    }
    
    /**
     * Send an alert when the TV display is disconnected
     */
    
    public Boolean zoomRoomDisplayDisconnected;
    public GetZRAccountSettings200ApplicationXML2Notification withZoomRoomDisplayDisconnected(Boolean zoomRoomDisplayDisconnected) {
        this.zoomRoomDisplayDisconnected = zoomRoomDisplayDisconnected;
        return this;
    }
    
    /**
     * Send an alert when the machine hosting the Zoom Room application has a network issue or cannot connect with the Controller.
     */
    
    public Boolean zoomRoomOffline;
    public GetZRAccountSettings200ApplicationXML2Notification withZoomRoomOffline(Boolean zoomRoomOffline) {
        this.zoomRoomOffline = zoomRoomOffline;
        return this;
    }
    
}
