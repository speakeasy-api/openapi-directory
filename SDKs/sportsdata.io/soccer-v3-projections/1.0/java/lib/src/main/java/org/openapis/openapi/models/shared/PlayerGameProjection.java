/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlayerGameProjection {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Assists")
    public Double assists;

    public PlayerGameProjection withAssists(Double assists) {
        this.assists = assists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedShots")
    public Double blockedShots;

    public PlayerGameProjection withBlockedShots(Double blockedShots) {
        this.blockedShots = blockedShots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Captain")
    public Boolean captain;

    public PlayerGameProjection withCaptain(Boolean captain) {
        this.captain = captain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CornersWon")
    public Double cornersWon;

    public PlayerGameProjection withCornersWon(Double cornersWon) {
        this.cornersWon = cornersWon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Crosses")
    public Double crosses;

    public PlayerGameProjection withCrosses(Double crosses) {
        this.crosses = crosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;

    public PlayerGameProjection withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;

    public PlayerGameProjection withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefenderCleanSheets")
    public Double defenderCleanSheets;

    public PlayerGameProjection withDefenderCleanSheets(Double defenderCleanSheets) {
        this.defenderCleanSheets = defenderCleanSheets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsPosition")
    public String draftKingsPosition;

    public PlayerGameProjection withDraftKingsPosition(String draftKingsPosition) {
        this.draftKingsPosition = draftKingsPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsSalary")
    public Long draftKingsSalary;

    public PlayerGameProjection withDraftKingsSalary(Long draftKingsSalary) {
        this.draftKingsSalary = draftKingsSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelPosition")
    public String fanDuelPosition;

    public PlayerGameProjection withFanDuelPosition(String fanDuelPosition) {
        this.fanDuelPosition = fanDuelPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelSalary")
    public Long fanDuelSalary;

    public PlayerGameProjection withFanDuelSalary(Long fanDuelSalary) {
        this.fanDuelSalary = fanDuelSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;

    public PlayerGameProjection withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;

    public PlayerGameProjection withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;

    public PlayerGameProjection withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsMondogoal")
    public Double fantasyPointsMondogoal;

    public PlayerGameProjection withFantasyPointsMondogoal(Double fantasyPointsMondogoal) {
        this.fantasyPointsMondogoal = fantasyPointsMondogoal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;

    public PlayerGameProjection withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Fouled")
    public Double fouled;

    public PlayerGameProjection withFouled(Double fouled) {
        this.fouled = fouled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Fouls")
    public Double fouls;

    public PlayerGameProjection withFouls(Double fouls) {
        this.fouls = fouls;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameId")
    public Long gameId;

    public PlayerGameProjection withGameId(Long gameId) {
        this.gameId = gameId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;

    public PlayerGameProjection withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameId")
    public Long globalGameId;

    public PlayerGameProjection withGlobalGameId(Long globalGameId) {
        this.globalGameId = globalGameId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalOpponentId")
    public Long globalOpponentId;

    public PlayerGameProjection withGlobalOpponentId(Long globalOpponentId) {
        this.globalOpponentId = globalOpponentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamId")
    public Long globalTeamId;

    public PlayerGameProjection withGlobalTeamId(Long globalTeamId) {
        this.globalTeamId = globalTeamId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperCleanSheets")
    public Double goalkeeperCleanSheets;

    public PlayerGameProjection withGoalkeeperCleanSheets(Double goalkeeperCleanSheets) {
        this.goalkeeperCleanSheets = goalkeeperCleanSheets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperGoalsAgainst")
    public Double goalkeeperGoalsAgainst;

    public PlayerGameProjection withGoalkeeperGoalsAgainst(Double goalkeeperGoalsAgainst) {
        this.goalkeeperGoalsAgainst = goalkeeperGoalsAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperSaves")
    public Double goalkeeperSaves;

    public PlayerGameProjection withGoalkeeperSaves(Double goalkeeperSaves) {
        this.goalkeeperSaves = goalkeeperSaves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperSingleGoalAgainst")
    public Double goalkeeperSingleGoalAgainst;

    public PlayerGameProjection withGoalkeeperSingleGoalAgainst(Double goalkeeperSingleGoalAgainst) {
        this.goalkeeperSingleGoalAgainst = goalkeeperSingleGoalAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperWins")
    public Double goalkeeperWins;

    public PlayerGameProjection withGoalkeeperWins(Double goalkeeperWins) {
        this.goalkeeperWins = goalkeeperWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Goals")
    public Double goals;

    public PlayerGameProjection withGoals(Double goals) {
        this.goals = goals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeOrAway")
    public String homeOrAway;

    public PlayerGameProjection withHomeOrAway(String homeOrAway) {
        this.homeOrAway = homeOrAway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InjuryBodyPart")
    public String injuryBodyPart;

    public PlayerGameProjection withInjuryBodyPart(String injuryBodyPart) {
        this.injuryBodyPart = injuryBodyPart;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InjuryNotes")
    public String injuryNotes;

    public PlayerGameProjection withInjuryNotes(String injuryNotes) {
        this.injuryNotes = injuryNotes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InjuryStartDate")
    public String injuryStartDate;

    public PlayerGameProjection withInjuryStartDate(String injuryStartDate) {
        this.injuryStartDate = injuryStartDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InjuryStatus")
    public String injuryStatus;

    public PlayerGameProjection withInjuryStatus(String injuryStatus) {
        this.injuryStatus = injuryStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Interceptions")
    public Double interceptions;

    public PlayerGameProjection withInterceptions(Double interceptions) {
        this.interceptions = interceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsGameOver")
    public Boolean isGameOver;

    public PlayerGameProjection withIsGameOver(Boolean isGameOver) {
        this.isGameOver = isGameOver;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Jersey")
    public Long jersey;

    public PlayerGameProjection withJersey(Long jersey) {
        this.jersey = jersey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastManTackle")
    public Double lastManTackle;

    public PlayerGameProjection withLastManTackle(Double lastManTackle) {
        this.lastManTackle = lastManTackle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Minutes")
    public Double minutes;

    public PlayerGameProjection withMinutes(Double minutes) {
        this.minutes = minutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MondogoalPosition")
    public String mondogoalPosition;

    public PlayerGameProjection withMondogoalPosition(String mondogoalPosition) {
        this.mondogoalPosition = mondogoalPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MondogoalSalary")
    public Long mondogoalSalary;

    public PlayerGameProjection withMondogoalSalary(Long mondogoalSalary) {
        this.mondogoalSalary = mondogoalSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public PlayerGameProjection withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Offsides")
    public Double offsides;

    public PlayerGameProjection withOffsides(Double offsides) {
        this.offsides = offsides;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;

    public PlayerGameProjection withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentId")
    public Long opponentId;

    public PlayerGameProjection withOpponentId(Long opponentId) {
        this.opponentId = opponentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentScore")
    public Double opponentScore;

    public PlayerGameProjection withOpponentScore(Double opponentScore) {
        this.opponentScore = opponentScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OwnGoals")
    public Double ownGoals;

    public PlayerGameProjection withOwnGoals(Double ownGoals) {
        this.ownGoals = ownGoals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Passes")
    public Double passes;

    public PlayerGameProjection withPasses(Double passes) {
        this.passes = passes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassesCompleted")
    public Double passesCompleted;

    public PlayerGameProjection withPassesCompleted(Double passesCompleted) {
        this.passesCompleted = passesCompleted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltiesConceded")
    public Double penaltiesConceded;

    public PlayerGameProjection withPenaltiesConceded(Double penaltiesConceded) {
        this.penaltiesConceded = penaltiesConceded;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltiesWon")
    public Double penaltiesWon;

    public PlayerGameProjection withPenaltiesWon(Double penaltiesWon) {
        this.penaltiesWon = penaltiesWon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyKickGoals")
    public Double penaltyKickGoals;

    public PlayerGameProjection withPenaltyKickGoals(Double penaltyKickGoals) {
        this.penaltyKickGoals = penaltyKickGoals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyKickMisses")
    public Double penaltyKickMisses;

    public PlayerGameProjection withPenaltyKickMisses(Double penaltyKickMisses) {
        this.penaltyKickMisses = penaltyKickMisses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyKickSaves")
    public Double penaltyKickSaves;

    public PlayerGameProjection withPenaltyKickSaves(Double penaltyKickSaves) {
        this.penaltyKickSaves = penaltyKickSaves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerId")
    public Long playerId;

    public PlayerGameProjection withPlayerId(Long playerId) {
        this.playerId = playerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Position")
    public String position;

    public PlayerGameProjection withPosition(String position) {
        this.position = position;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PositionCategory")
    public String positionCategory;

    public PlayerGameProjection withPositionCategory(String positionCategory) {
        this.positionCategory = positionCategory;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RedCards")
    public Double redCards;

    public PlayerGameProjection withRedCards(Double redCards) {
        this.redCards = redCards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoundId")
    public Long roundId;

    public PlayerGameProjection withRoundId(Long roundId) {
        this.roundId = roundId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Score")
    public Double score;

    public PlayerGameProjection withScore(Double score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;

    public PlayerGameProjection withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;

    public PlayerGameProjection withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShortName")
    public String shortName;

    public PlayerGameProjection withShortName(String shortName) {
        this.shortName = shortName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Shots")
    public Double shots;

    public PlayerGameProjection withShots(Double shots) {
        this.shots = shots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShotsOnGoal")
    public Double shotsOnGoal;

    public PlayerGameProjection withShotsOnGoal(Double shotsOnGoal) {
        this.shotsOnGoal = shotsOnGoal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Started")
    public Long started;

    public PlayerGameProjection withStarted(Long started) {
        this.started = started;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatId")
    public Long statId;

    public PlayerGameProjection withStatId(Long statId) {
        this.statId = statId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Suspension")
    public Boolean suspension;

    public PlayerGameProjection withSuspension(Boolean suspension) {
        this.suspension = suspension;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SuspensionReason")
    public String suspensionReason;

    public PlayerGameProjection withSuspensionReason(String suspensionReason) {
        this.suspensionReason = suspensionReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tackles")
    public Double tackles;

    public PlayerGameProjection withTackles(Double tackles) {
        this.tackles = tackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TacklesWon")
    public Double tacklesWon;

    public PlayerGameProjection withTacklesWon(Double tacklesWon) {
        this.tacklesWon = tacklesWon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public PlayerGameProjection withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamId")
    public Long teamId;

    public PlayerGameProjection withTeamId(Long teamId) {
        this.teamId = teamId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Touches")
    public Double touches;

    public PlayerGameProjection withTouches(Double touches) {
        this.touches = touches;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public PlayerGameProjection withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedUtc")
    public String updatedUtc;

    public PlayerGameProjection withUpdatedUtc(String updatedUtc) {
        this.updatedUtc = updatedUtc;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooPosition")
    public String yahooPosition;

    public PlayerGameProjection withYahooPosition(String yahooPosition) {
        this.yahooPosition = yahooPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooSalary")
    public Long yahooSalary;

    public PlayerGameProjection withYahooSalary(Long yahooSalary) {
        this.yahooSalary = yahooSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YellowCards")
    public Double yellowCards;

    public PlayerGameProjection withYellowCards(Double yellowCards) {
        this.yellowCards = yellowCards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YellowRedCards")
    public Double yellowRedCards;

    public PlayerGameProjection withYellowRedCards(Double yellowRedCards) {
        this.yellowRedCards = yellowRedCards;
        return this;
    }
    
    public PlayerGameProjection(){}
}
