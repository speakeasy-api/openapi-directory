// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LineItemFlightFlightDateTypeEnum - Required. The type of the line item's flight dates.
type LineItemFlightFlightDateTypeEnum string

const (
	LineItemFlightFlightDateTypeEnumLineItemFlightDateTypeUnspecified LineItemFlightFlightDateTypeEnum = "LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED"
	LineItemFlightFlightDateTypeEnumLineItemFlightDateTypeInherited   LineItemFlightFlightDateTypeEnum = "LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED"
	LineItemFlightFlightDateTypeEnumLineItemFlightDateTypeCustom      LineItemFlightFlightDateTypeEnum = "LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM"
)

func (e *LineItemFlightFlightDateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED":
		fallthrough
	case "LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED":
		fallthrough
	case "LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM":
		*e = LineItemFlightFlightDateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LineItemFlightFlightDateTypeEnum: %s", s)
	}
}

// LineItemFlight - Settings that control the active duration of a line item.
type LineItemFlight struct {
	// A date range.
	DateRange *DateRange `json:"dateRange,omitempty"`
	// Required. The type of the line item's flight dates.
	FlightDateType *LineItemFlightFlightDateTypeEnum `json:"flightDateType,omitempty"`
}
