/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesCrowding } from "./tflapipresentationentitiescrowding";
import { Expose, Type } from "class-transformer";

export enum TflApiPresentationEntitiesIdentifierRouteTypeEnum {
  Unknown = "Unknown",
  All = "All",
  CycleSuperhighways = "Cycle Superhighways",
  Quietways = "Quietways",
  Cycleways = "Cycleways",
  MiniHollands = "Mini-Hollands",
  CentralLondonGrid = "Central London Grid",
  StreetspaceRoute = "Streetspace Route",
}

export enum TflApiPresentationEntitiesIdentifierStatusEnum {
  Unknown = "Unknown",
  All = "All",
  Open = "Open",
  InProgress = "In Progress",
  Planned = "Planned",
  PlannedSubjectToFeasibilityAndConsultation = "Planned - Subject to feasibility and consultation.",
  NotOpen = "Not Open",
}

export class TflApiPresentationEntitiesIdentifier extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "crowding" })
  @Type(() => TflApiPresentationEntitiesCrowding)
  crowding?: TflApiPresentationEntitiesCrowding;

  @SpeakeasyMetadata()
  @Expose({ name: "fullName" })
  fullName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "motType" })
  motType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "routeType" })
  routeType?: TflApiPresentationEntitiesIdentifierRouteTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TflApiPresentationEntitiesIdentifierStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}
