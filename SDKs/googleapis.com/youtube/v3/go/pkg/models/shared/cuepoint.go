// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CuepointCueTypeEnum string

const (
	CuepointCueTypeEnumCueTypeUnspecified CuepointCueTypeEnum = "cueTypeUnspecified"
	CuepointCueTypeEnumCueTypeAd          CuepointCueTypeEnum = "cueTypeAd"
)

func (e CuepointCueTypeEnum) ToPointer() *CuepointCueTypeEnum {
	return &e
}

func (e *CuepointCueTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cueTypeUnspecified":
		fallthrough
	case "cueTypeAd":
		*e = CuepointCueTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CuepointCueTypeEnum: %v", v)
	}
}

// Cuepoint - Note that there may be a 5-second end-point resolution issue. For instance, if a cuepoint comes in for 22:03:27, we may stuff the cuepoint into 22:03:25 or 22:03:30, depending. This is an artifact of HLS.
type Cuepoint struct {
	CueType *CuepointCueTypeEnum `json:"cueType,omitempty"`
	// The duration of this cuepoint.
	DurationSecs *int64  `json:"durationSecs,omitempty"`
	Etag         *string `json:"etag,omitempty"`
	// The identifier for cuepoint resource.
	ID *string `json:"id,omitempty"`
	// The time when the cuepoint should be inserted by offset to the broadcast actual start time.
	InsertionOffsetTimeMs *string `json:"insertionOffsetTimeMs,omitempty"`
	// The wall clock time at which the cuepoint should be inserted. Only one of insertion_offset_time_ms and walltime_ms may be set at a time.
	WalltimeMs *string `json:"walltimeMs,omitempty"`
}
