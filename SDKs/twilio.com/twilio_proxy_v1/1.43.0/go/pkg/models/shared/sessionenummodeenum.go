// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SessionEnumModeEnum string

const (
	SessionEnumModeEnumMessageOnly     SessionEnumModeEnum = "message-only"
	SessionEnumModeEnumVoiceOnly       SessionEnumModeEnum = "voice-only"
	SessionEnumModeEnumVoiceAndMessage SessionEnumModeEnum = "voice-and-message"
)

func (e SessionEnumModeEnum) ToPointer() *SessionEnumModeEnum {
	return &e
}

func (e *SessionEnumModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "message-only":
		fallthrough
	case "voice-only":
		fallthrough
	case "voice-and-message":
		*e = SessionEnumModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SessionEnumModeEnum: %v", v)
	}
}
