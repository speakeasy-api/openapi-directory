// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AccountGetGuestsSortDirectionEnum - Direction of sort "asc" or "desc"
type AccountGetGuestsSortDirectionEnum string

const (
	AccountGetGuestsSortDirectionEnumAsc  AccountGetGuestsSortDirectionEnum = "asc"
	AccountGetGuestsSortDirectionEnumDesc AccountGetGuestsSortDirectionEnum = "desc"
)

func (e AccountGetGuestsSortDirectionEnum) ToPointer() *AccountGetGuestsSortDirectionEnum {
	return &e
}

func (e *AccountGetGuestsSortDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = AccountGetGuestsSortDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountGetGuestsSortDirectionEnum: %v", v)
	}
}

type AccountGetGuestsRequest struct {
	// Limit results to this number
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset where to start from
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Field to sort by
	SortBy *string `queryParam:"style=form,explode=true,name=sortBy"`
	// Direction of sort "asc" or "desc"
	SortDirection *AccountGetGuestsSortDirectionEnum `queryParam:"style=form,explode=true,name=sortDirection"`
	// Filter fields by this pattern
	TextSearch *string `queryParam:"style=form,explode=true,name=textSearch"`
}

type AccountGetGuestsResponse struct {
	APICoreResponsesEntitiesResponseAPICoreResponsesEntityURISystemInt64 *shared.APICoreResponsesEntitiesResponseAPICoreResponsesEntityURISystemInt64
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
