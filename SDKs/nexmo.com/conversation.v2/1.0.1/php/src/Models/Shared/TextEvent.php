<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TextEvent - Text
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TextEvent
{
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TextEventLinks')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TextEventLinks $links = null;
    
    /**
     * The body of the `text` event
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TextEventBody $body
     */
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TextEventBody')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TextEventBody $body = null;
    
    /**
     * The ID of the Conversation that the member belongs to
     * 
     * @var ?string $conversationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('conversation_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conversationId = null;
    
    /**
     * The member ID of the sender
     * 
     * @var ?string $from
     */
	#[\JMS\Serializer\Annotation\SerializedName('from')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $from = null;
    
    /**
     * The ID of the event
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * The time that the event happened
     * 
     * @var ?string $timestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timestamp = null;
    
    /**
     * The event type (`text`)
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->links = null;
		$this->body = null;
		$this->conversationId = null;
		$this->from = null;
		$this->id = null;
		$this->timestamp = null;
		$this->type = null;
	}
}
