/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Buy = '1', Sell = '2'
 */
export enum PostAccountsAccountOrderImpactRequestBodySideEnum {
  One = "1",
  Two = "2",
}

/**
 * Order Parameters
 */
export class PostAccountsAccountOrderImpactRequestBody extends SpeakeasyBase {
  /**
   * Required price to support Stop and Stop Limit orders
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Aux Price" })
  auxPrice?: number;

  /**
   * The internal IB identifier for the trading product specified as an integer (can be obtained in response to /secdef request)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ContractId" })
  contractId?: number;

  /**
   * The currency in which the FX pair trades (only for InstrumentType=CASH)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Currency" })
  currency?: string;

  /**
   * The order ID assigned by the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CustomerOrderId" })
  customerOrderId?: string;

  /**
   * The instrument type of the contract
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InstrumentType" })
  instrumentType?: string;

  /**
   * The exchange on which the trading product is listed (only for InstrumentType=STK)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ListingExchange" })
  listingExchange?: string;

  /**
   * Market = '1'
   *
   * @remarks
   * Limit = '2'
   * Stop = '3'
   * StopLimit = '4'
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Order Type" })
  orderType?: shared.OrderTypeEnum;

  /**
   * The order price
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Price" })
  price?: number;

  /**
   * The number of units in the order; contracts or shares
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Quantity" })
  quantity?: number;

  /**
   * Buy = '1', Sell = '2'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Side" })
  side?: PostAccountsAccountOrderImpactRequestBodySideEnum;

  /**
   * The symbol that identifies the trading product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Ticker" })
  ticker?: string;

  /**
   * Defines order's active lifetime.
   *
   * @remarks
   * Day = '0'
   * GTC (Good till Cancel) = '1'
   * IOC (Immediate or Cancel) = '3'
   * Open = '2'
   * Close = '7'
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Time in Force" })
  timeInForce?: shared.TimeInForceEnum;
}

export class PostAccountsAccountOrderImpactRequest extends SpeakeasyBase {
  /**
   * Order Parameters
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PostAccountsAccountOrderImpactRequestBody;

  /**
   * Account Number
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=account",
  })
  account: string;
}

/**
 * Order impact info
 */
export class PostAccountsAccountOrderImpact200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Commission" })
  commission?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CommissionsCurrency" })
  commissionsCurrency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EquityWithLoan" })
  equityWithLoan?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "InitMargin" })
  initMargin?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "InitMarginBefore" })
  initMarginBefore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaintMargin" })
  maintMargin?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaintMarginBefore" })
  maintMarginBefore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MarginCurrency" })
  marginCurrency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxCommissions" })
  maxCommissions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MinCommissions" })
  minCommissions?: number;
}

export class PostAccountsAccountOrderImpactResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Order impact info
   */
  @SpeakeasyMetadata()
  postAccountsAccountOrderImpact200ApplicationJSONObject?: PostAccountsAccountOrderImpact200ApplicationJSON;
}
