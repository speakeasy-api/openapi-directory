// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateComponentPathParams struct {
	// The unique ID for the Amplify app.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// The name of the backend environment that is part of the Amplify app.
	EnvironmentName string `pathParam:"style=simple,explode=false,name=environmentName"`
	// The unique ID for the component.
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type UpdateComponentQueryParams struct {
	// The unique client token.
	ClientToken *string `queryParam:"style=form,explode=true,name=clientToken"`
}

type UpdateComponentHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateComponentRequestBodyUpdatedComponent - Updates and saves all of the information about a component, based on component ID.
type UpdateComponentRequestBodyUpdatedComponent struct {
	BindingProperties    map[string]shared.ComponentBindingPropertiesValue `json:"bindingProperties,omitempty"`
	Children             []shared.ComponentChild                           `json:"children,omitempty"`
	CollectionProperties map[string]shared.ComponentDataConfiguration      `json:"collectionProperties,omitempty"`
	ComponentType        *string                                           `json:"componentType,omitempty"`
	Events               map[string]shared.ComponentEvent                  `json:"events,omitempty"`
	ID                   *string                                           `json:"id,omitempty"`
	Name                 *string                                           `json:"name,omitempty"`
	Overrides            map[string]map[string]string                      `json:"overrides,omitempty"`
	// Describes the component's properties.
	Properties    interface{}               `json:"properties,omitempty"`
	SchemaVersion *string                   `json:"schemaVersion,omitempty"`
	SourceID      *string                   `json:"sourceId,omitempty"`
	Variants      []shared.ComponentVariant `json:"variants,omitempty"`
}

type UpdateComponentRequestBody struct {
	// Updates and saves all of the information about a component, based on component ID.
	UpdatedComponent UpdateComponentRequestBodyUpdatedComponent `json:"updatedComponent"`
}

type UpdateComponentRequest struct {
	PathParams  UpdateComponentPathParams
	QueryParams UpdateComponentQueryParams
	Headers     UpdateComponentHeaders
	Request     UpdateComponentRequestBody `request:"mediaType=application/json"`
}

type UpdateComponentResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceConflictException
	ResourceConflictException interface{}
	// Success
	UpdateComponentResponse *shared.UpdateComponentResponse
}
