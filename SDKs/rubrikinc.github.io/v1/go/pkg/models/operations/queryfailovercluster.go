// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryFailoverClusterOperatingSystemTypeEnum - Filter a response based on the operating system type.
type QueryFailoverClusterOperatingSystemTypeEnum string

const (
	QueryFailoverClusterOperatingSystemTypeEnumAny      QueryFailoverClusterOperatingSystemTypeEnum = "ANY"
	QueryFailoverClusterOperatingSystemTypeEnumAix      QueryFailoverClusterOperatingSystemTypeEnum = "AIX"
	QueryFailoverClusterOperatingSystemTypeEnumHpux     QueryFailoverClusterOperatingSystemTypeEnum = "HPUX"
	QueryFailoverClusterOperatingSystemTypeEnumLinux    QueryFailoverClusterOperatingSystemTypeEnum = "Linux"
	QueryFailoverClusterOperatingSystemTypeEnumSunOs    QueryFailoverClusterOperatingSystemTypeEnum = "SunOS"
	QueryFailoverClusterOperatingSystemTypeEnumUnixLike QueryFailoverClusterOperatingSystemTypeEnum = "UnixLike"
	QueryFailoverClusterOperatingSystemTypeEnumWindows  QueryFailoverClusterOperatingSystemTypeEnum = "Windows"
)

func (e QueryFailoverClusterOperatingSystemTypeEnum) ToPointer() *QueryFailoverClusterOperatingSystemTypeEnum {
	return &e
}

func (e *QueryFailoverClusterOperatingSystemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANY":
		fallthrough
	case "AIX":
		fallthrough
	case "HPUX":
		fallthrough
	case "Linux":
		fallthrough
	case "SunOS":
		fallthrough
	case "UnixLike":
		fallthrough
	case "Windows":
		*e = QueryFailoverClusterOperatingSystemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFailoverClusterOperatingSystemTypeEnum: %v", v)
	}
}

// QueryFailoverClusterSLAAssignmentEnum - Limit a response to the results that have the specified SLA Domain assignment type.
type QueryFailoverClusterSLAAssignmentEnum string

const (
	QueryFailoverClusterSLAAssignmentEnumDerived    QueryFailoverClusterSLAAssignmentEnum = "Derived"
	QueryFailoverClusterSLAAssignmentEnumDirect     QueryFailoverClusterSLAAssignmentEnum = "Direct"
	QueryFailoverClusterSLAAssignmentEnumUnassigned QueryFailoverClusterSLAAssignmentEnum = "Unassigned"
)

func (e QueryFailoverClusterSLAAssignmentEnum) ToPointer() *QueryFailoverClusterSLAAssignmentEnum {
	return &e
}

func (e *QueryFailoverClusterSLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = QueryFailoverClusterSLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFailoverClusterSLAAssignmentEnum: %v", v)
	}
}

// QueryFailoverClusterSortByEnum - Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified.
type QueryFailoverClusterSortByEnum string

const (
	QueryFailoverClusterSortByEnumName QueryFailoverClusterSortByEnum = "name"
)

func (e QueryFailoverClusterSortByEnum) ToPointer() *QueryFailoverClusterSortByEnum {
	return &e
}

func (e *QueryFailoverClusterSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = QueryFailoverClusterSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFailoverClusterSortByEnum: %v", v)
	}
}

// QueryFailoverClusterSortOrderEnum - Sort order, either ascending or descending.
type QueryFailoverClusterSortOrderEnum string

const (
	QueryFailoverClusterSortOrderEnumAsc  QueryFailoverClusterSortOrderEnum = "asc"
	QueryFailoverClusterSortOrderEnumDesc QueryFailoverClusterSortOrderEnum = "desc"
)

func (e QueryFailoverClusterSortOrderEnum) ToPointer() *QueryFailoverClusterSortOrderEnum {
	return &e
}

func (e *QueryFailoverClusterSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryFailoverClusterSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFailoverClusterSortOrderEnum: %v", v)
	}
}

type QueryFailoverClusterRequest struct {
	// Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of the sort.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter a response by making an infix comparison of the failover cluster name in the response, with the specified value.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter a response based on the operating system type.
	OperatingSystemType *QueryFailoverClusterOperatingSystemTypeEnum `queryParam:"style=form,explode=true,name=operating_system_type"`
	// Limit a response to the results that have the specified primary cluster value.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Limit a response to the results that have the specified SLA Domain assignment type.
	SLAAssignment *QueryFailoverClusterSLAAssignmentEnum `queryParam:"style=form,explode=true,name=sla_assignment"`
	// Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified.
	SortBy *QueryFailoverClusterSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryFailoverClusterSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryFailoverClusterResponse struct {
	ContentType string
	// Successful query results for failover cluster.
	FailoverClusterSummaryListResponse *shared.FailoverClusterSummaryListResponse
	StatusCode                         int
	RawResponse                        *http.Response
}
