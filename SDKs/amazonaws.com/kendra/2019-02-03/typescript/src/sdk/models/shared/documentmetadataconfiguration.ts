/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DocumentAttributeValueTypeEnum } from "./documentattributevaluetypeenum";
import { Relevance } from "./relevance";
import { Search } from "./search";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the properties, such as relevance tuning and searchability, of an index field.
 */
export class DocumentMetadataConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Relevance" })
  @Type(() => Relevance)
  relevance?: Relevance;

  @SpeakeasyMetadata()
  @Expose({ name: "Search" })
  @Type(() => Search)
  search?: Search;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: DocumentAttributeValueTypeEnum;
}
