/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IndividualOutcome - Step Id and outcome of each individual step that was run as a group with other steps with the same configuration.
 */
public class IndividualOutcome {
    /**
     * Unique int given to each step. Ranges from 0(inclusive) to total number of steps(exclusive). The primary step is 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("multistepNumber")
    public Integer multistepNumber;

    public IndividualOutcome withMultistepNumber(Integer multistepNumber) {
        this.multistepNumber = multistepNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outcomeSummary")
    public IndividualOutcomeOutcomeSummaryEnum outcomeSummary;

    public IndividualOutcome withOutcomeSummary(IndividualOutcomeOutcomeSummaryEnum outcomeSummary) {
        this.outcomeSummary = outcomeSummary;
        return this;
    }
    
    /**
     *  A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runDuration")
    public Duration runDuration;

    public IndividualOutcome withRunDuration(Duration runDuration) {
        this.runDuration = runDuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stepId")
    public String stepId;

    public IndividualOutcome withStepId(String stepId) {
        this.stepId = stepId;
        return this;
    }
    
    public IndividualOutcome(){}
}
