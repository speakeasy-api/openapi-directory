// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSpacesIDPersonsPathParams struct {
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// GetSpacesIDPersonsValidatedEnum - Status of the person
type GetSpacesIDPersonsValidatedEnum string

const (
	GetSpacesIDPersonsValidatedEnumTrue  GetSpacesIDPersonsValidatedEnum = "true"
	GetSpacesIDPersonsValidatedEnumFalse GetSpacesIDPersonsValidatedEnum = "false"
)

func (e *GetSpacesIDPersonsValidatedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "true":
		fallthrough
	case "false":
		*e = GetSpacesIDPersonsValidatedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesIDPersonsValidatedEnum: %s", s)
	}
}

type GetSpacesIDPersonsQueryParams struct {
	// Email of the person
	Email *string `queryParam:"style=form,explode=true,name=Email"`
	// Function of the person
	Function *string `queryParam:"style=form,explode=true,name=Function"`
	// Name of the person
	Name *string `queryParam:"style=form,explode=true,name=Name"`
	// index range of the results
	Range *string `queryParam:"style=form,explode=true,name=Range"`
	// Status of the person
	Validated *GetSpacesIDPersonsValidatedEnum `queryParam:"style=form,explode=true,name=Validated"`
}

type GetSpacesIDPersonsRequest struct {
	PathParams  GetSpacesIDPersonsPathParams
	QueryParams GetSpacesIDPersonsQueryParams
}

type GetSpacesIDPersonsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of persons
	GetSpacesIDPersons200ApplicationJSONAllOfs []shared.Person
}
