/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryHostRequest {
    /**
     * (Deprecated) Retrieve hosts with a host name matching the provided name. The search type is infix.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=hostname")
    public String hostname;

    public QueryHostRequest withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * Retrieve hosts with a host name matching the provided name. The search type is infix.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public QueryHostRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Filter the summary information based on the operating system.
     * Use **_AIX_**, **_Linux_** or **_Solaris_** to restrict the returned information to hosts with operating systems within the specified operating system family.
     * Use a specific operating system release version to restrict the returned information to hosts with operating systems that match the specified version.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=operating_system")
    public String operatingSystem;

    public QueryHostRequest withOperatingSystem(String operatingSystem) {
        this.operatingSystem = operatingSystem;
        return this;
    }
    
    /**
     * Filter the summary information based on the operating system type. Accepted values are 'Windows', 'UnixLike', 'ANY', 'NONE'.
     * Use **_NONE_** to only return information for hosts templates that do not have operating system type set.
     * Use **_ANY_** to only return information for hosts that have operating system type set.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=operating_system_type")
    public QueryHostOperatingSystemTypeEnum operatingSystemType;

    public QueryHostRequest withOperatingSystemType(QueryHostOperatingSystemTypeEnum operatingSystemType) {
        this.operatingSystemType = operatingSystemType;
        return this;
    }
    
    /**
     * Filters the summary information based on the Rubrik cluster specified by the value of primary_cluster_id. Use 'local' for the Rubrik cluster that is hosting the current REST API session.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_cluster_id")
    public String primaryClusterId;

    public QueryHostRequest withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Determines whether to fetch hosts with additional privilege checks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=snappable_status")
    public QueryHostSnappableStatusEnum snappableStatus;

    public QueryHostRequest withSnappableStatus(QueryHostSnappableStatusEnum snappableStatus) {
        this.snappableStatus = snappableStatus;
        return this;
    }
    
    /**
     * Specifies the host attribute to use in sorting the host summary information. Performs an ASCII sort of the summary information using the specified attribute, in the order specified.
     * Valid attributes are 'hostname'.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryHostSortByEnum sortBy;

    public QueryHostRequest withSortBy(QueryHostSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Sort order, either ascending or descending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryHostSortOrderEnum sortOrder;

    public QueryHostRequest withSortOrder(QueryHostSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QueryHostRequest(){}
}
