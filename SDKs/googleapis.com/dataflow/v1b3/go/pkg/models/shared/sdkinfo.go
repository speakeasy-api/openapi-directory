// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SDKInfoLanguageEnum - Required. The SDK Language.
type SDKInfoLanguageEnum string

const (
	SDKInfoLanguageEnumUnknown SDKInfoLanguageEnum = "UNKNOWN"
	SDKInfoLanguageEnumJava    SDKInfoLanguageEnum = "JAVA"
	SDKInfoLanguageEnumPython  SDKInfoLanguageEnum = "PYTHON"
	SDKInfoLanguageEnumGo      SDKInfoLanguageEnum = "GO"
)

func (e SDKInfoLanguageEnum) ToPointer() *SDKInfoLanguageEnum {
	return &e
}

func (e *SDKInfoLanguageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "JAVA":
		fallthrough
	case "PYTHON":
		fallthrough
	case "GO":
		*e = SDKInfoLanguageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SDKInfoLanguageEnum: %v", v)
	}
}

// SDKInfo - SDK Information.
type SDKInfo struct {
	// Required. The SDK Language.
	Language *SDKInfoLanguageEnum `json:"language,omitempty"`
	// Optional. The SDK version.
	Version *string `json:"version,omitempty"`
}
