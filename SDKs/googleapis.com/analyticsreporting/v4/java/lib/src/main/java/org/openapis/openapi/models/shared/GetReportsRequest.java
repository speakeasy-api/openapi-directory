/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetReportsRequest - The batch request containing multiple report request.
 */
public class GetReportsRequest {
    /**
     * Requests, each request will have a separate response. There can be a maximum of 5 requests. All requests should have the same `dateRanges`, `viewId`, `segments`, `samplingLevel`, and `cohortGroup`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportRequests")
    public ReportRequest[] reportRequests;
    public GetReportsRequest withReportRequests(ReportRequest[] reportRequests) {
        this.reportRequests = reportRequests;
        return this;
    }
    
    /**
     * Enables [resource based quotas](/analytics/devguides/reporting/core/v4/limits-quotas#analytics_reporting_api_v4), (defaults to `False`). If this field is set to `True` the per view (profile) quotas are governed by the computational cost of the request. Note that using cost based quotas will higher enable sampling rates. (10 Million for `SMALL`, 100M for `LARGE`. See the [limits and quotas documentation](/analytics/devguides/reporting/core/v4/limits-quotas#analytics_reporting_api_v4) for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useResourceQuotas")
    public Boolean useResourceQuotas;
    public GetReportsRequest withUseResourceQuotas(Boolean useResourceQuotas) {
        this.useResourceQuotas = useResourceQuotas;
        return this;
    }
    
}
