/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionResult } from "./executionresult";
import { ExecutionStatusEnum } from "./executionstatusenum";
import { MetadataCatalogDetail } from "./metadatacatalogdetail";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  Specifies information about the past flow run instances for a given flow.
 */
export class ExecutionRecord extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dataPullEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dataPullEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dataPullStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dataPullStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "executionId" })
  executionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "executionResult" })
  @Type(() => ExecutionResult)
  executionResult?: ExecutionResult;

  @SpeakeasyMetadata()
  @Expose({ name: "executionStatus" })
  executionStatus?: ExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata({ elemType: MetadataCatalogDetail })
  @Expose({ name: "metadataCatalogDetails" })
  @Type(() => MetadataCatalogDetail)
  metadataCatalogDetails?: MetadataCatalogDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "startedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;
}
