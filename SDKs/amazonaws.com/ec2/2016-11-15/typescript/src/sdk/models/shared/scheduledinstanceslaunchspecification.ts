/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ScheduledInstancesEbs } from "./scheduledinstancesebs";
import { ScheduledInstancesIamInstanceProfile } from "./scheduledinstancesiaminstanceprofile";
import { ScheduledInstancesMonitoring } from "./scheduledinstancesmonitoring";
import { ScheduledInstancesPlacement } from "./scheduledinstancesplacement";

/**
 * Describes a block device mapping for a Scheduled Instance.
 */
export class ScheduledInstancesLaunchSpecificationBlockDeviceMappings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  deviceName?: string;

  @SpeakeasyMetadata()
  ebs?: ScheduledInstancesEbs;

  @SpeakeasyMetadata()
  noDevice?: string;

  @SpeakeasyMetadata()
  virtualName?: string;
}

/**
 * Describes an IPv6 address.
 */
export class ScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6Addresses extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ipv6Address?: string;
}

/**
 * Describes a private IPv4 address for a Scheduled Instance.
 */
export class ScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  primary?: boolean;

  @SpeakeasyMetadata()
  privateIpAddress?: string;
}

/**
 * Describes a network interface for a Scheduled Instance.
 */
export class ScheduledInstancesLaunchSpecificationNetworkInterfaces extends SpeakeasyBase {
  @SpeakeasyMetadata()
  associatePublicIpAddress?: boolean;

  @SpeakeasyMetadata()
  deleteOnTermination?: boolean;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  deviceIndex?: number;

  @SpeakeasyMetadata()
  groups?: string[];

  @SpeakeasyMetadata()
  ipv6AddressCount?: number;

  @SpeakeasyMetadata({
    elemType:
      ScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6Addresses,
  })
  ipv6Addresses?: ScheduledInstancesLaunchSpecificationNetworkInterfacesIpv6Addresses[];

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  privateIpAddress?: string;

  @SpeakeasyMetadata({
    elemType:
      ScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigs,
  })
  privateIpAddressConfigs?: ScheduledInstancesLaunchSpecificationNetworkInterfacesPrivateIpAddressConfigs[];

  @SpeakeasyMetadata()
  secondaryPrivateIpAddressCount?: number;

  @SpeakeasyMetadata()
  subnetId?: string;
}

/**
 * <p>Describes the launch specification for a Scheduled Instance.</p> <p>If you are launching the Scheduled Instance in EC2-VPC, you must specify the ID of the subnet. You can specify the subnet using either <code>SubnetId</code> or <code>NetworkInterface</code>.</p>
 */
export class ScheduledInstancesLaunchSpecification extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: ScheduledInstancesLaunchSpecificationBlockDeviceMappings,
  })
  blockDeviceMappings?: ScheduledInstancesLaunchSpecificationBlockDeviceMappings[];

  @SpeakeasyMetadata()
  ebsOptimized?: boolean;

  @SpeakeasyMetadata()
  iamInstanceProfile?: ScheduledInstancesIamInstanceProfile;

  @SpeakeasyMetadata()
  imageId: string;

  @SpeakeasyMetadata()
  instanceType?: string;

  @SpeakeasyMetadata()
  kernelId?: string;

  @SpeakeasyMetadata()
  keyName?: string;

  @SpeakeasyMetadata()
  monitoring?: ScheduledInstancesMonitoring;

  @SpeakeasyMetadata({
    elemType: ScheduledInstancesLaunchSpecificationNetworkInterfaces,
  })
  networkInterfaces?: ScheduledInstancesLaunchSpecificationNetworkInterfaces[];

  @SpeakeasyMetadata()
  placement?: ScheduledInstancesPlacement;

  @SpeakeasyMetadata()
  ramdiskId?: string;

  @SpeakeasyMetadata()
  securityGroupIds?: string[];

  @SpeakeasyMetadata()
  subnetId?: string;

  @SpeakeasyMetadata()
  userData?: string;
}
