// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// StatusVisibilityEnum - Visibility of this status.
type StatusVisibilityEnum string

const (
	StatusVisibilityEnumPublic   StatusVisibilityEnum = "public"
	StatusVisibilityEnumUnlisted StatusVisibilityEnum = "unlisted"
	StatusVisibilityEnumPrivate  StatusVisibilityEnum = "private"
	StatusVisibilityEnumDirect   StatusVisibilityEnum = "direct"
)

func (e StatusVisibilityEnum) ToPointer() *StatusVisibilityEnum {
	return &e
}

func (e *StatusVisibilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "public":
		fallthrough
	case "unlisted":
		fallthrough
	case "private":
		fallthrough
	case "direct":
		*e = StatusVisibilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusVisibilityEnum: %v", v)
	}
}

// Status - Represents a status posted by an account.
// https://docs.joinmastodon.org/entities/status/
type Status struct {
	// Represents a user of Mastodon and their associated profile.
	Account *Account `json:"account,omitempty"`
	// Represents an application that interfaces with the REST API to access accounts or post statuses.
	Application *Application `json:"application,omitempty"`
	// Have you bookmarked this status?
	Bookmarked *bool `json:"bookmarked,omitempty"`
	// Represents a rich preview card that is generated using OpenGraph tags from a URL.
	Card *Card `json:"card,omitempty"`
	// HTML-encoded status content.
	Content *string `json:"content,omitempty"`
	// The date when this status was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Custom emoji to be used when rendering status content.
	Emojis []Emoji `json:"emojis,omitempty"`
	// Have you favourited this status?
	Favourited *bool `json:"favourited,omitempty"`
	// How many favourites this status has received.
	FavouritesCount *int64 `json:"favourites_count,omitempty"`
	// ID of the status in the database. Cast from an integer but not guaranteed to be a number.
	ID *string `json:"id,omitempty"`
	// ID of the account being replied to.
	InReplyToAccountID *string `json:"in_reply_to_account_id,omitempty"`
	// ID of the status being replied. Cast from an integer but not guaranteed to be a number.
	InReplyToID *string `json:"in_reply_to_id,omitempty"`
	// Primary language of this status. ISO 639 Part 1 two-letter language code.
	Language *string `json:"language,omitempty"`
	// Media that is attached to this status.
	MediaAttachments []Attachment `json:"media_attachments,omitempty"`
	// Mentions of users within the status content.
	Mentions []Mention `json:"mentions,omitempty"`
	// Have you muted notifications for this status's conversation?
	Muted *bool `json:"muted,omitempty"`
	// Have you pinned this status? Only appears if the status is pinnable.
	Pinned *bool `json:"pinned,omitempty"`
	// Represents a poll attached to a status.
	Poll *Poll `json:"poll,omitempty"`
	// Represents a status posted by an account.
	Reblog *Status `json:"reblog,omitempty"`
	// Have you boosted this status?
	Reblogged *bool `json:"reblogged,omitempty"`
	// How many boosts this status has received.
	ReblogsCount *int64 `json:"reblogs_count,omitempty"`
	// How many replies this status has received.
	RepliesCount *int64 `json:"replies_count,omitempty"`
	// Is this status marked as sensitive content?
	Sensitive *bool `json:"sensitive,omitempty"`
	// Subject or summary line, below which status content is collapsed until expanded.
	SpoilerText *string `json:"spoiler_text,omitempty"`
	// Hashtags used within the status content.
	Tags []Tag `json:"tags,omitempty"`
	// Plain-text source of a status. Returned instead of `content` when status is deleted, so the user may redraft from the source text without the client having to reverse-engineer the original text from the HTML content.
	Text *string `json:"text,omitempty"`
	// URI of the status used for federation.
	URI *string `json:"uri,omitempty"`
	// A link to the status's HTML representation.
	URL *string `json:"url,omitempty"`
	// Visibility of this status.
	Visibility *StatusVisibilityEnum `json:"visibility,omitempty"`
}
