"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContributorProfileSocialMedia:
    r"""Contributor profile social media links"""
    
    facebook: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('facebook'), 'exclude': lambda f: f is None }})
    r"""Facebook link for contributor"""  
    google_plus: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('google_plus'), 'exclude': lambda f: f is None }})
    r"""Google+ link for contributor"""  
    linkedin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkedin'), 'exclude': lambda f: f is None }})
    r"""LinkedIn link for contributor"""  
    pinterest: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pinterest'), 'exclude': lambda f: f is None }})
    r"""Pinterest page for contributor"""  
    tumblr: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tumblr'), 'exclude': lambda f: f is None }})
    r"""Tumblr link for contributor"""  
    twitter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('twitter'), 'exclude': lambda f: f is None }})
    r"""Twitter link for contributor"""  
    