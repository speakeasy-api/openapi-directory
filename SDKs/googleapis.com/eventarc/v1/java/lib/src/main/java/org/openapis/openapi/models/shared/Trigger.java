/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Trigger - A representation of the trigger resource.
 */
public class Trigger {
    /**
     * Optional. The name of the channel associated with the trigger in `projects/{project}/locations/{location}/channels/{channel}` format. You must provide a channel to receive events from Eventarc SaaS partners.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    public String channel;
    public Trigger withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Output only. The reason(s) why a trigger is in FAILED state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public java.util.Map<String, StateCondition> conditions;
    public Trigger withConditions(java.util.Map<String, StateCondition> conditions) {
        this.conditions = conditions;
        return this;
    }
    
    /**
     * Output only. The creation time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public Trigger withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Represents a target of an invocation over HTTP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destination")
    public Destination destination;
    public Trigger withDestination(Destination destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * Output only. This checksum is computed by the server based on the value of other fields, and might be sent only on create requests to ensure that the client has an up-to-date value before proceeding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Trigger withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Optional. EventDataContentType specifies the type of payload in MIME format that is expected from the CloudEvent data field. This will be set to `application/json` if the value is not defined.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventDataContentType")
    public String eventDataContentType;
    public Trigger withEventDataContentType(String eventDataContentType) {
        this.eventDataContentType = eventDataContentType;
        return this;
    }
    
    /**
     * Required. Unordered list. The list of filters that applies to event attributes. Only events that match all the provided filters are sent to the destination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventFilters")
    public EventFilter[] eventFilters;
    public Trigger withEventFilters(EventFilter[] eventFilters) {
        this.eventFilters = eventFilters;
        return this;
    }
    
    /**
     * Optional. User labels attached to the triggers that can be used to group resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public Trigger withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Required. The resource name of the trigger. Must be unique within the location of the project and must be in `projects/{project}/locations/{location}/triggers/{trigger}` format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Trigger withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional. The IAM service account email associated with the trigger. The service account represents the identity of the trigger. The principal who calls this API must have the `iam.serviceAccounts.actAs` permission in the service account. See https://cloud.google.com/iam/docs/understanding-service-accounts?hl=en#sa_common for more information. For Cloud Run destinations, this service account is used to generate identity tokens when invoking the service. See https://cloud.google.com/run/docs/triggering/pubsub-push#create-service-account for information on how to invoke authenticated Cloud Run services. To create Audit Log triggers, the service account should also have the `roles/eventarc.eventReceiver` IAM role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;
    public Trigger withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Represents the transport intermediaries created for the trigger to deliver events.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transport")
    public Transport transport;
    public Trigger withTransport(Transport transport) {
        this.transport = transport;
        return this;
    }
    
    /**
     * Output only. Server-assigned unique identifier for the trigger. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;
    public Trigger withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The last-modified time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public Trigger withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
