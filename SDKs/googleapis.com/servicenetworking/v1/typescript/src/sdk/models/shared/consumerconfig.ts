/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloudSQLConfig } from "./cloudsqlconfig";
import { GoogleCloudServicenetworkingV1ConsumerConfigReservedRange } from "./googlecloudservicenetworkingv1consumerconfigreservedrange";
import { Expose, Type } from "class-transformer";

/**
 * Configuration information for a private service access connection.
 */
export class ConsumerConfigInput extends SpeakeasyBase {
  /**
   * Represents one or multiple Cloud SQL configurations.
   */
  @SpeakeasyMetadata({ elemType: CloudSQLConfig })
  @Expose({ name: "cloudsqlConfigs" })
  @Type(() => CloudSQLConfig)
  cloudsqlConfigs?: CloudSQLConfig[];

  /**
   * Export custom routes flag value for peering from consumer to producer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerExportCustomRoutes" })
  consumerExportCustomRoutes?: boolean;

  /**
   * Export subnet routes with public ip flag value for peering from consumer to producer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerExportSubnetRoutesWithPublicIp" })
  consumerExportSubnetRoutesWithPublicIp?: boolean;

  /**
   * Import custom routes flag value for peering from consumer to producer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerImportCustomRoutes" })
  consumerImportCustomRoutes?: boolean;

  /**
   * Import subnet routes with public ip flag value for peering from consumer to producer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerImportSubnetRoutesWithPublicIp" })
  consumerImportSubnetRoutesWithPublicIp?: boolean;

  /**
   * Export custom routes flag value for peering from producer to consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerExportCustomRoutes" })
  producerExportCustomRoutes?: boolean;

  /**
   * Export subnet routes with public ip flag value for peering from producer to consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerExportSubnetRoutesWithPublicIp" })
  producerExportSubnetRoutesWithPublicIp?: boolean;

  /**
   * Import custom routes flag value for peering from producer to consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerImportCustomRoutes" })
  producerImportCustomRoutes?: boolean;

  /**
   * Import subnet routes with public ip flag value for peering from producer to consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerImportSubnetRoutesWithPublicIp" })
  producerImportSubnetRoutesWithPublicIp?: boolean;
}

/**
 * Configuration information for a private service access connection.
 */
export class ConsumerConfig extends SpeakeasyBase {
  /**
   * Represents one or multiple Cloud SQL configurations.
   */
  @SpeakeasyMetadata({ elemType: CloudSQLConfig })
  @Expose({ name: "cloudsqlConfigs" })
  @Type(() => CloudSQLConfig)
  cloudsqlConfigs?: CloudSQLConfig[];

  /**
   * Export custom routes flag value for peering from consumer to producer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerExportCustomRoutes" })
  consumerExportCustomRoutes?: boolean;

  /**
   * Export subnet routes with public ip flag value for peering from consumer to producer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerExportSubnetRoutesWithPublicIp" })
  consumerExportSubnetRoutesWithPublicIp?: boolean;

  /**
   * Import custom routes flag value for peering from consumer to producer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerImportCustomRoutes" })
  consumerImportCustomRoutes?: boolean;

  /**
   * Import subnet routes with public ip flag value for peering from consumer to producer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerImportSubnetRoutesWithPublicIp" })
  consumerImportSubnetRoutesWithPublicIp?: boolean;

  /**
   * Export custom routes flag value for peering from producer to consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerExportCustomRoutes" })
  producerExportCustomRoutes?: boolean;

  /**
   * Export subnet routes with public ip flag value for peering from producer to consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerExportSubnetRoutesWithPublicIp" })
  producerExportSubnetRoutesWithPublicIp?: boolean;

  /**
   * Import custom routes flag value for peering from producer to consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerImportCustomRoutes" })
  producerImportCustomRoutes?: boolean;

  /**
   * Import subnet routes with public ip flag value for peering from producer to consumer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerImportSubnetRoutesWithPublicIp" })
  producerImportSubnetRoutesWithPublicIp?: boolean;

  /**
   * Output only. The VPC host network that is used to host managed service instances. In the format, projects/{project}/global/networks/{network} where {project} is the project number e.g. '12345' and {network} is the network name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "producerNetwork" })
  producerNetwork?: string;

  /**
   * Output only. The reserved ranges associated with this private service access connection.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudServicenetworkingV1ConsumerConfigReservedRange,
  })
  @Expose({ name: "reservedRanges" })
  @Type(() => GoogleCloudServicenetworkingV1ConsumerConfigReservedRange)
  reservedRanges?: GoogleCloudServicenetworkingV1ConsumerConfigReservedRange[];

  /**
   * Output only. The IP ranges already in use by consumer or producer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usedIpRanges" })
  usedIpRanges?: string[];

  /**
   * Output only. Indicates whether the VPC Service Controls reference architecture is configured for the producer VPC host network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vpcScReferenceArchitectureEnabled" })
  vpcScReferenceArchitectureEnabled?: boolean;
}
