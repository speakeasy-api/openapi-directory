// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContactStatusEnum string

const (
	ContactStatusEnumAvailable        ContactStatusEnum = "AVAILABLE"
	ContactStatusEnumAwsCancelled     ContactStatusEnum = "AWS_CANCELLED"
	ContactStatusEnumAwsFailed        ContactStatusEnum = "AWS_FAILED"
	ContactStatusEnumCancelled        ContactStatusEnum = "CANCELLED"
	ContactStatusEnumCancelling       ContactStatusEnum = "CANCELLING"
	ContactStatusEnumCompleted        ContactStatusEnum = "COMPLETED"
	ContactStatusEnumFailed           ContactStatusEnum = "FAILED"
	ContactStatusEnumFailedToSchedule ContactStatusEnum = "FAILED_TO_SCHEDULE"
	ContactStatusEnumPass             ContactStatusEnum = "PASS"
	ContactStatusEnumPostpass         ContactStatusEnum = "POSTPASS"
	ContactStatusEnumPrepass          ContactStatusEnum = "PREPASS"
	ContactStatusEnumScheduled        ContactStatusEnum = "SCHEDULED"
	ContactStatusEnumScheduling       ContactStatusEnum = "SCHEDULING"
)

func (e *ContactStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AVAILABLE":
		fallthrough
	case "AWS_CANCELLED":
		fallthrough
	case "AWS_FAILED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "FAILED_TO_SCHEDULE":
		fallthrough
	case "PASS":
		fallthrough
	case "POSTPASS":
		fallthrough
	case "PREPASS":
		fallthrough
	case "SCHEDULED":
		fallthrough
	case "SCHEDULING":
		*e = ContactStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactStatusEnum: %s", s)
	}
}
