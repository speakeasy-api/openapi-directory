"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import callrecording as shared_callrecording
from ..shared import note as shared_note
from ..shared import questionresponse as shared_questionresponse
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CallRecordResultEnum(str, Enum):
    r"""~"""
    LA = 'LA'
    AM = 'AM'
    BUSY = 'BUSY'
    DNC = 'DNC'
    XFER = 'XFER'
    NO_ANS = 'NO_ANS'
    XFER_LEG = 'XFER_LEG'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    CARRIER_ERROR = 'CARRIER_ERROR'
    CARRIER_TEMP_ERROR = 'CARRIER_TEMP_ERROR'
    UNDIALED = 'UNDIALED'
    SD = 'SD'
    POSTPONED = 'POSTPONED'
    ABANDONED = 'ABANDONED'
    SKIPPED = 'SKIPPED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CallRecord:
    r"""Represents a call sent to a contact's number"""
    
    answer_time: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('answerTime'), 'exclude': lambda f: f is None }})
    r"""Timestamp when call was answered, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT"""  
    billed_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billedAmount'), 'exclude': lambda f: f is None }})
    r"""A cost of the call"""  
    caller_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callerName'), 'exclude': lambda f: f is None }})
    r"""~"""  
    duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration'), 'exclude': lambda f: f is None }})
    r"""Duration of the call in seconds"""  
    finish_time: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finishTime'), 'exclude': lambda f: f is None }})
    r"""Timestamp when call was finished, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""An id of a call record"""  
    labels: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels associated with a call action"""  
    notes: Optional[list[shared_note.Note]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Notes of call added by agent"""  
    originate_time: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originateTime'), 'exclude': lambda f: f is None }})
    r"""A date and time (timestamp) when call was originated by CallFire platform and went to downstream provider, formatted in unix time milliseconds (read only). Example: 1473781817000"""  
    question_responses: Optional[list[shared_questionresponse.QuestionResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('questionResponses'), 'exclude': lambda f: f is None }})
    r"""Notes of call added by an agent"""  
    recordings: Optional[list[shared_callrecording.CallRecording]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recordings'), 'exclude': lambda f: f is None }})
    r"""A list of voice recordings of the call"""  
    result: Optional[CallRecordResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    r"""~"""  
    switch_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('switchId'), 'exclude': lambda f: f is None }})
    r"""~"""  
    to_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toNumber'), 'exclude': lambda f: f is None }})
    r"""A phone number to which a call was addressed. Phone number in E.164 format (11-digit). Example: 12132000384"""  
    