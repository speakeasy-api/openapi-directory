"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AboutDriveThemes:
    
    background_image_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('backgroundImageLink'), 'exclude': lambda f: f is None }})
    r"""A link to this theme's background image."""  
    color_rgb: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('colorRgb'), 'exclude': lambda f: f is None }})
    r"""The color of this theme as an RGB hex string."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the theme."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AboutStorageQuota:
    r"""The user's storage quota limits and usage. All fields are measured in bytes."""
    
    limit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limit'), 'exclude': lambda f: f is None }})
    r"""The usage limit, if applicable. This will not be present if the user has unlimited storage."""  
    usage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usage'), 'exclude': lambda f: f is None }})
    r"""The total usage across all services."""  
    usage_in_drive: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usageInDrive'), 'exclude': lambda f: f is None }})
    r"""The usage by all files in Google Drive."""  
    usage_in_drive_trash: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usageInDriveTrash'), 'exclude': lambda f: f is None }})
    r"""The usage by trashed files in Google Drive."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AboutTeamDriveThemes:
    
    background_image_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('backgroundImageLink'), 'exclude': lambda f: f is None }})
    r"""Deprecated - use driveThemes/backgroundImageLink instead."""  
    color_rgb: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('colorRgb'), 'exclude': lambda f: f is None }})
    r"""Deprecated - use driveThemes/colorRgb instead."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Deprecated - use driveThemes/id instead."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class About:
    r"""Information about the user, the user's Drive, and system capabilities."""
    
    app_installed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appInstalled'), 'exclude': lambda f: f is None }})
    r"""Whether the user has installed the requesting app."""  
    can_create_drives: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canCreateDrives'), 'exclude': lambda f: f is None }})
    r"""Whether the user can create shared drives."""  
    can_create_team_drives: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canCreateTeamDrives'), 'exclude': lambda f: f is None }})
    r"""Deprecated - use canCreateDrives instead."""  
    drive_themes: Optional[list[AboutDriveThemes]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driveThemes'), 'exclude': lambda f: f is None }})
    r"""A list of themes that are supported for shared drives."""  
    export_formats: Optional[dict[str, list[str]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exportFormats'), 'exclude': lambda f: f is None }})
    r"""A map of source MIME type to possible targets for all supported exports."""  
    folder_color_palette: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('folderColorPalette'), 'exclude': lambda f: f is None }})
    r"""The currently supported folder colors as RGB hex strings."""  
    import_formats: Optional[dict[str, list[str]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('importFormats'), 'exclude': lambda f: f is None }})
    r"""A map of source MIME type to possible targets for all supported imports."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"drive#about\\"."""  
    max_import_sizes: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxImportSizes'), 'exclude': lambda f: f is None }})
    r"""A map of maximum import sizes by MIME type, in bytes."""  
    max_upload_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxUploadSize'), 'exclude': lambda f: f is None }})
    r"""The maximum upload size in bytes."""  
    storage_quota: Optional[AboutStorageQuota] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storageQuota'), 'exclude': lambda f: f is None }})
    r"""The user's storage quota limits and usage. All fields are measured in bytes."""  
    team_drive_themes: Optional[list[AboutTeamDriveThemes]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teamDriveThemes'), 'exclude': lambda f: f is None }})
    r"""Deprecated - use driveThemes instead."""  
    user: Optional[shared_user.User] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})
    r"""Information about a Drive user."""  
    