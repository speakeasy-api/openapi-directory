// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateProductXAmzTargetEnum
type CreateProductXAmzTargetEnum string

const (
	CreateProductXAmzTargetEnumAws242ServiceCatalogServiceCreateProduct CreateProductXAmzTargetEnum = "AWS242ServiceCatalogService.CreateProduct"
)

func (e CreateProductXAmzTargetEnum) ToPointer() *CreateProductXAmzTargetEnum {
	return &e
}

func (e *CreateProductXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS242ServiceCatalogService.CreateProduct":
		*e = CreateProductXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProductXAmzTargetEnum: %v", v)
	}
}

type CreateProductRequest struct {
	CreateProductInput shared.CreateProductInput   `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         CreateProductXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateProductResponse struct {
	ContentType string
	// Success
	CreateProductOutput *shared.CreateProductOutput
	// InvalidParametersException
	InvalidParametersException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TagOptionNotMigratedException
	TagOptionNotMigratedException interface{}
}
