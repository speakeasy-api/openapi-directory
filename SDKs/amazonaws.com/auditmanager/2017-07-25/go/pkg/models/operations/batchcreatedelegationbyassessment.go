// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type BatchCreateDelegationByAssessmentRequestBody struct {
	//  The API request to batch create delegations in Audit Manager.
	CreateDelegationRequests []shared.CreateDelegationRequest `json:"createDelegationRequests"`
}

type BatchCreateDelegationByAssessmentRequest struct {
	RequestBody       BatchCreateDelegationByAssessmentRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	//  The identifier for the assessment.
	AssessmentID string `pathParam:"style=simple,explode=false,name=assessmentId"`
}

type BatchCreateDelegationByAssessmentResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	BatchCreateDelegationByAssessmentResponse *shared.BatchCreateDelegationByAssessmentResponse
	ContentType                               string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
