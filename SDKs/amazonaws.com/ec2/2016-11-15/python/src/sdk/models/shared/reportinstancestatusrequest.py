"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional

class ReportInstanceStatusRequestReasonCodesEnum(str, Enum):
    INSTANCE_STUCK_IN_STATE = 'instance-stuck-in-state'
    UNRESPONSIVE = 'unresponsive'
    NOT_ACCEPTING_CREDENTIALS = 'not-accepting-credentials'
    PASSWORD_NOT_AVAILABLE = 'password-not-available'
    PERFORMANCE_NETWORK = 'performance-network'
    PERFORMANCE_INSTANCE_STORE = 'performance-instance-store'
    PERFORMANCE_EBS_VOLUME = 'performance-ebs-volume'
    PERFORMANCE_OTHER = 'performance-other'
    OTHER = 'other'

class ReportInstanceStatusRequestStatusEnum(str, Enum):
    r"""The status of all instances listed."""
    OK = 'ok'
    IMPAIRED = 'impaired'


@dataclasses.dataclass
class ReportInstanceStatusRequest:
    
    instances: list[str] = dataclasses.field()  
    reason_codes: list[ReportInstanceStatusRequestReasonCodesEnum] = dataclasses.field()  
    status: ReportInstanceStatusRequestStatusEnum = dataclasses.field()  
    description: Optional[str] = dataclasses.field(default=None)  
    dry_run: Optional[bool] = dataclasses.field(default=None)  
    end_time: Optional[datetime] = dataclasses.field(default=None)  
    start_time: Optional[datetime] = dataclasses.field(default=None)  
    