/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;

/**
 * User200ApplicationXML - The user object represents a specific user on Zoom.
 */
public class User200ApplicationXML {
    /**
     * User's account ID.
     */
    
    public String accountId;
    public User200ApplicationXML withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * CMS ID of user, only enabled for Kaltura integration.
     */
    
    public String cmsUserId;
    public User200ApplicationXML withCmsUserId(String cmsUserId) {
        this.cmsUserId = cmsUserId;
        return this;
    }
    
    /**
     * User's company.
     */
    
    public String company;
    public User200ApplicationXML withCompany(String company) {
        this.company = company;
        return this;
    }
    
    /**
     * The date and time at which this user was created.
     */
    
    public OffsetDateTime createdAt;
    public User200ApplicationXML withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Custom attribute(s) that have been assigned to the user.
     */
    
    public User200ApplicationXMLCustomAttributes customAttributes;
    public User200ApplicationXML withCustomAttributes(User200ApplicationXMLCustomAttributes customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }
    
    /**
     * Department.
     */
    
    public String dept;
    public User200ApplicationXML withDept(String dept) {
        this.dept = dept;
        return this;
    }
    
    /**
     * User's email address.
     */
    
    public String email;
    public User200ApplicationXML withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * User's first name.
     */
    
    public String firstName;
    public User200ApplicationXML withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * IDs of the web groups user belongs to. 
     */
    
    public String[] groupIds;
    public User200ApplicationXML withGroupIds(String[] groupIds) {
        this.groupIds = groupIds;
        return this;
    }
    
    /**
     * User's host key.
     */
    
    public String hostKey;
    public User200ApplicationXML withHostKey(String hostKey) {
        this.hostKey = hostKey;
        return this;
    }
    
    /**
     * User ID.
     */
    
    public String id;
    public User200ApplicationXML withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * IM IDs of the groups user belongs to.
     */
    
    public String[] imGroupIds;
    public User200ApplicationXML withImGroupIds(String[] imGroupIds) {
        this.imGroupIds = imGroupIds;
        return this;
    }
    
    
    public String jid;
    public User200ApplicationXML withJid(String jid) {
        this.jid = jid;
        return this;
    }
    
    /**
     * User's job title.
     */
    
    public String jobTitle;
    public User200ApplicationXML withJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
        return this;
    }
    
    /**
     * Default language for the Zoom Web Portal.
     */
    
    public String language;
    public User200ApplicationXML withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * User last login client version.
     */
    
    public String lastClientVersion;
    public User200ApplicationXML withLastClientVersion(String lastClientVersion) {
        this.lastClientVersion = lastClientVersion;
        return this;
    }
    
    /**
     * User last login time.
     */
    
    public OffsetDateTime lastLoginTime;
    public User200ApplicationXML withLastLoginTime(OffsetDateTime lastLoginTime) {
        this.lastLoginTime = lastLoginTime;
        return this;
    }
    
    /**
     * User's last name.
     */
    
    public String lastName;
    public User200ApplicationXML withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * User's location.
     */
    
    public String location;
    public User200ApplicationXML withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Login type. 
     * 
     * `0` : Facebook
     * 
     * `1` : Google
     * 
     * `99` : API
     * 
     * `100` : ZOOM
     * 
     * `101` : SSO
     */
    
    public User200ApplicationXMLLoginTypeEnum loginType;
    public User200ApplicationXML withLoginType(User200ApplicationXMLLoginTypeEnum loginType) {
        this.loginType = loginType;
        return this;
    }
    
    /**
     * The manager for the user.
     */
    
    public String manager;
    public User200ApplicationXML withManager(String manager) {
        this.manager = manager;
        return this;
    }
    
    /**
     * User's personal meeting url.
     */
    
    public String personalMeetingUrl;
    public User200ApplicationXML withPersonalMeetingUrl(String personalMeetingUrl) {
        this.personalMeetingUrl = personalMeetingUrl;
        return this;
    }
    
    /**
     * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead of this field. &lt;br&gt; User's country for Company Phone Number.
     */
    
    public String phoneCountry;
    public User200ApplicationXML withPhoneCountry(String phoneCountry) {
        this.phoneCountry = phoneCountry;
        return this;
    }
    
    /**
     * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead of this field. &lt;br&gt; User's phone number.
     */
    
    public String phoneNumber;
    public User200ApplicationXML withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    
    public User200ApplicationXMLPhoneNumbers phoneNumbers;
    public User200ApplicationXML withPhoneNumbers(User200ApplicationXMLPhoneNumbers phoneNumbers) {
        this.phoneNumbers = phoneNumbers;
        return this;
    }
    
    /**
     * The URL for user's profile picture.
     */
    
    public String picUrl;
    public User200ApplicationXML withPicUrl(String picUrl) {
        this.picUrl = picUrl;
        return this;
    }
    
    /**
     * United plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-united-plans). Only returned if user is enrolled in the Zoom United plan.
     */
    
    public String planUnitedType;
    public User200ApplicationXML withPlanUnitedType(String planUnitedType) {
        this.planUnitedType = planUnitedType;
        return this;
    }
    
    /**
     * Personal meeting ID.
     */
    
    public Long pmi;
    public User200ApplicationXML withPmi(Long pmi) {
        this.pmi = pmi;
        return this;
    }
    
    /**
     * Unique identifier of the [role](https://marketplace.zoom.us/docs/api-reference/zoom-api/roles/roles) assigned to the user.
     */
    
    public String roleId;
    public User200ApplicationXML withRoleId(String roleId) {
        this.roleId = roleId;
        return this;
    }
    
    /**
     * User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.
     */
    
    public String roleName;
    public User200ApplicationXML withRoleName(String roleName) {
        this.roleName = roleName;
        return this;
    }
    
    /**
     * Status of user's account.
     */
    
    public User200ApplicationXMLStatusEnum status;
    public User200ApplicationXML withStatus(User200ApplicationXMLStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The time zone of the user.
     */
    
    public String timezone;
    public User200ApplicationXML withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }
    
    /**
     * User's plan type:&lt;br&gt;`1` - Basic.&lt;br&gt;`2` - Licensed.&lt;br&gt;`3` - On-prem.&lt;br&gt;`99` - None (this can only be set with `ssoCreate`).
     */
    
    public User200ApplicationXMLTypeEnum type;
    public User200ApplicationXML withType(User200ApplicationXMLTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Displays `true` if user has enabled PMI for instant meetinsgs, `false` otherwise.
     */
    
    public Boolean usePmi;
    public User200ApplicationXML withUsePmi(Boolean usePmi) {
        this.usePmi = usePmi;
        return this;
    }
    
    /**
     * Personal meeting room URL, if the user has one.
     */
    
    public String vanityUrl;
    public User200ApplicationXML withVanityUrl(String vanityUrl) {
        this.vanityUrl = vanityUrl;
        return this;
    }
    
    /**
     * Displays whether user is verified or not. &lt;br&gt;
     * `1` - Account verified.&lt;br&gt;
     * `0` - Account not verified.
     */
    
    public Long verified;
    public User200ApplicationXML withVerified(Long verified) {
        this.verified = verified;
        return this;
    }
    
}
