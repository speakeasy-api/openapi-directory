/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PutUsersIdRequestBody {
    /**
     * Whether the user wishes to have all monetary values converted to their base currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("always_show_base_currency")
    public Boolean alwaysShowBaseCurrency;
    public PutUsersIdRequestBody withAlwaysShowBaseCurrency(Boolean alwaysShowBaseCurrency) {
        this.alwaysShowBaseCurrency = alwaysShowBaseCurrency;
        return this;
    }
    
    /**
     * A new base currency code for the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("base_currency_code")
    public String baseCurrencyCode;
    public PutUsersIdRequestBody withBaseCurrencyCode(String baseCurrencyCode) {
        this.baseCurrencyCode = baseCurrencyCode;
        return this;
    }
    
    /**
     * Whether the user is a beta user, and wishes to try out new features.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beta_user")
    public Boolean betaUser;
    public PutUsersIdRequestBody withBetaUser(Boolean betaUser) {
        this.betaUser = betaUser;
        return this;
    }
    
    /**
     * A new email address for the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public PutUsersIdRequestBody withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * A new name for the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PutUsersIdRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A new time zone for the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time_zone")
    public String timeZone;
    public PutUsersIdRequestBody withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }
    
    /**
     * The day of the week the user wishes their calendars to start on. A number between 0 and 6, where 0 is Sunday and 6 is Saturday.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("week_start_day")
    public Long weekStartDay;
    public PutUsersIdRequestBody withWeekStartDay(Long weekStartDay) {
        this.weekStartDay = weekStartDay;
        return this;
    }
    
}
