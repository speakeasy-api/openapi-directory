<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Alert - A search alert that the user has created so that they can be notified when new posts match the search query specified by the alert.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Alert
{
	#[\JMS\Serializer\Annotation\SerializedName('alert_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $alertId = null;
    
    /**
     * The UTC date and time when the alert was last triggered and sent out (may be null).
     * 
     * @var ?\DateTime $lastSent
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_sent')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastSent = null;
    
    /**
     * The search phrase that the alert triggers on.
     * 
     * @var ?string $search
     */
	#[\JMS\Serializer\Annotation\SerializedName('search')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $search = null;
    
    /**
     * The number of time the alert has triggered and been send out.
     * 
     * @var ?int $sendCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('send_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sendCount = null;
    
    /**
     * A list of the post types that the alert is set to match against.  The available post types are: offer, wanted <br /><br /> NOTE: Additional post types may be added in the future (eg. events) so clients should take care to support arbitrary types being returned.
     * 
     * 
     * 
     * @var ?array<string> $types
     */
	#[\JMS\Serializer\Annotation\SerializedName('types')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $types = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
	public function __construct()
	{
		$this->alertId = null;
		$this->lastSent = null;
		$this->search = null;
		$this->sendCount = null;
		$this->types = null;
		$this->userId = null;
	}
}
