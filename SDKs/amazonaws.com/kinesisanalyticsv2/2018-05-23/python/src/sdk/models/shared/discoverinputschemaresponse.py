"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sourceschema as shared_sourceschema
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DiscoverInputSchemaResponse:
    r"""Success"""
    
    input_schema: Optional[shared_sourceschema.SourceSchema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputSchema'), 'exclude': lambda f: f is None }})  
    parsed_input_records: Optional[list[list[str]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParsedInputRecords'), 'exclude': lambda f: f is None }})  
    processed_input_records: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProcessedInputRecords'), 'exclude': lambda f: f is None }})  
    raw_input_records: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RawInputRecords'), 'exclude': lambda f: f is None }})  
    