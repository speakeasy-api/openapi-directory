"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import curationcommentcreate as shared_curationcommentcreate
from ..shared import errormessage as shared_errormessage
from typing import Optional


@dataclasses.dataclass
class PostAccountInstitutionReviewCurationIDCommentsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PostAccountInstitutionReviewCurationIDCommentsRequest:
    
    curation_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'curation_id', 'style': 'simple', 'explode': False }})
    r"""ID of the curation"""  
    curation_comment_create: shared_curationcommentcreate.CurationCommentCreate = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The content/value of the comment."""  
    

@dataclasses.dataclass
class PostAccountInstitutionReviewCurationIDCommentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_message: Optional[shared_errormessage.ErrorMessage] = dataclasses.field(default=None)
    r"""Forbidden"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    