/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Projects {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Projects(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Returns the list of Changelogs.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsChangelogsListResponse dialogflowProjectsLocationsAgentsChangelogsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsChangelogsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsChangelogsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsChangelogsListRequest.class, baseUrl, "/v3beta1/{parent}/changelogs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsChangelogsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsChangelogsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsChangelogsListResponse() {{
            googleCloudDialogflowCxV3beta1ListChangelogsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListChangelogsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListChangelogsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListChangelogsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an agent in the specified location. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsCreateResponse dialogflowProjectsLocationsAgentsCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsCreateRequest.class, baseUrl, "/v3beta1/{parent}/agents", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1Agent", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsCreateResponse() {{
            googleCloudDialogflowCxV3beta1Agent = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Agent out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Agent.class);
                res.googleCloudDialogflowCxV3beta1Agent = out;
            }
        }

        return res;
    }

    /**
     * Fetches a list of continuous test results for a given environment.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsContinuousTestResultsListResponse dialogflowProjectsLocationsAgentsEnvironmentsContinuousTestResultsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsContinuousTestResultsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsContinuousTestResultsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsContinuousTestResultsListRequest.class, baseUrl, "/v3beta1/{parent}/continuousTestResults", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsContinuousTestResultsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsContinuousTestResultsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsContinuousTestResultsListResponse() {{
            googleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an Environment in the specified Agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: Environment
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsCreateResponse dialogflowProjectsLocationsAgentsEnvironmentsCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsCreateRequest.class, baseUrl, "/v3beta1/{parent}/environments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1EnvironmentInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsCreateResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Deploys a flow to the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: DeployFlowMetadata - `response`: DeployFlowResponse
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeployFlowResponse dialogflowProjectsLocationsAgentsEnvironmentsDeployFlow(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeployFlowRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeployFlowSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeployFlowRequest.class, baseUrl, "/v3beta1/{environment}:deployFlow", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1DeployFlowRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeployFlowRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeployFlowResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeployFlowResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all deployments in the specified Environment.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeploymentsListResponse dialogflowProjectsLocationsAgentsEnvironmentsDeploymentsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeploymentsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeploymentsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeploymentsListRequest.class, baseUrl, "/v3beta1/{parent}/deployments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeploymentsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeploymentsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsDeploymentsListResponse() {{
            googleCloudDialogflowCxV3beta1ListDeploymentsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListDeploymentsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListDeploymentsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListDeploymentsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an Experiment in the specified Environment.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsCreateResponse dialogflowProjectsLocationsAgentsEnvironmentsExperimentsCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsCreateRequest.class, baseUrl, "/v3beta1/{parent}/experiments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1Experiment", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsCreateResponse() {{
            googleCloudDialogflowCxV3beta1Experiment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Experiment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Experiment.class);
                res.googleCloudDialogflowCxV3beta1Experiment = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all experiments in the specified Environment.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsListResponse dialogflowProjectsLocationsAgentsEnvironmentsExperimentsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsListRequest.class, baseUrl, "/v3beta1/{parent}/experiments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsListResponse() {{
            googleCloudDialogflowCxV3beta1ListExperimentsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListExperimentsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListExperimentsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListExperimentsResponse = out;
            }
        }

        return res;
    }

    /**
     * Starts the specified Experiment. This rpc only changes the state of experiment from PENDING to RUNNING.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStartResponse dialogflowProjectsLocationsAgentsEnvironmentsExperimentsStart(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStartRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStartSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStartRequest.class, baseUrl, "/v3beta1/{name}:start", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStartRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStartResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStartResponse() {{
            googleCloudDialogflowCxV3beta1Experiment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Experiment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Experiment.class);
                res.googleCloudDialogflowCxV3beta1Experiment = out;
            }
        }

        return res;
    }

    /**
     * Stops the specified Experiment. This rpc only changes the state of experiment from RUNNING to DONE.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStopResponse dialogflowProjectsLocationsAgentsEnvironmentsExperimentsStop(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStopRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStopSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStopRequest.class, baseUrl, "/v3beta1/{name}:stop", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStopRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStopResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsExperimentsStopResponse() {{
            googleCloudDialogflowCxV3beta1Experiment = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Experiment out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Experiment.class);
                res.googleCloudDialogflowCxV3beta1Experiment = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all environments in the specified Agent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsListResponse dialogflowProjectsLocationsAgentsEnvironmentsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsListRequest.class, baseUrl, "/v3beta1/{parent}/environments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsListResponse() {{
            googleCloudDialogflowCxV3beta1ListEnvironmentsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListEnvironmentsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListEnvironmentsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListEnvironmentsResponse = out;
            }
        }

        return res;
    }

    /**
     * Looks up the history of the specified Environment.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistoryResponse dialogflowProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistory(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistoryRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistorySecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistoryRequest.class, baseUrl, "/v3beta1/{name}:lookupEnvironmentHistory", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistoryRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistoryResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsLookupEnvironmentHistoryResponse() {{
            googleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse.class);
                res.googleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse = out;
            }
        }

        return res;
    }

    /**
     * Kicks off a continuous test under the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: RunContinuousTestMetadata - `response`: RunContinuousTestResponse
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsRunContinuousTestResponse dialogflowProjectsLocationsAgentsEnvironmentsRunContinuousTest(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsRunContinuousTestRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsRunContinuousTestSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsRunContinuousTestRequest.class, baseUrl, "/v3beta1/{environment}:runContinuousTest", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsRunContinuousTestRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsRunContinuousTestResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsEnvironmentsRunContinuousTestResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Creates a flow in the specified agent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsCreateResponse dialogflowProjectsLocationsAgentsFlowsCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsCreateRequest.class, baseUrl, "/v3beta1/{parent}/flows", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1FlowInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsCreateResponse() {{
            googleCloudDialogflowCxV3beta1Flow = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Flow out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Flow.class);
                res.googleCloudDialogflowCxV3beta1Flow = out;
            }
        }

        return res;
    }

    /**
     * Exports the specified flow to a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportFlowResponse Note that resources (e.g. intents, entities, webhooks) that the flow references will also be exported.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsExportResponse dialogflowProjectsLocationsAgentsFlowsExport(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsExportRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsExportSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsExportRequest.class, baseUrl, "/v3beta1/{name}:export", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1ExportFlowRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsExportRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsExportResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsExportResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Imports the specified flow to the specified agent from a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ImportFlowResponse Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsImportResponse dialogflowProjectsLocationsAgentsFlowsImport(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsImportRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsImportSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsImportRequest.class, baseUrl, "/v3beta1/{parent}/flows:import", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1ImportFlowRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsImportRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsImportResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsImportResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all flows in the specified agent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsListResponse dialogflowProjectsLocationsAgentsFlowsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsListRequest.class, baseUrl, "/v3beta1/{parent}/flows", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsListResponse() {{
            googleCloudDialogflowCxV3beta1ListFlowsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListFlowsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListFlowsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListFlowsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a page in the specified flow.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesCreateResponse dialogflowProjectsLocationsAgentsFlowsPagesCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesCreateRequest.class, baseUrl, "/v3beta1/{parent}/pages", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1PageInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesCreateResponse() {{
            googleCloudDialogflowCxV3beta1Page = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Page out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Page.class);
                res.googleCloudDialogflowCxV3beta1Page = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all pages in the specified flow.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesListResponse dialogflowProjectsLocationsAgentsFlowsPagesList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesListRequest.class, baseUrl, "/v3beta1/{parent}/pages", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsPagesListResponse() {{
            googleCloudDialogflowCxV3beta1ListPagesResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListPagesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListPagesResponse.class);
                res.googleCloudDialogflowCxV3beta1ListPagesResponse = out;
            }
        }

        return res;
    }

    /**
     * Trains the specified flow. Note that only the flow in 'draft' environment is trained. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTrainResponse dialogflowProjectsLocationsAgentsFlowsTrain(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTrainRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTrainSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTrainRequest.class, baseUrl, "/v3beta1/{name}:train", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTrainRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTrainResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTrainResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Creates an TransitionRouteGroup in the specified flow. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsCreateResponse dialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsCreateRequest.class, baseUrl, "/v3beta1/{parent}/transitionRouteGroups", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1TransitionRouteGroupInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsCreateResponse() {{
            googleCloudDialogflowCxV3beta1TransitionRouteGroup = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1TransitionRouteGroup out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1TransitionRouteGroup.class);
                res.googleCloudDialogflowCxV3beta1TransitionRouteGroup = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all transition route groups in the specified flow.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsListResponse dialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsListRequest.class, baseUrl, "/v3beta1/{parent}/transitionRouteGroups", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsTransitionRouteGroupsListResponse() {{
            googleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse = out;
            }
        }

        return res;
    }

    /**
     * Validates the specified flow and creates or updates validation results. Please call this API after the training is completed to get the complete validation results.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsValidateResponse dialogflowProjectsLocationsAgentsFlowsValidate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsValidateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsValidateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsValidateRequest.class, baseUrl, "/v3beta1/{name}:validate", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1ValidateFlowRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsValidateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsValidateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsValidateResponse() {{
            googleCloudDialogflowCxV3beta1FlowValidationResult = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1FlowValidationResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1FlowValidationResult.class);
                res.googleCloudDialogflowCxV3beta1FlowValidationResult = out;
            }
        }

        return res;
    }

    /**
     * Compares the specified base version with target version.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCompareVersionsResponse dialogflowProjectsLocationsAgentsFlowsVersionsCompareVersions(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCompareVersionsRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCompareVersionsSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCompareVersionsRequest.class, baseUrl, "/v3beta1/{baseVersion}:compareVersions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1CompareVersionsRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCompareVersionsRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCompareVersionsResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCompareVersionsResponse() {{
            googleCloudDialogflowCxV3beta1CompareVersionsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1CompareVersionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1CompareVersionsResponse.class);
                res.googleCloudDialogflowCxV3beta1CompareVersionsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a Version in the specified Flow. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateVersionOperationMetadata - `response`: Version
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCreateResponse dialogflowProjectsLocationsAgentsFlowsVersionsCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCreateRequest.class, baseUrl, "/v3beta1/{parent}/versions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1VersionInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsCreateResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all versions in the specified Flow.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsListResponse dialogflowProjectsLocationsAgentsFlowsVersionsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsListRequest.class, baseUrl, "/v3beta1/{parent}/versions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsListResponse() {{
            googleCloudDialogflowCxV3beta1ListVersionsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListVersionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListVersionsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListVersionsResponse = out;
            }
        }

        return res;
    }

    /**
     * Loads resources in the specified version to the draft flow. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsLoadResponse dialogflowProjectsLocationsAgentsFlowsVersionsLoad(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsLoadRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsLoadSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsLoadRequest.class, baseUrl, "/v3beta1/{name}:load", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1LoadVersionRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsLoadRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsLoadResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsFlowsVersionsLoadResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Creates an intent in the specified agent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsCreateResponse dialogflowProjectsLocationsAgentsIntentsCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsCreateRequest.class, baseUrl, "/v3beta1/{parent}/intents", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1Intent", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsCreateResponse() {{
            googleCloudDialogflowCxV3beta1Intent = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Intent out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Intent.class);
                res.googleCloudDialogflowCxV3beta1Intent = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all intents in the specified agent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsListResponse dialogflowProjectsLocationsAgentsIntentsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsListRequest.class, baseUrl, "/v3beta1/{parent}/intents", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsIntentsListResponse() {{
            googleCloudDialogflowCxV3beta1ListIntentsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListIntentsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListIntentsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListIntentsResponse = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all agents in the specified location.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsListResponse dialogflowProjectsLocationsAgentsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsListRequest.class, baseUrl, "/v3beta1/{parent}/agents", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsListResponse() {{
            googleCloudDialogflowCxV3beta1ListAgentsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListAgentsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListAgentsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListAgentsResponse = out;
            }
        }

        return res;
    }

    /**
     * Restores the specified agent from a binary file. Replaces the current agent with a new one. Note that all existing resources in agent (e.g. intents, entity types, flows) will be removed. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsRestoreResponse dialogflowProjectsLocationsAgentsRestore(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsRestoreRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsRestoreSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsRestoreRequest.class, baseUrl, "/v3beta1/{name}:restore", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1RestoreAgentRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsRestoreRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsRestoreResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsRestoreResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsDetectIntentResponse dialogflowProjectsLocationsAgentsSessionsDetectIntent(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsDetectIntentRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsDetectIntentSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsDetectIntentRequest.class, baseUrl, "/v3beta1/{session}:detectIntent", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1DetectIntentRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsDetectIntentRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsDetectIntentResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsDetectIntentResponse() {{
            googleCloudDialogflowCxV3beta1DetectIntentResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1DetectIntentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1DetectIntentResponse.class);
                res.googleCloudDialogflowCxV3beta1DetectIntentResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a session entity type.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesCreateResponse dialogflowProjectsLocationsAgentsSessionsEntityTypesCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesCreateRequest.class, baseUrl, "/v3beta1/{parent}/entityTypes", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1SessionEntityType", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesCreateResponse() {{
            googleCloudDialogflowCxV3beta1SessionEntityType = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1SessionEntityType out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1SessionEntityType.class);
                res.googleCloudDialogflowCxV3beta1SessionEntityType = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all session entity types in the specified session.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesListResponse dialogflowProjectsLocationsAgentsSessionsEntityTypesList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesListRequest.class, baseUrl, "/v3beta1/{parent}/entityTypes", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsEntityTypesListResponse() {{
            googleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse.class);
                res.googleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse = out;
            }
        }

        return res;
    }

    /**
     * Fulfills a matched intent returned by MatchIntent. Must be called after MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is undefined.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsFulfillIntentResponse dialogflowProjectsLocationsAgentsSessionsFulfillIntent(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsFulfillIntentRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsFulfillIntentSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsFulfillIntentRequest.class, baseUrl, "/v3beta1/{session}:fulfillIntent", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1FulfillIntentRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsFulfillIntentRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsFulfillIntentResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsFulfillIntentResponse() {{
            googleCloudDialogflowCxV3beta1FulfillIntentResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1FulfillIntentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1FulfillIntentResponse.class);
                res.googleCloudDialogflowCxV3beta1FulfillIntentResponse = out;
            }
        }

        return res;
    }

    /**
     * Returns preliminary intent match results, doesn't change the session status.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsMatchIntentResponse dialogflowProjectsLocationsAgentsSessionsMatchIntent(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsMatchIntentRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsMatchIntentSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsMatchIntentRequest.class, baseUrl, "/v3beta1/{session}:matchIntent", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1MatchIntentRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsMatchIntentRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsMatchIntentResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsSessionsMatchIntentResponse() {{
            googleCloudDialogflowCxV3beta1MatchIntentResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1MatchIntentResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1MatchIntentResponse.class);
                res.googleCloudDialogflowCxV3beta1MatchIntentResponse = out;
            }
        }

        return res;
    }

    /**
     * Batch deletes test cases.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchDeleteResponse dialogflowProjectsLocationsAgentsTestCasesBatchDelete(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchDeleteRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchDeleteRequest.class, baseUrl, "/v3beta1/{parent}/testCases:batchDelete", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1BatchDeleteTestCasesRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchDeleteResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchDeleteResponse() {{
            googleProtobufEmpty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Kicks off a batch run of test cases. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: BatchRunTestCasesMetadata - `response`: BatchRunTestCasesResponse
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchRunResponse dialogflowProjectsLocationsAgentsTestCasesBatchRun(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchRunRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchRunSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchRunRequest.class, baseUrl, "/v3beta1/{parent}/testCases:batchRun", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1BatchRunTestCasesRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchRunRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchRunResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesBatchRunResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Calculates the test coverage for an agent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCalculateCoverageResponse dialogflowProjectsLocationsAgentsTestCasesCalculateCoverage(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCalculateCoverageRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCalculateCoverageSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCalculateCoverageRequest.class, baseUrl, "/v3beta1/{agent}/testCases:calculateCoverage", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCalculateCoverageRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCalculateCoverageResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCalculateCoverageResponse() {{
            googleCloudDialogflowCxV3beta1CalculateCoverageResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse.class);
                res.googleCloudDialogflowCxV3beta1CalculateCoverageResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a test case for the given agent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCreateResponse dialogflowProjectsLocationsAgentsTestCasesCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCreateRequest.class, baseUrl, "/v3beta1/{parent}/testCases", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1TestCaseInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesCreateResponse() {{
            googleCloudDialogflowCxV3beta1TestCase = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1TestCase out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1TestCase.class);
                res.googleCloudDialogflowCxV3beta1TestCase = out;
            }
        }

        return res;
    }

    /**
     * Exports the test cases under the agent to a Cloud Storage bucket or a local file. Filter can be applied to export a subset of test cases. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: ExportTestCasesMetadata - `response`: ExportTestCasesResponse
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesExportResponse dialogflowProjectsLocationsAgentsTestCasesExport(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesExportRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesExportSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesExportRequest.class, baseUrl, "/v3beta1/{parent}/testCases:export", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1ExportTestCasesRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesExportRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesExportResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesExportResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Imports the test cases from a Cloud Storage bucket or a local file. It always creates new test cases and won't overwrite any existing ones. The provided ID in the imported test case is neglected. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: ImportTestCasesMetadata - `response`: ImportTestCasesResponse
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesImportResponse dialogflowProjectsLocationsAgentsTestCasesImport(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesImportRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesImportSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesImportRequest.class, baseUrl, "/v3beta1/{parent}/testCases:import", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1ImportTestCasesRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesImportRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesImportResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesImportResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Fetches a list of test cases for a given agent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesListResponse dialogflowProjectsLocationsAgentsTestCasesList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesListRequest.class, baseUrl, "/v3beta1/{parent}/testCases", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesListResponse() {{
            googleCloudDialogflowCxV3beta1ListTestCasesResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListTestCasesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListTestCasesResponse.class);
                res.googleCloudDialogflowCxV3beta1ListTestCasesResponse = out;
            }
        }

        return res;
    }

    /**
     * Fetches a list of results for a given test case.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesResultsListResponse dialogflowProjectsLocationsAgentsTestCasesResultsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesResultsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesResultsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesResultsListRequest.class, baseUrl, "/v3beta1/{parent}/results", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesResultsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesResultsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesResultsListResponse() {{
            googleCloudDialogflowCxV3beta1ListTestCaseResultsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListTestCaseResultsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListTestCaseResultsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListTestCaseResultsResponse = out;
            }
        }

        return res;
    }

    /**
     * Kicks off a test case run. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: RunTestCaseMetadata - `response`: RunTestCaseResponse
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesRunResponse dialogflowProjectsLocationsAgentsTestCasesRun(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesRunRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesRunSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesRunRequest.class, baseUrl, "/v3beta1/{name}:run", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1RunTestCaseRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesRunRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesRunResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsTestCasesRunResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Creates a webhook in the specified agent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksCreateResponse dialogflowProjectsLocationsAgentsWebhooksCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksCreateRequest.class, baseUrl, "/v3beta1/{parent}/webhooks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1Webhook", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksCreateResponse() {{
            googleCloudDialogflowCxV3beta1Webhook = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Webhook out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1Webhook.class);
                res.googleCloudDialogflowCxV3beta1Webhook = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all webhooks in the specified agent.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksListResponse dialogflowProjectsLocationsAgentsWebhooksList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksListRequest.class, baseUrl, "/v3beta1/{parent}/webhooks", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsAgentsWebhooksListResponse() {{
            googleCloudDialogflowCxV3beta1ListWebhooksResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListWebhooksResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListWebhooksResponse.class);
                res.googleCloudDialogflowCxV3beta1ListWebhooksResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists information about the supported locations for this service.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsListResponse dialogflowProjectsLocationsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsListRequest.class, baseUrl, "/v3beta1/{name}/locations", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsListResponse() {{
            googleCloudLocationListLocationsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudLocationListLocationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudLocationListLocationsResponse.class);
                res.googleCloudLocationListLocationsResponse = out;
            }
        }

        return res;
    }

    /**
     * Create security settings in the specified location.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsCreateResponse dialogflowProjectsLocationsSecuritySettingsCreate(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsCreateRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsCreateRequest.class, baseUrl, "/v3beta1/{parent}/securitySettings", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1SecuritySettings", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsCreateResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsCreateResponse() {{
            googleCloudDialogflowCxV3beta1SecuritySettings = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1SecuritySettings out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1SecuritySettings.class);
                res.googleCloudDialogflowCxV3beta1SecuritySettings = out;
            }
        }

        return res;
    }

    /**
     * Deletes the specified SecuritySettings.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsDeleteResponse dialogflowProjectsLocationsSecuritySettingsDelete(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsDeleteRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsDeleteRequest.class, baseUrl, "/v3beta1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsDeleteResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsDeleteResponse() {{
            googleProtobufEmpty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all security settings in the specified location.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsListResponse dialogflowProjectsLocationsSecuritySettingsList(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsListRequest.class, baseUrl, "/v3beta1/{parent}/securitySettings", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsListResponse() {{
            googleCloudDialogflowCxV3beta1ListSecuritySettingsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListSecuritySettingsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1ListSecuritySettingsResponse.class);
                res.googleCloudDialogflowCxV3beta1ListSecuritySettingsResponse = out;
            }
        }

        return res;
    }

    /**
     * Updates the specified SecuritySettings.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsPatchResponse dialogflowProjectsLocationsSecuritySettingsPatch(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsPatchRequest request, org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsPatchSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsPatchRequest.class, baseUrl, "/v3beta1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudDialogflowCxV3beta1SecuritySettings", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsPatchRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsPatchResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsLocationsSecuritySettingsPatchResponse() {{
            googleCloudDialogflowCxV3beta1SecuritySettings = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1SecuritySettings out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudDialogflowCxV3beta1SecuritySettings.class);
                res.googleCloudDialogflowCxV3beta1SecuritySettings = out;
            }
        }

        return res;
    }

    /**
     * Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsOperationsCancelResponse dialogflowProjectsOperationsCancel(org.openapis.openapi.models.operations.DialogflowProjectsOperationsCancelRequest request, org.openapis.openapi.models.operations.DialogflowProjectsOperationsCancelSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsOperationsCancelRequest.class, baseUrl, "/v3beta1/{name}:cancel", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsOperationsCancelRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsOperationsCancelResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsOperationsCancelResponse() {{
            googleProtobufEmpty = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsOperationsGetResponse dialogflowProjectsOperationsGet(org.openapis.openapi.models.operations.DialogflowProjectsOperationsGetRequest request, org.openapis.openapi.models.operations.DialogflowProjectsOperationsGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsOperationsGetRequest.class, baseUrl, "/v3beta1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsOperationsGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsOperationsGetResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsOperationsGetResponse() {{
            googleLongrunningOperation = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DialogflowProjectsOperationsListResponse dialogflowProjectsOperationsList(org.openapis.openapi.models.operations.DialogflowProjectsOperationsListRequest request, org.openapis.openapi.models.operations.DialogflowProjectsOperationsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DialogflowProjectsOperationsListRequest.class, baseUrl, "/v3beta1/{name}/operations", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.DialogflowProjectsOperationsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DialogflowProjectsOperationsListResponse res = new org.openapis.openapi.models.operations.DialogflowProjectsOperationsListResponse() {{
            googleLongrunningListOperationsResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningListOperationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningListOperationsResponse.class);
                res.googleLongrunningListOperationsResponse = out;
            }
        }

        return res;
    }
}