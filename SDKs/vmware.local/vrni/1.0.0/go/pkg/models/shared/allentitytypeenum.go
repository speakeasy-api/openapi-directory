// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AllEntityTypeEnum string

const (
	AllEntityTypeEnumGroup                       AllEntityTypeEnum = "Group"
	AllEntityTypeEnumBaseSecurityGroup           AllEntityTypeEnum = "BaseSecurityGroup"
	AllEntityTypeEnumBaseEvent                   AllEntityTypeEnum = "BaseEvent"
	AllEntityTypeEnumBaseVirtualMachine          AllEntityTypeEnum = "BaseVirtualMachine"
	AllEntityTypeEnumBaseFirewallRule            AllEntityTypeEnum = "BaseFirewallRule"
	AllEntityTypeEnumBaseIPSet                   AllEntityTypeEnum = "BaseIPSet"
	AllEntityTypeEnumBaseL2Network               AllEntityTypeEnum = "BaseL2Network"
	AllEntityTypeEnumBaseFirewall                AllEntityTypeEnum = "BaseFirewall"
	AllEntityTypeEnumBaseService                 AllEntityTypeEnum = "BaseService"
	AllEntityTypeEnumBaseServiceGroup            AllEntityTypeEnum = "BaseServiceGroup"
	AllEntityTypeEnumBaseVnic                    AllEntityTypeEnum = "BaseVnic"
	AllEntityTypeEnumVirtualMachine              AllEntityTypeEnum = "VirtualMachine"
	AllEntityTypeEnumEc2Instance                 AllEntityTypeEnum = "EC2Instance"
	AllEntityTypeEnumHost                        AllEntityTypeEnum = "Host"
	AllEntityTypeEnumVnic                        AllEntityTypeEnum = "Vnic"
	AllEntityTypeEnumVmknic                      AllEntityTypeEnum = "Vmknic"
	AllEntityTypeEnumVxlanLayer2Network          AllEntityTypeEnum = "VxlanLayer2Network"
	AllEntityTypeEnumVlanL2Network               AllEntityTypeEnum = "VlanL2Network"
	AllEntityTypeEnumCluster                     AllEntityTypeEnum = "Cluster"
	AllEntityTypeEnumSecurityTag                 AllEntityTypeEnum = "SecurityTag"
	AllEntityTypeEnumResourcePool                AllEntityTypeEnum = "ResourcePool"
	AllEntityTypeEnumNsxipSet                    AllEntityTypeEnum = "NSXIPSet"
	AllEntityTypeEnumEc2IPSet                    AllEntityTypeEnum = "EC2IPSet"
	AllEntityTypeEnumNsxSecurityGroup            AllEntityTypeEnum = "NSXSecurityGroup"
	AllEntityTypeEnumEc2SecurityGroup            AllEntityTypeEnum = "EC2SecurityGroup"
	AllEntityTypeEnumFlow                        AllEntityTypeEnum = "Flow"
	AllEntityTypeEnumProblemEvent                AllEntityTypeEnum = "ProblemEvent"
	AllEntityTypeEnumApplication                 AllEntityTypeEnum = "Application"
	AllEntityTypeEnumTier                        AllEntityTypeEnum = "Tier"
	AllEntityTypeEnumNsxFirewallRule             AllEntityTypeEnum = "NSXFirewallRule"
	AllEntityTypeEnumEc2SgFirewallRule           AllEntityTypeEnum = "EC2SGFirewallRule"
	AllEntityTypeEnumNsxRedirectRule             AllEntityTypeEnum = "NSXRedirectRule"
	AllEntityTypeEnumVCenterManager              AllEntityTypeEnum = "VCenterManager"
	AllEntityTypeEnumNsxvManager                 AllEntityTypeEnum = "NSXVManager"
	AllEntityTypeEnumBaseManager                 AllEntityTypeEnum = "BaseManager"
	AllEntityTypeEnumBaseNsxManager              AllEntityTypeEnum = "BaseNSXManager"
	AllEntityTypeEnumNsxService                  AllEntityTypeEnum = "NSXService"
	AllEntityTypeEnumEc2Service                  AllEntityTypeEnum = "EC2Service"
	AllEntityTypeEnumVpc                         AllEntityTypeEnum = "VPC"
	AllEntityTypeEnumNsxDistributedFirewall      AllEntityTypeEnum = "NSXDistributedFirewall"
	AllEntityTypeEnumEc2Firewall                 AllEntityTypeEnum = "EC2Firewall"
	AllEntityTypeEnumNsxServiceGroup             AllEntityTypeEnum = "NSXServiceGroup"
	AllEntityTypeEnumDistributedVirtualSwitch    AllEntityTypeEnum = "DistributedVirtualSwitch"
	AllEntityTypeEnumDistributedVirtualPortgroup AllEntityTypeEnum = "DistributedVirtualPortgroup"
	AllEntityTypeEnumVcDatacenter                AllEntityTypeEnum = "VCDatacenter"
	AllEntityTypeEnumDatastore                   AllEntityTypeEnum = "Datastore"
	AllEntityTypeEnumFolder                      AllEntityTypeEnum = "Folder"
)

func (e AllEntityTypeEnum) ToPointer() *AllEntityTypeEnum {
	return &e
}

func (e *AllEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Group":
		fallthrough
	case "BaseSecurityGroup":
		fallthrough
	case "BaseEvent":
		fallthrough
	case "BaseVirtualMachine":
		fallthrough
	case "BaseFirewallRule":
		fallthrough
	case "BaseIPSet":
		fallthrough
	case "BaseL2Network":
		fallthrough
	case "BaseFirewall":
		fallthrough
	case "BaseService":
		fallthrough
	case "BaseServiceGroup":
		fallthrough
	case "BaseVnic":
		fallthrough
	case "VirtualMachine":
		fallthrough
	case "EC2Instance":
		fallthrough
	case "Host":
		fallthrough
	case "Vnic":
		fallthrough
	case "Vmknic":
		fallthrough
	case "VxlanLayer2Network":
		fallthrough
	case "VlanL2Network":
		fallthrough
	case "Cluster":
		fallthrough
	case "SecurityTag":
		fallthrough
	case "ResourcePool":
		fallthrough
	case "NSXIPSet":
		fallthrough
	case "EC2IPSet":
		fallthrough
	case "NSXSecurityGroup":
		fallthrough
	case "EC2SecurityGroup":
		fallthrough
	case "Flow":
		fallthrough
	case "ProblemEvent":
		fallthrough
	case "Application":
		fallthrough
	case "Tier":
		fallthrough
	case "NSXFirewallRule":
		fallthrough
	case "EC2SGFirewallRule":
		fallthrough
	case "NSXRedirectRule":
		fallthrough
	case "VCenterManager":
		fallthrough
	case "NSXVManager":
		fallthrough
	case "BaseManager":
		fallthrough
	case "BaseNSXManager":
		fallthrough
	case "NSXService":
		fallthrough
	case "EC2Service":
		fallthrough
	case "VPC":
		fallthrough
	case "NSXDistributedFirewall":
		fallthrough
	case "EC2Firewall":
		fallthrough
	case "NSXServiceGroup":
		fallthrough
	case "DistributedVirtualSwitch":
		fallthrough
	case "DistributedVirtualPortgroup":
		fallthrough
	case "VCDatacenter":
		fallthrough
	case "Datastore":
		fallthrough
	case "Folder":
		*e = AllEntityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllEntityTypeEnum: %v", v)
	}
}
