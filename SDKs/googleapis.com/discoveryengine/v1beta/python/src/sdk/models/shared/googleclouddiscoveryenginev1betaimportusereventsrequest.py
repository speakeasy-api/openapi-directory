"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddiscoveryenginev1betabigquerysource as shared_googleclouddiscoveryenginev1betabigquerysource
from ..shared import googleclouddiscoveryenginev1betagcssource as shared_googleclouddiscoveryenginev1betagcssource
from ..shared import googleclouddiscoveryenginev1betaimporterrorconfig as shared_googleclouddiscoveryenginev1betaimporterrorconfig
from ..shared import googleclouddiscoveryenginev1betaimportusereventsrequestinlinesource as shared_googleclouddiscoveryenginev1betaimportusereventsrequestinlinesource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDiscoveryengineV1betaImportUserEventsRequest:
    r"""Request message for the ImportUserEvents request."""
    
    bigquery_source: Optional[shared_googleclouddiscoveryenginev1betabigquerysource.GoogleCloudDiscoveryengineV1betaBigQuerySource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigquerySource'), 'exclude': lambda f: f is None }})
    r"""BigQuery source import data from."""  
    error_config: Optional[shared_googleclouddiscoveryenginev1betaimporterrorconfig.GoogleCloudDiscoveryengineV1betaImportErrorConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorConfig'), 'exclude': lambda f: f is None }})
    r"""Configuration of destination for Import related errors."""  
    gcs_source: Optional[shared_googleclouddiscoveryenginev1betagcssource.GoogleCloudDiscoveryengineV1betaGcsSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcsSource'), 'exclude': lambda f: f is None }})
    r"""Cloud Storage location for input content."""  
    inline_source: Optional[shared_googleclouddiscoveryenginev1betaimportusereventsrequestinlinesource.GoogleCloudDiscoveryengineV1betaImportUserEventsRequestInlineSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inlineSource'), 'exclude': lambda f: f is None }})
    r"""The inline source for the input config for ImportUserEvents method."""  
    