/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum CreateUploadRequestBodyTypeEnum {
  Avatar = "avatar",
  ProfileBackground = "profile_background",
  CardBackground = "card_background",
  CustomEmoji = "custom_emoji",
  Composer = "composer",
}

export class CreateUploadRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file?: any;

  /**
   * Use this flag to return an id and url
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=synchronous" })
  synchronous?: boolean;

  @SpeakeasyMetadata({ data: "multipart_form, name=type" })
  type: CreateUploadRequestBodyTypeEnum;

  /**
   * required if uploading an avatar
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=user_id" })
  userId?: number;
}

/**
 * file uploaded
 */
export class CreateUpload200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dominant_color" })
  dominantColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "extension" })
  extension: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filesize" })
  filesize: number;

  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height: number;

  @SpeakeasyMetadata()
  @Expose({ name: "human_filesize" })
  humanFilesize: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "original_filename" })
  originalFilename: string;

  @SpeakeasyMetadata()
  @Expose({ name: "retain_hours" })
  retainHours: string;

  @SpeakeasyMetadata()
  @Expose({ name: "short_path" })
  shortPath: string;

  @SpeakeasyMetadata()
  @Expose({ name: "short_url" })
  shortUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thumbnail_height" })
  thumbnailHeight: number;

  @SpeakeasyMetadata()
  @Expose({ name: "thumbnail_width" })
  thumbnailWidth: number;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width: number;
}

export class CreateUploadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * file uploaded
   */
  @SpeakeasyMetadata()
  createUpload200ApplicationJSONObject?: CreateUpload200ApplicationJSON;
}
