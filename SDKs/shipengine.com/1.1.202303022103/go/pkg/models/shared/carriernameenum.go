// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CarrierNameEnum - The shipping carriers that are supported by ShipEngine
type CarrierNameEnum string

const (
	CarrierNameEnumAccessWorldwide   CarrierNameEnum = "access_worldwide"
	CarrierNameEnumAmazonBuyShipping CarrierNameEnum = "amazon_buy_shipping"
	CarrierNameEnumAmazonShippingUk  CarrierNameEnum = "amazon_shipping_uk"
	CarrierNameEnumApc               CarrierNameEnum = "apc"
	CarrierNameEnumAsendia           CarrierNameEnum = "asendia"
	CarrierNameEnumAustraliaPost     CarrierNameEnum = "australia_post"
	CarrierNameEnumCanadaPost        CarrierNameEnum = "canada_post"
	CarrierNameEnumDhlEcommerce      CarrierNameEnum = "dhl_ecommerce"
	CarrierNameEnumDhlExpress        CarrierNameEnum = "dhl_express"
	CarrierNameEnumDhlExpressAu      CarrierNameEnum = "dhl_express_au"
	CarrierNameEnumDhlExpressCa      CarrierNameEnum = "dhl_express_ca"
	CarrierNameEnumDhlExpressUk      CarrierNameEnum = "dhl_express_uk"
	CarrierNameEnumDpd               CarrierNameEnum = "dpd"
	CarrierNameEnumEndicia           CarrierNameEnum = "endicia"
	CarrierNameEnumFedex             CarrierNameEnum = "fedex"
	CarrierNameEnumFedexUk           CarrierNameEnum = "fedex_uk"
	CarrierNameEnumFirstmile         CarrierNameEnum = "firstmile"
	CarrierNameEnumImex              CarrierNameEnum = "imex"
	CarrierNameEnumNewgistics        CarrierNameEnum = "newgistics"
	CarrierNameEnumOntrac            CarrierNameEnum = "ontrac"
	CarrierNameEnumPurolatorCanada   CarrierNameEnum = "purolator_canada"
	CarrierNameEnumRoyalMail         CarrierNameEnum = "royal_mail"
	CarrierNameEnumRrDonnelley       CarrierNameEnum = "rr_donnelley"
	CarrierNameEnumSeko              CarrierNameEnum = "seko"
	CarrierNameEnumSendle            CarrierNameEnum = "sendle"
	CarrierNameEnumStampsCom         CarrierNameEnum = "stamps_com"
	CarrierNameEnumUps               CarrierNameEnum = "ups"
)

func (e *CarrierNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "access_worldwide":
		fallthrough
	case "amazon_buy_shipping":
		fallthrough
	case "amazon_shipping_uk":
		fallthrough
	case "apc":
		fallthrough
	case "asendia":
		fallthrough
	case "australia_post":
		fallthrough
	case "canada_post":
		fallthrough
	case "dhl_ecommerce":
		fallthrough
	case "dhl_express":
		fallthrough
	case "dhl_express_au":
		fallthrough
	case "dhl_express_ca":
		fallthrough
	case "dhl_express_uk":
		fallthrough
	case "dpd":
		fallthrough
	case "endicia":
		fallthrough
	case "fedex":
		fallthrough
	case "fedex_uk":
		fallthrough
	case "firstmile":
		fallthrough
	case "imex":
		fallthrough
	case "newgistics":
		fallthrough
	case "ontrac":
		fallthrough
	case "purolator_canada":
		fallthrough
	case "royal_mail":
		fallthrough
	case "rr_donnelley":
		fallthrough
	case "seko":
		fallthrough
	case "sendle":
		fallthrough
	case "stamps_com":
		fallthrough
	case "ups":
		*e = CarrierNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CarrierNameEnum: %s", s)
	}
}
