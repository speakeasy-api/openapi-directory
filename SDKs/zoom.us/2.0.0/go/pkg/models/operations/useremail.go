// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UserEmailSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type UserEmailQueryParams struct {
	// The email address to be verified.
	Email string `queryParam:"style=form,explode=true,name=email"`
}

type UserEmailRequest struct {
	QueryParams UserEmailQueryParams
	Security    UserEmailSecurity
}

// UserEmail200ApplicationXML - **HTTP Status Code:** `200`<br>
// Success.
type UserEmail200ApplicationXML struct {
	// Indicates whether or not the email already exists in Zoom.
	ExistedEmail *bool
}

// UserEmail200ApplicationJSON - **HTTP Status Code:** `200`<br>
// Success.
type UserEmail200ApplicationJSON struct {
	// Indicates whether or not the email already exists in Zoom.
	ExistedEmail *bool `json:"existed_email,omitempty"`
}

type UserEmailResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Success.
	UserEmail200ApplicationJSONObject *UserEmail200ApplicationJSON
}
