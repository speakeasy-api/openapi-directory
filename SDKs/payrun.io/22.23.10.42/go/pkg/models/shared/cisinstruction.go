// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CisInstructionCisInstructionPayFrequencyEnum - The cis instructions' pay frequency
type CisInstructionCisInstructionPayFrequencyEnum string

const (
	CisInstructionCisInstructionPayFrequencyEnumMonthly CisInstructionCisInstructionPayFrequencyEnum = "Monthly"
	CisInstructionCisInstructionPayFrequencyEnumWeekly  CisInstructionCisInstructionPayFrequencyEnum = "Weekly"
)

func (e *CisInstructionCisInstructionPayFrequencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Monthly":
		fallthrough
	case "Weekly":
		*e = CisInstructionCisInstructionPayFrequencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CisInstructionCisInstructionPayFrequencyEnum: %s", s)
	}
}

// CisInstructionCisInstructionUOMEnum - The cis instructions' u o m
type CisInstructionCisInstructionUOMEnum string

const (
	CisInstructionCisInstructionUOMEnumNotSet CisInstructionCisInstructionUOMEnum = "NotSet"
	CisInstructionCisInstructionUOMEnumMinute CisInstructionCisInstructionUOMEnum = "Minute"
	CisInstructionCisInstructionUOMEnumHour   CisInstructionCisInstructionUOMEnum = "Hour"
	CisInstructionCisInstructionUOMEnumDay    CisInstructionCisInstructionUOMEnum = "Day"
	CisInstructionCisInstructionUOMEnumWeek   CisInstructionCisInstructionUOMEnum = "Week"
	CisInstructionCisInstructionUOMEnumMonth  CisInstructionCisInstructionUOMEnum = "Month"
	CisInstructionCisInstructionUOMEnumYear   CisInstructionCisInstructionUOMEnum = "Year"
	CisInstructionCisInstructionUOMEnumUnit   CisInstructionCisInstructionUOMEnum = "Unit"
)

func (e *CisInstructionCisInstructionUOMEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NotSet":
		fallthrough
	case "Minute":
		fallthrough
	case "Hour":
		fallthrough
	case "Day":
		fallthrough
	case "Week":
		fallthrough
	case "Month":
		fallthrough
	case "Year":
		fallthrough
	case "Unit":
		*e = CisInstructionCisInstructionUOMEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CisInstructionCisInstructionUOMEnum: %s", s)
	}
}

type CisInstructionCisInstruction struct {
	// The cis instructions' cis line tag
	CisLineTag *string `json:"CisLineTag,omitempty"`
	// The cis instructions' cis line type
	CisLineType *string `json:"CisLineType,omitempty"`
	// The cis instructions' description
	Description *string `json:"Description,omitempty"`
	// The cis instructions' pay frequency
	PayFrequency *CisInstructionCisInstructionPayFrequencyEnum `json:"PayFrequency,omitempty"`
	// The cis instructions' period end
	PeriodEnd *int `json:"PeriodEnd,omitempty"`
	// The cis instructions' period start
	PeriodStart *int `json:"PeriodStart,omitempty"`
	// The cis instructions' tax year end
	TaxYearEnd *int `json:"TaxYearEnd,omitempty"`
	// The cis instructions' tax year start
	TaxYearStart *int `json:"TaxYearStart,omitempty"`
	// The cis instructions' u o m
	Uom *CisInstructionCisInstructionUOMEnum `json:"UOM,omitempty"`
	// The cis instructions' units
	Units *float64 `json:"Units,omitempty"`
	// The cis instructions' v a t
	Vat *float64 `json:"VAT,omitempty"`
	// The cis instructions' value
	Value *float64 `json:"Value,omitempty"`
}

// CisInstruction - The cis instruction object.
type CisInstruction struct {
	CisInstruction *CisInstructionCisInstruction `json:"CisInstruction,omitempty"`
}
