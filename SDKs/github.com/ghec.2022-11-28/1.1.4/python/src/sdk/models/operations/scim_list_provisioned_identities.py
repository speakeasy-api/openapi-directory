"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import scim_error as shared_scim_error
from ..shared import scim_user_list as shared_scim_user_list
from typing import Optional


@dataclasses.dataclass
class ScimListProvisionedIdentitiesRequest:
    
    org: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org', 'style': 'simple', 'explode': False }})
    r"""The organization name. The name is not case sensitive."""  
    count: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})
    r"""Used for pagination: the number of results to return."""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:
    
    `?filter=userName%20eq%20\\"Octocat\\"`.
    
    To filter results for the identity with the email `octocat@github.com`, you would use this query:
    
    `?filter=emails%20eq%20\\"octocat@github.com\\"`.
    """  
    start_index: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startIndex', 'style': 'form', 'explode': True }})
    r"""Used for pagination: the index of the first result to return."""  
    

@dataclasses.dataclass
class ScimListProvisionedIdentitiesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    scim_error: Optional[shared_scim_error.ScimError] = dataclasses.field(default=None)
    r"""Bad request"""  
    scim_user_list: Optional[shared_scim_user_list.ScimUserList] = dataclasses.field(default=None)
    r"""Response"""  
    