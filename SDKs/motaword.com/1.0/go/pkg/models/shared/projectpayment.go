// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProjectPaymentPaymentMethodEnum - Optional. Determines which method to use for payment. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin. `corporate` method follows corporate account policy automatically, either follows invoicing flow or automatically charges corporate's primary card.
type ProjectPaymentPaymentMethodEnum string

const (
	ProjectPaymentPaymentMethodEnumCorporate     ProjectPaymentPaymentMethodEnum = "corporate"
	ProjectPaymentPaymentMethodEnumClient        ProjectPaymentPaymentMethodEnum = "client"
	ProjectPaymentPaymentMethodEnumApp           ProjectPaymentPaymentMethodEnum = "app"
	ProjectPaymentPaymentMethodEnumCredit        ProjectPaymentPaymentMethodEnum = "credit"
	ProjectPaymentPaymentMethodEnumCorporateCard ProjectPaymentPaymentMethodEnum = "corporate_card"
)

func (e ProjectPaymentPaymentMethodEnum) ToPointer() *ProjectPaymentPaymentMethodEnum {
	return &e
}

func (e *ProjectPaymentPaymentMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "corporate":
		fallthrough
	case "client":
		fallthrough
	case "app":
		fallthrough
	case "credit":
		fallthrough
	case "corporate_card":
		*e = ProjectPaymentPaymentMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectPaymentPaymentMethodEnum: %v", v)
	}
}

type ProjectPayment struct {
	// Last 4 digits of the credit card you are using one-time. This parameter is only required when stripe_token is provided.
	Bin *string `json:"bin,omitempty"`
	// Optional with corporate accounts. Not available for others.
	BudgetCode *string `json:"budget_code,omitempty"`
	// Optional. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin.
	CardID *int64 `json:"card_id,omitempty"`
	// Optional. `corporate` payment method requires this.s
	PaymentCode *string `json:"payment_code,omitempty"`
	// Optional. Determines which method to use for payment. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin. `corporate` method follows corporate account policy automatically, either follows invoicing flow or automatically charges corporate's primary card.
	PaymentMethod *ProjectPaymentPaymentMethodEnum `json:"payment_method,omitempty"`
	// This is required if you are using a one-time credit card. This is the token generted from frontend via Stripe SDK. If you are using a one-time card with `stripe_token`, you must also provide `bin`, last 4 digits of the card.
	StripeToken *string `json:"stripe_token,omitempty"`
}
