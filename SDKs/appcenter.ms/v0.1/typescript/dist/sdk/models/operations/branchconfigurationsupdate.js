"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BranchConfigurationsUpdateResponse = exports.BranchConfigurationsUpdate200ApplicationJSON = exports.BranchConfigurationsUpdate200ApplicationJSONTriggerEnum = exports.BranchConfigurationsUpdate200ApplicationJSONToolsets = exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode = exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles = exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin = exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript = exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid = exports.BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning = exports.BranchConfigurationsUpdate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum = exports.BranchConfigurationsUpdateRequest = exports.BranchConfigurationsUpdateRequestBody = exports.BranchConfigurationsUpdateRequestBodyTriggerEnum = exports.BranchConfigurationsUpdateRequestBodyToolsets = exports.BranchConfigurationsUpdateRequestBodyToolsetsXcode = exports.BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles = exports.BranchConfigurationsUpdateRequestBodyToolsetsXamarin = exports.BranchConfigurationsUpdateRequestBodyToolsetsJavascript = exports.BranchConfigurationsUpdateRequestBodyToolsetsAndroid = exports.BranchConfigurationsUpdateRequestBodyArtifactVersioning = exports.BranchConfigurationsUpdateRequestBodyArtifactVersioningBuildNumberFormatEnum = exports.BranchConfigurationsUpdateSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var BranchConfigurationsUpdateSecurity = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateSecurity, _super);
    function BranchConfigurationsUpdateSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
        }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateSecurity.prototype, "apiToken", void 0);
    return BranchConfigurationsUpdateSecurity;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateSecurity = BranchConfigurationsUpdateSecurity;
var BranchConfigurationsUpdateRequestBodyArtifactVersioningBuildNumberFormatEnum;
(function (BranchConfigurationsUpdateRequestBodyArtifactVersioningBuildNumberFormatEnum) {
    BranchConfigurationsUpdateRequestBodyArtifactVersioningBuildNumberFormatEnum["BuildId"] = "buildId";
    BranchConfigurationsUpdateRequestBodyArtifactVersioningBuildNumberFormatEnum["Timestamp"] = "timestamp";
})(BranchConfigurationsUpdateRequestBodyArtifactVersioningBuildNumberFormatEnum = exports.BranchConfigurationsUpdateRequestBodyArtifactVersioningBuildNumberFormatEnum || (exports.BranchConfigurationsUpdateRequestBodyArtifactVersioningBuildNumberFormatEnum = {}));
/**
 * The versioning configuration for artifacts built for this branch
 */
var BranchConfigurationsUpdateRequestBodyArtifactVersioning = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequestBodyArtifactVersioning, _super);
    function BranchConfigurationsUpdateRequestBodyArtifactVersioning() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildNumberFormat" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyArtifactVersioning.prototype, "buildNumberFormat", void 0);
    return BranchConfigurationsUpdateRequestBodyArtifactVersioning;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequestBodyArtifactVersioning = BranchConfigurationsUpdateRequestBodyArtifactVersioning;
/**
 * Build configuration for Android projects
 */
var BranchConfigurationsUpdateRequestBodyToolsetsAndroid = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequestBodyToolsetsAndroid, _super);
    function BranchConfigurationsUpdateRequestBodyToolsetsAndroid() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automaticSigning" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "automaticSigning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildVariant" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "buildVariant", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gradleWrapperPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "gradleWrapperPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isRoot" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "isRoot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyAlias" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "keyAlias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyPassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "keyPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystoreEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "keystoreEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystoreFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "keystoreFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystorePassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "keystorePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "module" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "module", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runLint" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "runLint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runTests" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBodyToolsetsAndroid.prototype, "runTests", void 0);
    return BranchConfigurationsUpdateRequestBodyToolsetsAndroid;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequestBodyToolsetsAndroid = BranchConfigurationsUpdateRequestBodyToolsetsAndroid;
/**
 * Build configuration when React Native, or other JavaScript tech, is part of the build steps
 */
var BranchConfigurationsUpdateRequestBodyToolsetsJavascript = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequestBodyToolsetsJavascript, _super);
    function BranchConfigurationsUpdateRequestBodyToolsetsJavascript() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packageJsonPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsJavascript.prototype, "packageJsonPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reactNativeVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsJavascript.prototype, "reactNativeVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runTests" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBodyToolsetsJavascript.prototype, "runTests", void 0);
    return BranchConfigurationsUpdateRequestBodyToolsetsJavascript;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequestBodyToolsetsJavascript = BranchConfigurationsUpdateRequestBodyToolsetsJavascript;
/**
 * Build configuration for Xamarin projects
 */
var BranchConfigurationsUpdateRequestBodyToolsetsXamarin = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequestBodyToolsetsXamarin, _super);
    function BranchConfigurationsUpdateRequestBodyToolsetsXamarin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "args" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "args", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "configuration" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "configuration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isSimBuild" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "isSimBuild", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monoVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "monoVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p12File" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "p12File", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p12Pwd" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "p12Pwd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provProfile" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "provProfile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sdkBundle" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "sdkBundle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "slnPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "slnPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "symlink" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXamarin.prototype, "symlink", void 0);
    return BranchConfigurationsUpdateRequestBodyToolsetsXamarin;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequestBodyToolsetsXamarin = BranchConfigurationsUpdateRequestBodyToolsetsXamarin;
/**
 * Provisioning profile fetch and store information
 */
var BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles, _super);
    function BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "fileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileName" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "fileName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetBundleIdentifier" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "targetBundleIdentifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "uploadId", void 0);
    return BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles = BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles;
/**
 * Build configuration when Xcode is part of the build steps
 */
var BranchConfigurationsUpdateRequestBodyToolsetsXcode = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequestBodyToolsetsXcode, _super);
    function BranchConfigurationsUpdateRequestBodyToolsetsXcode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles,
        }),
        (0, class_transformer_1.Expose)({ name: "appExtensionProvisioningProfileFiles" }),
        (0, class_transformer_1.Type)(function () {
            return BranchConfigurationsUpdateRequestBodyToolsetsXcodeAppExtensionProvisioningProfileFiles;
        }),
        __metadata("design:type", Array)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "appExtensionProvisioningProfileFiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "archiveConfiguration" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "archiveConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automaticSigning" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "automaticSigning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cartfilePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "cartfilePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "certificateEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateFileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "certificateFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "certificateFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificatePassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "certificatePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateUploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "certificateUploadId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forceLegacyBuildSystem" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "forceLegacyBuildSystem", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "podfilePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "podfilePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "projectOrWorkspacePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "projectOrWorkspacePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "provisioningProfileEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileFileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "provisioningProfileFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "provisioningProfileFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileUploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "provisioningProfileUploadId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scheme" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "scheme", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetToArchive" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "targetToArchive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "teamId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "teamId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcodeProjectSha" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "xcodeProjectSha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcodeVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBodyToolsetsXcode.prototype, "xcodeVersion", void 0);
    return BranchConfigurationsUpdateRequestBodyToolsetsXcode;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequestBodyToolsetsXcode = BranchConfigurationsUpdateRequestBodyToolsetsXcode;
/**
 * The branch build configuration for each toolset
 */
var BranchConfigurationsUpdateRequestBodyToolsets = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequestBodyToolsets, _super);
    function BranchConfigurationsUpdateRequestBodyToolsets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "android" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdateRequestBodyToolsetsAndroid; }),
        __metadata("design:type", BranchConfigurationsUpdateRequestBodyToolsetsAndroid)
    ], BranchConfigurationsUpdateRequestBodyToolsets.prototype, "android", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "javascript" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdateRequestBodyToolsetsJavascript; }),
        __metadata("design:type", BranchConfigurationsUpdateRequestBodyToolsetsJavascript)
    ], BranchConfigurationsUpdateRequestBodyToolsets.prototype, "javascript", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xamarin" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdateRequestBodyToolsetsXamarin; }),
        __metadata("design:type", BranchConfigurationsUpdateRequestBodyToolsetsXamarin)
    ], BranchConfigurationsUpdateRequestBodyToolsets.prototype, "xamarin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcode" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdateRequestBodyToolsetsXcode; }),
        __metadata("design:type", BranchConfigurationsUpdateRequestBodyToolsetsXcode)
    ], BranchConfigurationsUpdateRequestBodyToolsets.prototype, "xcode", void 0);
    return BranchConfigurationsUpdateRequestBodyToolsets;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequestBodyToolsets = BranchConfigurationsUpdateRequestBodyToolsets;
var BranchConfigurationsUpdateRequestBodyTriggerEnum;
(function (BranchConfigurationsUpdateRequestBodyTriggerEnum) {
    BranchConfigurationsUpdateRequestBodyTriggerEnum["Continous"] = "continous";
    BranchConfigurationsUpdateRequestBodyTriggerEnum["Continuous"] = "continuous";
    BranchConfigurationsUpdateRequestBodyTriggerEnum["Manual"] = "manual";
})(BranchConfigurationsUpdateRequestBodyTriggerEnum = exports.BranchConfigurationsUpdateRequestBodyTriggerEnum || (exports.BranchConfigurationsUpdateRequestBodyTriggerEnum = {}));
/**
 * The branch build configuration
 */
var BranchConfigurationsUpdateRequestBody = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequestBody, _super);
    function BranchConfigurationsUpdateRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "artifactVersioning" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdateRequestBodyArtifactVersioning; }),
        __metadata("design:type", BranchConfigurationsUpdateRequestBodyArtifactVersioning)
    ], BranchConfigurationsUpdateRequestBody.prototype, "artifactVersioning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "badgeIsEnabled" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBody.prototype, "badgeIsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloneFromBranch" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBody.prototype, "cloneFromBranch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "signed" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBody.prototype, "signed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "testsEnabled" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdateRequestBody.prototype, "testsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toolsets" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdateRequestBodyToolsets; }),
        __metadata("design:type", BranchConfigurationsUpdateRequestBodyToolsets)
    ], BranchConfigurationsUpdateRequestBody.prototype, "toolsets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trigger" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequestBody.prototype, "trigger", void 0);
    return BranchConfigurationsUpdateRequestBody;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequestBody = BranchConfigurationsUpdateRequestBody;
var BranchConfigurationsUpdateRequest = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateRequest, _super);
    function BranchConfigurationsUpdateRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", BranchConfigurationsUpdateRequestBody)
    ], BranchConfigurationsUpdateRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=app_name",
        }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequest.prototype, "appName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=branch",
        }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequest.prototype, "branch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=owner_name",
        }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateRequest.prototype, "ownerName", void 0);
    return BranchConfigurationsUpdateRequest;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateRequest = BranchConfigurationsUpdateRequest;
var BranchConfigurationsUpdate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum;
(function (BranchConfigurationsUpdate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum) {
    BranchConfigurationsUpdate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum["BuildId"] = "buildId";
    BranchConfigurationsUpdate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum["Timestamp"] = "timestamp";
})(BranchConfigurationsUpdate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum = exports.BranchConfigurationsUpdate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum || (exports.BranchConfigurationsUpdate200ApplicationJSONArtifactVersioningBuildNumberFormatEnum = {}));
/**
 * The versioning configuration for artifacts built for this branch
 */
var BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning, _super);
    function BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildNumberFormat" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning.prototype, "buildNumberFormat", void 0);
    return BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning = BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning;
/**
 * Build configuration for Android projects
 */
var BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid, _super);
    function BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automaticSigning" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "automaticSigning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildVariant" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "buildVariant", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gradleWrapperPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "gradleWrapperPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isRoot" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "isRoot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyAlias" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "keyAlias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keyPassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "keyPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystoreEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "keystoreEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystoreFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "keystoreFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "keystorePassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "keystorePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "module" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "module", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runLint" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "runLint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runTests" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid.prototype, "runTests", void 0);
    return BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid = BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid;
/**
 * Build configuration when React Native, or other JavaScript tech, is part of the build steps
 */
var BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript, _super);
    function BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packageJsonPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript.prototype, "packageJsonPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reactNativeVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript.prototype, "reactNativeVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runTests" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript.prototype, "runTests", void 0);
    return BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript = BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript;
/**
 * Build configuration for Xamarin projects
 */
var BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin, _super);
    function BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "args" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "args", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "configuration" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "configuration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isSimBuild" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "isSimBuild", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monoVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "monoVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p12File" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "p12File", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "p12Pwd" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "p12Pwd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provProfile" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "provProfile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sdkBundle" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "sdkBundle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "slnPath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "slnPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "symlink" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin.prototype, "symlink", void 0);
    return BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin = BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin;
/**
 * Provisioning profile fetch and store information
 */
var BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles, _super);
    function BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "fileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fileName" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "fileName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetBundleIdentifier" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "targetBundleIdentifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles.prototype, "uploadId", void 0);
    return BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles = BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles;
/**
 * Build configuration when Xcode is part of the build steps
 */
var BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode, _super);
    function BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles,
        }),
        (0, class_transformer_1.Expose)({ name: "appExtensionProvisioningProfileFiles" }),
        (0, class_transformer_1.Type)(function () {
            return BranchConfigurationsUpdate200ApplicationJSONToolsetsXcodeAppExtensionProvisioningProfileFiles;
        }),
        __metadata("design:type", Array)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "appExtensionProvisioningProfileFiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "archiveConfiguration" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "archiveConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automaticSigning" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "automaticSigning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cartfilePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "cartfilePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "certificateEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateFileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "certificateFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "certificateFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificatePassword" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "certificatePassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "certificateUploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "certificateUploadId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forceLegacyBuildSystem" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "forceLegacyBuildSystem", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "podfilePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "podfilePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "projectOrWorkspacePath" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "projectOrWorkspacePath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileEncoded" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "provisioningProfileEncoded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileFileId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "provisioningProfileFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileFilename" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "provisioningProfileFilename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "provisioningProfileUploadId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "provisioningProfileUploadId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scheme" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "scheme", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetToArchive" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "targetToArchive", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "teamId" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "teamId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcodeProjectSha" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "xcodeProjectSha", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcodeVersion" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode.prototype, "xcodeVersion", void 0);
    return BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode = BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode;
/**
 * The branch build configuration for each toolset
 */
var BranchConfigurationsUpdate200ApplicationJSONToolsets = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdate200ApplicationJSONToolsets, _super);
    function BranchConfigurationsUpdate200ApplicationJSONToolsets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "android" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid; }),
        __metadata("design:type", BranchConfigurationsUpdate200ApplicationJSONToolsetsAndroid)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsets.prototype, "android", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "javascript" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript; }),
        __metadata("design:type", BranchConfigurationsUpdate200ApplicationJSONToolsetsJavascript)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsets.prototype, "javascript", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xamarin" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin; }),
        __metadata("design:type", BranchConfigurationsUpdate200ApplicationJSONToolsetsXamarin)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsets.prototype, "xamarin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xcode" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode; }),
        __metadata("design:type", BranchConfigurationsUpdate200ApplicationJSONToolsetsXcode)
    ], BranchConfigurationsUpdate200ApplicationJSONToolsets.prototype, "xcode", void 0);
    return BranchConfigurationsUpdate200ApplicationJSONToolsets;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdate200ApplicationJSONToolsets = BranchConfigurationsUpdate200ApplicationJSONToolsets;
var BranchConfigurationsUpdate200ApplicationJSONTriggerEnum;
(function (BranchConfigurationsUpdate200ApplicationJSONTriggerEnum) {
    BranchConfigurationsUpdate200ApplicationJSONTriggerEnum["Continous"] = "continous";
    BranchConfigurationsUpdate200ApplicationJSONTriggerEnum["Continuous"] = "continuous";
    BranchConfigurationsUpdate200ApplicationJSONTriggerEnum["Manual"] = "manual";
})(BranchConfigurationsUpdate200ApplicationJSONTriggerEnum = exports.BranchConfigurationsUpdate200ApplicationJSONTriggerEnum || (exports.BranchConfigurationsUpdate200ApplicationJSONTriggerEnum = {}));
/**
 * The branch build configuration
 */
var BranchConfigurationsUpdate200ApplicationJSON = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdate200ApplicationJSON, _super);
    function BranchConfigurationsUpdate200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "artifactVersioning" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning; }),
        __metadata("design:type", BranchConfigurationsUpdate200ApplicationJSONArtifactVersioning)
    ], BranchConfigurationsUpdate200ApplicationJSON.prototype, "artifactVersioning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "badgeIsEnabled" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSON.prototype, "badgeIsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cloneFromBranch" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSON.prototype, "cloneFromBranch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], BranchConfigurationsUpdate200ApplicationJSON.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "signed" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSON.prototype, "signed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "testsEnabled" }),
        __metadata("design:type", Boolean)
    ], BranchConfigurationsUpdate200ApplicationJSON.prototype, "testsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toolsets" }),
        (0, class_transformer_1.Type)(function () { return BranchConfigurationsUpdate200ApplicationJSONToolsets; }),
        __metadata("design:type", BranchConfigurationsUpdate200ApplicationJSONToolsets)
    ], BranchConfigurationsUpdate200ApplicationJSON.prototype, "toolsets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "trigger" }),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdate200ApplicationJSON.prototype, "trigger", void 0);
    return BranchConfigurationsUpdate200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdate200ApplicationJSON = BranchConfigurationsUpdate200ApplicationJSON;
var BranchConfigurationsUpdateResponse = /** @class */ (function (_super) {
    __extends(BranchConfigurationsUpdateResponse, _super);
    function BranchConfigurationsUpdateResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], BranchConfigurationsUpdateResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], BranchConfigurationsUpdateResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], BranchConfigurationsUpdateResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", BranchConfigurationsUpdate200ApplicationJSON)
    ], BranchConfigurationsUpdateResponse.prototype, "branchConfigurationsUpdate200ApplicationJSONObject", void 0);
    return BranchConfigurationsUpdateResponse;
}(utils_1.SpeakeasyBase));
exports.BranchConfigurationsUpdateResponse = BranchConfigurationsUpdateResponse;
