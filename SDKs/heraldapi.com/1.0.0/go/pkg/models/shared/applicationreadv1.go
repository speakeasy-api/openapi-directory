// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ApplicationReadV1StatusEnum - The status of the application.
type ApplicationReadV1StatusEnum string

const (
	ApplicationReadV1StatusEnumIncomplete ApplicationReadV1StatusEnum = "incomplete"
	ApplicationReadV1StatusEnumComplete   ApplicationReadV1StatusEnum = "complete"
	ApplicationReadV1StatusEnumSubmitted  ApplicationReadV1StatusEnum = "submitted"
)

func (e *ApplicationReadV1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "incomplete":
		fallthrough
	case "complete":
		fallthrough
	case "submitted":
		*e = ApplicationReadV1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationReadV1StatusEnum: %s", s)
	}
}

// ApplicationReadV1 - An application is a set of information submitted by a producer to institutions in order to get quotes.
type ApplicationReadV1 struct {
	// Array of coverage values
	CoverageValues []CoverageValueReadV1 `json:"coverage_values,omitempty"`
	// `id` for a specific application
	ID *string `json:"id,omitempty"`
	// Array of product IDs. You can find a list of supported [products](https://www.heraldapi.com/docs/products) via `GET /products`
	Products []string `json:"products,omitempty"`
	// Array of risk values
	RiskValues []RiskValueReadV1 `json:"risk_values,omitempty"`
	// The status of the application.
	Status *ApplicationReadV1StatusEnum `json:"status,omitempty"`
}
