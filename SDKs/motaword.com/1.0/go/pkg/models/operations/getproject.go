// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetProjectPathParams struct {
	// Project ID
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

type GetProjectWithEnum string

const (
	GetProjectWithEnumClient GetProjectWithEnum = "client"
	GetProjectWithEnumVendor GetProjectWithEnum = "vendor"
	GetProjectWithEnumScore  GetProjectWithEnum = "score"
)

func (e *GetProjectWithEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "client":
		fallthrough
	case "vendor":
		fallthrough
	case "score":
		*e = GetProjectWithEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProjectWithEnum: %s", s)
	}
}

type GetProjectQueryParams struct {
	// Include detailed information. Possible values 'client', 'vendor', 'score'
	With []GetProjectWithEnum `queryParam:"style=form,explode=true,name=with[]"`
}

type GetProjectRequest struct {
	PathParams  GetProjectPathParams
	QueryParams GetProjectQueryParams
}

type GetProjectResponse struct {
	ContentType string
	// ProjectNotFound
	Error *shared.Error
	// Project model
	Project     *shared.Project
	StatusCode  int
	RawResponse *http.Response
}
