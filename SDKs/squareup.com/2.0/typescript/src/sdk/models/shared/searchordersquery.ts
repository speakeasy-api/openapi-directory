/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SearchOrdersFilter } from "./searchordersfilter";
import { SearchOrdersSort } from "./searchorderssort";
import { Expose, Type } from "class-transformer";

/**
 * Contains query criteria for the search.
 */
export class SearchOrdersQuery extends SpeakeasyBase {
  /**
   * Filtering criteria to use for a `SearchOrders` request. Multiple filters
   *
   * @remarks
   * are ANDed together.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  @Type(() => SearchOrdersFilter)
  filter?: SearchOrdersFilter;

  /**
   * Sorting criteria for a `SearchOrders` request. Results can only be sorted
   *
   * @remarks
   * by a timestamp field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sort" })
  @Type(() => SearchOrdersSort)
  sort?: SearchOrdersSort;
}
