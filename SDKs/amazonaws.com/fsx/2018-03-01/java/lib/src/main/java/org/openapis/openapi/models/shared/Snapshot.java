/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Snapshot - A snapshot of an Amazon FSx for OpenZFS volume.
 */
public class Snapshot {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdministrativeActions")
    public AdministrativeAction[] administrativeActions;

    public Snapshot withAdministrativeActions(AdministrativeAction[] administrativeActions) {
        this.administrativeActions = administrativeActions;
        return this;
    }
    
    /**
     * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public Snapshot withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Lifecycle")
    public SnapshotLifecycleEnum lifecycle;

    public Snapshot withLifecycle(SnapshotLifecycleEnum lifecycle) {
        this.lifecycle = lifecycle;
        return this;
    }
    
    /**
     * Describes why a resource lifecycle state changed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LifecycleTransitionReason")
    public LifecycleTransitionReason lifecycleTransitionReason;

    public Snapshot withLifecycleTransitionReason(LifecycleTransitionReason lifecycleTransitionReason) {
        this.lifecycleTransitionReason = lifecycleTransitionReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public Snapshot withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"&gt;Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceARN")
    public String resourceARN;

    public Snapshot withResourceARN(String resourceARN) {
        this.resourceARN = resourceARN;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SnapshotId")
    public String snapshotId;

    public Snapshot withSnapshotId(String snapshotId) {
        this.snapshotId = snapshotId;
        return this;
    }
    
    /**
     * A list of &lt;code&gt;Tag&lt;/code&gt; values, with a maximum of 50 elements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;

    public Snapshot withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VolumeId")
    public String volumeId;

    public Snapshot withVolumeId(String volumeId) {
        this.volumeId = volumeId;
        return this;
    }
    
    public Snapshot(){}
}
