/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AndroidTest - An Android mobile test specification.
 */
public class AndroidTest {
    /**
     * Android app information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("androidAppInfo")
    public AndroidAppInfo androidAppInfo;
    public AndroidTest withAndroidAppInfo(AndroidAppInfo androidAppInfo) {
        this.androidAppInfo = androidAppInfo;
        return this;
    }
    
    /**
     * A test of an Android application that can control an Android component independently of its normal lifecycle. See for more information on types of Android tests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("androidInstrumentationTest")
    public AndroidInstrumentationTest androidInstrumentationTest;
    public AndroidTest withAndroidInstrumentationTest(AndroidInstrumentationTest androidInstrumentationTest) {
        this.androidInstrumentationTest = androidInstrumentationTest;
        return this;
    }
    
    /**
     * A test of an android application that explores the application on a virtual or physical Android device, finding culprits and crashes as it goes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("androidRoboTest")
    public AndroidRoboTest androidRoboTest;
    public AndroidTest withAndroidRoboTest(AndroidRoboTest androidRoboTest) {
        this.androidRoboTest = androidRoboTest;
        return this;
    }
    
    /**
     * Test Loops are tests that can be launched by the app itself, determining when to run by listening for an intent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("androidTestLoop")
    public java.util.Map<String, Object> androidTestLoop;
    public AndroidTest withAndroidTestLoop(java.util.Map<String, Object> androidTestLoop) {
        this.androidTestLoop = androidTestLoop;
        return this;
    }
    
    /**
     *  A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testTimeout")
    public Duration testTimeout;
    public AndroidTest withTestTimeout(Duration testTimeout) {
        this.testTimeout = testTimeout;
        return this;
    }
    
}
