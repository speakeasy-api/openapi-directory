/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Request model for updating a webhook
 */
export class UpdateWebhookRequest extends SpeakeasyBase {
  /**
   * List of names of event types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventTypeNames" })
  eventTypeNames?: string[];

  /**
   * Is enabled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isEnabled" })
  isEnabled?: boolean;

  /**
   * Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Secret; used for event message signatures
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  /**
   * If set to true, an example event is being created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggerExampleEvent" })
  triggerExampleEvent?: boolean;

  /**
   * URL (must begin with the `HTTPS` scheme)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
