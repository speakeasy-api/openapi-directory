// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeOptionGroupsActionEnum
type GETDescribeOptionGroupsActionEnum string

const (
	GETDescribeOptionGroupsActionEnumDescribeOptionGroups GETDescribeOptionGroupsActionEnum = "DescribeOptionGroups"
)

func (e *GETDescribeOptionGroupsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeOptionGroups":
		*e = GETDescribeOptionGroupsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeOptionGroupsActionEnum: %s", s)
	}
}

// GETDescribeOptionGroupsVersionEnum
type GETDescribeOptionGroupsVersionEnum string

const (
	GETDescribeOptionGroupsVersionEnumTwoThousandAndThirteen0110 GETDescribeOptionGroupsVersionEnum = "2013-01-10"
)

func (e *GETDescribeOptionGroupsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-10":
		*e = GETDescribeOptionGroupsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeOptionGroupsVersionEnum: %s", s)
	}
}

type GETDescribeOptionGroupsQueryParams struct {
	Action             GETDescribeOptionGroupsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	EngineName         *string                            `queryParam:"style=form,explode=true,name=EngineName"`
	MajorEngineVersion *string                            `queryParam:"style=form,explode=true,name=MajorEngineVersion"`
	Marker             *string                            `queryParam:"style=form,explode=true,name=Marker"`
	MaxRecords         *int64                             `queryParam:"style=form,explode=true,name=MaxRecords"`
	OptionGroupName    *string                            `queryParam:"style=form,explode=true,name=OptionGroupName"`
	Version            GETDescribeOptionGroupsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeOptionGroupsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeOptionGroupsRequest struct {
	QueryParams GETDescribeOptionGroupsQueryParams
	Headers     GETDescribeOptionGroupsHeaders
}

type GETDescribeOptionGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
