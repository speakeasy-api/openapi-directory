<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Organizations 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Creates a GcpUserAccessBinding. If the client specifies a name, the server ignores it. Fails if a resource already exists with the same group_key. Completion of this long-running operation does not necessarily signify that the new binding is deployed onto all affected users, which may take more time.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateResponse
     */
	public function accesscontextmanagerOrganizationsGcpUserAccessBindingsCreate(
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{parent}/gcpUserAccessBindings', \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "gcpUserAccessBinding", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsCreateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->operation = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Operation', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Deletes a GcpUserAccessBinding. Completion of this long-running operation does not necessarily signify that the binding deletion is deployed onto all affected users, which may take more time.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteResponse
     */
	public function accesscontextmanagerOrganizationsGcpUserAccessBindingsDelete(
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->operation = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Operation', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Gets the GcpUserAccessBinding with the given name.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetResponse
     */
	public function accesscontextmanagerOrganizationsGcpUserAccessBindingsGet(
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->gcpUserAccessBinding = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GcpUserAccessBinding', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists all GcpUserAccessBindings for a Google Cloud organization.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListResponse
     */
	public function accesscontextmanagerOrganizationsGcpUserAccessBindingsList(
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{parent}/gcpUserAccessBindings', \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listGcpUserAccessBindingsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListGcpUserAccessBindingsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates a GcpUserAccessBinding. Completion of this long-running operation does not necessarily signify that the changed binding is deployed onto all affected users, which may take more time.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchResponse
     */
	public function accesscontextmanagerOrganizationsGcpUserAccessBindingsPatch(
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "gcpUserAccessBinding", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AccesscontextmanagerOrganizationsGcpUserAccessBindingsPatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->operation = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Operation', 'json');
            }
        }

        return $response;
    }
}