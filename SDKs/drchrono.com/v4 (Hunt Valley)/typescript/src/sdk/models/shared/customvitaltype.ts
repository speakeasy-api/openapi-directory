/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * One of `text`, `number`, or `single_sel`
 */
export enum CustomVitalTypeDataTypeEnum {
  Text = "text",
  Number = "number",
  SingleSel = "single_sel",
}

/**
 * OK
 */
export class CustomVitalType extends SpeakeasyBase {
  /**
   * If `data_type` is `single_sel`, this is the array of values in the select's dropdown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowed_values" })
  allowedValues?: string[];

  /**
   * Indicates that the object has been soft-deleted and should not be used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  /**
   * One of `text`, `number`, or `single_sel`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data_type" })
  dataType?: CustomVitalTypeDataTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * ID of the doctor who created the custom vital
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doctor" })
  doctor?: string;

  /**
   * If `is_fraction_field` is true, this is the character separating the numerator and denominator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fraction_delimiter" })
  fractionDelimiter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_fraction_field" })
  isFractionField?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: string;
}
