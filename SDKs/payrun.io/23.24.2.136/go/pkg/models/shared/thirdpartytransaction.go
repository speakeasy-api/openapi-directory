// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ThirdPartyTransactionThirdPartyTransactionEmployerCore - The third party transactions' employer core
type ThirdPartyTransactionThirdPartyTransactionEmployerCore struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum - The third party transactions' transaction status
type ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum string

const (
	ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnumUnknown ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum = "Unknown"
	ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnumSuccess ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum = "Success"
	ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnumFailure ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum = "Failure"
)

func (e ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum) ToPointer() *ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum {
	return &e
}

func (e *ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unknown":
		fallthrough
	case "Success":
		fallthrough
	case "Failure":
		*e = ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum: %v", v)
	}
}

type ThirdPartyTransactionThirdPartyTransaction struct {
	// The third party transactions' employer core
	EmployerCore *ThirdPartyTransactionThirdPartyTransactionEmployerCore `json:"EmployerCore,omitempty"`
	// The third party transactions' job type
	JobType *string `json:"JobType,omitempty"`
	// The third party transactions' request
	Request *string `json:"Request,omitempty"`
	// The third party transactions' response
	Response *string `json:"Response,omitempty"`
	// The third party transactions' transaction status
	TransactionStatus *ThirdPartyTransactionThirdPartyTransactionTransactionStatusEnum `json:"TransactionStatus,omitempty"`
	// The third party transactions' transmission date
	TransmissionDate *time.Time `json:"TransmissionDate,omitempty"`
}

// ThirdPartyTransaction - The third party transaction object.
type ThirdPartyTransaction struct {
	ThirdPartyTransaction *ThirdPartyTransactionThirdPartyTransaction `json:"ThirdPartyTransaction,omitempty"`
}
