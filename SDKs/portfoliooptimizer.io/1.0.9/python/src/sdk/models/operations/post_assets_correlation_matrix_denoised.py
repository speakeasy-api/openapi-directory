"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum(str, Enum):
    r"""The method used to denoise the asset correlation matrix"""
    EIGENVALUES_CLIPPING = 'eigenvaluesClipping'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsCorrelationMatrixDenoisedRequestBody:
    
    assets: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assets') }})  
    assets_correlation_matrix: list[list[float]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetsCorrelationMatrix') }})
    r"""assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j"""  
    assets_correlation_matrix_aspect_ratio: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetsCorrelationMatrixAspectRatio') }})
    r"""The aspect ratio of the asset correlation matrix, defined as the number of assets divided by the number of asset returns per asset used to compute the asset correlation matrix"""  
    denoising_method: Optional[PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('denoisingMethod'), 'exclude': lambda f: f is None }})
    r"""The method used to denoise the asset correlation matrix"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAssetsCorrelationMatrixDenoised200ApplicationJSON:
    r"""OK"""
    
    assets_correlation_matrix: list[list[float]] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetsCorrelationMatrix') }})
    r"""assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j; assetsCorrelationMatrix is possibly null in case the denoising method did not manage to denoise the provided asset correlation matrix"""  
    

@dataclasses.dataclass
class PostAssetsCorrelationMatrixDenoisedResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_assets_correlation_matrix_denoised_200_application_json_object: Optional[PostAssetsCorrelationMatrixDenoised200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    