"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SingleBetRequestBody:
    r"""Single bet request body"""
    
    price_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceType') }})
    r"""The type of price taken by the customer when the bet is made. Can be one of the following: L - Live Fixed price, S - Starting price - Horse and Greyhound racing or G - Guaranteed best price."""  
    selection_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selectionId') }})
    r"""The unique ID for the selection of the bet"""  
    stake: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stake') }})
    r"""The amount of the stake placed on the bet"""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of bet placed. Can be one of the following: W - Win or E- EachWay"""  
    delayed_bet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delayedBetId'), 'exclude': lambda f: f is None }})
    r"""The delayed bet identifier"""  
    free_bet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freeBetId'), 'exclude': lambda f: f is None }})
    r"""The ID number of the free bet token if used in conjunction with this bet"""  
    price_den: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceDen'), 'exclude': lambda f: f is None }})
    r"""When the odds are shown in vulgar fractions this is the denominator of the fraction. For example: 2 in 5/2"""  
    price_num: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceNum'), 'exclude': lambda f: f is None }})
    r"""When the odds are shown in vulgar fractions this is the numerator of the fraction. For example: 5 in 5/2"""  
    