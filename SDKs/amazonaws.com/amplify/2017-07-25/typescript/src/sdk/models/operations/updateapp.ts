/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 *  Describes the automated branch creation configuration.
 */
export class UpdateAppRequestBodyAutoBranchCreationConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "basicAuthCredentials" })
  basicAuthCredentials?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "buildSpec" })
  buildSpec?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enableAutoBuild" })
  enableAutoBuild?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enableBasicAuth" })
  enableBasicAuth?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enablePerformanceMode" })
  enablePerformanceMode?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enablePullRequestPreview" })
  enablePullRequestPreview?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentVariables" })
  environmentVariables?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "framework" })
  framework?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pullRequestEnvironmentName" })
  pullRequestEnvironmentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stage" })
  stage?: shared.StageEnum;
}

/**
 *  The platform for the Amplify app. For a static app, set the platform type to <code>WEB</code>. For a dynamic server-side rendered (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For an app requiring Amplify Hosting's original SSR support only, set the platform type to <code>WEB_DYNAMIC</code>.
 */
export enum UpdateAppRequestBodyPlatformEnum {
  Web = "WEB",
  WebDynamic = "WEB_DYNAMIC",
  WebCompute = "WEB_COMPUTE",
}

export class UpdateAppRequestBody extends SpeakeasyBase {
  /**
   * <p>The personal access token for a GitHub repository for an Amplify app. The personal access token is used to authorize access to a GitHub repository using the Amplify GitHub App. The token is not stored.</p> <p>Use <code>accessToken</code> for GitHub repositories only. To authorize access to a repository provider such as Bitbucket or CodeCommit, use <code>oauthToken</code>.</p> <p>You must specify either <code>accessToken</code> or <code>oauthToken</code> when you update an app.</p> <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub App. For more information, see <a href="https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth">Migrating an existing OAuth app to the Amplify GitHub App</a> in the <i>Amplify User Guide</i> .</p>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessToken" })
  accessToken?: string;

  /**
   *  Describes the automated branch creation configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoBranchCreationConfig" })
  @Type(() => UpdateAppRequestBodyAutoBranchCreationConfig)
  autoBranchCreationConfig?: UpdateAppRequestBodyAutoBranchCreationConfig;

  /**
   *  Describes the automated branch creation glob patterns for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoBranchCreationPatterns" })
  autoBranchCreationPatterns?: string[];

  /**
   *  The basic authorization credentials for an Amplify app. You must base64-encode the authorization credentials and provide them in the format <code>user:password</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "basicAuthCredentials" })
  basicAuthCredentials?: string;

  /**
   *  The build specification (build spec) file for an Amplify app build.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buildSpec" })
  buildSpec?: string;

  /**
   * The custom HTTP headers for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customHeaders" })
  customHeaders?: string;

  /**
   *  The custom redirect and rewrite rules for an Amplify app.
   */
  @SpeakeasyMetadata({ elemType: shared.CustomRule })
  @Expose({ name: "customRules" })
  @Type(() => shared.CustomRule)
  customRules?: shared.CustomRule[];

  /**
   *  The description for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   *  Enables automated branch creation for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableAutoBranchCreation" })
  enableAutoBranchCreation?: boolean;

  /**
   *  Enables basic authorization for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableBasicAuth" })
  enableBasicAuth?: boolean;

  /**
   *  Enables branch auto-building for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableBranchAutoBuild" })
  enableBranchAutoBuild?: boolean;

  /**
   *  Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableBranchAutoDeletion" })
  enableBranchAutoDeletion?: boolean;

  /**
   *  The environment variables for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "environmentVariables" })
  environmentVariables?: Record<string, string>;

  /**
   *  The AWS Identity and Access Management (IAM) service role for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iamServiceRoleArn" })
  iamServiceRoleArn?: string;

  /**
   *  The name for an Amplify app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * <p>The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key using SSH cloning. The OAuth token is not stored.</p> <p>Use <code>oauthToken</code> for repository providers other than GitHub, such as Bitbucket or CodeCommit.</p> <p>To authorize access to GitHub as your repository provider, use <code>accessToken</code>.</p> <p>You must specify either <code>oauthToken</code> or <code>accessToken</code> when you update an app.</p> <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub App. For more information, see <a href="https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth">Migrating an existing OAuth app to the Amplify GitHub App</a> in the <i>Amplify User Guide</i> .</p>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauthToken" })
  oauthToken?: string;

  /**
   *  The platform for the Amplify app. For a static app, set the platform type to <code>WEB</code>. For a dynamic server-side rendered (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For an app requiring Amplify Hosting's original SSR support only, set the platform type to <code>WEB_DYNAMIC</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform?: UpdateAppRequestBodyPlatformEnum;

  /**
   *  The name of the repository for an Amplify app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  repository?: string;
}

export class UpdateAppRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateAppRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   *  The unique ID for an Amplify app.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=appId",
  })
  appId: string;
}

export class UpdateAppResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * NotFoundException
   */
  @SpeakeasyMetadata()
  notFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * UnauthorizedException
   */
  @SpeakeasyMetadata()
  unauthorizedException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateAppResult?: shared.UpdateAppResult;
}
