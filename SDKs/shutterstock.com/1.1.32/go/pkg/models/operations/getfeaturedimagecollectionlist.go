// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFeaturedImageCollectionListSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// GetFeaturedImageCollectionListAssetHintEnum - Cover image size
type GetFeaturedImageCollectionListAssetHintEnum string

const (
	GetFeaturedImageCollectionListAssetHintEnumOnex GetFeaturedImageCollectionListAssetHintEnum = "1x"
	GetFeaturedImageCollectionListAssetHintEnumTwox GetFeaturedImageCollectionListAssetHintEnum = "2x"
)

func (e GetFeaturedImageCollectionListAssetHintEnum) ToPointer() *GetFeaturedImageCollectionListAssetHintEnum {
	return &e
}

func (e *GetFeaturedImageCollectionListAssetHintEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1x":
		fallthrough
	case "2x":
		*e = GetFeaturedImageCollectionListAssetHintEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFeaturedImageCollectionListAssetHintEnum: %v", v)
	}
}

// GetFeaturedImageCollectionListEmbedEnum - Which sharing information to include in the response, such as a URL to the collection
type GetFeaturedImageCollectionListEmbedEnum string

const (
	GetFeaturedImageCollectionListEmbedEnumShareURL GetFeaturedImageCollectionListEmbedEnum = "share_url"
)

func (e GetFeaturedImageCollectionListEmbedEnum) ToPointer() *GetFeaturedImageCollectionListEmbedEnum {
	return &e
}

func (e *GetFeaturedImageCollectionListEmbedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "share_url":
		*e = GetFeaturedImageCollectionListEmbedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFeaturedImageCollectionListEmbedEnum: %v", v)
	}
}

type GetFeaturedImageCollectionListTypeEnum string

const (
	GetFeaturedImageCollectionListTypeEnumPhoto     GetFeaturedImageCollectionListTypeEnum = "photo"
	GetFeaturedImageCollectionListTypeEnumEditorial GetFeaturedImageCollectionListTypeEnum = "editorial"
	GetFeaturedImageCollectionListTypeEnumVector    GetFeaturedImageCollectionListTypeEnum = "vector"
)

func (e GetFeaturedImageCollectionListTypeEnum) ToPointer() *GetFeaturedImageCollectionListTypeEnum {
	return &e
}

func (e *GetFeaturedImageCollectionListTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "photo":
		fallthrough
	case "editorial":
		fallthrough
	case "vector":
		*e = GetFeaturedImageCollectionListTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFeaturedImageCollectionListTypeEnum: %v", v)
	}
}

type GetFeaturedImageCollectionListRequest struct {
	// Cover image size
	AssetHint *GetFeaturedImageCollectionListAssetHintEnum `queryParam:"style=form,explode=true,name=asset_hint"`
	// Which sharing information to include in the response, such as a URL to the collection
	Embed *GetFeaturedImageCollectionListEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
	// The types of collections to return
	Type []GetFeaturedImageCollectionListTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type GetFeaturedImageCollectionListResponse struct {
	ContentType string
	// OK
	FeaturedCollectionDataList *shared.FeaturedCollectionDataList
	StatusCode                 int
	RawResponse                *http.Response
}
