"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import labelthresholds as shared_labelthresholds
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Thresholds:
    r"""Sets thresholds for AI moderation"""
    
    explicit: Optional[shared_labelthresholds.LabelThresholds] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('explicit'), 'exclude': lambda f: f is None }})  
    spam: Optional[shared_labelthresholds.LabelThresholds] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spam'), 'exclude': lambda f: f is None }})  
    toxic: Optional[shared_labelthresholds.LabelThresholds] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toxic'), 'exclude': lambda f: f is None }})  
    