// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum - The data plane routing mechanism that will be used for replication.
type UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum string

const (
	UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnumPrivateIP UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum = "PRIVATE_IP"
	UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnumPublicIP  UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum = "PUBLIC_IP"
)

func (e UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum) ToPointer() *UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum {
	return &e
}

func (e *UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRIVATE_IP":
		fallthrough
	case "PUBLIC_IP":
		*e = UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum: %v", v)
	}
}

// UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum - The Staging Disk EBS volume type to be used during replication.
type UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum string

const (
	UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnumGp2  UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum = "GP2"
	UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnumGp3  UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum = "GP3"
	UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnumSt1  UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum = "ST1"
	UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnumAuto UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum = "AUTO"
)

func (e UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum) ToPointer() *UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum {
	return &e
}

func (e *UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GP2":
		fallthrough
	case "GP3":
		fallthrough
	case "ST1":
		fallthrough
	case "AUTO":
		*e = UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum: %v", v)
	}
}

// UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum - The type of EBS encryption to be used during replication.
type UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum string

const (
	UpdateReplicationConfigurationRequestBodyEbsEncryptionEnumDefault UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum = "DEFAULT"
	UpdateReplicationConfigurationRequestBodyEbsEncryptionEnumCustom  UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum = "CUSTOM"
)

func (e UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum) ToPointer() *UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum {
	return &e
}

func (e *UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEFAULT":
		fallthrough
	case "CUSTOM":
		*e = UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum: %v", v)
	}
}

type UpdateReplicationConfigurationRequestBody struct {
	// Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration.
	AssociateDefaultSecurityGroup *bool `json:"associateDefaultSecurityGroup,omitempty"`
	// Whether to allow the AWS replication agent to automatically replicate newly added disks.
	AutoReplicateNewDisks *bool `json:"autoReplicateNewDisks,omitempty"`
	// Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
	BandwidthThrottling *int64 `json:"bandwidthThrottling,omitempty"`
	// Whether to create a Public IP for the Recovery Instance by default.
	CreatePublicIP *bool `json:"createPublicIP,omitempty"`
	// The data plane routing mechanism that will be used for replication.
	DataPlaneRouting *UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum `json:"dataPlaneRouting,omitempty"`
	// The Staging Disk EBS volume type to be used during replication.
	DefaultLargeStagingDiskType *UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum `json:"defaultLargeStagingDiskType,omitempty"`
	// The type of EBS encryption to be used during replication.
	EbsEncryption *UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum `json:"ebsEncryption,omitempty"`
	// The ARN of the EBS encryption key to be used during replication.
	EbsEncryptionKeyArn *string `json:"ebsEncryptionKeyArn,omitempty"`
	// The name of the Replication Configuration.
	Name *string `json:"name,omitempty"`
	// The Point in time (PIT) policy to manage snapshots taken during replication.
	PitPolicy []shared.PITPolicyRule `json:"pitPolicy,omitempty"`
	// The configuration of the disks of the Source Server to be replicated.
	ReplicatedDisks []shared.ReplicationConfigurationReplicatedDisk `json:"replicatedDisks,omitempty"`
	// The instance type to be used for the replication server.
	ReplicationServerInstanceType *string `json:"replicationServerInstanceType,omitempty"`
	// The security group IDs that will be used by the replication server.
	ReplicationServersSecurityGroupsIDs []string `json:"replicationServersSecurityGroupsIDs,omitempty"`
	// The ID of the Source Server for this Replication Configuration.
	SourceServerID string `json:"sourceServerID"`
	// The subnet to be used by the replication staging area.
	StagingAreaSubnetID *string `json:"stagingAreaSubnetId,omitempty"`
	// A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.
	StagingAreaTags map[string]string `json:"stagingAreaTags,omitempty"`
	// Whether to use a dedicated Replication Server in the replication staging area.
	UseDedicatedReplicationServer *bool `json:"useDedicatedReplicationServer,omitempty"`
}

type UpdateReplicationConfigurationRequest struct {
	RequestBody       UpdateReplicationConfigurationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateReplicationConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ReplicationConfiguration *shared.ReplicationConfiguration
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
