/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetSpecsCarAutoCompleteQueryParams {
    /**
     * The API Authentication Key. Mandatory with all API calls.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=api_key")
    public String apiKey;
    public GetSpecsCarAutoCompleteQueryParams withApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }
    
    /**
     * Body subtype to filter the listings on. Valid filter values are those that our Search facets API returns for unique body subtypes. You can pass in multiple body subtype values comma separated
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=body_subtype")
    public String bodySubtype;
    public GetSpecsCarAutoCompleteQueryParams withBodySubtype(String bodySubtype) {
        this.bodySubtype = bodySubtype;
        return this;
    }
    
    /**
     * To filter listing on their body type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=body_type")
    public String bodyType;
    public GetSpecsCarAutoCompleteQueryParams withBodyType(String bodyType) {
        this.bodyType = bodyType;
        return this;
    }
    
    /**
     * To filter listing on their drivetrain
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=drivetrain")
    public String drivetrain;
    public GetSpecsCarAutoCompleteQueryParams withDrivetrain(String drivetrain) {
        this.drivetrain = drivetrain;
        return this;
    }
    
    /**
     * To filter listing on their engine
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=engine")
    public String engine;
    public GetSpecsCarAutoCompleteQueryParams withEngine(String engine) {
        this.engine = engine;
        return this;
    }
    
    /**
     * Engine Block to match. Valid filter values are those that our Search facets API returns for unique Engine Block. You can pass in multiple Engine Block values comma separated
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=engine_block")
    public String engineBlock;
    public GetSpecsCarAutoCompleteQueryParams withEngineBlock(String engineBlock) {
        this.engineBlock = engineBlock;
        return this;
    }
    
    /**
     * Engine Size to match. Valid filter values are those that our Search facets API returns for unique engine size. You can pass in multiple engine size values comma separated
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=engine_size")
    public String engineSize;
    public GetSpecsCarAutoCompleteQueryParams withEngineSize(String engineSize) {
        this.engineSize = engineSize;
        return this;
    }
    
    /**
     * Provide minimum count value for facets
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=facet_min_count")
    public Double facetMinCount;
    public GetSpecsCarAutoCompleteQueryParams withFacetMinCount(Double facetMinCount) {
        this.facetMinCount = facetMinCount;
        return this;
    }
    
    /**
     * Field name for which you want auto-completion
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=field")
    public GetSpecsCarAutoCompleteFieldEnum field;
    public GetSpecsCarAutoCompleteQueryParams withField(GetSpecsCarAutoCompleteFieldEnum field) {
        this.field = field;
        return this;
    }
    
    /**
     * To filter listing on their fuel type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fuel_type")
    public String fuelType;
    public GetSpecsCarAutoCompleteQueryParams withFuelType(String fuelType) {
        this.fuelType = fuelType;
        return this;
    }
    
    /**
     * Boolean variable to indicate ignore case of current input
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ignore_case")
    public Boolean ignoreCase;
    public GetSpecsCarAutoCompleteQueryParams withIgnoreCase(Boolean ignoreCase) {
        this.ignoreCase = ignoreCase;
        return this;
    }
    
    /**
     * Input entered so far
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=input")
    public String input;
    public GetSpecsCarAutoCompleteQueryParams withInput(String input) {
        this.input = input;
        return this;
    }
    
    /**
     * To filter listings on their make
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=make")
    public String make;
    public GetSpecsCarAutoCompleteQueryParams withMake(String make) {
        this.make = make;
        return this;
    }
    
    /**
     * To filter listings on their model
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=model")
    public String model;
    public GetSpecsCarAutoCompleteQueryParams withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * To filter listing on their transmission
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=transmission")
    public String transmission;
    public GetSpecsCarAutoCompleteQueryParams withTransmission(String transmission) {
        this.transmission = transmission;
        return this;
    }
    
    /**
     * To filter listing on their trim
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=trim")
    public String trim;
    public GetSpecsCarAutoCompleteQueryParams withTrim(String trim) {
        this.trim = trim;
        return this;
    }
    
    /**
     * To filter listing on their vehicle type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=vehicle_type")
    public String vehicleType;
    public GetSpecsCarAutoCompleteQueryParams withVehicleType(String vehicleType) {
        this.vehicleType = vehicleType;
        return this;
    }
    
    /**
     * To filter listing on their year
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=year")
    public String year;
    public GetSpecsCarAutoCompleteQueryParams withYear(String year) {
        this.year = year;
        return this;
    }
    
}
