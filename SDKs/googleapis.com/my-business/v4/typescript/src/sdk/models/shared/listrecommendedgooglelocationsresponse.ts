/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleLocation } from "./googlelocation";
import { Expose, Type } from "class-transformer";

/**
 * Response message for GoogleLocations.ListRecommendedGoogleLocations. It also contains some locations that have been claimed by other Business Profile users since the last time they were recommended to this Business Profile account.
 */
export class ListRecommendedGoogleLocationsResponse extends SpeakeasyBase {
  /**
   * The locations recommended to a Business Profile account. Each of these represents a GoogleLocation that is present on Maps. The locations are sorted in decreasing order of relevance to the Business Profile account.
   */
  @SpeakeasyMetadata({ elemType: GoogleLocation })
  @Expose({ name: "googleLocations" })
  @Type(() => GoogleLocation)
  googleLocations?: GoogleLocation[];

  /**
   * During pagination, if there are more locations available to be fetched in the next page, this field is populated with a token to fetch the next page of locations in a subsequent call. If there are no more locations to be fetched, this field is not present in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The total number of recommended locations for this Business Profile account, irrespective of pagination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSize" })
  totalSize?: number;
}
