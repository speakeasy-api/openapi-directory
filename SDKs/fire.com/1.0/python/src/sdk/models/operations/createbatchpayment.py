"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateBatchPaymentNewBatchTypeEnum(str, Enum):
    r"""The type of the batch - can be one of the listed 3"""
    BANK_TRANSFER = 'BANK_TRANSFER'
    INTERNAL_TRANSFER = 'INTERNAL_TRANSFER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchPaymentNewBatch:
    r"""Details of the batch payment"""
    
    batch_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchName'), 'exclude': lambda f: f is None }})
    r"""An optional name you give to the batch at creation time."""  
    callback_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callbackUrl'), 'exclude': lambda f: f is None }})
    r"""An optional POST URL that all events for this batch will be sent to."""  
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""GBP or EUR"""  
    job_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobNumber'), 'exclude': lambda f: f is None }})
    r"""An optional job number you can give to the batch to help link it to your own system."""  
    type: Optional[CreateBatchPaymentNewBatchTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the batch - can be one of the listed 3"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchPaymentNewBatchResponse:
    r"""Batch created successfully"""
    
    batch_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchUuid'), 'exclude': lambda f: f is None }})
    r"""A UUID for this item."""  
    

@dataclasses.dataclass
class CreateBatchPaymentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    new_batch_response: Optional[CreateBatchPaymentNewBatchResponse] = dataclasses.field(default=None)
    r"""Batch created successfully"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    