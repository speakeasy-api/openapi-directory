"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddAnumberToBlockedListResponse = exports.AddAnumberToBlockedList201ApplicationJSON = exports.AddAnumberToBlockedList201ApplicationXML = exports.AddAnumberToBlockedListApplicationJSON = exports.AddAnumberToBlockedListApplicationJSONStatusEnum = exports.AddAnumberToBlockedListApplicationJSONMatchTypeEnum = exports.AddAnumberToBlockedListApplicationJSONBlockTypeEnum = exports.AddAnumberToBlockedListSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var AddAnumberToBlockedListSecurity = /** @class */ (function (_super) {
    __extends(AddAnumberToBlockedListSecurity, _super);
    function AddAnumberToBlockedListSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], AddAnumberToBlockedListSecurity.prototype, "oAuth", void 0);
    return AddAnumberToBlockedListSecurity;
}(utils_1.SpeakeasyBase));
exports.AddAnumberToBlockedListSecurity = AddAnumberToBlockedListSecurity;
/**
 * State whether you want the block type to be inbound or outbound.<br>
 *
 * @remarks
 * `inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.<br>
 * `outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.
 */
var AddAnumberToBlockedListApplicationJSONBlockTypeEnum;
(function (AddAnumberToBlockedListApplicationJSONBlockTypeEnum) {
    AddAnumberToBlockedListApplicationJSONBlockTypeEnum["Inbound"] = "inbound";
    AddAnumberToBlockedListApplicationJSONBlockTypeEnum["Outbound"] = "outbound";
})(AddAnumberToBlockedListApplicationJSONBlockTypeEnum = exports.AddAnumberToBlockedListApplicationJSONBlockTypeEnum || (exports.AddAnumberToBlockedListApplicationJSONBlockTypeEnum = {}));
/**
 * Specify the match type for the blocked list. The values can be one of the following:<br><br>
 *
 * @remarks
 * `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Then, in the `phone_number` field, provide the phone number along with the country code.<br><br>
 * `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country code and area code. Next, in the `phone_number` field, enter a country code as part of the prefix. For example, entering 1907 blocks numbers with country code 1 and area code 907.
 */
var AddAnumberToBlockedListApplicationJSONMatchTypeEnum;
(function (AddAnumberToBlockedListApplicationJSONMatchTypeEnum) {
    AddAnumberToBlockedListApplicationJSONMatchTypeEnum["PhoneNumber"] = "phoneNumber";
    AddAnumberToBlockedListApplicationJSONMatchTypeEnum["Prefix"] = "prefix";
})(AddAnumberToBlockedListApplicationJSONMatchTypeEnum = exports.AddAnumberToBlockedListApplicationJSONMatchTypeEnum || (exports.AddAnumberToBlockedListApplicationJSONMatchTypeEnum = {}));
/**
 * Enable or disable the blocking. One of the following values are allowed:<br>
 *
 * @remarks
 * `active`: Keep the blocking active.<br>
 * `inactive`: Disable the blocking.
 */
var AddAnumberToBlockedListApplicationJSONStatusEnum;
(function (AddAnumberToBlockedListApplicationJSONStatusEnum) {
    AddAnumberToBlockedListApplicationJSONStatusEnum["Active"] = "active";
    AddAnumberToBlockedListApplicationJSONStatusEnum["Inactive"] = "inactive";
})(AddAnumberToBlockedListApplicationJSONStatusEnum = exports.AddAnumberToBlockedListApplicationJSONStatusEnum || (exports.AddAnumberToBlockedListApplicationJSONStatusEnum = {}));
var AddAnumberToBlockedListApplicationJSON = /** @class */ (function (_super) {
    __extends(AddAnumberToBlockedListApplicationJSON, _super);
    function AddAnumberToBlockedListApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "block_type" }),
        __metadata("design:type", String)
    ], AddAnumberToBlockedListApplicationJSON.prototype, "blockType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], AddAnumberToBlockedListApplicationJSON.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "match_type" }),
        __metadata("design:type", String)
    ], AddAnumberToBlockedListApplicationJSON.prototype, "matchType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "phone_number" }),
        __metadata("design:type", String)
    ], AddAnumberToBlockedListApplicationJSON.prototype, "phoneNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], AddAnumberToBlockedListApplicationJSON.prototype, "status", void 0);
    return AddAnumberToBlockedListApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AddAnumberToBlockedListApplicationJSON = AddAnumberToBlockedListApplicationJSON;
/**
 * **HTTP Status Code:** `201` **Created**<br>
 *
 * @remarks
 * Number added to the blocked list successfully.
 */
var AddAnumberToBlockedList201ApplicationXML = /** @class */ (function (_super) {
    __extends(AddAnumberToBlockedList201ApplicationXML, _super);
    function AddAnumberToBlockedList201ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AddAnumberToBlockedList201ApplicationXML.prototype, "id", void 0);
    return AddAnumberToBlockedList201ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.AddAnumberToBlockedList201ApplicationXML = AddAnumberToBlockedList201ApplicationXML;
/**
 * **HTTP Status Code:** `201` **Created**<br>
 *
 * @remarks
 * Number added to the blocked list successfully.
 */
var AddAnumberToBlockedList201ApplicationJSON = /** @class */ (function (_super) {
    __extends(AddAnumberToBlockedList201ApplicationJSON, _super);
    function AddAnumberToBlockedList201ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], AddAnumberToBlockedList201ApplicationJSON.prototype, "id", void 0);
    return AddAnumberToBlockedList201ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AddAnumberToBlockedList201ApplicationJSON = AddAnumberToBlockedList201ApplicationJSON;
var AddAnumberToBlockedListResponse = /** @class */ (function (_super) {
    __extends(AddAnumberToBlockedListResponse, _super);
    function AddAnumberToBlockedListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], AddAnumberToBlockedListResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AddAnumberToBlockedListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AddAnumberToBlockedListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], AddAnumberToBlockedListResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AddAnumberToBlockedList201ApplicationJSON)
    ], AddAnumberToBlockedListResponse.prototype, "addAnumberToBlockedList201ApplicationJSONObject", void 0);
    return AddAnumberToBlockedListResponse;
}(utils_1.SpeakeasyBase));
exports.AddAnumberToBlockedListResponse = AddAnumberToBlockedListResponse;
