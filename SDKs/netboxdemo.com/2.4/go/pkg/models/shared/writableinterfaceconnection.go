// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WritableInterfaceConnectionStatusEnum string

const (
	WritableInterfaceConnectionStatusEnumFalse WritableInterfaceConnectionStatusEnum = "false"
	WritableInterfaceConnectionStatusEnumTrue  WritableInterfaceConnectionStatusEnum = "true"
)

func (e *WritableInterfaceConnectionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "false":
		fallthrough
	case "true":
		*e = WritableInterfaceConnectionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WritableInterfaceConnectionStatusEnum: %s", s)
	}
}

type WritableInterfaceConnectionInput struct {
	ConnectionStatus *WritableInterfaceConnectionStatusEnum `json:"connection_status,omitempty"`
	InterfaceA       int64                                  `json:"interface_a"`
	InterfaceB       int64                                  `json:"interface_b"`
}
