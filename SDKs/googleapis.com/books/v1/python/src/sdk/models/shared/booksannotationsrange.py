"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BooksAnnotationsRange:
    
    end_offset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endOffset'), 'exclude': lambda f: f is None }})
    r"""The offset from the ending position."""  
    end_position: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endPosition'), 'exclude': lambda f: f is None }})
    r"""The ending position for the range."""  
    start_offset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startOffset'), 'exclude': lambda f: f is None }})
    r"""The offset from the starting position."""  
    start_position: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startPosition'), 'exclude': lambda f: f is None }})
    r"""The starting position for the range."""  
    