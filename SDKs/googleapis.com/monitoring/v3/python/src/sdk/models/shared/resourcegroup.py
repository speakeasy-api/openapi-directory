"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ResourceGroupResourceTypeEnum(str, Enum):
    r"""The resource type of the group members."""
    RESOURCE_TYPE_UNSPECIFIED = 'RESOURCE_TYPE_UNSPECIFIED'
    INSTANCE = 'INSTANCE'
    AWS_ELB_LOAD_BALANCER = 'AWS_ELB_LOAD_BALANCER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceGroup:
    r"""The resource submessage for group checks. It can be used instead of a monitored resource, when multiple resources are being monitored."""
    
    group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupId'), 'exclude': lambda f: f is None }})
    r"""The group of resources being monitored. Should be only the [GROUP_ID], and not the full-path projects/[PROJECT_ID_OR_NUMBER]/groups/[GROUP_ID]."""  
    resource_type: Optional[ResourceGroupResourceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceType'), 'exclude': lambda f: f is None }})
    r"""The resource type of the group members."""  
    