/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InterconnectLocationRegionInfo - Information about any potential InterconnectAttachments between an Interconnect at a specific InterconnectLocation, and a specific Cloud Region.
 */
public class InterconnectLocationRegionInfo {
    /**
     * Expected round-trip time in milliseconds, from this InterconnectLocation to a VM in this region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expectedRttMs")
    public String expectedRttMs;

    public InterconnectLocationRegionInfo withExpectedRttMs(String expectedRttMs) {
        this.expectedRttMs = expectedRttMs;
        return this;
    }
    
    /**
     * Identifies the network presence of this location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationPresence")
    public InterconnectLocationRegionInfoLocationPresenceEnum locationPresence;

    public InterconnectLocationRegionInfo withLocationPresence(InterconnectLocationRegionInfoLocationPresenceEnum locationPresence) {
        this.locationPresence = locationPresence;
        return this;
    }
    
    /**
     * URL for the region of this location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;

    public InterconnectLocationRegionInfo withRegion(String region) {
        this.region = region;
        return this;
    }
    
    public InterconnectLocationRegionInfo(){}
}
