// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateDirectiveRequest struct {
	Request *shared.DirectiveNew `request:"mediaType=application/json"`
}

// CreateDirective200ApplicationJSONActionEnum - The id of the action
type CreateDirective200ApplicationJSONActionEnum string

const (
	CreateDirective200ApplicationJSONActionEnumCreateDirective CreateDirective200ApplicationJSONActionEnum = "createDirective"
)

func (e *CreateDirective200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "createDirective":
		*e = CreateDirective200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDirective200ApplicationJSONActionEnum: %s", s)
	}
}

type CreateDirective200ApplicationJSONData struct {
	Directives []shared.Directive `json:"directives"`
}

// CreateDirective200ApplicationJSONResultEnum - Result of the request
type CreateDirective200ApplicationJSONResultEnum string

const (
	CreateDirective200ApplicationJSONResultEnumSuccess CreateDirective200ApplicationJSONResultEnum = "success"
	CreateDirective200ApplicationJSONResultEnumError   CreateDirective200ApplicationJSONResultEnum = "error"
)

func (e *CreateDirective200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = CreateDirective200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDirective200ApplicationJSONResultEnum: %s", s)
	}
}

// CreateDirective200ApplicationJSON - Directives information
type CreateDirective200ApplicationJSON struct {
	// The id of the action
	Action CreateDirective200ApplicationJSONActionEnum `json:"action"`
	Data   CreateDirective200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result CreateDirective200ApplicationJSONResultEnum `json:"result"`
}

type CreateDirectiveResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Directives information
	CreateDirective200ApplicationJSONObject *CreateDirective200ApplicationJSON
}
