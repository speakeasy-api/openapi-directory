<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListOrganizationUsersRequest
{
    /**
     * Sort direction
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SortDirectionEnum $direction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=direction')]
    public ?\OpenAPI\OpenAPI\Models\Shared\SortDirectionEnum $direction = null;
    
    /**
     * Filter users by group
     * 
     * @var ?array<string> $group
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=group')]
    public ?array $group = null;
    
    /**
     * Filter users by license expiration date or `active` / `notActive`
     * 
     * @var ?array<string> $licenseExpirationDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=licenseExpirationDate')]
    public ?array $licenseExpirationDate = null;
    
    /**
     * This is the maximum number of objects that may be returned
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * An opaque string cursor to fetch the next page of data.
     * 
     * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
     * 
     * 
     * @var ?string $next
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=next')]
    public ?string $next = null;
    
    /**
     * Filter users who don't have an active license
     * 
     * @var ?bool $noActiveLicense
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=noActiveLicense')]
    public ?bool $noActiveLicense = null;
    
    /**
     * Return only user ids
     * 
     * @var ?bool $onlyIds
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=onlyIds')]
    public ?bool $onlyIds = null;
    
    /**
     * An opaque string cursor to fetch the previous page of data.
     * 
     * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
     * 
     * 
     * @var ?string $previous
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=previous')]
    public ?string $previous = null;
    
    /**
     * The query to search
     * 
     * @var ?string $q
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q')]
    public ?string $q = null;
    
    /**
     * Filter users by role
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RoleEnum> $role
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=role')]
    public ?array $role = null;
    
    /**
     * The order to sort the user list
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
	public function __construct()
	{
		$this->direction = null;
		$this->group = null;
		$this->licenseExpirationDate = null;
		$this->limit = null;
		$this->next = null;
		$this->noActiveLicense = null;
		$this->onlyIds = null;
		$this->previous = null;
		$this->q = null;
		$this->role = null;
		$this->sort = null;
	}
}
