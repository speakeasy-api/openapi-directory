/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts {
    /**
     * The type of the access policy of the switch port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessPolicyType")
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum accessPolicyType;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withAccessPolicyType(GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsAccessPolicyTypeEnum accessPolicyType) {
        this.accessPolicyType = accessPolicyType;
        return this;
    }
    
    /**
     * The VLANs allowed on the switch port. Only applicable to trunk ports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedVlans")
    public String allowedVlans;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withAllowedVlans(String allowedVlans) {
        this.allowedVlans = allowedVlans;
        return this;
    }
    
    /**
     * The status of the switch port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * The link speed for the switch port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkNegotiation")
    public String linkNegotiation;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withLinkNegotiation(String linkNegotiation) {
        this.linkNegotiation = linkNegotiation;
        return this;
    }
    
    /**
     * The name of the switch port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The PoE status of the switch port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("poeEnabled")
    public Boolean poeEnabled;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withPoeEnabled(Boolean poeEnabled) {
        this.poeEnabled = poeEnabled;
        return this;
    }
    
    /**
     * The identifier of the switch port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("portId")
    public String portId;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withPortId(String portId) {
        this.portId = portId;
        return this;
    }
    
    /**
     * The rapid spanning tree protocol status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rstpEnabled")
    public Boolean rstpEnabled;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withRstpEnabled(Boolean rstpEnabled) {
        this.rstpEnabled = rstpEnabled;
        return this;
    }
    
    /**
     * The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stickyMacAllowList")
    public String[] stickyMacAllowList;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withStickyMacAllowList(String[] stickyMacAllowList) {
        this.stickyMacAllowList = stickyMacAllowList;
        return this;
    }
    
    /**
     * The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stickyMacAllowListLimit")
    public Long stickyMacAllowListLimit;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withStickyMacAllowListLimit(Long stickyMacAllowListLimit) {
        this.stickyMacAllowListLimit = stickyMacAllowListLimit;
        return this;
    }
    
    /**
     * The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stpGuard")
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum stpGuard;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withStpGuard(GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsStpGuardEnum stpGuard) {
        this.stpGuard = stpGuard;
        return this;
    }
    
    /**
     * The list of tags of the switch port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The type of the switch port ('trunk' or 'access').
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum type;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withType(GetOrganizationSwitchPortsBySwitch200ApplicationJSONPortsTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The VLAN of the switch port. A null value will clear the value set for trunk ports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public Long vlan;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withVlan(Long vlan) {
        this.vlan = vlan;
        return this;
    }
    
    /**
     * The voice VLAN of the switch port. Only applicable to access ports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voiceVlan")
    public Long voiceVlan;
    public GetOrganizationSwitchPortsBySwitch200ApplicationJSONPorts withVoiceVlan(Long voiceVlan) {
        this.voiceVlan = voiceVlan;
        return this;
    }
    
}
