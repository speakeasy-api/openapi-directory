/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody {
    /**
     * The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessPolicyNumber")
    public Long accessPolicyNumber;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withAccessPolicyNumber(Long accessPolicyNumber) {
        this.accessPolicyNumber = accessPolicyNumber;
        return this;
    }
    
    /**
     * The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessPolicyType")
    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyAccessPolicyTypeEnum accessPolicyType;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withAccessPolicyType(UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyAccessPolicyTypeEnum accessPolicyType) {
        this.accessPolicyType = accessPolicyType;
        return this;
    }
    
    /**
     * The VLANs allowed on the switch profile port. Only applicable to trunk ports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedVlans")
    public String allowedVlans;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withAllowedVlans(String allowedVlans) {
        this.allowedVlans = allowedVlans;
        return this;
    }
    
    /**
     * If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("daiTrusted")
    public Boolean daiTrusted;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withDaiTrusted(Boolean daiTrusted) {
        this.daiTrusted = daiTrusted;
        return this;
    }
    
    /**
     * The status of the switch profile port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flexibleStackingEnabled")
    public Boolean flexibleStackingEnabled;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withFlexibleStackingEnabled(Boolean flexibleStackingEnabled) {
        this.flexibleStackingEnabled = flexibleStackingEnabled;
        return this;
    }
    
    /**
     * The isolation status of the switch profile port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isolationEnabled")
    public Boolean isolationEnabled;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withIsolationEnabled(Boolean isolationEnabled) {
        this.isolationEnabled = isolationEnabled;
        return this;
    }
    
    /**
     * The link speed for the switch profile port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkNegotiation")
    public String linkNegotiation;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withLinkNegotiation(String linkNegotiation) {
        this.linkNegotiation = linkNegotiation;
        return this;
    }
    
    /**
     * Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("macAllowList")
    public String[] macAllowList;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withMacAllowList(String[] macAllowList) {
        this.macAllowList = macAllowList;
        return this;
    }
    
    /**
     * The name of the switch profile port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The PoE status of the switch profile port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("poeEnabled")
    public Boolean poeEnabled;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withPoeEnabled(Boolean poeEnabled) {
        this.poeEnabled = poeEnabled;
        return this;
    }
    
    /**
     * The ID of the port schedule. A value of null will clear the port schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("portScheduleId")
    public String portScheduleId;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withPortScheduleId(String portScheduleId) {
        this.portScheduleId = portScheduleId;
        return this;
    }
    
    /**
     * Profile attributes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profile")
    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyProfile profile;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withProfile(UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyProfile profile) {
        this.profile = profile;
        return this;
    }
    
    /**
     * The rapid spanning tree protocol status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rstpEnabled")
    public Boolean rstpEnabled;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withRstpEnabled(Boolean rstpEnabled) {
        this.rstpEnabled = rstpEnabled;
        return this;
    }
    
    /**
     * The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stickyMacAllowList")
    public String[] stickyMacAllowList;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withStickyMacAllowList(String[] stickyMacAllowList) {
        this.stickyMacAllowList = stickyMacAllowList;
        return this;
    }
    
    /**
     * The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stickyMacAllowListLimit")
    public Long stickyMacAllowListLimit;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withStickyMacAllowListLimit(Long stickyMacAllowListLimit) {
        this.stickyMacAllowListLimit = stickyMacAllowListLimit;
        return this;
    }
    
    /**
     * The storm control status of the switch profile port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stormControlEnabled")
    public Boolean stormControlEnabled;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withStormControlEnabled(Boolean stormControlEnabled) {
        this.stormControlEnabled = stormControlEnabled;
        return this;
    }
    
    /**
     * The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stpGuard")
    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyStpGuardEnum stpGuard;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withStpGuard(UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyStpGuardEnum stpGuard) {
        this.stpGuard = stpGuard;
        return this;
    }
    
    /**
     * The list of tags of the switch profile port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The type of the switch profile port ('trunk' or 'access').
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyTypeEnum type;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withType(UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("udld")
    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyUdldEnum udld;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withUdld(UpdateOrganizationConfigTemplateSwitchProfilePortRequestBodyUdldEnum udld) {
        this.udld = udld;
        return this;
    }
    
    /**
     * The VLAN of the switch profile port. A null value will clear the value set for trunk ports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public Long vlan;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withVlan(Long vlan) {
        this.vlan = vlan;
        return this;
    }
    
    /**
     * The voice VLAN of the switch profile port. Only applicable to access ports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voiceVlan")
    public Long voiceVlan;

    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody withVoiceVlan(Long voiceVlan) {
        this.voiceVlan = voiceVlan;
        return this;
    }
    
    public UpdateOrganizationConfigTemplateSwitchProfilePortRequestBody(){}
}
