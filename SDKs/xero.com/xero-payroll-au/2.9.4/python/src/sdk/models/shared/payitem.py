"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deductiontype as shared_deductiontype
from ..shared import earningsrate as shared_earningsrate
from ..shared import leavetype as shared_leavetype
from ..shared import reimbursementtype as shared_reimbursementtype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayItem:
    
    deduction_types: Optional[list[shared_deductiontype.DeductionType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeductionTypes'), 'exclude': lambda f: f is None }})  
    earnings_rates: Optional[list[shared_earningsrate.EarningsRate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EarningsRates'), 'exclude': lambda f: f is None }})  
    leave_types: Optional[list[shared_leavetype.LeaveType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveTypes'), 'exclude': lambda f: f is None }})  
    reimbursement_types: Optional[list[shared_reimbursementtype.ReimbursementType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReimbursementTypes'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayItemInput:
    
    deduction_types: Optional[list[shared_deductiontype.DeductionTypeInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeductionTypes'), 'exclude': lambda f: f is None }})  
    earnings_rates: Optional[list[shared_earningsrate.EarningsRateInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EarningsRates'), 'exclude': lambda f: f is None }})  
    leave_types: Optional[list[shared_leavetype.LeaveTypeInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveTypes'), 'exclude': lambda f: f is None }})  
    reimbursement_types: Optional[list[shared_reimbursementtype.ReimbursementTypeInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReimbursementTypes'), 'exclude': lambda f: f is None }})  
    