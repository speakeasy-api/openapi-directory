<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CustomerRead
{
    /**
     * Customer’s date of birth. The format is ‘yyyy-mm-dd’
     * 
     * @var ?string $dateOfBirth
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_of_birth')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateOfBirth = null;
    
    /**
     * Customer’s gender - ‘male’ or ‘female’
     * 
     * @var ?string $gender
     */
	#[\JMS\Serializer\Annotation\SerializedName('gender')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gender = null;
    
    /**
     * Organization entity type. Only applicable for B2B customers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomerReadOrganizationEntityTypeEnum $organizationEntityType
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization_entity_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CustomerReadOrganizationEntityTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomerReadOrganizationEntityTypeEnum $organizationEntityType = null;
    
    /**
     * Organization registration id. Only applicable for B2B customers.
     * 
     * @var ?string $organizationRegistrationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization_registration_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $organizationRegistrationId = null;
    
    /**
     * Customer’s Title. Allowed values per country:
     * 
     * UK - "Mr", "Ms"
     * DE - "Herr", "Frau"
     * AT: "Herr, "Frau"
     * CH: de-CH: "Herr, "Frau" it-CH: "Sig.", "Sig.ra" fr-CH: "M", "Mme" 
     * BE: "Dhr.", "Mevr."
     * NL: "Dhr.", "Mevr."
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * Type of customer in the session. If nothing is added, a B2C session will be the default. If it is a b2b-session, you should enter organization to trigger a B2B session.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * VAT ID. Only applicable for B2B customers.
     * 
     * @var ?string $vatId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vat_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vatId = null;
    
	public function __construct()
	{
		$this->dateOfBirth = null;
		$this->gender = null;
		$this->organizationEntityType = null;
		$this->organizationRegistrationId = null;
		$this->title = null;
		$this->type = null;
		$this->vatId = null;
	}
}
