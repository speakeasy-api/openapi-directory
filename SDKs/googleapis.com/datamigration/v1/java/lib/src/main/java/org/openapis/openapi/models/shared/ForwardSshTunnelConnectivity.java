/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ForwardSshTunnelConnectivity - Forward SSH Tunnel connectivity.
 */
public class ForwardSshTunnelConnectivity {
    /**
     * Required. Hostname for the SSH tunnel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostname")
    public String hostname;

    public ForwardSshTunnelConnectivity withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * Input only. SSH password.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;

    public ForwardSshTunnelConnectivity withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Port for the SSH tunnel, default value is 22.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public Integer port;

    public ForwardSshTunnelConnectivity withPort(Integer port) {
        this.port = port;
        return this;
    }
    
    /**
     * Input only. SSH private key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateKey")
    public String privateKey;

    public ForwardSshTunnelConnectivity withPrivateKey(String privateKey) {
        this.privateKey = privateKey;
        return this;
    }
    
    /**
     * Required. Username for the SSH tunnel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public ForwardSshTunnelConnectivity withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public ForwardSshTunnelConnectivity(){}
}
