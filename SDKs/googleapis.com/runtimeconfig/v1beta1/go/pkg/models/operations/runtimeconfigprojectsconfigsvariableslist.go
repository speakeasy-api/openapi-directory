// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type RuntimeconfigProjectsConfigsVariablesListSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type RuntimeconfigProjectsConfigsVariablesListSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type RuntimeconfigProjectsConfigsVariablesListSecurity struct {
	Option1 *RuntimeconfigProjectsConfigsVariablesListSecurityOption1 `security:"option"`
	Option2 *RuntimeconfigProjectsConfigsVariablesListSecurityOption2 `security:"option"`
}

type RuntimeconfigProjectsConfigsVariablesListPathParams struct {
	// The path to the RuntimeConfig resource for which you want to list variables. The configuration must exist beforehand; the path must be in the format: `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
}

type RuntimeconfigProjectsConfigsVariablesListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Filters variables by matching the specified filter. For example: `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Specifies the number of results to return per page. If there are fewer elements than the specified number, returns all elements.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Specifies a page token to use. Set `pageToken` to a `nextPageToken` returned by a previous list request to get the next page of results.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The flag indicates whether the user wants to return values of variables. If true, then only those variables that user has IAM GetVariable permission will be returned along with their values.
	ReturnValues *bool `queryParam:"style=form,explode=true,name=returnValues"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type RuntimeconfigProjectsConfigsVariablesListRequest struct {
	PathParams  RuntimeconfigProjectsConfigsVariablesListPathParams
	QueryParams RuntimeconfigProjectsConfigsVariablesListQueryParams
	Security    RuntimeconfigProjectsConfigsVariablesListSecurity
}

type RuntimeconfigProjectsConfigsVariablesListResponse struct {
	ContentType string
	// Successful response
	ListVariablesResponse *shared.ListVariablesResponse
	StatusCode            int
	RawResponse           *http.Response
}
