// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// EmployeeEditRequestEmploymentEmploymentDates - Employee employment dates
type EmployeeEditRequestEmploymentEmploymentDates struct {
	// ISO-8601 date string for start date as a full time employee with the group (if applicable)
	FullTimeStart *string `json:"full_time_start,omitempty"`
	// ISO-8601 date string for the hire date of the employee
	HireDate *types.Date `json:"hire_date,omitempty"`
	// ISO-8601 date string for the rehire date of the employee (if applicable)
	Rehire *string `json:"rehire,omitempty"`
	// ISO-8601 date string for the retirement date of the employee (if applicable)
	Retirement *string `json:"retirement,omitempty"`
	// ISO-8601 date string for the termination date of the employee (if applicable)
	Terminated *string `json:"terminated,omitempty"`
}

// EmployeeEditRequestEmploymentEmploymentStatusEnum - Employee employment status at the company
type EmployeeEditRequestEmploymentEmploymentStatusEnum string

const (
	EmployeeEditRequestEmploymentEmploymentStatusEnumContract   EmployeeEditRequestEmploymentEmploymentStatusEnum = "contract"
	EmployeeEditRequestEmploymentEmploymentStatusEnumDisabled   EmployeeEditRequestEmploymentEmploymentStatusEnum = "disabled"
	EmployeeEditRequestEmploymentEmploymentStatusEnumFullTime   EmployeeEditRequestEmploymentEmploymentStatusEnum = "full-time"
	EmployeeEditRequestEmploymentEmploymentStatusEnumPartTime   EmployeeEditRequestEmploymentEmploymentStatusEnum = "part-time"
	EmployeeEditRequestEmploymentEmploymentStatusEnumRetired    EmployeeEditRequestEmploymentEmploymentStatusEnum = "retired"
	EmployeeEditRequestEmploymentEmploymentStatusEnumTerminated EmployeeEditRequestEmploymentEmploymentStatusEnum = "terminated"
)

func (e *EmployeeEditRequestEmploymentEmploymentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "contract":
		fallthrough
	case "disabled":
		fallthrough
	case "full-time":
		fallthrough
	case "part-time":
		fallthrough
	case "retired":
		fallthrough
	case "terminated":
		*e = EmployeeEditRequestEmploymentEmploymentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestEmploymentEmploymentStatusEnum: %s", s)
	}
}

// EmployeeEditRequestEmploymentSalaryTypeEnum - Type of salary earned by the employee
type EmployeeEditRequestEmploymentSalaryTypeEnum string

const (
	EmployeeEditRequestEmploymentSalaryTypeEnumHourly EmployeeEditRequestEmploymentSalaryTypeEnum = "hourly"
	EmployeeEditRequestEmploymentSalaryTypeEnumSalary EmployeeEditRequestEmploymentSalaryTypeEnum = "salary"
)

func (e *EmployeeEditRequestEmploymentSalaryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "hourly":
		fallthrough
	case "salary":
		*e = EmployeeEditRequestEmploymentSalaryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestEmploymentSalaryTypeEnum: %s", s)
	}
}

// EmployeeEditRequestEmploymentSalaryUnitEnum - Unit of salary earned by the employee
type EmployeeEditRequestEmploymentSalaryUnitEnum string

const (
	EmployeeEditRequestEmploymentSalaryUnitEnumAnnual      EmployeeEditRequestEmploymentSalaryUnitEnum = "annual"
	EmployeeEditRequestEmploymentSalaryUnitEnumHour        EmployeeEditRequestEmploymentSalaryUnitEnum = "hour"
	EmployeeEditRequestEmploymentSalaryUnitEnumMonth       EmployeeEditRequestEmploymentSalaryUnitEnum = "month"
	EmployeeEditRequestEmploymentSalaryUnitEnumSemiMonthly EmployeeEditRequestEmploymentSalaryUnitEnum = "semi-monthly"
	EmployeeEditRequestEmploymentSalaryUnitEnumWeek        EmployeeEditRequestEmploymentSalaryUnitEnum = "week"
)

func (e *EmployeeEditRequestEmploymentSalaryUnitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "annual":
		fallthrough
	case "hour":
		fallthrough
	case "month":
		fallthrough
	case "semi-monthly":
		fallthrough
	case "week":
		*e = EmployeeEditRequestEmploymentSalaryUnitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestEmploymentSalaryUnitEnum: %s", s)
	}
}

// EmployeeEditRequestEmploymentSalary - Employee salary information
type EmployeeEditRequestEmploymentSalary struct {
	// Amount of salary earned by the employee in US dollars
	Amount *float64 `json:"amount,omitempty"`
	// Type of salary earned by the employee
	Type *EmployeeEditRequestEmploymentSalaryTypeEnum `json:"type,omitempty"`
	// Unit of salary earned by the employee
	Unit *EmployeeEditRequestEmploymentSalaryUnitEnum `json:"unit,omitempty"`
}

// EmployeeEditRequestEmployment - Employment information for the employee
type EmployeeEditRequestEmployment struct {
	// Employee employment dates
	EmploymentDates *EmployeeEditRequestEmploymentEmploymentDates `json:"employment_dates,omitempty"`
	// Employee employment status at the company
	EmploymentStatus *EmployeeEditRequestEmploymentEmploymentStatusEnum `json:"employment_status,omitempty"`
	// Number of hours worked per week by the employee
	HoursWorked *int `json:"hours_worked,omitempty"`
	// Employee occupation or job title
	Occupation *string `json:"occupation,omitempty"`
	// Employee salary information
	Salary *EmployeeEditRequestEmploymentSalary `json:"salary,omitempty"`
}

// EmployeeEditRequestPersonContactEmailAddressTypeEnum - Type of email address
type EmployeeEditRequestPersonContactEmailAddressTypeEnum string

const (
	EmployeeEditRequestPersonContactEmailAddressTypeEnumHome EmployeeEditRequestPersonContactEmailAddressTypeEnum = "home"
	EmployeeEditRequestPersonContactEmailAddressTypeEnumWork EmployeeEditRequestPersonContactEmailAddressTypeEnum = "work"
)

func (e *EmployeeEditRequestPersonContactEmailAddressTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "home":
		fallthrough
	case "work":
		*e = EmployeeEditRequestPersonContactEmailAddressTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestPersonContactEmailAddressTypeEnum: %s", s)
	}
}

// EmployeeEditRequestPersonContactPreferredMethodEnum - Preferred method of contact for the person
type EmployeeEditRequestPersonContactPreferredMethodEnum string

const (
	EmployeeEditRequestPersonContactPreferredMethodEnumEmail     EmployeeEditRequestPersonContactPreferredMethodEnum = "email"
	EmployeeEditRequestPersonContactPreferredMethodEnumHomePhone EmployeeEditRequestPersonContactPreferredMethodEnum = "home-phone"
	EmployeeEditRequestPersonContactPreferredMethodEnumMail      EmployeeEditRequestPersonContactPreferredMethodEnum = "mail"
	EmployeeEditRequestPersonContactPreferredMethodEnumOther     EmployeeEditRequestPersonContactPreferredMethodEnum = "other"
	EmployeeEditRequestPersonContactPreferredMethodEnumWorkPhone EmployeeEditRequestPersonContactPreferredMethodEnum = "work-phone"
)

func (e *EmployeeEditRequestPersonContactPreferredMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "email":
		fallthrough
	case "home-phone":
		fallthrough
	case "mail":
		fallthrough
	case "other":
		fallthrough
	case "work-phone":
		*e = EmployeeEditRequestPersonContactPreferredMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestPersonContactPreferredMethodEnum: %s", s)
	}
}

// EmployeeEditRequestPersonContact - Contact information for the person
type EmployeeEditRequestPersonContact struct {
	// Email address of the person
	EmailAddress *string `json:"email_address,omitempty"`
	// Type of email address
	EmailAddressType *EmployeeEditRequestPersonContactEmailAddressTypeEnum `json:"email_address_type,omitempty"`
	// Home phone number in E.164 format
	HomePhone *string `json:"home_phone,omitempty"`
	// Preferred written or spoken language of the person
	PreferredLanguage *string `json:"preferred_language,omitempty"`
	// Preferred method of contact for the person
	PreferredMethod *EmployeeEditRequestPersonContactPreferredMethodEnum `json:"preferred_method,omitempty"`
	// True if the person can speak or communicate in English
	SpeaksEnglish *bool `json:"speaks_english,omitempty"`
	// Work phone number in E.164 format
	WorkPhone *string `json:"work_phone,omitempty"`
}

// EmployeeEditRequestPersonDetailsAmericanIndianStateEnum - Primary state of the federally-recognized American Indian or Alaska Native tribe, if applicable
type EmployeeEditRequestPersonDetailsAmericanIndianStateEnum string

const (
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumAk EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "AK"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumAl EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "AL"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumAr EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "AR"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumAs EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "AS"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumAz EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "AZ"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumCa EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "CA"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumCo EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "CO"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumCt EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "CT"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumDc EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "DC"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumDe EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "DE"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumFl EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "FL"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumFm EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "FM"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumGa EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "GA"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumGu EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "GU"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumHi EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "HI"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumIa EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "IA"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumID EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "ID"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumIl EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "IL"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumIn EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "IN"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumKs EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "KS"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumKy EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "KY"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumLa EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "LA"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMa EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MA"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMd EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MD"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMe EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "ME"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMh EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MH"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMi EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MI"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMn EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MN"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMo EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MO"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMp EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MP"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMs EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MS"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumMt EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "MT"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumNc EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "NC"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumNd EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "ND"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumNe EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "NE"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumNh EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "NH"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumNj EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "NJ"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumNm EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "NM"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumNv EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "NV"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumNy EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "NY"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumOh EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "OH"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumOk EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "OK"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumOr EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "OR"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumPa EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "PA"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumPr EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "PR"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumPw EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "PW"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumRi EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "RI"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumSc EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "SC"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumSd EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "SD"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumTn EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "TN"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumTx EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "TX"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumUm EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "UM"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumUt EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "UT"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumVa EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "VA"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumVi EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "VI"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumVt EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "VT"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumWa EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "WA"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumWi EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "WI"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumWv EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "WV"
	EmployeeEditRequestPersonDetailsAmericanIndianStateEnumWy EmployeeEditRequestPersonDetailsAmericanIndianStateEnum = "WY"
)

func (e *EmployeeEditRequestPersonDetailsAmericanIndianStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AK":
		fallthrough
	case "AL":
		fallthrough
	case "AR":
		fallthrough
	case "AS":
		fallthrough
	case "AZ":
		fallthrough
	case "CA":
		fallthrough
	case "CO":
		fallthrough
	case "CT":
		fallthrough
	case "DC":
		fallthrough
	case "DE":
		fallthrough
	case "FL":
		fallthrough
	case "FM":
		fallthrough
	case "GA":
		fallthrough
	case "GU":
		fallthrough
	case "HI":
		fallthrough
	case "IA":
		fallthrough
	case "ID":
		fallthrough
	case "IL":
		fallthrough
	case "IN":
		fallthrough
	case "KS":
		fallthrough
	case "KY":
		fallthrough
	case "LA":
		fallthrough
	case "MA":
		fallthrough
	case "MD":
		fallthrough
	case "ME":
		fallthrough
	case "MH":
		fallthrough
	case "MI":
		fallthrough
	case "MN":
		fallthrough
	case "MO":
		fallthrough
	case "MP":
		fallthrough
	case "MS":
		fallthrough
	case "MT":
		fallthrough
	case "NC":
		fallthrough
	case "ND":
		fallthrough
	case "NE":
		fallthrough
	case "NH":
		fallthrough
	case "NJ":
		fallthrough
	case "NM":
		fallthrough
	case "NV":
		fallthrough
	case "NY":
		fallthrough
	case "OH":
		fallthrough
	case "OK":
		fallthrough
	case "OR":
		fallthrough
	case "PA":
		fallthrough
	case "PR":
		fallthrough
	case "PW":
		fallthrough
	case "RI":
		fallthrough
	case "SC":
		fallthrough
	case "SD":
		fallthrough
	case "TN":
		fallthrough
	case "TX":
		fallthrough
	case "UM":
		fallthrough
	case "UT":
		fallthrough
	case "VA":
		fallthrough
	case "VI":
		fallthrough
	case "VT":
		fallthrough
	case "WA":
		fallthrough
	case "WI":
		fallthrough
	case "WV":
		fallthrough
	case "WY":
		*e = EmployeeEditRequestPersonDetailsAmericanIndianStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestPersonDetailsAmericanIndianStateEnum: %s", s)
	}
}

// EmployeeEditRequestPersonDetailsAmericanIndian - American Indian status details (if applicable)
type EmployeeEditRequestPersonDetailsAmericanIndian struct {
	// Primary state of the federally-recognized American Indian or Alaska Native tribe, if applicable
	State *EmployeeEditRequestPersonDetailsAmericanIndianStateEnum `json:"state,omitempty"`
	// Name of the federally-recognized American Indian or Alaska Native tribe, if applicable
	Tribe *string `json:"tribe,omitempty"`
}

// EmployeeEditRequestPersonDetailsDisability - Disability details (if applicable)
type EmployeeEditRequestPersonDetailsDisability struct {
	// True if the disability impacts the ability to communicate or read
	Communication *bool `json:"communication,omitempty"`
	// True if the member has a disability
	Disabled *bool `json:"disabled,omitempty"`
	// Description of the disability
	Reason *string `json:"reason,omitempty"`
}

// EmployeeEditRequestPersonDetailsTobaccoTypesEnum - Type of tobacco use
type EmployeeEditRequestPersonDetailsTobaccoTypesEnum string

const (
	EmployeeEditRequestPersonDetailsTobaccoTypesEnumChewingTobacco EmployeeEditRequestPersonDetailsTobaccoTypesEnum = "chewing-tobacco"
	EmployeeEditRequestPersonDetailsTobaccoTypesEnumCigarettes     EmployeeEditRequestPersonDetailsTobaccoTypesEnum = "cigarettes"
	EmployeeEditRequestPersonDetailsTobaccoTypesEnumPipe           EmployeeEditRequestPersonDetailsTobaccoTypesEnum = "pipe"
)

func (e *EmployeeEditRequestPersonDetailsTobaccoTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "chewing-tobacco":
		fallthrough
	case "cigarettes":
		fallthrough
	case "pipe":
		*e = EmployeeEditRequestPersonDetailsTobaccoTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestPersonDetailsTobaccoTypesEnum: %s", s)
	}
}

// EmployeeEditRequestPersonDetailsTobacco - Tobacco usage details (if applicable)
type EmployeeEditRequestPersonDetailsTobacco struct {
	// Duration of tobacco use
	Duration *string `json:"duration,omitempty"`
	// Frequency of tobacco use
	Frequency *string `json:"frequency,omitempty"`
	// List of types of tobacco use
	Types []EmployeeEditRequestPersonDetailsTobaccoTypesEnum `json:"types,omitempty"`
	// True if the person uses tobacco of any kind
	User *bool `json:"user,omitempty"`
}

// EmployeeEditRequestPersonDetails - Additional personal details of the person
type EmployeeEditRequestPersonDetails struct {
	// American Indian status details (if applicable)
	AmericanIndian *EmployeeEditRequestPersonDetailsAmericanIndian `json:"american_indian,omitempty"`
	// Disability details (if applicable)
	Disability *EmployeeEditRequestPersonDetailsDisability `json:"disability,omitempty"`
	// True if the person is in the military
	IsMilitary *bool `json:"is_military,omitempty"`
	// True if the person is a student
	IsStudent *bool `json:"is_student,omitempty"`
	// Tobacco usage details (if applicable)
	Tobacco *EmployeeEditRequestPersonDetailsTobacco `json:"tobacco,omitempty"`
}

// EmployeeEditRequestPersonHomeAddressStateEnum - State postal code of the address
type EmployeeEditRequestPersonHomeAddressStateEnum string

const (
	EmployeeEditRequestPersonHomeAddressStateEnumAk EmployeeEditRequestPersonHomeAddressStateEnum = "AK"
	EmployeeEditRequestPersonHomeAddressStateEnumAl EmployeeEditRequestPersonHomeAddressStateEnum = "AL"
	EmployeeEditRequestPersonHomeAddressStateEnumAr EmployeeEditRequestPersonHomeAddressStateEnum = "AR"
	EmployeeEditRequestPersonHomeAddressStateEnumAs EmployeeEditRequestPersonHomeAddressStateEnum = "AS"
	EmployeeEditRequestPersonHomeAddressStateEnumAz EmployeeEditRequestPersonHomeAddressStateEnum = "AZ"
	EmployeeEditRequestPersonHomeAddressStateEnumCa EmployeeEditRequestPersonHomeAddressStateEnum = "CA"
	EmployeeEditRequestPersonHomeAddressStateEnumCo EmployeeEditRequestPersonHomeAddressStateEnum = "CO"
	EmployeeEditRequestPersonHomeAddressStateEnumCt EmployeeEditRequestPersonHomeAddressStateEnum = "CT"
	EmployeeEditRequestPersonHomeAddressStateEnumDc EmployeeEditRequestPersonHomeAddressStateEnum = "DC"
	EmployeeEditRequestPersonHomeAddressStateEnumDe EmployeeEditRequestPersonHomeAddressStateEnum = "DE"
	EmployeeEditRequestPersonHomeAddressStateEnumFl EmployeeEditRequestPersonHomeAddressStateEnum = "FL"
	EmployeeEditRequestPersonHomeAddressStateEnumFm EmployeeEditRequestPersonHomeAddressStateEnum = "FM"
	EmployeeEditRequestPersonHomeAddressStateEnumGa EmployeeEditRequestPersonHomeAddressStateEnum = "GA"
	EmployeeEditRequestPersonHomeAddressStateEnumGu EmployeeEditRequestPersonHomeAddressStateEnum = "GU"
	EmployeeEditRequestPersonHomeAddressStateEnumHi EmployeeEditRequestPersonHomeAddressStateEnum = "HI"
	EmployeeEditRequestPersonHomeAddressStateEnumIa EmployeeEditRequestPersonHomeAddressStateEnum = "IA"
	EmployeeEditRequestPersonHomeAddressStateEnumID EmployeeEditRequestPersonHomeAddressStateEnum = "ID"
	EmployeeEditRequestPersonHomeAddressStateEnumIl EmployeeEditRequestPersonHomeAddressStateEnum = "IL"
	EmployeeEditRequestPersonHomeAddressStateEnumIn EmployeeEditRequestPersonHomeAddressStateEnum = "IN"
	EmployeeEditRequestPersonHomeAddressStateEnumKs EmployeeEditRequestPersonHomeAddressStateEnum = "KS"
	EmployeeEditRequestPersonHomeAddressStateEnumKy EmployeeEditRequestPersonHomeAddressStateEnum = "KY"
	EmployeeEditRequestPersonHomeAddressStateEnumLa EmployeeEditRequestPersonHomeAddressStateEnum = "LA"
	EmployeeEditRequestPersonHomeAddressStateEnumMa EmployeeEditRequestPersonHomeAddressStateEnum = "MA"
	EmployeeEditRequestPersonHomeAddressStateEnumMd EmployeeEditRequestPersonHomeAddressStateEnum = "MD"
	EmployeeEditRequestPersonHomeAddressStateEnumMe EmployeeEditRequestPersonHomeAddressStateEnum = "ME"
	EmployeeEditRequestPersonHomeAddressStateEnumMh EmployeeEditRequestPersonHomeAddressStateEnum = "MH"
	EmployeeEditRequestPersonHomeAddressStateEnumMi EmployeeEditRequestPersonHomeAddressStateEnum = "MI"
	EmployeeEditRequestPersonHomeAddressStateEnumMn EmployeeEditRequestPersonHomeAddressStateEnum = "MN"
	EmployeeEditRequestPersonHomeAddressStateEnumMo EmployeeEditRequestPersonHomeAddressStateEnum = "MO"
	EmployeeEditRequestPersonHomeAddressStateEnumMp EmployeeEditRequestPersonHomeAddressStateEnum = "MP"
	EmployeeEditRequestPersonHomeAddressStateEnumMs EmployeeEditRequestPersonHomeAddressStateEnum = "MS"
	EmployeeEditRequestPersonHomeAddressStateEnumMt EmployeeEditRequestPersonHomeAddressStateEnum = "MT"
	EmployeeEditRequestPersonHomeAddressStateEnumNc EmployeeEditRequestPersonHomeAddressStateEnum = "NC"
	EmployeeEditRequestPersonHomeAddressStateEnumNd EmployeeEditRequestPersonHomeAddressStateEnum = "ND"
	EmployeeEditRequestPersonHomeAddressStateEnumNe EmployeeEditRequestPersonHomeAddressStateEnum = "NE"
	EmployeeEditRequestPersonHomeAddressStateEnumNh EmployeeEditRequestPersonHomeAddressStateEnum = "NH"
	EmployeeEditRequestPersonHomeAddressStateEnumNj EmployeeEditRequestPersonHomeAddressStateEnum = "NJ"
	EmployeeEditRequestPersonHomeAddressStateEnumNm EmployeeEditRequestPersonHomeAddressStateEnum = "NM"
	EmployeeEditRequestPersonHomeAddressStateEnumNv EmployeeEditRequestPersonHomeAddressStateEnum = "NV"
	EmployeeEditRequestPersonHomeAddressStateEnumNy EmployeeEditRequestPersonHomeAddressStateEnum = "NY"
	EmployeeEditRequestPersonHomeAddressStateEnumOh EmployeeEditRequestPersonHomeAddressStateEnum = "OH"
	EmployeeEditRequestPersonHomeAddressStateEnumOk EmployeeEditRequestPersonHomeAddressStateEnum = "OK"
	EmployeeEditRequestPersonHomeAddressStateEnumOr EmployeeEditRequestPersonHomeAddressStateEnum = "OR"
	EmployeeEditRequestPersonHomeAddressStateEnumPa EmployeeEditRequestPersonHomeAddressStateEnum = "PA"
	EmployeeEditRequestPersonHomeAddressStateEnumPr EmployeeEditRequestPersonHomeAddressStateEnum = "PR"
	EmployeeEditRequestPersonHomeAddressStateEnumPw EmployeeEditRequestPersonHomeAddressStateEnum = "PW"
	EmployeeEditRequestPersonHomeAddressStateEnumRi EmployeeEditRequestPersonHomeAddressStateEnum = "RI"
	EmployeeEditRequestPersonHomeAddressStateEnumSc EmployeeEditRequestPersonHomeAddressStateEnum = "SC"
	EmployeeEditRequestPersonHomeAddressStateEnumSd EmployeeEditRequestPersonHomeAddressStateEnum = "SD"
	EmployeeEditRequestPersonHomeAddressStateEnumTn EmployeeEditRequestPersonHomeAddressStateEnum = "TN"
	EmployeeEditRequestPersonHomeAddressStateEnumTx EmployeeEditRequestPersonHomeAddressStateEnum = "TX"
	EmployeeEditRequestPersonHomeAddressStateEnumUm EmployeeEditRequestPersonHomeAddressStateEnum = "UM"
	EmployeeEditRequestPersonHomeAddressStateEnumUt EmployeeEditRequestPersonHomeAddressStateEnum = "UT"
	EmployeeEditRequestPersonHomeAddressStateEnumVa EmployeeEditRequestPersonHomeAddressStateEnum = "VA"
	EmployeeEditRequestPersonHomeAddressStateEnumVi EmployeeEditRequestPersonHomeAddressStateEnum = "VI"
	EmployeeEditRequestPersonHomeAddressStateEnumVt EmployeeEditRequestPersonHomeAddressStateEnum = "VT"
	EmployeeEditRequestPersonHomeAddressStateEnumWa EmployeeEditRequestPersonHomeAddressStateEnum = "WA"
	EmployeeEditRequestPersonHomeAddressStateEnumWi EmployeeEditRequestPersonHomeAddressStateEnum = "WI"
	EmployeeEditRequestPersonHomeAddressStateEnumWv EmployeeEditRequestPersonHomeAddressStateEnum = "WV"
	EmployeeEditRequestPersonHomeAddressStateEnumWy EmployeeEditRequestPersonHomeAddressStateEnum = "WY"
)

func (e *EmployeeEditRequestPersonHomeAddressStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AK":
		fallthrough
	case "AL":
		fallthrough
	case "AR":
		fallthrough
	case "AS":
		fallthrough
	case "AZ":
		fallthrough
	case "CA":
		fallthrough
	case "CO":
		fallthrough
	case "CT":
		fallthrough
	case "DC":
		fallthrough
	case "DE":
		fallthrough
	case "FL":
		fallthrough
	case "FM":
		fallthrough
	case "GA":
		fallthrough
	case "GU":
		fallthrough
	case "HI":
		fallthrough
	case "IA":
		fallthrough
	case "ID":
		fallthrough
	case "IL":
		fallthrough
	case "IN":
		fallthrough
	case "KS":
		fallthrough
	case "KY":
		fallthrough
	case "LA":
		fallthrough
	case "MA":
		fallthrough
	case "MD":
		fallthrough
	case "ME":
		fallthrough
	case "MH":
		fallthrough
	case "MI":
		fallthrough
	case "MN":
		fallthrough
	case "MO":
		fallthrough
	case "MP":
		fallthrough
	case "MS":
		fallthrough
	case "MT":
		fallthrough
	case "NC":
		fallthrough
	case "ND":
		fallthrough
	case "NE":
		fallthrough
	case "NH":
		fallthrough
	case "NJ":
		fallthrough
	case "NM":
		fallthrough
	case "NV":
		fallthrough
	case "NY":
		fallthrough
	case "OH":
		fallthrough
	case "OK":
		fallthrough
	case "OR":
		fallthrough
	case "PA":
		fallthrough
	case "PR":
		fallthrough
	case "PW":
		fallthrough
	case "RI":
		fallthrough
	case "SC":
		fallthrough
	case "SD":
		fallthrough
	case "TN":
		fallthrough
	case "TX":
		fallthrough
	case "UM":
		fallthrough
	case "UT":
		fallthrough
	case "VA":
		fallthrough
	case "VI":
		fallthrough
	case "VT":
		fallthrough
	case "WA":
		fallthrough
	case "WI":
		fallthrough
	case "WV":
		fallthrough
	case "WY":
		*e = EmployeeEditRequestPersonHomeAddressStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestPersonHomeAddressStateEnum: %s", s)
	}
}

// EmployeeEditRequestPersonHomeAddress - Home address of the person
type EmployeeEditRequestPersonHomeAddress struct {
	// City of the address
	City string `json:"city"`
	// County of the address
	County *string `json:"county,omitempty"`
	// State postal code of the address
	State EmployeeEditRequestPersonHomeAddressStateEnum `json:"state"`
	// Line one of the address
	StreetOne string `json:"street_one"`
	// Line two of the address
	StreetTwo *string `json:"street_two,omitempty"`
	// Zip code of the address
	ZipCode string `json:"zip_code"`
}

// EmployeeEditRequestPersonMailingAddressStateEnum - State postal code of the address
type EmployeeEditRequestPersonMailingAddressStateEnum string

const (
	EmployeeEditRequestPersonMailingAddressStateEnumAk EmployeeEditRequestPersonMailingAddressStateEnum = "AK"
	EmployeeEditRequestPersonMailingAddressStateEnumAl EmployeeEditRequestPersonMailingAddressStateEnum = "AL"
	EmployeeEditRequestPersonMailingAddressStateEnumAr EmployeeEditRequestPersonMailingAddressStateEnum = "AR"
	EmployeeEditRequestPersonMailingAddressStateEnumAs EmployeeEditRequestPersonMailingAddressStateEnum = "AS"
	EmployeeEditRequestPersonMailingAddressStateEnumAz EmployeeEditRequestPersonMailingAddressStateEnum = "AZ"
	EmployeeEditRequestPersonMailingAddressStateEnumCa EmployeeEditRequestPersonMailingAddressStateEnum = "CA"
	EmployeeEditRequestPersonMailingAddressStateEnumCo EmployeeEditRequestPersonMailingAddressStateEnum = "CO"
	EmployeeEditRequestPersonMailingAddressStateEnumCt EmployeeEditRequestPersonMailingAddressStateEnum = "CT"
	EmployeeEditRequestPersonMailingAddressStateEnumDc EmployeeEditRequestPersonMailingAddressStateEnum = "DC"
	EmployeeEditRequestPersonMailingAddressStateEnumDe EmployeeEditRequestPersonMailingAddressStateEnum = "DE"
	EmployeeEditRequestPersonMailingAddressStateEnumFl EmployeeEditRequestPersonMailingAddressStateEnum = "FL"
	EmployeeEditRequestPersonMailingAddressStateEnumFm EmployeeEditRequestPersonMailingAddressStateEnum = "FM"
	EmployeeEditRequestPersonMailingAddressStateEnumGa EmployeeEditRequestPersonMailingAddressStateEnum = "GA"
	EmployeeEditRequestPersonMailingAddressStateEnumGu EmployeeEditRequestPersonMailingAddressStateEnum = "GU"
	EmployeeEditRequestPersonMailingAddressStateEnumHi EmployeeEditRequestPersonMailingAddressStateEnum = "HI"
	EmployeeEditRequestPersonMailingAddressStateEnumIa EmployeeEditRequestPersonMailingAddressStateEnum = "IA"
	EmployeeEditRequestPersonMailingAddressStateEnumID EmployeeEditRequestPersonMailingAddressStateEnum = "ID"
	EmployeeEditRequestPersonMailingAddressStateEnumIl EmployeeEditRequestPersonMailingAddressStateEnum = "IL"
	EmployeeEditRequestPersonMailingAddressStateEnumIn EmployeeEditRequestPersonMailingAddressStateEnum = "IN"
	EmployeeEditRequestPersonMailingAddressStateEnumKs EmployeeEditRequestPersonMailingAddressStateEnum = "KS"
	EmployeeEditRequestPersonMailingAddressStateEnumKy EmployeeEditRequestPersonMailingAddressStateEnum = "KY"
	EmployeeEditRequestPersonMailingAddressStateEnumLa EmployeeEditRequestPersonMailingAddressStateEnum = "LA"
	EmployeeEditRequestPersonMailingAddressStateEnumMa EmployeeEditRequestPersonMailingAddressStateEnum = "MA"
	EmployeeEditRequestPersonMailingAddressStateEnumMd EmployeeEditRequestPersonMailingAddressStateEnum = "MD"
	EmployeeEditRequestPersonMailingAddressStateEnumMe EmployeeEditRequestPersonMailingAddressStateEnum = "ME"
	EmployeeEditRequestPersonMailingAddressStateEnumMh EmployeeEditRequestPersonMailingAddressStateEnum = "MH"
	EmployeeEditRequestPersonMailingAddressStateEnumMi EmployeeEditRequestPersonMailingAddressStateEnum = "MI"
	EmployeeEditRequestPersonMailingAddressStateEnumMn EmployeeEditRequestPersonMailingAddressStateEnum = "MN"
	EmployeeEditRequestPersonMailingAddressStateEnumMo EmployeeEditRequestPersonMailingAddressStateEnum = "MO"
	EmployeeEditRequestPersonMailingAddressStateEnumMp EmployeeEditRequestPersonMailingAddressStateEnum = "MP"
	EmployeeEditRequestPersonMailingAddressStateEnumMs EmployeeEditRequestPersonMailingAddressStateEnum = "MS"
	EmployeeEditRequestPersonMailingAddressStateEnumMt EmployeeEditRequestPersonMailingAddressStateEnum = "MT"
	EmployeeEditRequestPersonMailingAddressStateEnumNc EmployeeEditRequestPersonMailingAddressStateEnum = "NC"
	EmployeeEditRequestPersonMailingAddressStateEnumNd EmployeeEditRequestPersonMailingAddressStateEnum = "ND"
	EmployeeEditRequestPersonMailingAddressStateEnumNe EmployeeEditRequestPersonMailingAddressStateEnum = "NE"
	EmployeeEditRequestPersonMailingAddressStateEnumNh EmployeeEditRequestPersonMailingAddressStateEnum = "NH"
	EmployeeEditRequestPersonMailingAddressStateEnumNj EmployeeEditRequestPersonMailingAddressStateEnum = "NJ"
	EmployeeEditRequestPersonMailingAddressStateEnumNm EmployeeEditRequestPersonMailingAddressStateEnum = "NM"
	EmployeeEditRequestPersonMailingAddressStateEnumNv EmployeeEditRequestPersonMailingAddressStateEnum = "NV"
	EmployeeEditRequestPersonMailingAddressStateEnumNy EmployeeEditRequestPersonMailingAddressStateEnum = "NY"
	EmployeeEditRequestPersonMailingAddressStateEnumOh EmployeeEditRequestPersonMailingAddressStateEnum = "OH"
	EmployeeEditRequestPersonMailingAddressStateEnumOk EmployeeEditRequestPersonMailingAddressStateEnum = "OK"
	EmployeeEditRequestPersonMailingAddressStateEnumOr EmployeeEditRequestPersonMailingAddressStateEnum = "OR"
	EmployeeEditRequestPersonMailingAddressStateEnumPa EmployeeEditRequestPersonMailingAddressStateEnum = "PA"
	EmployeeEditRequestPersonMailingAddressStateEnumPr EmployeeEditRequestPersonMailingAddressStateEnum = "PR"
	EmployeeEditRequestPersonMailingAddressStateEnumPw EmployeeEditRequestPersonMailingAddressStateEnum = "PW"
	EmployeeEditRequestPersonMailingAddressStateEnumRi EmployeeEditRequestPersonMailingAddressStateEnum = "RI"
	EmployeeEditRequestPersonMailingAddressStateEnumSc EmployeeEditRequestPersonMailingAddressStateEnum = "SC"
	EmployeeEditRequestPersonMailingAddressStateEnumSd EmployeeEditRequestPersonMailingAddressStateEnum = "SD"
	EmployeeEditRequestPersonMailingAddressStateEnumTn EmployeeEditRequestPersonMailingAddressStateEnum = "TN"
	EmployeeEditRequestPersonMailingAddressStateEnumTx EmployeeEditRequestPersonMailingAddressStateEnum = "TX"
	EmployeeEditRequestPersonMailingAddressStateEnumUm EmployeeEditRequestPersonMailingAddressStateEnum = "UM"
	EmployeeEditRequestPersonMailingAddressStateEnumUt EmployeeEditRequestPersonMailingAddressStateEnum = "UT"
	EmployeeEditRequestPersonMailingAddressStateEnumVa EmployeeEditRequestPersonMailingAddressStateEnum = "VA"
	EmployeeEditRequestPersonMailingAddressStateEnumVi EmployeeEditRequestPersonMailingAddressStateEnum = "VI"
	EmployeeEditRequestPersonMailingAddressStateEnumVt EmployeeEditRequestPersonMailingAddressStateEnum = "VT"
	EmployeeEditRequestPersonMailingAddressStateEnumWa EmployeeEditRequestPersonMailingAddressStateEnum = "WA"
	EmployeeEditRequestPersonMailingAddressStateEnumWi EmployeeEditRequestPersonMailingAddressStateEnum = "WI"
	EmployeeEditRequestPersonMailingAddressStateEnumWv EmployeeEditRequestPersonMailingAddressStateEnum = "WV"
	EmployeeEditRequestPersonMailingAddressStateEnumWy EmployeeEditRequestPersonMailingAddressStateEnum = "WY"
)

func (e *EmployeeEditRequestPersonMailingAddressStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AK":
		fallthrough
	case "AL":
		fallthrough
	case "AR":
		fallthrough
	case "AS":
		fallthrough
	case "AZ":
		fallthrough
	case "CA":
		fallthrough
	case "CO":
		fallthrough
	case "CT":
		fallthrough
	case "DC":
		fallthrough
	case "DE":
		fallthrough
	case "FL":
		fallthrough
	case "FM":
		fallthrough
	case "GA":
		fallthrough
	case "GU":
		fallthrough
	case "HI":
		fallthrough
	case "IA":
		fallthrough
	case "ID":
		fallthrough
	case "IL":
		fallthrough
	case "IN":
		fallthrough
	case "KS":
		fallthrough
	case "KY":
		fallthrough
	case "LA":
		fallthrough
	case "MA":
		fallthrough
	case "MD":
		fallthrough
	case "ME":
		fallthrough
	case "MH":
		fallthrough
	case "MI":
		fallthrough
	case "MN":
		fallthrough
	case "MO":
		fallthrough
	case "MP":
		fallthrough
	case "MS":
		fallthrough
	case "MT":
		fallthrough
	case "NC":
		fallthrough
	case "ND":
		fallthrough
	case "NE":
		fallthrough
	case "NH":
		fallthrough
	case "NJ":
		fallthrough
	case "NM":
		fallthrough
	case "NV":
		fallthrough
	case "NY":
		fallthrough
	case "OH":
		fallthrough
	case "OK":
		fallthrough
	case "OR":
		fallthrough
	case "PA":
		fallthrough
	case "PR":
		fallthrough
	case "PW":
		fallthrough
	case "RI":
		fallthrough
	case "SC":
		fallthrough
	case "SD":
		fallthrough
	case "TN":
		fallthrough
	case "TX":
		fallthrough
	case "UM":
		fallthrough
	case "UT":
		fallthrough
	case "VA":
		fallthrough
	case "VI":
		fallthrough
	case "VT":
		fallthrough
	case "WA":
		fallthrough
	case "WI":
		fallthrough
	case "WV":
		fallthrough
	case "WY":
		*e = EmployeeEditRequestPersonMailingAddressStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestPersonMailingAddressStateEnum: %s", s)
	}
}

// EmployeeEditRequestPersonMailingAddress - Mailing address for the person
type EmployeeEditRequestPersonMailingAddress struct {
	// City of the address
	City string `json:"city"`
	// County of the address
	County *string `json:"county,omitempty"`
	// State postal code of the address
	State EmployeeEditRequestPersonMailingAddressStateEnum `json:"state"`
	// Line one of the address
	StreetOne string `json:"street_one"`
	// Line two of the address
	StreetTwo *string `json:"street_two,omitempty"`
	// Zip code of the address
	ZipCode string `json:"zip_code"`
}

// EmployeeEditRequestPersonMaritalStatusEnum - Marital status of the person
type EmployeeEditRequestPersonMaritalStatusEnum string

const (
	EmployeeEditRequestPersonMaritalStatusEnumDivorced         EmployeeEditRequestPersonMaritalStatusEnum = "divorced"
	EmployeeEditRequestPersonMaritalStatusEnumDomesticPartner  EmployeeEditRequestPersonMaritalStatusEnum = "domestic-partner"
	EmployeeEditRequestPersonMaritalStatusEnumLegallySeparated EmployeeEditRequestPersonMaritalStatusEnum = "legally-separated"
	EmployeeEditRequestPersonMaritalStatusEnumMarried          EmployeeEditRequestPersonMaritalStatusEnum = "married"
	EmployeeEditRequestPersonMaritalStatusEnumSingle           EmployeeEditRequestPersonMaritalStatusEnum = "single"
	EmployeeEditRequestPersonMaritalStatusEnumWidowed          EmployeeEditRequestPersonMaritalStatusEnum = "widowed"
)

func (e *EmployeeEditRequestPersonMaritalStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "divorced":
		fallthrough
	case "domestic-partner":
		fallthrough
	case "legally-separated":
		fallthrough
	case "married":
		fallthrough
	case "single":
		fallthrough
	case "widowed":
		*e = EmployeeEditRequestPersonMaritalStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestPersonMaritalStatusEnum: %s", s)
	}
}

// EmployeeEditRequestPersonSexEnum - Sex of the person
type EmployeeEditRequestPersonSexEnum string

const (
	EmployeeEditRequestPersonSexEnumF EmployeeEditRequestPersonSexEnum = "F"
	EmployeeEditRequestPersonSexEnumM EmployeeEditRequestPersonSexEnum = "M"
	EmployeeEditRequestPersonSexEnumU EmployeeEditRequestPersonSexEnum = "U"
	EmployeeEditRequestPersonSexEnumX EmployeeEditRequestPersonSexEnum = "X"
)

func (e *EmployeeEditRequestPersonSexEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "F":
		fallthrough
	case "M":
		fallthrough
	case "U":
		fallthrough
	case "X":
		*e = EmployeeEditRequestPersonSexEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeeEditRequestPersonSexEnum: %s", s)
	}
}

// EmployeeEditRequestPerson - Personal information for the employee
type EmployeeEditRequestPerson struct {
	// Contact information for the person
	Contact *EmployeeEditRequestPersonContact `json:"contact,omitempty"`
	// ISO-8601 date string for the date of birth of the person
	DateOfBirth *types.Date `json:"date_of_birth,omitempty"`
	// Additional personal details of the person
	Details *EmployeeEditRequestPersonDetails `json:"details,omitempty"`
	// First name of the person
	FirstName *string `json:"first_name,omitempty"`
	// Home address of the person
	HomeAddress *EmployeeEditRequestPersonHomeAddress `json:"home_address,omitempty"`
	// Last name of the person
	LastName *string `json:"last_name,omitempty"`
	// Mailing address for the person
	MailingAddress *EmployeeEditRequestPersonMailingAddress `json:"mailing_address,omitempty"`
	// Marital status of the person
	MaritalStatus *EmployeeEditRequestPersonMaritalStatusEnum `json:"marital_status,omitempty"`
	// Middle name of the person
	MiddleName *string `json:"middle_name,omitempty"`
	// Sex of the person
	Sex *EmployeeEditRequestPersonSexEnum `json:"sex,omitempty"`
	// Social Security Number of the person
	Ssn *string `json:"ssn,omitempty"`
	// Suffix of the person
	Suffix *string `json:"suffix,omitempty"`
}

type EmployeeEditRequest struct {
	// Employment information for the employee
	Employment *EmployeeEditRequestEmployment `json:"employment,omitempty"`
	// Personal information for the employee
	Person *EmployeeEditRequestPerson `json:"person,omitempty"`
}
