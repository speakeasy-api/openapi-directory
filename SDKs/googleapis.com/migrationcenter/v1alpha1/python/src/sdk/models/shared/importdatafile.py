"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import uploadfileinfo as shared_uploadfileinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ImportDataFileFormatEnum(str, Enum):
    r"""The payload format."""
    IMPORT_JOB_FORMAT_UNSPECIFIED = 'IMPORT_JOB_FORMAT_UNSPECIFIED'
    IMPORT_JOB_FORMAT_CMDB = 'IMPORT_JOB_FORMAT_CMDB'
    IMPORT_JOB_FORMAT_RVTOOLS_XLSX = 'IMPORT_JOB_FORMAT_RVTOOLS_XLSX'
    IMPORT_JOB_FORMAT_RVTOOLS_CSV = 'IMPORT_JOB_FORMAT_RVTOOLS_CSV'
    IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV = 'IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV'
    IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV = 'IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV'
    IMPORT_JOB_FORMAT_MANUAL_CSV = 'IMPORT_JOB_FORMAT_MANUAL_CSV'

class ImportDataFileStateEnum(str, Enum):
    r"""Output only. The state of the import data file."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    CREATING = 'CREATING'
    ACTIVE = 'ACTIVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportDataFile:
    r"""A resource that represents a payload file in an import job."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp when the file was created."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""User-friendly display name. Maximum length is 63 characters."""  
    format: Optional[ImportDataFileFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""The payload format."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The name of the file."""  
    state: Optional[ImportDataFileStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The state of the import data file."""  
    upload_file_info: Optional[shared_uploadfileinfo.UploadFileInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uploadFileInfo'), 'exclude': lambda f: f is None }})
    r"""A resource that contains a URI to which a data file can be uploaded."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportDataFileInput:
    r"""A resource that represents a payload file in an import job."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""User-friendly display name. Maximum length is 63 characters."""  
    format: Optional[ImportDataFileFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""The payload format."""  
    