/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class QueryUsersRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;
    public QueryUsersRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connection_id")
    public String connectionId;
    public QueryUsersRequest withConnectionId(String connectionId) {
        this.connectionId = connectionId;
        return this;
    }
    
    /**
     * User filters
     */
    @JsonProperty("filter_conditions")
    public java.util.Map<String, Object> filterConditions;
    public QueryUsersRequest withFilterConditions(java.util.Map<String, Object> filterConditions) {
        this.filterConditions = filterConditions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_gt")
    public String idGt;
    public QueryUsersRequest withIdGt(String idGt) {
        this.idGt = idGt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_gte")
    public String idGte;
    public QueryUsersRequest withIdGte(String idGte) {
        this.idGte = idGte;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_lt")
    public String idLt;
    public QueryUsersRequest withIdLt(String idLt) {
        this.idLt = idLt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_lte")
    public String idLte;
    public QueryUsersRequest withIdLte(String idLte) {
        this.idLte = idLte;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Double limit;
    public QueryUsersRequest withLimit(Double limit) {
        this.limit = limit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Double offset;
    public QueryUsersRequest withOffset(Double offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Request user presence status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("presence")
    public Boolean presence;
    public QueryUsersRequest withPresence(Boolean presence) {
        this.presence = presence;
        return this;
    }
    
    /**
     * Array of sort parameters
     */
    @JsonProperty("sort")
    public SortParam[] sort;
    public QueryUsersRequest withSort(SortParam[] sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Represents chat user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public java.util.Map<String, Object> user;
    public QueryUsersRequest withUser(java.util.Map<String, Object> user) {
        this.user = user;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public QueryUsersRequest withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
