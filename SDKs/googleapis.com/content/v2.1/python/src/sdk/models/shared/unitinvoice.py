"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import price as shared_price
from ..shared import unitinvoiceadditionalcharge as shared_unitinvoiceadditionalcharge
from ..shared import unitinvoicetaxline as shared_unitinvoicetaxline
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UnitInvoice:
    
    additional_charges: Optional[list[shared_unitinvoiceadditionalcharge.UnitInvoiceAdditionalCharge]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalCharges'), 'exclude': lambda f: f is None }})
    r"""Additional charges for a unit, for example, shipping costs."""  
    unit_price: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unitPrice'), 'exclude': lambda f: f is None }})  
    unit_price_taxes: Optional[list[shared_unitinvoicetaxline.UnitInvoiceTaxLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unitPriceTaxes'), 'exclude': lambda f: f is None }})
    r"""Tax amounts to apply to the unit price."""  
    