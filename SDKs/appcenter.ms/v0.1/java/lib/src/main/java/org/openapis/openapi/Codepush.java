/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Codepush {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Codepush(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Returns the acquisition service status to the caller
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushAcquisitionGetAcquisitionStatusResponse codePushAcquisitionGetAcquisitionStatus() throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/public/codepush/status");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushAcquisitionGetAcquisitionStatusResponse res = new org.openapis.openapi.models.operations.CodePushAcquisitionGetAcquisitionStatusResponse() {{
            codePushAcquisitionGetAcquisitionStatus200ApplicationJSONObject = null;
            codePushAcquisitionGetAcquisitionStatusDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushAcquisitionGetAcquisitionStatus200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushAcquisitionGetAcquisitionStatus200ApplicationJSON.class);
                res.codePushAcquisitionGetAcquisitionStatus200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushAcquisitionGetAcquisitionStatusDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushAcquisitionGetAcquisitionStatusDefaultApplicationJSON.class);
                res.codePushAcquisitionGetAcquisitionStatusDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Check for updates
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheckResponse codePushAcquisitionUpdateCheck(org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheckRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/public/codepush/update_check");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheckRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheckResponse res = new org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheckResponse() {{
            codePushAcquisitionUpdateCheck200ApplicationJSONObject = null;
            codePushAcquisitionUpdateCheckDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheck200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheck200ApplicationJSON.class);
                res.codePushAcquisitionUpdateCheck200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheckDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushAcquisitionUpdateCheckDefaultApplicationJSON.class);
                res.codePushAcquisitionUpdateCheckDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Report Deployment status metric
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDeployStatusResponse codePushAcquisitionUpdateDeployStatus(org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDeployStatusRequestBody request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/public/codepush/report_status/deploy");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDeployStatusResponse res = new org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDeployStatusResponse() {{
            codePushAcquisitionUpdateDeployStatusDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDeployStatusDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDeployStatusDefaultApplicationJSON.class);
                res.codePushAcquisitionUpdateDeployStatusDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Report download of specified release
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDownloadStatusResponse codePushAcquisitionUpdateDownloadStatus(org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDownloadStatusRequestBody request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/public/codepush/report_status/download");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDownloadStatusResponse res = new org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDownloadStatusResponse() {{
            codePushAcquisitionUpdateDownloadStatusDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDownloadStatusDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushAcquisitionUpdateDownloadStatusDefaultApplicationJSON.class);
                res.codePushAcquisitionUpdateDownloadStatusDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Gets all releases metrics for specified Deployment
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentMetricsGetResponse codePushDeploymentMetricsGet(org.openapis.openapi.models.operations.CodePushDeploymentMetricsGetRequest request, org.openapis.openapi.models.operations.CodePushDeploymentMetricsGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentMetricsGetRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/metrics", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentMetricsGetResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentMetricsGetResponse() {{
            codePushDeploymentMetricsGet200ApplicationJSONObjects = null;
            codePushDeploymentMetricsGetDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentMetricsGet200ApplicationJSON[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentMetricsGet200ApplicationJSON[].class);
                res.codePushDeploymentMetricsGet200ApplicationJSONObjects = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentMetricsGetDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentMetricsGetDefaultApplicationJSON.class);
                res.codePushDeploymentMetricsGetDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Rollback the latest or a specific release for an app deployment
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollbackResponse codePushDeploymentReleaseRollback(org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollbackRequest request, org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollbackSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollbackRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/rollback_release", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollbackResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollbackResponse() {{
            codePushDeploymentReleaseRollback201ApplicationJSONObject = null;
            codePushDeploymentReleaseRollbackDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollback201ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollback201ApplicationJSON.class);
                res.codePushDeploymentReleaseRollback201ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollbackDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentReleaseRollbackDefaultApplicationJSON.class);
                res.codePushDeploymentReleaseRollbackDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Create a new CodePush release for the specified deployment
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreateResponse codePushDeploymentReleasesCreate(org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreateRequest request, org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreateRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreateResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreateResponse() {{
            codePushDeploymentReleasesCreate201ApplicationJSONObject = null;
            codePushDeploymentReleasesCreateDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreate201ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreate201ApplicationJSON.class);
                res.codePushDeploymentReleasesCreate201ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreateDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentReleasesCreateDefaultApplicationJSON.class);
                res.codePushDeploymentReleasesCreateDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Clears a Deployment of releases
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentReleasesDeleteResponse codePushDeploymentReleasesDelete(org.openapis.openapi.models.operations.CodePushDeploymentReleasesDeleteRequest request, org.openapis.openapi.models.operations.CodePushDeploymentReleasesDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentReleasesDeleteRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentReleasesDeleteResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentReleasesDeleteResponse() {{
            codePushDeploymentReleasesDeleteDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentReleasesDeleteDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentReleasesDeleteDefaultApplicationJSON.class);
                res.codePushDeploymentReleasesDeleteDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Gets the history of releases on a Deployment
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentReleasesGetResponse codePushDeploymentReleasesGet(org.openapis.openapi.models.operations.CodePushDeploymentReleasesGetRequest request, org.openapis.openapi.models.operations.CodePushDeploymentReleasesGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentReleasesGetRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentReleasesGetResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentReleasesGetResponse() {{
            codePushDeploymentReleasesGet200ApplicationJSONAnies = null;
            codePushDeploymentReleasesGetDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentReleasesGet200ApplicationJSON[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentReleasesGet200ApplicationJSON[].class);
                res.codePushDeploymentReleasesGet200ApplicationJSONAnies = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentReleasesGetDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentReleasesGetDefaultApplicationJSON.class);
                res.codePushDeploymentReleasesGetDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Create a new CodePush release upload for the specified deployment
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentUploadCreateResponse codePushDeploymentUploadCreate(org.openapis.openapi.models.operations.CodePushDeploymentUploadCreateRequest request, org.openapis.openapi.models.operations.CodePushDeploymentUploadCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentUploadCreateRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/uploads", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentUploadCreateResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentUploadCreateResponse() {{
            codePushDeploymentUploadCreate200ApplicationJSONObject = null;
            codePushDeploymentUploadCreateDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentUploadCreate200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentUploadCreate200ApplicationJSON.class);
                res.codePushDeploymentUploadCreate200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentUploadCreateDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentUploadCreateDefaultApplicationJSON.class);
                res.codePushDeploymentUploadCreateDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Creates a CodePush Deployment for the given app
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentsCreateResponse codePushDeploymentsCreate(org.openapis.openapi.models.operations.CodePushDeploymentsCreateRequest request, org.openapis.openapi.models.operations.CodePushDeploymentsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentsCreateRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentsCreateResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentsCreateResponse() {{
            codePushDeploymentsCreate201ApplicationJSONObject = null;
            codePushDeploymentsCreateDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsCreate201ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsCreate201ApplicationJSON.class);
                res.codePushDeploymentsCreate201ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsCreateDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsCreateDefaultApplicationJSON.class);
                res.codePushDeploymentsCreateDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Deletes a CodePush Deployment for the given app
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentsDeleteResponse codePushDeploymentsDelete(org.openapis.openapi.models.operations.CodePushDeploymentsDeleteRequest request, org.openapis.openapi.models.operations.CodePushDeploymentsDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentsDeleteRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentsDeleteResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentsDeleteResponse() {{
            codePushDeploymentsDeleteDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsDeleteDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsDeleteDefaultApplicationJSON.class);
                res.codePushDeploymentsDeleteDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Gets a CodePush Deployment for the given app
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentsGetResponse codePushDeploymentsGet(org.openapis.openapi.models.operations.CodePushDeploymentsGetRequest request, org.openapis.openapi.models.operations.CodePushDeploymentsGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentsGetRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentsGetResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentsGetResponse() {{
            codePushDeploymentsGet200ApplicationJSONObject = null;
            codePushDeploymentsGetDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsGet200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsGet200ApplicationJSON.class);
                res.codePushDeploymentsGet200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsGetDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsGetDefaultApplicationJSON.class);
                res.codePushDeploymentsGetDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Gets a list of CodePush deployments for the given app
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentsListResponse codePushDeploymentsList(org.openapis.openapi.models.operations.CodePushDeploymentsListRequest request, org.openapis.openapi.models.operations.CodePushDeploymentsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentsListRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentsListResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentsListResponse() {{
            codePushDeploymentsList200ApplicationJSONObjects = null;
            codePushDeploymentsListDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsList200ApplicationJSON[] out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsList200ApplicationJSON[].class);
                res.codePushDeploymentsList200ApplicationJSONObjects = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsListDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsListDefaultApplicationJSON.class);
                res.codePushDeploymentsListDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Promote one release (default latest one) from one deployment to another
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentsPromoteResponse codePushDeploymentsPromote(org.openapis.openapi.models.operations.CodePushDeploymentsPromoteRequest request, org.openapis.openapi.models.operations.CodePushDeploymentsPromoteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentsPromoteRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/promote_release/{promote_deployment_name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentsPromoteResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentsPromoteResponse() {{
            codePushDeploymentsPromote200ApplicationJSONObject = null;
            codePushDeploymentsPromoteDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsPromote200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsPromote200ApplicationJSON.class);
                res.codePushDeploymentsPromote200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsPromoteDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsPromoteDefaultApplicationJSON.class);
                res.codePushDeploymentsPromoteDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Modifies a CodePush Deployment for the given app
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CodePushDeploymentsUpdateResponse codePushDeploymentsUpdate(org.openapis.openapi.models.operations.CodePushDeploymentsUpdateRequest request, org.openapis.openapi.models.operations.CodePushDeploymentsUpdateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CodePushDeploymentsUpdateRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CodePushDeploymentsUpdateResponse res = new org.openapis.openapi.models.operations.CodePushDeploymentsUpdateResponse() {{
            codePushDeploymentsUpdateDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CodePushDeploymentsUpdateDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CodePushDeploymentsUpdateDefaultApplicationJSON.class);
                res.codePushDeploymentsUpdateDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Modifies a CodePush release metadata under the given Deployment
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeploymentReleasesUpdateResponse deploymentReleasesUpdate(org.openapis.openapi.models.operations.DeploymentReleasesUpdateRequest request, org.openapis.openapi.models.operations.DeploymentReleasesUpdateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeploymentReleasesUpdateRequest.class, baseUrl, "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases/{release_label}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeploymentReleasesUpdateResponse res = new org.openapis.openapi.models.operations.DeploymentReleasesUpdateResponse() {{
            deploymentReleasesUpdate200ApplicationJSONObject = null;
            deploymentReleasesUpdateDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DeploymentReleasesUpdate200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DeploymentReleasesUpdate200ApplicationJSON.class);
                res.deploymentReleasesUpdate200ApplicationJSONObject = out;
            }
        }
        else if (httpRes.statusCode() == 204) {
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.DeploymentReleasesUpdateDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.DeploymentReleasesUpdateDefaultApplicationJSON.class);
                res.deploymentReleasesUpdateDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Check for updates
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheckResponse legacyCodePushAcquisitionUpdateCheck(org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheckRequest request, org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheckSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/legacy/updateCheck");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheckRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheckResponse res = new org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheckResponse() {{
            legacyCodePushAcquisitionUpdateCheck200ApplicationJSONObject = null;
            legacyCodePushAcquisitionUpdateCheckDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheck200ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheck200ApplicationJSON.class);
                res.legacyCodePushAcquisitionUpdateCheck200ApplicationJSONObject = out;
            }
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheckDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateCheckDefaultApplicationJSON.class);
                res.legacyCodePushAcquisitionUpdateCheckDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Report download of specified release
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateDownloadStatusResponse legacyCodePushAcquisitionUpdateDownloadStatus(org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateDownloadStatusRequestBody request, org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateDownloadStatusSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/legacy/reportStatus/download");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateDownloadStatusResponse res = new org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateDownloadStatusResponse() {{
            legacyCodePushAcquisitionUpdateDownloadStatusDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateDownloadStatusDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateDownloadStatusDefaultApplicationJSON.class);
                res.legacyCodePushAcquisitionUpdateDownloadStatusDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * Report deploy of specified release
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateInstallsStatusResponse legacyCodePushAcquisitionUpdateInstallsStatus(org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateInstallsStatusRequestBody request, org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateInstallsStatusSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/v0.1/legacy/reportStatus/deploy");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateInstallsStatusResponse res = new org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateInstallsStatusResponse() {{
            legacyCodePushAcquisitionUpdateInstallsStatusDefaultApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
        }
        else {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateInstallsStatusDefaultApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.LegacyCodePushAcquisitionUpdateInstallsStatusDefaultApplicationJSON.class);
                res.legacyCodePushAcquisitionUpdateInstallsStatusDefaultApplicationJSONObject = out;
            }
        }

        return res;
    }
}