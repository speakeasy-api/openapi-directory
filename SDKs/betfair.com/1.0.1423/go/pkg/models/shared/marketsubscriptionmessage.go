// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type MarketSubscriptionMessage struct {
	// Token value delta (received in MarketChangeMessage) that should be passed to resume a subscription
	Clk *string `json:"clk,omitempty"`
	// Conflate Milliseconds - the conflation rate (looped back on initial image after validation: bounds are 0 to 120000)
	ConflateMs *int64 `json:"conflateMs,omitempty"`
	// Heartbeat Milliseconds - the heartbeat rate (looped back on initial image after validation: bounds are 500 to 5000)
	HeartbeatMs *int64 `json:"heartbeatMs,omitempty"`
	// Client generated unique id to link request with response (like json rpc)
	ID *int `json:"id,omitempty"`
	// Token value (received in initial MarketChangeMessage) that should be passed to resume a subscription
	InitialClk       *string           `json:"initialClk,omitempty"`
	MarketDataFilter *MarketDataFilter `json:"marketDataFilter,omitempty"`
	MarketFilter     *MarketFilter     `json:"marketFilter,omitempty"`
	// The operation type
	Op *string `json:"op,omitempty"`
	// Segmentation Enabled - allow the server to send large sets of data in segments, instead of a single block
	SegmentationEnabled *bool `json:"segmentationEnabled,omitempty"`
}
