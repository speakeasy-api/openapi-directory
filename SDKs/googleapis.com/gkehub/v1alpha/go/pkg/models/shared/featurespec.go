// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FeatureSpecProvisionGoogleCaEnum - Immutable. Specifies CA configuration.
type FeatureSpecProvisionGoogleCaEnum string

const (
	FeatureSpecProvisionGoogleCaEnumGoogleCaProvisioningUnspecified FeatureSpecProvisionGoogleCaEnum = "GOOGLE_CA_PROVISIONING_UNSPECIFIED"
	FeatureSpecProvisionGoogleCaEnumDisabled                        FeatureSpecProvisionGoogleCaEnum = "DISABLED"
	FeatureSpecProvisionGoogleCaEnumEnabled                         FeatureSpecProvisionGoogleCaEnum = "ENABLED"
)

func (e *FeatureSpecProvisionGoogleCaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GOOGLE_CA_PROVISIONING_UNSPECIFIED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ENABLED":
		*e = FeatureSpecProvisionGoogleCaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FeatureSpecProvisionGoogleCaEnum: %s", s)
	}
}

// FeatureSpec - **Workload Certificate**: The Hub-wide input for the WorkloadCertificate feature.
type FeatureSpec struct {
	// **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
	DefaultConfig *MembershipSpec `json:"defaultConfig,omitempty"`
	// Immutable. Specifies CA configuration.
	ProvisionGoogleCa *FeatureSpecProvisionGoogleCaEnum `json:"provisionGoogleCa,omitempty"`
}
