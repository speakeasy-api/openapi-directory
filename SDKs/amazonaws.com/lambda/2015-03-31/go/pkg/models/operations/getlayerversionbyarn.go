// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetLayerVersionByArnFindEnum
type GetLayerVersionByArnFindEnum string

const (
	GetLayerVersionByArnFindEnumLayerVersion GetLayerVersionByArnFindEnum = "LayerVersion"
)

func (e GetLayerVersionByArnFindEnum) ToPointer() *GetLayerVersionByArnFindEnum {
	return &e
}

func (e *GetLayerVersionByArnFindEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LayerVersion":
		*e = GetLayerVersionByArnFindEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLayerVersionByArnFindEnum: %v", v)
	}
}

type GetLayerVersionByArnRequest struct {
	// The ARN of the layer version.
	Arn               string                       `queryParam:"style=form,explode=true,name=Arn"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	Find              GetLayerVersionByArnFindEnum `queryParam:"style=form,explode=true,name=find"`
}

type GetLayerVersionByArnResponse struct {
	ContentType string
	// Success
	GetLayerVersionResponse *shared.GetLayerVersionResponse
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
