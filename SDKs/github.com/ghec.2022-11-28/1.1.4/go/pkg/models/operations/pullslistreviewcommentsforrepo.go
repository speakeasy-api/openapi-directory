// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// PullsListReviewCommentsForRepoDirectionEnum - The direction to sort results. Ignored without `sort` parameter.
type PullsListReviewCommentsForRepoDirectionEnum string

const (
	PullsListReviewCommentsForRepoDirectionEnumAsc  PullsListReviewCommentsForRepoDirectionEnum = "asc"
	PullsListReviewCommentsForRepoDirectionEnumDesc PullsListReviewCommentsForRepoDirectionEnum = "desc"
)

func (e PullsListReviewCommentsForRepoDirectionEnum) ToPointer() *PullsListReviewCommentsForRepoDirectionEnum {
	return &e
}

func (e *PullsListReviewCommentsForRepoDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = PullsListReviewCommentsForRepoDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PullsListReviewCommentsForRepoDirectionEnum: %v", v)
	}
}

// PullsListReviewCommentsForRepoSortEnum
type PullsListReviewCommentsForRepoSortEnum string

const (
	PullsListReviewCommentsForRepoSortEnumCreated   PullsListReviewCommentsForRepoSortEnum = "created"
	PullsListReviewCommentsForRepoSortEnumUpdated   PullsListReviewCommentsForRepoSortEnum = "updated"
	PullsListReviewCommentsForRepoSortEnumCreatedAt PullsListReviewCommentsForRepoSortEnum = "created_at"
)

func (e PullsListReviewCommentsForRepoSortEnum) ToPointer() *PullsListReviewCommentsForRepoSortEnum {
	return &e
}

func (e *PullsListReviewCommentsForRepoSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "updated":
		fallthrough
	case "created_at":
		*e = PullsListReviewCommentsForRepoSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PullsListReviewCommentsForRepoSortEnum: %v", v)
	}
}

type PullsListReviewCommentsForRepoRequest struct {
	// The direction to sort results. Ignored without `sort` parameter.
	Direction *PullsListReviewCommentsForRepoDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
	// Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
	Since *time.Time                              `queryParam:"style=form,explode=true,name=since"`
	Sort  *PullsListReviewCommentsForRepoSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type PullsListReviewCommentsForRepoResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	PullRequestReviewComments []shared.PullRequestReviewComment
}
