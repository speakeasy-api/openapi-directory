/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The user_email must use a professional domain, free domains are not supported.
 */
export class PostPostReviewRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "rating" })
  rating: number;

  @SpeakeasyMetadata()
  @Expose({ name: "user_email" })
  userEmail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName?: string;
}

/**
 * The user's star rating, must be a single integer from [1, 2, 3, 4, 5]
 */
export enum PostPostReviewRatingEnum {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
}

export class PostPostReviewRequest extends SpeakeasyBase {
  /**
   * The request body requires the user_email and rating. The parameter use_name is optional.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PostPostReviewRequestBody;

  /**
   * The user's star rating, must be a single integer from [1, 2, 3, 4, 5]
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=rating",
  })
  rating: PostPostReviewRatingEnum;

  /**
   * User's email to which the review verification will be sent.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=user_email",
  })
  userEmail: string;

  /**
   * The user's name, defaults to empty string "".  Thus, if this is omitted, the email to the user will not use the user's name.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=user_name",
  })
  userName?: string;
}

/**
 * The 403 response can have many detailed response messages related to the user's email address validation
 */
export class PostPostReview403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;
}

/**
 * This can appear because the authorization header is missing or malformed, or becuse the auth email and key pair is not authorized.
 */
export class PostPostReview401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;
}

/**
 * A status code of 400 is returned when a required parameter is mising, such as 'rating' or 'user_email'.
 */
export class PostPostReview400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;
}

/**
 * A response code of 200 means the request was succesful, and the user has been sent an email confirming their review.
 */
export class PostPostReview200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;
}

export class PostPostReviewResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A response code of 200 means the request was succesful, and the user has been sent an email confirming their review.
   */
  @SpeakeasyMetadata()
  postPostReview200ApplicationJSONObject?: PostPostReview200ApplicationJSON;

  /**
   * A status code of 400 is returned when a required parameter is mising, such as 'rating' or 'user_email'.
   */
  @SpeakeasyMetadata()
  postPostReview400ApplicationJSONObject?: PostPostReview400ApplicationJSON;

  /**
   * This can appear because the authorization header is missing or malformed, or because the auth email and key pair is not authorized.
   */
  @SpeakeasyMetadata()
  postPostReview401ApplicationJSONObject?: PostPostReview401ApplicationJSON;

  /**
   * The 403 response can have many detailed response messages related to the user's email address validation
   */
  @SpeakeasyMetadata()
  postPostReview403ApplicationJSONObject?: PostPostReview403ApplicationJSON;
}
