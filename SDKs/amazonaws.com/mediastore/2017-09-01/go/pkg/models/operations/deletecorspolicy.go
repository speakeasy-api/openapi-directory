// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteCorsPolicyXAmzTargetEnum
type DeleteCorsPolicyXAmzTargetEnum string

const (
	DeleteCorsPolicyXAmzTargetEnumMediaStore20170901DeleteCorsPolicy DeleteCorsPolicyXAmzTargetEnum = "MediaStore_20170901.DeleteCorsPolicy"
)

func (e DeleteCorsPolicyXAmzTargetEnum) ToPointer() *DeleteCorsPolicyXAmzTargetEnum {
	return &e
}

func (e *DeleteCorsPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MediaStore_20170901.DeleteCorsPolicy":
		*e = DeleteCorsPolicyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteCorsPolicyXAmzTargetEnum: %v", v)
	}
}

type DeleteCorsPolicyRequest struct {
	DeleteCorsPolicyInput shared.DeleteCorsPolicyInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DeleteCorsPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteCorsPolicyResponse struct {
	// ContainerInUseException
	ContainerInUseException interface{}
	// ContainerNotFoundException
	ContainerNotFoundException interface{}
	ContentType                string
	// CorsPolicyNotFoundException
	CorsPolicyNotFoundException interface{}
	// Success
	DeleteCorsPolicyOutput map[string]interface{}
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
