/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EncryptionConfig } from "./encryptionconfig";
import {
  HiveMetastoreConfig,
  HiveMetastoreConfigInput,
} from "./hivemetastoreconfig";
import { MaintenanceWindow } from "./maintenancewindow";
import { MetadataManagementActivity } from "./metadatamanagementactivity";
import { NetworkConfig, NetworkConfigInput } from "./networkconfig";
import { ScalingConfig } from "./scalingconfig";
import { TelemetryConfig } from "./telemetryconfig";
import { Expose, Type } from "class-transformer";

/**
 * Immutable. The database type that the Metastore service stores its data.
 */
export enum ServiceDatabaseTypeEnum {
  DatabaseTypeUnspecified = "DATABASE_TYPE_UNSPECIFIED",
  Mysql = "MYSQL",
  Spanner = "SPANNER",
}

/**
 * Immutable. The release channel of the service. If unspecified, defaults to STABLE.
 */
export enum ServiceReleaseChannelEnum {
  ReleaseChannelUnspecified = "RELEASE_CHANNEL_UNSPECIFIED",
  Canary = "CANARY",
  Stable = "STABLE",
}

/**
 * Output only. The current state of the metastore service.
 */
export enum ServiceStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Active = "ACTIVE",
  Suspending = "SUSPENDING",
  Suspended = "SUSPENDED",
  Updating = "UPDATING",
  Deleting = "DELETING",
  Error = "ERROR",
}

/**
 * The tier of the service.
 */
export enum ServiceTierEnum {
  TierUnspecified = "TIER_UNSPECIFIED",
  Developer = "DEVELOPER",
  Enterprise = "ENTERPRISE",
}

/**
 * A managed metastore service that serves metadata queries.
 */
export class Service extends SpeakeasyBase {
  /**
   * Output only. A Cloud Storage URI (starting with gs://) that specifies where artifacts related to the metastore service are stored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "artifactGcsUri" })
  artifactGcsUri?: string;

  /**
   * Output only. The time when the metastore service was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Immutable. The database type that the Metastore service stores its data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "databaseType" })
  databaseType?: ServiceDatabaseTypeEnum;

  /**
   * Encryption settings for the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionConfig" })
  @Type(() => EncryptionConfig)
  encryptionConfig?: EncryptionConfig;

  /**
   * Output only. The URI of the endpoint used to access the metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endpointUri" })
  endpointUri?: string;

  /**
   * Specifies configuration information specific to running Hive metastore software as the metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hiveMetastoreConfig" })
  @Type(() => HiveMetastoreConfig)
  hiveMetastoreConfig?: HiveMetastoreConfig;

  /**
   * User-defined labels for the metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maintenanceWindow" })
  @Type(() => MaintenanceWindow)
  maintenanceWindow?: MaintenanceWindow;

  /**
   * The metadata management activities of the metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadataManagementActivity" })
  @Type(() => MetadataManagementActivity)
  metadataManagementActivity?: MetadataManagementActivity;

  /**
   * Immutable. The relative resource name of the metastore service, in the following format:projects/{project_number}/locations/{location_id}/services/{service_id}.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Immutable. The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:projects/{project_number}/global/networks/{network_id}.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * Network configuration for the Dataproc Metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "networkConfig" })
  @Type(() => NetworkConfig)
  networkConfig?: NetworkConfig;

  /**
   * The TCP port at which the metastore service is reached. Default: 9083.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: number;

  /**
   * Immutable. The release channel of the service. If unspecified, defaults to STABLE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseChannel" })
  releaseChannel?: ServiceReleaseChannelEnum;

  /**
   * Represents the scaling configuration of a metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scalingConfig" })
  @Type(() => ScalingConfig)
  scalingConfig?: ScalingConfig;

  /**
   * Output only. The current state of the metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ServiceStateEnum;

  /**
   * Output only. Additional information about the current state of the metastore service, if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateMessage" })
  stateMessage?: string;

  /**
   * Telemetry Configuration for the Dataproc Metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "telemetryConfig" })
  @Type(() => TelemetryConfig)
  telemetryConfig?: TelemetryConfig;

  /**
   * The tier of the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tier" })
  tier?: ServiceTierEnum;

  /**
   * Output only. The globally unique resource identifier of the metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  /**
   * Output only. The time when the metastore service was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * A managed metastore service that serves metadata queries.
 */
export class ServiceInput extends SpeakeasyBase {
  /**
   * Immutable. The database type that the Metastore service stores its data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "databaseType" })
  databaseType?: ServiceDatabaseTypeEnum;

  /**
   * Encryption settings for the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionConfig" })
  @Type(() => EncryptionConfig)
  encryptionConfig?: EncryptionConfig;

  /**
   * Specifies configuration information specific to running Hive metastore software as the metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hiveMetastoreConfig" })
  @Type(() => HiveMetastoreConfigInput)
  hiveMetastoreConfig?: HiveMetastoreConfigInput;

  /**
   * User-defined labels for the metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Maintenance window. This specifies when Dataproc Metastore may perform system maintenance operation to the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maintenanceWindow" })
  @Type(() => MaintenanceWindow)
  maintenanceWindow?: MaintenanceWindow;

  /**
   * Immutable. The relative resource name of the metastore service, in the following format:projects/{project_number}/locations/{location_id}/services/{service_id}.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Immutable. The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:projects/{project_number}/global/networks/{network_id}.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * Network configuration for the Dataproc Metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "networkConfig" })
  @Type(() => NetworkConfigInput)
  networkConfig?: NetworkConfigInput;

  /**
   * The TCP port at which the metastore service is reached. Default: 9083.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: number;

  /**
   * Immutable. The release channel of the service. If unspecified, defaults to STABLE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseChannel" })
  releaseChannel?: ServiceReleaseChannelEnum;

  /**
   * Represents the scaling configuration of a metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scalingConfig" })
  @Type(() => ScalingConfig)
  scalingConfig?: ScalingConfig;

  /**
   * Telemetry Configuration for the Dataproc Metastore service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "telemetryConfig" })
  @Type(() => TelemetryConfig)
  telemetryConfig?: TelemetryConfig;

  /**
   * The tier of the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tier" })
  tier?: ServiceTierEnum;
}
