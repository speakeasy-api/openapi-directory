// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ClusterStateEnum string

const (
	ClusterStateEnumAwaitingQuorum ClusterStateEnum = "AwaitingQuorum"
	ClusterStateEnumPending        ClusterStateEnum = "Pending"
	ClusterStateEnumInUse          ClusterStateEnum = "InUse"
	ClusterStateEnumComplete       ClusterStateEnum = "Complete"
	ClusterStateEnumCancelled      ClusterStateEnum = "Cancelled"
)

func (e *ClusterStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AwaitingQuorum":
		fallthrough
	case "Pending":
		fallthrough
	case "InUse":
		fallthrough
	case "Complete":
		fallthrough
	case "Cancelled":
		*e = ClusterStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterStateEnum: %s", s)
	}
}
