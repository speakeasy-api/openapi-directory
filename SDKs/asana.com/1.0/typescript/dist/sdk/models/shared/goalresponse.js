"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoalResponse = exports.GoalResponseWorkspace = exports.GoalResponseTimePeriod = exports.GoalResponseTimePeriodPeriodEnum = exports.GoalResponseTeam = exports.GoalResponseOwner = exports.GoalResponseMetric = exports.GoalResponseMetricUnitEnum = exports.GoalResponseMetricResourceSubtypeEnum = exports.GoalResponseMetricProgressSourceEnum = exports.GoalResponseCurrentStatusUpdate = exports.GoalResponseCurrentStatusUpdateResourceSubtypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var like_1 = require("./like");
var usercompact_1 = require("./usercompact");
var class_transformer_1 = require("class-transformer");
/**
 * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
 *
 * @remarks
 * The `resource_subtype`s for `status` objects represent the type of their parent.
 */
var GoalResponseCurrentStatusUpdateResourceSubtypeEnum;
(function (GoalResponseCurrentStatusUpdateResourceSubtypeEnum) {
    GoalResponseCurrentStatusUpdateResourceSubtypeEnum["ProjectStatusUpdate"] = "project_status_update";
    GoalResponseCurrentStatusUpdateResourceSubtypeEnum["PortfolioStatusUpdate"] = "portfolio_status_update";
    GoalResponseCurrentStatusUpdateResourceSubtypeEnum["GoalStatusUpdate"] = "goal_status_update";
})(GoalResponseCurrentStatusUpdateResourceSubtypeEnum = exports.GoalResponseCurrentStatusUpdateResourceSubtypeEnum || (exports.GoalResponseCurrentStatusUpdateResourceSubtypeEnum = {}));
/**
 * A *status update* is an update on the progress of a particular project, portfolio, or goal, and is sent out to all of its parent's followers when created. These updates include both text describing the update and a `status_type` intended to represent the overall state of the project.
 */
var GoalResponseCurrentStatusUpdate = /** @class */ (function (_super) {
    __extends(GoalResponseCurrentStatusUpdate, _super);
    function GoalResponseCurrentStatusUpdate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], GoalResponseCurrentStatusUpdate.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_subtype" }),
        __metadata("design:type", String)
    ], GoalResponseCurrentStatusUpdate.prototype, "resourceSubtype", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], GoalResponseCurrentStatusUpdate.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], GoalResponseCurrentStatusUpdate.prototype, "title", void 0);
    return GoalResponseCurrentStatusUpdate;
}(utils_1.SpeakeasyBase));
exports.GoalResponseCurrentStatusUpdate = GoalResponseCurrentStatusUpdate;
/**
 * This field defines how the progress value of a goal metric is being calculated. A goal's progress can be provided manually by the user, calculated automatically from contributing subgoals or projects, or managed by an integration with an external data source, such as Salesforce.
 */
var GoalResponseMetricProgressSourceEnum;
(function (GoalResponseMetricProgressSourceEnum) {
    GoalResponseMetricProgressSourceEnum["Manual"] = "manual";
    GoalResponseMetricProgressSourceEnum["SubgoalProgress"] = "subgoal_progress";
    GoalResponseMetricProgressSourceEnum["ProjectTaskCompletion"] = "project_task_completion";
    GoalResponseMetricProgressSourceEnum["ProjectMilestoneCompletion"] = "project_milestone_completion";
    GoalResponseMetricProgressSourceEnum["External"] = "external";
})(GoalResponseMetricProgressSourceEnum = exports.GoalResponseMetricProgressSourceEnum || (exports.GoalResponseMetricProgressSourceEnum = {}));
/**
 * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
 */
var GoalResponseMetricResourceSubtypeEnum;
(function (GoalResponseMetricResourceSubtypeEnum) {
    GoalResponseMetricResourceSubtypeEnum["Number"] = "number";
})(GoalResponseMetricResourceSubtypeEnum = exports.GoalResponseMetricResourceSubtypeEnum || (exports.GoalResponseMetricResourceSubtypeEnum = {}));
/**
 * A supported unit of measure for the goal metric, or none.
 */
var GoalResponseMetricUnitEnum;
(function (GoalResponseMetricUnitEnum) {
    GoalResponseMetricUnitEnum["None"] = "none";
    GoalResponseMetricUnitEnum["Currency"] = "currency";
    GoalResponseMetricUnitEnum["Percentage"] = "percentage";
})(GoalResponseMetricUnitEnum = exports.GoalResponseMetricUnitEnum || (exports.GoalResponseMetricUnitEnum = {}));
/**
 * A generic Asana Resource, containing a globally unique identifier.
 */
var GoalResponseMetric = /** @class */ (function (_super) {
    __extends(GoalResponseMetric, _super);
    function GoalResponseMetric() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "can_manage" }),
        __metadata("design:type", Boolean)
    ], GoalResponseMetric.prototype, "canManage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency_code" }),
        __metadata("design:type", String)
    ], GoalResponseMetric.prototype, "currencyCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "current_display_value" }),
        __metadata("design:type", String)
    ], GoalResponseMetric.prototype, "currentDisplayValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "current_number_value" }),
        __metadata("design:type", Number)
    ], GoalResponseMetric.prototype, "currentNumberValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], GoalResponseMetric.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "initial_number_value" }),
        __metadata("design:type", Number)
    ], GoalResponseMetric.prototype, "initialNumberValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "precision" }),
        __metadata("design:type", Number)
    ], GoalResponseMetric.prototype, "precision", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "progress_source" }),
        __metadata("design:type", String)
    ], GoalResponseMetric.prototype, "progressSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_subtype" }),
        __metadata("design:type", String)
    ], GoalResponseMetric.prototype, "resourceSubtype", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], GoalResponseMetric.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "target_number_value" }),
        __metadata("design:type", Number)
    ], GoalResponseMetric.prototype, "targetNumberValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unit" }),
        __metadata("design:type", String)
    ], GoalResponseMetric.prototype, "unit", void 0);
    return GoalResponseMetric;
}(utils_1.SpeakeasyBase));
exports.GoalResponseMetric = GoalResponseMetric;
/**
 * A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.
 */
var GoalResponseOwner = /** @class */ (function (_super) {
    __extends(GoalResponseOwner, _super);
    function GoalResponseOwner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], GoalResponseOwner.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GoalResponseOwner.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], GoalResponseOwner.prototype, "resourceType", void 0);
    return GoalResponseOwner;
}(utils_1.SpeakeasyBase));
exports.GoalResponseOwner = GoalResponseOwner;
/**
 * A *team* is used to group related projects and people together within an organization. Each project in an organization is associated with a team.
 */
var GoalResponseTeam = /** @class */ (function (_super) {
    __extends(GoalResponseTeam, _super);
    function GoalResponseTeam() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], GoalResponseTeam.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GoalResponseTeam.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], GoalResponseTeam.prototype, "resourceType", void 0);
    return GoalResponseTeam;
}(utils_1.SpeakeasyBase));
exports.GoalResponseTeam = GoalResponseTeam;
/**
 * The cadence and index of the time period. The value is one of: `FY`, `H1`, `H2`, `Q1`, `Q2`, `Q3`, or `Q4`.
 */
var GoalResponseTimePeriodPeriodEnum;
(function (GoalResponseTimePeriodPeriodEnum) {
    GoalResponseTimePeriodPeriodEnum["Fy"] = "FY";
    GoalResponseTimePeriodPeriodEnum["H1"] = "H1";
    GoalResponseTimePeriodPeriodEnum["H2"] = "H2";
    GoalResponseTimePeriodPeriodEnum["Q1"] = "Q1";
    GoalResponseTimePeriodPeriodEnum["Q2"] = "Q2";
    GoalResponseTimePeriodPeriodEnum["Q3"] = "Q3";
    GoalResponseTimePeriodPeriodEnum["Q4"] = "Q4";
})(GoalResponseTimePeriodPeriodEnum = exports.GoalResponseTimePeriodPeriodEnum || (exports.GoalResponseTimePeriodPeriodEnum = {}));
/**
 * A generic Asana Resource, containing a globally unique identifier.
 */
var GoalResponseTimePeriod = /** @class */ (function (_super) {
    __extends(GoalResponseTimePeriod, _super);
    function GoalResponseTimePeriod() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "display_name" }),
        __metadata("design:type", String)
    ], GoalResponseTimePeriod.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end_on" }),
        __metadata("design:type", String)
    ], GoalResponseTimePeriod.prototype, "endOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], GoalResponseTimePeriod.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "period" }),
        __metadata("design:type", String)
    ], GoalResponseTimePeriod.prototype, "period", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], GoalResponseTimePeriod.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_on" }),
        __metadata("design:type", String)
    ], GoalResponseTimePeriod.prototype, "startOn", void 0);
    return GoalResponseTimePeriod;
}(utils_1.SpeakeasyBase));
exports.GoalResponseTimePeriod = GoalResponseTimePeriod;
/**
 * A *workspace* is the highest-level organizational unit in Asana. All projects and tasks have an associated workspace.
 */
var GoalResponseWorkspace = /** @class */ (function (_super) {
    __extends(GoalResponseWorkspace, _super);
    function GoalResponseWorkspace() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], GoalResponseWorkspace.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GoalResponseWorkspace.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], GoalResponseWorkspace.prototype, "resourceType", void 0);
    return GoalResponseWorkspace;
}(utils_1.SpeakeasyBase));
exports.GoalResponseWorkspace = GoalResponseWorkspace;
/**
 * A generic Asana Resource, containing a globally unique identifier.
 */
var GoalResponse = /** @class */ (function (_super) {
    __extends(GoalResponse, _super);
    function GoalResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "current_status_update" }),
        (0, class_transformer_1.Type)(function () { return GoalResponseCurrentStatusUpdate; }),
        __metadata("design:type", GoalResponseCurrentStatusUpdate)
    ], GoalResponse.prototype, "currentStatusUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "due_on" }),
        __metadata("design:type", String)
    ], GoalResponse.prototype, "dueOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: usercompact_1.UserCompact }),
        (0, class_transformer_1.Expose)({ name: "followers" }),
        (0, class_transformer_1.Type)(function () { return usercompact_1.UserCompact; }),
        __metadata("design:type", Array)
    ], GoalResponse.prototype, "followers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gid" }),
        __metadata("design:type", String)
    ], GoalResponse.prototype, "gid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "html_notes" }),
        __metadata("design:type", String)
    ], GoalResponse.prototype, "htmlNotes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_workspace_level" }),
        __metadata("design:type", Boolean)
    ], GoalResponse.prototype, "isWorkspaceLevel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "liked" }),
        __metadata("design:type", Boolean)
    ], GoalResponse.prototype, "liked", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: like_1.Like }),
        (0, class_transformer_1.Expose)({ name: "likes" }),
        (0, class_transformer_1.Type)(function () { return like_1.Like; }),
        __metadata("design:type", Array)
    ], GoalResponse.prototype, "likes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metric" }),
        (0, class_transformer_1.Type)(function () { return GoalResponseMetric; }),
        __metadata("design:type", GoalResponseMetric)
    ], GoalResponse.prototype, "metric", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GoalResponse.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], GoalResponse.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "num_likes" }),
        __metadata("design:type", Number)
    ], GoalResponse.prototype, "numLikes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "owner" }),
        (0, class_transformer_1.Type)(function () { return GoalResponseOwner; }),
        __metadata("design:type", GoalResponseOwner)
    ], GoalResponse.prototype, "owner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resource_type" }),
        __metadata("design:type", String)
    ], GoalResponse.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_on" }),
        __metadata("design:type", String)
    ], GoalResponse.prototype, "startOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GoalResponse.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "team" }),
        (0, class_transformer_1.Type)(function () { return GoalResponseTeam; }),
        __metadata("design:type", GoalResponseTeam)
    ], GoalResponse.prototype, "team", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "time_period" }),
        (0, class_transformer_1.Type)(function () { return GoalResponseTimePeriod; }),
        __metadata("design:type", GoalResponseTimePeriod)
    ], GoalResponse.prototype, "timePeriod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workspace" }),
        (0, class_transformer_1.Type)(function () { return GoalResponseWorkspace; }),
        __metadata("design:type", GoalResponseWorkspace)
    ], GoalResponse.prototype, "workspace", void 0);
    return GoalResponse;
}(utils_1.SpeakeasyBase));
exports.GoalResponse = GoalResponse;
