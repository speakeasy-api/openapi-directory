// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum - Memory encryption algorithm.
type GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum string

const (
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnumMemoryEncryptionAlgorithmUnspecified GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum = "MEMORY_ENCRYPTION_ALGORITHM_UNSPECIFIED"
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnumMemoryEncryptionAlgorithmUnknown     GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum = "MEMORY_ENCRYPTION_ALGORITHM_UNKNOWN"
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnumMemoryEncryptionAlgorithmAesXts128   GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum = "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_128"
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnumMemoryEncryptionAlgorithmAesXts256   GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum = "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_256"
)

func (e *GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MEMORY_ENCRYPTION_ALGORITHM_UNSPECIFIED":
		fallthrough
	case "MEMORY_ENCRYPTION_ALGORITHM_UNKNOWN":
		fallthrough
	case "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_128":
		fallthrough
	case "MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_256":
		*e = GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum: %s", s)
	}
}

// GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum - The state of memory encryption on the device.
type GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum string

const (
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnumMemoryEncryptionStateUnspecified GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum = "MEMORY_ENCRYPTION_STATE_UNSPECIFIED"
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnumMemoryEncryptionStateUnknown     GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum = "MEMORY_ENCRYPTION_STATE_UNKNOWN"
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnumMemoryEncryptionStateDisabled    GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum = "MEMORY_ENCRYPTION_STATE_DISABLED"
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnumMemoryEncryptionStateTme         GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum = "MEMORY_ENCRYPTION_STATE_TME"
	GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnumMemoryEncryptionStateMktme       GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum = "MEMORY_ENCRYPTION_STATE_MKTME"
)

func (e *GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MEMORY_ENCRYPTION_STATE_UNSPECIFIED":
		fallthrough
	case "MEMORY_ENCRYPTION_STATE_UNKNOWN":
		fallthrough
	case "MEMORY_ENCRYPTION_STATE_DISABLED":
		fallthrough
	case "MEMORY_ENCRYPTION_STATE_TME":
		fallthrough
	case "MEMORY_ENCRYPTION_STATE_MKTME":
		*e = GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum: %s", s)
	}
}

// GoogleChromeManagementV1TotalMemoryEncryptionInfo - Memory encryption information of a device. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceMemoryInfo](https://chromeenterprise.google/policies/#ReportDeviceMemoryInfo) * Data Collection Frequency: At device startup * Default Data Reporting Frequency: At device startup - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: Yes * Reported for affiliated users only: N/A
type GoogleChromeManagementV1TotalMemoryEncryptionInfo struct {
	// Memory encryption algorithm.
	EncryptionAlgorithm *GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionAlgorithmEnum `json:"encryptionAlgorithm,omitempty"`
	// The state of memory encryption on the device.
	EncryptionState *GoogleChromeManagementV1TotalMemoryEncryptionInfoEncryptionStateEnum `json:"encryptionState,omitempty"`
	// The length of the encryption keys.
	KeyLength *string `json:"keyLength,omitempty"`
	// The maximum number of keys that can be used for encryption.
	MaxKeys *string `json:"maxKeys,omitempty"`
}
