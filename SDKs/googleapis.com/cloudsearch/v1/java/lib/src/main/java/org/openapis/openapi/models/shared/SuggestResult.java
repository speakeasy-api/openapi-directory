/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SuggestResult - One suggestion result.
 */
public class SuggestResult {
    /**
     * This field contains information about the person being suggested.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("peopleSuggestion")
    public PeopleSuggestion peopleSuggestion;

    public SuggestResult withPeopleSuggestion(PeopleSuggestion peopleSuggestion) {
        this.peopleSuggestion = peopleSuggestion;
        return this;
    }
    
    /**
     * This field does not contain anything as of now and is just used as an indicator that the suggest result was a phrase completion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("querySuggestion")
    public java.util.Map<String, Object> querySuggestion;

    public SuggestResult withQuerySuggestion(java.util.Map<String, Object> querySuggestion) {
        this.querySuggestion = querySuggestion;
        return this;
    }
    
    /**
     * Defines sources for the suggest/search APIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public Source source;

    public SuggestResult withSource(Source source) {
        this.source = source;
        return this;
    }
    
    /**
     * The suggested query that will be used for search, when the user clicks on the suggestion
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedQuery")
    public String suggestedQuery;

    public SuggestResult withSuggestedQuery(String suggestedQuery) {
        this.suggestedQuery = suggestedQuery;
        return this;
    }
    
    public SuggestResult(){}
}
