"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateGiftCardRequest:
    
    caption: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caption') }})
    r"""The caption of the Giftcard."""  
    expiring_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiringDate') }})
    r"""It must be in the format `YYYY-MM-DDThh:mm:ss.fff`."""  
    profile_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profileId') }})
    r"""The client's ID."""  
    relation_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relationName') }})
    r"""Represents the relationship between the client and the store."""  
    multiple_credits: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multipleCredits'), 'exclude': lambda f: f is None }})
    r"""The Giftcard balance can be changed."""  
    multiple_redemptions: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multipleRedemptions'), 'exclude': lambda f: f is None }})
    r"""The Giftcard can be used to make new purchases until its value is completely used."""  
    restricted_to_owner: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restrictedToOwner'), 'exclude': lambda f: f is None }})
    r"""The Giftcard can only be used for a specified client's ID."""  
    