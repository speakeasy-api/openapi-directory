// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetContainerPolicyXAmzTargetEnum
type GetContainerPolicyXAmzTargetEnum string

const (
	GetContainerPolicyXAmzTargetEnumMediaStore20170901GetContainerPolicy GetContainerPolicyXAmzTargetEnum = "MediaStore_20170901.GetContainerPolicy"
)

func (e *GetContainerPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MediaStore_20170901.GetContainerPolicy":
		*e = GetContainerPolicyXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetContainerPolicyXAmzTargetEnum: %s", s)
	}
}

type GetContainerPolicyHeaders struct {
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetContainerPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetContainerPolicyRequest struct {
	Headers GetContainerPolicyHeaders
	Request shared.GetContainerPolicyInput `request:"mediaType=application/json"`
}

type GetContainerPolicyResponse struct {
	// ContainerInUseException
	ContainerInUseException interface{}
	// ContainerNotFoundException
	ContainerNotFoundException interface{}
	ContentType                string
	// Success
	GetContainerPolicyOutput *shared.GetContainerPolicyOutput
	// InternalServerError
	InternalServerError interface{}
	// PolicyNotFoundException
	PolicyNotFoundException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
