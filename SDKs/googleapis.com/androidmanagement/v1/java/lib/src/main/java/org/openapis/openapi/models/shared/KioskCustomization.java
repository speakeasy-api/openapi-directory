/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * KioskCustomization - Settings controlling the behavior of a device in kiosk mode. To enable kiosk mode, set kioskCustomLauncherEnabled to true or specify an app in the policy with installType KIOSK.
 */
public class KioskCustomization {
    /**
     * Specifies whether the Settings app is allowed in kiosk mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceSettings")
    public KioskCustomizationDeviceSettingsEnum deviceSettings;

    public KioskCustomization withDeviceSettings(KioskCustomizationDeviceSettingsEnum deviceSettings) {
        this.deviceSettings = deviceSettings;
        return this;
    }
    
    /**
     * Sets the behavior of a device in kiosk mode when a user presses and holds (long-presses) the Power button.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("powerButtonActions")
    public KioskCustomizationPowerButtonActionsEnum powerButtonActions;

    public KioskCustomization withPowerButtonActions(KioskCustomizationPowerButtonActionsEnum powerButtonActions) {
        this.powerButtonActions = powerButtonActions;
        return this;
    }
    
    /**
     * Specifies whether system info and notifications are disabled in kiosk mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusBar")
    public KioskCustomizationStatusBarEnum statusBar;

    public KioskCustomization withStatusBar(KioskCustomizationStatusBarEnum statusBar) {
        this.statusBar = statusBar;
        return this;
    }
    
    /**
     * Specifies whether system error dialogs for crashed or unresponsive apps are blocked in kiosk mode. When blocked, the system will force-stop the app as if the user chooses the "close app" option on the UI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemErrorWarnings")
    public KioskCustomizationSystemErrorWarningsEnum systemErrorWarnings;

    public KioskCustomization withSystemErrorWarnings(KioskCustomizationSystemErrorWarningsEnum systemErrorWarnings) {
        this.systemErrorWarnings = systemErrorWarnings;
        return this;
    }
    
    /**
     * Specifies which navigation features are enabled (e.g. Home, Overview buttons) in kiosk mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("systemNavigation")
    public KioskCustomizationSystemNavigationEnum systemNavigation;

    public KioskCustomization withSystemNavigation(KioskCustomizationSystemNavigationEnum systemNavigation) {
        this.systemNavigation = systemNavigation;
        return this;
    }
    
    public KioskCustomization(){}
}
