"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2DeidentifyDataSourceStats:
    r"""Summary of what was modified during a transformation."""
    
    transformation_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transformationCount'), 'exclude': lambda f: f is None }})
    r"""Number of successfully applied transformations."""  
    transformation_error_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transformationErrorCount'), 'exclude': lambda f: f is None }})
    r"""Number of errors encountered while trying to apply transformations."""  
    transformed_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transformedBytes'), 'exclude': lambda f: f is None }})
    r"""Total size in bytes that were transformed in some way."""  
    