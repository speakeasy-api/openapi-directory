"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class IncreasedFoodSafetyDiningAreasAdditionalSanitationExceptionEnum(str, Enum):
    r"""Dining areas additional sanitation exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class IncreasedFoodSafetyDisposableFlatwareExceptionEnum(str, Enum):
    r"""Disposable flatware exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class IncreasedFoodSafetyFoodPreparationAndServingAdditionalSafetyExceptionEnum(str, Enum):
    r"""Food preparation and serving additional safety exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class IncreasedFoodSafetyIndividualPackagedMealsExceptionEnum(str, Enum):
    r"""Individual packaged meals exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class IncreasedFoodSafetySingleUseFoodMenusExceptionEnum(str, Enum):
    r"""Single use food menus exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IncreasedFoodSafety:
    r"""Increased food safety measures implemented by the hotel during COVID-19."""
    
    dining_areas_additional_sanitation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diningAreasAdditionalSanitation'), 'exclude': lambda f: f is None }})
    r"""Additional sanitation in dining areas."""  
    dining_areas_additional_sanitation_exception: Optional[IncreasedFoodSafetyDiningAreasAdditionalSanitationExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diningAreasAdditionalSanitationException'), 'exclude': lambda f: f is None }})
    r"""Dining areas additional sanitation exception."""  
    disposable_flatware: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disposableFlatware'), 'exclude': lambda f: f is None }})
    r"""Disposable flatware."""  
    disposable_flatware_exception: Optional[IncreasedFoodSafetyDisposableFlatwareExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disposableFlatwareException'), 'exclude': lambda f: f is None }})
    r"""Disposable flatware exception."""  
    food_preparation_and_serving_additional_safety: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('foodPreparationAndServingAdditionalSafety'), 'exclude': lambda f: f is None }})
    r"""Additional safety measures during food prep and serving."""  
    food_preparation_and_serving_additional_safety_exception: Optional[IncreasedFoodSafetyFoodPreparationAndServingAdditionalSafetyExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('foodPreparationAndServingAdditionalSafetyException'), 'exclude': lambda f: f is None }})
    r"""Food preparation and serving additional safety exception."""  
    individual_packaged_meals: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('individualPackagedMeals'), 'exclude': lambda f: f is None }})
    r"""Individually-packaged meals."""  
    individual_packaged_meals_exception: Optional[IncreasedFoodSafetyIndividualPackagedMealsExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('individualPackagedMealsException'), 'exclude': lambda f: f is None }})
    r"""Individual packaged meals exception."""  
    single_use_food_menus: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('singleUseFoodMenus'), 'exclude': lambda f: f is None }})
    r"""Single-use menus."""  
    single_use_food_menus_exception: Optional[IncreasedFoodSafetySingleUseFoodMenusExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('singleUseFoodMenusException'), 'exclude': lambda f: f is None }})
    r"""Single use food menus exception."""  
    