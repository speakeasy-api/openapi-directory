// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DiskStateEnum string

const (
	DiskStateEnumPending   DiskStateEnum = "pending"
	DiskStateEnumError     DiskStateEnum = "error"
	DiskStateEnumAvailable DiskStateEnum = "available"
	DiskStateEnumInUse     DiskStateEnum = "in-use"
	DiskStateEnumUnknown   DiskStateEnum = "unknown"
)

func (e DiskStateEnum) ToPointer() *DiskStateEnum {
	return &e
}

func (e *DiskStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "error":
		fallthrough
	case "available":
		fallthrough
	case "in-use":
		fallthrough
	case "unknown":
		*e = DiskStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DiskStateEnum: %v", v)
	}
}
