// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type V3Run struct {
	// Name of destination of run
	DestinationName *string `json:"destination_name,omitempty"`
	// Direction of travel identifier
	DirectionID *int `json:"direction_id,omitempty"`
	// The number of remaining skipped/express stations for the run/service from a stop
	ExpressStopCount *int `json:"express_stop_count,omitempty"`
	// stop_id of final stop of run
	FinalStopID *int `json:"final_stop_id,omitempty"`
	// Geopath of the route
	Geopath []map[string]interface{} `json:"geopath,omitempty"`
	// Route identifier
	RouteID *int `json:"route_id,omitempty"`
	// Transport mode identifier
	RouteType *int `json:"route_type,omitempty"`
	// Numeric trip/service run identifier. Defaults to -1 when run identifier is Alphanumeric
	RunID *int `json:"run_id,omitempty"`
	// Alphanumeric trip/service run identifier
	RunRef *string `json:"run_ref,omitempty"`
	// Chronological sequence of the trip/service run on the route in direction. Order ascendingly by this field to get chronological order (earliest first) of runs with the same route_id and direction_id.
	RunSequence *int `json:"run_sequence,omitempty"`
	// Status of metropolitan train run; returns "scheduled" for other modes
	Status            *string              `json:"status,omitempty"`
	VehicleDescriptor *V3VehicleDescriptor `json:"vehicle_descriptor,omitempty"`
	VehiclePosition   *V3VehiclePosition   `json:"vehicle_position,omitempty"`
}
