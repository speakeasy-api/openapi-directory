/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class FolderMenuGetRequest extends SpeakeasyBase {
  /**
   * (optional) Filter for the folders and meters:
   *
   * @remarks
   *             all: load everything
   *             assigned: load only folders and meters that are assigend to a folder
   *             unassigend: load only meters that are not assigend to a folder
   *             user: load only folder and all users assigned to this folders
   *             subuserlist: load all subusers as a list
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: string;
}

export class FolderMenuGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  folderMenuConfiguration?: shared.FolderMenuConfiguration;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
