// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ReloadAllDatasourcesOneNodePathParams struct {
	// Id of the target node
	NodeID string `pathParam:"style=simple,explode=false,name=nodeId"`
}

type ReloadAllDatasourcesOneNodeRequest struct {
	PathParams ReloadAllDatasourcesOneNodePathParams
}

// ReloadAllDatasourcesOneNode200ApplicationJSONActionEnum - The id of the action
type ReloadAllDatasourcesOneNode200ApplicationJSONActionEnum string

const (
	ReloadAllDatasourcesOneNode200ApplicationJSONActionEnumReloadAllDatasourcesOneNode ReloadAllDatasourcesOneNode200ApplicationJSONActionEnum = "ReloadAllDatasourcesOneNode"
)

func (e *ReloadAllDatasourcesOneNode200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ReloadAllDatasourcesOneNode":
		*e = ReloadAllDatasourcesOneNode200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReloadAllDatasourcesOneNode200ApplicationJSONActionEnum: %s", s)
	}
}

// ReloadAllDatasourcesOneNode200ApplicationJSONResultEnum - Result of the request
type ReloadAllDatasourcesOneNode200ApplicationJSONResultEnum string

const (
	ReloadAllDatasourcesOneNode200ApplicationJSONResultEnumSuccess ReloadAllDatasourcesOneNode200ApplicationJSONResultEnum = "success"
	ReloadAllDatasourcesOneNode200ApplicationJSONResultEnumError   ReloadAllDatasourcesOneNode200ApplicationJSONResultEnum = "error"
)

func (e *ReloadAllDatasourcesOneNode200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ReloadAllDatasourcesOneNode200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReloadAllDatasourcesOneNode200ApplicationJSONResultEnum: %s", s)
	}
}

// ReloadAllDatasourcesOneNode200ApplicationJSON - Data sources reloaded
type ReloadAllDatasourcesOneNode200ApplicationJSON struct {
	// The id of the action
	Action ReloadAllDatasourcesOneNode200ApplicationJSONActionEnum `json:"action"`
	Data   string                                                  `json:"data"`
	// Result of the request
	Result ReloadAllDatasourcesOneNode200ApplicationJSONResultEnum `json:"result"`
}

type ReloadAllDatasourcesOneNodeResponse struct {
	ContentType string
	// Data sources reloaded
	ReloadAllDatasourcesOneNode200ApplicationJSONObject *ReloadAllDatasourcesOneNode200ApplicationJSON
	StatusCode                                          int
	RawResponse                                         *http.Response
}
