/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The state of the achievement.
 */
export enum PlayerAchievementAchievementStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Hidden = "HIDDEN",
  Revealed = "REVEALED",
  Unlocked = "UNLOCKED",
}

/**
 * An achievement object.
 */
export class PlayerAchievement extends SpeakeasyBase {
  /**
   * The state of the achievement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "achievementState" })
  achievementState?: PlayerAchievementAchievementStateEnum;

  /**
   * The current steps for an incremental achievement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentSteps" })
  currentSteps?: number;

  /**
   * Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "experiencePoints" })
  experiencePoints?: string;

  /**
   * The current steps for an incremental achievement as a string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formattedCurrentStepsString" })
  formattedCurrentStepsString?: string;

  /**
   * The ID of the achievement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The timestamp of the last modification to this achievement's state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedTimestamp" })
  lastUpdatedTimestamp?: string;
}
