// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteClientVpnEndpointResultStatusCodeEnum - <p>The state of the Client VPN endpoint. Possible states include:</p> <ul> <li> <p> <code>pending-associate</code> - The Client VPN endpoint has been created but no target networks have been associated. The Client VPN endpoint cannot accept connections.</p> </li> <li> <p> <code>available</code> - The Client VPN endpoint has been created and a target network has been associated. The Client VPN endpoint can accept connections.</p> </li> <li> <p> <code>deleting</code> - The Client VPN endpoint is being deleted. The Client VPN endpoint cannot accept connections.</p> </li> <li> <p> <code>deleted</code> - The Client VPN endpoint has been deleted. The Client VPN endpoint cannot accept connections.</p> </li> </ul>
type DeleteClientVpnEndpointResultStatusCodeEnum string

const (
	DeleteClientVpnEndpointResultStatusCodeEnumPendingAssociate DeleteClientVpnEndpointResultStatusCodeEnum = "pending-associate"
	DeleteClientVpnEndpointResultStatusCodeEnumAvailable        DeleteClientVpnEndpointResultStatusCodeEnum = "available"
	DeleteClientVpnEndpointResultStatusCodeEnumDeleting         DeleteClientVpnEndpointResultStatusCodeEnum = "deleting"
	DeleteClientVpnEndpointResultStatusCodeEnumDeleted          DeleteClientVpnEndpointResultStatusCodeEnum = "deleted"
)

func (e *DeleteClientVpnEndpointResultStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending-associate":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = DeleteClientVpnEndpointResultStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteClientVpnEndpointResultStatusCodeEnum: %s", s)
	}
}

// DeleteClientVpnEndpointResultStatus - The current state of the Client VPN endpoint.
type DeleteClientVpnEndpointResultStatus struct {
	Code    *DeleteClientVpnEndpointResultStatusCodeEnum
	Message *string
}

// DeleteClientVpnEndpointResult - Success
type DeleteClientVpnEndpointResult struct {
	Status *DeleteClientVpnEndpointResultStatus
}
