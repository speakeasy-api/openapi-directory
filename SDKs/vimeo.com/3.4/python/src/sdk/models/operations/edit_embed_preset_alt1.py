"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import legacy_error as shared_legacy_error
from ..shared import presets as shared_presets
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EditEmbedPresetAlt1RequestBodyOutroEnum(str, Enum):
    r"""Disable the outro."""
    NOTHING = 'nothing'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EditEmbedPresetAlt1RequestBody:
    
    outro: Optional[EditEmbedPresetAlt1RequestBodyOutroEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outro'), 'exclude': lambda f: f is None }})
    r"""Disable the outro."""  
    

@dataclasses.dataclass
class EditEmbedPresetAlt1Request:
    
    preset_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'preset_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the preset."""  
    request_body: Optional[EditEmbedPresetAlt1RequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/vnd.vimeo.preset+json' }})  
    

@dataclasses.dataclass
class EditEmbedPresetAlt1Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    legacy_error: Optional[shared_legacy_error.LegacyError] = dataclasses.field(default=None)
    r"""The outro type is invalid."""  
    presets: Optional[shared_presets.Presets] = dataclasses.field(default=None)
    r"""The embed preset was edited."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    