/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SasPortalDeviceGrant - Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.
 */
public class SasPortalDeviceGrant {
    /**
     * Type of channel used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channelType")
    public SasPortalDeviceGrantChannelTypeEnum channelType;

    public SasPortalDeviceGrant withChannelType(SasPortalDeviceGrantChannelTypeEnum channelType) {
        this.channelType = channelType;
        return this;
    }
    
    /**
     * The expiration time of the grant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expireTime")
    public String expireTime;

    public SasPortalDeviceGrant withExpireTime(String expireTime) {
        this.expireTime = expireTime;
        return this;
    }
    
    /**
     * Frequency range from `low_frequency` to `high_frequency`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frequencyRange")
    public SasPortalFrequencyRange frequencyRange;

    public SasPortalDeviceGrant withFrequencyRange(SasPortalFrequencyRange frequencyRange) {
        this.frequencyRange = frequencyRange;
        return this;
    }
    
    /**
     * Grant Id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grantId")
    public String grantId;

    public SasPortalDeviceGrant withGrantId(String grantId) {
        this.grantId = grantId;
        return this;
    }
    
    /**
     * The transmit expiration time of the last heartbeat.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastHeartbeatTransmitExpireTime")
    public String lastHeartbeatTransmitExpireTime;

    public SasPortalDeviceGrant withLastHeartbeatTransmitExpireTime(String lastHeartbeatTransmitExpireTime) {
        this.lastHeartbeatTransmitExpireTime = lastHeartbeatTransmitExpireTime;
        return this;
    }
    
    /**
     * Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of `maxEirp` represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxEirp")
    public Double maxEirp;

    public SasPortalDeviceGrant withMaxEirp(Double maxEirp) {
        this.maxEirp = maxEirp;
        return this;
    }
    
    /**
     * The DPA move lists on which this grant appears.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("moveList")
    public SasPortalDpaMoveList[] moveList;

    public SasPortalDeviceGrant withMoveList(SasPortalDpaMoveList[] moveList) {
        this.moveList = moveList;
        return this;
    }
    
    /**
     * State of the grant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public SasPortalDeviceGrantStateEnum state;

    public SasPortalDeviceGrant withState(SasPortalDeviceGrantStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * If the grant is suspended, the reason(s) for suspension.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspensionReason")
    public String[] suspensionReason;

    public SasPortalDeviceGrant withSuspensionReason(String[] suspensionReason) {
        this.suspensionReason = suspensionReason;
        return this;
    }
    
    public SasPortalDeviceGrant(){}
}
