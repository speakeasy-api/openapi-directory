"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import configuredtableanalysisrulepolicy as shared_configuredtableanalysisrulepolicy
from ..shared import configuredtableanalysisruletype_enum as shared_configuredtableanalysisruletype_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfiguredTableAnalysisRule:
    r"""A configured table analysis rule, which limits how data for this table can be used."""
    
    configured_table_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configuredTableArn') }})  
    configured_table_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configuredTableId') }})  
    create_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    policy: shared_configuredtableanalysisrulepolicy.ConfiguredTableAnalysisRulePolicy = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy') }})  
    type: shared_configuredtableanalysisruletype_enum.ConfiguredTableAnalysisRuleTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    update_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    