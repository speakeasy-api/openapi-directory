// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AdminCreateUserXAmzTargetEnum
type AdminCreateUserXAmzTargetEnum string

const (
	AdminCreateUserXAmzTargetEnumAwsCognitoIdentityProviderServiceAdminCreateUser AdminCreateUserXAmzTargetEnum = "AWSCognitoIdentityProviderService.AdminCreateUser"
)

func (e *AdminCreateUserXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSCognitoIdentityProviderService.AdminCreateUser":
		*e = AdminCreateUserXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AdminCreateUserXAmzTargetEnum: %s", s)
	}
}

type AdminCreateUserRequest struct {
	AdminCreateUserRequest shared.AdminCreateUserRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             AdminCreateUserXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AdminCreateUserResponse struct {
	// Success
	AdminCreateUserResponse *shared.AdminCreateUserResponse
	// CodeDeliveryFailureException
	CodeDeliveryFailureException interface{}
	ContentType                  string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidLambdaResponseException
	InvalidLambdaResponseException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidPasswordException
	InvalidPasswordException interface{}
	// InvalidSmsRoleAccessPolicyException
	InvalidSmsRoleAccessPolicyException interface{}
	// InvalidSmsRoleTrustRelationshipException
	InvalidSmsRoleTrustRelationshipException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// PreconditionNotMetException
	PreconditionNotMetException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnexpectedLambdaException
	UnexpectedLambdaException interface{}
	// UnsupportedUserStateException
	UnsupportedUserStateException interface{}
	// UserLambdaValidationException
	UserLambdaValidationException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
	// UsernameExistsException
	UsernameExistsException interface{}
}
