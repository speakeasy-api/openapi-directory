// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ResumeWorkflowRunXAmzTargetEnum
type ResumeWorkflowRunXAmzTargetEnum string

const (
	ResumeWorkflowRunXAmzTargetEnumAwsGlueResumeWorkflowRun ResumeWorkflowRunXAmzTargetEnum = "AWSGlue.ResumeWorkflowRun"
)

func (e ResumeWorkflowRunXAmzTargetEnum) ToPointer() *ResumeWorkflowRunXAmzTargetEnum {
	return &e
}

func (e *ResumeWorkflowRunXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.ResumeWorkflowRun":
		*e = ResumeWorkflowRunXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResumeWorkflowRunXAmzTargetEnum: %v", v)
	}
}

type ResumeWorkflowRunRequest struct {
	ResumeWorkflowRunRequest shared.ResumeWorkflowRunRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               ResumeWorkflowRunXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ResumeWorkflowRunResponse struct {
	// ConcurrentRunsExceededException
	ConcurrentRunsExceededException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// IllegalWorkflowStateException
	IllegalWorkflowStateException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// Success
	ResumeWorkflowRunResponse *shared.ResumeWorkflowRunResponse
	StatusCode                int
	RawResponse               *http.Response
}
