"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import missdistance as shared_missdistance
from ..shared import relvelocity as shared_relvelocity
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CloseApproachData:
    
    close_approach_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('close_approach_date'), 'exclude': lambda f: f is None }})  
    close_approach_date_full: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('close_approach_date_full'), 'exclude': lambda f: f is None }})  
    epoch_date_close_approach: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('epoch_date_close_approach'), 'exclude': lambda f: f is None }})  
    miss_distance: Optional[shared_missdistance.MissDistance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('miss_distance'), 'exclude': lambda f: f is None }})  
    orbiting_body: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orbiting_body'), 'exclude': lambda f: f is None }})  
    relative_velocity: Optional[shared_relvelocity.RelVelocity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relative_velocity'), 'exclude': lambda f: f is None }})  
    