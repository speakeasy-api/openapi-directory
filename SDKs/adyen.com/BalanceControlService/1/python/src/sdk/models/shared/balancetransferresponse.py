"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import amount as shared_amount
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class BalanceTransferResponseStatusEnum(str, Enum):
    r"""The status of the balance transfer. Possible values: **transferred**, **failed**, **error**, and **notEnoughBalance**."""
    ERROR = 'error'
    FAILED = 'failed'
    NOT_ENOUGH_BALANCE = 'notEnoughBalance'
    TRANSFERRED = 'transferred'

class BalanceTransferResponseTypeEnum(str, Enum):
    r"""The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**."""
    TAX = 'tax'
    FEE = 'fee'
    TERMINAL_SALE = 'terminalSale'
    CREDIT = 'credit'
    DEBIT = 'debit'
    ADJUSTMENT = 'adjustment'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BalanceTransferResponse:
    r"""OK - the request has succeeded."""
    
    amount: shared_amount.Amount = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})  
    created_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The date when the balance transfer was requested."""  
    from_merchant: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fromMerchant') }})
    r"""The unique identifier of the source merchant account from which funds are deducted."""  
    psp_reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pspReference') }})
    r"""Adyen's 16-character string reference associated with the balance transfer."""  
    status: BalanceTransferResponseStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status of the balance transfer. Possible values: **transferred**, **failed**, **error**, and **notEnoughBalance**."""  
    to_merchant: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toMerchant') }})
    r"""The unique identifier of the destination merchant account from which funds are transferred."""  
    type: BalanceTransferResponseTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description may be truncated."""  
    reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference'), 'exclude': lambda f: f is None }})
    r"""A reference for the balance transfer. If you don't provide this in the request, Adyen generates a unique reference.
    Maximum length: 80 characters.
    """  
    