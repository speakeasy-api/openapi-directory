// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PullsDismissReviewRequestBodyEventEnum string

const (
	PullsDismissReviewRequestBodyEventEnumDismiss PullsDismissReviewRequestBodyEventEnum = "DISMISS"
)

func (e *PullsDismissReviewRequestBodyEventEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DISMISS":
		*e = PullsDismissReviewRequestBodyEventEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PullsDismissReviewRequestBodyEventEnum: %s", s)
	}
}

type PullsDismissReviewRequestBody struct {
	Event *PullsDismissReviewRequestBodyEventEnum `json:"event,omitempty"`
	// The message for the pull request review dismissal
	Message string `json:"message"`
}

type PullsDismissReviewRequest struct {
	RequestBody PullsDismissReviewRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The number that identifies the pull request.
	PullNumber int64 `pathParam:"style=simple,explode=false,name=pull_number"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
	// The unique identifier of the review.
	ReviewID int64 `pathParam:"style=simple,explode=false,name=review_id"`
}

type PullsDismissReviewResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	PullRequestReview *shared.PullRequestReview
	// Validation failed, or the endpoint has been spammed.
	ValidationErrorSimple *shared.ValidationErrorSimple
}
