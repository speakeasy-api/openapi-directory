// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetTableObjectsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type GetTableObjectsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GetTableObjectsRequestBody struct {
	// The catalog containing the governed table. Defaults to the callerâ€™s account.
	CatalogID *string `json:"CatalogId,omitempty"`
	// The database containing the governed table.
	DatabaseName string `json:"DatabaseName"`
	// Specifies how many values to return in a page.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// A continuation token if this is not the first call to retrieve these objects.
	NextToken *string `json:"NextToken,omitempty"`
	// <p>A predicate to filter the objects returned based on the partition keys defined in the governed table.</p> <ul> <li> <p>The comparison operators supported are: =, &gt;, &lt;, &gt;=, &lt;=</p> </li> <li> <p>The logical operators supported are: AND</p> </li> <li> <p>The data types supported are integer, long, date(yyyy-MM-dd), timestamp(yyyy-MM-dd HH:mm:ssXXX or yyyy-MM-dd HH:mm:ss"), string and decimal.</p> </li> </ul>
	PartitionPredicate *string `json:"PartitionPredicate,omitempty"`
	// The time as of when to read the governed table contents. If not set, the most recent transaction commit time is used. Cannot be specified along with <code>TransactionId</code>.
	QueryAsOfTime *time.Time `json:"QueryAsOfTime,omitempty"`
	// The governed table for which to retrieve objects.
	TableName string `json:"TableName"`
	// The transaction ID at which to read the governed table contents. If this transaction has aborted, an error is returned. If not set, defaults to the most recent committed transaction. Cannot be specified along with <code>QueryAsOfTime</code>.
	TransactionID *string `json:"TransactionId,omitempty"`
}

type GetTableObjectsRequest struct {
	QueryParams GetTableObjectsQueryParams
	Headers     GetTableObjectsHeaders
	Request     GetTableObjectsRequestBody `request:"mediaType=application/json"`
}

type GetTableObjectsResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// Success
	GetTableObjectsResponse *shared.GetTableObjectsResponse
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotReadyException
	ResourceNotReadyException interface{}
	// TransactionCanceledException
	TransactionCanceledException interface{}
	// TransactionCommittedException
	TransactionCommittedException interface{}
}
