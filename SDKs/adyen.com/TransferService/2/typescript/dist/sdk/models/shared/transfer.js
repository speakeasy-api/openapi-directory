"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Transfer = exports.TransferStatusEnum = exports.TransferReasonEnum = exports.TransferDirectionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var amount_1 = require("./amount");
var bank_1 = require("./bank");
var counterparty_1 = require("./counterparty");
var class_transformer_1 = require("class-transformer");
/**
 * The direction of the transfer.
 *
 * @remarks
 *
 * Possible values: **incoming**, **outgoing**.
 */
var TransferDirectionEnum;
(function (TransferDirectionEnum) {
    TransferDirectionEnum["Incoming"] = "incoming";
    TransferDirectionEnum["Outgoing"] = "outgoing";
})(TransferDirectionEnum = exports.TransferDirectionEnum || (exports.TransferDirectionEnum = {}));
/**
 * Additional information about the status of the transfer.
 */
var TransferReasonEnum;
(function (TransferReasonEnum) {
    TransferReasonEnum["AmountLimitExceded"] = "amountLimitExceded";
    TransferReasonEnum["Approved"] = "approved";
    TransferReasonEnum["CounterpartyAccountBlocked"] = "counterpartyAccountBlocked";
    TransferReasonEnum["CounterpartyAccountClosed"] = "counterpartyAccountClosed";
    TransferReasonEnum["CounterpartyAccountNotFound"] = "counterpartyAccountNotFound";
    TransferReasonEnum["CounterpartyAddressRequired"] = "counterpartyAddressRequired";
    TransferReasonEnum["CounterpartyBankTimedOut"] = "counterpartyBankTimedOut";
    TransferReasonEnum["CounterpartyBankUnavailable"] = "counterpartyBankUnavailable";
    TransferReasonEnum["Error"] = "error";
    TransferReasonEnum["NotEnoughBalance"] = "notEnoughBalance";
    TransferReasonEnum["RefusedByCounterpartyBank"] = "refusedByCounterpartyBank";
    TransferReasonEnum["RouteNotFound"] = "routeNotFound";
    TransferReasonEnum["Unknown"] = "unknown";
})(TransferReasonEnum = exports.TransferReasonEnum || (exports.TransferReasonEnum = {}));
/**
 * The result of the transfer.
 *
 * @remarks
 *
 *  For example, **authorised**, **refused**, or **error**.
 */
var TransferStatusEnum;
(function (TransferStatusEnum) {
    TransferStatusEnum["AtmWithdrawal"] = "atmWithdrawal";
    TransferStatusEnum["AtmWithdrawalReversalPending"] = "atmWithdrawalReversalPending";
    TransferStatusEnum["AtmWithdrawalReversed"] = "atmWithdrawalReversed";
    TransferStatusEnum["AuthAdjustmentAuthorised"] = "authAdjustmentAuthorised";
    TransferStatusEnum["AuthAdjustmentError"] = "authAdjustmentError";
    TransferStatusEnum["AuthAdjustmentRefused"] = "authAdjustmentRefused";
    TransferStatusEnum["Authorised"] = "authorised";
    TransferStatusEnum["BankTransfer"] = "bankTransfer";
    TransferStatusEnum["BankTransferPending"] = "bankTransferPending";
    TransferStatusEnum["Booked"] = "booked";
    TransferStatusEnum["BookingPending"] = "bookingPending";
    TransferStatusEnum["Cancelled"] = "cancelled";
    TransferStatusEnum["CapturePending"] = "capturePending";
    TransferStatusEnum["CaptureReversalPending"] = "captureReversalPending";
    TransferStatusEnum["CaptureReversed"] = "captureReversed";
    TransferStatusEnum["Captured"] = "captured";
    TransferStatusEnum["Chargeback"] = "chargeback";
    TransferStatusEnum["ChargebackPending"] = "chargebackPending";
    TransferStatusEnum["ChargebackReversalPending"] = "chargebackReversalPending";
    TransferStatusEnum["ChargebackReversed"] = "chargebackReversed";
    TransferStatusEnum["Credited"] = "credited";
    TransferStatusEnum["DepositCorrection"] = "depositCorrection";
    TransferStatusEnum["DepositCorrectionPending"] = "depositCorrectionPending";
    TransferStatusEnum["Dispute"] = "dispute";
    TransferStatusEnum["DisputeClosed"] = "disputeClosed";
    TransferStatusEnum["DisputeExpired"] = "disputeExpired";
    TransferStatusEnum["DisputeNeedsReview"] = "disputeNeedsReview";
    TransferStatusEnum["Error"] = "error";
    TransferStatusEnum["Expired"] = "expired";
    TransferStatusEnum["Failed"] = "failed";
    TransferStatusEnum["Fee"] = "fee";
    TransferStatusEnum["FeePending"] = "feePending";
    TransferStatusEnum["InternalTransfer"] = "internalTransfer";
    TransferStatusEnum["InternalTransferPending"] = "internalTransferPending";
    TransferStatusEnum["InvoiceDeduction"] = "invoiceDeduction";
    TransferStatusEnum["InvoiceDeductionPending"] = "invoiceDeductionPending";
    TransferStatusEnum["ManualCorrectionPending"] = "manualCorrectionPending";
    TransferStatusEnum["ManuallyCorrected"] = "manuallyCorrected";
    TransferStatusEnum["MatchedStatement"] = "matchedStatement";
    TransferStatusEnum["MatchedStatementPending"] = "matchedStatementPending";
    TransferStatusEnum["MerchantPayin"] = "merchantPayin";
    TransferStatusEnum["MerchantPayinPending"] = "merchantPayinPending";
    TransferStatusEnum["MerchantPayinReversed"] = "merchantPayinReversed";
    TransferStatusEnum["MerchantPayinReversedPending"] = "merchantPayinReversedPending";
    TransferStatusEnum["MiscCost"] = "miscCost";
    TransferStatusEnum["MiscCostPending"] = "miscCostPending";
    TransferStatusEnum["PaymentCost"] = "paymentCost";
    TransferStatusEnum["PaymentCostPending"] = "paymentCostPending";
    TransferStatusEnum["Received"] = "received";
    TransferStatusEnum["RefundPending"] = "refundPending";
    TransferStatusEnum["RefundReversalPending"] = "refundReversalPending";
    TransferStatusEnum["RefundReversed"] = "refundReversed";
    TransferStatusEnum["Refunded"] = "refunded";
    TransferStatusEnum["Refused"] = "refused";
    TransferStatusEnum["ReserveAdjustment"] = "reserveAdjustment";
    TransferStatusEnum["ReserveAdjustmentPending"] = "reserveAdjustmentPending";
    TransferStatusEnum["Returned"] = "returned";
    TransferStatusEnum["SecondChargeback"] = "secondChargeback";
    TransferStatusEnum["SecondChargebackPending"] = "secondChargebackPending";
    TransferStatusEnum["Undefined"] = "undefined";
})(TransferStatusEnum = exports.TransferStatusEnum || (exports.TransferStatusEnum = {}));
/**
 * OK - the request has succeeded.
 */
var Transfer = /** @class */ (function (_super) {
    __extends(Transfer, _super);
    function Transfer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        (0, class_transformer_1.Type)(function () { return amount_1.Amount; }),
        __metadata("design:type", amount_1.Amount)
    ], Transfer.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "balanceAccountId" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "balanceAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bank" }),
        (0, class_transformer_1.Type)(function () { return bank_1.Bank; }),
        __metadata("design:type", bank_1.Bank)
    ], Transfer.prototype, "bank", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "counterparty" }),
        (0, class_transformer_1.Type)(function () { return counterparty_1.Counterparty; }),
        __metadata("design:type", counterparty_1.Counterparty)
    ], Transfer.prototype, "counterparty", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "direction" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "direction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentInstrumentId" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "paymentInstrumentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reason" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "reason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reference" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "reference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referenceForBeneficiary" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "referenceForBeneficiary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Transfer.prototype, "status", void 0);
    return Transfer;
}(utils_1.SpeakeasyBase));
exports.Transfer = Transfer;
