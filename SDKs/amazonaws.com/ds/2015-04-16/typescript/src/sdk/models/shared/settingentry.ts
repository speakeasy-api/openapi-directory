/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DirectoryConfigurationStatusEnum } from "./directoryconfigurationstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about the specified configurable setting for a directory.
 */
export class SettingEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowedValues" })
  allowedValues?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AppliedValue" })
  appliedValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastRequestedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastRequestedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestDetailedStatus" })
  requestDetailedStatus?: Record<string, DirectoryConfigurationStatusEnum>;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestStatus" })
  requestStatus?: DirectoryConfigurationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestStatusMessage" })
  requestStatusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestedValue" })
  requestedValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}
