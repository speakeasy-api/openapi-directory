// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeExportTasksActionEnum
type POSTDescribeExportTasksActionEnum string

const (
	POSTDescribeExportTasksActionEnumDescribeExportTasks POSTDescribeExportTasksActionEnum = "DescribeExportTasks"
)

func (e POSTDescribeExportTasksActionEnum) ToPointer() *POSTDescribeExportTasksActionEnum {
	return &e
}

func (e *POSTDescribeExportTasksActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeExportTasks":
		*e = POSTDescribeExportTasksActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeExportTasksActionEnum: %v", v)
	}
}

// POSTDescribeExportTasksVersionEnum
type POSTDescribeExportTasksVersionEnum string

const (
	POSTDescribeExportTasksVersionEnumTwoThousandAndSixteen1115 POSTDescribeExportTasksVersionEnum = "2016-11-15"
)

func (e POSTDescribeExportTasksVersionEnum) ToPointer() *POSTDescribeExportTasksVersionEnum {
	return &e
}

func (e *POSTDescribeExportTasksVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDescribeExportTasksVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeExportTasksVersionEnum: %v", v)
	}
}

type POSTDescribeExportTasksRequest struct {
	Action            POSTDescribeExportTasksActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                             `request:"mediaType=text/xml"`
	Version           POSTDescribeExportTasksVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeExportTasksResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
