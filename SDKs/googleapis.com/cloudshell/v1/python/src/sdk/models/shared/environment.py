"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EnvironmentStateEnum(str, Enum):
    r"""Output only. Current execution state of this environment."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    SUSPENDED = 'SUSPENDED'
    PENDING = 'PENDING'
    RUNNING = 'RUNNING'
    DELETING = 'DELETING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Environment:
    r"""A Cloud Shell environment, which is defined as the combination of a Docker image specifying what is installed on the environment and a home directory containing the user's data that will remain across sessions. Each user has at least an environment with the ID \\"default\\"."""
    
    docker_image: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dockerImage'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. Full path to the Docker image used to run this environment, e.g. \\"gcr.io/dev-con/cloud-devshell:latest\\"."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Output only. The environment's identifier, unique among the user's environments."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Immutable. Full name of this resource, in the format `users/{owner_email}/environments/{environment_id}`. `{owner_email}` is the email address of the user to whom this environment belongs, and `{environment_id}` is the identifier of this environment. For example, `users/someone@example.com/environments/default`."""  
    public_keys: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicKeys'), 'exclude': lambda f: f is None }})
    r"""Output only. Public keys associated with the environment. Clients can connect to this environment via SSH only if they possess a private key corresponding to at least one of these public keys. Keys can be added to or removed from the environment using the AddPublicKey and RemovePublicKey methods."""  
    ssh_host: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sshHost'), 'exclude': lambda f: f is None }})
    r"""Output only. Host to which clients can connect to initiate SSH sessions with the environment."""  
    ssh_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sshPort'), 'exclude': lambda f: f is None }})
    r"""Output only. Port to which clients can connect to initiate SSH sessions with the environment."""  
    ssh_username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sshUsername'), 'exclude': lambda f: f is None }})
    r"""Output only. Username that clients should use when initiating SSH sessions with the environment."""  
    state: Optional[EnvironmentStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. Current execution state of this environment."""  
    web_host: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webHost'), 'exclude': lambda f: f is None }})
    r"""Output only. Host to which clients can connect to initiate HTTPS or WSS connections with the environment."""  
    