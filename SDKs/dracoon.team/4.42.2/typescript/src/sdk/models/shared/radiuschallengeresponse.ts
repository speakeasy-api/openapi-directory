/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * RADIUS challenge reply
 */
export class RadiusChallengeResponse extends SpeakeasyBase {
  /**
   * HTTP status code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  /**
   * Debug information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debugInfo" })
  debugInfo?: string;

  /**
   * Internal error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCode" })
  errorCode?: number;

  /**
   * HTTP status code description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * RADIUS Reply-Message
   *
   * @remarks
   *
   * Instruction how to handle the situation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "replyMessage" })
  replyMessage: string;

  /**
   * For RADIUS Access-Challenge
   *
   * @remarks
   *
   * If a `replyState` is returned, it must be included as `state` in the following request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "replyState" })
  replyState: string;
}
