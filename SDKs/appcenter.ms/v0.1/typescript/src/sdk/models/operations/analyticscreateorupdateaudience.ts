/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class AnalyticsCreateOrUpdateAudienceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export enum AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum {
  String = "string",
  Number = "number",
  Boolean = "boolean",
  DateTime = "date_time",
}

/**
 * Audience definition.
 */
export class AnalyticsCreateOrUpdateAudienceRequestBody extends SpeakeasyBase {
  /**
   * Custom properties used in the definition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_properties" })
  customProperties?: Record<
    string,
    AnalyticsCreateOrUpdateAudienceRequestBodyCustomPropertiesEnum
  >;

  /**
   * Audience definition in OData format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  definition: string;

  /**
   * Audience description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

export class AnalyticsCreateOrUpdateAudienceRequest extends SpeakeasyBase {
  /**
   * Audience definition
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: AnalyticsCreateOrUpdateAudienceRequestBody;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the audience
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=audience_name",
  })
  audienceName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class AnalyticsCreateOrUpdateAudienceDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONError)
  error: AnalyticsCreateOrUpdateAudienceDefaultApplicationJSONError;
}

export enum AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum {
  String = "string",
  Number = "number",
  Boolean = "boolean",
  DateTime = "date_time",
}

/**
 * Audience state.
 */
export enum AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum {
  Calculating = "Calculating",
  Ready = "Ready",
  Disabled = "Disabled",
}

/**
 * Audience definition.
 */
export class AnalyticsCreateOrUpdateAudience200ApplicationJSON extends SpeakeasyBase {
  /**
   * Custom properties used in the definition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_properties" })
  customProperties?: Record<
    string,
    AnalyticsCreateOrUpdateAudience200ApplicationJSONCustomPropertiesEnum
  >;

  /**
   * Audience definition in OData format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  definition?: string;

  /**
   * Audience description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Estimated audience size.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "estimated_count" })
  estimatedCount?: number;

  /**
   * Estimated total audience size.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "estimated_total_count" })
  estimatedTotalCount?: number;

  /**
   * Audience name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Audience state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: AnalyticsCreateOrUpdateAudience200ApplicationJSONStateEnum;

  /**
   * Date the audience was last refreshed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;
}

export class AnalyticsCreateOrUpdateAudienceResponse extends SpeakeasyBase {
  /**
   * Updated audiences definition.
   */
  @SpeakeasyMetadata()
  analyticsCreateOrUpdateAudience200ApplicationJSONObject?: AnalyticsCreateOrUpdateAudience200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  analyticsCreateOrUpdateAudienceDefaultApplicationJSONObject?: AnalyticsCreateOrUpdateAudienceDefaultApplicationJSON;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
