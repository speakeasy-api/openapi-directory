<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetNetworkWirelessSsidEapOverride200ApplicationJSON - Successful operation
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetNetworkWirelessSsidEapOverride200ApplicationJSON
{
    /**
     * EAPOL Key settings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidEapOverride200ApplicationJSONEapolKey $eapolKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('eapolKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidEapOverride200ApplicationJSONEapolKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidEapOverride200ApplicationJSONEapolKey $eapolKey = null;
    
    /**
     * EAP settings for identity requests.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidEapOverride200ApplicationJSONIdentity $identity
     */
	#[\JMS\Serializer\Annotation\SerializedName('identity')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidEapOverride200ApplicationJSONIdentity')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidEapOverride200ApplicationJSONIdentity $identity = null;
    
    /**
     * Maximum number of general EAP retries.
     * 
     * @var ?int $maxRetries
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxRetries')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxRetries = null;
    
    /**
     * General EAP timeout in seconds.
     * 
     * @var ?int $timeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $timeout = null;
    
	public function __construct()
	{
		$this->eapolKey = null;
		$this->identity = null;
		$this->maxRetries = null;
		$this->timeout = null;
	}
}
