/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BuildsListToolsetProjects200ApplicationJSONXcodeXcodeSchemeContainersSharedSchemesArchiveProject {
    /**
     * The Id of the target to archive
     */
    @JsonProperty("archiveTargetId")
    public String archiveTargetId;

    public BuildsListToolsetProjects200ApplicationJSONXcodeXcodeSchemeContainersSharedSchemesArchiveProject withArchiveTargetId(String archiveTargetId) {
        this.archiveTargetId = archiveTargetId;
        return this;
    }
    
    /**
     * The project to archive container name
     */
    @JsonProperty("projectName")
    public String projectName;

    public BuildsListToolsetProjects200ApplicationJSONXcodeXcodeSchemeContainersSharedSchemesArchiveProject withProjectName(String projectName) {
        this.projectName = projectName;
        return this;
    }
    
    /**
     * Full path of the target project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectPath")
    public String projectPath;

    public BuildsListToolsetProjects200ApplicationJSONXcodeXcodeSchemeContainersSharedSchemesArchiveProject withProjectPath(String projectPath) {
        this.projectPath = projectPath;
        return this;
    }
    
    public BuildsListToolsetProjects200ApplicationJSONXcodeXcodeSchemeContainersSharedSchemesArchiveProject(@JsonProperty("archiveTargetId") String archiveTargetId, @JsonProperty("projectName") String projectName) {
        this.archiveTargetId = archiveTargetId;
        this.projectName = projectName;
  }
}
