// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetBackendAuthResponseResourceConfigAuthResourcesEnum - Defines whether you want to configure only authentication or both authentication and authorization settings.
type GetBackendAuthResponseResourceConfigAuthResourcesEnum string

const (
	GetBackendAuthResponseResourceConfigAuthResourcesEnumUserPoolOnly            GetBackendAuthResponseResourceConfigAuthResourcesEnum = "USER_POOL_ONLY"
	GetBackendAuthResponseResourceConfigAuthResourcesEnumIdentityPoolAndUserPool GetBackendAuthResponseResourceConfigAuthResourcesEnum = "IDENTITY_POOL_AND_USER_POOL"
)

func (e GetBackendAuthResponseResourceConfigAuthResourcesEnum) ToPointer() *GetBackendAuthResponseResourceConfigAuthResourcesEnum {
	return &e
}

func (e *GetBackendAuthResponseResourceConfigAuthResourcesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "USER_POOL_ONLY":
		fallthrough
	case "IDENTITY_POOL_AND_USER_POOL":
		*e = GetBackendAuthResponseResourceConfigAuthResourcesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBackendAuthResponseResourceConfigAuthResourcesEnum: %v", v)
	}
}

// GetBackendAuthResponseResourceConfigIdentityPoolConfigs - Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.
type GetBackendAuthResponseResourceConfigIdentityPoolConfigs struct {
	IdentityPoolName     string `json:"IdentityPoolName"`
	UnauthenticatedLogin bool   `json:"UnauthenticatedLogin"`
}

// GetBackendAuthResponseResourceConfigServiceEnum - Defines the service name to use when configuring an authentication resource in your Amplify project.
type GetBackendAuthResponseResourceConfigServiceEnum string

const (
	GetBackendAuthResponseResourceConfigServiceEnumCognito GetBackendAuthResponseResourceConfigServiceEnum = "COGNITO"
)

func (e GetBackendAuthResponseResourceConfigServiceEnum) ToPointer() *GetBackendAuthResponseResourceConfigServiceEnum {
	return &e
}

func (e *GetBackendAuthResponseResourceConfigServiceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COGNITO":
		*e = GetBackendAuthResponseResourceConfigServiceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBackendAuthResponseResourceConfigServiceEnum: %v", v)
	}
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum - <b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users who want to recover their password.
type GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum string

const (
	GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnumEmail GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum = "EMAIL"
	GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnumSms   GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum = "SMS"
)

func (e GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum) ToPointer() *GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum {
	return &e
}

func (e *GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EMAIL":
		fallthrough
	case "SMS":
		*e = GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum: %v", v)
	}
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordEmailSettings - <b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.
type GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordEmailSettings struct {
	EmailMessage *string `json:"EmailMessage,omitempty"`
	EmailSubject *string `json:"EmailSubject,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordSmsSettings - <b>(DEPRECATED)</b> The configuration for the SMS message sent when an app user forgets their password.
type GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordSmsSettings struct {
	SmsMessage *string `json:"SmsMessage,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPassword - <b>(DEPRECATED)</b> Describes the forgotten password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
type GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPassword struct {
	DeliveryMethod GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum `json:"DeliveryMethod"`
	EmailSettings  *GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordEmailSettings     `json:"EmailSettings,omitempty"`
	SmsSettings    *GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPasswordSmsSettings       `json:"SmsSettings,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsMfaSettings - Describes the configuration settings and methods for your Amplify app users to use MFA.
type GetBackendAuthResponseResourceConfigUserPoolConfigsMfaSettings struct {
	MfaTypes   []MfaTypesElementEnum `json:"MfaTypes,omitempty"`
	SmsMessage *string               `json:"SmsMessage,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsMfa - Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.
type GetBackendAuthResponseResourceConfigUserPoolConfigsMfa struct {
	MFAMode  MFAModeEnum                                                     `json:"MFAMode"`
	Settings *GetBackendAuthResponseResourceConfigUserPoolConfigsMfaSettings `json:"Settings,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum - The OAuth grant type that you use to allow app users to authenticate from your Amplify app.
type GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum string

const (
	GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnumCode     GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum = "CODE"
	GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnumImplicit GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum = "IMPLICIT"
)

func (e GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum) ToPointer() *GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum {
	return &e
}

func (e *GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CODE":
		fallthrough
	case "IMPLICIT":
		*e = GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum: %v", v)
	}
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthSocialProviderSettings - The settings for using social providers to access your Amplify app.
type GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthSocialProviderSettings struct {
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	Facebook *BackendAuthSocialProviderConfig `json:"Facebook,omitempty"`
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	Google *BackendAuthSocialProviderConfig `json:"Google,omitempty"`
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	LoginWithAmazon *BackendAuthSocialProviderConfig `json:"LoginWithAmazon,omitempty"`
	// Describes Apple social federation configurations for allowing your app users to sign in using OAuth.
	SignInWithApple *BackendAuthAppleProviderConfig `json:"SignInWithApple,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsOAuth - Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.
type GetBackendAuthResponseResourceConfigUserPoolConfigsOAuth struct {
	DomainPrefix           *string                                                                         `json:"DomainPrefix,omitempty"`
	OAuthGrantType         GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum      `json:"OAuthGrantType"`
	OAuthScopes            []OAuthScopesElementEnum                                                        `json:"OAuthScopes"`
	RedirectSignInURIs     []string                                                                        `json:"RedirectSignInURIs"`
	RedirectSignOutURIs    []string                                                                        `json:"RedirectSignOutURIs"`
	SocialProviderSettings *GetBackendAuthResponseResourceConfigUserPoolConfigsOAuthSocialProviderSettings `json:"SocialProviderSettings,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsPasswordPolicy - Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
type GetBackendAuthResponseResourceConfigUserPoolConfigsPasswordPolicy struct {
	AdditionalConstraints []AdditionalConstraintsElementEnum `json:"AdditionalConstraints,omitempty"`
	MinimumLength         float64                            `json:"MinimumLength"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum - Describes the sign-in methods that your Amplify app users use to log in using the Amazon Cognito user pool, configured as a part of your Amplify project.
type GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum string

const (
	GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnumEmail               GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum = "EMAIL"
	GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnumEmailAndPhoneNumber GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum = "EMAIL_AND_PHONE_NUMBER"
	GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnumPhoneNumber         GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum = "PHONE_NUMBER"
	GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnumUsername            GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum = "USERNAME"
)

func (e GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum) ToPointer() *GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum {
	return &e
}

func (e *GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EMAIL":
		fallthrough
	case "EMAIL_AND_PHONE_NUMBER":
		fallthrough
	case "PHONE_NUMBER":
		fallthrough
	case "USERNAME":
		*e = GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum: %v", v)
	}
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum - The type of verification message to send.
type GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum string

const (
	GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnumEmail GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum = "EMAIL"
	GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnumSms   GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum = "SMS"
)

func (e GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum) ToPointer() *GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum {
	return &e
}

func (e *GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EMAIL":
		fallthrough
	case "SMS":
		*e = GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum: %v", v)
	}
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageEmailSettings - The settings for the email message.
type GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageEmailSettings struct {
	EmailMessage *string `json:"EmailMessage,omitempty"`
	EmailSubject *string `json:"EmailSubject,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageSmsSettings - The settings for the SMS message.
type GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageSmsSettings struct {
	SmsMessage *string `json:"SmsMessage,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessage - Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.
type GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessage struct {
	DeliveryMethod GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum `json:"DeliveryMethod"`
	EmailSettings  *GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageEmailSettings     `json:"EmailSettings,omitempty"`
	SmsSettings    *GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessageSmsSettings       `json:"SmsSettings,omitempty"`
}

// GetBackendAuthResponseResourceConfigUserPoolConfigs - Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.
type GetBackendAuthResponseResourceConfigUserPoolConfigs struct {
	ForgotPassword           *GetBackendAuthResponseResourceConfigUserPoolConfigsForgotPassword      `json:"ForgotPassword,omitempty"`
	Mfa                      *GetBackendAuthResponseResourceConfigUserPoolConfigsMfa                 `json:"Mfa,omitempty"`
	OAuth                    *GetBackendAuthResponseResourceConfigUserPoolConfigsOAuth               `json:"OAuth,omitempty"`
	PasswordPolicy           *GetBackendAuthResponseResourceConfigUserPoolConfigsPasswordPolicy      `json:"PasswordPolicy,omitempty"`
	RequiredSignUpAttributes []RequiredSignUpAttributesElementEnum                                   `json:"RequiredSignUpAttributes"`
	SignInMethod             GetBackendAuthResponseResourceConfigUserPoolConfigsSignInMethodEnum     `json:"SignInMethod"`
	UserPoolName             string                                                                  `json:"UserPoolName"`
	VerificationMessage      *GetBackendAuthResponseResourceConfigUserPoolConfigsVerificationMessage `json:"VerificationMessage,omitempty"`
}

// GetBackendAuthResponseResourceConfig - The resource configuration for authorization requests to the backend of your Amplify project.
type GetBackendAuthResponseResourceConfig struct {
	AuthResources       GetBackendAuthResponseResourceConfigAuthResourcesEnum    `json:"AuthResources"`
	IdentityPoolConfigs *GetBackendAuthResponseResourceConfigIdentityPoolConfigs `json:"IdentityPoolConfigs,omitempty"`
	Service             GetBackendAuthResponseResourceConfigServiceEnum          `json:"Service"`
	UserPoolConfigs     GetBackendAuthResponseResourceConfigUserPoolConfigs      `json:"UserPoolConfigs"`
}

// GetBackendAuthResponse - Success
type GetBackendAuthResponse struct {
	AppID                  *string                               `json:"AppId,omitempty"`
	BackendEnvironmentName *string                               `json:"BackendEnvironmentName,omitempty"`
	Error                  *string                               `json:"Error,omitempty"`
	ResourceConfig         *GetBackendAuthResponseResourceConfig `json:"ResourceConfig,omitempty"`
	ResourceName           *string                               `json:"ResourceName,omitempty"`
}
