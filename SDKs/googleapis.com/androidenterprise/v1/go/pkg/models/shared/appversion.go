// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AppVersionTrackEnum - Deprecated, use trackId instead.
type AppVersionTrackEnum string

const (
	AppVersionTrackEnumAppTrackUnspecified AppVersionTrackEnum = "appTrackUnspecified"
	AppVersionTrackEnumProduction          AppVersionTrackEnum = "production"
	AppVersionTrackEnumBeta                AppVersionTrackEnum = "beta"
	AppVersionTrackEnumAlpha               AppVersionTrackEnum = "alpha"
)

func (e AppVersionTrackEnum) ToPointer() *AppVersionTrackEnum {
	return &e
}

func (e *AppVersionTrackEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "appTrackUnspecified":
		fallthrough
	case "production":
		fallthrough
	case "beta":
		fallthrough
	case "alpha":
		*e = AppVersionTrackEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppVersionTrackEnum: %v", v)
	}
}

// AppVersion - This represents a single version of the app.
type AppVersion struct {
	// True if this version is a production APK.
	IsProduction *bool `json:"isProduction,omitempty"`
	// Deprecated, use trackId instead.
	Track *AppVersionTrackEnum `json:"track,omitempty"`
	// Track ids that the app version is published in. Replaces the track field (deprecated), but doesn't include the production track (see isProduction instead).
	TrackID []string `json:"trackId,omitempty"`
	// Unique increasing identifier for the app version.
	VersionCode *int `json:"versionCode,omitempty"`
	// The string used in the Play store by the app developer to identify the version. The string is not necessarily unique or localized (for example, the string could be "1.4").
	VersionString *string `json:"versionString,omitempty"`
}
