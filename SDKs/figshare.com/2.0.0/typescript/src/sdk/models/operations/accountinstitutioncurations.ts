/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class AccountInstitutionCurationsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * Filter by the status of the review
 */
export enum AccountInstitutionCurationsStatusEnum {
  Pending = "pending",
  Approved = "approved",
  Rejected = "rejected",
  Closed = "closed",
}

export class AccountInstitutionCurationsRequest extends SpeakeasyBase {
  /**
   * Retrieve the reviews for this article
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=article_id",
  })
  articleId?: number;

  /**
   * Filter by the group ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=group_id",
  })
  groupId?: number;

  /**
   * Number of results included on a page. Used for pagination with query
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Filter by the status of the review
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: AccountInstitutionCurationsStatusEnum;
}

export class AccountInstitutionCurationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK. A list of curation reviews.
   */
  @SpeakeasyMetadata()
  curation?: shared.Curation;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  errorMessage?: shared.ErrorMessage;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
