/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * RunInstancesRequestNetworkInterfaces - Describes a network interface.
 */
public class RunInstancesRequestNetworkInterfaces {
    
    public Boolean associateCarrierIpAddress;
    public RunInstancesRequestNetworkInterfaces withAssociateCarrierIpAddress(Boolean associateCarrierIpAddress) {
        this.associateCarrierIpAddress = associateCarrierIpAddress;
        return this;
    }
    
    
    public Boolean associatePublicIpAddress;
    public RunInstancesRequestNetworkInterfaces withAssociatePublicIpAddress(Boolean associatePublicIpAddress) {
        this.associatePublicIpAddress = associatePublicIpAddress;
        return this;
    }
    
    
    public Boolean deleteOnTermination;
    public RunInstancesRequestNetworkInterfaces withDeleteOnTermination(Boolean deleteOnTermination) {
        this.deleteOnTermination = deleteOnTermination;
        return this;
    }
    
    
    public String description;
    public RunInstancesRequestNetworkInterfaces withDescription(String description) {
        this.description = description;
        return this;
    }
    
    
    public Long deviceIndex;
    public RunInstancesRequestNetworkInterfaces withDeviceIndex(Long deviceIndex) {
        this.deviceIndex = deviceIndex;
        return this;
    }
    
    
    public String[] groups;
    public RunInstancesRequestNetworkInterfaces withGroups(String[] groups) {
        this.groups = groups;
        return this;
    }
    
    
    public String interfaceType;
    public RunInstancesRequestNetworkInterfaces withInterfaceType(String interfaceType) {
        this.interfaceType = interfaceType;
        return this;
    }
    
    
    public Long ipv4PrefixCount;
    public RunInstancesRequestNetworkInterfaces withIpv4PrefixCount(Long ipv4PrefixCount) {
        this.ipv4PrefixCount = ipv4PrefixCount;
        return this;
    }
    
    
    public RunInstancesRequestNetworkInterfacesIpv4Prefixes[] ipv4Prefixes;
    public RunInstancesRequestNetworkInterfaces withIpv4Prefixes(RunInstancesRequestNetworkInterfacesIpv4Prefixes[] ipv4Prefixes) {
        this.ipv4Prefixes = ipv4Prefixes;
        return this;
    }
    
    
    public Long ipv6AddressCount;
    public RunInstancesRequestNetworkInterfaces withIpv6AddressCount(Long ipv6AddressCount) {
        this.ipv6AddressCount = ipv6AddressCount;
        return this;
    }
    
    
    public RunInstancesRequestNetworkInterfacesIpv6Addresses[] ipv6Addresses;
    public RunInstancesRequestNetworkInterfaces withIpv6Addresses(RunInstancesRequestNetworkInterfacesIpv6Addresses[] ipv6Addresses) {
        this.ipv6Addresses = ipv6Addresses;
        return this;
    }
    
    
    public Long ipv6PrefixCount;
    public RunInstancesRequestNetworkInterfaces withIpv6PrefixCount(Long ipv6PrefixCount) {
        this.ipv6PrefixCount = ipv6PrefixCount;
        return this;
    }
    
    
    public RunInstancesRequestNetworkInterfacesIpv6Prefixes[] ipv6Prefixes;
    public RunInstancesRequestNetworkInterfaces withIpv6Prefixes(RunInstancesRequestNetworkInterfacesIpv6Prefixes[] ipv6Prefixes) {
        this.ipv6Prefixes = ipv6Prefixes;
        return this;
    }
    
    
    public Long networkCardIndex;
    public RunInstancesRequestNetworkInterfaces withNetworkCardIndex(Long networkCardIndex) {
        this.networkCardIndex = networkCardIndex;
        return this;
    }
    
    
    public String networkInterfaceId;
    public RunInstancesRequestNetworkInterfaces withNetworkInterfaceId(String networkInterfaceId) {
        this.networkInterfaceId = networkInterfaceId;
        return this;
    }
    
    
    public String privateIpAddress;
    public RunInstancesRequestNetworkInterfaces withPrivateIpAddress(String privateIpAddress) {
        this.privateIpAddress = privateIpAddress;
        return this;
    }
    
    
    public RunInstancesRequestNetworkInterfacesPrivateIpAddresses[] privateIpAddresses;
    public RunInstancesRequestNetworkInterfaces withPrivateIpAddresses(RunInstancesRequestNetworkInterfacesPrivateIpAddresses[] privateIpAddresses) {
        this.privateIpAddresses = privateIpAddresses;
        return this;
    }
    
    
    public Long secondaryPrivateIpAddressCount;
    public RunInstancesRequestNetworkInterfaces withSecondaryPrivateIpAddressCount(Long secondaryPrivateIpAddressCount) {
        this.secondaryPrivateIpAddressCount = secondaryPrivateIpAddressCount;
        return this;
    }
    
    
    public String subnetId;
    public RunInstancesRequestNetworkInterfaces withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }
    
}
