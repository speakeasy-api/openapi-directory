/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Error - Type that defines the fields that can be returned in an error.
 */
public class Error {
    /**
     * Identifies whether the error was in the REQUEST or happened when running the APPLICATION.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public String category;

    public Error withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * The primary system where the error occurred. This is relevant for application errors. For Analytics errors, it always has the value API_ANALYTICS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain")
    public String domain;

    public Error withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * A positive integer that uniquely identifies the specific error condition that occurred. Your application can use error codes as identifiers in your customized error-handling algorithms. Traffic report error IDs range from 50001 to 50500.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorId")
    public Integer errorId;

    public Error withErrorId(Integer errorId) {
        this.errorId = errorId;
        return this;
    }
    
    /**
     * Identifies specific request elements associated with the error, if any. inputRefId's response is format specific. For JSON, use JSONPath notation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputRefIds")
    public String[] inputRefIds;

    public Error withInputRefIds(String[] inputRefIds) {
        this.inputRefIds = inputRefIds;
        return this;
    }
    
    /**
     * A more detailed explanation of the error than given in the message error field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longMessage")
    public String longMessage;

    public Error withLongMessage(String longMessage) {
        this.longMessage = longMessage;
        return this;
    }
    
    /**
     * Information on how to correct the problem, in the end user's terms and language where applicable. Its value is at most 50 characters long. If applicable, the value is localized in the end user's requested locale.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;

    public Error withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * Identifies specific response elements associated with the error, if any. Path format is the same as inputRefId.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputRefIds")
    public String[] outputRefIds;

    public Error withOutputRefIds(String[] outputRefIds) {
        this.outputRefIds = outputRefIds;
        return this;
    }
    
    /**
     * This optional list of name/value pairs that contain context-specific ErrorParameter objects, with each item in the list being a parameter (or input field name) that caused an error condition. Each ErrorParameter object consists of two fields, a name and a value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public ErrorParameter[] parameters;

    public Error withParameters(ErrorParameter[] parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * If present, indicates which subsystem in which the error occurred.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subdomain")
    public String subdomain;

    public Error withSubdomain(String subdomain) {
        this.subdomain = subdomain;
        return this;
    }
    
    public Error(){}
}
