// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CancelReplicationTaskAssessmentRunXAmzTargetEnum
type CancelReplicationTaskAssessmentRunXAmzTargetEnum string

const (
	CancelReplicationTaskAssessmentRunXAmzTargetEnumAmazonDmSv20160101CancelReplicationTaskAssessmentRun CancelReplicationTaskAssessmentRunXAmzTargetEnum = "AmazonDMSv20160101.CancelReplicationTaskAssessmentRun"
)

func (e *CancelReplicationTaskAssessmentRunXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonDMSv20160101.CancelReplicationTaskAssessmentRun":
		*e = CancelReplicationTaskAssessmentRunXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelReplicationTaskAssessmentRunXAmzTargetEnum: %s", s)
	}
}

type CancelReplicationTaskAssessmentRunHeaders struct {
	XAmzAlgorithm     *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CancelReplicationTaskAssessmentRunXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CancelReplicationTaskAssessmentRunRequest struct {
	Headers CancelReplicationTaskAssessmentRunHeaders
	Request shared.CancelReplicationTaskAssessmentRunMessage `request:"mediaType=application/json"`
}

type CancelReplicationTaskAssessmentRunResponse struct {
	// AccessDeniedFault
	AccessDeniedFault interface{}
	// Success
	CancelReplicationTaskAssessmentRunResponse *shared.CancelReplicationTaskAssessmentRunResponse
	ContentType                                string
	// InvalidResourceStateFault
	InvalidResourceStateFault interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
}
