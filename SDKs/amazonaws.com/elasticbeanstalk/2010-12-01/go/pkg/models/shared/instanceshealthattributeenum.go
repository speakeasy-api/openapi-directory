// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstancesHealthAttributeEnum string

const (
	InstancesHealthAttributeEnumHealthStatus       InstancesHealthAttributeEnum = "HealthStatus"
	InstancesHealthAttributeEnumColor              InstancesHealthAttributeEnum = "Color"
	InstancesHealthAttributeEnumCauses             InstancesHealthAttributeEnum = "Causes"
	InstancesHealthAttributeEnumApplicationMetrics InstancesHealthAttributeEnum = "ApplicationMetrics"
	InstancesHealthAttributeEnumRefreshedAt        InstancesHealthAttributeEnum = "RefreshedAt"
	InstancesHealthAttributeEnumLaunchedAt         InstancesHealthAttributeEnum = "LaunchedAt"
	InstancesHealthAttributeEnumSystem             InstancesHealthAttributeEnum = "System"
	InstancesHealthAttributeEnumDeployment         InstancesHealthAttributeEnum = "Deployment"
	InstancesHealthAttributeEnumAvailabilityZone   InstancesHealthAttributeEnum = "AvailabilityZone"
	InstancesHealthAttributeEnumInstanceType       InstancesHealthAttributeEnum = "InstanceType"
	InstancesHealthAttributeEnumAll                InstancesHealthAttributeEnum = "All"
)

func (e InstancesHealthAttributeEnum) ToPointer() *InstancesHealthAttributeEnum {
	return &e
}

func (e *InstancesHealthAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HealthStatus":
		fallthrough
	case "Color":
		fallthrough
	case "Causes":
		fallthrough
	case "ApplicationMetrics":
		fallthrough
	case "RefreshedAt":
		fallthrough
	case "LaunchedAt":
		fallthrough
	case "System":
		fallthrough
	case "Deployment":
		fallthrough
	case "AvailabilityZone":
		fallthrough
	case "InstanceType":
		fallthrough
	case "All":
		*e = InstancesHealthAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstancesHealthAttributeEnum: %v", v)
	}
}
