// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RequestRoomRescueKeyPairsPathParams struct {
	// Room ID
	RoomID int64 `pathParam:"style=simple,explode=false,name=room_id"`
}

// RequestRoomRescueKeyPairsXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type RequestRoomRescueKeyPairsXSdsDateFormatEnum string

const (
	RequestRoomRescueKeyPairsXSdsDateFormatEnumUtc    RequestRoomRescueKeyPairsXSdsDateFormatEnum = "UTC"
	RequestRoomRescueKeyPairsXSdsDateFormatEnumLocal  RequestRoomRescueKeyPairsXSdsDateFormatEnum = "LOCAL"
	RequestRoomRescueKeyPairsXSdsDateFormatEnumOffset RequestRoomRescueKeyPairsXSdsDateFormatEnum = "OFFSET"
	RequestRoomRescueKeyPairsXSdsDateFormatEnumEpoch  RequestRoomRescueKeyPairsXSdsDateFormatEnum = "EPOCH"
	RequestRoomRescueKeyPairsXSdsDateFormatEnumLeet   RequestRoomRescueKeyPairsXSdsDateFormatEnum = "LEET"
)

func (e *RequestRoomRescueKeyPairsXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = RequestRoomRescueKeyPairsXSdsDateFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestRoomRescueKeyPairsXSdsDateFormatEnum: %s", s)
	}
}

type RequestRoomRescueKeyPairsHeaders struct {
	// Authentication token
	XSdsAuthToken *string `header:"style=simple,explode=false,name=X-Sds-Auth-Token"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *RequestRoomRescueKeyPairsXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
}

type RequestRoomRescueKeyPairsRequest struct {
	PathParams RequestRoomRescueKeyPairsPathParams
	Headers    RequestRoomRescueKeyPairsHeaders
}

type RequestRoomRescueKeyPairsResponse struct {
	ContentType string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// No Content
	UserKeyPairContainers []shared.UserKeyPairContainerOutput
}
