/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LineItemPricing } from "./lineitempricing";
import { LineItemTaxCollector } from "./lineitemtaxcollector";
import { Expose, Type } from "class-transformer";

/**
 * The unit of time that periodCount is measured in
 */
export enum LineItemPeriodUnitEnum {
  Month = "MONTH",
  Quarter = "QUARTER",
  SemiAnnual = "SEMI_ANNUAL",
  Year = "YEAR",
  OneTime = "ONE_TIME",
}

export class LineItem extends SpeakeasyBase {
  /**
   * A collection of domain names purchased if the current product is domain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domains" })
  domains?: string[];

  /**
   * Human readable description of the current product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  @SpeakeasyMetadata()
  @Expose({ name: "period" })
  period?: number;

  /**
   * The unit of time that periodCount is measured in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodUnit" })
  periodUnit?: LineItemPeriodUnitEnum;

  /**
   * Unique identifier of the current product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pfid" })
  pfid?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pricing" })
  @Type(() => LineItemPricing)
  pricing: LineItemPricing;

  /**
   * Number of the current product included in the specified order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity: number;

  @SpeakeasyMetadata()
  @Expose({ name: "taxCollector" })
  @Type(() => LineItemTaxCollector)
  taxCollector?: LineItemTaxCollector;
}
