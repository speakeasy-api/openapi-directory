<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ScheduleTerminalActionsRequest
{
    /**
     * Information about the action to take.
     * 
     * @var mixed $actionDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('actionDetails')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $actionDetails = null;
    
    /**
     * The date and time when the action should happen. 
     * 
     * Format: [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339), but without the **Z** before the time offset. For example, **2021-11-15T12:16:21+01:00** 
     * The action is sent with the first [maintenance call](https://docs.adyen.com/point-of-sale/automating-terminal-management/terminal-actions-api#when-actions-take-effect) after the specified date and time in the time zone of the terminal. 
     * An empty value causes the action to be sent as soon as possible: at the next maintenance call.
     * 
     * @var ?string $scheduledAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduledAt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scheduledAt = null;
    
    /**
     * The unique ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores). If present, all terminals in the `terminalIds` list must be assigned to this store.
     * 
     * @var ?string $storeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('storeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $storeId = null;
    
    /**
     * A list of unique IDs of the terminals to apply the action to. You can extract the IDs from the [GET `/terminals`](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/terminals) response. Maximum length: 100 IDs.
     * 
     * @var ?array<string> $terminalIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('terminalIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $terminalIds = null;
    
	public function __construct()
	{
		$this->actionDetails = null;
		$this->scheduledAt = null;
		$this->storeId = null;
		$this->terminalIds = null;
	}
}
