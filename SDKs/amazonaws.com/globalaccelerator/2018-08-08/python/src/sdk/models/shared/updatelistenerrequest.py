"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import clientaffinity_enum as shared_clientaffinity_enum
from ..shared import portrange as shared_portrange
from ..shared import protocol_enum as shared_protocol_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateListenerRequest:
    
    listener_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ListenerArn') }})  
    client_affinity: Optional[shared_clientaffinity_enum.ClientAffinityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientAffinity'), 'exclude': lambda f: f is None }})  
    port_ranges: Optional[list[shared_portrange.PortRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PortRanges'), 'exclude': lambda f: f is None }})  
    protocol: Optional[shared_protocol_enum.ProtocolEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Protocol'), 'exclude': lambda f: f is None }})  
    