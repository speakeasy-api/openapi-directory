"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import trunking_v1_trunk_origination_url as shared_trunking_v1_trunk_origination_url
from typing import Optional

CREATE_ORIGINATION_URL_SERVERS = [
	"https://trunking.twilio.com",
]


@dataclasses.dataclass
class CreateOriginationURLSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateOriginationURLCreateOriginationURLRequest:
    
    enabled: bool = dataclasses.field(metadata={'form': { 'field_name': 'Enabled' }})
    r"""Whether the URL is enabled. The default is `true`."""  
    friendly_name: str = dataclasses.field(metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you create to describe the resource. It can be up to 64 characters long."""  
    priority: int = dataclasses.field(metadata={'form': { 'field_name': 'Priority' }})
    r"""The relative importance of the URI. Can be an integer from 0 to 65535, inclusive, and the default is 10. The lowest number represents the most important URI."""  
    sip_url: str = dataclasses.field(metadata={'form': { 'field_name': 'SipUrl' }})
    r"""The SIP address you want Twilio to route your Origination calls to. This must be a `sip:` schema."""  
    weight: int = dataclasses.field(metadata={'form': { 'field_name': 'Weight' }})
    r"""The value that determines the relative share of the load the URI should receive compared to other URIs with the same priority. Can be an integer from 1 to 65535, inclusive, and the default is 10. URLs with higher values receive more load than those with lower ones with the same priority."""  
    

@dataclasses.dataclass
class CreateOriginationURLRequest:
    
    trunk_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'TrunkSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Trunk to associate the resource with."""  
    request_body: Optional[CreateOriginationURLCreateOriginationURLRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateOriginationURLResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    trunking_v1_trunk_origination_url: Optional[shared_trunking_v1_trunk_origination_url.TrunkingV1TrunkOriginationURL] = dataclasses.field(default=None)
    r"""Created"""  
    