// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EBSMetricNameEnum string

const (
	EBSMetricNameEnumVolumeReadOpsPerSecond    EBSMetricNameEnum = "VolumeReadOpsPerSecond"
	EBSMetricNameEnumVolumeWriteOpsPerSecond   EBSMetricNameEnum = "VolumeWriteOpsPerSecond"
	EBSMetricNameEnumVolumeReadBytesPerSecond  EBSMetricNameEnum = "VolumeReadBytesPerSecond"
	EBSMetricNameEnumVolumeWriteBytesPerSecond EBSMetricNameEnum = "VolumeWriteBytesPerSecond"
)

func (e EBSMetricNameEnum) ToPointer() *EBSMetricNameEnum {
	return &e
}

func (e *EBSMetricNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VolumeReadOpsPerSecond":
		fallthrough
	case "VolumeWriteOpsPerSecond":
		fallthrough
	case "VolumeReadBytesPerSecond":
		fallthrough
	case "VolumeWriteBytesPerSecond":
		*e = EBSMetricNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EBSMetricNameEnum: %v", v)
	}
}
