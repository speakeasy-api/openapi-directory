<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PostCustomObjectDefinitionsRequestDefinition
{
    /**
     * The set of fields that are allowed to be queried on. Queries on non-filterable fields will be rejected. You can not change a non-filterable field to filterable.
     * 
     * @var ?array<string> $filterable
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterable')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filterable = null;
    
    /**
     * A UI label for the custom object
     * 
     * @var string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $label;
    
    /**
     * The API name of the custom object
     * 
     * @var string $object
     */
	#[\JMS\Serializer\Annotation\SerializedName('object')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $object;
    
    /**
     * $properties
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\PostCustomObjectDefinitionFieldDefinitionRequest> $properties
     */
	#[\JMS\Serializer\Annotation\SerializedName('properties')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\PostCustomObjectDefinitionFieldDefinitionRequest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $properties = null;
    
    /**
     * An array of relationships with Zuora objects or other custom objects. You can add at most 2 `manyToOne` relationships when creating a custom field definition.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PostCustomObjectDefinitionsRequestDefinitionRelationships> $relationships
     */
	#[\JMS\Serializer\Annotation\SerializedName('relationships')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PostCustomObjectDefinitionsRequestDefinitionRelationships>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relationships = null;
    
    /**
     * The required fields of the custom object. You can change required fields to optional. However, you can only change optional fields to required on the custom objects with no records.
     * 
     * @var ?array<string> $required
     */
	#[\JMS\Serializer\Annotation\SerializedName('required')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $required = null;
    
	public function __construct()
	{
		$this->filterable = null;
		$this->label = "";
		$this->object = "";
		$this->properties = null;
		$this->relationships = null;
		$this->required = null;
	}
}
