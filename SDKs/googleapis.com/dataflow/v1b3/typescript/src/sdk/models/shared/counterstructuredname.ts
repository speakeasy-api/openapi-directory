/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * One of the standard Origins defined above.
 */
export enum CounterStructuredNameOriginEnum {
  System = "SYSTEM",
  User = "USER",
}

/**
 * Portion of this counter, either key or value.
 */
export enum CounterStructuredNamePortionEnum {
  All = "ALL",
  Key = "KEY",
  Value = "VALUE",
}

/**
 * Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job.
 */
export class CounterStructuredName extends SpeakeasyBase {
  /**
   * Name of the optimized step being executed by the workers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "componentStepName" })
  componentStepName?: string;

  /**
   * Name of the stage. An execution step contains multiple component steps.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionStepName" })
  executionStepName?: string;

  /**
   * Index of an input collection that's being read from/written to as a side input. The index identifies a step's side inputs starting by 1 (e.g. the first side input has input_index 1, the third has input_index 3). Side inputs are identified by a pair of (original_step_name, input_index). This field helps uniquely identify them.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inputIndex" })
  inputIndex?: number;

  /**
   * Counter name. Not necessarily globally-unique, but unique within the context of the other fields. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * One of the standard Origins defined above.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin?: CounterStructuredNameOriginEnum;

  /**
   * A string containing a more specific namespace of the counter's origin.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originNamespace" })
  originNamespace?: string;

  /**
   * The step name requesting an operation, such as GBK. I.e. the ParDo causing a read/write from shuffle to occur, or a read from side inputs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originalRequestingStepName" })
  originalRequestingStepName?: string;

  /**
   * System generated name of the original step in the user's graph, before optimization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originalStepName" })
  originalStepName?: string;

  /**
   * Portion of this counter, either key or value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portion" })
  portion?: CounterStructuredNamePortionEnum;

  /**
   * ID of a particular worker.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workerId" })
  workerId?: string;
}
