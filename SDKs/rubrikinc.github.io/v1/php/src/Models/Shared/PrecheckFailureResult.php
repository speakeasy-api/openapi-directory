<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PrecheckFailureResult
{
    /**
     * The cause of the failure.
     * 
     * @var ?string $cause
     */
	#[\JMS\Serializer\Annotation\SerializedName('cause')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cause = null;
    
    /**
     * The precheck failure error code. This is used as a reference to a KB article about the error.
     * 
     * @var string $errorCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('errorCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $errorCode;
    
    /**
     * The precheck failure message.
     * 
     * @var string $errorMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('errorMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $errorMessage;
    
    /**
     * The ID of the precheck error message.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Specifies whether a failed precheck prevents an upgrade from starting.
     * 
     * @var bool $isUpgradeBlocker
     */
	#[\JMS\Serializer\Annotation\SerializedName('isUpgradeBlocker')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isUpgradeBlocker;
    
    /**
     * Can the user fix this precheck failure.
     * 
     * @var bool $isUserRemediable
     */
	#[\JMS\Serializer\Annotation\SerializedName('isUserRemediable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isUserRemediable;
    
    /**
     * The name of the failed upgrade precheck.
     * 
     * @var string $precheckName
     */
	#[\JMS\Serializer\Annotation\SerializedName('precheckName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $precheckName;
    
    /**
     * The user action needed to recover from this failure.
     * 
     * @var ?string $remedy
     */
	#[\JMS\Serializer\Annotation\SerializedName('remedy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $remedy = null;
    
	public function __construct()
	{
		$this->cause = null;
		$this->errorCode = "";
		$this->errorMessage = "";
		$this->id = "";
		$this->isUpgradeBlocker = false;
		$this->isUserRemediable = false;
		$this->precheckName = "";
		$this->remedy = null;
	}
}
