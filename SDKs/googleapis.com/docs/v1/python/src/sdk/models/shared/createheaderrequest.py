"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import location as shared_location
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateHeaderRequestTypeEnum(str, Enum):
    r"""The type of header to create."""
    HEADER_FOOTER_TYPE_UNSPECIFIED = 'HEADER_FOOTER_TYPE_UNSPECIFIED'
    DEFAULT = 'DEFAULT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateHeaderRequest:
    r"""Creates a Header. The new header is applied to the SectionStyle at the location of the SectionBreak if specified, otherwise it is applied to the DocumentStyle. If a header of the specified type already exists, a 400 bad request error is returned."""
    
    section_break_location: Optional[shared_location.Location] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionBreakLocation'), 'exclude': lambda f: f is None }})
    r"""A particular location in the document."""  
    type: Optional[CreateHeaderRequestTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of header to create."""  
    