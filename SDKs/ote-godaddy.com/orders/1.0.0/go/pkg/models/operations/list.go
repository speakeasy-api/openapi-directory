// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListSortEnum - Property name that will be used to sort results. '-' indicates descending
type ListSortEnum string

const (
	ListSortEnumCreatedAt         ListSortEnum = "createdAt"
	ListSortEnumMinusCreatedAt    ListSortEnum = "-createdAt"
	ListSortEnumOrderID           ListSortEnum = "orderId"
	ListSortEnumMinusOrderID      ListSortEnum = "-orderId"
	ListSortEnumPricingTotal      ListSortEnum = "pricing.total"
	ListSortEnumMinusPricingTotal ListSortEnum = "-pricing.total"
)

func (e ListSortEnum) ToPointer() *ListSortEnum {
	return &e
}

func (e *ListSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "createdAt":
		fallthrough
	case "-createdAt":
		fallthrough
	case "orderId":
		fallthrough
	case "-orderId":
		fallthrough
	case "pricing.total":
		fallthrough
	case "-pricing.total":
		*e = ListSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSortEnum: %v", v)
	}
}

type ListRequest struct {
	// Unique identifier of the Market in which the request is happening
	XMarketID *string `header:"style=simple,explode=false,name=X-Market-Id"`
	// Shopper ID to be operated on, if different from JWT<br/><b>Reseller subaccounts are not supported</b>
	XShopperID *string `header:"style=simple,explode=false,name=X-Shopper-Id"`
	// Domain name to use as the filter of results
	Domain *string `queryParam:"style=form,explode=true,name=domain"`
	// Maximum number of items to return
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Number of results to skip for pagination
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Parent order id to use as the filter of results
	ParentOrderID *string `queryParam:"style=form,explode=true,name=parentOrderId"`
	// Payment profile id to use as the filter of results
	PaymentProfileID *int64 `queryParam:"style=form,explode=true,name=paymentProfileId"`
	// End of range indicating what time-frame should be returned. Inclusive
	PeriodEnd *string `queryParam:"style=form,explode=true,name=periodEnd"`
	// Start of range indicating what time-frame should be returned. Inclusive
	PeriodStart *string `queryParam:"style=form,explode=true,name=periodStart"`
	// Product group id to use as the filter of results
	ProductGroupID *int64 `queryParam:"style=form,explode=true,name=productGroupId"`
	// Property name that will be used to sort results. '-' indicates descending
	Sort *ListSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type ListResponse struct {
	Body        []byte
	ContentType string
	// Request was malformed
	Error *shared.Error
	// Too many requests received within interval
	ErrorLimit *shared.ErrorLimit
	// Request was successful
	OrderList   *shared.OrderList
	StatusCode  int
	RawResponse *http.Response
}
