/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateImagePipelineResponse {
    /**
     * CallRateLimitExceededException
     */
    
    public Object callRateLimitExceededException;

    public CreateImagePipelineResponse withCallRateLimitExceededException(Object callRateLimitExceededException) {
        this.callRateLimitExceededException = callRateLimitExceededException;
        return this;
    }
    
    /**
     * ClientException
     */
    
    public Object clientException;

    public CreateImagePipelineResponse withClientException(Object clientException) {
        this.clientException = clientException;
        return this;
    }
    
    
    public String contentType;

    public CreateImagePipelineResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateImagePipelineResponse createImagePipelineResponse;

    public CreateImagePipelineResponse withCreateImagePipelineResponse(org.openapis.openapi.models.shared.CreateImagePipelineResponse createImagePipelineResponse) {
        this.createImagePipelineResponse = createImagePipelineResponse;
        return this;
    }
    
    /**
     * ForbiddenException
     */
    
    public Object forbiddenException;

    public CreateImagePipelineResponse withForbiddenException(Object forbiddenException) {
        this.forbiddenException = forbiddenException;
        return this;
    }
    
    /**
     * IdempotentParameterMismatchException
     */
    
    public Object idempotentParameterMismatchException;

    public CreateImagePipelineResponse withIdempotentParameterMismatchException(Object idempotentParameterMismatchException) {
        this.idempotentParameterMismatchException = idempotentParameterMismatchException;
        return this;
    }
    
    /**
     * InvalidRequestException
     */
    
    public Object invalidRequestException;

    public CreateImagePipelineResponse withInvalidRequestException(Object invalidRequestException) {
        this.invalidRequestException = invalidRequestException;
        return this;
    }
    
    /**
     * ResourceAlreadyExistsException
     */
    
    public Object resourceAlreadyExistsException;

    public CreateImagePipelineResponse withResourceAlreadyExistsException(Object resourceAlreadyExistsException) {
        this.resourceAlreadyExistsException = resourceAlreadyExistsException;
        return this;
    }
    
    /**
     * ResourceInUseException
     */
    
    public Object resourceInUseException;

    public CreateImagePipelineResponse withResourceInUseException(Object resourceInUseException) {
        this.resourceInUseException = resourceInUseException;
        return this;
    }
    
    /**
     * ServiceException
     */
    
    public Object serviceException;

    public CreateImagePipelineResponse withServiceException(Object serviceException) {
        this.serviceException = serviceException;
        return this;
    }
    
    /**
     * ServiceQuotaExceededException
     */
    
    public Object serviceQuotaExceededException;

    public CreateImagePipelineResponse withServiceQuotaExceededException(Object serviceQuotaExceededException) {
        this.serviceQuotaExceededException = serviceQuotaExceededException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateImagePipelineResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateImagePipelineResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ServiceUnavailableException
     */
    
    public Object serviceUnavailableException;

    public CreateImagePipelineResponse withServiceUnavailableException(Object serviceUnavailableException) {
        this.serviceUnavailableException = serviceUnavailableException;
        return this;
    }
    
    public CreateImagePipelineResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
