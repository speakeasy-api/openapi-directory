// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListDirectoriesRequestBodyStateEnum - The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.
type ListDirectoriesRequestBodyStateEnum string

const (
	ListDirectoriesRequestBodyStateEnumEnabled  ListDirectoriesRequestBodyStateEnum = "ENABLED"
	ListDirectoriesRequestBodyStateEnumDisabled ListDirectoriesRequestBodyStateEnum = "DISABLED"
	ListDirectoriesRequestBodyStateEnumDeleted  ListDirectoriesRequestBodyStateEnum = "DELETED"
)

func (e *ListDirectoriesRequestBodyStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "DELETED":
		*e = ListDirectoriesRequestBodyStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDirectoriesRequestBodyStateEnum: %s", s)
	}
}

type ListDirectoriesRequestBody struct {
	// The maximum number of results to retrieve.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The pagination token.
	NextToken *string `json:"NextToken,omitempty"`
	// The state of the directories in the list. Can be either Enabled, Disabled, or Deleted.
	State *ListDirectoriesRequestBodyStateEnum `json:"state,omitempty"`
}

type ListDirectoriesRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                    `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       ListDirectoriesRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListDirectoriesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidArnException
	InvalidArnException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	ListDirectoriesResponse *shared.ListDirectoriesResponse
	StatusCode              int
	RawResponse             *http.Response
	// RetryableConflictException
	RetryableConflictException interface{}
	// ValidationException
	ValidationException interface{}
}
