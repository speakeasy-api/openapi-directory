Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/googleapis.com/migrationcenter/v1alpha1/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.MigrationcenterProjectsLocationsAssetsAggregateValuesRequest(
    dollar_xgafv="2",
    aggregate_assets_values_request=shared.AggregateAssetsValuesRequest(
        aggregations=[
            shared.Aggregation(
                count={
                    "quibusdam": "unde",
                    "nulla": "corrupti",
                    "illum": "vel",
                },
                field="error",
                frequency={
                    "suscipit": "iure",
                    "magnam": "debitis",
                    "ipsa": "delectus",
                },
                histogram=shared.AggregationHistogram(
                    lower_bounds=[
                        3834.41,
                        4776.65,
                    ],
                ),
                sum={
                    "placeat": "voluptatum",
                    "iusto": "excepturi",
                    "nisi": "recusandae",
                    "temporibus": "ab",
                },
            ),
            shared.Aggregation(
                count={
                    "veritatis": "deserunt",
                    "perferendis": "ipsam",
                },
                field="repellendus",
                frequency={
                    "quo": "odit",
                    "at": "at",
                    "maiores": "molestiae",
                    "quod": "quod",
                },
                histogram=shared.AggregationHistogram(
                    lower_bounds=[
                        5204.78,
                        7805.29,
                    ],
                ),
                sum={
                    "dicta": "nam",
                    "officia": "occaecati",
                    "fugit": "deleniti",
                },
            ),
            shared.Aggregation(
                count={
                    "optio": "totam",
                    "beatae": "commodi",
                    "molestiae": "modi",
                    "qui": "impedit",
                },
                field="cum",
                frequency={
                    "ipsum": "excepturi",
                    "aspernatur": "perferendis",
                },
                histogram=shared.AggregationHistogram(
                    lower_bounds=[
                        6176.36,
                        1496.75,
                    ],
                ),
                sum={
                    "dolor": "natus",
                    "laboriosam": "hic",
                    "saepe": "fuga",
                },
            ),
        ],
        filter="in",
    ),
    access_token="corporis",
    alt="media",
    callback="iure",
    fields_="saepe",
    key="quidem",
    oauth_token="architecto",
    parent="ipsa",
    pretty_print=False,
    quota_user="reiciendis",
    upload_type="est",
    upload_protocol="mollitia",
)
    
res = s.projects.migrationcenter_projects_locations_assets_aggregate_values(req, operations.MigrationcenterProjectsLocationsAssetsAggregateValuesSecurity(
    oauth2="Bearer YOUR_ACCESS_TOKEN_HERE",
    oauth2c="Bearer YOUR_ACCESS_TOKEN_HERE",
))

if res.aggregate_assets_values_response is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### projects

* `migrationcenter_projects_locations_assets_aggregate_values` - Aggregates the requested fields based on provided function.
* `migrationcenter_projects_locations_assets_batch_delete` - Deletes list of Assets.
* `migrationcenter_projects_locations_assets_batch_update` - Updates the parameters of a list of assets.
* `migrationcenter_projects_locations_assets_list` - Lists all the assets in a given project and location.
* `migrationcenter_projects_locations_assets_report_asset_frames` - Reports a set of frames.
* `migrationcenter_projects_locations_groups_add_assets` - Adds assets to a group.
* `migrationcenter_projects_locations_groups_create` - Creates a new group in a given project and location.
* `migrationcenter_projects_locations_groups_list` - Lists all groups in a given project and location.
* `migrationcenter_projects_locations_groups_remove_assets` - Removes assets from a group.
* `migrationcenter_projects_locations_import_jobs_create` - Creates an import job.
* `migrationcenter_projects_locations_import_jobs_import_data_files_create` - Creates an import data file.
* `migrationcenter_projects_locations_import_jobs_import_data_files_list` - List import data files.
* `migrationcenter_projects_locations_import_jobs_list` - Lists all import jobs.
* `migrationcenter_projects_locations_import_jobs_run` - Runs an import job.
* `migrationcenter_projects_locations_import_jobs_validate` - Validates an import job.
* `migrationcenter_projects_locations_list` - Lists information about the supported locations for this service.
* `migrationcenter_projects_locations_operations_cancel` - Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
* `migrationcenter_projects_locations_operations_list` - Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
* `migrationcenter_projects_locations_preference_sets_create` - Creates a new preference set in a given project and location.
* `migrationcenter_projects_locations_preference_sets_list` - Lists all the preference sets in a given project and location.
* `migrationcenter_projects_locations_sources_create` - Creates a new source in a given project and location.
* `migrationcenter_projects_locations_sources_delete` - Deletes a source.
* `migrationcenter_projects_locations_sources_get` - Gets the details of a source.
* `migrationcenter_projects_locations_sources_list` - Lists all the sources in a given project and location.
* `migrationcenter_projects_locations_sources_patch` - Updates the parameters of a source.
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
