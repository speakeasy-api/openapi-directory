/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PUTSrpUpdateType - Container for custom fields of a Rate Plan object.
 * 
 */
public class PUTSrpUpdateType {
    /**
     * Container for one or more product rate plan charges. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeUpdateDetails")
    public PUTScUpdateType[] chargeUpdateDetails;
    public PUTSrpUpdateType withChargeUpdateDetails(PUTScUpdateType[] chargeUpdateDetails) {
        this.chargeUpdateDetails = chargeUpdateDetails;
        return this;
    }
    
    /**
     * The date when the amendment changes take effect. The format of the date is yyyy-mm-dd.
     * 
     * If there is already a future-dated Update Product amendment on the subscription, the `specificUpdateDate` field will be used instead of this field to specify when the Update Product amendment takes effect.
     * 
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("contractEffectiveDate")
    public LocalDate contractEffectiveDate;
    public PUTSrpUpdateType withContractEffectiveDate(LocalDate contractEffectiveDate) {
        this.contractEffectiveDate = contractEffectiveDate;
        return this;
    }
    
    /**
     * The date when the customer accepts the contract in yyyy-mm-dd format.
     * 
     * If this field is not set:
     * 
     * * If the `serviceActivationDate` field is not set, the value of this field is set to be the contract effective date.
     * * If the `serviceActivationDate` field is set, the value of this field is set to be the service activation date.
     * 
     * The billing trigger dates must follow this rule:
     * 
     * contractEffectiveDate &lt;= serviceActivationDate &lt;= contractAcceptanceDate
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("customerAcceptanceDate")
    public LocalDate customerAcceptanceDate;
    public PUTSrpUpdateType withCustomerAcceptanceDate(LocalDate customerAcceptanceDate) {
        this.customerAcceptanceDate = customerAcceptanceDate;
        return this;
    }
    
    /**
     * ID of a rate plan for this subscription.
     * 
     */
    @JsonProperty("ratePlanId")
    public String ratePlanId;
    public PUTSrpUpdateType withRatePlanId(String ratePlanId) {
        this.ratePlanId = ratePlanId;
        return this;
    }
    
    /**
     * The date when the update amendment is activated in yyyy-mm-dd format.
     * 
     * You must specify a Service Activation date if the Customer Acceptance date is set. If the Customer Acceptance date is not set, the value of the `serviceActivationDate` field defaults to be the Contract Effective Date.
     * 
     * The billing trigger dates must follow this rule:
     * 
     * contractEffectiveDate &lt;= serviceActivationDate &lt;= contractAcceptanceDate
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceActivationDate")
    public LocalDate serviceActivationDate;
    public PUTSrpUpdateType withServiceActivationDate(LocalDate serviceActivationDate) {
        this.serviceActivationDate = serviceActivationDate;
        return this;
    }
    
    /**
     * The date when the Update Product amendment takes effect. This field is only applicable if there is already a future-dated Update Product amendment on the subscription. The format of the date is yyyy-mm-dd.
     * 
     * Required only for Update Product amendments if there is already a future-dated Update Product amendment on the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("specificUpdateDate")
    public LocalDate specificUpdateDate;
    public PUTSrpUpdateType withSpecificUpdateDate(LocalDate specificUpdateDate) {
        this.specificUpdateDate = specificUpdateDate;
        return this;
    }
    
}
