"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ekscontainerdetail as shared_ekscontainerdetail
from ..shared import eksvolume as shared_eksvolume
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EksPodPropertiesDetail:
    r"""The details for the pod."""
    
    containers: Optional[list[shared_ekscontainerdetail.EksContainerDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containers'), 'exclude': lambda f: f is None }})  
    dns_policy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnsPolicy'), 'exclude': lambda f: f is None }})  
    host_network: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hostNetwork'), 'exclude': lambda f: f is None }})  
    node_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeName'), 'exclude': lambda f: f is None }})  
    pod_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('podName'), 'exclude': lambda f: f is None }})  
    service_account_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceAccountName'), 'exclude': lambda f: f is None }})  
    volumes: Optional[list[shared_eksvolume.EksVolume]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumes'), 'exclude': lambda f: f is None }})  
    