// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// StaticFilesHandler - Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them.
type StaticFilesHandler struct {
	// Whether files should also be uploaded as code data. By default, files declared in static file handlers are uploaded as static data and are only served to end users; they cannot be read by the application. If enabled, uploads are charged against both your code and static data storage resource quotas.
	ApplicationReadable *bool `json:"applicationReadable,omitempty"`
	// Time a static file served by this handler should be cached by web proxies and browsers.
	Expiration *string `json:"expiration,omitempty"`
	// HTTP headers to use for all responses from these URLs.
	HTTPHeaders map[string]string `json:"httpHeaders,omitempty"`
	// MIME type used to serve all files served by this handler.Defaults to file-specific MIME types, which are derived from each file's filename extension.
	MimeType *string `json:"mimeType,omitempty"`
	// Path to the static files matched by the URL pattern, from the application root directory. The path can refer to text matched in groupings in the URL pattern.
	Path *string `json:"path,omitempty"`
	// Whether this handler should match the request if the file referenced by the handler does not exist.
	RequireMatchingFile *bool `json:"requireMatchingFile,omitempty"`
	// Regular expression that matches the file paths for all files that should be referenced by this handler.
	UploadPathRegex *string `json:"uploadPathRegex,omitempty"`
}
