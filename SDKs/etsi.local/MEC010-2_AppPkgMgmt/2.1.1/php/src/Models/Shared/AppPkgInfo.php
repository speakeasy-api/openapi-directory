<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AppPkgInfo - 'The data type AppPkgInfo represents the parameters for an application package resource'
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AppPkgInfo
{
    /**
     * Links to resources related to this resource.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AppPkgInfoLinks $links
     */
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AppPkgInfoLinks')]
    public AppPkgInfoLinks $links;
    
    /**
     * Additional information of application package artifacts that are not application software images. Type is TBD
     * 
     * @var mixed $additionalArtifacts
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalArtifacts')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $additionalArtifacts = null;
    
    /**
     * Identifier of this MEC application descriptor. This attribute shall be globally unique.
     * 
     * @var string $appDId
     */
	#[\JMS\Serializer\Annotation\SerializedName('appDId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $appDId;
    
    /**
     * Identifies the version of the application descriptor.
     * 
     * @var string $appDVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('appDVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $appDVersion;
    
    /**
     * Name to identify the MEC application.
     * 
     * @var string $appName
     */
	#[\JMS\Serializer\Annotation\SerializedName('appName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $appName;
    
    /**
     * Provider of the application and of the AppD.
     * 
     * @var ?string $appProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('appProvider')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $appProvider = null;
    
    /**
     * Software version of the application. This is updated when there is any change to the software in the onboarded application package.
     * 
     * @var string $appSoftwareVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('appSoftwareVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $appSoftwareVersion;
    
	#[\JMS\Serializer\Annotation\SerializedName('checksum')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Checksum')]
    public Checksum $checksum;
    
    /**
     * Identifier of the onboarded application package.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Onboarding state of application package
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnboardingStateEnum $onboardingState
     */
	#[\JMS\Serializer\Annotation\SerializedName('onboardingState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OnboardingStateEnum>')]
    public OnboardingStateEnum $onboardingState;
    
    /**
     * Operational state of the onboarded application package: Ã¢â‚¬Â¢ENABLED: the application package can be used for instantiation of new application instances. Ã¢â‚¬Â¢DISABLED: the application package cannot be used for further application instantiation requests.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AppPkgOperationalStateEnum $operationalState
     */
	#[\JMS\Serializer\Annotation\SerializedName('operationalState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AppPkgOperationalStateEnum>')]
    public AppPkgOperationalStateEnum $operationalState;
    
    /**
     * Information of application software image in application package. Type is TBD
     * 
     * @var mixed $softwareImages
     */
	#[\JMS\Serializer\Annotation\SerializedName('softwareImages')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $softwareImages;
    
    /**
     * Usage state of the onboarded instance of the application package
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\UsageStateEnum $usageState
     */
	#[\JMS\Serializer\Annotation\SerializedName('usageState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsageStateEnum>')]
    public UsageStateEnum $usageState;
    
    /**
     * 'This data type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key-value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259'
     * 
     * @var ?array<string, mixed> $userDefinedData
     */
	#[\JMS\Serializer\Annotation\SerializedName('userDefinedData')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userDefinedData = null;
    
	public function __construct()
	{
		$this->links = new \OpenAPI\OpenAPI\Models\Shared\AppPkgInfoLinks();
		$this->additionalArtifacts = null;
		$this->appDId = "";
		$this->appDVersion = "";
		$this->appName = "";
		$this->appProvider = null;
		$this->appSoftwareVersion = "";
		$this->checksum = new \OpenAPI\OpenAPI\Models\Shared\Checksum();
		$this->id = "";
		$this->onboardingState = \OpenAPI\OpenAPI\Models\Shared\OnboardingStateEnum::CREATED;
		$this->operationalState = \OpenAPI\OpenAPI\Models\Shared\AppPkgOperationalStateEnum::ENABLED;
		$this->softwareImages = null;
		$this->usageState = \OpenAPI\OpenAPI\Models\Shared\UsageStateEnum::IN_USE;
		$this->userDefinedData = null;
	}
}
