/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * UpdateEventDataStoreResponse - Success
 */
public class UpdateEventDataStoreResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdvancedEventSelectors")
    public AdvancedEventSelector[] advancedEventSelectors;

    public UpdateEventDataStoreResponse withAdvancedEventSelectors(AdvancedEventSelector[] advancedEventSelectors) {
        this.advancedEventSelectors = advancedEventSelectors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedTimestamp")
    public OffsetDateTime createdTimestamp;

    public UpdateEventDataStoreResponse withCreatedTimestamp(OffsetDateTime createdTimestamp) {
        this.createdTimestamp = createdTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EventDataStoreArn")
    public String eventDataStoreArn;

    public UpdateEventDataStoreResponse withEventDataStoreArn(String eventDataStoreArn) {
        this.eventDataStoreArn = eventDataStoreArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KmsKeyId")
    public String kmsKeyId;

    public UpdateEventDataStoreResponse withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MultiRegionEnabled")
    public Boolean multiRegionEnabled;

    public UpdateEventDataStoreResponse withMultiRegionEnabled(Boolean multiRegionEnabled) {
        this.multiRegionEnabled = multiRegionEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public UpdateEventDataStoreResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrganizationEnabled")
    public Boolean organizationEnabled;

    public UpdateEventDataStoreResponse withOrganizationEnabled(Boolean organizationEnabled) {
        this.organizationEnabled = organizationEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RetentionPeriod")
    public Long retentionPeriod;

    public UpdateEventDataStoreResponse withRetentionPeriod(Long retentionPeriod) {
        this.retentionPeriod = retentionPeriod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public EventDataStoreStatusEnum status;

    public UpdateEventDataStoreResponse withStatus(EventDataStoreStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TerminationProtectionEnabled")
    public Boolean terminationProtectionEnabled;

    public UpdateEventDataStoreResponse withTerminationProtectionEnabled(Boolean terminationProtectionEnabled) {
        this.terminationProtectionEnabled = terminationProtectionEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedTimestamp")
    public OffsetDateTime updatedTimestamp;

    public UpdateEventDataStoreResponse withUpdatedTimestamp(OffsetDateTime updatedTimestamp) {
        this.updatedTimestamp = updatedTimestamp;
        return this;
    }
    
    public UpdateEventDataStoreResponse(){}
}
