/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SecretScanningLocationCommit - Represents a 'commit' secret scanning location type. This location type shows that a secret was detected inside a commit to a repository.
 */
public class SecretScanningLocationCommit {
    /**
     * SHA-1 hash ID of the associated blob
     */
    @JsonProperty("blob_sha")
    public String blobSha;

    public SecretScanningLocationCommit withBlobSha(String blobSha) {
        this.blobSha = blobSha;
        return this;
    }
    
    /**
     * The API URL to get the associated blob resource
     */
    @JsonProperty("blob_url")
    public String blobUrl;

    public SecretScanningLocationCommit withBlobUrl(String blobUrl) {
        this.blobUrl = blobUrl;
        return this;
    }
    
    /**
     * SHA-1 hash ID of the associated commit
     */
    @JsonProperty("commit_sha")
    public String commitSha;

    public SecretScanningLocationCommit withCommitSha(String commitSha) {
        this.commitSha = commitSha;
        return this;
    }
    
    /**
     * The API URL to get the associated commit resource
     */
    @JsonProperty("commit_url")
    public String commitUrl;

    public SecretScanningLocationCommit withCommitUrl(String commitUrl) {
        this.commitUrl = commitUrl;
        return this;
    }
    
    /**
     * The column at which the secret ends within the end line when the file is interpreted as 8BIT ASCII
     */
    @JsonProperty("end_column")
    public Double endColumn;

    public SecretScanningLocationCommit withEndColumn(Double endColumn) {
        this.endColumn = endColumn;
        return this;
    }
    
    /**
     * Line number at which the secret ends in the file
     */
    @JsonProperty("end_line")
    public Double endLine;

    public SecretScanningLocationCommit withEndLine(Double endLine) {
        this.endLine = endLine;
        return this;
    }
    
    /**
     * The file path in the repository
     */
    @JsonProperty("path")
    public String path;

    public SecretScanningLocationCommit withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * The column at which the secret starts within the start line when the file is interpreted as 8BIT ASCII
     */
    @JsonProperty("start_column")
    public Double startColumn;

    public SecretScanningLocationCommit withStartColumn(Double startColumn) {
        this.startColumn = startColumn;
        return this;
    }
    
    /**
     * Line number at which the secret starts in the file
     */
    @JsonProperty("start_line")
    public Double startLine;

    public SecretScanningLocationCommit withStartLine(Double startLine) {
        this.startLine = startLine;
        return this;
    }
    
    public SecretScanningLocationCommit(@JsonProperty("blob_sha") String blobSha, @JsonProperty("blob_url") String blobUrl, @JsonProperty("commit_sha") String commitSha, @JsonProperty("commit_url") String commitUrl, @JsonProperty("end_column") Double endColumn, @JsonProperty("end_line") Double endLine, @JsonProperty("path") String path, @JsonProperty("start_column") Double startColumn, @JsonProperty("start_line") Double startLine) {
        this.blobSha = blobSha;
        this.blobUrl = blobUrl;
        this.commitSha = commitSha;
        this.commitUrl = commitUrl;
        this.endColumn = endColumn;
        this.endLine = endLine;
        this.path = path;
        this.startColumn = startColumn;
        this.startLine = startLine;
  }
}
