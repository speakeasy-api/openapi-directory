"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import drive as shared_drive
from ..shared import file as shared_file
from ..shared import teamdrive as shared_teamdrive
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Change:
    r"""A change to a file or shared drive."""
    
    change_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('changeType'), 'exclude': lambda f: f is None }})
    r"""The type of the change. Possible values are file and drive."""  
    drive: Optional[shared_drive.Drive] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drive'), 'exclude': lambda f: f is None }})
    r"""Representation of a shared drive."""  
    drive_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driveId'), 'exclude': lambda f: f is None }})
    r"""The ID of the shared drive associated with this change."""  
    file: Optional[shared_file.File] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file'), 'exclude': lambda f: f is None }})
    r"""The metadata for a file."""  
    file_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileId'), 'exclude': lambda f: f is None }})
    r"""The ID of the file which has changed."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"drive#change\\"."""  
    removed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removed'), 'exclude': lambda f: f is None }})
    r"""Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access."""  
    team_drive: Optional[shared_teamdrive.TeamDrive] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teamDrive'), 'exclude': lambda f: f is None }})
    r"""Deprecated: use the drive collection instead."""  
    team_drive_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teamDriveId'), 'exclude': lambda f: f is None }})
    r"""Deprecated - use driveId instead."""  
    time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The time of this change (RFC 3339 date-time)."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Deprecated - use changeType instead."""  
    