/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SubjectDescription - These values describe fields in an issued X.509 certificate such as the distinguished name, subject alternative names, serial number, and lifetime.
 */
public class SubjectDescription {
    /**
     * The serial number encoded in lowercase hexadecimal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hexSerialNumber")
    public String hexSerialNumber;
    public SubjectDescription withHexSerialNumber(String hexSerialNumber) {
        this.hexSerialNumber = hexSerialNumber;
        return this;
    }
    
    /**
     * For convenience, the actual lifetime of an issued certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lifetime")
    public String lifetime;
    public SubjectDescription withLifetime(String lifetime) {
        this.lifetime = lifetime;
        return this;
    }
    
    /**
     * The time after which the certificate is expired. Per RFC 5280, the validity period for a certificate is the period of time from not_before_time through not_after_time, inclusive. Corresponds to 'not_before_time' + 'lifetime' - 1 second.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notAfterTime")
    public String notAfterTime;
    public SubjectDescription withNotAfterTime(String notAfterTime) {
        this.notAfterTime = notAfterTime;
        return this;
    }
    
    /**
     * The time at which the certificate becomes valid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notBeforeTime")
    public String notBeforeTime;
    public SubjectDescription withNotBeforeTime(String notBeforeTime) {
        this.notBeforeTime = notBeforeTime;
        return this;
    }
    
    /**
     * Subject describes parts of a distinguished name that, in turn, describes the subject of the certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subject")
    public Subject subject;
    public SubjectDescription withSubject(Subject subject) {
        this.subject = subject;
        return this;
    }
    
    /**
     * SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the "common name" in the distinguished name).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjectAltName")
    public SubjectAltNames subjectAltName;
    public SubjectDescription withSubjectAltName(SubjectAltNames subjectAltName) {
        this.subjectAltName = subjectAltName;
        return this;
    }
    
}
