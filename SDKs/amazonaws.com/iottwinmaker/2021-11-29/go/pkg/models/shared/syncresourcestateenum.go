// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SyncResourceStateEnum string

const (
	SyncResourceStateEnumInitializing SyncResourceStateEnum = "INITIALIZING"
	SyncResourceStateEnumProcessing   SyncResourceStateEnum = "PROCESSING"
	SyncResourceStateEnumDeleted      SyncResourceStateEnum = "DELETED"
	SyncResourceStateEnumInSync       SyncResourceStateEnum = "IN_SYNC"
	SyncResourceStateEnumError        SyncResourceStateEnum = "ERROR"
)

func (e *SyncResourceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INITIALIZING":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "DELETED":
		fallthrough
	case "IN_SYNC":
		fallthrough
	case "ERROR":
		*e = SyncResourceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SyncResourceStateEnum: %s", s)
	}
}
