/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class StatusParams {
    /**
     * application_id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("application_id")
    public String applicationId;

    public StatusParams withApplicationId(String applicationId) {
        this.applicationId = applicationId;
        return this;
    }
    
    /**
     * in_reply_to_id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("in_reply_to_id")
    public String inReplyToId;

    public StatusParams withInReplyToId(String inReplyToId) {
        this.inReplyToId = inReplyToId;
        return this;
    }
    
    /**
     * media_ids
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media_ids")
    public String[] mediaIds;

    public StatusParams withMediaIds(String[] mediaIds) {
        this.mediaIds = mediaIds;
        return this;
    }
    
    /**
     * scheduled_at
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduled_at")
    public OffsetDateTime scheduledAt;

    public StatusParams withScheduledAt(OffsetDateTime scheduledAt) {
        this.scheduledAt = scheduledAt;
        return this;
    }
    
    /**
     * sensitive
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sensitive")
    public Boolean sensitive;

    public StatusParams withSensitive(Boolean sensitive) {
        this.sensitive = sensitive;
        return this;
    }
    
    /**
     * spoiler_text
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spoiler_text")
    public String spoilerText;

    public StatusParams withSpoilerText(String spoilerText) {
        this.spoilerText = spoilerText;
        return this;
    }
    
    /**
     * text
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;

    public StatusParams withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * visibility
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visibility")
    public String visibility;

    public StatusParams withVisibility(String visibility) {
        this.visibility = visibility;
        return this;
    }
    
    public StatusParams(){}
}
