"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldmetadata as shared_fieldmetadata
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AgeRangeTypeAgeRangeEnum(str, Enum):
    r"""The age range."""
    AGE_RANGE_UNSPECIFIED = 'AGE_RANGE_UNSPECIFIED'
    LESS_THAN_EIGHTEEN = 'LESS_THAN_EIGHTEEN'
    EIGHTEEN_TO_TWENTY = 'EIGHTEEN_TO_TWENTY'
    TWENTY_ONE_OR_OLDER = 'TWENTY_ONE_OR_OLDER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AgeRangeType:
    r"""A person's age range."""
    
    age_range: Optional[AgeRangeTypeAgeRangeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ageRange'), 'exclude': lambda f: f is None }})
    r"""The age range."""  
    metadata: Optional[shared_fieldmetadata.FieldMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Metadata about a field."""  
    