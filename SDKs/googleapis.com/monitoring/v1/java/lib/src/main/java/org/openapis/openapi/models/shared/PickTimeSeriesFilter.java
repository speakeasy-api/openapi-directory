/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PickTimeSeriesFilter - Describes a ranking-based time series filter. Each input time series is ranked with an aligner. The filter will allow up to num_time_series time series to pass through it, selecting them based on the relative ranking.For example, if ranking_method is METHOD_MEAN,direction is BOTTOM, and num_time_series is 3, then the 3 times series with the lowest mean values will pass through the filter.
 */
public class PickTimeSeriesFilter {
    /**
     * How to use the ranking to select time series that pass through the filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public PickTimeSeriesFilterDirectionEnum direction;

    public PickTimeSeriesFilter withDirection(PickTimeSeriesFilterDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * How many time series to allow to pass through the filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numTimeSeries")
    public Integer numTimeSeries;

    public PickTimeSeriesFilter withNumTimeSeries(Integer numTimeSeries) {
        this.numTimeSeries = numTimeSeries;
        return this;
    }
    
    /**
     * ranking_method is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rankingMethod")
    public PickTimeSeriesFilterRankingMethodEnum rankingMethod;

    public PickTimeSeriesFilter withRankingMethod(PickTimeSeriesFilterRankingMethodEnum rankingMethod) {
        this.rankingMethod = rankingMethod;
        return this;
    }
    
    public PickTimeSeriesFilter(){}
}
