/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PutEventTriggerRequest {
    /**
     * The status of the trigger.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public PutEventTriggerRequest withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * The JEXL expression to be evaluated against object changes. See above for more information and an example.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public String condition;
    public PutEventTriggerRequest withCondition(String condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * The description of the trigger.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PutEventTriggerRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The type of events to be triggered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public PutEventTriggerRequestEventType eventType;
    public PutEventTriggerRequest withEventType(PutEventTriggerRequestEventType eventType) {
        this.eventType = eventType;
        return this;
    }
    
}
