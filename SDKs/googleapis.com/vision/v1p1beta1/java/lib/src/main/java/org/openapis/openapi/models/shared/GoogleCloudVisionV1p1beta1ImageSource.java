/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudVisionV1p1beta1ImageSource - External image source (Google Cloud Storage or web URL image location).
 */
public class GoogleCloudVisionV1p1beta1ImageSource {
    /**
     * **Use `image_uri` instead.** The Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gcsImageUri")
    public String gcsImageUri;

    public GoogleCloudVisionV1p1beta1ImageSource withGcsImageUri(String gcsImageUri) {
        this.gcsImageUri = gcsImageUri;
        return this;
    }
    
    /**
     * The URI of the source image. Can be either: 1. A Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info. 2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from HTTP/HTTPS URLs, Google cannot guarantee that the request will be completed. Your request may fail if the specified host denies the request (e.g. due to request throttling or DOS prevention), or if Google throttles requests to the site for abuse prevention. You should not depend on externally-hosted images for production applications. When both `gcs_image_uri` and `image_uri` are specified, `image_uri` takes precedence.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageUri")
    public String imageUri;

    public GoogleCloudVisionV1p1beta1ImageSource withImageUri(String imageUri) {
        this.imageUri = imageUri;
        return this;
    }
    
    public GoogleCloudVisionV1p1beta1ImageSource(){}
}
