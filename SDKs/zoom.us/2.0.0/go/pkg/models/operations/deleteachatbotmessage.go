// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteAChatbotMessageSecurity struct {
	ClientCredentials shared.SchemeClientCredentials `security:"scheme,type=oauth2"`
}

type DeleteAChatbotMessagePathParams struct {
	MessageID string `pathParam:"style=simple,explode=false,name=message_id"`
}

type DeleteAChatbotMessageApplicationJSON struct {
	// The AccountID of the Zoom account to which the message was sent. Retrieve this from the Chatbot request sent to your server as shown in the example [here]( https://marketplace.zoom.us/docs/guides/chatbots/sending-messages).
	AccountID string `json:"account_id"`
	// The BotJID found in the Chat Subscription Section on the Features page of your App Dashboard.
	RobotJid string `json:"robot_jid"`
	// The UserJID of the user on whose behalf the message is being sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
	UserJid *string `json:"user_jid,omitempty"`
}

type DeleteAChatbotMessageRequest struct {
	PathParams DeleteAChatbotMessagePathParams
	Request    *DeleteAChatbotMessageApplicationJSON `request:"mediaType=application/json"`
	Security   DeleteAChatbotMessageSecurity
}

// DeleteAChatbotMessage200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// Message deleted.
type DeleteAChatbotMessage200ApplicationXML struct {
	// Unique identifier of the message that was deleted.
	MessageID *string
	// The BotJID of the Chatbot app. It can be found in the Chat Subscription Section on the Features page of your App Dashboard
	RobotJid *string
	// The date and time at which the message was deleted.
	SentTime *string
	// The JID of the Channel or User to whom the message was sent.
	ToJid *string
	//  The UserJID of the user on whose behalf the message was sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
	UserJid *string
}

// DeleteAChatbotMessage200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// Message deleted.
type DeleteAChatbotMessage200ApplicationJSON struct {
	// Unique identifier of the message that was deleted.
	MessageID *string `json:"message_id,omitempty"`
	// The BotJID of the Chatbot app. It can be found in the Chat Subscription Section on the Features page of your App Dashboard
	RobotJid *string `json:"robot_jid,omitempty"`
	// The date and time at which the message was deleted.
	SentTime *string `json:"sent_time,omitempty"`
	// The JID of the Channel or User to whom the message was sent.
	ToJid *string `json:"to_jid,omitempty"`
	//  The UserJID of the user on whose behalf the message was sent. Used to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
	UserJid *string `json:"user_jid,omitempty"`
}

type DeleteAChatbotMessageResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// Message deleted.
	DeleteAChatbotMessage200ApplicationJSONObject *DeleteAChatbotMessage200ApplicationJSON
}
