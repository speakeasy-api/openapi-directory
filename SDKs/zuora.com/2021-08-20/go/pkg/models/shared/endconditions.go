// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// EndConditionsEndDateConditionEnum - Condition for the charge to become inactive.
//
// If the value of this field is `Fixed_Period`, the charge is active for a predefined duration based on the value of the `upToPeriodsType` and `upToPeriods` fields.
//
// If the value of this field is `Specific_End_Date`, use the `specificEndDate` field to specify the date when then charge becomes inactive.
type EndConditionsEndDateConditionEnum string

const (
	EndConditionsEndDateConditionEnumSubscriptionEnd EndConditionsEndDateConditionEnum = "Subscription_End"
	EndConditionsEndDateConditionEnumFixedPeriod     EndConditionsEndDateConditionEnum = "Fixed_Period"
	EndConditionsEndDateConditionEnumSpecificEndDate EndConditionsEndDateConditionEnum = "Specific_End_Date"
)

func (e *EndConditionsEndDateConditionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Subscription_End":
		fallthrough
	case "Fixed_Period":
		fallthrough
	case "Specific_End_Date":
		*e = EndConditionsEndDateConditionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EndConditionsEndDateConditionEnum: %s", s)
	}
}

// EndConditionsUpToPeriodsTypeEnum - Unit of time that the charge duration is measured in. Only applicable if the value of the `endDateCondition` field is `Fixed_Period`.
type EndConditionsUpToPeriodsTypeEnum string

const (
	EndConditionsUpToPeriodsTypeEnumBillingPeriods EndConditionsUpToPeriodsTypeEnum = "Billing_Periods"
	EndConditionsUpToPeriodsTypeEnumDays           EndConditionsUpToPeriodsTypeEnum = "Days"
	EndConditionsUpToPeriodsTypeEnumWeeks          EndConditionsUpToPeriodsTypeEnum = "Weeks"
	EndConditionsUpToPeriodsTypeEnumMonths         EndConditionsUpToPeriodsTypeEnum = "Months"
	EndConditionsUpToPeriodsTypeEnumYears          EndConditionsUpToPeriodsTypeEnum = "Years"
)

func (e *EndConditionsUpToPeriodsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Billing_Periods":
		fallthrough
	case "Days":
		fallthrough
	case "Weeks":
		fallthrough
	case "Months":
		fallthrough
	case "Years":
		*e = EndConditionsUpToPeriodsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EndConditionsUpToPeriodsTypeEnum: %s", s)
	}
}

// EndConditions - Specifies when a charge becomes inactive.
type EndConditions struct {
	// Condition for the charge to become inactive.
	//
	// If the value of this field is `Fixed_Period`, the charge is active for a predefined duration based on the value of the `upToPeriodsType` and `upToPeriods` fields.
	//
	// If the value of this field is `Specific_End_Date`, use the `specificEndDate` field to specify the date when then charge becomes inactive.
	//
	EndDateCondition *EndConditionsEndDateConditionEnum `json:"endDateCondition,omitempty"`
	// Date in YYYY-MM-DD format. Only applicable if the value of the `endDateCondition` field is `Specific_End_Date`.
	//
	SpecificEndDate *types.Date `json:"specificEndDate,omitempty"`
	// Duration of the charge in billing periods, days, weeks, months, or years, depending on the value of the `upToPeriodsType` field. Only applicable if the value of the `endDateCondition` field is `Fixed_Period`.
	//
	UpToPeriods *int64 `json:"upToPeriods,omitempty"`
	// Unit of time that the charge duration is measured in. Only applicable if the value of the `endDateCondition` field is `Fixed_Period`.
	//
	UpToPeriodsType *EndConditionsUpToPeriodsTypeEnum `json:"upToPeriodsType,omitempty"`
}
