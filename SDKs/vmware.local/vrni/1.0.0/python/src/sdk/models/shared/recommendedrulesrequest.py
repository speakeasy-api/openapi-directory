"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import microsecgroup as shared_microsecgroup
from ..shared import timerange as shared_timerange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecommendedRulesRequest:
    r"""Recommended Rules Request"""
    
    group_1: Optional[shared_microsecgroup.MicroSecGroup] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_1'), 'exclude': lambda f: f is None }})  
    group_2: Optional[shared_microsecgroup.MicroSecGroup] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_2'), 'exclude': lambda f: f is None }})  
    time_range: Optional[shared_timerange.TimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_range'), 'exclude': lambda f: f is None }})  
    