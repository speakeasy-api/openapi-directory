// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum - An enumeration.
type ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum string

const (
	ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnumID           ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum = "id"
	ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnumName         ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum = "name"
	ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnumSubtitle     ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum = "subtitle"
	ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnumFirstUpdated ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum = "firstUpdated"
	ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnumLastUpdated  ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum = "lastUpdated"
)

func (e ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum) ToPointer() *ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum {
	return &e
}

func (e *ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		fallthrough
	case "name":
		fallthrough
	case "subtitle":
		fallthrough
	case "firstUpdated":
		fallthrough
	case "lastUpdated":
		*e = ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum: %v", v)
	}
}

// ProjectsGetV2ProjectsProjectIDGetSortSortEnum - An enumeration.
type ProjectsGetV2ProjectsProjectIDGetSortSortEnum string

const (
	ProjectsGetV2ProjectsProjectIDGetSortSortEnumAsc  ProjectsGetV2ProjectsProjectIDGetSortSortEnum = "asc"
	ProjectsGetV2ProjectsProjectIDGetSortSortEnumDesc ProjectsGetV2ProjectsProjectIDGetSortSortEnum = "desc"
)

func (e ProjectsGetV2ProjectsProjectIDGetSortSortEnum) ToPointer() *ProjectsGetV2ProjectsProjectIDGetSortSortEnum {
	return &e
}

func (e *ProjectsGetV2ProjectsProjectIDGetSortSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = ProjectsGetV2ProjectsProjectIDGetSortSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsGetV2ProjectsProjectIDGetSortSortEnum: %v", v)
	}
}

type ProjectsGetV2ProjectsProjectIDGetRequest struct {
	//         Limit results by a certain country using two letter country code.
	//         (ex. ?country=US or ?country=US&country=MX)
	//
	Country []string `queryParam:"style=form,explode=true,name=country"`
	//         Limit results by a certain country using two letter country code.
	//         (ex. /US)
	//
	CountryID  *string `queryParam:"style=form,explode=true,name=country_id"`
	Entity     *string `queryParam:"style=form,explode=true,name=entity"`
	IsAnalysis *bool   `queryParam:"style=form,explode=true,name=isAnalysis"`
	IsMobile   *bool   `queryParam:"style=form,explode=true,name=isMobile"`
	// Change the number of results returned.
	Limit  *int64 `queryParam:"style=form,explode=true,name=limit"`
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// An enumeration.
	OrderBy *ProjectsGetV2ProjectsProjectIDGetOrderByProjectsOrderEnum `queryParam:"style=form,explode=true,name=order_by"`
	// Paginate through results.
	Page        *int64        `queryParam:"style=form,explode=true,name=page"`
	Parameter   []interface{} `queryParam:"style=form,explode=true,name=parameter"`
	ParameterID *int64        `queryParam:"style=form,explode=true,name=parameter_id"`
	Project     []interface{} `queryParam:"style=form,explode=true,name=project"`
	ProjectID   int64         `pathParam:"style=simple,explode=false,name=project_id"`
	SensorType  *string       `queryParam:"style=form,explode=true,name=sensorType"`
	// Define sort order.
	Sort       *ProjectsGetV2ProjectsProjectIDGetSortSortEnum `queryParam:"style=form,explode=true,name=sort"`
	SourceName []string                                       `queryParam:"style=form,explode=true,name=sourceName"`
	Unit       []string                                       `queryParam:"style=form,explode=true,name=unit"`
}

type ProjectsGetV2ProjectsProjectIDGetResponse struct {
	ContentType string
	// Validation Error
	HTTPValidationError *shared.HTTPValidationError
	// Successful Response
	OpenAQProjectsResult *shared.OpenAQProjectsResult
	StatusCode           int
	RawResponse          *http.Response
}
