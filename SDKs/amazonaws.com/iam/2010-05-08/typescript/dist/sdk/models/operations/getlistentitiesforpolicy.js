"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETListEntitiesForPolicyResponse = exports.GETListEntitiesForPolicyRequest = exports.GETListEntitiesForPolicyVersionEnum = exports.GETListEntitiesForPolicyPolicyUsageFilterEnum = exports.GETListEntitiesForPolicyEntityFilterEnum = exports.GETListEntitiesForPolicyActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETListEntitiesForPolicyActionEnum;
(function (GETListEntitiesForPolicyActionEnum) {
    GETListEntitiesForPolicyActionEnum["ListEntitiesForPolicy"] = "ListEntitiesForPolicy";
})(GETListEntitiesForPolicyActionEnum = exports.GETListEntitiesForPolicyActionEnum || (exports.GETListEntitiesForPolicyActionEnum = {}));
/**
 * <p>The entity type to use for filtering the results.</p> <p>For example, when <code>EntityFilter</code> is <code>Role</code>, only the roles that are attached to the specified policy are returned. This parameter is optional. If it is not included, all attached entities (users, groups, and roles) are returned. The argument for this parameter must be one of the valid values listed below.</p>
 */
var GETListEntitiesForPolicyEntityFilterEnum;
(function (GETListEntitiesForPolicyEntityFilterEnum) {
    GETListEntitiesForPolicyEntityFilterEnum["User"] = "User";
    GETListEntitiesForPolicyEntityFilterEnum["Role"] = "Role";
    GETListEntitiesForPolicyEntityFilterEnum["Group"] = "Group";
    GETListEntitiesForPolicyEntityFilterEnum["LocalManagedPolicy"] = "LocalManagedPolicy";
    GETListEntitiesForPolicyEntityFilterEnum["AWSManagedPolicy"] = "AWSManagedPolicy";
})(GETListEntitiesForPolicyEntityFilterEnum = exports.GETListEntitiesForPolicyEntityFilterEnum || (exports.GETListEntitiesForPolicyEntityFilterEnum = {}));
/**
 * <p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
 */
var GETListEntitiesForPolicyPolicyUsageFilterEnum;
(function (GETListEntitiesForPolicyPolicyUsageFilterEnum) {
    GETListEntitiesForPolicyPolicyUsageFilterEnum["PermissionsPolicy"] = "PermissionsPolicy";
    GETListEntitiesForPolicyPolicyUsageFilterEnum["PermissionsBoundary"] = "PermissionsBoundary";
})(GETListEntitiesForPolicyPolicyUsageFilterEnum = exports.GETListEntitiesForPolicyPolicyUsageFilterEnum || (exports.GETListEntitiesForPolicyPolicyUsageFilterEnum = {}));
var GETListEntitiesForPolicyVersionEnum;
(function (GETListEntitiesForPolicyVersionEnum) {
    GETListEntitiesForPolicyVersionEnum["TwoThousandAndTen0508"] = "2010-05-08";
})(GETListEntitiesForPolicyVersionEnum = exports.GETListEntitiesForPolicyVersionEnum || (exports.GETListEntitiesForPolicyVersionEnum = {}));
var GETListEntitiesForPolicyRequest = /** @class */ (function (_super) {
    __extends(GETListEntitiesForPolicyRequest, _super);
    function GETListEntitiesForPolicyRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EntityFilter",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "entityFilter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Marker",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "marker", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MaxItems",
        }),
        __metadata("design:type", Number)
    ], GETListEntitiesForPolicyRequest.prototype, "maxItems", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PathPrefix",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "pathPrefix", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PolicyArn",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "policyArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PolicyUsageFilter",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "policyUsageFilter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETListEntitiesForPolicyRequest;
}(utils_1.SpeakeasyBase));
exports.GETListEntitiesForPolicyRequest = GETListEntitiesForPolicyRequest;
var GETListEntitiesForPolicyResponse = /** @class */ (function (_super) {
    __extends(GETListEntitiesForPolicyResponse, _super);
    function GETListEntitiesForPolicyResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETListEntitiesForPolicyResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETListEntitiesForPolicyResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETListEntitiesForPolicyResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETListEntitiesForPolicyResponse.prototype, "rawResponse", void 0);
    return GETListEntitiesForPolicyResponse;
}(utils_1.SpeakeasyBase));
exports.GETListEntitiesForPolicyResponse = GETListEntitiesForPolicyResponse;
