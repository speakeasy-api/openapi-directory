// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETReservedNodeExchangeConfigurationOptionsActionEnum
type GETGETReservedNodeExchangeConfigurationOptionsActionEnum string

const (
	GETGETReservedNodeExchangeConfigurationOptionsActionEnumGetReservedNodeExchangeConfigurationOptions GETGETReservedNodeExchangeConfigurationOptionsActionEnum = "GetReservedNodeExchangeConfigurationOptions"
)

func (e *GETGETReservedNodeExchangeConfigurationOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetReservedNodeExchangeConfigurationOptions":
		*e = GETGETReservedNodeExchangeConfigurationOptionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETReservedNodeExchangeConfigurationOptionsActionEnum: %s", s)
	}
}

// GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnum - The action type of the reserved-node configuration. The action type can be an exchange initiated from either a snapshot or a resize.
type GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnum string

const (
	GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnumRestoreCluster GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnum = "restore-cluster"
	GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnumResizeCluster  GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnum = "resize-cluster"
)

func (e *GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "restore-cluster":
		fallthrough
	case "resize-cluster":
		*e = GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnum: %s", s)
	}
}

// GETGETReservedNodeExchangeConfigurationOptionsVersionEnum
type GETGETReservedNodeExchangeConfigurationOptionsVersionEnum string

const (
	GETGETReservedNodeExchangeConfigurationOptionsVersionEnumTwoThousandAndTwelve1201 GETGETReservedNodeExchangeConfigurationOptionsVersionEnum = "2012-12-01"
)

func (e *GETGETReservedNodeExchangeConfigurationOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETGETReservedNodeExchangeConfigurationOptionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETReservedNodeExchangeConfigurationOptionsVersionEnum: %s", s)
	}
}

type GETGETReservedNodeExchangeConfigurationOptionsQueryParams struct {
	Action GETGETReservedNodeExchangeConfigurationOptionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The action type of the reserved-node configuration. The action type can be an exchange initiated from either a snapshot or a resize.
	ActionType GETGETReservedNodeExchangeConfigurationOptionsActionTypeEnum `queryParam:"style=form,explode=true,name=ActionType"`
	// The identifier for the cluster that is the source for a reserved-node exchange.
	ClusterIdentifier *string `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	// An optional pagination token provided by a previous <code>GetReservedNodeExchangeConfigurationOptions</code> request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by the <code>MaxRecords</code> parameter. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>Marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value.
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// The identifier for the snapshot that is the source for the reserved-node exchange.
	SnapshotIdentifier *string                                                   `queryParam:"style=form,explode=true,name=SnapshotIdentifier"`
	Version            GETGETReservedNodeExchangeConfigurationOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETGETReservedNodeExchangeConfigurationOptionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETReservedNodeExchangeConfigurationOptionsRequest struct {
	QueryParams GETGETReservedNodeExchangeConfigurationOptionsQueryParams
	Headers     GETGETReservedNodeExchangeConfigurationOptionsHeaders
}

type GETGETReservedNodeExchangeConfigurationOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
