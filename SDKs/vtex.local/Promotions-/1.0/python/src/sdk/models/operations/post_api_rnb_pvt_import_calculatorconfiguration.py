"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PostAPIRnbPvtImportCalculatorConfigurationRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent."""  
    x_vtex_accumulate_with_manual_prices: bool = dataclasses.field(metadata={'header': { 'field_name': 'X-VTEX-accumulate-with-manual-prices', 'style': 'simple', 'explode': False }})
    r"""Condition that will accumulate the Promotion with manual prices or not."""  
    x_vtex_calculator_name: str = dataclasses.field(metadata={'header': { 'field_name': 'X-VTEX-calculator-name', 'style': 'simple', 'explode': False }})
    r"""Promotion Name."""  
    x_vtex_end_date: str = dataclasses.field(metadata={'header': { 'field_name': 'X-VTEX-end-date', 'style': 'simple', 'explode': False }})
    r"""Promotion end date."""  
    x_vtex_start_date: str = dataclasses.field(metadata={'header': { 'field_name': 'X-VTEX-start-date', 'style': 'simple', 'explode': False }})
    r"""Promotion start date."""  
    request_body: Optional[bytes] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'text/csv' }})  
    x_vtex_cluster_expression: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-VTEX-cluster-expression', 'style': 'simple', 'explode': False }})
    r"""Cluster that will be included in the Promotion. To add multiple clusters, create a header for each one of them."""  
    x_vtex_cluster_operator: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-VTEX-cluster-operator', 'style': 'simple', 'explode': False }})
    r"""This header allows implementing the Promotion in multiples client clusters. You can set the value as `all` - the Promotion will be valid to all the clusters - or `any` - the Promotion will be valid to any of the clusters."""  
    x_vtex_cumulative: Optional[bool] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-VTEX-cumulative', 'style': 'simple', 'explode': False }})
    r"""Defines if the Promotion is cumulative with other promotions."""  
    

@dataclasses.dataclass
class PostAPIRnbPvtImportCalculatorConfigurationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    