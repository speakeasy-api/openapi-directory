// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CodePushDeploymentReleasesGetSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type CodePushDeploymentReleasesGetRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// deployment name
	DeploymentName string `pathParam:"style=simple,explode=false,name=deployment_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// CodePushDeploymentReleasesGetDefaultApplicationJSON - Error
type CodePushDeploymentReleasesGetDefaultApplicationJSON struct {
	Message string `json:"message"`
}

type CodePushDeploymentReleasesGet200ApplicationJSONDiffPackageMap struct {
	Size float64 `json:"size"`
	URL  string  `json:"url"`
}

// CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum - The release method is unknown if unspecified
type CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum string

const (
	CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnumUpload   CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum = "Upload"
	CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnumPromote  CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum = "Promote"
	CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnumRollback CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum = "Rollback"
)

func (e CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum) ToPointer() *CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum {
	return &e
}

func (e *CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Upload":
		fallthrough
	case "Promote":
		fallthrough
	case "Rollback":
		*e = CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum: %v", v)
	}
}

type CodePushDeploymentReleasesGet200ApplicationJSON struct {
	BlobURL        *string                                                                  `json:"blob_url,omitempty"`
	Description    *string                                                                  `json:"description,omitempty"`
	DiffPackageMap map[string]CodePushDeploymentReleasesGet200ApplicationJSONDiffPackageMap `json:"diff_package_map,omitempty"`
	IsDisabled     *bool                                                                    `json:"is_disabled,omitempty"`
	IsMandatory    *bool                                                                    `json:"is_mandatory,omitempty"`
	Label          *string                                                                  `json:"label,omitempty"`
	// Set on 'Promote'
	OriginalDeployment *string `json:"original_deployment,omitempty"`
	// Set on 'Promote' and 'Rollback'
	OriginalLabel *string `json:"original_label,omitempty"`
	PackageHash   *string `json:"package_hash,omitempty"`
	// The release method is unknown if unspecified
	ReleaseMethod     *CodePushDeploymentReleasesGet200ApplicationJSONReleaseMethodEnum `json:"release_method,omitempty"`
	ReleasedBy        *string                                                           `json:"released_by,omitempty"`
	Rollout           *int64                                                            `json:"rollout,omitempty"`
	Size              *float64                                                          `json:"size,omitempty"`
	TargetBinaryRange *string                                                           `json:"target_binary_range,omitempty"`
	UploadTime        *int64                                                            `json:"upload_time,omitempty"`
}

type CodePushDeploymentReleasesGetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	CodePushDeploymentReleasesGet200ApplicationJSONAnies []CodePushDeploymentReleasesGet200ApplicationJSON
	// Error
	CodePushDeploymentReleasesGetDefaultApplicationJSONObject *CodePushDeploymentReleasesGetDefaultApplicationJSON
}
