/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListMeetingTemplatesRequest extends SpeakeasyBase {
  /**
   * Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class ListMeetingTemplates200ApplicationXMLTemplates extends SpeakeasyBase {
  /**
   * Unique identifier of the template.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the template.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Type of the template. The value of this field can be one of the following:<br>
   *
   * @remarks
   * `1`: meeting template <br>
   * `2`: admin meeting template
   */
  @SpeakeasyMetadata()
  type?: number;
}

/**
 * **HTTP Status Code:** `200` **OK** <br>
 */
export class ListMeetingTemplates200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: ListMeetingTemplates200ApplicationXMLTemplates,
  })
  templates?: ListMeetingTemplates200ApplicationXMLTemplates[];

  /**
   * Total records found for this request.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

export class ListMeetingTemplates200ApplicationJSONTemplates extends SpeakeasyBase {
  /**
   * Unique identifier of the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Type of the template. The value of this field can be one of the following:<br>
   *
   * @remarks
   * `1`: meeting template <br>
   * `2`: admin meeting template
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: number;
}

/**
 * **HTTP Status Code:** `200` **OK** <br>
 */
export class ListMeetingTemplates200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: ListMeetingTemplates200ApplicationJSONTemplates,
  })
  @Expose({ name: "templates" })
  @Type(() => ListMeetingTemplates200ApplicationJSONTemplates)
  templates?: ListMeetingTemplates200ApplicationJSONTemplates[];

  /**
   * Total records found for this request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class ListMeetingTemplatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK** <br>
   */
  @SpeakeasyMetadata()
  listMeetingTemplates200ApplicationJSONObject?: ListMeetingTemplates200ApplicationJSON;
}
