// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateDeviceLiveToolsPingRequestBody struct {
	// Count parameter to pass to ping. [1..5], default 5
	Count *int64 `json:"count,omitempty"`
	// FQDN, IPv4 or IPv6 address
	Target string `json:"target"`
}

type CreateDeviceLiveToolsPingRequest struct {
	RequestBody CreateDeviceLiveToolsPingRequestBody `request:"mediaType=application/json"`
	Serial      string                               `pathParam:"style=simple,explode=false,name=serial"`
}

// CreateDeviceLiveToolsPing201ApplicationJSONRequest - Ping request parameters
type CreateDeviceLiveToolsPing201ApplicationJSONRequest struct {
	// Number of pings to send
	Count *int64 `json:"count,omitempty"`
	// Device serial number
	Serial *string `json:"serial,omitempty"`
	// IP address or FQDN to ping
	Target *string `json:"target,omitempty"`
}

// CreateDeviceLiveToolsPing201ApplicationJSON - Successful operation
type CreateDeviceLiveToolsPing201ApplicationJSON struct {
	// Id to check the status of your ping request.
	PingID *string `json:"pingId,omitempty"`
	// Ping request parameters
	Request *CreateDeviceLiveToolsPing201ApplicationJSONRequest `json:"request,omitempty"`
	// Status of the ping request.
	Status *string `json:"status,omitempty"`
	// GET this url to check the status of your ping request.
	URL *string `json:"url,omitempty"`
}

type CreateDeviceLiveToolsPingResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateDeviceLiveToolsPing201ApplicationJSONObject *CreateDeviceLiveToolsPing201ApplicationJSON
}
