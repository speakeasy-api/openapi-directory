// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum - Required. The type of comparison to be applied to the value.
type GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum string

const (
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumComparisonTypeUnspecified        GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "COMPARISON_TYPE_UNSPECIFIED"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumEquals                           GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "EQUALS"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumEqualsCaseInsensitive            GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "EQUALS_CASE_INSENSITIVE"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumContains                         GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "CONTAINS"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumContainsCaseInsensitive          GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "CONTAINS_CASE_INSENSITIVE"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumStartsWith                       GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "STARTS_WITH"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumStartsWithCaseInsensitive        GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "STARTS_WITH_CASE_INSENSITIVE"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumEndsWith                         GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "ENDS_WITH"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumEndsWithCaseInsensitive          GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "ENDS_WITH_CASE_INSENSITIVE"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumGreaterThan                      GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "GREATER_THAN"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumGreaterThanOrEqual               GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "GREATER_THAN_OR_EQUAL"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumLessThan                         GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "LESS_THAN"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumLessThanOrEqual                  GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "LESS_THAN_OR_EQUAL"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumRegularExpression                GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "REGULAR_EXPRESSION"
	GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnumRegularExpressionCaseInsensitive GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum = "REGULAR_EXPRESSION_CASE_INSENSITIVE"
)

func (e GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum) ToPointer() *GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum {
	return &e
}

func (e *GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPARISON_TYPE_UNSPECIFIED":
		fallthrough
	case "EQUALS":
		fallthrough
	case "EQUALS_CASE_INSENSITIVE":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "CONTAINS_CASE_INSENSITIVE":
		fallthrough
	case "STARTS_WITH":
		fallthrough
	case "STARTS_WITH_CASE_INSENSITIVE":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "ENDS_WITH_CASE_INSENSITIVE":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "GREATER_THAN_OR_EQUAL":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "LESS_THAN_OR_EQUAL":
		fallthrough
	case "REGULAR_EXPRESSION":
		fallthrough
	case "REGULAR_EXPRESSION_CASE_INSENSITIVE":
		*e = GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum: %v", v)
	}
}

// GoogleAnalyticsAdminV1alphaMatchingCondition - Defines a condition for when an Event Edit or Event Creation rule applies to an event.
type GoogleAnalyticsAdminV1alphaMatchingCondition struct {
	// Required. The type of comparison to be applied to the value.
	ComparisonType *GoogleAnalyticsAdminV1alphaMatchingConditionComparisonTypeEnum `json:"comparisonType,omitempty"`
	// Required. The name of the field that is compared against for the condition. If 'event_name' is specified this condition will apply to the name of the event. Otherwise the condition will apply to a parameter with the specified name. This value cannot contain spaces.
	Field *string `json:"field,omitempty"`
	// Whether or not the result of the comparison should be negated. For example, if `negated` is true, then 'equals' comparisons would function as 'not equals'.
	Negated *bool `json:"negated,omitempty"`
	// Required. The value being compared against for this condition. The runtime implementation may perform type coercion of this value to evaluate this condition based on the type of the parameter value.
	Value *string `json:"value,omitempty"`
}
