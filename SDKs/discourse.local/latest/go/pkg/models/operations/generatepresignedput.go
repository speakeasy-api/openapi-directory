// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GeneratePresignedPutRequestBodyMetadata struct {
	// The SHA1 checksum of the upload binary blob. Optionally
	// be provided and serves as an additional security check when
	// later processing the file in complete-external-upload endpoint.
	Sha1Checksum *string `json:"sha1-checksum,omitempty"`
}

type GeneratePresignedPutRequestBodyTypeEnum string

const (
	GeneratePresignedPutRequestBodyTypeEnumAvatar            GeneratePresignedPutRequestBodyTypeEnum = "avatar"
	GeneratePresignedPutRequestBodyTypeEnumProfileBackground GeneratePresignedPutRequestBodyTypeEnum = "profile_background"
	GeneratePresignedPutRequestBodyTypeEnumCardBackground    GeneratePresignedPutRequestBodyTypeEnum = "card_background"
	GeneratePresignedPutRequestBodyTypeEnumCustomEmoji       GeneratePresignedPutRequestBodyTypeEnum = "custom_emoji"
	GeneratePresignedPutRequestBodyTypeEnumComposer          GeneratePresignedPutRequestBodyTypeEnum = "composer"
)

func (e GeneratePresignedPutRequestBodyTypeEnum) ToPointer() *GeneratePresignedPutRequestBodyTypeEnum {
	return &e
}

func (e *GeneratePresignedPutRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "avatar":
		fallthrough
	case "profile_background":
		fallthrough
	case "card_background":
		fallthrough
	case "custom_emoji":
		fallthrough
	case "composer":
		*e = GeneratePresignedPutRequestBodyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GeneratePresignedPutRequestBodyTypeEnum: %v", v)
	}
}

type GeneratePresignedPutRequestBody struct {
	FileName string `json:"file_name"`
	// File size should be represented in bytes.
	FileSize int64                                    `json:"file_size"`
	Metadata *GeneratePresignedPutRequestBodyMetadata `json:"metadata,omitempty"`
	Type     GeneratePresignedPutRequestBodyTypeEnum  `json:"type"`
}

// GeneratePresignedPut200ApplicationJSON - external upload initialized
type GeneratePresignedPut200ApplicationJSON struct {
	// The path of the temporary file on the external storage
	// service.
	Key *string `json:"key,omitempty"`
	// A unique string that identifies the external upload.
	// This must be stored and then sent in the /complete-external-upload
	// endpoint to complete the direct upload.
	UniqueIdentifier *string `json:"unique_identifier,omitempty"`
	// A presigned PUT URL which must be used to upload
	// the file binary blob to.
	URL *string `json:"url,omitempty"`
}

type GeneratePresignedPutResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// external upload initialized
	GeneratePresignedPut200ApplicationJSONObject *GeneratePresignedPut200ApplicationJSON
}
