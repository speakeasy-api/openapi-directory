// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CustomerInvoiceCreateDTOTypeEnum string

const (
	CustomerInvoiceCreateDTOTypeEnumFinal      CustomerInvoiceCreateDTOTypeEnum = "FINAL"
	CustomerInvoiceCreateDTOTypeEnumDraft      CustomerInvoiceCreateDTOTypeEnum = "DRAFT"
	CustomerInvoiceCreateDTOTypeEnumCreditNote CustomerInvoiceCreateDTOTypeEnum = "CREDIT_NOTE"
)

func (e *CustomerInvoiceCreateDTOTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FINAL":
		fallthrough
	case "DRAFT":
		fallthrough
	case "CREDIT_NOTE":
		*e = CustomerInvoiceCreateDTOTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerInvoiceCreateDTOTypeEnum: %s", s)
	}
}

// CustomerInvoiceCreateDTO - Created new invoice.
type CustomerInvoiceCreateDTO struct {
	PrepaymentsIds []int64                           `json:"prepaymentsIds,omitempty"`
	TasksIds       []int64                           `json:"tasksIds,omitempty"`
	Type           *CustomerInvoiceCreateDTOTypeEnum `json:"type,omitempty"`
}
