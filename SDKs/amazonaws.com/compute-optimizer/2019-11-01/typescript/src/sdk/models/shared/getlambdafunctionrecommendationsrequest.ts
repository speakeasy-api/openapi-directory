/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LambdaFunctionRecommendationFilter } from "./lambdafunctionrecommendationfilter";
import { Expose, Type } from "class-transformer";

export class GetLambdaFunctionRecommendationsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accountIds" })
  accountIds?: string[];

  @SpeakeasyMetadata({ elemType: LambdaFunctionRecommendationFilter })
  @Expose({ name: "filters" })
  @Type(() => LambdaFunctionRecommendationFilter)
  filters?: LambdaFunctionRecommendationFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "functionArns" })
  functionArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "maxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;
}
