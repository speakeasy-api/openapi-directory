/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * This will be replaced by the relationship `attachment` in a future update.<br/>
 *
 * @remarks
 * The type of the entity this media asset is attached to
 *
 */
export enum MediaAssetAttributesAttachmentTypeEnum {
  Image = "Image",
  Segment = "Segment",
  SegmentList = "SegmentList",
}

/**
 * The style of the media asset. A media asset is part of a collection of related media files,
 *
 * @remarks
 * for example an image or an episode (audio). Images usually have differently sized versions,
 * and episodes can have different audio formats.
 *
 */
export enum MediaAssetAttributesStyleEnum {
  Info = "info",
  Itunes = "itunes",
  Medium = "medium",
  Original = "original",
  Regular = "regular",
  Square400 = "square-400",
  Square640 = "square-640",
  Square888 = "square-888",
  Square3000 = "square-3000",
  StrippedOriginal = "stripped-original",
  Thumb = "thumb",
  WaveformData = "waveform_data",
}

export class MediaAssetAttributes extends SpeakeasyBase {
  /**
   * This will be replaced by the relationship `attachment` in a future update.<br/>
   *
   * @remarks
   * The ID of the entity this media asset is attached to
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attachment_id" })
  attachmentId?: string;

  /**
   * This will be replaced by the relationship `attachment` in a future update.<br/>
   *
   * @remarks
   * The type of the entity this media asset is attached to
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attachment_type" })
  attachmentType?: MediaAssetAttributesAttachmentTypeEnum;

  /**
   * The CDN-URL where the media asset is available
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cdn_url" })
  cdnUrl?: string;

  /**
   * The MIME type of the media asset
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content_type" })
  contentType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The filename of the media asset without any path components.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file_name" })
  fileName?: string;

  /**
   * The size in bytes of the media asset
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file_size" })
  fileSize?: number;

  /**
   * The height in pixels of the media asset, if the media asset is an image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size_height" })
  sizeHeight?: number;

  /**
   * The width in pixels of the media asset, if the media asset is an image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size_width" })
  sizeWidth?: number;

  /**
   * The style of the media asset. A media asset is part of a collection of related media files,
   *
   * @remarks
   * for example an image or an episode (audio). Images usually have differently sized versions,
   * and episodes can have different audio formats.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "style" })
  style?: MediaAssetAttributesStyleEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

export class MediaAsset extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => MediaAssetAttributes)
  attributes?: MediaAssetAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The type of resource. This is always `media_assets`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
