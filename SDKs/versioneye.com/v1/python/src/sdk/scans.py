"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Scans:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_api_v1_scans(self, request: operations.GetAPIV1ScansRequest, security: operations.GetAPIV1ScansSecurity) -> operations.GetAPIV1ScansResponse:
        r"""Retrieves all scans"""
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/api/v1/scans'
        
        query_params = utils.get_query_params(operations.GetAPIV1ScansRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetAPIV1ScansResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_api_v1_scans_id_(self, request: operations.GetAPIV1ScansIDRequest, security: operations.GetAPIV1ScansIDSecurity) -> operations.GetAPIV1ScansIDResponse:
        r"""Retrieves a project scan result"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetAPIV1ScansIDRequest, base_url, '/api/v1/scans/{id}', request)
        
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetAPIV1ScansIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_api_v1_scans_id_files_file_id_(self, request: operations.GetAPIV1ScansIDFilesFileIDRequest, security: operations.GetAPIV1ScansIDFilesFileIDSecurity) -> operations.GetAPIV1ScansIDFilesFileIDResponse:
        r"""Retrieves a file object, containing information about dependencies in the file"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetAPIV1ScansIDFilesFileIDRequest, base_url, '/api/v1/scans/{id}/files/{file_id}', request)
        
        query_params = utils.get_query_params(operations.GetAPIV1ScansIDFilesFileIDRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetAPIV1ScansIDFilesFileIDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    