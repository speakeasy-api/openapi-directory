"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RtiTransactionBaseRtiTransactionBaseEmployerCore:
    r"""The rti transaction bases' employer core"""
    
    at_href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@href'), 'exclude': lambda f: f is None }})
    r"""The links' href"""  
    at_rel: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@rel'), 'exclude': lambda f: f is None }})
    r"""The links' target type"""  
    at_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@title'), 'exclude': lambda f: f is None }})
    r"""The links' title"""  
    
class RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum(str, Enum):
    r"""The rti transaction bases' transaction status"""
    NEW = 'New'
    REQUEST_GENERATED = 'RequestGenerated'
    COMPLETED_WITH_ERROR = 'CompletedWithError'
    COMPLETED_WITH_SUCCESS = 'CompletedWithSuccess'
    TIME_OUT = 'TimeOut'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RtiTransactionBaseRtiTransactionBase:
    
    employer_core: Optional[RtiTransactionBaseRtiTransactionBaseEmployerCore] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployerCore'), 'exclude': lambda f: f is None }})
    r"""The rti transaction bases' employer core"""  
    request_data: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequestData'), 'exclude': lambda f: f is None }})
    r"""The rti transaction bases' request data"""  
    response_data: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResponseData'), 'exclude': lambda f: f is None }})
    r"""The rti transaction bases' response data"""  
    rti_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RtiType'), 'exclude': lambda f: f is None }})
    r"""The rti transaction bases' rti type"""  
    tax_year: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxYear'), 'exclude': lambda f: f is None }})
    r"""The rti transaction bases' tax year"""  
    timestamp: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Timestamp'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The rti transaction bases' timestamp"""  
    transaction_status: Optional[RtiTransactionBaseRtiTransactionBaseTransactionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransactionStatus'), 'exclude': lambda f: f is None }})
    r"""The rti transaction bases' transaction status"""  
    transmission_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TransmissionDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The rti transaction bases' transmission date"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RtiTransactionBase:
    r"""The rti transaction base object."""
    
    rti_transaction_base: Optional[RtiTransactionBaseRtiTransactionBase] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RtiTransactionBase'), 'exclude': lambda f: f is None }})  
    