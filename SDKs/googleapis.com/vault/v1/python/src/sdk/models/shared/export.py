"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudstoragesink as shared_cloudstoragesink
from ..shared import exportoptions as shared_exportoptions
from ..shared import exportstats as shared_exportstats
from ..shared import query as shared_query
from ..shared import userinfo as shared_userinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ExportStatusEnum(str, Enum):
    r"""Output only. The status of the export."""
    EXPORT_STATUS_UNSPECIFIED = 'EXPORT_STATUS_UNSPECIFIED'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'
    IN_PROGRESS = 'IN_PROGRESS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Export:
    r"""An export. To work with Vault resources, the account must have the [required Vault privileges](https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."""
    
    cloud_storage_sink: Optional[shared_cloudstoragesink.CloudStorageSink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudStorageSink'), 'exclude': lambda f: f is None }})
    r"""Export sink for Cloud Storage files."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the export was created."""  
    export_options: Optional[shared_exportoptions.ExportOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exportOptions'), 'exclude': lambda f: f is None }})
    r"""Additional options for exports"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Output only. The generated export ID."""  
    matter_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matterId'), 'exclude': lambda f: f is None }})
    r"""Output only. The matter ID."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The export name. Don't use special characters (~!$'(),;@:/?) in the name, they can prevent you from downloading exports."""  
    query: Optional[shared_query.Query] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""The query definition used for search and export."""  
    requester: Optional[shared_userinfo.UserInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requester'), 'exclude': lambda f: f is None }})
    r"""User's information."""  
    stats: Optional[shared_exportstats.ExportStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats'), 'exclude': lambda f: f is None }})
    r"""Progress information for an export."""  
    status: Optional[ExportStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Output only. The status of the export."""  
    