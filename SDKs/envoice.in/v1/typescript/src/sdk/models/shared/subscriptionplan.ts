/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum SubscriptionPlanFeaturesEnum {
  Api = "Api",
  Teams = "Teams",
  Clients = "Clients",
  Shop = "Shop",
  PaymentLinks = "PaymentLinks",
  Cname = "Cname",
}

export enum SubscriptionPlanRecurrenceEnum {
  Monthly = "Monthly",
  Yearly = "Yearly",
}

export enum SubscriptionPlanStatusEnum {
  ActiveTrial = "ActiveTrial",
  ExpiredTrial = "ExpiredTrial",
  Active = "Active",
  Canceled = "Canceled",
  Fraudlent = "Fraudlent",
}

export enum SubscriptionPlanSystemCancelationReasonEnum {
  FailToCaptureFee = "FailToCaptureFee",
  Fraud = "Fraud",
}

export class SubscriptionPlan extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CancellatedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  cancellatedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CouponCode" })
  couponCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrencyCode" })
  currencyCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExternalIdentifier" })
  externalIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Features" })
  features?: SubscriptionPlanFeaturesEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "HasDuePayment" })
  hasDuePayment?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "HasDuePaymentSince" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  hasDuePaymentSince?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Identifier" })
  identifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsActive" })
  isActive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IsLifetime" })
  isLifetime?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LastPaymentOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastPaymentOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxClients" })
  maxClients?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OnHold" })
  onHold?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "OrderIdentifier" })
  orderIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Price" })
  price?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Recurrence" })
  recurrence?: SubscriptionPlanRecurrenceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SaleId" })
  saleId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: SubscriptionPlanStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SystemCancelationReason" })
  systemCancelationReason?: SubscriptionPlanSystemCancelationReasonEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TrialEndsOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trialEndsOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TrialNumberOfDays" })
  trialNumberOfDays?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TrialStartsOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trialStartsOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "UserId" })
  userId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: number;
}
