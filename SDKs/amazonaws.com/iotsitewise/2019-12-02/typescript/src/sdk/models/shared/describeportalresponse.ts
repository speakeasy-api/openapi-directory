/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Alarms } from "./alarms";
import { AuthModeEnum } from "./authmodeenum";
import { ImageLocation } from "./imagelocation";
import { PortalStatus } from "./portalstatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribePortalResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "alarms" })
  @Type(() => Alarms)
  alarms?: Alarms;

  @SpeakeasyMetadata()
  @Expose({ name: "notificationSenderEmail" })
  notificationSenderEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalArn" })
  portalArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalAuthMode" })
  portalAuthMode?: AuthModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "portalClientId" })
  portalClientId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalContactEmail" })
  portalContactEmail: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalCreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  portalCreationDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "portalDescription" })
  portalDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalId" })
  portalId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalLastUpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  portalLastUpdateDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "portalLogoImageLocation" })
  @Type(() => ImageLocation)
  portalLogoImageLocation?: ImageLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "portalName" })
  portalName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalStartUrl" })
  portalStartUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portalStatus" })
  @Type(() => PortalStatus)
  portalStatus: PortalStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;
}
