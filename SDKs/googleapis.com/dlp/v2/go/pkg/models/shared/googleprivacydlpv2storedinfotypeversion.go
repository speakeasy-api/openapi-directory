// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum - Stored info type version state. Read-only, updated by the system during dictionary creation.
type GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum string

const (
	GooglePrivacyDlpV2StoredInfoTypeVersionStateEnumStoredInfoTypeStateUnspecified GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum = "STORED_INFO_TYPE_STATE_UNSPECIFIED"
	GooglePrivacyDlpV2StoredInfoTypeVersionStateEnumPending                        GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum = "PENDING"
	GooglePrivacyDlpV2StoredInfoTypeVersionStateEnumReady                          GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum = "READY"
	GooglePrivacyDlpV2StoredInfoTypeVersionStateEnumFailed                         GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum = "FAILED"
	GooglePrivacyDlpV2StoredInfoTypeVersionStateEnumInvalid                        GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum = "INVALID"
)

func (e *GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STORED_INFO_TYPE_STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "READY":
		fallthrough
	case "FAILED":
		fallthrough
	case "INVALID":
		*e = GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum: %s", s)
	}
}

// GooglePrivacyDlpV2StoredInfoTypeVersion - Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state.
type GooglePrivacyDlpV2StoredInfoTypeVersion struct {
	// Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
	Config *GooglePrivacyDlpV2StoredInfoTypeConfig `json:"config,omitempty"`
	// Create timestamp of the version. Read-only, determined by the system when the version is created.
	CreateTime *string `json:"createTime,omitempty"`
	// Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.
	Errors []GooglePrivacyDlpV2Error `json:"errors,omitempty"`
	// Stored info type version state. Read-only, updated by the system during dictionary creation.
	State *GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum `json:"state,omitempty"`
	// Statistics for a StoredInfoType.
	Stats *GooglePrivacyDlpV2StoredInfoTypeStats `json:"stats,omitempty"`
}
