"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Operation = exports.OperationWarnings = exports.OperationWarningsData = exports.OperationWarningsCodeEnum = exports.OperationStatusEnum = exports.OperationError = exports.OperationErrorErrors = exports.OperationErrorErrorsErrorDetails = void 0;
var utils_1 = require("../../../internal/utils");
var errorinfo_1 = require("./errorinfo");
var help_1 = require("./help");
var localizedmessage_1 = require("./localizedmessage");
var quotaexceededinfo_1 = require("./quotaexceededinfo");
var setcommoninstancemetadataoperationmetadata_1 = require("./setcommoninstancemetadataoperationmetadata");
var class_transformer_1 = require("class-transformer");
var OperationErrorErrorsErrorDetails = /** @class */ (function (_super) {
    __extends(OperationErrorErrorsErrorDetails, _super);
    function OperationErrorErrorsErrorDetails() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "errorInfo" }),
        (0, class_transformer_1.Type)(function () { return errorinfo_1.ErrorInfo; }),
        __metadata("design:type", errorinfo_1.ErrorInfo)
    ], OperationErrorErrorsErrorDetails.prototype, "errorInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "help" }),
        (0, class_transformer_1.Type)(function () { return help_1.Help; }),
        __metadata("design:type", help_1.Help)
    ], OperationErrorErrorsErrorDetails.prototype, "help", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "localizedMessage" }),
        (0, class_transformer_1.Type)(function () { return localizedmessage_1.LocalizedMessage; }),
        __metadata("design:type", localizedmessage_1.LocalizedMessage)
    ], OperationErrorErrorsErrorDetails.prototype, "localizedMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quotaInfo" }),
        (0, class_transformer_1.Type)(function () { return quotaexceededinfo_1.QuotaExceededInfo; }),
        __metadata("design:type", quotaexceededinfo_1.QuotaExceededInfo)
    ], OperationErrorErrorsErrorDetails.prototype, "quotaInfo", void 0);
    return OperationErrorErrorsErrorDetails;
}(utils_1.SpeakeasyBase));
exports.OperationErrorErrorsErrorDetails = OperationErrorErrorsErrorDetails;
var OperationErrorErrors = /** @class */ (function (_super) {
    __extends(OperationErrorErrors, _super);
    function OperationErrorErrors() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], OperationErrorErrors.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: OperationErrorErrorsErrorDetails }),
        (0, class_transformer_1.Expose)({ name: "errorDetails" }),
        (0, class_transformer_1.Type)(function () { return OperationErrorErrorsErrorDetails; }),
        __metadata("design:type", Array)
    ], OperationErrorErrors.prototype, "errorDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        __metadata("design:type", String)
    ], OperationErrorErrors.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], OperationErrorErrors.prototype, "message", void 0);
    return OperationErrorErrors;
}(utils_1.SpeakeasyBase));
exports.OperationErrorErrors = OperationErrorErrors;
/**
 * [Output Only] If errors are generated during processing of the operation, this field will be populated.
 */
var OperationError = /** @class */ (function (_super) {
    __extends(OperationError, _super);
    function OperationError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: OperationErrorErrors }),
        (0, class_transformer_1.Expose)({ name: "errors" }),
        (0, class_transformer_1.Type)(function () { return OperationErrorErrors; }),
        __metadata("design:type", Array)
    ], OperationError.prototype, "errors", void 0);
    return OperationError;
}(utils_1.SpeakeasyBase));
exports.OperationError = OperationError;
/**
 * [Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`.
 */
var OperationStatusEnum;
(function (OperationStatusEnum) {
    OperationStatusEnum["Done"] = "DONE";
    OperationStatusEnum["Pending"] = "PENDING";
    OperationStatusEnum["Running"] = "RUNNING";
})(OperationStatusEnum = exports.OperationStatusEnum || (exports.OperationStatusEnum = {}));
/**
 * [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
 */
var OperationWarningsCodeEnum;
(function (OperationWarningsCodeEnum) {
    OperationWarningsCodeEnum["CleanupFailed"] = "CLEANUP_FAILED";
    OperationWarningsCodeEnum["DeprecatedResourceUsed"] = "DEPRECATED_RESOURCE_USED";
    OperationWarningsCodeEnum["DeprecatedTypeUsed"] = "DEPRECATED_TYPE_USED";
    OperationWarningsCodeEnum["DiskSizeLargerThanImageSize"] = "DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
    OperationWarningsCodeEnum["ExperimentalTypeUsed"] = "EXPERIMENTAL_TYPE_USED";
    OperationWarningsCodeEnum["ExternalApiWarning"] = "EXTERNAL_API_WARNING";
    OperationWarningsCodeEnum["FieldValueOverriden"] = "FIELD_VALUE_OVERRIDEN";
    OperationWarningsCodeEnum["InjectedKernelsDeprecated"] = "INJECTED_KERNELS_DEPRECATED";
    OperationWarningsCodeEnum["InvalidHealthCheckForDynamicWieghtedLb"] = "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
    OperationWarningsCodeEnum["LargeDeploymentWarning"] = "LARGE_DEPLOYMENT_WARNING";
    OperationWarningsCodeEnum["MissingTypeDependency"] = "MISSING_TYPE_DEPENDENCY";
    OperationWarningsCodeEnum["NextHopAddressNotAssigned"] = "NEXT_HOP_ADDRESS_NOT_ASSIGNED";
    OperationWarningsCodeEnum["NextHopCannotIpForward"] = "NEXT_HOP_CANNOT_IP_FORWARD";
    OperationWarningsCodeEnum["NextHopInstanceHasNoIpv6Interface"] = "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
    OperationWarningsCodeEnum["NextHopInstanceNotFound"] = "NEXT_HOP_INSTANCE_NOT_FOUND";
    OperationWarningsCodeEnum["NextHopInstanceNotOnNetwork"] = "NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
    OperationWarningsCodeEnum["NextHopNotRunning"] = "NEXT_HOP_NOT_RUNNING";
    OperationWarningsCodeEnum["NotCriticalError"] = "NOT_CRITICAL_ERROR";
    OperationWarningsCodeEnum["NoResultsOnPage"] = "NO_RESULTS_ON_PAGE";
    OperationWarningsCodeEnum["PartialSuccess"] = "PARTIAL_SUCCESS";
    OperationWarningsCodeEnum["RequiredTosAgreement"] = "REQUIRED_TOS_AGREEMENT";
    OperationWarningsCodeEnum["ResourceInUseByOtherResourceWarning"] = "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
    OperationWarningsCodeEnum["ResourceNotDeleted"] = "RESOURCE_NOT_DELETED";
    OperationWarningsCodeEnum["SchemaValidationIgnored"] = "SCHEMA_VALIDATION_IGNORED";
    OperationWarningsCodeEnum["SingleInstancePropertyTemplate"] = "SINGLE_INSTANCE_PROPERTY_TEMPLATE";
    OperationWarningsCodeEnum["UndeclaredProperties"] = "UNDECLARED_PROPERTIES";
    OperationWarningsCodeEnum["Unreachable"] = "UNREACHABLE";
})(OperationWarningsCodeEnum = exports.OperationWarningsCodeEnum || (exports.OperationWarningsCodeEnum = {}));
var OperationWarningsData = /** @class */ (function (_super) {
    __extends(OperationWarningsData, _super);
    function OperationWarningsData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], OperationWarningsData.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], OperationWarningsData.prototype, "value", void 0);
    return OperationWarningsData;
}(utils_1.SpeakeasyBase));
exports.OperationWarningsData = OperationWarningsData;
var OperationWarnings = /** @class */ (function (_super) {
    __extends(OperationWarnings, _super);
    function OperationWarnings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], OperationWarnings.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: OperationWarningsData }),
        (0, class_transformer_1.Expose)({ name: "data" }),
        (0, class_transformer_1.Type)(function () { return OperationWarningsData; }),
        __metadata("design:type", Array)
    ], OperationWarnings.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], OperationWarnings.prototype, "message", void 0);
    return OperationWarnings;
}(utils_1.SpeakeasyBase));
exports.OperationWarnings = OperationWarnings;
/**
 * Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/alpha/globalOperations) * [Regional](/compute/docs/reference/rest/alpha/regionOperations) * [Zonal](/compute/docs/reference/rest/alpha/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources.
 */
var Operation = /** @class */ (function (_super) {
    __extends(Operation, _super);
    function Operation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientOperationId" }),
        __metadata("design:type", String)
    ], Operation.prototype, "clientOperationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], Operation.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Operation.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "endTime" }),
        __metadata("design:type", String)
    ], Operation.prototype, "endTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        (0, class_transformer_1.Type)(function () { return OperationError; }),
        __metadata("design:type", OperationError)
    ], Operation.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "httpErrorMessage" }),
        __metadata("design:type", String)
    ], Operation.prototype, "httpErrorMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "httpErrorStatusCode" }),
        __metadata("design:type", Number)
    ], Operation.prototype, "httpErrorStatusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Operation.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "insertTime" }),
        __metadata("design:type", String)
    ], Operation.prototype, "insertTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Operation.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Operation.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "operationGroupId" }),
        __metadata("design:type", String)
    ], Operation.prototype, "operationGroupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "operationType" }),
        __metadata("design:type", String)
    ], Operation.prototype, "operationType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "progress" }),
        __metadata("design:type", Number)
    ], Operation.prototype, "progress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        __metadata("design:type", String)
    ], Operation.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], Operation.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLinkWithId" }),
        __metadata("design:type", String)
    ], Operation.prototype, "selfLinkWithId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "setCommonInstanceMetadataOperationMetadata" }),
        (0, class_transformer_1.Type)(function () { return setcommoninstancemetadataoperationmetadata_1.SetCommonInstanceMetadataOperationMetadata; }),
        __metadata("design:type", setcommoninstancemetadataoperationmetadata_1.SetCommonInstanceMetadataOperationMetadata)
    ], Operation.prototype, "setCommonInstanceMetadataOperationMetadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startTime" }),
        __metadata("design:type", String)
    ], Operation.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Operation.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "statusMessage" }),
        __metadata("design:type", String)
    ], Operation.prototype, "statusMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetId" }),
        __metadata("design:type", String)
    ], Operation.prototype, "targetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "targetLink" }),
        __metadata("design:type", String)
    ], Operation.prototype, "targetLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user" }),
        __metadata("design:type", String)
    ], Operation.prototype, "user", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: OperationWarnings }),
        (0, class_transformer_1.Expose)({ name: "warnings" }),
        (0, class_transformer_1.Type)(function () { return OperationWarnings; }),
        __metadata("design:type", Array)
    ], Operation.prototype, "warnings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "zone" }),
        __metadata("design:type", String)
    ], Operation.prototype, "zone", void 0);
    return Operation;
}(utils_1.SpeakeasyBase));
exports.Operation = Operation;
