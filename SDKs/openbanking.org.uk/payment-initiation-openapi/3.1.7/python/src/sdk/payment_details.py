"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class PaymentDetails:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_domestic_payments_domestic_payment_id_payment_details(self, request: operations.GetDomesticPaymentsDomesticPaymentIDPaymentDetailsRequest, security: operations.GetDomesticPaymentsDomesticPaymentIDPaymentDetailsSecurity) -> operations.GetDomesticPaymentsDomesticPaymentIDPaymentDetailsResponse:
        r"""Get Payment Details"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetDomesticPaymentsDomesticPaymentIDPaymentDetailsRequest, base_url, '/domestic-payments/{DomesticPaymentId}/payment-details', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetDomesticPaymentsDomesticPaymentIDPaymentDetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
        elif http_res.status_code in [400, 403, 500]:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
        elif http_res.status_code in [401, 404, 405, 406]:
            pass
        elif http_res.status_code == 429:
            res.headers = http_res.headers
            

        return res

    def get_domestic_scheduled_payments_domestic_scheduled_payment_id_payment_details(self, request: operations.GetDomesticScheduledPaymentsDomesticScheduledPaymentIDPaymentDetailsRequest, security: operations.GetDomesticScheduledPaymentsDomesticScheduledPaymentIDPaymentDetailsSecurity) -> operations.GetDomesticScheduledPaymentsDomesticScheduledPaymentIDPaymentDetailsResponse:
        r"""Get Payment Details"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetDomesticScheduledPaymentsDomesticScheduledPaymentIDPaymentDetailsRequest, base_url, '/domestic-scheduled-payments/{DomesticScheduledPaymentId}/payment-details', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetDomesticScheduledPaymentsDomesticScheduledPaymentIDPaymentDetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
        elif http_res.status_code in [400, 403, 500]:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
        elif http_res.status_code in [401, 404, 405, 406]:
            pass
        elif http_res.status_code == 429:
            res.headers = http_res.headers
            

        return res

    def get_domestic_standing_orders_domestic_standing_order_id_payment_details(self, request: operations.GetDomesticStandingOrdersDomesticStandingOrderIDPaymentDetailsRequest, security: operations.GetDomesticStandingOrdersDomesticStandingOrderIDPaymentDetailsSecurity) -> operations.GetDomesticStandingOrdersDomesticStandingOrderIDPaymentDetailsResponse:
        r"""Get Payment Details"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetDomesticStandingOrdersDomesticStandingOrderIDPaymentDetailsRequest, base_url, '/domestic-standing-orders/{DomesticStandingOrderId}/payment-details', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetDomesticStandingOrdersDomesticStandingOrderIDPaymentDetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
        elif http_res.status_code in [400, 403, 500]:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
        elif http_res.status_code in [401, 404, 405, 406]:
            pass
        elif http_res.status_code == 429:
            res.headers = http_res.headers
            

        return res

    def get_file_payments_file_payment_id_payment_details(self, request: operations.GetFilePaymentsFilePaymentIDPaymentDetailsRequest, security: operations.GetFilePaymentsFilePaymentIDPaymentDetailsSecurity) -> operations.GetFilePaymentsFilePaymentIDPaymentDetailsResponse:
        r"""Get Payment Details"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetFilePaymentsFilePaymentIDPaymentDetailsRequest, base_url, '/file-payments/{FilePaymentId}/payment-details', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetFilePaymentsFilePaymentIDPaymentDetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
        elif http_res.status_code in [400, 403, 500]:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
        elif http_res.status_code in [401, 404, 405, 406]:
            pass
        elif http_res.status_code == 429:
            res.headers = http_res.headers
            

        return res

    def get_international_payments_international_payment_id_payment_details(self, request: operations.GetInternationalPaymentsInternationalPaymentIDPaymentDetailsRequest, security: operations.GetInternationalPaymentsInternationalPaymentIDPaymentDetailsSecurity) -> operations.GetInternationalPaymentsInternationalPaymentIDPaymentDetailsResponse:
        r"""Get Payment Details"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetInternationalPaymentsInternationalPaymentIDPaymentDetailsRequest, base_url, '/international-payments/{InternationalPaymentId}/payment-details', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetInternationalPaymentsInternationalPaymentIDPaymentDetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
        elif http_res.status_code in [400, 403, 500]:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
        elif http_res.status_code in [401, 404, 405, 406]:
            pass
        elif http_res.status_code == 429:
            res.headers = http_res.headers
            

        return res

    def get_international_scheduled_payments_international_scheduled_payment_id_payment_details(self, request: operations.GetInternationalScheduledPaymentsInternationalScheduledPaymentIDPaymentDetailsRequest, security: operations.GetInternationalScheduledPaymentsInternationalScheduledPaymentIDPaymentDetailsSecurity) -> operations.GetInternationalScheduledPaymentsInternationalScheduledPaymentIDPaymentDetailsResponse:
        r"""Get Payment Details"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetInternationalScheduledPaymentsInternationalScheduledPaymentIDPaymentDetailsRequest, base_url, '/international-scheduled-payments/{InternationalScheduledPaymentId}/payment-details', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetInternationalScheduledPaymentsInternationalScheduledPaymentIDPaymentDetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
        elif http_res.status_code in [400, 403, 500]:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
        elif http_res.status_code in [401, 404, 405, 406]:
            pass
        elif http_res.status_code == 429:
            res.headers = http_res.headers
            

        return res

    def get_international_standing_orders_international_standing_order_payment_id_payment_details(self, request: operations.GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsRequest, security: operations.GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsSecurity) -> operations.GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsResponse:
        r"""Get Payment Details"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsRequest, base_url, '/international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetInternationalStandingOrdersInternationalStandingOrderPaymentIDPaymentDetailsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBWritePaymentDetailsResponse1])
                res.ob_write_payment_details_response1 = out
        elif http_res.status_code in [400, 403, 500]:
            if utils.match_content_type(content_type, 'application/jose+jwe'):
                res.body = http_res.content
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.OBErrorResponse1])
                res.ob_error_response1 = out
        elif http_res.status_code in [401, 404, 405, 406]:
            pass
        elif http_res.status_code == 429:
            res.headers = http_res.headers
            

        return res

    