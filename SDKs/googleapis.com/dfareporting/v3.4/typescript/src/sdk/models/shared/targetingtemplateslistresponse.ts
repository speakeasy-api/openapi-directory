/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TargetingTemplate } from "./targetingtemplate";
import { Expose, Type } from "class-transformer";

/**
 * Targeting Template List Response
 */
export class TargetingTemplatesListResponse extends SpeakeasyBase {
  /**
   * Identifies what kind of resource this is. Value: the fixed string "dfareporting#targetingTemplatesListResponse".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Pagination token to be used for the next list operation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Targeting template collection.
   */
  @SpeakeasyMetadata({ elemType: TargetingTemplate })
  @Expose({ name: "targetingTemplates" })
  @Type(() => TargetingTemplate)
  targetingTemplates?: TargetingTemplate[];
}
