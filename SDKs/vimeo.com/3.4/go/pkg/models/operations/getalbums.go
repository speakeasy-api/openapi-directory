// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAlbumsPathParams struct {
	// The ID of the user.
	UserID float64 `pathParam:"style=simple,explode=false,name=user_id"`
}

// GetAlbumsDirectionEnum - The sort direction of the results.
type GetAlbumsDirectionEnum string

const (
	GetAlbumsDirectionEnumAsc  GetAlbumsDirectionEnum = "asc"
	GetAlbumsDirectionEnumDesc GetAlbumsDirectionEnum = "desc"
)

func (e *GetAlbumsDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetAlbumsDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAlbumsDirectionEnum: %s", s)
	}
}

// GetAlbumsSortEnum - The way to sort the results.
type GetAlbumsSortEnum string

const (
	GetAlbumsSortEnumAlphabetical GetAlbumsSortEnum = "alphabetical"
	GetAlbumsSortEnumDate         GetAlbumsSortEnum = "date"
	GetAlbumsSortEnumDuration     GetAlbumsSortEnum = "duration"
	GetAlbumsSortEnumVideos       GetAlbumsSortEnum = "videos"
)

func (e *GetAlbumsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "duration":
		fallthrough
	case "videos":
		*e = GetAlbumsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAlbumsSortEnum: %s", s)
	}
}

type GetAlbumsQueryParams struct {
	// The sort direction of the results.
	Direction *GetAlbumsDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetAlbumsSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetAlbumsRequest struct {
	PathParams  GetAlbumsPathParams
	QueryParams GetAlbumsQueryParams
}

type GetAlbumsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The albums were returned.
	Albums []shared.Album
	// A parameter is invalid.
	LegacyError *shared.LegacyError
}
