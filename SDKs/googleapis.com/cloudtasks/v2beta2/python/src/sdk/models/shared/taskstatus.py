"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attemptstatus as shared_attemptstatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskStatus:
    r"""Status of the task."""
    
    attempt_dispatch_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attemptDispatchCount'), 'exclude': lambda f: f is None }})
    r"""Output only. The number of attempts dispatched. This count includes attempts which have been dispatched but haven't received a response."""  
    attempt_response_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attemptResponseCount'), 'exclude': lambda f: f is None }})
    r"""Output only. The number of attempts which have received a response. This field is not calculated for pull tasks."""  
    first_attempt_status: Optional[shared_attemptstatus.AttemptStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstAttemptStatus'), 'exclude': lambda f: f is None }})
    r"""The status of a task attempt."""  
    last_attempt_status: Optional[shared_attemptstatus.AttemptStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastAttemptStatus'), 'exclude': lambda f: f is None }})
    r"""The status of a task attempt."""  
    