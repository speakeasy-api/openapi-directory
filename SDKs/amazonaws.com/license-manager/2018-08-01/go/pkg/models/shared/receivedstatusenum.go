// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReceivedStatusEnum string

const (
	ReceivedStatusEnumPendingWorkflow   ReceivedStatusEnum = "PENDING_WORKFLOW"
	ReceivedStatusEnumPendingAccept     ReceivedStatusEnum = "PENDING_ACCEPT"
	ReceivedStatusEnumRejected          ReceivedStatusEnum = "REJECTED"
	ReceivedStatusEnumActive            ReceivedStatusEnum = "ACTIVE"
	ReceivedStatusEnumFailedWorkflow    ReceivedStatusEnum = "FAILED_WORKFLOW"
	ReceivedStatusEnumDeleted           ReceivedStatusEnum = "DELETED"
	ReceivedStatusEnumDisabled          ReceivedStatusEnum = "DISABLED"
	ReceivedStatusEnumWorkflowCompleted ReceivedStatusEnum = "WORKFLOW_COMPLETED"
)

func (e *ReceivedStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING_WORKFLOW":
		fallthrough
	case "PENDING_ACCEPT":
		fallthrough
	case "REJECTED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "FAILED_WORKFLOW":
		fallthrough
	case "DELETED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "WORKFLOW_COMPLETED":
		*e = ReceivedStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReceivedStatusEnum: %s", s)
	}
}
