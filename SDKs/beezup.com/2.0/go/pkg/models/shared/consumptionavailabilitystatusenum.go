// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConsumptionAvailabilityStatusEnum - The subscription consumption status
type ConsumptionAvailabilityStatusEnum string

const (
	ConsumptionAvailabilityStatusEnumAvailable   ConsumptionAvailabilityStatusEnum = "Available"
	ConsumptionAvailabilityStatusEnumDegraded    ConsumptionAvailabilityStatusEnum = "Degraded"
	ConsumptionAvailabilityStatusEnumUnavailable ConsumptionAvailabilityStatusEnum = "Unavailable"
)

func (e ConsumptionAvailabilityStatusEnum) ToPointer() *ConsumptionAvailabilityStatusEnum {
	return &e
}

func (e *ConsumptionAvailabilityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Available":
		fallthrough
	case "Degraded":
		fallthrough
	case "Unavailable":
		*e = ConsumptionAvailabilityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsumptionAvailabilityStatusEnum: %v", v)
	}
}
