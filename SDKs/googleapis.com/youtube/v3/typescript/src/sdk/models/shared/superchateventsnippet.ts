/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelProfileDetails } from "./channelprofiledetails";
import { SuperStickerMetadata } from "./superstickermetadata";
import { Expose, Transform, Type } from "class-transformer";

export class SuperChatEventSnippet extends SpeakeasyBase {
  /**
   * The purchase amount, in micros of the purchase currency. e.g., 1 is represented as 1000000.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amountMicros" })
  amountMicros?: string;

  /**
   * Channel id where the event occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelId" })
  channelId?: string;

  /**
   * The text contents of the comment left by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commentText" })
  commentText?: string;

  /**
   * The date and time when the event occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The currency in which the purchase was made. ISO 4217.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * A rendered string that displays the purchase amount and currency (e.g., "$1.00"). The string is rendered for the given language.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayString" })
  displayString?: string;

  /**
   * True if this event is a Super Sticker event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSuperStickerEvent" })
  isSuperStickerEvent?: boolean;

  /**
   * The tier for the paid message, which is based on the amount of money spent to purchase the message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageType" })
  messageType?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "superStickerMetadata" })
  @Type(() => SuperStickerMetadata)
  superStickerMetadata?: SuperStickerMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "supporterDetails" })
  @Type(() => ChannelProfileDetails)
  supporterDetails?: ChannelProfileDetails;
}
