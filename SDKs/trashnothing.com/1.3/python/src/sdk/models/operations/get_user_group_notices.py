"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import groupnotice as shared_groupnotice
from typing import Optional


@dataclasses.dataclass
class GetUserGroupNoticesRequest:
    
    group_ids: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'group_ids', 'style': 'form', 'explode': True }})
    r"""A comma separated list of group IDs to return notices for.  If unset, notices for all the users groups will be returned."""  
    

@dataclasses.dataclass
class GetUserGroupNoticesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    group_notices: Optional[list[shared_groupnotice.GroupNotice]] = dataclasses.field(default=None)
    r"""The users group notices."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    