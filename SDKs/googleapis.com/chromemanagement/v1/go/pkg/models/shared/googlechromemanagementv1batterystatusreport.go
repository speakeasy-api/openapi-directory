// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum - Output only. Battery health.
type GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum string

const (
	GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnumBatteryHealthUnspecified GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum = "BATTERY_HEALTH_UNSPECIFIED"
	GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnumBatteryHealthNormal      GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum = "BATTERY_HEALTH_NORMAL"
	GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnumBatteryReplaceSoon       GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum = "BATTERY_REPLACE_SOON"
	GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnumBatteryReplaceNow        GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum = "BATTERY_REPLACE_NOW"
)

func (e *GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BATTERY_HEALTH_UNSPECIFIED":
		fallthrough
	case "BATTERY_HEALTH_NORMAL":
		fallthrough
	case "BATTERY_REPLACE_SOON":
		fallthrough
	case "BATTERY_REPLACE_NOW":
		*e = GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum: %s", s)
	}
}

// GoogleChromeManagementV1BatteryStatusReport - Status data for battery. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A
type GoogleChromeManagementV1BatteryStatusReport struct {
	// Output only. Battery health.
	BatteryHealth *GoogleChromeManagementV1BatteryStatusReportBatteryHealthEnum `json:"batteryHealth,omitempty"`
	// Output only. Cycle count.
	CycleCount *int `json:"cycleCount,omitempty"`
	// Output only. Full charge capacity (mAmpere-hours).
	FullChargeCapacity *string `json:"fullChargeCapacity,omitempty"`
	// Output only. Timestamp of when the sample was collected on device
	ReportTime *string `json:"reportTime,omitempty"`
	// Output only. Sampling data for the battery sorted in a decreasing order of report_time.
	Sample []GoogleChromeManagementV1BatterySampleReport `json:"sample,omitempty"`
	// Output only. Battery serial number.
	SerialNumber *string `json:"serialNumber,omitempty"`
}
