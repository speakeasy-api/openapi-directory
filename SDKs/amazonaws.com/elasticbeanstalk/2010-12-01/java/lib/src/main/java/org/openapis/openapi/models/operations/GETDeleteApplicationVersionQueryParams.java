/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDeleteApplicationVersionQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDeleteApplicationVersionActionEnum action;
    public GETDeleteApplicationVersionQueryParams withAction(GETDeleteApplicationVersionActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The name of the application to which the version belongs.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ApplicationName")
    public String applicationName;
    public GETDeleteApplicationVersionQueryParams withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }
    
    /**
     * Set to &lt;code&gt;true&lt;/code&gt; to delete the source bundle from your storage bucket. Otherwise, the application version is deleted only from Elastic Beanstalk and the source bundle remains in Amazon S3.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DeleteSourceBundle")
    public Boolean deleteSourceBundle;
    public GETDeleteApplicationVersionQueryParams withDeleteSourceBundle(Boolean deleteSourceBundle) {
        this.deleteSourceBundle = deleteSourceBundle;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDeleteApplicationVersionVersionEnum version;
    public GETDeleteApplicationVersionQueryParams withVersion(GETDeleteApplicationVersionVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * The label of the version to delete.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VersionLabel")
    public String versionLabel;
    public GETDeleteApplicationVersionQueryParams withVersionLabel(String versionLabel) {
        this.versionLabel = versionLabel;
        return this;
    }
    
}
