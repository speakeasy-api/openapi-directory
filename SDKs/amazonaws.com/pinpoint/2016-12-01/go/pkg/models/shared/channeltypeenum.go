// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ChannelTypeEnum string

const (
	ChannelTypeEnumPush            ChannelTypeEnum = "PUSH"
	ChannelTypeEnumGcm             ChannelTypeEnum = "GCM"
	ChannelTypeEnumApns            ChannelTypeEnum = "APNS"
	ChannelTypeEnumApnsSandbox     ChannelTypeEnum = "APNS_SANDBOX"
	ChannelTypeEnumApnsVoip        ChannelTypeEnum = "APNS_VOIP"
	ChannelTypeEnumApnsVoipSandbox ChannelTypeEnum = "APNS_VOIP_SANDBOX"
	ChannelTypeEnumAdm             ChannelTypeEnum = "ADM"
	ChannelTypeEnumSms             ChannelTypeEnum = "SMS"
	ChannelTypeEnumVoice           ChannelTypeEnum = "VOICE"
	ChannelTypeEnumEmail           ChannelTypeEnum = "EMAIL"
	ChannelTypeEnumBaidu           ChannelTypeEnum = "BAIDU"
	ChannelTypeEnumCustom          ChannelTypeEnum = "CUSTOM"
	ChannelTypeEnumInApp           ChannelTypeEnum = "IN_APP"
)

func (e ChannelTypeEnum) ToPointer() *ChannelTypeEnum {
	return &e
}

func (e *ChannelTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PUSH":
		fallthrough
	case "GCM":
		fallthrough
	case "APNS":
		fallthrough
	case "APNS_SANDBOX":
		fallthrough
	case "APNS_VOIP":
		fallthrough
	case "APNS_VOIP_SANDBOX":
		fallthrough
	case "ADM":
		fallthrough
	case "SMS":
		fallthrough
	case "VOICE":
		fallthrough
	case "EMAIL":
		fallthrough
	case "BAIDU":
		fallthrough
	case "CUSTOM":
		fallthrough
	case "IN_APP":
		*e = ChannelTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelTypeEnum: %v", v)
	}
}
