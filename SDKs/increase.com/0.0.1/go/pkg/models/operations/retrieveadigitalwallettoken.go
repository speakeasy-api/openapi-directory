// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveADigitalWalletTokenRequest struct {
	DigitalWalletTokenID string `pathParam:"style=simple,explode=false,name=digital_wallet_token_id"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON13StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveADigitalWalletTokenDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON13TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveADigitalWalletTokenDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON13 struct {
	Detail     string                                                        `json:"detail"`
	RetryAfter *int64                                                        `json:"retry_after,omitempty"`
	Status     RetrieveADigitalWalletTokenDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                        `json:"title"`
	Type       RetrieveADigitalWalletTokenDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON12StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveADigitalWalletTokenDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON12TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveADigitalWalletTokenDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON12 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON11StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveADigitalWalletTokenDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON11TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveADigitalWalletTokenDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON11 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON10StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON10StatusEnumFourHundred RetrieveADigitalWalletTokenDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON10TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveADigitalWalletTokenDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON10 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON9StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON9StatusEnumFourHundred RetrieveADigitalWalletTokenDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON9TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveADigitalWalletTokenDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                     `json:"errors,omitempty"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON8StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveADigitalWalletTokenDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON8TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveADigitalWalletTokenDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON8 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON7StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveADigitalWalletTokenDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON7TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveADigitalWalletTokenDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON7 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON6StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON6StatusEnumFiveHundred RetrieveADigitalWalletTokenDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON6TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON6TypeEnumInternalServerError RetrieveADigitalWalletTokenDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON6 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON5StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveADigitalWalletTokenDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON5TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveADigitalWalletTokenDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON5 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON4StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveADigitalWalletTokenDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON4TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveADigitalWalletTokenDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON4 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON3StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveADigitalWalletTokenDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON3TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveADigitalWalletTokenDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON3 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON2StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveADigitalWalletTokenDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON2TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveADigitalWalletTokenDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON2 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON1StatusEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveADigitalWalletTokenDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON1TypeEnum string

const (
	RetrieveADigitalWalletTokenDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveADigitalWalletTokenDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RetrieveADigitalWalletTokenDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RetrieveADigitalWalletTokenDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveADigitalWalletTokenDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RetrieveADigitalWalletTokenDefaultApplicationJSON1 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveADigitalWalletTokenDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveADigitalWalletTokenDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveADigitalWalletTokenResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Digital Wallet Token
	DigitalWalletToken *shared.DigitalWalletToken
	// Error
	Error interface{}
}
