// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTAuthorizeSecurityGroupEgressActionEnum
type POSTAuthorizeSecurityGroupEgressActionEnum string

const (
	POSTAuthorizeSecurityGroupEgressActionEnumAuthorizeSecurityGroupEgress POSTAuthorizeSecurityGroupEgressActionEnum = "AuthorizeSecurityGroupEgress"
)

func (e *POSTAuthorizeSecurityGroupEgressActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AuthorizeSecurityGroupEgress":
		*e = POSTAuthorizeSecurityGroupEgressActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAuthorizeSecurityGroupEgressActionEnum: %s", s)
	}
}

// POSTAuthorizeSecurityGroupEgressVersionEnum
type POSTAuthorizeSecurityGroupEgressVersionEnum string

const (
	POSTAuthorizeSecurityGroupEgressVersionEnumTwoThousandAndSixteen1115 POSTAuthorizeSecurityGroupEgressVersionEnum = "2016-11-15"
)

func (e *POSTAuthorizeSecurityGroupEgressVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTAuthorizeSecurityGroupEgressVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAuthorizeSecurityGroupEgressVersionEnum: %s", s)
	}
}

type POSTAuthorizeSecurityGroupEgressRequest struct {
	Action            POSTAuthorizeSecurityGroupEgressActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                      `request:"mediaType=text/xml"`
	Version           POSTAuthorizeSecurityGroupEgressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTAuthorizeSecurityGroupEgressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
