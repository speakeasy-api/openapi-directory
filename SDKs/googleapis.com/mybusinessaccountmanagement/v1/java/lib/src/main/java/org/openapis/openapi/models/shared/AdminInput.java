/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AdminInput - An administrator of an Account or a location.
 */
public class AdminInput {
    /**
     * Immutable. The name of the Account resource that this Admin refers to. Used when calling locations.admins.create to invite a LocationGroup as an admin. If both this field and `admin` are set on `CREATE` requests, this field takes precedence and the email address in `admin` will be ignored. Format: `accounts/{account}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account")
    public String account;
    public AdminInput withAccount(String account) {
        this.account = account;
        return this;
    }
    
    /**
     * Optional. The name of the admin. When making the initial invitation, this is the invitee's email address. On `GET` calls, the user's email address is returned if the invitation is still pending. Otherwise, it contains the user's first and last names. This field is only needed to be set during admin creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("admin")
    public String admin;
    public AdminInput withAdmin(String admin) {
        this.admin = admin;
        return this;
    }
    
    /**
     * Immutable. The resource name. For account admins, this is in the form: `accounts/{account_id}/admins/{admin_id}` For location admins, this is in the form: `locations/{location_id}/admins/{admin_id}` This field will be ignored if set during admin creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public AdminInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Required. Specifies the role that this admin uses with the specified Account or Location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public AdminRoleEnum role;
    public AdminInput withRole(AdminRoleEnum role) {
        this.role = role;
        return this;
    }
    
}
