"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configsource as shared_configsource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubmitConfigSourceRequest:
    r"""Request message for SubmitConfigSource method."""
    
    config_source: Optional[shared_configsource.ConfigSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configSource'), 'exclude': lambda f: f is None }})
    r"""Represents a source file which is used to generate the service configuration defined by `google.api.Service`."""  
    validate_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validateOnly'), 'exclude': lambda f: f is None }})
    r"""Optional. If set, this will result in the generation of a `google.api.Service` configuration based on the `ConfigSource` provided, but the generated config and the sources will NOT be persisted."""  
    