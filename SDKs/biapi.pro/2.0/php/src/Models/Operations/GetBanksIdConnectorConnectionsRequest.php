<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetBanksIdConnectorConnectionsRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=expand')]
    public ?string $expand = null;
    
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id_connector')]
    public int $idConnector;
    
    /**
     * methode of selection use between 'diversity' (default), 'cover' and 'type_select'
     * 
     * @var ?string $method
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=method')]
    public ?string $method = null;
    
    /**
     * Ensure the connection will not have a sync happening for at
     * 
     * @var ?int $minutesWithoutSync
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=minutes_without_sync')]
    public ?int $minutesWithoutSync = null;
    
    /**
     * the number of requested connections, if applicable by the method
     * 
     * @var ?int $n
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=n')]
    public ?int $n = null;
    
    /**
     * for 'type_select' method. Each connection requires at least N
     * 
     * @var ?int $occurences
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=occurences')]
    public ?int $occurences = null;
    
    /**
     * specify a source name that should have a null state
     * 
     * @var ?string $source
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=source')]
    public ?string $source = null;
    
    /**
     * for 'type_select' method. Specific account type id (weboob_type_id) to select
     * 
     * @var ?int $type
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type')]
    public ?int $type = null;
    
	public function __construct()
	{
		$this->expand = null;
		$this->idConnector = 0;
		$this->method = null;
		$this->minutesWithoutSync = null;
		$this->n = null;
		$this->occurences = null;
		$this->source = null;
		$this->type = null;
	}
}
