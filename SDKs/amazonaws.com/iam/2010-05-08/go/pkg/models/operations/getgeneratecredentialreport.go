// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGenerateCredentialReportActionEnum
type GETGenerateCredentialReportActionEnum string

const (
	GETGenerateCredentialReportActionEnumGenerateCredentialReport GETGenerateCredentialReportActionEnum = "GenerateCredentialReport"
)

func (e GETGenerateCredentialReportActionEnum) ToPointer() *GETGenerateCredentialReportActionEnum {
	return &e
}

func (e *GETGenerateCredentialReportActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GenerateCredentialReport":
		*e = GETGenerateCredentialReportActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGenerateCredentialReportActionEnum: %v", v)
	}
}

// GETGenerateCredentialReportVersionEnum
type GETGenerateCredentialReportVersionEnum string

const (
	GETGenerateCredentialReportVersionEnumTwoThousandAndTen0508 GETGenerateCredentialReportVersionEnum = "2010-05-08"
)

func (e GETGenerateCredentialReportVersionEnum) ToPointer() *GETGenerateCredentialReportVersionEnum {
	return &e
}

func (e *GETGenerateCredentialReportVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETGenerateCredentialReportVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGenerateCredentialReportVersionEnum: %v", v)
	}
}

type GETGenerateCredentialReportRequest struct {
	Action            GETGenerateCredentialReportActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version           GETGenerateCredentialReportVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGenerateCredentialReportResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
