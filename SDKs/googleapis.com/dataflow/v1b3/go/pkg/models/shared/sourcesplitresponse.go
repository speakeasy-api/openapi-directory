// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SourceSplitResponseOutcomeEnum - Indicates whether splitting happened and produced a list of bundles. If this is USE_CURRENT_SOURCE_AS_IS, the current source should be processed "as is" without splitting. "bundles" is ignored in this case. If this is SPLITTING_HAPPENED, then "bundles" contains a list of bundles into which the source was split.
type SourceSplitResponseOutcomeEnum string

const (
	SourceSplitResponseOutcomeEnumSourceSplitOutcomeUnknown           SourceSplitResponseOutcomeEnum = "SOURCE_SPLIT_OUTCOME_UNKNOWN"
	SourceSplitResponseOutcomeEnumSourceSplitOutcomeUseCurrent        SourceSplitResponseOutcomeEnum = "SOURCE_SPLIT_OUTCOME_USE_CURRENT"
	SourceSplitResponseOutcomeEnumSourceSplitOutcomeSplittingHappened SourceSplitResponseOutcomeEnum = "SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED"
)

func (e SourceSplitResponseOutcomeEnum) ToPointer() *SourceSplitResponseOutcomeEnum {
	return &e
}

func (e *SourceSplitResponseOutcomeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SOURCE_SPLIT_OUTCOME_UNKNOWN":
		fallthrough
	case "SOURCE_SPLIT_OUTCOME_USE_CURRENT":
		fallthrough
	case "SOURCE_SPLIT_OUTCOME_SPLITTING_HAPPENED":
		*e = SourceSplitResponseOutcomeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSplitResponseOutcomeEnum: %v", v)
	}
}

// SourceSplitResponse - The response to a SourceSplitRequest.
type SourceSplitResponse struct {
	// If outcome is SPLITTING_HAPPENED, then this is a list of bundles into which the source was split. Otherwise this field is ignored. This list can be empty, which means the source represents an empty input.
	Bundles []DerivedSource `json:"bundles,omitempty"`
	// Indicates whether splitting happened and produced a list of bundles. If this is USE_CURRENT_SOURCE_AS_IS, the current source should be processed "as is" without splitting. "bundles" is ignored in this case. If this is SPLITTING_HAPPENED, then "bundles" contains a list of bundles into which the source was split.
	Outcome *SourceSplitResponseOutcomeEnum `json:"outcome,omitempty"`
	// DEPRECATED in favor of bundles.
	Shards []SourceSplitShard `json:"shards,omitempty"`
}
