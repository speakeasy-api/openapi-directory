/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Payroll {
    /**
     * The date on which employees will be paid for the payroll.
     */
    @JsonProperty("check_date")
    public String checkDate;

    public Payroll withCheckDate(String checkDate) {
        this.checkDate = checkDate;
        return this;
    }
    
    /**
     * The unique identifier of the company.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_id")
    public String companyId;

    public Payroll withCompanyId(String companyId) {
        this.companyId = companyId;
        return this;
    }
    
    /**
     * An array of compensations for the payroll.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compensations")
    public Compensation[] compensations;

    public Payroll withCompensations(Compensation[] compensations) {
        this.compensations = compensations;
        return this;
    }
    
    /**
     * The end date, inclusive, of the pay period.
     */
    @JsonProperty("end_date")
    public String endDate;

    public Payroll withEndDate(String endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonProperty("id")
    public String id;

    public Payroll withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether or not the payroll has been successfully processed. Note that processed payrolls cannot be updated.
     */
    @JsonProperty("processed")
    public Boolean processed;

    public Payroll withProcessed(Boolean processed) {
        this.processed = processed;
        return this;
    }
    
    /**
     * The date the payroll was processed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processed_date")
    public String processedDate;

    public Payroll withProcessedDate(String processedDate) {
        this.processedDate = processedDate;
        return this;
    }
    
    /**
     * The start date, inclusive, of the pay period.
     */
    @JsonProperty("start_date")
    public String startDate;

    public Payroll withStartDate(String startDate) {
        this.startDate = startDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totals")
    public PayrollTotals totals;

    public Payroll withTotals(PayrollTotals totals) {
        this.totals = totals;
        return this;
    }
    
    public Payroll(@JsonProperty("check_date") String checkDate, @JsonProperty("end_date") String endDate, @JsonProperty("id") String id, @JsonProperty("processed") Boolean processed, @JsonProperty("start_date") String startDate) {
        this.checkDate = checkDate;
        this.endDate = endDate;
        this.id = id;
        this.processed = processed;
        this.startDate = startDate;
  }
}
