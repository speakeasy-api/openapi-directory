"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import repositorytriggereventenum_enum as shared_repositorytriggereventenum_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RepositoryTrigger:
    r"""Information about a trigger for a repository."""
    
    destination_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationArn') }})  
    events: list[shared_repositorytriggereventenum_enum.RepositoryTriggerEventEnumEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('events') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    branches: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('branches'), 'exclude': lambda f: f is None }})  
    custom_data: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customData'), 'exclude': lambda f: f is None }})  
    