// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChannelSectionSnippetStyleEnum - The style of the channel section.
type ChannelSectionSnippetStyleEnum string

const (
	ChannelSectionSnippetStyleEnumChannelsectionStyleUnspecified ChannelSectionSnippetStyleEnum = "channelsectionStyleUnspecified"
	ChannelSectionSnippetStyleEnumHorizontalRow                  ChannelSectionSnippetStyleEnum = "horizontalRow"
	ChannelSectionSnippetStyleEnumVerticalList                   ChannelSectionSnippetStyleEnum = "verticalList"
)

func (e ChannelSectionSnippetStyleEnum) ToPointer() *ChannelSectionSnippetStyleEnum {
	return &e
}

func (e *ChannelSectionSnippetStyleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "channelsectionStyleUnspecified":
		fallthrough
	case "horizontalRow":
		fallthrough
	case "verticalList":
		*e = ChannelSectionSnippetStyleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelSectionSnippetStyleEnum: %v", v)
	}
}

// ChannelSectionSnippetTypeEnum - The type of the channel section.
type ChannelSectionSnippetTypeEnum string

const (
	ChannelSectionSnippetTypeEnumChannelsectionTypeUndefined ChannelSectionSnippetTypeEnum = "channelsectionTypeUndefined"
	ChannelSectionSnippetTypeEnumSinglePlaylist              ChannelSectionSnippetTypeEnum = "singlePlaylist"
	ChannelSectionSnippetTypeEnumMultiplePlaylists           ChannelSectionSnippetTypeEnum = "multiplePlaylists"
	ChannelSectionSnippetTypeEnumPopularUploads              ChannelSectionSnippetTypeEnum = "popularUploads"
	ChannelSectionSnippetTypeEnumRecentUploads               ChannelSectionSnippetTypeEnum = "recentUploads"
	ChannelSectionSnippetTypeEnumLikes                       ChannelSectionSnippetTypeEnum = "likes"
	ChannelSectionSnippetTypeEnumAllPlaylists                ChannelSectionSnippetTypeEnum = "allPlaylists"
	ChannelSectionSnippetTypeEnumLikedPlaylists              ChannelSectionSnippetTypeEnum = "likedPlaylists"
	ChannelSectionSnippetTypeEnumRecentPosts                 ChannelSectionSnippetTypeEnum = "recentPosts"
	ChannelSectionSnippetTypeEnumRecentActivity              ChannelSectionSnippetTypeEnum = "recentActivity"
	ChannelSectionSnippetTypeEnumLiveEvents                  ChannelSectionSnippetTypeEnum = "liveEvents"
	ChannelSectionSnippetTypeEnumUpcomingEvents              ChannelSectionSnippetTypeEnum = "upcomingEvents"
	ChannelSectionSnippetTypeEnumCompletedEvents             ChannelSectionSnippetTypeEnum = "completedEvents"
	ChannelSectionSnippetTypeEnumMultipleChannels            ChannelSectionSnippetTypeEnum = "multipleChannels"
	ChannelSectionSnippetTypeEnumPostedVideos                ChannelSectionSnippetTypeEnum = "postedVideos"
	ChannelSectionSnippetTypeEnumPostedPlaylists             ChannelSectionSnippetTypeEnum = "postedPlaylists"
	ChannelSectionSnippetTypeEnumSubscriptions               ChannelSectionSnippetTypeEnum = "subscriptions"
)

func (e ChannelSectionSnippetTypeEnum) ToPointer() *ChannelSectionSnippetTypeEnum {
	return &e
}

func (e *ChannelSectionSnippetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "channelsectionTypeUndefined":
		fallthrough
	case "singlePlaylist":
		fallthrough
	case "multiplePlaylists":
		fallthrough
	case "popularUploads":
		fallthrough
	case "recentUploads":
		fallthrough
	case "likes":
		fallthrough
	case "allPlaylists":
		fallthrough
	case "likedPlaylists":
		fallthrough
	case "recentPosts":
		fallthrough
	case "recentActivity":
		fallthrough
	case "liveEvents":
		fallthrough
	case "upcomingEvents":
		fallthrough
	case "completedEvents":
		fallthrough
	case "multipleChannels":
		fallthrough
	case "postedVideos":
		fallthrough
	case "postedPlaylists":
		fallthrough
	case "subscriptions":
		*e = ChannelSectionSnippetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelSectionSnippetTypeEnum: %v", v)
	}
}

// ChannelSectionSnippet - Basic details about a channel section, including title, style and position.
type ChannelSectionSnippet struct {
	// The ID that YouTube uses to uniquely identify the channel that published the channel section.
	ChannelID *string `json:"channelId,omitempty"`
	// The language of the channel section's default title and description.
	DefaultLanguage *string `json:"defaultLanguage,omitempty"`
	// ChannelSection localization setting
	Localized *ChannelSectionLocalization `json:"localized,omitempty"`
	// The position of the channel section in the channel.
	Position *int64 `json:"position,omitempty"`
	// The style of the channel section.
	Style *ChannelSectionSnippetStyleEnum `json:"style,omitempty"`
	// The channel section's title for multiple_playlists and multiple_channels.
	Title *string `json:"title,omitempty"`
	// The type of the channel section.
	Type *ChannelSectionSnippetTypeEnum `json:"type,omitempty"`
}
