/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetMarketdataSnapshotRequestBody {
    /**
     * The internal IB identifier for the trading product specified as an integer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conid")
    public Double conid;
    public GetMarketdataSnapshotRequestBody withConid(Double conid) {
        this.conid = conid;
        return this;
    }
    
    /**
     * The currency in which the given pair trades.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public GetMarketdataSnapshotRequestBody withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The exchange on which the trading product is listed (required for type=STK).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exchange")
    public String exchange;
    public GetMarketdataSnapshotRequestBody withExchange(String exchange) {
        this.exchange = exchange;
        return this;
    }
    
    /**
     * The symbol that identifies the trading product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("symbol")
    public String symbol;
    public GetMarketdataSnapshotRequestBody withSymbol(String symbol) {
        this.symbol = symbol;
        return this;
    }
    
    /**
     * The instrument type of the contract (CASH).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public GetMarketdataSnapshotRequestBody withType(String type) {
        this.type = type;
        return this;
    }
    
}
