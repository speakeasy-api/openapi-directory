"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import dependabot_alert_security_vulnerability as shared_dependabot_alert_security_vulnerability
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DependabotAlertSecurityAdvisoryCvss:
    r"""Details for the advisory pertaining to the Common Vulnerability Scoring System."""
    
    score: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score') }})
    r"""The overall CVSS score of the advisory."""  
    vector_string: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vector_string') }})
    r"""The full CVSS vector string for the advisory."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DependabotAlertSecurityAdvisoryCwes:
    r"""A CWE weakness assigned to the advisory."""
    
    cwe_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cwe_id') }})
    r"""The unique CWE ID."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The short, plain text name of the CWE."""  
    
class DependabotAlertSecurityAdvisoryIdentifiersTypeEnum(str, Enum):
    r"""The type of advisory identifier."""
    CVE = 'CVE'
    GHSA = 'GHSA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DependabotAlertSecurityAdvisoryIdentifiers:
    r"""An advisory identifier."""
    
    type: DependabotAlertSecurityAdvisoryIdentifiersTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of advisory identifier."""  
    value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""The value of the advisory identifer."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DependabotAlertSecurityAdvisoryReferences:
    r"""A link to additional advisory information."""
    
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""The URL of the reference."""  
    
class DependabotAlertSecurityAdvisorySeverityEnum(str, Enum):
    r"""The severity of the advisory."""
    LOW = 'low'
    MEDIUM = 'medium'
    HIGH = 'high'
    CRITICAL = 'critical'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DependabotAlertSecurityAdvisory:
    r"""Details for the GitHub Security Advisory."""
    
    cve_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cve_id') }})
    r"""The unique CVE ID assigned to the advisory."""  
    cvss: DependabotAlertSecurityAdvisoryCvss = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cvss') }})
    r"""Details for the advisory pertaining to the Common Vulnerability Scoring System."""  
    cwes: list[DependabotAlertSecurityAdvisoryCwes] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cwes') }})
    r"""Details for the advisory pertaining to Common Weakness Enumeration."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""A long-form Markdown-supported description of the advisory."""  
    ghsa_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ghsa_id') }})
    r"""The unique GitHub Security Advisory ID assigned to the advisory."""  
    identifiers: list[DependabotAlertSecurityAdvisoryIdentifiers] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identifiers') }})
    r"""Values that identify this advisory among security information sources."""  
    published_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('published_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The time that the advisory was published in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."""  
    references: list[DependabotAlertSecurityAdvisoryReferences] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('references') }})
    r"""Links to additional advisory information."""  
    severity: DependabotAlertSecurityAdvisorySeverityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity') }})
    r"""The severity of the advisory."""  
    summary: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summary') }})
    r"""A short, plain text summary of the advisory."""  
    updated_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The time that the advisory was last modified in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."""  
    vulnerabilities: list[shared_dependabot_alert_security_vulnerability.DependabotAlertSecurityVulnerability] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vulnerabilities') }})
    r"""Vulnerable version range information for the advisory."""  
    withdrawn_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('withdrawn_at'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The time that the advisory was withdrawn in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`."""  
    