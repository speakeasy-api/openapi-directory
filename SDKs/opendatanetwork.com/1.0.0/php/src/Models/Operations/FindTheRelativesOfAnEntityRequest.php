<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class FindTheRelativesOfAnEntityRequest
{
    /**
     * e.g. cQovpGcdUT1CSzgYk0KPYdAI0
     * 
     * @var ?string $xAppToken
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-App-Token')]
    public ?string $xAppToken = null;
    
    /**
     * The [Socrata App Token](https://dev.socrata.com/docs/app-tokens.html) to be
     * 
     * used with your request. The `app_token` parameter is required if an app token is not passed via the `X-App-Token` HTTP header. Clients must [register for their own app tokens](https://dev.socrata.com/docs/app-tokens.html).
     * 
     * @var ?string $appToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=app_token')]
    public ?string $appToken = null;
    
    /**
     * ID of the target entity.
     * 
     * @var string $entityId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=entity_id')]
    public string $entityId;
    
    /**
     * Maximum number of entities in each group.
     * 
     * Must be an integer from 1 to 1000.
     * 
     * @var ?float $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?float $limit = null;
    
    /**
     * The type of relation to find.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\FindTheRelativesOfAnEntityRelationEnum $relation
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=relation')]
    public FindTheRelativesOfAnEntityRelationEnum $relation;
    
    /**
     * If this parameter is included, only entities with data for the given
     * 
     * variable will be returned. Note that this may cause the number of
     * entities returned to be less than the specified `limit`.
     * 
     * @var ?string $variableId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=variable_id')]
    public ?string $variableId = null;
    
	public function __construct()
	{
		$this->xAppToken = null;
		$this->appToken = null;
		$this->entityId = "";
		$this->limit = null;
		$this->relation = \OpenAPI\OpenAPI\Models\Operations\FindTheRelativesOfAnEntityRelationEnum::PARENT;
		$this->variableId = null;
	}
}
