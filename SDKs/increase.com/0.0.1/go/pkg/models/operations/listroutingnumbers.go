// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListRoutingNumbersQueryParams struct {
	Cursor        *string `queryParam:"style=form,explode=true,name=cursor"`
	Limit         *int64  `queryParam:"style=form,explode=true,name=limit"`
	RoutingNumber string  `queryParam:"style=form,explode=true,name=routing_number"`
}

type ListRoutingNumbersRequest struct {
	QueryParams ListRoutingNumbersQueryParams
}

type ListRoutingNumbersDefaultApplicationJSON13StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListRoutingNumbersDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ListRoutingNumbersDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ListRoutingNumbersDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON13TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON13TypeEnumRateLimitedError ListRoutingNumbersDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ListRoutingNumbersDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON13 struct {
	Detail     string                                               `json:"detail"`
	RetryAfter *int64                                               `json:"retry_after,omitempty"`
	Status     ListRoutingNumbersDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                               `json:"title"`
	Type       ListRoutingNumbersDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON12StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON12StatusEnumFourHundredAndThree ListRoutingNumbersDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ListRoutingNumbersDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListRoutingNumbersDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON12TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON12TypeEnumPrivateFeatureError ListRoutingNumbersDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ListRoutingNumbersDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON12 struct {
	Detail string                                               `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON11StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON11StatusEnumFourHundredAndFour ListRoutingNumbersDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ListRoutingNumbersDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListRoutingNumbersDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON11TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON11TypeEnumObjectNotFoundError ListRoutingNumbersDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ListRoutingNumbersDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON11 struct {
	Detail string                                               `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON10StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON10StatusEnumFourHundred ListRoutingNumbersDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ListRoutingNumbersDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListRoutingNumbersDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON10TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON10TypeEnumMalformedRequestError ListRoutingNumbersDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ListRoutingNumbersDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON10 struct {
	Detail string                                               `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON9StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON9StatusEnumFourHundred ListRoutingNumbersDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ListRoutingNumbersDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListRoutingNumbersDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON9TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON9TypeEnumInvalidParametersError ListRoutingNumbersDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ListRoutingNumbersDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                            `json:"errors,omitempty"`
	Status ListRoutingNumbersDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON8StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON8StatusEnumFourHundredAndNine ListRoutingNumbersDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ListRoutingNumbersDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListRoutingNumbersDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON8TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON8TypeEnumInvalidOperationError ListRoutingNumbersDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ListRoutingNumbersDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON8 struct {
	Detail string                                              `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON7StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON7StatusEnumFourHundredAndOne ListRoutingNumbersDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ListRoutingNumbersDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ListRoutingNumbersDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON7TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListRoutingNumbersDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ListRoutingNumbersDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON7 struct {
	Detail string                                              `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON6StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON6StatusEnumFiveHundred ListRoutingNumbersDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ListRoutingNumbersDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ListRoutingNumbersDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON6TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON6TypeEnumInternalServerError ListRoutingNumbersDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ListRoutingNumbersDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON6 struct {
	Detail string                                              `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON5StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON5StatusEnumFourHundredAndThree ListRoutingNumbersDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ListRoutingNumbersDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListRoutingNumbersDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON5TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListRoutingNumbersDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ListRoutingNumbersDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON5 struct {
	Detail string                                              `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON4StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListRoutingNumbersDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ListRoutingNumbersDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ListRoutingNumbersDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON4TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListRoutingNumbersDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ListRoutingNumbersDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON4 struct {
	Detail string                                              `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON3StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON3StatusEnumFourHundredAndNine ListRoutingNumbersDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ListRoutingNumbersDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListRoutingNumbersDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON3TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListRoutingNumbersDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ListRoutingNumbersDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON3 struct {
	Detail string                                              `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON2StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON2StatusEnumFourHundredAndThree ListRoutingNumbersDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ListRoutingNumbersDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListRoutingNumbersDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON2TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListRoutingNumbersDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ListRoutingNumbersDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON2 struct {
	Detail string                                              `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListRoutingNumbersDefaultApplicationJSON1StatusEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON1StatusEnumFourHundredAndFour ListRoutingNumbersDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ListRoutingNumbersDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListRoutingNumbersDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON1TypeEnum string

const (
	ListRoutingNumbersDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListRoutingNumbersDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ListRoutingNumbersDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ListRoutingNumbersDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRoutingNumbersDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ListRoutingNumbersDefaultApplicationJSON1 struct {
	Detail string                                              `json:"detail"`
	Status ListRoutingNumbersDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListRoutingNumbersDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListRoutingNumbersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Routing Number List
	RoutingNumberList *shared.RoutingNumberList
}
