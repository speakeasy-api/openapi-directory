"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TimelineUpdate:
    
    first_online: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstOnline'), 'exclude': lambda f: f is None }})
    r"""Online posted date"""  
    publisher_acceptance: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisherAcceptance'), 'exclude': lambda f: f is None }})
    r"""Date when the item was accepted for publication"""  
    publisher_publication: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publisherPublication'), 'exclude': lambda f: f is None }})
    r"""Publish date"""  
    