<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FilesetTemplateCreate - Provide an object with the fileset template definition.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FilesetTemplateCreate
{
    /**
     * Include or exclude hidden folders inside locally-mounted remote file systems from backups.
     * 
     * @var ?bool $allowBackupHiddenFoldersInNetworkMounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowBackupHiddenFoldersInNetworkMounts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowBackupHiddenFoldersInNetworkMounts = null;
    
    /**
     * Include or exclude locally-mounted remote file systems from backups.
     * 
     * @var ?bool $allowBackupNetworkMounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowBackupNetworkMounts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowBackupNetworkMounts = null;
    
    /**
     * Action taken if script fails. Options are "abort", "continue".
     * 
     * @var ?string $backupScriptErrorHandling
     */
	#[\JMS\Serializer\Annotation\SerializedName('backupScriptErrorHandling')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $backupScriptErrorHandling = null;
    
    /**
     * Number of seconds after which the script is killed if it has not completed execution.
     * 
     * @var ?int $backupScriptTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('backupScriptTimeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $backupScriptTimeout = null;
    
    /**
     * $exceptions
     * 
     * @var ?array<string> $exceptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('exceptions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $exceptions = null;
    
    /**
     * $excludes
     * 
     * @var ?array<string> $excludes
     */
	#[\JMS\Serializer\Annotation\SerializedName('excludes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $excludes = null;
    
    /**
     * $includes
     * 
     * @var array<string> $includes
     */
	#[\JMS\Serializer\Annotation\SerializedName('includes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $includes;
    
    /**
     * Boolean value that determines whether the fileset is array-enabled. Set to true to indicate that the fileset is array-enabled. Set to false to indicate that the fileset is not array-enabled. When a fileset is array-enabled, the includes must be top-level LVM logical volume mount points.
     * 
     * @var ?bool $isArrayEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('isArrayEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isArrayEnabled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Operating system type of filesets created by template.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FilesetTemplateCreateOperatingSystemTypeEnum $operatingSystemType
     */
	#[\JMS\Serializer\Annotation\SerializedName('operatingSystemType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FilesetTemplateCreateOperatingSystemTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FilesetTemplateCreateOperatingSystemTypeEnum $operatingSystemType = null;
    
    /**
     * Script to run after backup of this fileset ends.
     * 
     * @var ?string $postBackupScript
     */
	#[\JMS\Serializer\Annotation\SerializedName('postBackupScript')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postBackupScript = null;
    
    /**
     * Script to run before backup of this fileset starts.
     * 
     * @var ?string $preBackupScript
     */
	#[\JMS\Serializer\Annotation\SerializedName('preBackupScript')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $preBackupScript = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('shareType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FilesetTemplateCreateShareTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FilesetTemplateCreateShareTypeEnum $shareType = null;
    
    /**
     * Use VSS during Windows backups.
     * 
     * @var ?bool $useWindowsVss
     */
	#[\JMS\Serializer\Annotation\SerializedName('useWindowsVss')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useWindowsVss = null;
    
	public function __construct()
	{
		$this->allowBackupHiddenFoldersInNetworkMounts = null;
		$this->allowBackupNetworkMounts = null;
		$this->backupScriptErrorHandling = null;
		$this->backupScriptTimeout = null;
		$this->exceptions = null;
		$this->excludes = null;
		$this->includes = [];
		$this->isArrayEnabled = null;
		$this->name = "";
		$this->operatingSystemType = null;
		$this->postBackupScript = null;
		$this->preBackupScript = null;
		$this->shareType = null;
		$this->useWindowsVss = null;
	}
}
