<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudChannelV1ImportCustomerRequest - Request message for CloudChannelService.ImportCustomer
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudChannelV1ImportCustomerRequest
{
    /**
     * Optional. The super admin of the resold customer generates this token to authorize a reseller to access their Cloud Identity and purchase entitlements on their behalf. You can omit this token after authorization. See https://support.google.com/a/answer/7643790 for more details.
     * 
     * @var ?string $authToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('authToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authToken = null;
    
    /**
     * Optional. Cloud Identity ID of a channel partner who will be the direct reseller for the customer's order. This field is required for 2-tier transfer scenarios and can be provided via the request Parent binding as well.
     * 
     * @var ?string $channelPartnerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelPartnerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelPartnerId = null;
    
    /**
     * Required. Customer's Cloud Identity ID
     * 
     * @var ?string $cloudIdentityId
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudIdentityId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cloudIdentityId = null;
    
    /**
     * Optional. Specifies the customer that will receive imported Cloud Identity information. Format: accounts/{account_id}/customers/{customer_id}
     * 
     * @var ?string $customer
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customer = null;
    
    /**
     * Required. Customer domain.
     * 
     * @var ?string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $domain = null;
    
    /**
     * Required. Choose to overwrite an existing customer if found. This must be set to true if there is an existing customer with a conflicting region code or domain.
     * 
     * @var ?bool $overwriteIfExists
     */
	#[\JMS\Serializer\Annotation\SerializedName('overwriteIfExists')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $overwriteIfExists = null;
    
	public function __construct()
	{
		$this->authToken = null;
		$this->channelPartnerId = null;
		$this->cloudIdentityId = null;
		$this->customer = null;
		$this->domain = null;
		$this->overwriteIfExists = null;
	}
}
