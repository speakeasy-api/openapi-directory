// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConversionErrorCodeEnum - The error code.
type ConversionErrorCodeEnum string

const (
	ConversionErrorCodeEnumInvalidArgument  ConversionErrorCodeEnum = "INVALID_ARGUMENT"
	ConversionErrorCodeEnumInternal         ConversionErrorCodeEnum = "INTERNAL"
	ConversionErrorCodeEnumPermissionDenied ConversionErrorCodeEnum = "PERMISSION_DENIED"
	ConversionErrorCodeEnumNotFound         ConversionErrorCodeEnum = "NOT_FOUND"
)

func (e *ConversionErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INVALID_ARGUMENT":
		fallthrough
	case "INTERNAL":
		fallthrough
	case "PERMISSION_DENIED":
		fallthrough
	case "NOT_FOUND":
		*e = ConversionErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionErrorCodeEnum: %s", s)
	}
}

// ConversionError - The error code and description for a conversion that failed to insert or update.
type ConversionError struct {
	// The error code.
	Code *ConversionErrorCodeEnum `json:"code,omitempty"`
	// Identifies what kind of resource this is. Value: the fixed string "dfareporting#conversionError".
	Kind *string `json:"kind,omitempty"`
	// A description of the error.
	Message *string `json:"message,omitempty"`
}
