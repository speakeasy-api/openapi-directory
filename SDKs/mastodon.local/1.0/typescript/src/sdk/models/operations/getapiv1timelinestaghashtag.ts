/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetApiV1TimelinesTagHashtagRequest extends SpeakeasyBase {
  /**
   * Content of a `#hashtag``, not including `#` symbol..
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=hashtag",
  })
  hashtag: string;

  /**
   * Max number of results to return. Defaults to 20.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Show only local statuses? Defaults to false.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=local" })
  local?: boolean;

  /**
   * Return results older than ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_id",
  })
  maxId?: string;

  /**
   * Return results immediately newer than ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_id",
  })
  minId?: string;

  /**
   * Show only statuses with media attached? Defaults to false..
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=only_media",
  })
  onlyMedia?: boolean;

  /**
   * Show only local statuses? Defaults to false.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=remote",
  })
  remote?: boolean;

  /**
   * Return results newer than ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=since_id",
  })
  sinceId?: string;
}

export class GetApiV1TimelinesTagHashtagResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Get statuses.
   */
  @SpeakeasyMetadata({ elemType: shared.Status })
  statuses?: shared.Status[];
}
