// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JobResultOrderLineItems struct {
	// The sytem generated Id for the Order Line Item.
	ID *string `json:"id,omitempty"`
	// The number for the Order Line Item.
	ItemNumber *string `json:"itemNumber,omitempty"`
}

type JobResultRamps struct {
	// The number of the ramp definition.
	RampNumber *string `json:"rampNumber,omitempty"`
	// The number of the subscription that this ramp deal definition is applied to.
	SubscriptionNumber *string `json:"subscriptionNumber,omitempty"`
}

type JobResultReasons struct {
	// The error code of response.
	//
	Code *string `json:"code,omitempty"`
	// The detail information of the error response
	//
	Message *string `json:"message,omitempty"`
}

// JobResultStatusEnum - Status of the order. `Pending` is only applicable for an order that contains a `CreateSubscription` order action.
type JobResultStatusEnum string

const (
	JobResultStatusEnumCompleted JobResultStatusEnum = "Completed"
	JobResultStatusEnumPending   JobResultStatusEnum = "Pending"
)

func (e *JobResultStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Completed":
		fallthrough
	case "Pending":
		*e = JobResultStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobResultStatusEnum: %s", s)
	}
}

// JobResultSubscriptionsStatusEnum - Status of the subscription. `Pending Activation` and `Pending Acceptance` are only applicable for an order that contains a `CreateSubscription` order action.
type JobResultSubscriptionsStatusEnum string

const (
	JobResultSubscriptionsStatusEnumActive            JobResultSubscriptionsStatusEnum = "Active"
	JobResultSubscriptionsStatusEnumPendingActivation JobResultSubscriptionsStatusEnum = "Pending Activation"
	JobResultSubscriptionsStatusEnumPendingAcceptance JobResultSubscriptionsStatusEnum = "Pending Acceptance"
	JobResultSubscriptionsStatusEnumCancelled         JobResultSubscriptionsStatusEnum = "Cancelled"
)

func (e *JobResultSubscriptionsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Pending Activation":
		fallthrough
	case "Pending Acceptance":
		fallthrough
	case "Cancelled":
		*e = JobResultSubscriptionsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobResultSubscriptionsStatusEnum: %s", s)
	}
}

type JobResultSubscriptions struct {
	// Status of the subscription. `Pending Activation` and `Pending Acceptance` are only applicable for an order that contains a `CreateSubscription` order action.
	Status *JobResultSubscriptionsStatusEnum `json:"status,omitempty"`
	// Subscription number of the subscription included in this order.
	SubscriptionNumber *string `json:"subscriptionNumber,omitempty"`
}

// JobResult - **Note:** The schema of the `result` nested field is the same as the response body schema of either the ["Create an order"](https://www.zuora.com/developer/api-reference/#operation/POST_Order) or the ["Preview an order"](https://www.zuora.com/developer/api-reference/#operation/POST_PreviewOrder) operation, depending on the purpose of the job.
//
// The following schema for the nested `result` field is defined as the response body schema of "Create an order". See [Preview an Order](https://www.zuora.com/developer/api-reference/#operation/POST_PreviewOrder) for the response body schema of "Preview an order".
type JobResult struct {
	// The account ID for the order. This field is returned only when the `returnIds` query parameter in the "Create an order asynchronously" operation is set to `true`.
	AccountID *string `json:"accountId,omitempty"`
	// The account number for the order.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// An array of the credit memo IDs that are generated in the "Create an order asynchronously" operation. This field is returned only when the `returnIds` query parameter in the "Create an order asynchronously" operation is set to `true`.
	CreditMemoIds []string `json:"creditMemoIds,omitempty"`
	// An array of the credit memo numbers generated in this order request. The credit memo is only available if you have the Invoice Settlement feature enabled.
	CreditMemoNumbers []string `json:"creditMemoNumbers,omitempty"`
	// An array of the invoice IDs that are generated in the "Create an order asynchronously" operation. This field is returned only when the `returnIds` query parameter in the "Create an order asynchronously" operation is set to `true`.
	InvoiceID *string `json:"invoiceId,omitempty"`
	// An array of the invoice numbers generated in this order request. Normally it includes one invoice number only, but can include multiple items when a subscription was tagged as invoice separately.
	InvoiceNumbers []string `json:"invoiceNumbers,omitempty"`
	// The ID of the order created. This field is returned only when the `returnIds` query parameter in the "Create an order asynchronously" operation is set to `true`.
	OrderID        *string                   `json:"orderId,omitempty"`
	OrderLineItems []JobResultOrderLineItems `json:"orderLineItems,omitempty"`
	// The order number of the order created.
	OrderNumber *string `json:"orderNumber,omitempty"`
	// The total amount collected in this order request.
	PaidAmount *string `json:"paidAmount,omitempty"`
	// The ID of the payment that is collected in the "Create an order asynchronously" operation. This field is returned only when the `returnIds` query parameter in the "Create an order asynchronously" operation is set to `true`.
	PaymentID *string `json:"paymentId,omitempty"`
	// The payment number that collected in this order request.
	PaymentNumber *string `json:"paymentNumber,omitempty"`
	// The Id of the process that handle the operation.
	//
	ProcessID *string `json:"processId,omitempty"`
	// **Note**: This field is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
	//
	// The ramp definitions created by this order request.
	//
	Ramps   []JobResultRamps   `json:"ramps,omitempty"`
	Reasons []JobResultReasons `json:"reasons,omitempty"`
	// Status of the order. `Pending` is only applicable for an order that contains a `CreateSubscription` order action.
	Status *JobResultStatusEnum `json:"status,omitempty"`
	// Container for the IDs of the subscriptions in the order. This field is returned only when the `returnIds` query parameter in the "Create an order asynchronously" operation is set to `true`.
	SubscriptionIds []string `json:"subscriptionIds,omitempty"`
	// **Note:** This field is in Zuora REST API version control. Supported minor versions are 222.4 or earlier. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header.
	//
	// Container for the subscription numbers of the subscriptions in an order.
	//
	SubscriptionNumbers []string `json:"subscriptionNumbers,omitempty"`
	// **Note:** This field is in Zuora REST API version control. Supported minor versions are 223.0 or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header.
	//
	// Container for the subscription numbers and statuses in an order.
	//
	Subscriptions []JobResultSubscriptions `json:"subscriptions,omitempty"`
	// Indicates whether the call succeeded.
	//
	Success *bool `json:"success,omitempty"`
}
