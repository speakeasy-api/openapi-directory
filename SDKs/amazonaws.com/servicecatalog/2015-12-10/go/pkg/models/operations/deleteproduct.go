// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteProductXAmzTargetEnum
type DeleteProductXAmzTargetEnum string

const (
	DeleteProductXAmzTargetEnumAws242ServiceCatalogServiceDeleteProduct DeleteProductXAmzTargetEnum = "AWS242ServiceCatalogService.DeleteProduct"
)

func (e DeleteProductXAmzTargetEnum) ToPointer() *DeleteProductXAmzTargetEnum {
	return &e
}

func (e *DeleteProductXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS242ServiceCatalogService.DeleteProduct":
		*e = DeleteProductXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteProductXAmzTargetEnum: %v", v)
	}
}

type DeleteProductRequest struct {
	DeleteProductInput shared.DeleteProductInput   `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         DeleteProductXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteProductResponse struct {
	ContentType string
	// Success
	DeleteProductOutput map[string]interface{}
	// InvalidParametersException
	InvalidParametersException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TagOptionNotMigratedException
	TagOptionNotMigratedException interface{}
}
