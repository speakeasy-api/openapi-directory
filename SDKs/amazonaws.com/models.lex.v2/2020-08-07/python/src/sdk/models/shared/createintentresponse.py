"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import dialogcodehooksettings as shared_dialogcodehooksettings
from ..shared import fulfillmentcodehooksettings as shared_fulfillmentcodehooksettings
from ..shared import initialresponsesetting as shared_initialresponsesetting
from ..shared import inputcontext as shared_inputcontext
from ..shared import intentclosingsetting as shared_intentclosingsetting
from ..shared import intentconfirmationsetting as shared_intentconfirmationsetting
from ..shared import kendraconfiguration as shared_kendraconfiguration
from ..shared import outputcontext as shared_outputcontext
from ..shared import sampleutterance as shared_sampleutterance
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateIntentResponse:
    r"""Success"""
    
    bot_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('botId'), 'exclude': lambda f: f is None }})  
    bot_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('botVersion'), 'exclude': lambda f: f is None }})  
    creation_date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDateTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    dialog_code_hook: Optional[shared_dialogcodehooksettings.DialogCodeHookSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dialogCodeHook'), 'exclude': lambda f: f is None }})  
    fulfillment_code_hook: Optional[shared_fulfillmentcodehooksettings.FulfillmentCodeHookSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fulfillmentCodeHook'), 'exclude': lambda f: f is None }})  
    initial_response_setting: Optional[shared_initialresponsesetting.InitialResponseSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initialResponseSetting'), 'exclude': lambda f: f is None }})  
    input_contexts: Optional[list[shared_inputcontext.InputContext]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputContexts'), 'exclude': lambda f: f is None }})  
    intent_closing_setting: Optional[shared_intentclosingsetting.IntentClosingSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intentClosingSetting'), 'exclude': lambda f: f is None }})  
    intent_confirmation_setting: Optional[shared_intentconfirmationsetting.IntentConfirmationSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intentConfirmationSetting'), 'exclude': lambda f: f is None }})  
    intent_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intentId'), 'exclude': lambda f: f is None }})  
    intent_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intentName'), 'exclude': lambda f: f is None }})  
    kendra_configuration: Optional[shared_kendraconfiguration.KendraConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kendraConfiguration'), 'exclude': lambda f: f is None }})  
    locale_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localeId'), 'exclude': lambda f: f is None }})  
    output_contexts: Optional[list[shared_outputcontext.OutputContext]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputContexts'), 'exclude': lambda f: f is None }})  
    parent_intent_signature: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentIntentSignature'), 'exclude': lambda f: f is None }})  
    sample_utterances: Optional[list[shared_sampleutterance.SampleUtterance]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampleUtterances'), 'exclude': lambda f: f is None }})  
    