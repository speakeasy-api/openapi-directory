/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Aggregation } from "./aggregation";
import { StructuredQuery } from "./structuredquery";
import { Expose, Type } from "class-transformer";

/**
 * Firestore query for running an aggregation over a StructuredQuery.
 */
export class StructuredAggregationQuery extends SpeakeasyBase {
  /**
   * Optional. Series of aggregations to apply over the results of the `structured_query`. Requires: * A minimum of one and maximum of five aggregations per query.
   */
  @SpeakeasyMetadata({ elemType: Aggregation })
  @Expose({ name: "aggregations" })
  @Type(() => Aggregation)
  aggregations?: Aggregation[];

  /**
   * A Firestore query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "structuredQuery" })
  @Type(() => StructuredQuery)
  structuredQuery?: StructuredQuery;
}
