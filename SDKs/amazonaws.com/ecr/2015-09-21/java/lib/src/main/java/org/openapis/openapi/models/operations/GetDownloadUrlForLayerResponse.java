/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class GetDownloadUrlForLayerResponse {
    
    public String contentType;

    public GetDownloadUrlForLayerResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetDownloadUrlForLayerResponse getDownloadUrlForLayerResponse;

    public GetDownloadUrlForLayerResponse withGetDownloadUrlForLayerResponse(org.openapis.openapi.models.shared.GetDownloadUrlForLayerResponse getDownloadUrlForLayerResponse) {
        this.getDownloadUrlForLayerResponse = getDownloadUrlForLayerResponse;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public GetDownloadUrlForLayerResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * LayerInaccessibleException
     */
    
    public Object layerInaccessibleException;

    public GetDownloadUrlForLayerResponse withLayerInaccessibleException(Object layerInaccessibleException) {
        this.layerInaccessibleException = layerInaccessibleException;
        return this;
    }
    
    /**
     * LayersNotFoundException
     */
    
    public Object layersNotFoundException;

    public GetDownloadUrlForLayerResponse withLayersNotFoundException(Object layersNotFoundException) {
        this.layersNotFoundException = layersNotFoundException;
        return this;
    }
    
    /**
     * RepositoryNotFoundException
     */
    
    public Object repositoryNotFoundException;

    public GetDownloadUrlForLayerResponse withRepositoryNotFoundException(Object repositoryNotFoundException) {
        this.repositoryNotFoundException = repositoryNotFoundException;
        return this;
    }
    
    /**
     * ServerException
     */
    
    public Object serverException;

    public GetDownloadUrlForLayerResponse withServerException(Object serverException) {
        this.serverException = serverException;
        return this;
    }
    
    
    public Integer statusCode;

    public GetDownloadUrlForLayerResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public GetDownloadUrlForLayerResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public GetDownloadUrlForLayerResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
