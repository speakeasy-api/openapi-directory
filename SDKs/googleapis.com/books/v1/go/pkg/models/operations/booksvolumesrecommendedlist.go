// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BooksVolumesRecommendedListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum - The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
type BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum string

const (
	BooksVolumesRecommendedListMaxAllowedMaturityRatingEnumMaxAllowedMaturityRatingUndefined BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum = "MAX_ALLOWED_MATURITY_RATING_UNDEFINED"
	BooksVolumesRecommendedListMaxAllowedMaturityRatingEnumMature                            BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum = "MATURE"
	BooksVolumesRecommendedListMaxAllowedMaturityRatingEnumNotMature                         BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum = "not-mature"
)

func (e *BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MAX_ALLOWED_MATURITY_RATING_UNDEFINED":
		fallthrough
	case "MATURE":
		fallthrough
	case "not-mature":
		*e = BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum: %s", s)
	}
}

type BooksVolumesRecommendedListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
	// The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
	MaxAllowedMaturityRating *BooksVolumesRecommendedListMaxAllowedMaturityRatingEnum `queryParam:"style=form,explode=true,name=maxAllowedMaturityRating"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// String to identify the originator of this request.
	Source *string `queryParam:"style=form,explode=true,name=source"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type BooksVolumesRecommendedListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	Volumes *shared.Volumes
}
