<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NegativeKeywordResponse - A type that defines the negative keyword response.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NegativeKeywordResponse
{
    /**
     * A unique identifier for an ad group that is generated when an ad group is first created and associated with a campaign.
     * 
     * @var ?string $adGroupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('adGroupId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $adGroupId = null;
    
    /**
     * A unique eBay-assigned ID for a campaign. This ID is generated when a campaign is created.
     * 
     * @var ?string $campaignId
     */
	#[\JMS\Serializer\Annotation\SerializedName('campaignId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $campaignId = null;
    
    /**
     * This container will be returned if there is an issue creating the corresponding negative keyword.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Error> $errors
     */
	#[\JMS\Serializer\Annotation\SerializedName('errors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Error>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $errors = null;
    
    /**
     * The URI for the negative keyword, which is used to retrieve the negative keyword. This URI will be returned for each successfully created negative keyword.
     * 
     * @var ?string $href
     */
	#[\JMS\Serializer\Annotation\SerializedName('href')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $href = null;
    
    /**
     * A unique eBay-assigned ID for a negative keyword. This negative keyword ID will be generated for each successfully created negative keyword.
     * 
     * @var ?string $negativeKeywordId
     */
	#[\JMS\Serializer\Annotation\SerializedName('negativeKeywordId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $negativeKeywordId = null;
    
    /**
     * The match type for the negative keyword.<br /><br /><span class="tablenote"><span style="color:#004680"><strong>Note:</strong></span> Broad matching of negative keywords is not currently supported.</span><br /><b>Valid Values:</b><ul><li><code>EXACT</code></li><li><code>PHRASE</code></li></ul> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/pls:NegativeKeywordMatchTypeEnum'>eBay API documentation</a>
     * 
     * @var ?string $negativeKeywordMatchType
     */
	#[\JMS\Serializer\Annotation\SerializedName('negativeKeywordMatchType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $negativeKeywordMatchType = null;
    
    /**
     * The text for the negative keyword.
     * 
     * @var ?string $negativeKeywordText
     */
	#[\JMS\Serializer\Annotation\SerializedName('negativeKeywordText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $negativeKeywordText = null;
    
    /**
     * The status of the request to create a negative keyword. This field indicates whether the process was successful or not.
     * 
     * @var ?int $statusCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('statusCode')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $statusCode = null;
    
	public function __construct()
	{
		$this->adGroupId = null;
		$this->campaignId = null;
		$this->errors = null;
		$this->href = null;
		$this->negativeKeywordId = null;
		$this->negativeKeywordMatchType = null;
		$this->negativeKeywordText = null;
		$this->statusCode = null;
	}
}
