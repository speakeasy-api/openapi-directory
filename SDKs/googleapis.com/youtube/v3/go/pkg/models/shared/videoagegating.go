// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoAgeGatingVideoGameRatingEnum - Video game rating, if any.
type VideoAgeGatingVideoGameRatingEnum string

const (
	VideoAgeGatingVideoGameRatingEnumAnyone  VideoAgeGatingVideoGameRatingEnum = "anyone"
	VideoAgeGatingVideoGameRatingEnumM15Plus VideoAgeGatingVideoGameRatingEnum = "m15Plus"
	VideoAgeGatingVideoGameRatingEnumM16Plus VideoAgeGatingVideoGameRatingEnum = "m16Plus"
	VideoAgeGatingVideoGameRatingEnumM17Plus VideoAgeGatingVideoGameRatingEnum = "m17Plus"
)

func (e *VideoAgeGatingVideoGameRatingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "anyone":
		fallthrough
	case "m15Plus":
		fallthrough
	case "m16Plus":
		fallthrough
	case "m17Plus":
		*e = VideoAgeGatingVideoGameRatingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoAgeGatingVideoGameRatingEnum: %s", s)
	}
}

type VideoAgeGating struct {
	// Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content.
	AlcoholContent *bool `json:"alcoholContent,omitempty"`
	// Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present.
	Restricted *bool `json:"restricted,omitempty"`
	// Video game rating, if any.
	VideoGameRating *VideoAgeGatingVideoGameRatingEnum `json:"videoGameRating,omitempty"`
}
