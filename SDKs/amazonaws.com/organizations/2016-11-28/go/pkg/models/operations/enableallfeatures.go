// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// EnableAllFeaturesXAmzTargetEnum
type EnableAllFeaturesXAmzTargetEnum string

const (
	EnableAllFeaturesXAmzTargetEnumAwsOrganizationsV20161128EnableAllFeatures EnableAllFeaturesXAmzTargetEnum = "AWSOrganizationsV20161128.EnableAllFeatures"
)

func (e EnableAllFeaturesXAmzTargetEnum) ToPointer() *EnableAllFeaturesXAmzTargetEnum {
	return &e
}

func (e *EnableAllFeaturesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSOrganizationsV20161128.EnableAllFeatures":
		*e = EnableAllFeaturesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableAllFeaturesXAmzTargetEnum: %v", v)
	}
}

type EnableAllFeaturesRequest struct {
	RequestBody       map[string]interface{}          `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        EnableAllFeaturesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type EnableAllFeaturesResponse struct {
	// AWSOrganizationsNotInUseException
	AWSOrganizationsNotInUseException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	EnableAllFeaturesResponse *shared.EnableAllFeaturesResponse
	// HandshakeConstraintViolationException
	HandshakeConstraintViolationException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
