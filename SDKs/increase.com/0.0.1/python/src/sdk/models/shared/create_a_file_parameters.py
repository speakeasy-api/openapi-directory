"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateAFileParametersFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})  
    
class CreateAFileParametersPurposeEnum(str, Enum):
    r"""What the File will be used for in Increase's systems."""
    CHECK_IMAGE_FRONT = 'check_image_front'
    CHECK_IMAGE_BACK = 'check_image_back'
    FORM_SS_4 = 'form_ss_4'
    IDENTITY_DOCUMENT = 'identity_document'
    OTHER = 'other'
    TRUST_FORMATION_DOCUMENT = 'trust_formation_document'
    DIGITAL_WALLET_ARTWORK = 'digital_wallet_artwork'
    DIGITAL_WALLET_APP_ICON = 'digital_wallet_app_icon'
    ENTITY_SUPPLEMENTAL_DOCUMENT = 'entity_supplemental_document'


@dataclasses.dataclass
class CreateAFileParameters:
    
    file: CreateAFileParametersFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""The file contents. This should follow the specifications of [RFC 7578](https://datatracker.ietf.org/doc/html/rfc7578) which defines file transfers for the multipart/form-data protocol."""  
    purpose: CreateAFileParametersPurposeEnum = dataclasses.field(metadata={'multipart_form': { 'field_name': 'purpose' }})
    r"""What the File will be used for in Increase's systems."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'description' }})
    r"""The description you choose to give the File."""  
    