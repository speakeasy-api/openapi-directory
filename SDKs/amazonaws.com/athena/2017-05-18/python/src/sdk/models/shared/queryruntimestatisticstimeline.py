"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryRuntimeStatisticsTimeline:
    r"""Timeline statistics such as query queue time, planning time, execution time, service processing time, and total execution time."""
    
    engine_execution_time_in_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EngineExecutionTimeInMillis'), 'exclude': lambda f: f is None }})  
    query_planning_time_in_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryPlanningTimeInMillis'), 'exclude': lambda f: f is None }})  
    query_queue_time_in_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryQueueTimeInMillis'), 'exclude': lambda f: f is None }})  
    service_processing_time_in_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceProcessingTimeInMillis'), 'exclude': lambda f: f is None }})  
    total_execution_time_in_millis: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalExecutionTimeInMillis'), 'exclude': lambda f: f is None }})  
    