<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateARealTimePaymentsTransferParameters
{
    /**
     * The transfer amount in USD cents. For Real Time Payments transfers, must be positive.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * The name of the transfer's recipient.
     * 
     * @var string $creditorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditor_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $creditorName;
    
    /**
     * The destination account number.
     * 
     * @var ?string $destinationAccountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_account_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationAccountNumber = null;
    
    /**
     * The destination American Bankers' Association (ABA) Routing Transit Number (RTN).
     * 
     * @var ?string $destinationRoutingNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_routing_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationRoutingNumber = null;
    
    /**
     * The ID of an External Account to initiate a transfer to. If this parameter is provided, `destination_account_number` and `destination_routing_number` must be absent.
     * 
     * @var ?string $externalAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalAccountId = null;
    
    /**
     * Unstructured information that will show on the recipient's bank statement.
     * 
     * @var string $remittanceInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('remittance_information')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $remittanceInformation;
    
    /**
     * Whether the transfer requires explicit approval via the dashboard or API.
     * 
     * @var ?bool $requireApproval
     */
	#[\JMS\Serializer\Annotation\SerializedName('require_approval')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requireApproval = null;
    
    /**
     * The identifier of the Account Number from which to send the transfer.
     * 
     * @var string $sourceAccountNumberId
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_account_number_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceAccountNumberId;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->creditorName = "";
		$this->destinationAccountNumber = null;
		$this->destinationRoutingNumber = null;
		$this->externalAccountId = null;
		$this->remittanceInformation = "";
		$this->requireApproval = null;
		$this->sourceAccountNumberId = "";
	}
}
