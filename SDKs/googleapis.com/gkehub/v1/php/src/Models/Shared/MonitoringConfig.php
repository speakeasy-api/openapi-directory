<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MonitoringConfig - This field informs Fleet-based applications/services/UIs with the necessary information for where each underlying Cluster reports its metrics.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MonitoringConfig
{
    /**
     * Immutable. Cluster name used to report metrics. For Anthos on VMWare/Baremetal, it would be in format `memberClusters/cluster_name`; And for Anthos on MultiCloud, it would be in format `{azureClusters, awsClusters}/cluster_name`.
     * 
     * @var ?string $cluster
     */
	#[\JMS\Serializer\Annotation\SerializedName('cluster')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cluster = null;
    
    /**
     * Immutable. Cluster hash, this is a unique string generated by google code, which does not contain any PII, which we can use to reference the cluster. This is expected to be created by the monitoring stack and persisted into the Cluster object as well as to GKE-Hub.
     * 
     * @var ?string $clusterHash
     */
	#[\JMS\Serializer\Annotation\SerializedName('clusterHash')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clusterHash = null;
    
    /**
     * Kubernetes system metrics, if available, are written to this prefix. This defaults to kubernetes.io for GKE, and kubernetes.io/anthos for Anthos eventually. Noted: Anthos MultiCloud will have kubernetes.io prefix today but will migration to be under kubernetes.io/anthos
     * 
     * @var ?string $kubernetesMetricsPrefix
     */
	#[\JMS\Serializer\Annotation\SerializedName('kubernetesMetricsPrefix')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kubernetesMetricsPrefix = null;
    
    /**
     * Immutable. Location used to report Metrics
     * 
     * @var ?string $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
    /**
     * Immutable. Project used to report Metrics
     * 
     * @var ?string $projectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('projectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectId = null;
    
	public function __construct()
	{
		$this->cluster = null;
		$this->clusterHash = null;
		$this->kubernetesMetricsPrefix = null;
		$this->location = null;
		$this->projectId = null;
	}
}
