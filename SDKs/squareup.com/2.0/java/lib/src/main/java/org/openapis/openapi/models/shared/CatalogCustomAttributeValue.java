/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CatalogCustomAttributeValue - An instance of a custom attribute. Custom attributes can be defined and
 * added to `ITEM` and `ITEM_VARIATION` type catalog objects.
 * [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes).
 */
public class CatalogCustomAttributeValue {
    /**
     * A `true` or `false` value. Populated if `type` = `BOOLEAN`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("boolean_value")
    public Boolean booleanValue;

    public CatalogCustomAttributeValue withBooleanValue(Boolean booleanValue) {
        this.booleanValue = booleanValue;
        return this;
    }
    
    /**
     * __Read-only.__ The id of the [CatalogCustomAttributeDefinition](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogCustomAttributeDefinition) this value belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_attribute_definition_id")
    public String customAttributeDefinitionId;

    public CatalogCustomAttributeValue withCustomAttributeDefinitionId(String customAttributeDefinitionId) {
        this.customAttributeDefinitionId = customAttributeDefinitionId;
        return this;
    }
    
    /**
     * __Read-only.__ A copy of key from the associated `CatalogCustomAttributeDefinition`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public CatalogCustomAttributeValue withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The name of the custom attribute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CatalogCustomAttributeValue withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Populated if `type` = `NUMBER`. Contains a string
     * representation of a decimal number, using a `.` as the decimal separator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number_value")
    public String numberValue;

    public CatalogCustomAttributeValue withNumberValue(String numberValue) {
        this.numberValue = numberValue;
        return this;
    }
    
    /**
     * One or more choices from `allowed_selections`. Populated if `type` = `SELECTION`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selection_uid_values")
    public String[] selectionUidValues;

    public CatalogCustomAttributeValue withSelectionUidValues(String[] selectionUidValues) {
        this.selectionUidValues = selectionUidValues;
        return this;
    }
    
    /**
     * The string value of the custom attribute.  Populated if `type` = `STRING`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("string_value")
    public String stringValue;

    public CatalogCustomAttributeValue withStringValue(String stringValue) {
        this.stringValue = stringValue;
        return this;
    }
    
    /**
     * __Read-only.__ A copy of type from the associated `CatalogCustomAttributeDefinition`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public CatalogCustomAttributeValue withType(String type) {
        this.type = type;
        return this;
    }
    
    public CatalogCustomAttributeValue(){}
}
