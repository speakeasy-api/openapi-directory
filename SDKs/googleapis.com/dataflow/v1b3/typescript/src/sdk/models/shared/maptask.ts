/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParallelInstruction } from "./parallelinstruction";
import { Expose, Type } from "class-transformer";

/**
 * MapTask consists of an ordered set of instructions, each of which describes one particular low-level operation for the worker to perform in order to accomplish the MapTask's WorkItem. Each instruction must appear in the list before any instructions which depends on its output.
 */
export class MapTask extends SpeakeasyBase {
  /**
   * Counter prefix that can be used to prefix counters. Not currently used in Dataflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "counterPrefix" })
  counterPrefix?: string;

  /**
   * The instructions in the MapTask.
   */
  @SpeakeasyMetadata({ elemType: ParallelInstruction })
  @Expose({ name: "instructions" })
  @Type(() => ParallelInstruction)
  instructions?: ParallelInstruction[];

  /**
   * System-defined name of the stage containing this MapTask. Unique across the workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stageName" })
  stageName?: string;

  /**
   * System-defined name of this MapTask. Unique across the workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "systemName" })
  systemName?: string;
}
