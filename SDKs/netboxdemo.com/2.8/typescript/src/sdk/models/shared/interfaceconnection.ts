/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedInterface } from "./nestedinterface";
import { Expose, Type } from "class-transformer";

export enum InterfaceConnectionConnectionStatusLabelEnum {
  NotConnected = "Not Connected",
  Connected = "Connected",
}

export enum InterfaceConnectionConnectionStatusValueEnum {
  False = "false",
  True = "true",
}

export class InterfaceConnectionConnectionStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: InterfaceConnectionConnectionStatusLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: InterfaceConnectionConnectionStatusValueEnum;
}

export class InterfaceConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "connection_status" })
  @Type(() => InterfaceConnectionConnectionStatus)
  connectionStatus?: InterfaceConnectionConnectionStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "interface_a" })
  @Type(() => NestedInterface)
  interfaceA?: NestedInterface;

  @SpeakeasyMetadata()
  @Expose({ name: "interface_b" })
  @Type(() => NestedInterface)
  interfaceB: NestedInterface;
}
