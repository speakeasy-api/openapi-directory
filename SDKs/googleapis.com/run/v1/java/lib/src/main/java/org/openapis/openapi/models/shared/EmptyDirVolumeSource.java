/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EmptyDirVolumeSource - Ephemeral storage which can be backed by real disks (HD, SSD), network storage or memory (i.e. tmpfs). For now only in memory (tmpfs) is supported. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).
 */
public class EmptyDirVolumeSource {
    /**
     * The medium on which the data is stored. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("medium")
    public String medium;

    public EmptyDirVolumeSource withMedium(String medium) {
        this.medium = medium;
        return this;
    }
    
    /**
     * Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. This field's values are of the 'Quantity' k8s type: https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeLimit")
    public String sizeLimit;

    public EmptyDirVolumeSource withSizeLimit(String sizeLimit) {
        this.sizeLimit = sizeLimit;
        return this;
    }
    
    public EmptyDirVolumeSource(){}
}
