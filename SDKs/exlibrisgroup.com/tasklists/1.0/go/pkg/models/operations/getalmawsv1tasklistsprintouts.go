// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type GetAlmawsV1TaskListsPrintoutsRequest struct {
	// Printout Name. Optional.
	Letter *string `queryParam:"style=form,explode=true,name=letter"`
	// Limits the number of results. Optional. Valid values are 0-100. Default value: 10.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Offset of the results returned. Optional. Default value: 0, which means that the first results will be returned.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Printout Printer
	PrinterID *string `queryParam:"style=form,explode=true,name=printer_id"`
	// A list of Printout IDs (for example: 123,456,778) from 1 to the limit of 100 Optional. Use of this option overrides all of the filtering parameters
	PrintoutID *string `queryParam:"style=form,explode=true,name=printout_id"`
	// Printout status. Optional. Valid values are: Printed, Pending, Canceled.
	Status *string `queryParam:"style=form,explode=true,name=status"`
}

// GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutPrinter - The printer.
type GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutPrinter struct {
	Desc  *string `json:"desc,omitempty"`
	Value *string `json:"value,omitempty"`
}

// GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutStatus - Status of the printout (Pending/Printed/Canceled).
type GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutStatus struct {
	Desc  *string `json:"desc,omitempty"`
	Value *string `json:"value,omitempty"`
}

// GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintout - Printout Object.
type GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintout struct {
	// The time that the letter has been send to the Printout Queue.
	Date *time.Time `json:"date,omitempty"`
	// The printout id.
	ID *string `json:"id,omitempty"`
	// Letter Html body.
	Letter *string `json:"letter,omitempty"`
	Link   *string `json:"link,omitempty"`
	// The printer.
	Printer *GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutPrinter `json:"printer,omitempty"`
	// The printout name.
	Printout *string `json:"printout,omitempty"`
	// The size of the letter.
	Size *string `json:"size,omitempty"`
	// The user who printed the letter.
	Source *string `json:"source,omitempty"`
	// Status of the printout (Pending/Printed/Canceled).
	Status *GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintoutStatus `json:"status,omitempty"`
}

// GetAlmawsV1TaskListsPrintouts200ApplicationJSON - A list of printouts.
type GetAlmawsV1TaskListsPrintouts200ApplicationJSON struct {
	// printout object.
	Printout []GetAlmawsV1TaskListsPrintouts200ApplicationJSONPrintout `json:"printout,omitempty"`
	// The total number of printouts.
	TotalRecordCount *int `json:"total_record_count,omitempty"`
}

type GetAlmawsV1TaskListsPrintoutsResponse struct {
	Body        []byte
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// OK - This method returns an object based on rest_printouts.xsd. See [here](/alma/apis/docs/xsd/rest_printouts.xsd)
	GetAlmawsV1TaskListsPrintouts200ApplicationJSONObject *GetAlmawsV1TaskListsPrintouts200ApplicationJSON
}
