/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class SearchVideosRequest {
    /**
     * The sort direction of the results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=direction")
    public SearchVideosDirectionEnum direction;
    public SearchVideosRequest withDirection(SearchVideosDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * The attribute by which to filter the results. `CC` and related filters target videos with the corresponding Creative Commons licenses. For more information, see our [Creative Commons](https://vimeo.com/creativecommons) page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public SearchVideosFilterEnum filter;
    public SearchVideosRequest withFilter(SearchVideosFilterEnum filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * A comma-separated list of video URLs to find.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=links")
    public String links;
    public SearchVideosRequest withLinks(String links) {
        this.links = links;
        return this;
    }
    
    /**
     * The page number of the results to show.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Double page;
    public SearchVideosRequest withPage(Double page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of items to show on each page of results, up to a maximum of 100.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Double perPage;
    public SearchVideosRequest withPerPage(Double perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * Search query.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query")
    public String query;
    public SearchVideosRequest withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * The way to sort the results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public SearchVideosSortEnum sort;
    public SearchVideosRequest withSort(SearchVideosSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * The comma-separated list of videos to find.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uris")
    public String uris;
    public SearchVideosRequest withUris(String uris) {
        this.uris = uris;
        return this;
    }
    
}
