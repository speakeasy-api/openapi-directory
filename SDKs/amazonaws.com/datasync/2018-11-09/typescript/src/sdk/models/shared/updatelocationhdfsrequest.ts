/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HdfsAuthenticationTypeEnum } from "./hdfsauthenticationtypeenum";
import { HdfsNameNode } from "./hdfsnamenode";
import { QopConfiguration } from "./qopconfiguration";
import { Expose, Type } from "class-transformer";

export class UpdateLocationHdfsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AgentArns" })
  agentArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "AuthenticationType" })
  authenticationType?: HdfsAuthenticationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "BlockSize" })
  blockSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "KerberosKeytab" })
  kerberosKeytab?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KerberosKrb5Conf" })
  kerberosKrb5Conf?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KerberosPrincipal" })
  kerberosPrincipal?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyProviderUri" })
  kmsKeyProviderUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LocationArn" })
  locationArn: string;

  @SpeakeasyMetadata({ elemType: HdfsNameNode })
  @Expose({ name: "NameNodes" })
  @Type(() => HdfsNameNode)
  nameNodes?: HdfsNameNode[];

  @SpeakeasyMetadata()
  @Expose({ name: "QopConfiguration" })
  @Type(() => QopConfiguration)
  qopConfiguration?: QopConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationFactor" })
  replicationFactor?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SimpleUser" })
  simpleUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Subdirectory" })
  subdirectory?: string;
}
