"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class PriceBulkUploadsRequestBodyFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file' }})  
    

@dataclasses.dataclass
class PriceBulkUploadsRequestBody:
    r"""The request body consists of a Feed file attached to the request based on the feedType selected"""
    
    file: PriceBulkUploadsRequestBodyFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""Feed file to upload"""  
    
class PriceBulkUploadsFeedTypeEnum(str, Enum):
    r"""The feed Type"""
    PRICE = 'price'
    CPT_SELLER_ELIGIBILITY = 'CPT_SELLER_ELIGIBILITY'


@dataclasses.dataclass
class PriceBulkUploadsRequest:
    
    feed_type: PriceBulkUploadsFeedTypeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'feedType', 'style': 'form', 'explode': True }})
    r"""The feed Type"""  
    request_body: PriceBulkUploadsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})
    r"""The request body consists of a Feed file attached to the request based on the feedType selected"""  
    wm_qos_correlation_id: str = dataclasses.field(metadata={'header': { 'field_name': 'WM_QOS.CORRELATION_ID', 'style': 'simple', 'explode': False }})
    r"""A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID"""  
    wm_sec_access_token: str = dataclasses.field(metadata={'header': { 'field_name': 'WM_SEC.ACCESS_TOKEN', 'style': 'simple', 'explode': False }})
    r"""The access token retrieved in the Token API call"""  
    wm_svc_name: str = dataclasses.field(metadata={'header': { 'field_name': 'WM_SVC.NAME', 'style': 'simple', 'explode': False }})
    r"""Walmart Service Name"""  
    wm_consumer_channel_type: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'WM_CONSUMER.CHANNEL.TYPE', 'style': 'simple', 'explode': False }})
    r"""A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding"""  
    

@dataclasses.dataclass
class PriceBulkUploads200ApplicationXML:
    r"""Successful Operation"""
    
    additional_attributes: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    errors: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    feed_id: Optional[str] = dataclasses.field(default=None)
    r"""A unique ID, returned from the Bulk Upload API, used for tracking the feed file"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PriceBulkUploads200ApplicationJSON:
    r"""Successful Operation"""
    
    additional_attributes: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalAttributes'), 'exclude': lambda f: f is None }})  
    errors: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})  
    feed_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feedId'), 'exclude': lambda f: f is None }})
    r"""A unique ID, returned from the Bulk Upload API, used for tracking the feed file"""  
    

@dataclasses.dataclass
class PriceBulkUploadsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    price_bulk_uploads_200_application_json_object: Optional[PriceBulkUploads200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful Operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    