/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudVisionV1p1beta1EntityAnnotation - Set of detected entity features.
 */
public class GoogleCloudVisionV1p1beta1EntityAnnotation {
    /**
     * A bounding polygon for the detected image annotation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("boundingPoly")
    public GoogleCloudVisionV1p1beta1BoundingPoly boundingPoly;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withBoundingPoly(GoogleCloudVisionV1p1beta1BoundingPoly boundingPoly) {
        this.boundingPoly = boundingPoly;
        return this;
    }
    
    /**
     * **Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the "Eiffel Tower" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidence")
    public Float confidence;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withConfidence(Float confidence) {
        this.confidence = confidence;
        return this;
    }
    
    /**
     * Entity textual description, expressed in its `locale` language.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The language code for the locale in which the entity textual `description` is expressed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    public String locale;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locations")
    public GoogleCloudVisionV1p1beta1LocationInfo[] locations;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withLocations(GoogleCloudVisionV1p1beta1LocationInfo[] locations) {
        this.locations = locations;
        return this;
    }
    
    /**
     * Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mid")
    public String mid;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withMid(String mid) {
        this.mid = mid;
        return this;
    }
    
    /**
     * Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public GoogleCloudVisionV1p1beta1Property[] properties;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withProperties(GoogleCloudVisionV1p1beta1Property[] properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * Overall score of the result. Range [0, 1].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("score")
    public Float score;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withScore(Float score) {
        this.score = score;
        return this;
    }
    
    /**
     * The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of "tower" is likely higher to an image containing the detected "Eiffel Tower" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topicality")
    public Float topicality;
    public GoogleCloudVisionV1p1beta1EntityAnnotation withTopicality(Float topicality) {
        this.topicality = topicality;
        return this;
    }
    
}
