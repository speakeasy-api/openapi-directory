// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum - The compliance state of the resource.
type OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum string

const (
	OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnumUnknown      OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum = "UNKNOWN"
	OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnumCompliant    OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum = "COMPLIANT"
	OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnumNonCompliant OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum = "NON_COMPLIANT"
)

func (e *OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "COMPLIANT":
		fallthrough
	case "NON_COMPLIANT":
		*e = OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum: %s", s)
	}
}

// OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance - Compliance data for an OS policy resource.
type OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance struct {
	// The compliance state of the resource.
	ComplianceState *OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceComplianceStateEnum `json:"complianceState,omitempty"`
	// A reason for the resource to be in the given compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. The following values are supported when `compliance_state == UNKNOWN` * `execution-errors`: Errors were encountered by the agent while executing the resource and the compliance state couldn't be determined. * `execution-skipped-by-agent`: Resource execution was skipped by the agent because errors were encountered while executing prior resources in the OS policy. * `os-policy-execution-attempt-failed`: The execution of the OS policy containing this resource failed and the compliance state couldn't be determined.
	ComplianceStateReason *string `json:"complianceStateReason,omitempty"`
	// Ordered list of configuration completed by the agent for the OS policy resource.
	ConfigSteps []OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceOSPolicyResourceConfigStep `json:"configSteps,omitempty"`
	// ExecResource specific output.
	ExecResourceOutput *OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceComplianceExecResourceOutput `json:"execResourceOutput,omitempty"`
	// The ID of the OS policy resource.
	OsPolicyResourceID *string `json:"osPolicyResourceId,omitempty"`
}
