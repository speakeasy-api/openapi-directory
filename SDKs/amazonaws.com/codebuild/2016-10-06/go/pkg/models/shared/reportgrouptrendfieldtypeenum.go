// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReportGroupTrendFieldTypeEnum string

const (
	ReportGroupTrendFieldTypeEnumPassRate        ReportGroupTrendFieldTypeEnum = "PASS_RATE"
	ReportGroupTrendFieldTypeEnumDuration        ReportGroupTrendFieldTypeEnum = "DURATION"
	ReportGroupTrendFieldTypeEnumTotal           ReportGroupTrendFieldTypeEnum = "TOTAL"
	ReportGroupTrendFieldTypeEnumLineCoverage    ReportGroupTrendFieldTypeEnum = "LINE_COVERAGE"
	ReportGroupTrendFieldTypeEnumLinesCovered    ReportGroupTrendFieldTypeEnum = "LINES_COVERED"
	ReportGroupTrendFieldTypeEnumLinesMissed     ReportGroupTrendFieldTypeEnum = "LINES_MISSED"
	ReportGroupTrendFieldTypeEnumBranchCoverage  ReportGroupTrendFieldTypeEnum = "BRANCH_COVERAGE"
	ReportGroupTrendFieldTypeEnumBranchesCovered ReportGroupTrendFieldTypeEnum = "BRANCHES_COVERED"
	ReportGroupTrendFieldTypeEnumBranchesMissed  ReportGroupTrendFieldTypeEnum = "BRANCHES_MISSED"
)

func (e ReportGroupTrendFieldTypeEnum) ToPointer() *ReportGroupTrendFieldTypeEnum {
	return &e
}

func (e *ReportGroupTrendFieldTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PASS_RATE":
		fallthrough
	case "DURATION":
		fallthrough
	case "TOTAL":
		fallthrough
	case "LINE_COVERAGE":
		fallthrough
	case "LINES_COVERED":
		fallthrough
	case "LINES_MISSED":
		fallthrough
	case "BRANCH_COVERAGE":
		fallthrough
	case "BRANCHES_COVERED":
		fallthrough
	case "BRANCHES_MISSED":
		*e = ReportGroupTrendFieldTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReportGroupTrendFieldTypeEnum: %v", v)
	}
}
