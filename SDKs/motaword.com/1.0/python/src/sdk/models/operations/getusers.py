"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import userlist as shared_userlist
from enum import Enum
from typing import Optional

class GetUsersUserTypeEnum(str, Enum):
    VENDOR = 'vendor'
    ALL = 'all'


@dataclasses.dataclass
class GetUsersRequest:
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})  
    user_type: Optional[GetUsersUserTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'user_type', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetUsersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    user_list: Optional[shared_userlist.UserList] = dataclasses.field(default=None)
    r"""User list"""  
    