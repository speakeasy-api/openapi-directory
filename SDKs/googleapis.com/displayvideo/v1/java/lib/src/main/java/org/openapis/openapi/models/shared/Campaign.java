/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Campaign - A single campaign.
 */
public class Campaign {
    /**
     * Output only. The unique ID of the advertiser the campaign belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserId")
    public String advertiserId;

    public Campaign withAdvertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
        return this;
    }
    
    /**
     * The list of budgets available to this campaign. If this field is not set, the campaign uses an unlimited budget.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignBudgets")
    public CampaignBudget[] campaignBudgets;

    public Campaign withCampaignBudgets(CampaignBudget[] campaignBudgets) {
        this.campaignBudgets = campaignBudgets;
        return this;
    }
    
    /**
     * Settings that track the planned spend and duration of a campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignFlight")
    public CampaignFlight campaignFlight;

    public Campaign withCampaignFlight(CampaignFlight campaignFlight) {
        this.campaignFlight = campaignFlight;
        return this;
    }
    
    /**
     * Settings that control the goal of a campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignGoal")
    public CampaignGoal campaignGoal;

    public Campaign withCampaignGoal(CampaignGoal campaignGoal) {
        this.campaignGoal = campaignGoal;
        return this;
    }
    
    /**
     * Output only. The unique ID of the campaign. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignId")
    public String campaignId;

    public Campaign withCampaignId(String campaignId) {
        this.campaignId = campaignId;
        return this;
    }
    
    /**
     * Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Campaign withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Required. Controls whether or not the insertion orders under this campaign can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method, `ENTITY_STATUS_ARCHIVED` is not allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entityStatus")
    public CampaignEntityStatusEnum entityStatus;

    public Campaign withEntityStatus(CampaignEntityStatusEnum entityStatus) {
        this.entityStatus = entityStatus;
        return this;
    }
    
    /**
     * Settings that control the number of times a user may be shown with the same ad during a given time period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frequencyCap")
    public FrequencyCap frequencyCap;

    public Campaign withFrequencyCap(FrequencyCap frequencyCap) {
        this.frequencyCap = frequencyCap;
        return this;
    }
    
    /**
     * Output only. The resource name of the campaign.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Campaign withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The timestamp when the campaign was last updated. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Campaign withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Campaign(){}
}
