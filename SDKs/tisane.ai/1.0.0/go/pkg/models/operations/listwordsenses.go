// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListWordSensesQueryParams struct {
	// (Required) a standard culture code (ISO-639 language code with an optional country extension)
	Language *string `queryParam:"style=form,explode=true,name=language"`
	// (Required) the word to inspect
	Word *string `queryParam:"style=form,explode=true,name=word"`
}

type ListWordSensesHeaders struct {
	// {{apiKeyDescription}}
	OcpApimSubscriptionKey *string `header:"style=simple,explode=false,name=Ocp-Apim-Subscription-Key"`
}

type ListWordSensesRequest struct {
	QueryParams ListWordSensesQueryParams
	Headers     ListWordSensesHeaders
}

type ListWordSenses200ApplicationJSONFamilies struct {
	Key        *float64               `json:"Key,omitempty"`
	Value      map[string]interface{} `json:"Value,omitempty"`
	Definition *string                `json:"definition,omitempty"`
}

type ListWordSenses200ApplicationJSONFeatures struct {
	Index *float64 `json:"index,omitempty"`
	Type  *string  `json:"type,omitempty"`
	Value *string  `json:"value,omitempty"`
}

type ListWordSenses200ApplicationJSON struct {
	Families    []ListWordSenses200ApplicationJSONFamilies `json:"families,omitempty"`
	Features    []ListWordSenses200ApplicationJSONFeatures `json:"features,omitempty"`
	Frequency   *float64                                   `json:"frequency,omitempty"`
	IsLemma     *bool                                      `json:"isLemma,omitempty"`
	LegacyMapID *float64                                   `json:"legacyMapId,omitempty"`
	Lemma       *string                                    `json:"lemma,omitempty"`
	LexemeID    *float64                                   `json:"lexemeId,omitempty"`
}

type ListWordSensesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Interpretations of "couscous"
	ListWordSenses200ApplicationJSONObjects []ListWordSenses200ApplicationJSON
}
