/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EncryptionTypeEnum } from "./encryptiontypeenum";
import { Expose } from "class-transformer";

/**
 * Encryption config for Connect Instance. Note that sensitive data will always be encrypted. If disabled, service will perform encryption with its own key. If enabled, a KMS key id needs to be provided and KMS charges will apply. KMS is only type supported
 */
export class EncryptionConfig extends SpeakeasyBase {
  /**
   * Boolean to indicate if custom encryption has been enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  /**
   * Server-side encryption type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptionType" })
  encryptionType?: EncryptionTypeEnum;

  /**
   * KMS key id/arn for encryption config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keyArn" })
  keyArn?: string;
}
