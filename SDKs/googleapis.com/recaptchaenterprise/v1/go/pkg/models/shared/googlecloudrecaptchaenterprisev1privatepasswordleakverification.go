// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerificationInput - Private password leak verification info.
type GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerificationInput struct {
	// Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`.
	EncryptedUserCredentialsHash *string `json:"encryptedUserCredentialsHash,omitempty"`
	// Optional. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix.
	LookupHashPrefix *string `json:"lookupHashPrefix,omitempty"`
}

// GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification - Private password leak verification info.
type GoogleCloudRecaptchaenterpriseV1PrivatePasswordLeakVerification struct {
	// Output only. List of prefixes of the encrypted potential password leaks that matched the given parameters. They must be compared with the client-side decryption prefix of `reencrypted_user_credentials_hash`
	EncryptedLeakMatchPrefixes []string `json:"encryptedLeakMatchPrefixes,omitempty"`
	// Optional. Encrypted Scrypt hash of the canonicalized username+password. It is re-encrypted by the server and returned through `reencrypted_user_credentials_hash`.
	EncryptedUserCredentialsHash *string `json:"encryptedUserCredentialsHash,omitempty"`
	// Optional. Exactly 26-bit prefix of the SHA-256 hash of the canonicalized username. It is used to look up password leaks associated with that hash prefix.
	LookupHashPrefix *string `json:"lookupHashPrefix,omitempty"`
	// Output only. Corresponds to the re-encryption of the `encrypted_user_credentials_hash` field. It is used to match potential password leaks within `encrypted_leak_match_prefixes`.
	ReencryptedUserCredentialsHash *string `json:"reencryptedUserCredentialsHash,omitempty"`
}
