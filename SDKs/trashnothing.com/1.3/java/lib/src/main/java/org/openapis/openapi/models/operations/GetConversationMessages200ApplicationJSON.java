/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetConversationMessages200ApplicationJSON - The messages and page data.  The conversation data is optional and is only returned if the include_conversation parameter is set.
 * 
 */
public class GetConversationMessages200ApplicationJSON {
    /**
     * A conversation between the current user and another user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversation")
    public org.openapis.openapi.models.shared.Conversation conversation;
    public GetConversationMessages200ApplicationJSON withConversation(org.openapis.openapi.models.shared.Conversation conversation) {
        this.conversation = conversation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messages")
    public org.openapis.openapi.models.shared.Message[] messages;
    public GetConversationMessages200ApplicationJSON withMessages(org.openapis.openapi.models.shared.Message[] messages) {
        this.messages = messages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page")
    public Long page;
    public GetConversationMessages200ApplicationJSON withPage(Long page) {
        this.page = page;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("per_page")
    public Long perPage;
    public GetConversationMessages200ApplicationJSON withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
}
