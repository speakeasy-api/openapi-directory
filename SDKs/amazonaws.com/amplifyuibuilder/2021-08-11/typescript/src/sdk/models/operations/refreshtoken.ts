/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Describes a refresh token.
 */
export class RefreshTokenRequestBodyRefreshTokenBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;
}

export class RefreshTokenRequestBody extends SpeakeasyBase {
  /**
   * Describes a refresh token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refreshTokenBody" })
  @Type(() => RefreshTokenRequestBodyRefreshTokenBody)
  refreshTokenBody: RefreshTokenRequestBodyRefreshTokenBody;
}

/**
 * The third-party provider for the token. The only valid value is <code>figma</code>.
 */
export enum RefreshTokenProviderEnum {
  Figma = "figma",
}

export class RefreshTokenRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: RefreshTokenRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The third-party provider for the token. The only valid value is <code>figma</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=provider",
  })
  provider: RefreshTokenProviderEnum;
}

export class RefreshTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InvalidParameterException
   */
  @SpeakeasyMetadata()
  invalidParameterException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  refreshTokenResponse?: shared.RefreshTokenResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
