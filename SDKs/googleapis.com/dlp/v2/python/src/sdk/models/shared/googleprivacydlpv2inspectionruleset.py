"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2infotype as shared_googleprivacydlpv2infotype
from ..shared import googleprivacydlpv2inspectionrule as shared_googleprivacydlpv2inspectionrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2InspectionRuleSet:
    r"""Rule set for modifying a set of infoTypes to alter behavior under certain circumstances, depending on the specific details of the rules within the set."""
    
    info_types: Optional[list[shared_googleprivacydlpv2infotype.GooglePrivacyDlpV2InfoType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infoTypes'), 'exclude': lambda f: f is None }})
    r"""List of infoTypes this rule set is applied to."""  
    rules: Optional[list[shared_googleprivacydlpv2inspectionrule.GooglePrivacyDlpV2InspectionRule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rules'), 'exclude': lambda f: f is None }})
    r"""Set of rules to be applied to infoTypes. The rules are applied in order."""  
    