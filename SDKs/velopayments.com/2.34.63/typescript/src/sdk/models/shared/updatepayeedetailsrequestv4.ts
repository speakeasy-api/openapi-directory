/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChallengeV4 } from "./challengev4";
import { CompanyV4 } from "./companyv4";
import { IndividualV4Input } from "./individualv4";
import { PayeeAddressV4 } from "./payeeaddressv4";
import { PayeeTypeEnumEnum } from "./payeetypeenumenum";
import { Expose, Type } from "class-transformer";

/**
 * Request to update payee details
 */
export class UpdatePayeeDetailsRequestV4Input extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => PayeeAddressV4)
  address?: PayeeAddressV4;

  /**
   * <p>Used to override the default challenge presented to the payee when they onboard</p>
   *
   * @remarks
   * <p>Not used after the payee has onboarded</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "challenge" })
  @Type(() => ChallengeV4)
  challenge?: ChallengeV4;

  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  @Type(() => CompanyV4)
  company?: CompanyV4;

  /**
   * The phone number of a device that the payee wishes to receive sms messages on
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contactSmsNumber" })
  contactSmsNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "individual" })
  @Type(() => IndividualV4Input)
  individual?: IndividualV4Input;

  /**
   * An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>
   *
   * @remarks
   * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * The type of the payee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payeeType" })
  payeeType?: PayeeTypeEnumEnum;
}
