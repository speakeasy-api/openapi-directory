"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import stadium as shared_stadium
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Team:
    
    average_draft_position: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AverageDraftPosition'), 'exclude': lambda f: f is None }})  
    average_draft_position2_qb: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AverageDraftPosition2QB'), 'exclude': lambda f: f is None }})  
    average_draft_position_dynasty: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AverageDraftPositionDynasty'), 'exclude': lambda f: f is None }})  
    average_draft_position_ppr: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AverageDraftPositionPPR'), 'exclude': lambda f: f is None }})  
    bye_week: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ByeWeek'), 'exclude': lambda f: f is None }})  
    city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('City'), 'exclude': lambda f: f is None }})  
    conference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Conference'), 'exclude': lambda f: f is None }})  
    defensive_coordinator: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefensiveCoordinator'), 'exclude': lambda f: f is None }})  
    defensive_scheme: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefensiveScheme'), 'exclude': lambda f: f is None }})  
    division: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Division'), 'exclude': lambda f: f is None }})  
    draft_kings_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DraftKingsName'), 'exclude': lambda f: f is None }})  
    draft_kings_player_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DraftKingsPlayerID'), 'exclude': lambda f: f is None }})  
    fan_duel_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FanDuelName'), 'exclude': lambda f: f is None }})  
    fan_duel_player_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FanDuelPlayerID'), 'exclude': lambda f: f is None }})  
    fantasy_draft_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FantasyDraftName'), 'exclude': lambda f: f is None }})  
    fantasy_draft_player_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FantasyDraftPlayerID'), 'exclude': lambda f: f is None }})  
    full_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FullName'), 'exclude': lambda f: f is None }})  
    global_team_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalTeamID'), 'exclude': lambda f: f is None }})  
    head_coach: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HeadCoach'), 'exclude': lambda f: f is None }})  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Key'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    offensive_coordinator: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OffensiveCoordinator'), 'exclude': lambda f: f is None }})  
    offensive_scheme: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OffensiveScheme'), 'exclude': lambda f: f is None }})  
    player_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PlayerID'), 'exclude': lambda f: f is None }})  
    primary_color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrimaryColor'), 'exclude': lambda f: f is None }})  
    quaternary_color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QuaternaryColor'), 'exclude': lambda f: f is None }})  
    secondary_color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecondaryColor'), 'exclude': lambda f: f is None }})  
    special_teams_coach: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpecialTeamsCoach'), 'exclude': lambda f: f is None }})  
    stadium_details: Optional[shared_stadium.Stadium] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StadiumDetails'), 'exclude': lambda f: f is None }})  
    stadium_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StadiumID'), 'exclude': lambda f: f is None }})  
    team_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TeamID'), 'exclude': lambda f: f is None }})  
    tertiary_color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TertiaryColor'), 'exclude': lambda f: f is None }})  
    upcoming_draft_kings_salary: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpcomingDraftKingsSalary'), 'exclude': lambda f: f is None }})  
    upcoming_fan_duel_salary: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpcomingFanDuelSalary'), 'exclude': lambda f: f is None }})  
    upcoming_opponent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpcomingOpponent'), 'exclude': lambda f: f is None }})  
    upcoming_opponent_position_rank: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpcomingOpponentPositionRank'), 'exclude': lambda f: f is None }})  
    upcoming_opponent_rank: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpcomingOpponentRank'), 'exclude': lambda f: f is None }})  
    upcoming_salary: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpcomingSalary'), 'exclude': lambda f: f is None }})  
    upcoming_yahoo_salary: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpcomingYahooSalary'), 'exclude': lambda f: f is None }})  
    wikipedia_logo_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WikipediaLogoUrl'), 'exclude': lambda f: f is None }})  
    wikipedia_word_mark_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WikipediaWordMarkUrl'), 'exclude': lambda f: f is None }})  
    yahoo_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('YahooName'), 'exclude': lambda f: f is None }})  
    yahoo_player_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('YahooPlayerID'), 'exclude': lambda f: f is None }})  
    