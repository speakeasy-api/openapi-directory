/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RealtimeDataQuery - Real time data request query parameters.
 */
public class RealtimeDataQuery {
    /**
     * List of real time dimensions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensions")
    public String dimensions;
    public RealtimeDataQuery withDimensions(String dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * Comma-separated list of dimension or metric filters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filters")
    public String filters;
    public RealtimeDataQuery withFilters(String filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * Unique table ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ids")
    public String ids;
    public RealtimeDataQuery withIds(String ids) {
        this.ids = ids;
        return this;
    }
    
    /**
     * Maximum results per page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max-results")
    public Integer maxResults;
    public RealtimeDataQuery withMaxResults(Integer maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * List of real time metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metrics")
    public String[] metrics;
    public RealtimeDataQuery withMetrics(String[] metrics) {
        this.metrics = metrics;
        return this;
    }
    
    /**
     * List of dimensions or metrics based on which real time data is sorted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sort")
    public String[] sort;
    public RealtimeDataQuery withSort(String[] sort) {
        this.sort = sort;
        return this;
    }
    
}
