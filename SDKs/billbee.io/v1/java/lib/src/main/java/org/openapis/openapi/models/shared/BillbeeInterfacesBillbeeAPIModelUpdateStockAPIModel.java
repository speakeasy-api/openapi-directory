/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel {
    /**
     * Automatically reduce the NewQuantity by the currently not fulfilled amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutosubtractReservedAmount")
    @SpeakeasyMetadata("form:name=AutosubtractReservedAmount")
    public Boolean autosubtractReservedAmount;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withAutosubtractReservedAmount(Boolean autosubtractReservedAmount) {
        this.autosubtractReservedAmount = autosubtractReservedAmount;
        return this;
    }
    
    /**
     * Optional the ID of the Billbee product to update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BillbeeId")
    @SpeakeasyMetadata("form:name=BillbeeId")
    public Long billbeeId;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withBillbeeId(Long billbeeId) {
        this.billbeeId = billbeeId;
        return this;
    }
    
    /**
     * This parameter is currently ignored
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeltaQuantity")
    @SpeakeasyMetadata("form:name=DeltaQuantity")
    public Double deltaQuantity;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withDeltaQuantity(Double deltaQuantity) {
        this.deltaQuantity = deltaQuantity;
        return this;
    }
    
    /**
     * If true, every sent stockchange is stored and transmitted to the connected shop, even if the value has not changed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ForceSendStockToShops")
    @SpeakeasyMetadata("form:name=ForceSendStockToShops")
    public Boolean forceSendStockToShops;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withForceSendStockToShops(Boolean forceSendStockToShops) {
        this.forceSendStockToShops = forceSendStockToShops;
        return this;
    }
    
    /**
     * The new absolute stock quantity for the product you want to set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NewQuantity")
    @SpeakeasyMetadata("form:name=NewQuantity")
    public Double newQuantity;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withNewQuantity(Double newQuantity) {
        this.newQuantity = newQuantity;
        return this;
    }
    
    /**
     * This parameter is currently ignored
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OldQuantity")
    @SpeakeasyMetadata("form:name=OldQuantity")
    public Double oldQuantity;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withOldQuantity(Double oldQuantity) {
        this.oldQuantity = oldQuantity;
        return this;
    }
    
    /**
     * Optional a reason text for the stock update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Reason")
    @SpeakeasyMetadata("form:name=Reason")
    public String reason;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The SKU of the product to update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sku")
    @SpeakeasyMetadata("form:name=Sku")
    public String sku;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * Optional the stock id if the feature multi stock is activated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StockId")
    @SpeakeasyMetadata("form:name=StockId")
    public Long stockId;
    public BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel withStockId(Long stockId) {
        this.stockId = stockId;
        return this;
    }
    
}
