"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateNetworkUplinkSettingsResponse = exports.UpdateNetworkUplinkSettingsRequest = exports.UpdateNetworkUplinkSettingsRequestBody = exports.UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits = exports.UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2 = exports.UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1 = exports.UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The bandwidth settings for the 'cellular' uplink
 */
var UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular = /** @class */ (function (_super) {
    __extends(UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular, _super);
    function UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "limitDown" }),
        __metadata("design:type", Number)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular.prototype, "limitDown", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "limitUp" }),
        __metadata("design:type", Number)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular.prototype, "limitUp", void 0);
    return UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular = UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular;
/**
 * The bandwidth settings for the 'wan1' uplink
 */
var UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1 = /** @class */ (function (_super) {
    __extends(UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1, _super);
    function UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "limitDown" }),
        __metadata("design:type", Number)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1.prototype, "limitDown", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "limitUp" }),
        __metadata("design:type", Number)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1.prototype, "limitUp", void 0);
    return UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1 = UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1;
/**
 * The bandwidth settings for the 'wan2' uplink
 */
var UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2 = /** @class */ (function (_super) {
    __extends(UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2, _super);
    function UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "limitDown" }),
        __metadata("design:type", Number)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2.prototype, "limitDown", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "limitUp" }),
        __metadata("design:type", Number)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2.prototype, "limitUp", void 0);
    return UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2 = UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2;
/**
 * A mapping of uplinks to their bandwidth settings (be sure to check which uplinks are supported for your network)
 */
var UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits = /** @class */ (function (_super) {
    __extends(UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits, _super);
    function UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cellular" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular; }),
        __metadata("design:type", UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsCellular)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits.prototype, "cellular", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wan1" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1; }),
        __metadata("design:type", UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan1)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits.prototype, "wan1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "wan2" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2; }),
        __metadata("design:type", UpdateNetworkUplinkSettingsRequestBodyBandwidthLimitsWan2)
    ], UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits.prototype, "wan2", void 0);
    return UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits = UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits;
var UpdateNetworkUplinkSettingsRequestBody = /** @class */ (function (_super) {
    __extends(UpdateNetworkUplinkSettingsRequestBody, _super);
    function UpdateNetworkUplinkSettingsRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bandwidthLimits" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits; }),
        __metadata("design:type", UpdateNetworkUplinkSettingsRequestBodyBandwidthLimits)
    ], UpdateNetworkUplinkSettingsRequestBody.prototype, "bandwidthLimits", void 0);
    return UpdateNetworkUplinkSettingsRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkUplinkSettingsRequestBody = UpdateNetworkUplinkSettingsRequestBody;
var UpdateNetworkUplinkSettingsRequest = /** @class */ (function (_super) {
    __extends(UpdateNetworkUplinkSettingsRequest, _super);
    function UpdateNetworkUplinkSettingsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateNetworkUplinkSettingsRequestBody)
    ], UpdateNetworkUplinkSettingsRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], UpdateNetworkUplinkSettingsRequest.prototype, "networkId", void 0);
    return UpdateNetworkUplinkSettingsRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkUplinkSettingsRequest = UpdateNetworkUplinkSettingsRequest;
var UpdateNetworkUplinkSettingsResponse = /** @class */ (function (_super) {
    __extends(UpdateNetworkUplinkSettingsResponse, _super);
    function UpdateNetworkUplinkSettingsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateNetworkUplinkSettingsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateNetworkUplinkSettingsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkUplinkSettingsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkUplinkSettingsResponse.prototype, "updateNetworkUplinkSettings200ApplicationJSONObject", void 0);
    return UpdateNetworkUplinkSettingsResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkUplinkSettingsResponse = UpdateNetworkUplinkSettingsResponse;
