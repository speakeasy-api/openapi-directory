// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ClientForbiddenProblemReasonEnum string

const (
	ClientForbiddenProblemReasonEnumOfficialClientForbidden ClientForbiddenProblemReasonEnum = "official-client-forbidden"
	ClientForbiddenProblemReasonEnumClientNotEnrolled       ClientForbiddenProblemReasonEnum = "client-not-enrolled"
)

func (e *ClientForbiddenProblemReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "official-client-forbidden":
		fallthrough
	case "client-not-enrolled":
		*e = ClientForbiddenProblemReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClientForbiddenProblemReasonEnum: %s", s)
	}
}

// ClientForbiddenProblem - A problem that indicates your client is forbidden from making this request.
type ClientForbiddenProblem struct {
	Detail          string                            `json:"detail"`
	Reason          *ClientForbiddenProblemReasonEnum `json:"reason,omitempty"`
	RegistrationURL *string                           `json:"registration_url,omitempty"`
	Title           string                            `json:"title"`
	Type            string                            `json:"type"`
}
