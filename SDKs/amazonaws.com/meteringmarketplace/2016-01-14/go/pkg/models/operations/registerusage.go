// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterUsageXAmzTargetEnum
type RegisterUsageXAmzTargetEnum string

const (
	RegisterUsageXAmzTargetEnumAwsmpMeteringServiceRegisterUsage RegisterUsageXAmzTargetEnum = "AWSMPMeteringService.RegisterUsage"
)

func (e *RegisterUsageXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSMPMeteringService.RegisterUsage":
		*e = RegisterUsageXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterUsageXAmzTargetEnum: %s", s)
	}
}

type RegisterUsageHeaders struct {
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        RegisterUsageXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterUsageRequest struct {
	Headers RegisterUsageHeaders
	Request shared.RegisterUsageRequest `request:"mediaType=application/json"`
}

type RegisterUsageResponse struct {
	ContentType string
	// CustomerNotEntitledException
	CustomerNotEntitledException interface{}
	// DisabledApiException
	DisabledAPIException interface{}
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidProductCodeException
	InvalidProductCodeException interface{}
	// InvalidPublicKeyVersionException
	InvalidPublicKeyVersionException interface{}
	// InvalidRegionException
	InvalidRegionException interface{}
	// PlatformNotSupportedException
	PlatformNotSupportedException interface{}
	// Success
	RegisterUsageResult *shared.RegisterUsageResult
	StatusCode          int
	RawResponse         *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
