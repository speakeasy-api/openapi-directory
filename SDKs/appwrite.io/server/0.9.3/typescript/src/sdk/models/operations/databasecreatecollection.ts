/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class DatabaseCreateCollectionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Key",
  })
  key: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Project",
  })
  project: string;
}

export class DatabaseCreateCollectionRequestBody extends SpeakeasyBase {
  /**
   * Collection name. Max length: 128 chars.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * An array of strings with read permissions. By default no user is granted with any read permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "read" })
  read: string[];

  /**
   * Array of [rule objects](/docs/rules). Each rule define a collection field name, data type and validation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rules" })
  rules: string[];

  /**
   * An array of strings with write permissions. By default no user is granted with any write permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "write" })
  write: string[];
}

export class DatabaseCreateCollectionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Collection
   */
  @SpeakeasyMetadata()
  collection?: shared.Collection;
}
