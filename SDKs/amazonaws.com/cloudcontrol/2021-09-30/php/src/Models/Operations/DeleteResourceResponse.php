<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class DeleteResourceResponse
{
    /**
     * AlreadyExistsException
     * 
     * @var mixed $alreadyExistsException
     */
	
    public mixed $alreadyExistsException = null;
    
    /**
     * ClientTokenConflictException
     * 
     * @var mixed $clientTokenConflictException
     */
	
    public mixed $clientTokenConflictException = null;
    
    /**
     * ConcurrentOperationException
     * 
     * @var mixed $concurrentOperationException
     */
	
    public mixed $concurrentOperationException = null;
    
	
    public string $contentType;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DeleteResourceOutput $deleteResourceOutput
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\DeleteResourceOutput $deleteResourceOutput = null;
    
    /**
     * GeneralServiceException
     * 
     * @var mixed $generalServiceException
     */
	
    public mixed $generalServiceException = null;
    
    /**
     * HandlerFailureException
     * 
     * @var mixed $handlerFailureException
     */
	
    public mixed $handlerFailureException = null;
    
    /**
     * HandlerInternalFailureException
     * 
     * @var mixed $handlerInternalFailureException
     */
	
    public mixed $handlerInternalFailureException = null;
    
    /**
     * InvalidCredentialsException
     * 
     * @var mixed $invalidCredentialsException
     */
	
    public mixed $invalidCredentialsException = null;
    
    /**
     * InvalidRequestException
     * 
     * @var mixed $invalidRequestException
     */
	
    public mixed $invalidRequestException = null;
    
    /**
     * NetworkFailureException
     * 
     * @var mixed $networkFailureException
     */
	
    public mixed $networkFailureException = null;
    
    /**
     * NotStabilizedException
     * 
     * @var mixed $notStabilizedException
     */
	
    public mixed $notStabilizedException = null;
    
    /**
     * NotUpdatableException
     * 
     * @var mixed $notUpdatableException
     */
	
    public mixed $notUpdatableException = null;
    
    /**
     * PrivateTypeException
     * 
     * @var mixed $privateTypeException
     */
	
    public mixed $privateTypeException = null;
    
    /**
     * ResourceConflictException
     * 
     * @var mixed $resourceConflictException
     */
	
    public mixed $resourceConflictException = null;
    
    /**
     * ResourceNotFoundException
     * 
     * @var mixed $resourceNotFoundException
     */
	
    public mixed $resourceNotFoundException = null;
    
    /**
     * ServiceInternalErrorException
     * 
     * @var mixed $serviceInternalErrorException
     */
	
    public mixed $serviceInternalErrorException = null;
    
    /**
     * ServiceLimitExceededException
     * 
     * @var mixed $serviceLimitExceededException
     */
	
    public mixed $serviceLimitExceededException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * ThrottlingException
     * 
     * @var mixed $throttlingException
     */
	
    public mixed $throttlingException = null;
    
    /**
     * TypeNotFoundException
     * 
     * @var mixed $typeNotFoundException
     */
	
    public mixed $typeNotFoundException = null;
    
    /**
     * UnsupportedActionException
     * 
     * @var mixed $unsupportedActionException
     */
	
    public mixed $unsupportedActionException = null;
    
	public function __construct()
	{
		$this->alreadyExistsException = null;
		$this->clientTokenConflictException = null;
		$this->concurrentOperationException = null;
		$this->contentType = "";
		$this->deleteResourceOutput = null;
		$this->generalServiceException = null;
		$this->handlerFailureException = null;
		$this->handlerInternalFailureException = null;
		$this->invalidCredentialsException = null;
		$this->invalidRequestException = null;
		$this->networkFailureException = null;
		$this->notStabilizedException = null;
		$this->notUpdatableException = null;
		$this->privateTypeException = null;
		$this->resourceConflictException = null;
		$this->resourceNotFoundException = null;
		$this->serviceInternalErrorException = null;
		$this->serviceLimitExceededException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->throttlingException = null;
		$this->typeNotFoundException = null;
		$this->unsupportedActionException = null;
	}
}
