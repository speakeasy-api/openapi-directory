// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateWorkerFleetHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateWorkerFleetRequestBody struct {
	// JSON blob containing additional fixed properties regarding the worker fleet
	AdditionalFixedProperties *string `json:"additionalFixedProperties,omitempty"`
	// Token used for detecting replayed requests. Replayed requests will not be performed multiple times.
	ClientToken *string `json:"clientToken,omitempty"`
	// Human friendly name of the resource.
	Name string `json:"name"`
	// Site ARN.
	Site string `json:"site"`
}

type CreateWorkerFleetRequest struct {
	Headers CreateWorkerFleetHeaders
	Request CreateWorkerFleetRequestBody `request:"mediaType=application/json"`
}

type CreateWorkerFleetResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateWorkerFleetResponse *shared.CreateWorkerFleetResponse
	// InternalServerException
	InternalServerException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
