// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateAssociationXAmzTargetEnum
type UpdateAssociationXAmzTargetEnum string

const (
	UpdateAssociationXAmzTargetEnumAmazonSsmUpdateAssociation UpdateAssociationXAmzTargetEnum = "AmazonSSM.UpdateAssociation"
)

func (e UpdateAssociationXAmzTargetEnum) ToPointer() *UpdateAssociationXAmzTargetEnum {
	return &e
}

func (e *UpdateAssociationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.UpdateAssociation":
		*e = UpdateAssociationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAssociationXAmzTargetEnum: %v", v)
	}
}

type UpdateAssociationRequest struct {
	UpdateAssociationRequest shared.UpdateAssociationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               UpdateAssociationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateAssociationResponse struct {
	// AssociationDoesNotExist
	AssociationDoesNotExist interface{}
	// AssociationVersionLimitExceeded
	AssociationVersionLimitExceeded interface{}
	ContentType                     string
	// InternalServerError
	InternalServerError interface{}
	// InvalidAssociationVersion
	InvalidAssociationVersion interface{}
	// InvalidDocument
	InvalidDocument interface{}
	// InvalidDocumentVersion
	InvalidDocumentVersion interface{}
	// InvalidOutputLocation
	InvalidOutputLocation interface{}
	// InvalidParameters
	InvalidParameters interface{}
	// InvalidSchedule
	InvalidSchedule interface{}
	// InvalidTarget
	InvalidTarget interface{}
	// InvalidTargetMaps
	InvalidTargetMaps interface{}
	// InvalidUpdate
	InvalidUpdate interface{}
	StatusCode    int
	RawResponse   *http.Response
	// TooManyUpdates
	TooManyUpdates interface{}
	// Success
	UpdateAssociationResult *shared.UpdateAssociationResult
}
