<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetAuthTokenCode200ApplicationJSON
{
    /**
     * the reusability of a token (standard or single use)
     * 
     * @var string $access
     */
	#[\JMS\Serializer\Annotation\SerializedName('access')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $access;
    
    /**
     * the temporary token
     * 
     * @var string $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $code;
    
    /**
     * duration in seconds of the token validity
     * 
     * @var int $expiresIn
     */
	#[\JMS\Serializer\Annotation\SerializedName('expires_in')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $expiresIn;
    
    /**
     * the token type
     * 
     * @var array<string, mixed> $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $type;
    
	public function __construct()
	{
		$this->access = "";
		$this->code = "";
		$this->expiresIn = 0;
		$this->type = [];
	}
}
