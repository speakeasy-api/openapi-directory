// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSpacesIDProfessionalVehiclesRequest struct {
	// designation of the vehicle
	Designation *string `queryParam:"style=form,explode=true,name=Designation"`
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnum string

const (
	GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnumConfidential GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnum = "confidential"
	GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnumRegular      GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnum = "regular"
	GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnumPublic       GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnum = "public"
)

func (e *GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnum: %s", s)
	}
}

type GetSpacesIDProfessionalVehicles200ApplicationJSON struct {
	About              *string                                                     `json:"About,omitempty"`
	ArchivalDate       *string                                                     `json:"ArchivalDate,omitempty"`
	Brand              *string                                                     `json:"Brand,omitempty"`
	Class              *string                                                     `json:"Class,omitempty"`
	Comment            *string                                                     `json:"Comment,omitempty"`
	CompanyTax         *bool                                                       `json:"CompanyTax,omitempty"`
	DateIn             *string                                                     `json:"DateIn,omitempty"`
	DateOut            *string                                                     `json:"DateOut,omitempty"`
	Designation        *string                                                     `json:"Designation,omitempty"`
	Home               *bool                                                       `json:"Home,omitempty"`
	ID                 *string                                                     `json:"Id,omitempty"`
	Keywords           []string                                                    `json:"Keywords,omitempty"`
	Level              *GetSpacesIDProfessionalVehicles200ApplicationJSONLevelEnum `json:"Level,omitempty"`
	Model              *string                                                     `json:"Model,omitempty"`
	ModificationDate   *string                                                     `json:"ModificationDate,omitempty"`
	Name               *string                                                     `json:"Name,omitempty"`
	Parent             *string                                                     `json:"Parent,omitempty"`
	RegistrationDate   *string                                                     `json:"RegistrationDate,omitempty"`
	RegistrationNumber *string                                                     `json:"RegistrationNumber,omitempty"`
	Type               *string                                                     `json:"Type,omitempty"`
	Value              *float64                                                    `json:"Value,omitempty"`
}

type GetSpacesIDProfessionalVehiclesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of professional Vehicles
	GetSpacesIDProfessionalVehicles200ApplicationJSONAnies []GetSpacesIDProfessionalVehicles200ApplicationJSON
}
