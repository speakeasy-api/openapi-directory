<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TrafficRuleDescriptor
{
    /**
     * 'Identifies the action of the MEC host data plane, when a packet matches the trafficFilter.'
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ActionEnum $action
     */
	
    public ActionEnum $action;
    
    /**
     * $dstInterface
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InterfaceDescriptor> $dstInterface
     */
	
    public ?array $dstInterface = null;
    
    /**
     * Definition of filter type: per FLOW or PACKET
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\FilterTypeEnum $filterType
     */
	
    public FilterTypeEnum $filterType;
    
    /**
     * Priority of this traffic rule. If traffic rule conflicts, the one with higher priority take precedence.
     * 
     * @var int $priority
     */
	
    public int $priority;
    
    /**
     * The filter used to identify specific flow/packets that need to be handled by the MEC host.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\TrafficFilter> $trafficFilter
     */
	
    public array $trafficFilter;
    
    /**
     * Identifies the traffic rule.
     * 
     * @var string $trafficRuleId
     */
	
    public string $trafficRuleId;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Shared\ActionEnum::DROP;
		$this->dstInterface = null;
		$this->filterType = \OpenAPI\OpenAPI\Models\Shared\FilterTypeEnum::FLOW;
		$this->priority = 0;
		$this->trafficFilter = [];
		$this->trafficRuleId = "";
	}
}
