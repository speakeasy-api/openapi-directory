// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CommandErrorCodeEnum - If the command failed, an error code explaining the failure. This is not set when the command is cancelled by the caller.
type CommandErrorCodeEnum string

const (
	CommandErrorCodeEnumCommandErrorCodeUnspecified CommandErrorCodeEnum = "COMMAND_ERROR_CODE_UNSPECIFIED"
	CommandErrorCodeEnumUnknown                     CommandErrorCodeEnum = "UNKNOWN"
	CommandErrorCodeEnumAPILevel                    CommandErrorCodeEnum = "API_LEVEL"
	CommandErrorCodeEnumManagementMode              CommandErrorCodeEnum = "MANAGEMENT_MODE"
	CommandErrorCodeEnumInvalidValue                CommandErrorCodeEnum = "INVALID_VALUE"
	CommandErrorCodeEnumUnsupported                 CommandErrorCodeEnum = "UNSUPPORTED"
)

func (e *CommandErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMMAND_ERROR_CODE_UNSPECIFIED":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "API_LEVEL":
		fallthrough
	case "MANAGEMENT_MODE":
		fallthrough
	case "INVALID_VALUE":
		fallthrough
	case "UNSUPPORTED":
		*e = CommandErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CommandErrorCodeEnum: %s", s)
	}
}

type CommandResetPasswordFlagsEnum string

const (
	CommandResetPasswordFlagsEnumResetPasswordFlagUnspecified CommandResetPasswordFlagsEnum = "RESET_PASSWORD_FLAG_UNSPECIFIED"
	CommandResetPasswordFlagsEnumRequireEntry                 CommandResetPasswordFlagsEnum = "REQUIRE_ENTRY"
	CommandResetPasswordFlagsEnumDoNotAskCredentialsOnBoot    CommandResetPasswordFlagsEnum = "DO_NOT_ASK_CREDENTIALS_ON_BOOT"
	CommandResetPasswordFlagsEnumLockNow                      CommandResetPasswordFlagsEnum = "LOCK_NOW"
)

func (e *CommandResetPasswordFlagsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RESET_PASSWORD_FLAG_UNSPECIFIED":
		fallthrough
	case "REQUIRE_ENTRY":
		fallthrough
	case "DO_NOT_ASK_CREDENTIALS_ON_BOOT":
		fallthrough
	case "LOCK_NOW":
		*e = CommandResetPasswordFlagsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CommandResetPasswordFlagsEnum: %s", s)
	}
}

// CommandTypeEnum - The type of the command.
type CommandTypeEnum string

const (
	CommandTypeEnumCommandTypeUnspecified CommandTypeEnum = "COMMAND_TYPE_UNSPECIFIED"
	CommandTypeEnumLock                   CommandTypeEnum = "LOCK"
	CommandTypeEnumResetPassword          CommandTypeEnum = "RESET_PASSWORD"
	CommandTypeEnumReboot                 CommandTypeEnum = "REBOOT"
	CommandTypeEnumRelinquishOwnership    CommandTypeEnum = "RELINQUISH_OWNERSHIP"
	CommandTypeEnumClearAppData           CommandTypeEnum = "CLEAR_APP_DATA"
)

func (e *CommandTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMMAND_TYPE_UNSPECIFIED":
		fallthrough
	case "LOCK":
		fallthrough
	case "RESET_PASSWORD":
		fallthrough
	case "REBOOT":
		fallthrough
	case "RELINQUISH_OWNERSHIP":
		fallthrough
	case "CLEAR_APP_DATA":
		*e = CommandTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CommandTypeEnum: %s", s)
	}
}

// Command - A command.
type Command struct {
	// Parameters associated with the CLEAR_APP_DATA command to clear the data of specified apps from the device.
	ClearAppsDataParams *ClearAppsDataParams `json:"clearAppsDataParams,omitempty"`
	// Status of the CLEAR_APP_DATA command to clear the data of specified apps from the device.
	ClearAppsDataStatus *ClearAppsDataStatus `json:"clearAppsDataStatus,omitempty"`
	// The timestamp at which the command was created. The timestamp is automatically generated by the server.
	CreateTime *string `json:"createTime,omitempty"`
	// The duration for which the command is valid. The command will expire if not executed by the device during this time. The default duration if unspecified is ten minutes. There is no maximum duration.
	Duration *string `json:"duration,omitempty"`
	// If the command failed, an error code explaining the failure. This is not set when the command is cancelled by the caller.
	ErrorCode *CommandErrorCodeEnum `json:"errorCode,omitempty"`
	// For commands of type RESET_PASSWORD, optionally specifies the new password.
	NewPassword *string `json:"newPassword,omitempty"`
	// For commands of type RESET_PASSWORD, optionally specifies flags.
	ResetPasswordFlags []CommandResetPasswordFlagsEnum `json:"resetPasswordFlags,omitempty"`
	// The type of the command.
	Type *CommandTypeEnum `json:"type,omitempty"`
	// The resource name of the user that owns the device in the form enterprises/{enterpriseId}/users/{userId}. This is automatically generated by the server based on the device the command is sent to.
	UserName *string `json:"userName,omitempty"`
}
