// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EarthObservationJobStatusEnum string

const (
	EarthObservationJobStatusEnumInitializing EarthObservationJobStatusEnum = "INITIALIZING"
	EarthObservationJobStatusEnumInProgress   EarthObservationJobStatusEnum = "IN_PROGRESS"
	EarthObservationJobStatusEnumStopping     EarthObservationJobStatusEnum = "STOPPING"
	EarthObservationJobStatusEnumCompleted    EarthObservationJobStatusEnum = "COMPLETED"
	EarthObservationJobStatusEnumStopped      EarthObservationJobStatusEnum = "STOPPED"
	EarthObservationJobStatusEnumFailed       EarthObservationJobStatusEnum = "FAILED"
	EarthObservationJobStatusEnumDeleting     EarthObservationJobStatusEnum = "DELETING"
	EarthObservationJobStatusEnumDeleted      EarthObservationJobStatusEnum = "DELETED"
)

func (e *EarthObservationJobStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INITIALIZING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "STOPPING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "STOPPED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = EarthObservationJobStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EarthObservationJobStatusEnum: %s", s)
	}
}
