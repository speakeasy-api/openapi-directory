"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogcollectionrole as shared_catalogcollectionrole
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogCollectionRoleAssignmentsRoles:
    
    editors: Optional[list[shared_catalogcollectionrole.CatalogCollectionRole]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('editors'), 'exclude': lambda f: f is None }})  
    owners: Optional[list[shared_catalogcollectionrole.CatalogCollectionRole]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owners'), 'exclude': lambda f: f is None }})  
    viewers: Optional[list[shared_catalogcollectionrole.CatalogCollectionRole]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('viewers'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogCollectionRoleAssignments:
    r"""List of role assignments for a catalog collection"""
    
    collection_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collection_id') }})  
    roles: CatalogCollectionRoleAssignmentsRoles = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roles') }})  
    