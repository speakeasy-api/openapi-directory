/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WindowsHostingDetail - Success
 */
public class WindowsHostingDetail {
    /**
     * Used webspace size in MB
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actual_size")
    public Integer actualSize;

    public WindowsHostingDetail withActualSize(Integer actualSize) {
        this.actualSize = actualSize;
        return this;
    }
    
    /**
     * The application pool for the hosting account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("application_pool")
    public ApplicationPool applicationPool;

    public WindowsHostingDetail withApplicationPool(ApplicationPool applicationPool) {
        this.applicationPool = applicationPool;
        return this;
    }
    
    /**
     * Domain name for the Windows hosting account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain_name")
    public String domainName;

    public WindowsHostingDetail withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    
    /**
     * Ftp username
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ftp_username")
    public String ftpUsername;

    public WindowsHostingDetail withFtpUsername(String ftpUsername) {
        this.ftpUsername = ftpUsername;
        return this;
    }
    
    /**
     * Windows hosting IP address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip")
    public String ip;

    public WindowsHostingDetail withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    /**
     * Type of the hosting IP address (dedicated or shared)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip_type")
    public WindowsIpTypeEnum ipType;

    public WindowsHostingDetail withIpType(WindowsIpTypeEnum ipType) {
        this.ipType = ipType;
        return this;
    }
    
    /**
     * Maximum webspace size in MB
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_size")
    public Integer maxSize;

    public WindowsHostingDetail withMaxSize(Integer maxSize) {
        this.maxSize = maxSize;
        return this;
    }
    
    /**
     * A list of mssql databases linked to the hosting account.&lt;br /&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mssql_database_names")
    public String[] mssqlDatabaseNames;

    public WindowsHostingDetail withMssqlDatabaseNames(String[] mssqlDatabaseNames) {
        this.mssqlDatabaseNames = mssqlDatabaseNames;
        return this;
    }
    
    /**
     * Id of Windows hosting service package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servicepack_id")
    public Integer servicepackId;

    public WindowsHostingDetail withServicepackId(Integer servicepackId) {
        this.servicepackId = servicepackId;
        return this;
    }
    
    /**
     * A list of websites on the hosting account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sites")
    public WindowsSite[] sites;

    public WindowsHostingDetail withSites(WindowsSite[] sites) {
        this.sites = sites;
        return this;
    }
    
    public WindowsHostingDetail(){}
}
