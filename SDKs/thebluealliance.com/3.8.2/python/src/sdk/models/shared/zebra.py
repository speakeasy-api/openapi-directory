"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import zebra_team as shared_zebra_team
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ZebraAlliances:
    
    blue: Optional[list[shared_zebra_team.ZebraTeam]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blue'), 'exclude': lambda f: f is None }})
    r"""Zebra data for teams on the blue alliance"""  
    red: Optional[list[shared_zebra_team.ZebraTeam]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('red'), 'exclude': lambda f: f is None }})
    r"""Zebra MotionWorks data for teams on the red alliance"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Zebra:
    r"""Successful response"""
    
    alliances: ZebraAlliances = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alliances') }})  
    key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key') }})
    r"""TBA match key with the format `yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER]`, where `yyyy` is the year, and `EVENT_CODE` is the event code of the event, `COMP_LEVEL` is (qm, ef, qf, sf, f), and `MATCH_NUMBER` is the match number in the competition level. A set number may be appended to the competition level if more than one match in required per set."""  
    times: list[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('times') }})
    r"""A list of relative timestamps for each data point. Each timestamp will correspond to the X and Y value at the same index in a team xs and ys arrays. `times`, all teams `xs` and all teams `ys` are guarenteed to be the same length."""  
    