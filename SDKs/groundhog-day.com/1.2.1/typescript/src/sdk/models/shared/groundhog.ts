/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Prediction } from "./prediction";
import { Expose, Type } from "class-transformer";

export enum GroundhogActiveEnum {
  Zero = "0",
  One = "1",
}

/**
 * An animal that makes an annual prediction on Groundhog Day.
 */
export class Groundhog extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active: GroundhogActiveEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  contact: string;

  @SpeakeasyMetadata()
  @Expose({ name: "coordinates" })
  coordinates: string;

  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  @SpeakeasyMetadata()
  @Expose({ name: "currentPrediction" })
  currentPrediction: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  image: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isGroundhog" })
  isGroundhog: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: Prediction })
  @Expose({ name: "predictions" })
  @Type(() => Prediction)
  predictions?: Prediction[];

  /**
   * All predictions, excluding nulls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predictionsCount" })
  predictionsCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shortname" })
  shortname: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
