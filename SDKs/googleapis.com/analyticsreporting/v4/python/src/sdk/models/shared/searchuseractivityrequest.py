"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import daterange as shared_daterange
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SearchUserActivityRequestActivityTypesEnum(str, Enum):
    ACTIVITY_TYPE_UNSPECIFIED = 'ACTIVITY_TYPE_UNSPECIFIED'
    PAGEVIEW = 'PAGEVIEW'
    SCREENVIEW = 'SCREENVIEW'
    GOAL = 'GOAL'
    ECOMMERCE = 'ECOMMERCE'
    EVENT = 'EVENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchUserActivityRequest:
    r"""The request to fetch User Report from Reporting API `userActivity:get` call."""
    
    activity_types: Optional[list[SearchUserActivityRequestActivityTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityTypes'), 'exclude': lambda f: f is None }})
    r"""Set of all activity types being requested. Only acvities matching these types will be returned in the response. If empty, all activies will be returned."""  
    date_range: Optional[shared_daterange.DateRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateRange'), 'exclude': lambda f: f is None }})
    r"""A contiguous set of days: startDate, startDate + 1 day, ..., endDate. The start and end dates are specified in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) date format `YYYY-MM-DD`."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageSize'), 'exclude': lambda f: f is None }})
    r"""Page size is for paging and specifies the maximum number of returned rows. Page size should be > 0. If the value is 0 or if the field isn't specified, the request returns the default of 1000 rows per page."""  
    page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageToken'), 'exclude': lambda f: f is None }})
    r"""A continuation token to get the next page of the results. Adding this to the request will return the rows after the pageToken. The pageToken should be the value returned in the nextPageToken parameter in the response to the [SearchUserActivityRequest](#SearchUserActivityRequest) request."""  
    user: Optional[shared_user.User] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})
    r"""Contains information to identify a particular user uniquely."""  
    view_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('viewId'), 'exclude': lambda f: f is None }})
    r"""Required. The Analytics [view ID](https://support.google.com/analytics/answer/1009618) from which to retrieve data. Every [SearchUserActivityRequest](#SearchUserActivityRequest) must contain the `viewId`."""  
    