// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DataSourceParameterTypeEnum - Parameter type.
type DataSourceParameterTypeEnum string

const (
	DataSourceParameterTypeEnumTypeUnspecified DataSourceParameterTypeEnum = "TYPE_UNSPECIFIED"
	DataSourceParameterTypeEnumString          DataSourceParameterTypeEnum = "STRING"
	DataSourceParameterTypeEnumInteger         DataSourceParameterTypeEnum = "INTEGER"
	DataSourceParameterTypeEnumDouble          DataSourceParameterTypeEnum = "DOUBLE"
	DataSourceParameterTypeEnumBoolean         DataSourceParameterTypeEnum = "BOOLEAN"
	DataSourceParameterTypeEnumRecord          DataSourceParameterTypeEnum = "RECORD"
	DataSourceParameterTypeEnumPlusPage        DataSourceParameterTypeEnum = "PLUS_PAGE"
)

func (e *DataSourceParameterTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "STRING":
		fallthrough
	case "INTEGER":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "BOOLEAN":
		fallthrough
	case "RECORD":
		fallthrough
	case "PLUS_PAGE":
		*e = DataSourceParameterTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataSourceParameterTypeEnum: %s", s)
	}
}

// DataSourceParameter - A parameter used to define custom fields in a data source definition.
type DataSourceParameter struct {
	// All possible values for the parameter.
	AllowedValues []string `json:"allowedValues,omitempty"`
	// If true, it should not be used in new transfers, and it should not be visible to users.
	Deprecated *bool `json:"deprecated,omitempty"`
	// Parameter description.
	Description *string `json:"description,omitempty"`
	// Parameter display name in the user interface.
	DisplayName *string `json:"displayName,omitempty"`
	// Deprecated. This field has no effect.
	Fields []DataSourceParameter `json:"fields,omitempty"`
	// Cannot be changed after initial creation.
	Immutable *bool `json:"immutable,omitempty"`
	// For integer and double values specifies maximum allowed value.
	MaxValue *float64 `json:"maxValue,omitempty"`
	// For integer and double values specifies minimum allowed value.
	MinValue *float64 `json:"minValue,omitempty"`
	// Parameter identifier.
	ParamID *string `json:"paramId,omitempty"`
	// Deprecated. This field has no effect.
	Recurse *bool `json:"recurse,omitempty"`
	// Deprecated. This field has no effect.
	Repeated *bool `json:"repeated,omitempty"`
	// Is parameter required.
	Required *bool `json:"required,omitempty"`
	// Parameter type.
	Type *DataSourceParameterTypeEnum `json:"type,omitempty"`
	// Description of the requirements for this field, in case the user input does not fulfill the regex pattern or min/max values.
	ValidationDescription *string `json:"validationDescription,omitempty"`
	// URL to a help document to further explain the naming requirements.
	ValidationHelpURL *string `json:"validationHelpUrl,omitempty"`
	// Regular expression which can be used for parameter validation.
	ValidationRegex *string `json:"validationRegex,omitempty"`
}
