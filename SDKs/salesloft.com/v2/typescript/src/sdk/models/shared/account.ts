/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EmbeddedAccountCounts } from "./embeddedaccountcounts";
import { EmbeddedResource } from "./embeddedresource";

/**
 * Success
 */
export class Account extends SpeakeasyBase {
  @SpeakeasyMetadata()
  accountTier?: EmbeddedResource;

  /**
   * Datetime of when the Account was archived, if archived
   */
  @SpeakeasyMetadata()
  archivedAt?: Date;

  /**
   * City
   */
  @SpeakeasyMetadata()
  city?: string;

  @SpeakeasyMetadata()
  companyStage?: EmbeddedResource;

  /**
   * Type of the Account's company
   */
  @SpeakeasyMetadata()
  companyType?: string;

  /**
   * Conversational name of the Account
   */
  @SpeakeasyMetadata()
  conversationalName?: string;

  /**
   * Country
   */
  @SpeakeasyMetadata()
  country?: string;

  @SpeakeasyMetadata()
  counts?: EmbeddedAccountCounts;

  /**
   * Datetime of when the Account was created
   */
  @SpeakeasyMetadata()
  createdAt?: Date;

  @SpeakeasyMetadata()
  creator?: EmbeddedResource;

  /**
   * CRM ID
   */
  @SpeakeasyMetadata()
  crmId?: string;

  /**
   * CRM object type
   */
  @SpeakeasyMetadata()
  crmObjectType?: string;

  /**
   * CRM url
   */
  @SpeakeasyMetadata()
  crmUrl?: string;

  /**
   * Custom fields are defined by the user's team. Only fields with values are presented in the API.
   */
  @SpeakeasyMetadata()
  customFields?: Record<string, any>;

  /**
   * Description
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * Whether this company has opted out of communications. Do not contact someone at this company when this is set to true
   */
  @SpeakeasyMetadata()
  doNotContact?: boolean;

  /**
   * Website domain, not a fully qualified URI
   */
  @SpeakeasyMetadata()
  domain?: string;

  /**
   * Date or year of founding
   */
  @SpeakeasyMetadata()
  founded?: string;

  /**
   * ID of Account
   */
  @SpeakeasyMetadata()
  id?: number;

  /**
   * Industry
   */
  @SpeakeasyMetadata()
  industry?: string;

  /**
   * Datetime this Account was last contacted
   */
  @SpeakeasyMetadata()
  lastContactedAt?: Date;

  @SpeakeasyMetadata()
  lastContactedBy?: EmbeddedResource;

  @SpeakeasyMetadata()
  lastContactedPerson?: EmbeddedResource;

  /**
   * The type of the last touch to this Account. Can be call, email, other
   */
  @SpeakeasyMetadata()
  lastContactedType?: string;

  /**
   * Full LinkedIn url
   */
  @SpeakeasyMetadata()
  linkedinUrl?: string;

  /**
   * Time locale
   */
  @SpeakeasyMetadata()
  locale?: string;

  /**
   * Account Full Name
   */
  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  owner?: EmbeddedResource;

  /**
   * Mapped owner field from the CRM
   */
  @SpeakeasyMetadata()
  ownerCrmId?: string;

  /**
   * Phone number without formatting
   */
  @SpeakeasyMetadata()
  phone?: string;

  /**
   * Postal code
   */
  @SpeakeasyMetadata()
  postalCode?: string;

  /**
   * Estimated revenue range
   */
  @SpeakeasyMetadata()
  revenueRange?: string;

  /**
   * Estimated number of people in employment
   */
  @SpeakeasyMetadata()
  size?: string;

  /**
   * State
   */
  @SpeakeasyMetadata()
  state?: string;

  /**
   * Street name and number
   */
  @SpeakeasyMetadata()
  street?: string;

  /**
   * All tags applied to this Account
   */
  @SpeakeasyMetadata()
  tags?: string[];

  /**
   * Twitter handle, with @
   */
  @SpeakeasyMetadata()
  twitterHandle?: string;

  /**
   * Datetime of when the Account was last updated
   */
  @SpeakeasyMetadata()
  updatedAt?: Date;

  /**
   * Filters by accounts matching all given user relationship fields, _is_null or _unmapped can be passed to filter accounts with null or unmapped user relationship values
   */
  @SpeakeasyMetadata()
  userRelationships?: Record<string, any>;

  /**
   * Website
   */
  @SpeakeasyMetadata()
  website?: string;
}
