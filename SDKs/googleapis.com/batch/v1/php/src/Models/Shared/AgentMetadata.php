<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AgentMetadata - VM Agent Metadata.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AgentMetadata
{
    /**
     * When the VM agent started. Use agent_startup_time instead.
     * 
     * @var ?string $creationTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creationTime = null;
    
    /**
     * Full name of the entity that created this vm. For MIG, this path is: projects/{project}/regions/{region}/InstanceGroupManagers/{igm} The value is retrieved from the vm metadata key of "created-by".
     * 
     * @var ?string $creator
     */
	#[\JMS\Serializer\Annotation\SerializedName('creator')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creator = null;
    
    /**
     * image version for the VM that this agent is installed on.
     * 
     * @var ?string $imageVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('imageVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $imageVersion = null;
    
    /**
     * GCP instance name (go/instance-name).
     * 
     * @var ?string $instance
     */
	#[\JMS\Serializer\Annotation\SerializedName('instance')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instance = null;
    
    /**
     * GCP instance ID (go/instance-id).
     * 
     * @var ?string $instanceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceId = null;
    
    /**
     * If the GCP instance has received preemption notice.
     * 
     * @var ?bool $instancePreemptionNoticeReceived
     */
	#[\JMS\Serializer\Annotation\SerializedName('instancePreemptionNoticeReceived')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $instancePreemptionNoticeReceived = null;
    
    /**
     * parsed contents of /etc/os-release
     * 
     * @var ?array<string, string> $osRelease
     */
	#[\JMS\Serializer\Annotation\SerializedName('osRelease')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $osRelease = null;
    
    /**
     * agent binary version running on VM
     * 
     * @var ?string $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $version = null;
    
    /**
     * Agent zone.
     * 
     * @var ?string $zone
     */
	#[\JMS\Serializer\Annotation\SerializedName('zone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $zone = null;
    
	public function __construct()
	{
		$this->creationTime = null;
		$this->creator = null;
		$this->imageVersion = null;
		$this->instance = null;
		$this->instanceId = null;
		$this->instancePreemptionNoticeReceived = null;
		$this->osRelease = null;
		$this->version = null;
		$this->zone = null;
	}
}
