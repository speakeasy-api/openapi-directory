/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



public class DestinyComponentsRecordsDestinyRecordComponent {
    /**
     * If available, this is the number of times this record has been completed. For example, the number of times a seal title has been gilded.
     */
    
    public Integer completedCount;

    public DestinyComponentsRecordsDestinyRecordComponent withCompletedCount(Integer completedCount) {
        this.completedCount = completedCount;
        return this;
    }
    
    
    public DestinyQuestsDestinyObjectiveProgress[] intervalObjectives;

    public DestinyComponentsRecordsDestinyRecordComponent withIntervalObjectives(DestinyQuestsDestinyObjectiveProgress[] intervalObjectives) {
        this.intervalObjectives = intervalObjectives;
        return this;
    }
    
    
    public Integer intervalsRedeemedCount;

    public DestinyComponentsRecordsDestinyRecordComponent withIntervalsRedeemedCount(Integer intervalsRedeemedCount) {
        this.intervalsRedeemedCount = intervalsRedeemedCount;
        return this;
    }
    
    
    public DestinyQuestsDestinyObjectiveProgress[] objectives;

    public DestinyComponentsRecordsDestinyRecordComponent withObjectives(DestinyQuestsDestinyObjectiveProgress[] objectives) {
        this.objectives = objectives;
        return this;
    }
    
    /**
     * If available, a list that describes which reward rewards should be shown (true) or hidden (false). This property is for regular record rewards, and not for interval objective rewards.
     */
    
    public Boolean[] rewardVisibilty;

    public DestinyComponentsRecordsDestinyRecordComponent withRewardVisibilty(Boolean[] rewardVisibilty) {
        this.rewardVisibilty = rewardVisibilty;
        return this;
    }
    
    
    public Integer state;

    public DestinyComponentsRecordsDestinyRecordComponent withState(Integer state) {
        this.state = state;
        return this;
    }
    
    public DestinyComponentsRecordsDestinyRecordComponent(){}
}
