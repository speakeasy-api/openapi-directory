<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DescribeIpamScopesResultIpamScopes - <p>In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/how-it-works-ipam.html">How IPAM works</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DescribeIpamScopesResultIpamScopes
{
	
    public ?string $description = null;
    
	
    public ?string $ipamArn = null;
    
	
    public ?string $ipamRegion = null;
    
	
    public ?string $ipamScopeArn = null;
    
	
    public ?string $ipamScopeId = null;
    
	
    public ?DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum $ipamScopeType = null;
    
	
    public ?bool $isDefault = null;
    
	
    public ?string $ownerId = null;
    
	
    public ?int $poolCount = null;
    
	
    public ?DescribeIpamScopesResultIpamScopesStateEnum $state = null;
    
    /**
     * $tags
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DescribeIpamScopesResultIpamScopesTags> $tags
     */
	
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->ipamArn = null;
		$this->ipamRegion = null;
		$this->ipamScopeArn = null;
		$this->ipamScopeId = null;
		$this->ipamScopeType = null;
		$this->isDefault = null;
		$this->ownerId = null;
		$this->poolCount = null;
		$this->state = null;
		$this->tags = null;
	}
}
