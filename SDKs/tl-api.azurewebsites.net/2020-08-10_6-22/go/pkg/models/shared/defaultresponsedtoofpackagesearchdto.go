// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type DefaultResponseDTOOfPackageSearchDTOResultType string

const (
	DefaultResponseDTOOfPackageSearchDTOResultTypePackageSearchDTO DefaultResponseDTOOfPackageSearchDTOResultType = "PackageSearchDTO"
)

type DefaultResponseDTOOfPackageSearchDTOResult struct {
	PackageSearchDTO *PackageSearchDTO

	Type DefaultResponseDTOOfPackageSearchDTOResultType
}

func CreateDefaultResponseDTOOfPackageSearchDTOResultPackageSearchDTO(packageSearchDTO PackageSearchDTO) DefaultResponseDTOOfPackageSearchDTOResult {
	typ := DefaultResponseDTOOfPackageSearchDTOResultTypePackageSearchDTO

	return DefaultResponseDTOOfPackageSearchDTOResult{
		PackageSearchDTO: &packageSearchDTO,
		Type:             typ,
	}
}

func (u *DefaultResponseDTOOfPackageSearchDTOResult) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	packageSearchDTO := new(PackageSearchDTO)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&packageSearchDTO); err == nil {
		u.PackageSearchDTO = packageSearchDTO
		u.Type = DefaultResponseDTOOfPackageSearchDTOResultTypePackageSearchDTO
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u DefaultResponseDTOOfPackageSearchDTOResult) MarshalJSON() ([]byte, error) {
	if u.PackageSearchDTO != nil {
		return json.Marshal(u.PackageSearchDTO)
	}

	return nil, nil
}

// DefaultResponseDTOOfPackageSearchDTO - The DefaultResponseDTO Class.
// Contains fields of DefaultResponse DTO in application.
type DefaultResponseDTOOfPackageSearchDTO struct {
	IsError           *bool                                       `json:"isError,omitempty"`
	Message           *string                                     `json:"message,omitempty"`
	ResponseException interface{}                                 `json:"responseException,omitempty"`
	Result            *DefaultResponseDTOOfPackageSearchDTOResult `json:"result,omitempty"`
}
