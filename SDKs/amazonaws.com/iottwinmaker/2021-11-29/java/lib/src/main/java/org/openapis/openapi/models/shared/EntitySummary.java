/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * EntitySummary - An object that contains information about an entity.
 */
public class EntitySummary {
    @JsonProperty("arn")
    public String arn;
    public EntitySummary withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationDateTime")
    public OffsetDateTime creationDateTime;
    public EntitySummary withCreationDateTime(OffsetDateTime creationDateTime) {
        this.creationDateTime = creationDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public EntitySummary withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonProperty("entityId")
    public String entityId;
    public EntitySummary withEntityId(String entityId) {
        this.entityId = entityId;
        return this;
    }
    
    @JsonProperty("entityName")
    public String entityName;
    public EntitySummary withEntityName(String entityName) {
        this.entityName = entityName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasChildEntities")
    public Boolean hasChildEntities;
    public EntitySummary withHasChildEntities(Boolean hasChildEntities) {
        this.hasChildEntities = hasChildEntities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentEntityId")
    public String parentEntityId;
    public EntitySummary withParentEntityId(String parentEntityId) {
        this.parentEntityId = parentEntityId;
        return this;
    }
    
    @JsonProperty("status")
    public Status status;
    public EntitySummary withStatus(Status status) {
        this.status = status;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updateDateTime")
    public OffsetDateTime updateDateTime;
    public EntitySummary withUpdateDateTime(OffsetDateTime updateDateTime) {
        this.updateDateTime = updateDateTime;
        return this;
    }
    
}
