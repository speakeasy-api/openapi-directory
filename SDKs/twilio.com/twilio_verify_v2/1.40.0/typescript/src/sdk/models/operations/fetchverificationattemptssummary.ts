/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const FetchVerificationAttemptsSummaryServerList = [
  "https://verify.twilio.com",
] as const;

export class FetchVerificationAttemptsSummarySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class FetchVerificationAttemptsSummaryRequest extends SpeakeasyBase {
  /**
   * Filter Verification Attempts considered on the summary aggregation by communication channel. Valid values are `SMS` and `CALL`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Channel",
  })
  channel?: shared.VerificationAttemptsSummaryEnumChannelsEnum;

  /**
   * Filter used to consider only Verification Attempts sent to the specified destination country on the summary aggregation.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Country",
  })
  country?: string;

  /**
   * Datetime filter used to consider only Verification Attempts created after this datetime on the summary aggregation. Given as GMT in RFC 2822 format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreatedAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedAfter?: Date;

  /**
   * Datetime filter used to consider only Verification Attempts created before this datetime on the summary aggregation. Given as GMT in RFC 2822 format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreatedBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedBefore?: Date;

  /**
   * Filter the Verification Attempts considered on the summary aggregation by Destination prefix. It is the prefix of a phone number in E.164 format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DestinationPrefix",
  })
  destinationPrefix?: string;

  /**
   * Filter used to consider only Verification Attempts of the given verify service on the summary aggregation.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VerifyServiceSid",
  })
  verifyServiceSid?: string;
}

export class FetchVerificationAttemptsSummaryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  verifyV2VerificationAttemptsSummary?: shared.VerifyV2VerificationAttemptsSummary;
}
