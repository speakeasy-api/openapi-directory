/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret.
 */
export enum ActionsCreateOrUpdateOrgSecretRequestBodyVisibilityEnum {
  All = "all",
  Private = "private",
  Selected = "selected",
}

export class ActionsCreateOrUpdateOrgSecretRequestBody extends SpeakeasyBase {
  /**
   * Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/enterprise-server@3.7/rest/reference/actions#get-an-organization-public-key) endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encrypted_value" })
  encryptedValue?: string;

  /**
   * ID of the key you used to encrypt the secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key_id" })
  keyId?: string;

  /**
   * An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/enterprise-server@3.7/rest/reference/actions#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/enterprise-server@3.7/rest/reference/actions#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-server@3.7/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selected_repository_ids" })
  selectedRepositoryIds?: number[];

  /**
   * Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility: ActionsCreateOrUpdateOrgSecretRequestBodyVisibilityEnum;
}

export class ActionsCreateOrUpdateOrgSecretRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ActionsCreateOrUpdateOrgSecretRequestBody;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * The name of the secret.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=secret_name",
  })
  secretName: string;
}

export class ActionsCreateOrUpdateOrgSecretResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response when creating a secret
   */
  @SpeakeasyMetadata()
  emptyObject?: Record<string, any>;
}
