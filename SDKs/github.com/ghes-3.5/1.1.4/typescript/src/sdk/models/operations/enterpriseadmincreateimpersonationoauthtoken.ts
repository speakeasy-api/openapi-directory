/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class EnterpriseAdminCreateImpersonationOAuthTokenRequestBody extends SpeakeasyBase {
  /**
   * A list of [scopes](https://docs.github.com/enterprise-server@3.5/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes: string[];
}

export class EnterpriseAdminCreateImpersonationOAuthTokenRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: EnterpriseAdminCreateImpersonationOAuthTokenRequestBody;

  /**
   * The handle for the GitHub user account.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

export class EnterpriseAdminCreateImpersonationOAuthTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response when getting an existing impersonation OAuth token
   */
  @SpeakeasyMetadata()
  authorization?: shared.Authorization;
}
