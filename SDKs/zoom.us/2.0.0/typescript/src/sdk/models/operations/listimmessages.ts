/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ListimmessagesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ListimmessagesRequest extends SpeakeasyBase {
  /**
   * IM Channel's ID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channel",
  })
  channel?: string;

  /**
   * Chat user's ID or email address.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=chat_user",
  })
  chatUser?: string;

  /**
   * IM message's query date time, format as yyyy-MM-dd.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=date" })
  date?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * The user ID or email address.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class Listimmessages200ApplicationXMLMessages extends SpeakeasyBase {
  /**
   * IM message send time.
   */
  @SpeakeasyMetadata()
  dateTime?: Date;

  /**
   * IM message UUID.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * IM message content.
   */
  @SpeakeasyMetadata()
  message?: string;

  /**
   * IM message sender.
   */
  @SpeakeasyMetadata()
  sender?: string;

  /**
   * IM message send timestamp.
   */
  @SpeakeasyMetadata()
  timstamp?: number;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * User's IM messages returned.
 */
export class Listimmessages200ApplicationXML extends SpeakeasyBase {
  /**
   * Query date time, format as yyyy-mm-dd.
   */
  @SpeakeasyMetadata()
  date?: Date;

  /**
   * Array of im messages.
   */
  @SpeakeasyMetadata({ elemType: Listimmessages200ApplicationXMLMessages })
  messages?: Listimmessages200ApplicationXMLMessages[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;
}

export class Listimmessages200ApplicationJSONMessages extends SpeakeasyBase {
  /**
   * IM message send time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  /**
   * IM message UUID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * IM message content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * IM message sender.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sender" })
  sender?: string;

  /**
   * IM message send timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timstamp" })
  timstamp?: number;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * User's IM messages returned.
 */
export class Listimmessages200ApplicationJSON extends SpeakeasyBase {
  /**
   * Query date time, format as yyyy-mm-dd.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  /**
   * Array of im messages.
   */
  @SpeakeasyMetadata({ elemType: Listimmessages200ApplicationJSONMessages })
  @Expose({ name: "messages" })
  @Type(() => Listimmessages200ApplicationJSONMessages)
  messages?: Listimmessages200ApplicationJSONMessages[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;
}

export class ListimmessagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * User's IM messages returned.
   */
  @SpeakeasyMetadata()
  listimmessages200ApplicationJSONObject?: Listimmessages200ApplicationJSON;
}
