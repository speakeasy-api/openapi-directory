/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderreturnsPartialRefund } from "./orderreturnspartialrefund";
import { Expose, Type } from "class-transformer";

export class OrderreturnsRefundOperation extends SpeakeasyBase {
  /**
   * If true, the item will be fully refunded. Allowed only when payment_type is FOP. Merchant can choose this refund option to indicate the full remaining amount of corresponding object to be refunded to the customer through FOP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullRefund" })
  fullRefund?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "partialRefund" })
  @Type(() => OrderreturnsPartialRefund)
  partialRefund?: OrderreturnsPartialRefund;

  /**
   * The payment way of issuing refund. Default value is ORIGINAL_FOP if not set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentType" })
  paymentType?: string;

  /**
   * The explanation of the reason.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reasonText" })
  reasonText?: string;

  /**
   * Code of the refund reason.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnRefundReason" })
  returnRefundReason?: string;
}
