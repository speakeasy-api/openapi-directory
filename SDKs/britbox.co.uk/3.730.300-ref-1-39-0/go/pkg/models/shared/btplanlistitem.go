// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BtPlanListItemIntervalEnum - The type of billing period used.
type BtPlanListItemIntervalEnum string

const (
	BtPlanListItemIntervalEnumDay   BtPlanListItemIntervalEnum = "day"
	BtPlanListItemIntervalEnumWeek  BtPlanListItemIntervalEnum = "week"
	BtPlanListItemIntervalEnumMonth BtPlanListItemIntervalEnum = "month"
	BtPlanListItemIntervalEnumYear  BtPlanListItemIntervalEnum = "year"
	BtPlanListItemIntervalEnumNone  BtPlanListItemIntervalEnum = "none"
)

func (e BtPlanListItemIntervalEnum) ToPointer() *BtPlanListItemIntervalEnum {
	return &e
}

func (e *BtPlanListItemIntervalEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "day":
		fallthrough
	case "week":
		fallthrough
	case "month":
		fallthrough
	case "year":
		fallthrough
	case "none":
		*e = BtPlanListItemIntervalEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BtPlanListItemIntervalEnum: %v", v)
	}
}

// BtPlanListItem - Available plan for current user.
type BtPlanListItem struct {
	// The price of a plan. If a free plan then undefined.
	Amount *float32 `json:"amount,omitempty"`
	// The textual description.
	CtaText string `json:"ctaText"`
	// The currency a plan is offered in.
	Currency string `json:"currency"`
	// The textual description.
	Description          string  `json:"description"`
	Ees07PlanDescription *string `json:"ees07PlanDescription,omitempty"`
	Ees07PlanTitle       *string `json:"ees07PlanTitle,omitempty"`
	Ees07Title           *string `json:"ees07Title,omitempty"`
	// The textual description.
	HeaderText string `json:"headerText"`
	// The textual description.
	HeroText string `json:"heroText"`
	// The identifier of a plan.
	ID string `json:"id"`
	// The type of billing period used.
	Interval *BtPlanListItemIntervalEnum `json:"interval,omitempty"`
	// Given the `interval` this is how frequently it will run. e.g. every 2 weeks.
	IntervalCount *int `json:"intervalCount,omitempty"`
	// The textual description.
	LongText string `json:"longText"`
	// The title of a plan.
	Nickname     string  `json:"nickname"`
	NoThanksText *string `json:"noThanksText,omitempty"`
	// The product of a plan.
	Product                  string  `json:"product"`
	SwitchingText            *string `json:"switchingText,omitempty"`
	TermsAndConditionsItunes *string `json:"termsAndConditionsItunes,omitempty"`
	TermsAndConditionsStripe *string `json:"termsAndConditionsStripe,omitempty"`
	// How many days a trial period runs for a plan. Only valid if `hasTrialPeriod` is true.
	TrialPeriodDays int `json:"trialPeriodDays"`
}
