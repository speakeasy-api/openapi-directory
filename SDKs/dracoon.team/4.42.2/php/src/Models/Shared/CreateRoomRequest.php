<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateRoomRequest - Request model for creating a room
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateRoomRequest
{
    /**
     * List of group ids
     * 
     * 
     * A room requires at least one admin (user or group)
     * 
     * @var ?array<int> $adminGroupIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('adminGroupIds')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $adminGroupIds = null;
    
    /**
     * List of user ids
     * 
     * 
     * A room requires at least one admin (user or group)
     * 
     * @var ?array<int> $adminIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('adminIds')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $adminIds = null;
    
    /**
     * Classification ID:
     * 
     * 
     * * `1` - public
     * 
     * * `2` - internal
     * 
     * * `3` - confidential
     * 
     * * `4` - strictly confidential
     * 
     * 
     * 
     * Provided (or default) classification is taken from room
     * 
     * when file gets uploaded without any classification.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateRoomRequestClassificationEnum $classification
     */
	#[\JMS\Serializer\Annotation\SerializedName('classification')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateRoomRequestClassificationEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateRoomRequestClassificationEnum $classification = null;
    
    /**
     * Is activities log active (for rooms only)
     * 
     * @var ?bool $hasActivitiesLog
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasActivitiesLog')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasActivitiesLog = null;
    
    /**
     * &#128679; Deprecated since v4.10.0
     * 
     * 
     * Is recycle bin active (for rooms only)
     * 
     * Recycle bin is always on (disabling is not possible).
     * 
     * @var ?bool $hasRecycleBin
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasRecycleBin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasRecycleBin = null;
    
    /**
     * Inherit permissions from parent room
     * 
     * 
     * (default: `false` if `parentId` is `0`; otherwise: `true`)
     * 
     * @var ?bool $inheritPermissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('inheritPermissions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $inheritPermissions = null;
    
    /**
     * Name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Behaviour when new users are added to the group:
     * 
     * 
     * * `autoallow`
     * 
     * * `pending`
     * 
     * 
     * 
     * Only relevant if `adminGroupIds` has items.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateRoomRequestNewGroupMemberAcceptanceEnum $newGroupMemberAcceptance
     */
	#[\JMS\Serializer\Annotation\SerializedName('newGroupMemberAcceptance')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateRoomRequestNewGroupMemberAcceptanceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateRoomRequestNewGroupMemberAcceptanceEnum $newGroupMemberAcceptance = null;
    
    /**
     * User notes
     * 
     * 
     * Use empty string to remove.
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * Parent room ID or `null` (not 0) to create a top level room
     * 
     * @var ?int $parentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $parentId = null;
    
    /**
     * Quota in byte
     * 
     * @var ?int $quota
     */
	#[\JMS\Serializer\Annotation\SerializedName('quota')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $quota = null;
    
    /**
     * Retention period for deleted nodes in days
     * 
     * @var ?int $recycleBinRetentionPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('recycleBinRetentionPeriod')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $recycleBinRetentionPeriod = null;
    
    /**
     * &#128640; Since v4.22.0
     * 
     * 
     * Time the node was created on external file system
     * 
     * (default: current server datetime in UTC format)
     * 
     * @var ?\DateTime $timestampCreation
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestampCreation')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $timestampCreation = null;
    
    /**
     * &#128640; Since v4.22.0
     * 
     * 
     * Time the content of a node was last modified on external file system
     * 
     * (default: current server datetime in UTC format)
     * 
     * @var ?\DateTime $timestampModification
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestampModification')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $timestampModification = null;
    
	public function __construct()
	{
		$this->adminGroupIds = null;
		$this->adminIds = null;
		$this->classification = null;
		$this->hasActivitiesLog = null;
		$this->hasRecycleBin = null;
		$this->inheritPermissions = null;
		$this->name = "";
		$this->newGroupMemberAcceptance = null;
		$this->notes = null;
		$this->parentId = null;
		$this->quota = null;
		$this->recycleBinRetentionPeriod = null;
		$this->timestampCreation = null;
		$this->timestampModification = null;
	}
}
