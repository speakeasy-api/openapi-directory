/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateWebhookRequest - Request model for creating a webhook
 */
public class CreateWebhookRequest {
    /**
     * List of names of event types
     */
    @JsonProperty("eventTypeNames")
    public String[] eventTypeNames;
    public CreateWebhookRequest withEventTypeNames(String[] eventTypeNames) {
        this.eventTypeNames = eventTypeNames;
        return this;
    }
    
    /**
     * Is enabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEnabled")
    public Boolean isEnabled;
    public CreateWebhookRequest withIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }
    
    /**
     * Name
     */
    @JsonProperty("name")
    public String name;
    public CreateWebhookRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Secret; used for event message signatures
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;
    public CreateWebhookRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * If set to true, an example event is being created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerExampleEvent")
    public Boolean triggerExampleEvent;
    public CreateWebhookRequest withTriggerExampleEvent(Boolean triggerExampleEvent) {
        this.triggerExampleEvent = triggerExampleEvent;
        return this;
    }
    
    /**
     * URL (must begin with the `HTTPS` scheme)
     */
    @JsonProperty("url")
    public String url;
    public CreateWebhookRequest withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
