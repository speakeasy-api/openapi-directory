/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class CreateKeyResponse {
    /**
     * CloudHsmClusterInvalidConfigurationException
     */
    
    public Object cloudHsmClusterInvalidConfigurationException;
    public CreateKeyResponse withCloudHsmClusterInvalidConfigurationException(Object cloudHsmClusterInvalidConfigurationException) {
        this.cloudHsmClusterInvalidConfigurationException = cloudHsmClusterInvalidConfigurationException;
        return this;
    }
    
    
    public String contentType;
    public CreateKeyResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateKeyResponse createKeyResponse;
    public CreateKeyResponse withCreateKeyResponse(org.openapis.openapi.models.shared.CreateKeyResponse createKeyResponse) {
        this.createKeyResponse = createKeyResponse;
        return this;
    }
    
    /**
     * CustomKeyStoreInvalidStateException
     */
    
    public Object customKeyStoreInvalidStateException;
    public CreateKeyResponse withCustomKeyStoreInvalidStateException(Object customKeyStoreInvalidStateException) {
        this.customKeyStoreInvalidStateException = customKeyStoreInvalidStateException;
        return this;
    }
    
    /**
     * CustomKeyStoreNotFoundException
     */
    
    public Object customKeyStoreNotFoundException;
    public CreateKeyResponse withCustomKeyStoreNotFoundException(Object customKeyStoreNotFoundException) {
        this.customKeyStoreNotFoundException = customKeyStoreNotFoundException;
        return this;
    }
    
    /**
     * DependencyTimeoutException
     */
    
    public Object dependencyTimeoutException;
    public CreateKeyResponse withDependencyTimeoutException(Object dependencyTimeoutException) {
        this.dependencyTimeoutException = dependencyTimeoutException;
        return this;
    }
    
    /**
     * InvalidArnException
     */
    
    public Object invalidArnException;
    public CreateKeyResponse withInvalidArnException(Object invalidArnException) {
        this.invalidArnException = invalidArnException;
        return this;
    }
    
    /**
     * KMSInternalException
     */
    
    public Object kmsInternalException;
    public CreateKeyResponse withKMSInternalException(Object kmsInternalException) {
        this.kmsInternalException = kmsInternalException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;
    public CreateKeyResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * MalformedPolicyDocumentException
     */
    
    public Object malformedPolicyDocumentException;
    public CreateKeyResponse withMalformedPolicyDocumentException(Object malformedPolicyDocumentException) {
        this.malformedPolicyDocumentException = malformedPolicyDocumentException;
        return this;
    }
    
    
    public Integer statusCode;
    public CreateKeyResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public CreateKeyResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TagException
     */
    
    public Object tagException;
    public CreateKeyResponse withTagException(Object tagException) {
        this.tagException = tagException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;
    public CreateKeyResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    /**
     * XksKeyAlreadyInUseException
     */
    
    public Object xksKeyAlreadyInUseException;
    public CreateKeyResponse withXksKeyAlreadyInUseException(Object xksKeyAlreadyInUseException) {
        this.xksKeyAlreadyInUseException = xksKeyAlreadyInUseException;
        return this;
    }
    
    /**
     * XksKeyInvalidConfigurationException
     */
    
    public Object xksKeyInvalidConfigurationException;
    public CreateKeyResponse withXksKeyInvalidConfigurationException(Object xksKeyInvalidConfigurationException) {
        this.xksKeyInvalidConfigurationException = xksKeyInvalidConfigurationException;
        return this;
    }
    
    /**
     * XksKeyNotFoundException
     */
    
    public Object xksKeyNotFoundException;
    public CreateKeyResponse withXksKeyNotFoundException(Object xksKeyNotFoundException) {
        this.xksKeyNotFoundException = xksKeyNotFoundException;
        return this;
    }
    
}
