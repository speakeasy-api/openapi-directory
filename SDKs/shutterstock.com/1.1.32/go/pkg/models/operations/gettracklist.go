// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetTrackListSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// GetTrackListViewEnum - Amount of detail to render in the response
type GetTrackListViewEnum string

const (
	GetTrackListViewEnumMinimal GetTrackListViewEnum = "minimal"
	GetTrackListViewEnumFull    GetTrackListViewEnum = "full"
)

func (e *GetTrackListViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "minimal":
		fallthrough
	case "full":
		*e = GetTrackListViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrackListViewEnum: %s", s)
	}
}

type GetTrackListRequest struct {
	// One or more audio IDs
	ID []string `queryParam:"style=form,explode=true,name=id"`
	// The ID of the search that is related to this request
	SearchID *string `queryParam:"style=form,explode=true,name=search_id"`
	// Amount of detail to render in the response
	View *GetTrackListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type GetTrackListResponse struct {
	// OK
	AudioDataList *shared.AudioDataList
	ContentType   string
	StatusCode    int
	RawResponse   *http.Response
}
