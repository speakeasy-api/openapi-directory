// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComplianceSeverityEnum string

const (
	ComplianceSeverityEnumCritical      ComplianceSeverityEnum = "CRITICAL"
	ComplianceSeverityEnumHigh          ComplianceSeverityEnum = "HIGH"
	ComplianceSeverityEnumMedium        ComplianceSeverityEnum = "MEDIUM"
	ComplianceSeverityEnumLow           ComplianceSeverityEnum = "LOW"
	ComplianceSeverityEnumInformational ComplianceSeverityEnum = "INFORMATIONAL"
	ComplianceSeverityEnumUnspecified   ComplianceSeverityEnum = "UNSPECIFIED"
)

func (e ComplianceSeverityEnum) ToPointer() *ComplianceSeverityEnum {
	return &e
}

func (e *ComplianceSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CRITICAL":
		fallthrough
	case "HIGH":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "LOW":
		fallthrough
	case "INFORMATIONAL":
		fallthrough
	case "UNSPECIFIED":
		*e = ComplianceSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComplianceSeverityEnum: %v", v)
	}
}
