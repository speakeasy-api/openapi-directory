// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataQualityMetricTypeEnum string

const (
	DataQualityMetricTypeEnumColumnCompleteness                  DataQualityMetricTypeEnum = "COLUMN_COMPLETENESS"
	DataQualityMetricTypeEnumDimensionUniqueness                 DataQualityMetricTypeEnum = "DIMENSION_UNIQUENESS"
	DataQualityMetricTypeEnumTimeSeriesCount                     DataQualityMetricTypeEnum = "TIME_SERIES_COUNT"
	DataQualityMetricTypeEnumRowsProcessed                       DataQualityMetricTypeEnum = "ROWS_PROCESSED"
	DataQualityMetricTypeEnumRowsPartialCompliance               DataQualityMetricTypeEnum = "ROWS_PARTIAL_COMPLIANCE"
	DataQualityMetricTypeEnumInvalidRowsCompliance               DataQualityMetricTypeEnum = "INVALID_ROWS_COMPLIANCE"
	DataQualityMetricTypeEnumBacktestTrainingDataStartTimeStamp  DataQualityMetricTypeEnum = "BACKTEST_TRAINING_DATA_START_TIME_STAMP"
	DataQualityMetricTypeEnumBacktestTrainingDataEndTimeStamp    DataQualityMetricTypeEnum = "BACKTEST_TRAINING_DATA_END_TIME_STAMP"
	DataQualityMetricTypeEnumBacktestInferenceDataStartTimeStamp DataQualityMetricTypeEnum = "BACKTEST_INFERENCE_DATA_START_TIME_STAMP"
	DataQualityMetricTypeEnumBacktestInferenceDataEndTimeStamp   DataQualityMetricTypeEnum = "BACKTEST_INFERENCE_DATA_END_TIME_STAMP"
)

func (e *DataQualityMetricTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COLUMN_COMPLETENESS":
		fallthrough
	case "DIMENSION_UNIQUENESS":
		fallthrough
	case "TIME_SERIES_COUNT":
		fallthrough
	case "ROWS_PROCESSED":
		fallthrough
	case "ROWS_PARTIAL_COMPLIANCE":
		fallthrough
	case "INVALID_ROWS_COMPLIANCE":
		fallthrough
	case "BACKTEST_TRAINING_DATA_START_TIME_STAMP":
		fallthrough
	case "BACKTEST_TRAINING_DATA_END_TIME_STAMP":
		fallthrough
	case "BACKTEST_INFERENCE_DATA_START_TIME_STAMP":
		fallthrough
	case "BACKTEST_INFERENCE_DATA_END_TIME_STAMP":
		*e = DataQualityMetricTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataQualityMetricTypeEnum: %s", s)
	}
}
