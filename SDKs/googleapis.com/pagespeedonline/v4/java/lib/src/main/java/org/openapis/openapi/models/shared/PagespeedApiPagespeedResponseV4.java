/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * PagespeedApiPagespeedResponseV4 - Successful response
 */
public class PagespeedApiPagespeedResponseV4 {
    /**
     * The captcha verify result
     */
    
    public String captchaResult;
    public PagespeedApiPagespeedResponseV4 withCaptchaResult(String captchaResult) {
        this.captchaResult = captchaResult;
        return this;
    }
    
    /**
     * Localized PageSpeed results. Contains a ruleResults entry for each PageSpeed rule instantiated and run by the server.
     */
    
    public PagespeedApiPagespeedResponseV4FormattedResults formattedResults;
    public PagespeedApiPagespeedResponseV4 withFormattedResults(PagespeedApiPagespeedResponseV4FormattedResults formattedResults) {
        this.formattedResults = formattedResults;
        return this;
    }
    
    /**
     * Canonicalized and final URL for the document, after following page redirects (if any).
     */
    
    public String id;
    public PagespeedApiPagespeedResponseV4 withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * List of rules that were specified in the request, but which the server did not know how to instantiate.
     */
    
    public String[] invalidRules;
    public PagespeedApiPagespeedResponseV4 withInvalidRules(String[] invalidRules) {
        this.invalidRules = invalidRules;
        return this;
    }
    
    /**
     * Kind of result.
     */
    
    public String kind;
    public PagespeedApiPagespeedResponseV4 withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Metrics of end users' page loading experience.
     */
    
    public PagespeedApiPagespeedResponseV4LoadingExperience loadingExperience;
    public PagespeedApiPagespeedResponseV4 withLoadingExperience(PagespeedApiPagespeedResponseV4LoadingExperience loadingExperience) {
        this.loadingExperience = loadingExperience;
        return this;
    }
    
    /**
     * Summary statistics for the page, such as number of JavaScript bytes, number of HTML bytes, etc.
     */
    
    public PagespeedApiPagespeedResponseV4PageStats pageStats;
    public PagespeedApiPagespeedResponseV4 withPageStats(PagespeedApiPagespeedResponseV4PageStats pageStats) {
        this.pageStats = pageStats;
        return this;
    }
    
    /**
     * Response code for the document. 200 indicates a normal page load. 4xx/5xx indicates an error.
     */
    
    public Integer responseCode;
    public PagespeedApiPagespeedResponseV4 withResponseCode(Integer responseCode) {
        this.responseCode = responseCode;
        return this;
    }
    
    /**
     * A map with one entry for each rule group in these results.
     */
    
    public java.util.Map<String, PagespeedApiPagespeedResponseV4RuleGroups> ruleGroups;
    public PagespeedApiPagespeedResponseV4 withRuleGroups(java.util.Map<String, PagespeedApiPagespeedResponseV4RuleGroups> ruleGroups) {
        this.ruleGroups = ruleGroups;
        return this;
    }
    
    
    public PagespeedApiImageV4 screenshot;
    public PagespeedApiPagespeedResponseV4 withScreenshot(PagespeedApiImageV4 screenshot) {
        this.screenshot = screenshot;
        return this;
    }
    
    /**
     * Additional base64-encoded screenshots of the page, in various partial render states.
     */
    
    public PagespeedApiImageV4[] snapshots;
    public PagespeedApiPagespeedResponseV4 withSnapshots(PagespeedApiImageV4[] snapshots) {
        this.snapshots = snapshots;
        return this;
    }
    
    /**
     * Title of the page, as displayed in the browser's title bar.
     */
    
    public String title;
    public PagespeedApiPagespeedResponseV4 withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * The version of PageSpeed used to generate these results.
     */
    
    public PagespeedApiPagespeedResponseV4Version version;
    public PagespeedApiPagespeedResponseV4 withVersion(PagespeedApiPagespeedResponseV4Version version) {
        this.version = version;
        return this;
    }
    
}
