/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomerFilter } from "./customerfilter";
import { CustomerSort } from "./customersort";
import { Expose, Type } from "class-transformer";

/**
 * Represents a query (including filtering criteria, sorting criteria, or both) used to search
 *
 * @remarks
 * for customer profiles.
 */
export class CustomerQuery extends SpeakeasyBase {
  /**
   * Represents a set of `CustomerQuery` filters used to limit the set of
   *
   * @remarks
   * customers returned by the [SearchCustomers](https://developer.squareup.com/reference/square_2021-08-18/customers-api/search-customers) endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  @Type(() => CustomerFilter)
  filter?: CustomerFilter;

  /**
   * Specifies how searched customers profiles are sorted, including the sort key and sort order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sort" })
  @Type(() => CustomerSort)
  sort?: CustomerSort;
}
