/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class InMeetingRecordingControlApplicationJSON extends SpeakeasyBase {
  /**
   * The method that you would like to control. The value of this field can be one of the following:
   *
   * @remarks
   * * `recording.start`: Provide this value if you would like to start the recording.<br><br>
   * * `recording.stop`: Provide this value if you would like to stop the recording.<br><br>
   * * `recording.pause`: Provide this value if you would like to pause the recording.<br><br>
   * * `recording.resume`: Provide this value if you would like to resume the recording that was previously paused.
   *
   *
   *
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: string;
}

export class InMeetingRecordingControlRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: InMeetingRecordingControlApplicationJSON;

  /**
   * Unique identifier of the live meeting.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=meetingId",
  })
  meetingId: string;
}

export class InMeetingRecordingControlResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status:** `202` **Accepted**
   *
   * @remarks
   * Request processed successfully.
   */
  @SpeakeasyMetadata()
  inMeetingRecordingControl202ApplicationJSONAny?: any;
}
