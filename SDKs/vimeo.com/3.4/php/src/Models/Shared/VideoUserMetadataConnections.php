<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VideoUserMetadataConnections - The list of resource URIs related to the user.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VideoUserMetadataConnections
{
    /**
     * Information about the albums created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsAlbums $albums
     */
	#[\JMS\Serializer\Annotation\SerializedName('albums')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsAlbums')]
    public VideoUserMetadataConnectionsAlbums $albums;
    
    /**
     * Information about the appearances of this user in other videos.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsAppearances $appearances
     */
	#[\JMS\Serializer\Annotation\SerializedName('appearances')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsAppearances')]
    public VideoUserMetadataConnectionsAppearances $appearances;
    
    /**
     * Information on the users that the current user has blocked. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsBlock $block
     */
	#[\JMS\Serializer\Annotation\SerializedName('block')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsBlock')]
    public VideoUserMetadataConnectionsBlock $block;
    
    /**
     * Information about this user's followed categories.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsCategories $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsCategories')]
    public VideoUserMetadataConnectionsCategories $categories;
    
    /**
     * Information about this user's subscribed channels.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsChannels $channels
     */
	#[\JMS\Serializer\Annotation\SerializedName('channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsChannels')]
    public VideoUserMetadataConnectionsChannels $channels;
    
    /**
     * Information about this user's feed.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFeed $feed
     */
	#[\JMS\Serializer\Annotation\SerializedName('feed')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFeed')]
    public VideoUserMetadataConnectionsFeed $feed;
    
    /**
     * Information about this user's folders.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFolders $folders
     */
	#[\JMS\Serializer\Annotation\SerializedName('folders')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFolders')]
    public VideoUserMetadataConnectionsFolders $folders;
    
    /**
     * Information about the user's followers.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFollowers $followers
     */
	#[\JMS\Serializer\Annotation\SerializedName('followers')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFollowers')]
    public VideoUserMetadataConnectionsFollowers $followers;
    
    /**
     * Information about the users that the current user is following.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFollowing $following
     */
	#[\JMS\Serializer\Annotation\SerializedName('following')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFollowing')]
    public VideoUserMetadataConnectionsFollowing $following;
    
    /**
     * Information about the groups created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsGroups $groups
     */
	#[\JMS\Serializer\Annotation\SerializedName('groups')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsGroups')]
    public VideoUserMetadataConnectionsGroups $groups;
    
    /**
     * Information about the videos that this user has liked.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsLikes $likes
     */
	#[\JMS\Serializer\Annotation\SerializedName('likes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsLikes')]
    public VideoUserMetadataConnectionsLikes $likes;
    
    /**
     * Information about the channels that this user moderates.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsModeratedChannels $moderatedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('moderated_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsModeratedChannels')]
    public VideoUserMetadataConnectionsModeratedChannels $moderatedChannels;
    
    /**
     * Information about this user's portraits.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsPictures $pictures
     */
	#[\JMS\Serializer\Annotation\SerializedName('pictures')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsPictures')]
    public VideoUserMetadataConnectionsPictures $pictures;
    
    /**
     * Information about this user's portfolios.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsPortfolios $portfolios
     */
	#[\JMS\Serializer\Annotation\SerializedName('portfolios')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsPortfolios')]
    public VideoUserMetadataConnectionsPortfolios $portfolios;
    
    /**
     * A collection of recommended channels for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsRecommendedChannels $recommendedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsRecommendedChannels')]
    public VideoUserMetadataConnectionsRecommendedChannels $recommendedChannels;
    
    /**
     * A Collection of recommended users for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsRecommendedUsers $recommendedUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_users')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsRecommendedUsers')]
    public VideoUserMetadataConnectionsRecommendedUsers $recommendedUsers;
    
    /**
     * Information about the videos that have been shared with this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsShared $shared
     */
	#[\JMS\Serializer\Annotation\SerializedName('shared')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsShared')]
    public VideoUserMetadataConnectionsShared $shared;
    
    /**
     * Information about the videos uploaded by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsVideos $videos
     */
	#[\JMS\Serializer\Annotation\SerializedName('videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsVideos')]
    public VideoUserMetadataConnectionsVideos $videos;
    
    /**
     * Information about the videos that this user has watched.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsWatchedVideos $watchedVideos
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched_videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsWatchedVideos')]
    public VideoUserMetadataConnectionsWatchedVideos $watchedVideos;
    
    /**
     * Information about the videos that this user wants to watch later.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsWatchlater $watchlater
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchlater')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsWatchlater')]
    public VideoUserMetadataConnectionsWatchlater $watchlater;
    
	public function __construct()
	{
		$this->albums = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsAlbums();
		$this->appearances = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsAppearances();
		$this->block = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsBlock();
		$this->categories = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsCategories();
		$this->channels = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsChannels();
		$this->feed = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFeed();
		$this->folders = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFolders();
		$this->followers = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFollowers();
		$this->following = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsFollowing();
		$this->groups = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsGroups();
		$this->likes = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsLikes();
		$this->moderatedChannels = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsModeratedChannels();
		$this->pictures = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsPictures();
		$this->portfolios = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsPortfolios();
		$this->recommendedChannels = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsRecommendedChannels();
		$this->recommendedUsers = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsRecommendedUsers();
		$this->shared = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsShared();
		$this->videos = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsVideos();
		$this->watchedVideos = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsWatchedVideos();
		$this->watchlater = new \OpenAPI\OpenAPI\Models\Shared\VideoUserMetadataConnectionsWatchlater();
	}
}
