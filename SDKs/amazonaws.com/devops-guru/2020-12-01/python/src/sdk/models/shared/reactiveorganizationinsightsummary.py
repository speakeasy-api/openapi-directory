"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import insightseverity_enum as shared_insightseverity_enum
from ..shared import insightstatus_enum as shared_insightstatus_enum
from ..shared import insighttimerange as shared_insighttimerange
from ..shared import resourcecollection as shared_resourcecollection
from ..shared import servicecollection as shared_servicecollection
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReactiveOrganizationInsightSummary:
    r"""Information about a reactive insight. This object is returned by <code>DescribeInsight</code>."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountId'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    insight_time_range: Optional[shared_insighttimerange.InsightTimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InsightTimeRange'), 'exclude': lambda f: f is None }})
    r"""A time ranged that specifies when the observed behavior in an insight started and ended."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    organizational_unit_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrganizationalUnitId'), 'exclude': lambda f: f is None }})  
    resource_collection: Optional[shared_resourcecollection.ResourceCollection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceCollection'), 'exclude': lambda f: f is None }})
    r"""A collection of Amazon Web Services resources supported by DevOps Guru. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks."""  
    service_collection: Optional[shared_servicecollection.ServiceCollection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceCollection'), 'exclude': lambda f: f is None }})
    r"""A collection of the names of Amazon Web Services services."""  
    severity: Optional[shared_insightseverity_enum.InsightSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Severity'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_insightstatus_enum.InsightStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    