// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
)

type PostPortfolioAnalysisCorrelationSpectrumRequestBody2Assets struct {
	// assetPrices[t] is the price of the asset at the time t; all the assetPrices arrays must have the same length
	AssetPrices []float64 `json:"assetPrices"`
}

type PostPortfolioAnalysisCorrelationSpectrumRequestBody2Portfolios struct {
	// portfolioValues[t] is the value of the portfolio at the time t; all the portfolioValues arrays must have the same length, equal to the common length of the assetPrices arrays
	PortfolioValues []float64 `json:"portfolioValues"`
}

type PostPortfolioAnalysisCorrelationSpectrumRequestBody2 struct {
	Assets     []PostPortfolioAnalysisCorrelationSpectrumRequestBody2Assets     `json:"assets"`
	Portfolios []PostPortfolioAnalysisCorrelationSpectrumRequestBody2Portfolios `json:"portfolios"`
}

type PostPortfolioAnalysisCorrelationSpectrumRequestBody1Portfolios struct {
	// assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
	AssetsWeights []float64 `json:"assetsWeights"`
}

type PostPortfolioAnalysisCorrelationSpectrumRequestBody1 struct {
	// The number of assets
	Assets int64 `json:"assets"`
	// assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
	AssetsCovarianceMatrix [][]float64                                                      `json:"assetsCovarianceMatrix"`
	Portfolios             []PostPortfolioAnalysisCorrelationSpectrumRequestBody1Portfolios `json:"portfolios"`
}

type PostPortfolioAnalysisCorrelationSpectrumRequestBodyType string

const (
	PostPortfolioAnalysisCorrelationSpectrumRequestBodyTypePostPortfolioAnalysisCorrelationSpectrumRequestBody1 PostPortfolioAnalysisCorrelationSpectrumRequestBodyType = "post_/portfolio/analysis/correlation-spectrum_requestBody_1"
	PostPortfolioAnalysisCorrelationSpectrumRequestBodyTypePostPortfolioAnalysisCorrelationSpectrumRequestBody2 PostPortfolioAnalysisCorrelationSpectrumRequestBodyType = "post_/portfolio/analysis/correlation-spectrum_requestBody_2"
)

type PostPortfolioAnalysisCorrelationSpectrumRequestBody struct {
	PostPortfolioAnalysisCorrelationSpectrumRequestBody1 *PostPortfolioAnalysisCorrelationSpectrumRequestBody1
	PostPortfolioAnalysisCorrelationSpectrumRequestBody2 *PostPortfolioAnalysisCorrelationSpectrumRequestBody2

	Type PostPortfolioAnalysisCorrelationSpectrumRequestBodyType
}

func CreatePostPortfolioAnalysisCorrelationSpectrumRequestBodyPostPortfolioAnalysisCorrelationSpectrumRequestBody1(postPortfolioAnalysisCorrelationSpectrumRequestBody1 PostPortfolioAnalysisCorrelationSpectrumRequestBody1) PostPortfolioAnalysisCorrelationSpectrumRequestBody {
	typ := PostPortfolioAnalysisCorrelationSpectrumRequestBodyTypePostPortfolioAnalysisCorrelationSpectrumRequestBody1

	return PostPortfolioAnalysisCorrelationSpectrumRequestBody{
		PostPortfolioAnalysisCorrelationSpectrumRequestBody1: &postPortfolioAnalysisCorrelationSpectrumRequestBody1,
		Type: typ,
	}
}

func CreatePostPortfolioAnalysisCorrelationSpectrumRequestBodyPostPortfolioAnalysisCorrelationSpectrumRequestBody2(postPortfolioAnalysisCorrelationSpectrumRequestBody2 PostPortfolioAnalysisCorrelationSpectrumRequestBody2) PostPortfolioAnalysisCorrelationSpectrumRequestBody {
	typ := PostPortfolioAnalysisCorrelationSpectrumRequestBodyTypePostPortfolioAnalysisCorrelationSpectrumRequestBody2

	return PostPortfolioAnalysisCorrelationSpectrumRequestBody{
		PostPortfolioAnalysisCorrelationSpectrumRequestBody2: &postPortfolioAnalysisCorrelationSpectrumRequestBody2,
		Type: typ,
	}
}

func (u *PostPortfolioAnalysisCorrelationSpectrumRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	postPortfolioAnalysisCorrelationSpectrumRequestBody1 := new(PostPortfolioAnalysisCorrelationSpectrumRequestBody1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postPortfolioAnalysisCorrelationSpectrumRequestBody1); err == nil {
		u.PostPortfolioAnalysisCorrelationSpectrumRequestBody1 = postPortfolioAnalysisCorrelationSpectrumRequestBody1
		u.Type = PostPortfolioAnalysisCorrelationSpectrumRequestBodyTypePostPortfolioAnalysisCorrelationSpectrumRequestBody1
		return nil
	}

	postPortfolioAnalysisCorrelationSpectrumRequestBody2 := new(PostPortfolioAnalysisCorrelationSpectrumRequestBody2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postPortfolioAnalysisCorrelationSpectrumRequestBody2); err == nil {
		u.PostPortfolioAnalysisCorrelationSpectrumRequestBody2 = postPortfolioAnalysisCorrelationSpectrumRequestBody2
		u.Type = PostPortfolioAnalysisCorrelationSpectrumRequestBodyTypePostPortfolioAnalysisCorrelationSpectrumRequestBody2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PostPortfolioAnalysisCorrelationSpectrumRequestBody) MarshalJSON() ([]byte, error) {
	if u.PostPortfolioAnalysisCorrelationSpectrumRequestBody1 != nil {
		return json.Marshal(u.PostPortfolioAnalysisCorrelationSpectrumRequestBody1)
	}

	if u.PostPortfolioAnalysisCorrelationSpectrumRequestBody2 != nil {
		return json.Marshal(u.PostPortfolioAnalysisCorrelationSpectrumRequestBody2)
	}

	return nil, nil
}

type PostPortfolioAnalysisCorrelationSpectrumRequest struct {
	Request PostPortfolioAnalysisCorrelationSpectrumRequestBody `request:"mediaType=application/json"`
}

type PostPortfolioAnalysisCorrelationSpectrum200ApplicationJSONPortfolios struct {
	// The correlation spectrum of the portfolio
	PortfolioCorrelationSpectrum []float64 `json:"portfolioCorrelationSpectrum"`
}

// PostPortfolioAnalysisCorrelationSpectrum200ApplicationJSON - OK
type PostPortfolioAnalysisCorrelationSpectrum200ApplicationJSON struct {
	Portfolios []PostPortfolioAnalysisCorrelationSpectrum200ApplicationJSONPortfolios `json:"portfolios"`
}

type PostPortfolioAnalysisCorrelationSpectrumResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PostPortfolioAnalysisCorrelationSpectrum200ApplicationJSONObject *PostPortfolioAnalysisCorrelationSpectrum200ApplicationJSON
}
