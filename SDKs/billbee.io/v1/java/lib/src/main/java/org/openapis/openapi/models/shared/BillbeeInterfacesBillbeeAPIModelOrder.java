/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * BillbeeInterfacesBillbeeAPIModelOrder - A class that represents the Billbee data model of a single order
 */
public class BillbeeInterfacesBillbeeAPIModelOrder {
    /**
     * Customer accepts loss due to withdrawal
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AcceptLossOfReturnRight")
    public Boolean acceptLossOfReturnRight;

    public BillbeeInterfacesBillbeeAPIModelOrder withAcceptLossOfReturnRight(Boolean acceptLossOfReturnRight) {
        this.acceptLossOfReturnRight = acceptLossOfReturnRight;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdjustmentCost")
    public Double adjustmentCost;

    public BillbeeInterfacesBillbeeAPIModelOrder withAdjustmentCost(Double adjustmentCost) {
        this.adjustmentCost = adjustmentCost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdjustmentReason")
    public String adjustmentReason;

    public BillbeeInterfacesBillbeeAPIModelOrder withAdjustmentReason(String adjustmentReason) {
        this.adjustmentReason = adjustmentReason;
        return this;
    }
    
    /**
     * Id of the account, this order belongs to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApiAccountId")
    public Long apiAccountId;

    public BillbeeInterfacesBillbeeAPIModelOrder withApiAccountId(Long apiAccountId) {
        this.apiAccountId = apiAccountId;
        return this;
    }
    
    /**
     * The name of the account, this order belongs to. Will be ignored on order creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApiAccountName")
    public String apiAccountName;

    public BillbeeInterfacesBillbeeAPIModelOrder withApiAccountName(String apiAccountName) {
        this.apiAccountName = apiAccountName;
        return this;
    }
    
    /**
     * If set, the order was already archived at the given date. Further modification is disabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ArchivedAt")
    public OffsetDateTime archivedAt;

    public BillbeeInterfacesBillbeeAPIModelOrder withArchivedAt(OffsetDateTime archivedAt) {
        this.archivedAt = archivedAt;
        return this;
    }
    
    /**
     * The Order.Id from the Billbee database
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BillBeeOrderId")
    public Long billBeeOrderId;

    public BillbeeInterfacesBillbeeAPIModelOrder withBillBeeOrderId(Long billBeeOrderId) {
        this.billBeeOrderId = billBeeOrderId;
        return this;
    }
    
    /**
     * The Id of the parent order in the Billbee database
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BillBeeParentOrderId")
    public Long billBeeParentOrderId;

    public BillbeeInterfacesBillbeeAPIModelOrder withBillBeeParentOrderId(Long billBeeParentOrderId) {
        this.billBeeParentOrderId = billBeeParentOrderId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Buyer")
    public BillbeeInterfacesBillbeeAPIModelOrderUser buyer;

    public BillbeeInterfacesBillbeeAPIModelOrder withBuyer(BillbeeInterfacesBillbeeAPIModelOrderUser buyer) {
        this.buyer = buyer;
        return this;
    }
    
    /**
     * All messages / comments of the order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Comments")
    public BillbeeInterfacesBillbeeAPIModelCommentAPIModel[] comments;

    public BillbeeInterfacesBillbeeAPIModelOrder withComments(BillbeeInterfacesBillbeeAPIModelCommentAPIModel[] comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * The date on which the order was confirmed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ConfirmedAt")
    public OffsetDateTime confirmedAt;

    public BillbeeInterfacesBillbeeAPIModelOrder withConfirmedAt(OffsetDateTime confirmedAt) {
        this.confirmedAt = confirmedAt;
        return this;
    }
    
    /**
     * The date on which the order was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAt")
    public OffsetDateTime createdAt;

    public BillbeeInterfacesBillbeeAPIModelOrder withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The three letter currency code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Currency")
    public String currency;

    public BillbeeInterfacesBillbeeAPIModelOrder withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * An optional multiline text which is printed on the invoice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomInvoiceNote")
    public String customInvoiceNote;

    public BillbeeInterfacesBillbeeAPIModelOrder withCustomInvoiceNote(String customInvoiceNote) {
        this.customInvoiceNote = customInvoiceNote;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Customer")
    public BillbeeInterfacesBillbeeAPIModelCustomerAPIModel customer;

    public BillbeeInterfacesBillbeeAPIModelOrder withCustomer(BillbeeInterfacesBillbeeAPIModelCustomerAPIModel customer) {
        this.customer = customer;
        return this;
    }
    
    /**
     * The customer number (not to be confused with the id of the customer)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerNumber")
    public String customerNumber;

    public BillbeeInterfacesBillbeeAPIModelOrder withCustomerNumber(String customerNumber) {
        this.customerNumber = customerNumber;
        return this;
    }
    
    /**
     * The vat-id, that was given by the customer to fulfill this order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerVatId")
    public String customerVatId;

    public BillbeeInterfacesBillbeeAPIModelOrder withCustomerVatId(String customerVatId) {
        this.customerVatId = customerVatId;
        return this;
    }
    
    /**
     * An optional Country ISO2 Code of the country where order is shipped from (FBA)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeliverySourceCountryCode")
    public String deliverySourceCountryCode;

    public BillbeeInterfacesBillbeeAPIModelOrder withDeliverySourceCountryCode(String deliverySourceCountryCode) {
        this.deliverySourceCountryCode = deliverySourceCountryCode;
        return this;
    }
    
    /**
     * An optional code for the distribution center delivering this order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DistributionCenter")
    public String distributionCenter;

    public BillbeeInterfacesBillbeeAPIModelOrder withDistributionCenter(String distributionCenter) {
        this.distributionCenter = distributionCenter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("History")
    public BillbeeInterfacesOrderHistoryEntry[] history;

    public BillbeeInterfacesBillbeeAPIModelOrder withHistory(BillbeeInterfacesOrderHistoryEntry[] history) {
        this.history = history;
        return this;
    }
    
    /**
     * Id of the order in the external system (marketplace)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;

    public BillbeeInterfacesBillbeeAPIModelOrder withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceAddress")
    public BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel invoiceAddress;

    public BillbeeInterfacesBillbeeAPIModelOrder withInvoiceAddress(BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel invoiceAddress) {
        this.invoiceAddress = invoiceAddress;
        return this;
    }
    
    /**
     * The date on which the invoice was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("InvoiceDate")
    public OffsetDateTime invoiceDate;

    public BillbeeInterfacesBillbeeAPIModelOrder withInvoiceDate(OffsetDateTime invoiceDate) {
        this.invoiceDate = invoiceDate;
        return this;
    }
    
    /**
     * The invoice number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceNumber")
    public Integer invoiceNumber;

    public BillbeeInterfacesBillbeeAPIModelOrder withInvoiceNumber(Integer invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
        return this;
    }
    
    /**
     * The postfix of the invoice number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceNumberPostfix")
    public String invoiceNumberPostfix;

    public BillbeeInterfacesBillbeeAPIModelOrder withInvoiceNumberPostfix(String invoiceNumberPostfix) {
        this.invoiceNumberPostfix = invoiceNumberPostfix;
        return this;
    }
    
    /**
     * The prefix of the invoice number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceNumberPrefix")
    public String invoiceNumberPrefix;

    public BillbeeInterfacesBillbeeAPIModelOrder withInvoiceNumberPrefix(String invoiceNumberPrefix) {
        this.invoiceNumberPrefix = invoiceNumberPrefix;
        return this;
    }
    
    /**
     * An optional Order Id (externalid) for an order if this is a cancel order (shopify only at the moment)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsCancelationFor")
    public String isCancelationFor;

    public BillbeeInterfacesBillbeeAPIModelOrder withIsCancelationFor(String isCancelationFor) {
        this.isCancelationFor = isCancelationFor;
        return this;
    }
    
    /**
     * Indicates whether the order was created through the Billbee-Api or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsFromBillbeeApi")
    public Boolean isFromBillbeeApi;

    public BillbeeInterfacesBillbeeAPIModelOrder withIsFromBillbeeApi(Boolean isFromBillbeeApi) {
        this.isFromBillbeeApi = isFromBillbeeApi;
        return this;
    }
    
    /**
     * The two-letter language code of the customer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LanguageCode")
    public String languageCode;

    public BillbeeInterfacesBillbeeAPIModelOrder withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * Date of the last update, the order got
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedAt")
    public OffsetDateTime lastModifiedAt;

    public BillbeeInterfacesBillbeeAPIModelOrder withLastModifiedAt(OffsetDateTime lastModifiedAt) {
        this.lastModifiedAt = lastModifiedAt;
        return this;
    }
    
    /**
     * The vat-id, that should be displayed on the invoice and other order documents
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MerchantVatId")
    public String merchantVatId;

    public BillbeeInterfacesBillbeeAPIModelOrder withMerchantVatId(String merchantVatId) {
        this.merchantVatId = merchantVatId;
        return this;
    }
    
    /**
     * The list of items purchased like shirt, pant, toys etc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrderItems")
    public BillbeeInterfacesBillbeeAPIModelOrderItem[] orderItems;

    public BillbeeInterfacesBillbeeAPIModelOrder withOrderItems(BillbeeInterfacesBillbeeAPIModelOrderItem[] orderItems) {
        this.orderItems = orderItems;
        return this;
    }
    
    /**
     * Order number of the order in the external system (marketplace)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrderNumber")
    public String orderNumber;

    public BillbeeInterfacesBillbeeAPIModelOrder withOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaidAmount")
    public Double paidAmount;

    public BillbeeInterfacesBillbeeAPIModelOrder withPaidAmount(Double paidAmount) {
        this.paidAmount = paidAmount;
        return this;
    }
    
    /**
     * The date on which the order was paid
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("PayedAt")
    public OffsetDateTime payedAt;

    public BillbeeInterfacesBillbeeAPIModelOrder withPayedAt(OffsetDateTime payedAt) {
        this.payedAt = payedAt;
        return this;
    }
    
    /**
     * A textfield optionaly filled with a payment instruction text for printout on the invoice (z.B. Ebay Kauf auf Rechnung)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentInstruction")
    public String paymentInstruction;

    public BillbeeInterfacesBillbeeAPIModelOrder withPaymentInstruction(String paymentInstruction) {
        this.paymentInstruction = paymentInstruction;
        return this;
    }
    
    /**
     * The payment method
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentMethod")
    public BillbeeInterfacesBillbeeAPIModelOrderPaymentMethodEnum paymentMethod;

    public BillbeeInterfacesBillbeeAPIModelOrder withPaymentMethod(BillbeeInterfacesBillbeeAPIModelOrderPaymentMethodEnum paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }
    
    /**
     * A payment reference. Should not be used any more. Please use 'Payments' instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentReference")
    public String paymentReference;

    public BillbeeInterfacesBillbeeAPIModelOrder withPaymentReference(String paymentReference) {
        this.paymentReference = paymentReference;
        return this;
    }
    
    /**
     * The id of the payment transaction. For example the transaction id of PayPal payment. Should not be used any more. Please use 'Payments' instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentTransactionId")
    public String paymentTransactionId;

    public BillbeeInterfacesBillbeeAPIModelOrder withPaymentTransactionId(String paymentTransactionId) {
        this.paymentTransactionId = paymentTransactionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Payments")
    public BillbeeInterfacesBillbeeAPIModelsOrderPayment[] payments;

    public BillbeeInterfacesBillbeeAPIModelOrder withPayments(BillbeeInterfacesBillbeeAPIModelsOrderPayment[] payments) {
        this.payments = payments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RebateDifference")
    public Double rebateDifference;

    public BillbeeInterfacesBillbeeAPIModelOrder withRebateDifference(Double rebateDifference) {
        this.rebateDifference = rebateDifference;
        return this;
    }
    
    /**
     * If set, the order was restored from the archive at the given date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("RestoredAt")
    public OffsetDateTime restoredAt;

    public BillbeeInterfacesBillbeeAPIModelOrder withRestoredAt(OffsetDateTime restoredAt) {
        this.restoredAt = restoredAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Seller")
    public BillbeeInterfacesBillbeeAPIModelOrderUser seller;

    public BillbeeInterfacesBillbeeAPIModelOrder withSeller(BillbeeInterfacesBillbeeAPIModelOrderUser seller) {
        this.seller = seller;
        return this;
    }
    
    /**
     * An internal seller comment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SellerComment")
    public String sellerComment;

    public BillbeeInterfacesBillbeeAPIModelOrder withSellerComment(String sellerComment) {
        this.sellerComment = sellerComment;
        return this;
    }
    
    /**
     * The total weight of the shipment(s)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShipWeightKg")
    public Double shipWeightKg;

    public BillbeeInterfacesBillbeeAPIModelOrder withShipWeightKg(Double shipWeightKg) {
        this.shipWeightKg = shipWeightKg;
        return this;
    }
    
    /**
     * The date on which the order was shipped
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ShippedAt")
    public OffsetDateTime shippedAt;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippedAt(OffsetDateTime shippedAt) {
        this.shippedAt = shippedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingAddress")
    public BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel shippingAddress;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingAddress(BillbeeInterfacesBillbeeAPIModelOrderAddressAPIModel shippingAddress) {
        this.shippingAddress = shippingAddress;
        return this;
    }
    
    /**
     * The shipping cost
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingCost")
    public Double shippingCost;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingCost(Double shippingCost) {
        this.shippingCost = shippingCost;
        return this;
    }
    
    /**
     * The shipments of the order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingIds")
    public BillbeeInterfacesBillbeeAPIModelShipment[] shippingIds;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingIds(BillbeeInterfacesBillbeeAPIModelShipment[] shippingIds) {
        this.shippingIds = shippingIds;
        return this;
    }
    
    /**
     * Internal Id for the shipping profile for that order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingProfileId")
    public String shippingProfileId;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingProfileId(String shippingProfileId) {
        this.shippingProfileId = shippingProfileId;
        return this;
    }
    
    /**
     * Display Name of Shipping profile, if available
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingProfileName")
    public String shippingProfileName;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingProfileName(String shippingProfileName) {
        this.shippingProfileName = shippingProfileName;
        return this;
    }
    
    /**
     * Internal Id for the used shipping provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingProviderId")
    public Long shippingProviderId;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingProviderId(Long shippingProviderId) {
        this.shippingProviderId = shippingProviderId;
        return this;
    }
    
    /**
     * The Name for of used shipping provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingProviderName")
    public String shippingProviderName;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingProviderName(String shippingProviderName) {
        this.shippingProviderName = shippingProviderName;
        return this;
    }
    
    /**
     * Internal Id for the used shipping product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingProviderProductId")
    public Long shippingProviderProductId;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingProviderProductId(Long shippingProviderProductId) {
        this.shippingProviderProductId = shippingProviderProductId;
        return this;
    }
    
    /**
     * The Name of the used shipping product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingProviderProductName")
    public String shippingProviderProductName;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingProviderProductName(String shippingProviderProductName) {
        this.shippingProviderProductName = shippingProviderProductName;
        return this;
    }
    
    /**
     * Additional services for the shipment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingServices")
    public BillbeeInterfacesShippingProductService[] shippingServices;

    public BillbeeInterfacesBillbeeAPIModelOrder withShippingServices(BillbeeInterfacesShippingProductService[] shippingServices) {
        this.shippingServices = shippingServices;
        return this;
    }
    
    /**
     * The current state of the order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public BillbeeInterfacesBillbeeAPIModelOrderStateEnum state;

    public BillbeeInterfacesBillbeeAPIModelOrder withState(BillbeeInterfacesBillbeeAPIModelOrderStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The Tags of the order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public String[] tags;

    public BillbeeInterfacesBillbeeAPIModelOrder withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The regular tax rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxRate1")
    public Double taxRate1;

    public BillbeeInterfacesBillbeeAPIModelOrder withTaxRate1(Double taxRate1) {
        this.taxRate1 = taxRate1;
        return this;
    }
    
    /**
     * The reduced tax rate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxRate2")
    public Double taxRate2;

    public BillbeeInterfacesBillbeeAPIModelOrder withTaxRate2(Double taxRate2) {
        this.taxRate2 = taxRate2;
        return this;
    }
    
    /**
     * The total cost excluding shipping cost
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalCost")
    public Double totalCost;

    public BillbeeInterfacesBillbeeAPIModelOrder withTotalCost(Double totalCost) {
        this.totalCost = totalCost;
        return this;
    }
    
    /**
     * The date on which the order was last updated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedAt")
    public OffsetDateTime updatedAt;

    public BillbeeInterfacesBillbeeAPIModelOrder withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The customers vat id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VatId")
    public String vatId;

    public BillbeeInterfacesBillbeeAPIModelOrder withVatId(String vatId) {
        this.vatId = vatId;
        return this;
    }
    
    /**
     * The vat mode of the order
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VatMode")
    public BillbeeInterfacesBillbeeAPIModelOrderVatModeEnum vatMode;

    public BillbeeInterfacesBillbeeAPIModelOrder withVatMode(BillbeeInterfacesBillbeeAPIModelOrderVatModeEnum vatMode) {
        this.vatMode = vatMode;
        return this;
    }
    
    public BillbeeInterfacesBillbeeAPIModelOrder(){}
}
