// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PodcastFiltersPodcastTypeEnum string

const (
	PodcastFiltersPodcastTypeEnumPodcasts PodcastFiltersPodcastTypeEnum = "podcasts"
	PodcastFiltersPodcastTypeEnumShows    PodcastFiltersPodcastTypeEnum = "shows"
)

func (e *PodcastFiltersPodcastTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "podcasts":
		fallthrough
	case "shows":
		*e = PodcastFiltersPodcastTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PodcastFiltersPodcastTypeEnum: %s", s)
	}
}

// PodcastFilters - Filters for podcast search
type PodcastFilters struct {
	Category    []string                       `json:"category,omitempty"`
	Country     []string                       `json:"country,omitempty"`
	Language    []string                       `json:"language,omitempty"`
	PodcastType *PodcastFiltersPodcastTypeEnum `json:"podcastType,omitempty"`
}
