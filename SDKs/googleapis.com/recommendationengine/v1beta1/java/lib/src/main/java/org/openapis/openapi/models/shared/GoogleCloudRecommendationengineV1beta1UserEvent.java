/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecommendationengineV1beta1UserEvent - UserEvent captures all metadata information recommendation engine needs to know about how end users interact with customers' website.
 */
public class GoogleCloudRecommendationengineV1beta1UserEvent {
    /**
     * User event details shared by all recommendation types.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventDetail")
    public GoogleCloudRecommendationengineV1beta1EventDetail eventDetail;
    public GoogleCloudRecommendationengineV1beta1UserEvent withEventDetail(GoogleCloudRecommendationengineV1beta1EventDetail eventDetail) {
        this.eventDetail = eventDetail;
        return this;
    }
    
    /**
     * Optional. This field should *not* be set when using JavaScript pixel or the Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventSource")
    public GoogleCloudRecommendationengineV1beta1UserEventEventSourceEnum eventSource;
    public GoogleCloudRecommendationengineV1beta1UserEvent withEventSource(GoogleCloudRecommendationengineV1beta1UserEventEventSourceEnum eventSource) {
        this.eventSource = eventSource;
        return this;
    }
    
    /**
     * Optional. Only required for ImportUserEvents method. Timestamp of user event created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTime")
    public String eventTime;
    public GoogleCloudRecommendationengineV1beta1UserEvent withEventTime(String eventTime) {
        this.eventTime = eventTime;
        return this;
    }
    
    /**
     * Required. User event type. Allowed values are: * `add-to-cart` Products being added to cart. * `add-to-list` Items being added to a list (shopping list, favorites etc). * `category-page-view` Special pages such as sale or promotion pages viewed. * `checkout-start` User starting a checkout process. * `detail-page-view` Products detail page viewed. * `home-page-view` Homepage viewed. * `page-visit` Generic page visits not included in the event types above. * `purchase-complete` User finishing a purchase. * `refund` Purchased items being refunded or returned. * `remove-from-cart` Products being removed from cart. * `remove-from-list` Items being removed from a list. * `search` Product search. * `shopping-cart-page-view` User viewing a shopping cart. * `impression` List of items displayed. Used by Google Tag Manager.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public String eventType;
    public GoogleCloudRecommendationengineV1beta1UserEvent withEventType(String eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * ProductEventDetail captures user event information specific to retail products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productEventDetail")
    public GoogleCloudRecommendationengineV1beta1ProductEventDetail productEventDetail;
    public GoogleCloudRecommendationengineV1beta1UserEvent withProductEventDetail(GoogleCloudRecommendationengineV1beta1ProductEventDetail productEventDetail) {
        this.productEventDetail = productEventDetail;
        return this;
    }
    
    /**
     * Information of end users.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userInfo")
    public GoogleCloudRecommendationengineV1beta1UserInfo userInfo;
    public GoogleCloudRecommendationengineV1beta1UserEvent withUserInfo(GoogleCloudRecommendationengineV1beta1UserInfo userInfo) {
        this.userInfo = userInfo;
        return this;
    }
    
}
