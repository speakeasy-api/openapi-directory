"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeploymentLaunchConfig:
    r"""Configuration information for a deployment launch."""
    
    launch_file: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('launchFile') }})  
    package_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packageName') }})  
    environment_variables: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environmentVariables'), 'exclude': lambda f: f is None }})  
    post_launch_file: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postLaunchFile'), 'exclude': lambda f: f is None }})  
    pre_launch_file: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preLaunchFile'), 'exclude': lambda f: f is None }})  
    