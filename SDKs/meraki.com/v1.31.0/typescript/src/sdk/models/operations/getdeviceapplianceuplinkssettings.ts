/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetDeviceApplianceUplinksSettingsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=serial",
  })
  serial: string;
}

/**
 * Settings for PPPoE Authentication.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1PppoeAuthentication extends SpeakeasyBase {
  /**
   * Whether PPPoE authentication is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Username for PPPoE authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

/**
 * Configuration options for PPPoE.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Pppoe extends SpeakeasyBase {
  /**
   * Settings for PPPoE Authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1PppoeAuthentication
  )
  authentication?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1PppoeAuthentication;

  /**
   * Whether PPPoE is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv4 settings for static/dynamic mode.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4 extends SpeakeasyBase {
  /**
   * IP address and subnet mask when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4AssignmentModeEnum;

  /**
   * Gateway IP address when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4Nameservers
  )
  nameservers?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4Nameservers;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv6 settings for static/dynamic mode.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6 extends SpeakeasyBase {
  /**
   * Static address that will override the one(s) received by SLAAC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6AssignmentModeEnum;

  /**
   * Static gateway that will override the one received by autoconf.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6Nameservers
  )
  nameservers?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6Nameservers;
}

/**
 * SVI settings by protocol.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Svis extends SpeakeasyBase {
  /**
   * IPv4 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv4" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4
  )
  ipv4?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv4;

  /**
   * IPv6 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6
  )
  ipv6?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1SvisIpv6;
}

/**
 * VLAN tagging settings.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1VlanTagging extends SpeakeasyBase {
  /**
   * Whether VLAN tagging is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * The ID of the VLAN to use for VLAN tagging.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId?: number;
}

/**
 * WAN 1 settings.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1 extends SpeakeasyBase {
  /**
   * Enable or disable the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Configuration options for PPPoE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pppoe" })
  @Type(
    () => GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Pppoe
  )
  pppoe?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Pppoe;

  /**
   * SVI settings by protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "svis" })
  @Type(
    () => GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Svis
  )
  svis?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1Svis;

  /**
   * VLAN tagging settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanTagging" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1VlanTagging
  )
  vlanTagging?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1VlanTagging;
}

/**
 * Settings for PPPoE Authentication.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2PppoeAuthentication extends SpeakeasyBase {
  /**
   * Whether PPPoE authentication is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Username for PPPoE authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

/**
 * Configuration options for PPPoE.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Pppoe extends SpeakeasyBase {
  /**
   * Settings for PPPoE Authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2PppoeAuthentication
  )
  authentication?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2PppoeAuthentication;

  /**
   * Whether PPPoE is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv4 settings for static/dynamic mode.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4 extends SpeakeasyBase {
  /**
   * IP address and subnet mask when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4AssignmentModeEnum;

  /**
   * Gateway IP address when in static mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4Nameservers
  )
  nameservers?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4Nameservers;
}

/**
 * The assignment mode for this SVI. Applies only when PPPoE is disabled.
 */
export enum GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6AssignmentModeEnum {
  Dynamic = "dynamic",
  Static = "static",
}

/**
 * The nameserver settings for this SVI.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6Nameservers extends SpeakeasyBase {
  /**
   * Up to 2 nameserver addresses to use, ordered in priority from highest to lowest priority.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];
}

/**
 * IPv6 settings for static/dynamic mode.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6 extends SpeakeasyBase {
  /**
   * Static address that will override the one(s) received by SLAAC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * The assignment mode for this SVI. Applies only when PPPoE is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentMode" })
  assignmentMode?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6AssignmentModeEnum;

  /**
   * Static gateway that will override the one received by autoconf.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway?: string;

  /**
   * The nameserver settings for this SVI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameservers" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6Nameservers
  )
  nameservers?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6Nameservers;
}

/**
 * SVI settings by protocol.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Svis extends SpeakeasyBase {
  /**
   * IPv4 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv4" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4
  )
  ipv4?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv4;

  /**
   * IPv6 settings for static/dynamic mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipv6" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6
  )
  ipv6?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2SvisIpv6;
}

/**
 * VLAN tagging settings.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2VlanTagging extends SpeakeasyBase {
  /**
   * Whether VLAN tagging is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * The ID of the VLAN to use for VLAN tagging.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanId" })
  vlanId?: number;
}

/**
 * WAN 2 settings.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2 extends SpeakeasyBase {
  /**
   * Enable or disable the interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Configuration options for PPPoE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pppoe" })
  @Type(
    () => GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Pppoe
  )
  pppoe?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Pppoe;

  /**
   * SVI settings by protocol.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "svis" })
  @Type(
    () => GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Svis
  )
  svis?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2Svis;

  /**
   * VLAN tagging settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanTagging" })
  @Type(
    () =>
      GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2VlanTagging
  )
  vlanTagging?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2VlanTagging;
}

/**
 * Interface settings.
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSONInterfaces extends SpeakeasyBase {
  /**
   * WAN 1 settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wan1" })
  @Type(() => GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1)
  wan1?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan1;

  /**
   * WAN 2 settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wan2" })
  @Type(() => GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2)
  wan2?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfacesWan2;
}

/**
 * Successful operation
 */
export class GetDeviceApplianceUplinksSettings200ApplicationJSON extends SpeakeasyBase {
  /**
   * Interface settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interfaces" })
  @Type(() => GetDeviceApplianceUplinksSettings200ApplicationJSONInterfaces)
  interfaces?: GetDeviceApplianceUplinksSettings200ApplicationJSONInterfaces;
}

export class GetDeviceApplianceUplinksSettingsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getDeviceApplianceUplinksSettings200ApplicationJSONObject?: GetDeviceApplianceUplinksSettings200ApplicationJSON;
}
