// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HypervisorStateEnum string

const (
	HypervisorStateEnumPending HypervisorStateEnum = "PENDING"
	HypervisorStateEnumOnline  HypervisorStateEnum = "ONLINE"
	HypervisorStateEnumOffline HypervisorStateEnum = "OFFLINE"
	HypervisorStateEnumError   HypervisorStateEnum = "ERROR"
)

func (e HypervisorStateEnum) ToPointer() *HypervisorStateEnum {
	return &e
}

func (e *HypervisorStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "ONLINE":
		fallthrough
	case "OFFLINE":
		fallthrough
	case "ERROR":
		*e = HypervisorStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HypervisorStateEnum: %v", v)
	}
}
