// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PropertyOrderDirectionEnum - The direction to order by. Defaults to `ASCENDING`.
type PropertyOrderDirectionEnum string

const (
	PropertyOrderDirectionEnumDirectionUnspecified PropertyOrderDirectionEnum = "DIRECTION_UNSPECIFIED"
	PropertyOrderDirectionEnumAscending            PropertyOrderDirectionEnum = "ASCENDING"
	PropertyOrderDirectionEnumDescending           PropertyOrderDirectionEnum = "DESCENDING"
)

func (e PropertyOrderDirectionEnum) ToPointer() *PropertyOrderDirectionEnum {
	return &e
}

func (e *PropertyOrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DIRECTION_UNSPECIFIED":
		fallthrough
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = PropertyOrderDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PropertyOrderDirectionEnum: %v", v)
	}
}

// PropertyOrder - The desired order for a specific property.
type PropertyOrder struct {
	// The direction to order by. Defaults to `ASCENDING`.
	Direction *PropertyOrderDirectionEnum `json:"direction,omitempty"`
	// A reference to a property relative to the kind expressions.
	Property *PropertyReference `json:"property,omitempty"`
}
