/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlgorithmSpecification } from "./algorithmspecification";
import { DeviceConfig } from "./deviceconfig";
import { InputFileConfig } from "./inputfileconfig";
import { InstanceConfig } from "./instanceconfig";
import { JobCheckpointConfig } from "./jobcheckpointconfig";
import { JobEventDetails } from "./jobeventdetails";
import { JobOutputDataConfig } from "./joboutputdataconfig";
import { JobPrimaryStatusEnum } from "./jobprimarystatusenum";
import { JobStoppingCondition } from "./jobstoppingcondition";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetJobResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "algorithmSpecification" })
  @Type(() => AlgorithmSpecification)
  algorithmSpecification: AlgorithmSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "billableDuration" })
  billableDuration?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "checkpointConfig" })
  @Type(() => JobCheckpointConfig)
  checkpointConfig?: JobCheckpointConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceConfig" })
  @Type(() => DeviceConfig)
  deviceConfig?: DeviceConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "endedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endedAt?: Date;

  @SpeakeasyMetadata({ elemType: JobEventDetails })
  @Expose({ name: "events" })
  @Type(() => JobEventDetails)
  events?: JobEventDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "failureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hyperParameters" })
  hyperParameters?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: InputFileConfig })
  @Expose({ name: "inputDataConfig" })
  @Type(() => InputFileConfig)
  inputDataConfig?: InputFileConfig[];

  @SpeakeasyMetadata()
  @Expose({ name: "instanceConfig" })
  @Type(() => InstanceConfig)
  instanceConfig: InstanceConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "jobArn" })
  jobArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jobName" })
  jobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "outputDataConfig" })
  @Type(() => JobOutputDataConfig)
  outputDataConfig: JobOutputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: JobPrimaryStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stoppingCondition" })
  @Type(() => JobStoppingCondition)
  stoppingCondition?: JobStoppingCondition;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
