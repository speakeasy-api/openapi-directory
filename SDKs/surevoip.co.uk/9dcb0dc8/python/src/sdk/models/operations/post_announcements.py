"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import oneannouncements_post_responses_403_content_application_1json_schema as shared_oneannouncements_post_responses_403_content_application_1json_schema
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostAnnouncementsRequestBody:
    r"""Upload a wav file to be used in other parts of the API - 10Mb limit, ending in .wav"""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'description' }})  
    file: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'file' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAnnouncements403ApplicationJSON:
    r"""Sorry, you have reached your max quota of 10 announcement files. Please delete some."""
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAnnouncements400ApplicationJSONErrors:
    
    field: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field') }})  
    message: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAnnouncements400ApplicationJSON:
    r"""Bad data"""
    
    errors: list[PostAnnouncements400ApplicationJSONErrors] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAnnouncements201ApplicationJSONAnnouncementURL:
    
    download: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download'), 'exclude': lambda f: f is None }})  
    href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href'), 'exclude': lambda f: f is None }})  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAnnouncements201ApplicationJSONAnnouncement:
    
    creation_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creation_date'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    file_internal: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_internal'), 'exclude': lambda f: f is None }})  
    filename: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filename'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size'), 'exclude': lambda f: f is None }})  
    src_ip_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('src_ip_address'), 'exclude': lambda f: f is None }})  
    url: Optional[PostAnnouncements201ApplicationJSONAnnouncementURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAnnouncements201ApplicationJSON:
    r"""File created on filesystem."""
    
    announcement: Optional[PostAnnouncements201ApplicationJSONAnnouncement] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('announcement'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostAnnouncementsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    oneannouncements_post_responses_403_content_application_1json_schema: Optional[shared_oneannouncements_post_responses_403_content_application_1json_schema.OneannouncementsPostResponses403ContentApplication1jsonSchema] = dataclasses.field(default=None)
    r"""Problem saving file"""  
    post_announcements_201_application_json_object: Optional[PostAnnouncements201ApplicationJSON] = dataclasses.field(default=None)
    r"""File created on filesystem."""  
    post_announcements_400_application_json_object: Optional[PostAnnouncements400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad data"""  
    post_announcements_403_application_json_object: Optional[PostAnnouncements403ApplicationJSON] = dataclasses.field(default=None)
    r"""Sorry, you have reached your max quota of 10 announcement files. Please delete some."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    