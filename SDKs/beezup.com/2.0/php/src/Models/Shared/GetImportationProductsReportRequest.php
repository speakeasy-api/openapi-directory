<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetImportationProductsReportRequest - Get Importation Products Report Request
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetImportationProductsReportRequest
{
    /**
     * Filter by EAN (equals)
     * 
     * @var ?string $ean
     */
	#[\JMS\Serializer\Annotation\SerializedName('ean')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ean = null;
    
    /**
     * Get Importation Products Report Request Error Codes
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GetImportationProductsReportRequestErrorCode> $errorCodes
     */
	#[\JMS\Serializer\Annotation\SerializedName('errorCodes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GetImportationProductsReportRequestErrorCode>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $errorCodes = null;
    
    /**
     * Filter by MPN (equals)
     * 
     * @var ?string $mpn
     */
	#[\JMS\Serializer\Annotation\SerializedName('mpn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mpn = null;
    
    /**
     * Indicates the page number
     * 
     * @var int $pageNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageNumber')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $pageNumber;
    
    /**
     * Indicate the item count per page
     * 
     * @var int $pageSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $pageSize;
    
    /**
     * Filter by Sku (equals)
     * 
     * @var ?string $sku
     */
	#[\JMS\Serializer\Annotation\SerializedName('sku')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sku = null;
    
    /**
     * Filter by Title (StartsWith)
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->ean = null;
		$this->errorCodes = null;
		$this->mpn = null;
		$this->pageNumber = 0;
		$this->pageSize = 0;
		$this->sku = null;
		$this->title = null;
	}
}
