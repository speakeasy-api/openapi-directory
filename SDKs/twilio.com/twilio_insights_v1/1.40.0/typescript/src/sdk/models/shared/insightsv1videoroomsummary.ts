/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { VideoRoomSummaryEnumCodecEnum } from "./videoroomsummaryenumcodecenum";
import { VideoRoomSummaryEnumCreatedMethodEnum } from "./videoroomsummaryenumcreatedmethodenum";
import { VideoRoomSummaryEnumEdgeLocationEnum } from "./videoroomsummaryenumedgelocationenum";
import { VideoRoomSummaryEnumEndReasonEnum } from "./videoroomsummaryenumendreasonenum";
import { VideoRoomSummaryEnumProcessingStateEnum } from "./videoroomsummaryenumprocessingstateenum";
import { VideoRoomSummaryEnumRoomStatusEnum } from "./videoroomsummaryenumroomstatusenum";
import { VideoRoomSummaryEnumRoomTypeEnum } from "./videoroomsummaryenumroomtypeenum";
import { VideoRoomSummaryEnumTwilioRealmEnum } from "./videoroomsummaryenumtwiliorealmenum";
import { Expose, Transform } from "class-transformer";

/**
 * HTTP method provided for status callback URL.
 */
export enum InsightsV1VideoRoomSummaryStatusCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * OK
 */
export class InsightsV1VideoRoomSummary extends SpeakeasyBase {
  /**
   * Account SID associated with this room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * Codecs used by participants in the room. Can be `VP8`, `H264`, or `VP9`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codecs" })
  codecs?: VideoRoomSummaryEnumCodecEnum[];

  /**
   * Actual number of concurrent participants.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "concurrent_participants" })
  concurrentParticipants?: number;

  /**
   * Creation time of the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "create_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "created_method" })
  createdMethod?: VideoRoomSummaryEnumCreatedMethodEnum;

  /**
   * Total room duration from create time to end time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration_sec" })
  durationSec?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "edge_location" })
  edgeLocation?: VideoRoomSummaryEnumEdgeLocationEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "end_reason" })
  endReason?: VideoRoomSummaryEnumEndReasonEnum;

  /**
   * End time for the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  /**
   * Room subresources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * Maximum number of participants allowed in the room at the same time allowed by the application settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_concurrent_participants" })
  maxConcurrentParticipants?: number;

  /**
   * Max number of total participants allowed by the application settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_participants" })
  maxParticipants?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "media_region" })
  mediaRegion?: VideoRoomSummaryEnumTwilioRealmEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "processing_state" })
  processingState?: VideoRoomSummaryEnumProcessingStateEnum;

  /**
   * Boolean indicating if recording is enabled for the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_enabled" })
  recordingEnabled?: boolean;

  /**
   * Room friendly name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "room_name" })
  roomName?: string;

  /**
   * Unique identifier for the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "room_sid" })
  roomSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "room_status" })
  roomStatus?: VideoRoomSummaryEnumRoomStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "room_type" })
  roomType?: VideoRoomSummaryEnumRoomTypeEnum;

  /**
   * Webhook provided for status callbacks.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_callback" })
  statusCallback?: string;

  /**
   * HTTP method provided for status callback URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_callback_method" })
  statusCallbackMethod?: InsightsV1VideoRoomSummaryStatusCallbackMethodEnum;

  /**
   * Combined amount of participant time in the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_participant_duration_sec" })
  totalParticipantDurationSec?: number;

  /**
   * Combined amount of recorded seconds for participants in the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_recording_duration_sec" })
  totalRecordingDurationSec?: number;

  /**
   * Unique number of participant identities.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unique_participant_identities" })
  uniqueParticipantIdentities?: number;

  /**
   * Number of participants. May include duplicate identities for participants who left and rejoined.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unique_participants" })
  uniqueParticipants?: number;

  /**
   * URL for the room resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
