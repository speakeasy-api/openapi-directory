"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNetworkApplianceSingleLanResponse = exports.GetNetworkApplianceSingleLan200ApplicationJSON = exports.GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp = exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6 = exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments = exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin = exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum = exports.GetNetworkApplianceSingleLanRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetNetworkApplianceSingleLanRequest = /** @class */ (function (_super) {
    __extends(GetNetworkApplianceSingleLanRequest, _super);
    function GetNetworkApplianceSingleLanRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], GetNetworkApplianceSingleLanRequest.prototype, "networkId", void 0);
    return GetNetworkApplianceSingleLanRequest;
}(utils_1.SpeakeasyBase));
exports.GetNetworkApplianceSingleLanRequest = GetNetworkApplianceSingleLanRequest;
/**
 * Type of the origin
 */
var GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum;
(function (GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum) {
    GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum["Independent"] = "independent";
    GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum["Internet"] = "internet";
})(GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum = exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum || (exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOriginTypeEnum = {}));
/**
 * The origin of the prefix
 */
var GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin = /** @class */ (function (_super) {
    __extends(GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin, _super);
    function GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "interfaces" }),
        __metadata("design:type", Array)
    ], GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin.prototype, "interfaces", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin.prototype, "type", void 0);
    return GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin;
}(utils_1.SpeakeasyBase));
exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin = GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin;
var GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments = /** @class */ (function (_super) {
    __extends(GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments, _super);
    function GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autonomous" }),
        __metadata("design:type", Boolean)
    ], GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments.prototype, "autonomous", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "origin" }),
        (0, class_transformer_1.Type)(function () {
            return GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin;
        }),
        __metadata("design:type", GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignmentsOrigin)
    ], GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments.prototype, "origin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "staticApplianceIp6" }),
        __metadata("design:type", String)
    ], GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments.prototype, "staticApplianceIp6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "staticPrefix" }),
        __metadata("design:type", String)
    ], GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments.prototype, "staticPrefix", void 0);
    return GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments;
}(utils_1.SpeakeasyBase));
exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments = GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments;
/**
 * IPv6 configuration on the single LAN
 */
var GetNetworkApplianceSingleLan200ApplicationJSONIpv6 = /** @class */ (function (_super) {
    __extends(GetNetworkApplianceSingleLan200ApplicationJSONIpv6, _super);
    function GetNetworkApplianceSingleLan200ApplicationJSONIpv6() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], GetNetworkApplianceSingleLan200ApplicationJSONIpv6.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments,
        }),
        (0, class_transformer_1.Expose)({ name: "prefixAssignments" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkApplianceSingleLan200ApplicationJSONIpv6PrefixAssignments; }),
        __metadata("design:type", Array)
    ], GetNetworkApplianceSingleLan200ApplicationJSONIpv6.prototype, "prefixAssignments", void 0);
    return GetNetworkApplianceSingleLan200ApplicationJSONIpv6;
}(utils_1.SpeakeasyBase));
exports.GetNetworkApplianceSingleLan200ApplicationJSONIpv6 = GetNetworkApplianceSingleLan200ApplicationJSONIpv6;
/**
 * Mandatory DHCP will enforce that clients connecting to this single LAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
 */
var GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp = /** @class */ (function (_super) {
    __extends(GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp, _super);
    function GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp.prototype, "enabled", void 0);
    return GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp;
}(utils_1.SpeakeasyBase));
exports.GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp = GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp;
/**
 * Successful operation
 */
var GetNetworkApplianceSingleLan200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetNetworkApplianceSingleLan200ApplicationJSON, _super);
    function GetNetworkApplianceSingleLan200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "applianceIp" }),
        __metadata("design:type", String)
    ], GetNetworkApplianceSingleLan200ApplicationJSON.prototype, "applianceIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv6" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkApplianceSingleLan200ApplicationJSONIpv6; }),
        __metadata("design:type", GetNetworkApplianceSingleLan200ApplicationJSONIpv6)
    ], GetNetworkApplianceSingleLan200ApplicationJSON.prototype, "ipv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mandatoryDhcp" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp; }),
        __metadata("design:type", GetNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp)
    ], GetNetworkApplianceSingleLan200ApplicationJSON.prototype, "mandatoryDhcp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subnet" }),
        __metadata("design:type", String)
    ], GetNetworkApplianceSingleLan200ApplicationJSON.prototype, "subnet", void 0);
    return GetNetworkApplianceSingleLan200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetNetworkApplianceSingleLan200ApplicationJSON = GetNetworkApplianceSingleLan200ApplicationJSON;
var GetNetworkApplianceSingleLanResponse = /** @class */ (function (_super) {
    __extends(GetNetworkApplianceSingleLanResponse, _super);
    function GetNetworkApplianceSingleLanResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetNetworkApplianceSingleLanResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetNetworkApplianceSingleLanResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetNetworkApplianceSingleLanResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetNetworkApplianceSingleLan200ApplicationJSON)
    ], GetNetworkApplianceSingleLanResponse.prototype, "getNetworkApplianceSingleLan200ApplicationJSONObject", void 0);
    return GetNetworkApplianceSingleLanResponse;
}(utils_1.SpeakeasyBase));
exports.GetNetworkApplianceSingleLanResponse = GetNetworkApplianceSingleLanResponse;
