"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lensupgradesummary as shared_lensupgradesummary
from ..shared import notificationtype_enum as shared_notificationtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NotificationSummary:
    r"""A notification summary return object."""
    
    lens_upgrade_summary: Optional[shared_lensupgradesummary.LensUpgradeSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LensUpgradeSummary'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_notificationtype_enum.NotificationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    