/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LoyaltyEventFilter - The filtering criteria. If the request specifies multiple filters, 
 * the endpoint uses a logical AND to evaluate them.
 */
public class LoyaltyEventFilter {
    /**
     * Filter events by date time range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_time_filter")
    public LoyaltyEventDateTimeFilter dateTimeFilter;

    public LoyaltyEventFilter withDateTimeFilter(LoyaltyEventDateTimeFilter dateTimeFilter) {
        this.dateTimeFilter = dateTimeFilter;
        return this;
    }
    
    /**
     * Filter events by location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_filter")
    public LoyaltyEventLocationFilter locationFilter;

    public LoyaltyEventFilter withLocationFilter(LoyaltyEventLocationFilter locationFilter) {
        this.locationFilter = locationFilter;
        return this;
    }
    
    /**
     * Filter events by loyalty account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loyalty_account_filter")
    public LoyaltyEventLoyaltyAccountFilter loyaltyAccountFilter;

    public LoyaltyEventFilter withLoyaltyAccountFilter(LoyaltyEventLoyaltyAccountFilter loyaltyAccountFilter) {
        this.loyaltyAccountFilter = loyaltyAccountFilter;
        return this;
    }
    
    /**
     * Filter events by the order associated with the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_filter")
    public LoyaltyEventOrderFilter orderFilter;

    public LoyaltyEventFilter withOrderFilter(LoyaltyEventOrderFilter orderFilter) {
        this.orderFilter = orderFilter;
        return this;
    }
    
    /**
     * Filter events by event type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type_filter")
    public LoyaltyEventTypeFilter typeFilter;

    public LoyaltyEventFilter withTypeFilter(LoyaltyEventTypeFilter typeFilter) {
        this.typeFilter = typeFilter;
        return this;
    }
    
    public LoyaltyEventFilter(){}
}
