// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VolumeTypeEnum string

const (
	VolumeTypeEnumIo1      VolumeTypeEnum = "io1"
	VolumeTypeEnumIo2      VolumeTypeEnum = "io2"
	VolumeTypeEnumGp3      VolumeTypeEnum = "gp3"
	VolumeTypeEnumGp2      VolumeTypeEnum = "gp2"
	VolumeTypeEnumSt1      VolumeTypeEnum = "st1"
	VolumeTypeEnumSc1      VolumeTypeEnum = "sc1"
	VolumeTypeEnumStandard VolumeTypeEnum = "standard"
)

func (e VolumeTypeEnum) ToPointer() *VolumeTypeEnum {
	return &e
}

func (e *VolumeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "io1":
		fallthrough
	case "io2":
		fallthrough
	case "gp3":
		fallthrough
	case "gp2":
		fallthrough
	case "st1":
		fallthrough
	case "sc1":
		fallthrough
	case "standard":
		*e = VolumeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VolumeTypeEnum: %v", v)
	}
}
