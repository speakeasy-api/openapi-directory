/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetPsd2RegistrationsIdPsd2registrationLogsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_psd2registration",
  })
  idPsd2registration: number;

  /**
   * limit number of results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * maximum (inclusive) date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max_date;dateTimeFormat=YYYY-MM-DD",
  })
  maxDate?: Date;

  /**
   * minimal (inclusive) date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min_date;dateTimeFormat=YYYY-MM-DD",
  })
  minDate?: Date;

  /**
   * offset of first result
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;
}

/**
 * psd2registrationlogs
 */
export class GetPsd2RegistrationsIdPsd2registrationLogs200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Psd2RegistrationLog })
  @Expose({ name: "psd2registrationlogs" })
  @Type(() => shared.Psd2RegistrationLog)
  psd2registrationlogs: shared.Psd2RegistrationLog[];

  /**
   * total number of results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class GetPsd2RegistrationsIdPsd2registrationLogsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * psd2registrationlogs
   */
  @SpeakeasyMetadata()
  getPsd2RegistrationsIdPsd2registrationLogs200ApplicationJSONObject?: GetPsd2RegistrationsIdPsd2registrationLogs200ApplicationJSON;
}
