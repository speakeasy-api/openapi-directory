// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ContentMatcherMatcherEnum - The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
type ContentMatcherMatcherEnum string

const (
	ContentMatcherMatcherEnumContentMatcherOptionUnspecified ContentMatcherMatcherEnum = "CONTENT_MATCHER_OPTION_UNSPECIFIED"
	ContentMatcherMatcherEnumContainsString                  ContentMatcherMatcherEnum = "CONTAINS_STRING"
	ContentMatcherMatcherEnumNotContainsString               ContentMatcherMatcherEnum = "NOT_CONTAINS_STRING"
	ContentMatcherMatcherEnumMatchesRegex                    ContentMatcherMatcherEnum = "MATCHES_REGEX"
	ContentMatcherMatcherEnumNotMatchesRegex                 ContentMatcherMatcherEnum = "NOT_MATCHES_REGEX"
	ContentMatcherMatcherEnumMatchesJSONPath                 ContentMatcherMatcherEnum = "MATCHES_JSON_PATH"
	ContentMatcherMatcherEnumNotMatchesJSONPath              ContentMatcherMatcherEnum = "NOT_MATCHES_JSON_PATH"
)

func (e ContentMatcherMatcherEnum) ToPointer() *ContentMatcherMatcherEnum {
	return &e
}

func (e *ContentMatcherMatcherEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONTENT_MATCHER_OPTION_UNSPECIFIED":
		fallthrough
	case "CONTAINS_STRING":
		fallthrough
	case "NOT_CONTAINS_STRING":
		fallthrough
	case "MATCHES_REGEX":
		fallthrough
	case "NOT_MATCHES_REGEX":
		fallthrough
	case "MATCHES_JSON_PATH":
		fallthrough
	case "NOT_MATCHES_JSON_PATH":
		*e = ContentMatcherMatcherEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContentMatcherMatcherEnum: %v", v)
	}
}

// ContentMatcher - Optional. Used to perform content matching. This allows matching based on substrings and regular expressions, together with their negations. Only the first 4 MB of an HTTP or HTTPS check's response (and the first 1 MB of a TCP check's response) are examined for purposes of content matching.
type ContentMatcher struct {
	// String, regex or JSON content to match. Maximum 1024 bytes. An empty content string indicates no content matching is to be performed.
	Content *string `json:"content,omitempty"`
	// Information needed to perform a JSONPath content match. Used for ContentMatcherOption::MATCHES_JSON_PATH and ContentMatcherOption::NOT_MATCHES_JSON_PATH.
	JSONPathMatcher *JSONPathMatcher `json:"jsonPathMatcher,omitempty"`
	// The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
	Matcher *ContentMatcherMatcherEnum `json:"matcher,omitempty"`
}
