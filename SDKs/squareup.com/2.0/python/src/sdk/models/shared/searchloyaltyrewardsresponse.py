"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import error as shared_error
from ..shared import loyaltyreward as shared_loyaltyreward
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchLoyaltyRewardsResponse:
    r"""A response that includes the loyalty rewards satisfying the search criteria."""
    
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cursor'), 'exclude': lambda f: f is None }})
    r"""The pagination cursor to be used in a subsequent
    request. If empty, this is the final response.
    """  
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""Any errors that occurred during the request."""  
    rewards: Optional[list[shared_loyaltyreward.LoyaltyReward]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rewards'), 'exclude': lambda f: f is None }})
    r"""The loyalty rewards that satisfy the search criteria.
    These are returned in descending order by `updated_at`.
    """  
    