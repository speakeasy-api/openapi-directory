"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import privatetext as shared_privatetext
from ..shared import privateuri as shared_privateuri
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UploadPrivateDataRequest:
    r"""Request for sending user private Text or URI by the Issuer."""
    
    issuer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issuerId'), 'exclude': lambda f: f is None }})
    r"""The ID of the issuer sending the data."""  
    text: Optional[shared_privatetext.PrivateText] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""Private data for TextModule. This data will be rendered as a TextModule for a pass."""  
    uri: Optional[shared_privateuri.PrivateURI] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})
    r"""Private data for LinkModule. This data will be rendered as the LinkModule for a pass."""  
    