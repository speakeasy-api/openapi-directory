/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SubscriptionDeferralInfo - A SubscriptionDeferralInfo contains the data needed to defer a subscription purchase to a future expiry time.
 */
public class SubscriptionDeferralInfo {
    /**
     * The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("desiredExpiryTimeMillis")
    public String desiredExpiryTimeMillis;
    public SubscriptionDeferralInfo withDesiredExpiryTimeMillis(String desiredExpiryTimeMillis) {
        this.desiredExpiryTimeMillis = desiredExpiryTimeMillis;
        return this;
    }
    
    /**
     * The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expectedExpiryTimeMillis")
    public String expectedExpiryTimeMillis;
    public SubscriptionDeferralInfo withExpectedExpiryTimeMillis(String expectedExpiryTimeMillis) {
        this.expectedExpiryTimeMillis = expectedExpiryTimeMillis;
        return this;
    }
    
}
