/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * VolumeGroupDetail - Return details about the Volume Group.
 */
public class VolumeGroupDetail {
    @JsonProperty("blackoutWindowStatus")
    public BlackoutWindowStatus blackoutWindowStatus;

    public VolumeGroupDetail withBlackoutWindowStatus(BlackoutWindowStatus blackoutWindowStatus) {
        this.blackoutWindowStatus = blackoutWindowStatus;
        return this;
    }
    
    @JsonProperty("blackoutWindows")
    public BlackoutWindows blackoutWindows;

    public VolumeGroupDetail withBlackoutWindows(BlackoutWindows blackoutWindows) {
        this.blackoutWindows = blackoutWindows;
        return this;
    }
    
    /**
     * The ID of the SLA Domain configured directly on the Rubrik object.
     */
    @JsonProperty("configuredSlaDomainId")
    public String configuredSlaDomainId;

    public VolumeGroupDetail withConfiguredSlaDomainId(String configuredSlaDomainId) {
        this.configuredSlaDomainId = configuredSlaDomainId;
        return this;
    }
    
    /**
     * The name of the SLA Domain configured directly on the Rubrik object.
     */
    @JsonProperty("configuredSlaDomainName")
    public String configuredSlaDomainName;

    public VolumeGroupDetail withConfiguredSlaDomainName(String configuredSlaDomainName) {
        this.configuredSlaDomainName = configuredSlaDomainName;
        return this;
    }
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuredSlaDomainType")
    public ConfiguredSlaTypeEnum configuredSlaDomainType;

    public VolumeGroupDetail withConfiguredSlaDomainType(ConfiguredSlaTypeEnum configuredSlaDomainType) {
        this.configuredSlaDomainType = configuredSlaDomainType;
        return this;
    }
    
    /**
     * The ID of the SLA Domain that controls the protection of the Rubrik object.
     */
    @JsonProperty("effectiveSlaDomainId")
    public String effectiveSlaDomainId;

    public VolumeGroupDetail withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * The name of the SLA Domain that controls the protection of the Rubrik object.
     */
    @JsonProperty("effectiveSlaDomainName")
    public String effectiveSlaDomainName;

    public VolumeGroupDetail withEffectiveSlaDomainName(String effectiveSlaDomainName) {
        this.effectiveSlaDomainName = effectiveSlaDomainName;
        return this;
    }
    
    /**
     * Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaDomainPolarisManagedId")
    public String effectiveSlaDomainPolarisManagedId;

    public VolumeGroupDetail withEffectiveSlaDomainPolarisManagedId(String effectiveSlaDomainPolarisManagedId) {
        this.effectiveSlaDomainPolarisManagedId = effectiveSlaDomainPolarisManagedId;
        return this;
    }
    
    /**
     * The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaSourceObjectId")
    public String effectiveSlaSourceObjectId;

    public VolumeGroupDetail withEffectiveSlaSourceObjectId(String effectiveSlaSourceObjectId) {
        this.effectiveSlaSourceObjectId = effectiveSlaSourceObjectId;
        return this;
    }
    
    /**
     * The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaSourceObjectName")
    public String effectiveSlaSourceObjectName;

    public VolumeGroupDetail withEffectiveSlaSourceObjectName(String effectiveSlaSourceObjectName) {
        this.effectiveSlaSourceObjectName = effectiveSlaSourceObjectName;
        return this;
    }
    
    /**
     * Specifies whether the Volume Group is set to take a full snapshot for the next backup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forceFull")
    public Boolean forceFull;

    public VolumeGroupDetail withForceFull(Boolean forceFull) {
        this.forceFull = forceFull;
        return this;
    }
    
    /**
     * The unique ID of the host that contains the Volume Group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostId")
    public String hostId;

    public VolumeGroupDetail withHostId(String hostId) {
        this.hostId = hostId;
        return this;
    }
    
    /**
     * The name of the host that contains the Volume Group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostname")
    public String hostname;

    public VolumeGroupDetail withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * The ID of the Rubrik object.
     */
    @JsonProperty("id")
    public String id;

    public VolumeGroupDetail withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isConfiguredSlaDomainRetentionLocked")
    public Boolean isConfiguredSlaDomainRetentionLocked;

    public VolumeGroupDetail withIsConfiguredSlaDomainRetentionLocked(Boolean isConfiguredSlaDomainRetentionLocked) {
        this.isConfiguredSlaDomainRetentionLocked = isConfiguredSlaDomainRetentionLocked;
        return this;
    }
    
    /**
     * Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEffectiveSlaDomainRetentionLocked")
    public Boolean isEffectiveSlaDomainRetentionLocked;

    public VolumeGroupDetail withIsEffectiveSlaDomainRetentionLocked(Boolean isEffectiveSlaDomainRetentionLocked) {
        this.isEffectiveSlaDomainRetentionLocked = isEffectiveSlaDomainRetentionLocked;
        return this;
    }
    
    /**
     * Indicates whether backup, archival, and replication are paused for this Volume Group.
     */
    @JsonProperty("isPaused")
    public Boolean isPaused;

    public VolumeGroupDetail withIsPaused(Boolean isPaused) {
        this.isPaused = isPaused;
        return this;
    }
    
    /**
     * Specifies whether the Volume Group is accessible on the Rubrik cluster.
     */
    @JsonProperty("isRelic")
    public Boolean isRelic;

    public VolumeGroupDetail withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * The name of the Rubrik object.
     */
    @JsonProperty("name")
    public String name;

    public VolumeGroupDetail withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Specifies whether the Volume Group needs to be migrated in order to use the fast VHDX builder. This flag is set only when the Volume Group's last backup job failed due to an error during data fetch, and the backup job did not use the fast VHDX builder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("needsMigration")
    public Boolean needsMigration;

    public VolumeGroupDetail withNeedsMigration(Boolean needsMigration) {
        this.needsMigration = needsMigration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pendingSlaDomain")
    public ManagedObjectPendingSlaInfo pendingSlaDomain;

    public VolumeGroupDetail withPendingSlaDomain(ManagedObjectPendingSlaInfo pendingSlaDomain) {
        this.pendingSlaDomain = pendingSlaDomain;
        return this;
    }
    
    /**
     * The ID of the cluster that manages the Rubrik object.
     */
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public VolumeGroupDetail withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * The ID of the SLA Domain whose retention policy is in use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retentionSlaDomainId")
    public String retentionSlaDomainId;

    public VolumeGroupDetail withRetentionSlaDomainId(String retentionSlaDomainId) {
        this.retentionSlaDomainId = retentionSlaDomainId;
        return this;
    }
    
    /**
     * The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
     */
    @JsonProperty("slaAssignment")
    public VolumeGroupDetailSlaAssignmentEnum slaAssignment;

    public VolumeGroupDetail withSlaAssignment(VolumeGroupDetailSlaAssignmentEnum slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * The UTC time when the SLA Domain was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("slaLastUpdateTime")
    public OffsetDateTime slaLastUpdateTime;

    public VolumeGroupDetail withSlaLastUpdateTime(OffsetDateTime slaLastUpdateTime) {
        this.slaLastUpdateTime = slaLastUpdateTime;
        return this;
    }
    
    /**
     * Configuration details for the volumes in the Volume Group.
     */
    @JsonProperty("volumes")
    public HostVolumeSummary[] volumes;

    public VolumeGroupDetail withVolumes(HostVolumeSummary[] volumes) {
        this.volumes = volumes;
        return this;
    }
    
    public VolumeGroupDetail(@JsonProperty("blackoutWindowStatus") BlackoutWindowStatus blackoutWindowStatus, @JsonProperty("blackoutWindows") BlackoutWindows blackoutWindows, @JsonProperty("configuredSlaDomainId") String configuredSlaDomainId, @JsonProperty("configuredSlaDomainName") String configuredSlaDomainName, @JsonProperty("effectiveSlaDomainId") String effectiveSlaDomainId, @JsonProperty("effectiveSlaDomainName") String effectiveSlaDomainName, @JsonProperty("id") String id, @JsonProperty("isPaused") Boolean isPaused, @JsonProperty("isRelic") Boolean isRelic, @JsonProperty("name") String name, @JsonProperty("primaryClusterId") String primaryClusterId, @JsonProperty("slaAssignment") VolumeGroupDetailSlaAssignmentEnum slaAssignment, @JsonProperty("volumes") HostVolumeSummary[] volumes) {
        this.blackoutWindowStatus = blackoutWindowStatus;
        this.blackoutWindows = blackoutWindows;
        this.configuredSlaDomainId = configuredSlaDomainId;
        this.configuredSlaDomainName = configuredSlaDomainName;
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        this.effectiveSlaDomainName = effectiveSlaDomainName;
        this.id = id;
        this.isPaused = isPaused;
        this.isRelic = isRelic;
        this.name = name;
        this.primaryClusterId = primaryClusterId;
        this.slaAssignment = slaAssignment;
        this.volumes = volumes;
  }
}
