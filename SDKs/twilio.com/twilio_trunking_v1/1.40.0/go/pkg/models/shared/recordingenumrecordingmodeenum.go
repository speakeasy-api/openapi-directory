// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RecordingEnumRecordingModeEnum string

const (
	RecordingEnumRecordingModeEnumDoNotRecord           RecordingEnumRecordingModeEnum = "do-not-record"
	RecordingEnumRecordingModeEnumRecordFromRinging     RecordingEnumRecordingModeEnum = "record-from-ringing"
	RecordingEnumRecordingModeEnumRecordFromAnswer      RecordingEnumRecordingModeEnum = "record-from-answer"
	RecordingEnumRecordingModeEnumRecordFromRingingDual RecordingEnumRecordingModeEnum = "record-from-ringing-dual"
	RecordingEnumRecordingModeEnumRecordFromAnswerDual  RecordingEnumRecordingModeEnum = "record-from-answer-dual"
)

func (e *RecordingEnumRecordingModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "do-not-record":
		fallthrough
	case "record-from-ringing":
		fallthrough
	case "record-from-answer":
		fallthrough
	case "record-from-ringing-dual":
		fallthrough
	case "record-from-answer-dual":
		*e = RecordingEnumRecordingModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RecordingEnumRecordingModeEnum: %s", s)
	}
}
