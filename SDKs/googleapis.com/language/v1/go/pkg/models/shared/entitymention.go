// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EntityMentionTypeEnum - The type of the entity mention.
type EntityMentionTypeEnum string

const (
	EntityMentionTypeEnumTypeUnknown EntityMentionTypeEnum = "TYPE_UNKNOWN"
	EntityMentionTypeEnumProper      EntityMentionTypeEnum = "PROPER"
	EntityMentionTypeEnumCommon      EntityMentionTypeEnum = "COMMON"
)

func (e *EntityMentionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNKNOWN":
		fallthrough
	case "PROPER":
		fallthrough
	case "COMMON":
		*e = EntityMentionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityMentionTypeEnum: %s", s)
	}
}

// EntityMention - Represents a mention for an entity in the text. Currently, proper noun mentions are supported.
type EntityMention struct {
	// Represents the feeling associated with the entire text or entities in the text.
	Sentiment *Sentiment `json:"sentiment,omitempty"`
	// Represents an output piece of text.
	Text *TextSpan `json:"text,omitempty"`
	// The type of the entity mention.
	Type *EntityMentionTypeEnum `json:"type,omitempty"`
}
