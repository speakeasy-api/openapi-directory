/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum ThreeContentTypeEnum {
  AudioL16RateEqual8000 = "audio/l16;rate=8000",
  AudioL16RateEqual16000 = "audio/l16;rate=16000",
}

/**
 * Details of the Websocket you want to connect to
 */
export class ThreeHeaders extends SpeakeasyBase {
  /**
   * This is an example header. You can provide any headers you may need
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customer_id" })
  customerId?: string;
}

/**
 * Connect to a Websocket
 */
export class Three extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "content-type" })
  contentType: ThreeContentTypeEnum;

  /**
   * Details of the Websocket you want to connect to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  @Type(() => ThreeHeaders)
  headers?: ThreeHeaders;

  /**
   * The type of connection. Must be `websocket`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}
