"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import crawlstatisticstime as shared_crawlstatisticstime
from ..shared import defaultpayload as shared_defaultpayload
from enum import Enum
from typing import Optional

class GetCrawlStatisticsByFrequencyFrequencyEnum(str, Enum):
    r"""Aggregation frequency"""
    ONEMN = '1mn'
    FIVEMN = '5mn'
    SIXTYMN = '60mn'


@dataclasses.dataclass
class GetCrawlStatisticsByFrequencyRequest:
    
    analysis_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'analysis_slug', 'style': 'simple', 'explode': False }})
    r"""Analysis' identifier"""  
    frequency: GetCrawlStatisticsByFrequencyFrequencyEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'frequency', 'style': 'form', 'explode': True }})
    r"""Aggregation frequency"""  
    project_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project_slug', 'style': 'simple', 'explode': False }})
    r"""Project's identifier"""  
    username: str = dataclasses.field(metadata={'path_param': { 'field_name': 'username', 'style': 'simple', 'explode': False }})
    r"""User's identifier"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""max number of elements to retrieve"""  
    

@dataclasses.dataclass
class GetCrawlStatisticsByFrequencyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    crawl_statistics_time: Optional[shared_crawlstatisticstime.CrawlStatisticsTime] = dataclasses.field(default=None)
    r"""Successful operation"""  
    default_payload: Optional[shared_defaultpayload.DefaultPayload] = dataclasses.field(default=None)
    r"""error payload"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    