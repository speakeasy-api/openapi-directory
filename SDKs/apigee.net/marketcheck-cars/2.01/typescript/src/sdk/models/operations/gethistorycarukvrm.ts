/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetHistoryCarUkVrmRequest extends SpeakeasyBase {
  /**
   * The API Authentication Key. Mandatory with all API calls.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=api_key",
  })
  apiKey?: string;

  /**
   * Flag to indicate whether to include duplicate historical records as well in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include_duplicates",
  })
  includeDuplicates?: boolean;

  /**
   * Page number to fetch the results for the given criteria. Default is 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Sort order - asc or desc. Default sort order is asc
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_order",
  })
  sortOrder?: shared.SortOrderEnum;

  /**
   * The VRM to identify the car.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=vrm" })
  vrm: string;
}

export class GetHistoryCarUkVrmResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Online listing history for the given vrm
   */
  @SpeakeasyMetadata({ elemType: shared.HistoricalListing })
  historicalListings?: shared.HistoricalListing[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
