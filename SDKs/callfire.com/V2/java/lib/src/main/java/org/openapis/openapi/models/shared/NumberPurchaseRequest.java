/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NumberPurchaseRequest - Request object is used to order a local or toll-free numbers
 */
public class NumberPurchaseRequest {
    /**
     * City of requested numbers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public NumberPurchaseRequest withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Total count of local numbers requested
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localCount")
    public Integer localCount;
    public NumberPurchaseRequest withLocalCount(Integer localCount) {
        this.localCount = localCount;
        return this;
    }
    
    /**
     * A list of phone numbers in E.164 format (11-digit) to buy. Example: 12132000384
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numbers")
    public String[] numbers;
    public NumberPurchaseRequest withNumbers(String[] numbers) {
        this.numbers = numbers;
        return this;
    }
    
    /**
     * Country prefix of requested numbers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prefix")
    public String prefix;
    public NumberPurchaseRequest withPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promo")
    public String promo;
    public NumberPurchaseRequest withPromo(String promo) {
        this.promo = promo;
        return this;
    }
    
    /**
     * A two-letter state code of requested numbers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public NumberPurchaseRequest withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Total count of toll-free numbers requested
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tollFreeCount")
    public Integer tollFreeCount;
    public NumberPurchaseRequest withTollFreeCount(Integer tollFreeCount) {
        this.tollFreeCount = tollFreeCount;
        return this;
    }
    
    /**
     * A five-digit Zip code of requested numbers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zipcode")
    public String zipcode;
    public NumberPurchaseRequest withZipcode(String zipcode) {
        this.zipcode = zipcode;
        return this;
    }
    
}
