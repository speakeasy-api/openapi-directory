// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// KYCCheckStatusDataStatusEnum - The status of the check.
//
// Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**, **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.
type KYCCheckStatusDataStatusEnum string

const (
	KYCCheckStatusDataStatusEnumAwaitingData      KYCCheckStatusDataStatusEnum = "AWAITING_DATA"
	KYCCheckStatusDataStatusEnumDataProvided      KYCCheckStatusDataStatusEnum = "DATA_PROVIDED"
	KYCCheckStatusDataStatusEnumFailed            KYCCheckStatusDataStatusEnum = "FAILED"
	KYCCheckStatusDataStatusEnumInvalidData       KYCCheckStatusDataStatusEnum = "INVALID_DATA"
	KYCCheckStatusDataStatusEnumPassed            KYCCheckStatusDataStatusEnum = "PASSED"
	KYCCheckStatusDataStatusEnumPending           KYCCheckStatusDataStatusEnum = "PENDING"
	KYCCheckStatusDataStatusEnumPendingReview     KYCCheckStatusDataStatusEnum = "PENDING_REVIEW"
	KYCCheckStatusDataStatusEnumRetryLimitReached KYCCheckStatusDataStatusEnum = "RETRY_LIMIT_REACHED"
	KYCCheckStatusDataStatusEnumUnchecked         KYCCheckStatusDataStatusEnum = "UNCHECKED"
)

func (e *KYCCheckStatusDataStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWAITING_DATA":
		fallthrough
	case "DATA_PROVIDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "INVALID_DATA":
		fallthrough
	case "PASSED":
		fallthrough
	case "PENDING":
		fallthrough
	case "PENDING_REVIEW":
		fallthrough
	case "RETRY_LIMIT_REACHED":
		fallthrough
	case "UNCHECKED":
		*e = KYCCheckStatusDataStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for KYCCheckStatusDataStatusEnum: %s", s)
	}
}

// KYCCheckStatusDataTypeEnum - The type of check.
//
// Possible values:
//
//   - **BANK_ACCOUNT_VERIFICATION**: Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in v6 and later.
//
//   - **COMPANY_VERIFICATION**
//
//   - **CARD_VERIFICATION**
//
// * **IDENTITY_VERIFICATION**
//
// * **LEGAL_ARRANGEMENT_VERIFICATION**
//
// * **NONPROFIT_VERIFICATION**
//
//   - **PASSPORT_VERIFICATION**
//
// * **PAYOUT_METHOD_VERIFICATION**: Used in v6 and later.
//
// * **PCI_VERIFICATION**
type KYCCheckStatusDataTypeEnum string

const (
	KYCCheckStatusDataTypeEnumBankAccountVerification      KYCCheckStatusDataTypeEnum = "BANK_ACCOUNT_VERIFICATION"
	KYCCheckStatusDataTypeEnumCardVerification             KYCCheckStatusDataTypeEnum = "CARD_VERIFICATION"
	KYCCheckStatusDataTypeEnumCompanyVerification          KYCCheckStatusDataTypeEnum = "COMPANY_VERIFICATION"
	KYCCheckStatusDataTypeEnumIdentityVerification         KYCCheckStatusDataTypeEnum = "IDENTITY_VERIFICATION"
	KYCCheckStatusDataTypeEnumLegalArrangementVerification KYCCheckStatusDataTypeEnum = "LEGAL_ARRANGEMENT_VERIFICATION"
	KYCCheckStatusDataTypeEnumNonprofitVerification        KYCCheckStatusDataTypeEnum = "NONPROFIT_VERIFICATION"
	KYCCheckStatusDataTypeEnumPassportVerification         KYCCheckStatusDataTypeEnum = "PASSPORT_VERIFICATION"
	KYCCheckStatusDataTypeEnumPayoutMethodVerification     KYCCheckStatusDataTypeEnum = "PAYOUT_METHOD_VERIFICATION"
	KYCCheckStatusDataTypeEnumPciVerification              KYCCheckStatusDataTypeEnum = "PCI_VERIFICATION"
)

func (e *KYCCheckStatusDataTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BANK_ACCOUNT_VERIFICATION":
		fallthrough
	case "CARD_VERIFICATION":
		fallthrough
	case "COMPANY_VERIFICATION":
		fallthrough
	case "IDENTITY_VERIFICATION":
		fallthrough
	case "LEGAL_ARRANGEMENT_VERIFICATION":
		fallthrough
	case "NONPROFIT_VERIFICATION":
		fallthrough
	case "PASSPORT_VERIFICATION":
		fallthrough
	case "PAYOUT_METHOD_VERIFICATION":
		fallthrough
	case "PCI_VERIFICATION":
		*e = KYCCheckStatusDataTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for KYCCheckStatusDataTypeEnum: %s", s)
	}
}

type KYCCheckStatusData struct {
	// A list of the fields required for execution of the check.
	RequiredFields []string `json:"requiredFields,omitempty"`
	// The status of the check.
	//
	// Possible values: **AWAITING_DATA** , **DATA_PROVIDED**, **FAILED**, **INVALID_DATA**, **PASSED**, **PENDING**, **RETRY_LIMIT_REACHED**.
	Status  KYCCheckStatusDataStatusEnum `json:"status"`
	Summary *KYCCheckSummary             `json:"summary,omitempty"`
	// The type of check.
	//
	// Possible values:
	//
	//  * **BANK_ACCOUNT_VERIFICATION**: Used in v5 and earlier. Replaced by **PAYOUT_METHOD_VERIFICATION** in v6 and later.
	//
	//  * **COMPANY_VERIFICATION**
	//
	//   * **CARD_VERIFICATION**
	//
	// * **IDENTITY_VERIFICATION**
	//
	// * **LEGAL_ARRANGEMENT_VERIFICATION**
	//
	// * **NONPROFIT_VERIFICATION**
	//
	//  * **PASSPORT_VERIFICATION**
	//
	// * **PAYOUT_METHOD_VERIFICATION**: Used in v6 and later.
	//
	// * **PCI_VERIFICATION**
	Type KYCCheckStatusDataTypeEnum `json:"type"`
}
