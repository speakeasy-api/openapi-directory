/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDatacatalogV1StorageProperties - Details the properties of the underlying storage.
 */
public class GoogleCloudDatacatalogV1StorageProperties {
    /**
     * Patterns to identify a set of files for this fileset. Examples of a valid `file_pattern`: * `gs://bucket_name/dir/*`: matches all files in the `bucket_name/dir` directory * `gs://bucket_name/dir/**`: matches all files in the `bucket_name/dir` and all subdirectories recursively * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/* /b`: matches all files in `bucket_name` that match the `a/* /b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filePattern")
    public String[] filePattern;
    public GoogleCloudDatacatalogV1StorageProperties withFilePattern(String[] filePattern) {
        this.filePattern = filePattern;
        return this;
    }
    
    /**
     * File type in MIME format, for example, `text/plain`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileType")
    public String fileType;
    public GoogleCloudDatacatalogV1StorageProperties withFileType(String fileType) {
        this.fileType = fileType;
        return this;
    }
    
}
