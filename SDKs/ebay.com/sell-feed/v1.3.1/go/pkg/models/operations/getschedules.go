// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSchedulesSecurity struct {
	APIAuth shared.SchemeAPIAuth `security:"scheme,type=oauth2"`
}

type GetSchedulesQueryParams struct {
	// The feedType associated with the schedule.
	FeedType string `queryParam:"style=form,explode=true,name=feed_type"`
	// The maximum number of schedules that can be returned on each page of the paginated response. Use this parameter in conjunction with the offset parameter to control the pagination of the output. Note: This feature employs a zero-based list, where the first item in the list has an offset of 0. For example, if offset is set to 10 and limit is set to 10, the call retrieves schedules 11 thru 20 from the result set. If this parameter is omitted, the default value is used. Default: 10 Maximum: 500
	Limit *string `queryParam:"style=form,explode=true,name=limit"`
	// The number of schedules to skip in the result set before returning the first schedule in the paginated response. Combine offset with the limit query parameter to control the items returned in the response. For example, if you supply an offset of 0 and a limit of 10, the first page of the response contains the first 10 items from the complete list of items retrieved by the call. If offset is 10 and limit is 20, the first page of the response contains items 11-30 from the complete result set. If this query parameter is not set, the default value is used and the first page of records is returned. Default: 0
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
}

type GetSchedulesRequest struct {
	QueryParams GetSchedulesQueryParams
	Security    GetSchedulesSecurity
}

type GetSchedulesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	UserScheduleCollection *shared.UserScheduleCollection
}
