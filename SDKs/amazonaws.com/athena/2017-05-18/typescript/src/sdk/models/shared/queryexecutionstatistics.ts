/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResultReuseInformation } from "./resultreuseinformation";
import { Expose, Type } from "class-transformer";

/**
 * The amount of data scanned during the query execution and the amount of time that it took to execute, and the type of statement that was run.
 */
export class QueryExecutionStatistics extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataManifestLocation" })
  dataManifestLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataScannedInBytes" })
  dataScannedInBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EngineExecutionTimeInMillis" })
  engineExecutionTimeInMillis?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "QueryPlanningTimeInMillis" })
  queryPlanningTimeInMillis?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "QueryQueueTimeInMillis" })
  queryQueueTimeInMillis?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ResultReuseInformation" })
  @Type(() => ResultReuseInformation)
  resultReuseInformation?: ResultReuseInformation;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceProcessingTimeInMillis" })
  serviceProcessingTimeInMillis?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TotalExecutionTimeInMillis" })
  totalExecutionTimeInMillis?: number;
}
