// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PopupWindowPropertiesPositionTypeEnum - Popup window position either centered or at specific coordinate.
type PopupWindowPropertiesPositionTypeEnum string

const (
	PopupWindowPropertiesPositionTypeEnumCenter      PopupWindowPropertiesPositionTypeEnum = "CENTER"
	PopupWindowPropertiesPositionTypeEnumCoordinates PopupWindowPropertiesPositionTypeEnum = "COORDINATES"
)

func (e PopupWindowPropertiesPositionTypeEnum) ToPointer() *PopupWindowPropertiesPositionTypeEnum {
	return &e
}

func (e *PopupWindowPropertiesPositionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CENTER":
		fallthrough
	case "COORDINATES":
		*e = PopupWindowPropertiesPositionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PopupWindowPropertiesPositionTypeEnum: %v", v)
	}
}

// PopupWindowProperties - Popup Window Properties.
type PopupWindowProperties struct {
	// Represents the dimensions of ads, placements, creatives, or creative assets.
	Dimension *Size `json:"dimension,omitempty"`
	// Offset Position.
	Offset *OffsetPosition `json:"offset,omitempty"`
	// Popup window position either centered or at specific coordinate.
	PositionType *PopupWindowPropertiesPositionTypeEnum `json:"positionType,omitempty"`
	// Whether to display the browser address bar.
	ShowAddressBar *bool `json:"showAddressBar,omitempty"`
	// Whether to display the browser menu bar.
	ShowMenuBar *bool `json:"showMenuBar,omitempty"`
	// Whether to display the browser scroll bar.
	ShowScrollBar *bool `json:"showScrollBar,omitempty"`
	// Whether to display the browser status bar.
	ShowStatusBar *bool `json:"showStatusBar,omitempty"`
	// Whether to display the browser tool bar.
	ShowToolBar *bool `json:"showToolBar,omitempty"`
	// Title of popup window.
	Title *string `json:"title,omitempty"`
}
