// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTMonitorInstancesActionEnum
type POSTMonitorInstancesActionEnum string

const (
	POSTMonitorInstancesActionEnumMonitorInstances POSTMonitorInstancesActionEnum = "MonitorInstances"
)

func (e POSTMonitorInstancesActionEnum) ToPointer() *POSTMonitorInstancesActionEnum {
	return &e
}

func (e *POSTMonitorInstancesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MonitorInstances":
		*e = POSTMonitorInstancesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTMonitorInstancesActionEnum: %v", v)
	}
}

// POSTMonitorInstancesVersionEnum
type POSTMonitorInstancesVersionEnum string

const (
	POSTMonitorInstancesVersionEnumTwoThousandAndSixteen1115 POSTMonitorInstancesVersionEnum = "2016-11-15"
)

func (e POSTMonitorInstancesVersionEnum) ToPointer() *POSTMonitorInstancesVersionEnum {
	return &e
}

func (e *POSTMonitorInstancesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTMonitorInstancesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTMonitorInstancesVersionEnum: %v", v)
	}
}

type POSTMonitorInstancesRequest struct {
	Action            POSTMonitorInstancesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                          `request:"mediaType=text/xml"`
	Version           POSTMonitorInstancesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTMonitorInstancesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
