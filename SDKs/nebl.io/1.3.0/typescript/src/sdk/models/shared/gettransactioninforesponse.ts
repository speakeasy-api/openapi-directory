/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class GetTransactionInfoResponseVinPreviousOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "asm" })
  asm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hex" })
  hex?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reqSigs" })
  reqSigs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class GetTransactionInfoResponseVinScriptSig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "asm" })
  asm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hex" })
  hex?: string;
}

export class GetTransactionInfoResponseVinTokens extends SpeakeasyBase {
  /**
   * Whether the tokens are aggregatable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationPolicy" })
  aggregationPolicy?: string;

  /**
   * Number of tokens
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * Decimal places the token is divisible to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "divisibility" })
  divisibility?: number;

  /**
   * TXID the token was issued in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issueTxid" })
  issueTxid?: string;

  /**
   * Whether issuance of more tokens is locked
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockStatus" })
  lockStatus?: boolean;

  /**
   * ID of the token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokenId" })
  tokenId?: string;
}

export class GetTransactionInfoResponseVin extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "previousOutput" })
  @Type(() => GetTransactionInfoResponseVinPreviousOutput)
  previousOutput?: GetTransactionInfoResponseVinPreviousOutput;

  @SpeakeasyMetadata()
  @Expose({ name: "scriptSig" })
  @Type(() => GetTransactionInfoResponseVinScriptSig)
  scriptSig?: GetTransactionInfoResponseVinScriptSig;

  @SpeakeasyMetadata()
  @Expose({ name: "sequence" })
  sequence?: number;

  @SpeakeasyMetadata({ elemType: GetTransactionInfoResponseVinTokens })
  @Expose({ name: "tokens" })
  @Type(() => GetTransactionInfoResponseVinTokens)
  tokens?: GetTransactionInfoResponseVinTokens[];

  /**
   * TXID of the input
   */
  @SpeakeasyMetadata()
  @Expose({ name: "txid" })
  txid?: string;

  /**
   * Value of input in NEBL satoshi
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;

  /**
   * output index
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vout" })
  vout?: number;
}

export class GetTransactionInfoResponseVoutScriptPubKey extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "addresses" })
  addresses?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "asm" })
  asm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hex" })
  hex?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reqSigs" })
  reqSigs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class GetTransactionInfoResponseVoutTokens extends SpeakeasyBase {
  /**
   * Whether the tokens are aggregatable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationPolicy" })
  aggregationPolicy?: string;

  /**
   * Number of tokens
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * Decimal places the token is divisible to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "divisibility" })
  divisibility?: number;

  /**
   * TXID the token was issued in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issueTxid" })
  issueTxid?: string;

  /**
   * Whether issuance of more tokens is locked
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockStatus" })
  lockStatus?: boolean;

  /**
   * ID of the token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokenId" })
  tokenId?: string;
}

export class GetTransactionInfoResponseVout extends SpeakeasyBase {
  /**
   * Blockheight of this transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockheight" })
  blockheight?: number;

  /**
   * Output index
   */
  @SpeakeasyMetadata()
  @Expose({ name: "n" })
  n?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "scriptPubKey" })
  @Type(() => GetTransactionInfoResponseVoutScriptPubKey)
  scriptPubKey?: GetTransactionInfoResponseVoutScriptPubKey;

  @SpeakeasyMetadata({ elemType: GetTransactionInfoResponseVoutTokens })
  @Expose({ name: "tokens" })
  @Type(() => GetTransactionInfoResponseVoutTokens)
  tokens?: GetTransactionInfoResponseVoutTokens[];

  /**
   * Whether this output has now been used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "used" })
  used?: boolean;

  /**
   * Blockheight this output was used in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usedBlockheight" })
  usedBlockheight?: number;

  /**
   * TXID this output was used in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usedTxid" })
  usedTxid?: string;

  /**
   * Value of the output in NEBL satoshi
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * An object represending this transaction
 */
export class GetTransactionInfoResponse extends SpeakeasyBase {
  /**
   * Hash of the block this transaction is in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockhash" })
  blockhash?: string;

  /**
   * Block height of this transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockheight" })
  blockheight?: number;

  /**
   * Block time of this transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blocktime" })
  blocktime?: number;

  /**
   * Number of transaction confirmations
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confirmations" })
  confirmations?: number;

  /**
   * Total NEBL used as fee for this transcation in satoshis
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fee" })
  fee?: number;

  /**
   * Transaction in raw hex
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hex" })
  hex?: string;

  /**
   * Transaction locktime
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locktime" })
  locktime?: number;

  /**
   * Transaction time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time?: number;

  /**
   * Total NEBL sent in this transaction in satoshis
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalsent" })
  totalsent?: number;

  /**
   * TXID of transaction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "txid" })
  txid?: string;

  /**
   * Transaction version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;

  /**
   * Array of transaction inputs
   */
  @SpeakeasyMetadata({ elemType: GetTransactionInfoResponseVin })
  @Expose({ name: "vin" })
  @Type(() => GetTransactionInfoResponseVin)
  vin?: GetTransactionInfoResponseVin[];

  /**
   * Array of transaction outputs
   */
  @SpeakeasyMetadata({ elemType: GetTransactionInfoResponseVout })
  @Expose({ name: "vout" })
  @Type(() => GetTransactionInfoResponseVout)
  vout?: GetTransactionInfoResponseVout[];
}
