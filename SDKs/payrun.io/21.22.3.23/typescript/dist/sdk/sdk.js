"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var axios_1 = __importDefault(require("axios"));
var aeassessment_1 = require("./aeassessment");
var cis_1 = require("./cis");
var dpsmessage_1 = require("./dpsmessage");
var employee_1 = require("./employee");
var employer_1 = require("./employer");
var healthcheck_1 = require("./healthcheck");
var holidayscheme_1 = require("./holidayscheme");
var jobs_1 = require("./jobs");
var journalline_1 = require("./journalline");
var journals_1 = require("./journals");
var nominalcode_1 = require("./nominalcode");
var paycode_1 = require("./paycode");
var payinstruction_1 = require("./payinstruction");
var payline_1 = require("./payline");
var payrun_1 = require("./payrun");
var payschedule_1 = require("./payschedule");
var pension_1 = require("./pension");
var permission_1 = require("./permission");
var query_1 = require("./query");
var rti_1 = require("./rti");
var reference_1 = require("./reference");
var reportline_1 = require("./reportline");
var reportlineinstruction_1 = require("./reportlineinstruction");
var reports_1 = require("./reports");
var schemas_1 = require("./schemas");
var subcontractor_1 = require("./subcontractor");
var tagging_1 = require("./tagging");
var templates_1 = require("./templates");
var thirdpartytransaction_1 = require("./thirdpartytransaction");
var thirdpartytransmission_1 = require("./thirdpartytransmission");
var user_1 = require("./user");
exports.ServerList = [
    "https://api.test.payrun.io",
];
/* SDK Documentation: https://developer.test.payrun.io/docs - External Documents*/
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props.serverUrl) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient = (_b = props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.aeAssessment = new aeassessment_1.AeAssessment(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.cis = new cis_1.Cis(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.dpsMessage = new dpsmessage_1.DpsMessage(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.employee = new employee_1.Employee(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.employer = new employer_1.Employer(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.healthcheck = new healthcheck_1.Healthcheck(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.holidayScheme = new holidayscheme_1.HolidayScheme(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.jobs = new jobs_1.Jobs(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.journalLine = new journalline_1.JournalLine(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.journals = new journals_1.Journals(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.nominalCode = new nominalcode_1.NominalCode(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payCode = new paycode_1.PayCode(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payInstruction = new payinstruction_1.PayInstruction(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payLine = new payline_1.PayLine(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payRun = new payrun_1.PayRun(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paySchedule = new payschedule_1.PaySchedule(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.pension = new pension_1.Pension(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.permission = new permission_1.Permission(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.query = new query_1.Query(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.rti = new rti_1.Rti(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.reference = new reference_1.Reference(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.reportLine = new reportline_1.ReportLine(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.reportLineInstruction = new reportlineinstruction_1.ReportLineInstruction(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.reports = new reports_1.Reports(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.schemas = new schemas_1.Schemas(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.subContractor = new subcontractor_1.SubContractor(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.tagging = new tagging_1.Tagging(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.templates = new templates_1.Templates(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.thirdPartyTransaction = new thirdpartytransaction_1.ThirdPartyTransaction(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.thirdPartyTransmission = new thirdpartytransmission_1.ThirdPartyTransmission(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.user = new user_1.User(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
