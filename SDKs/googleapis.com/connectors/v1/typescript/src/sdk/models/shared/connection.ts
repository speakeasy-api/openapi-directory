/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthConfig } from "./authconfig";
import { ConfigVariable } from "./configvariable";
import { ConnectionStatus } from "./connectionstatus";
import { DestinationConfig } from "./destinationconfig";
import { LockConfig } from "./lockconfig";
import { NodeConfig } from "./nodeconfig";
import { SslConfig } from "./sslconfig";
import { Expose, Type } from "class-transformer";

/**
 * Connection represents an instance of connector.
 */
export class ConnectionInput extends SpeakeasyBase {
  /**
   * AuthConfig defines details of a authentication type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authConfig" })
  @Type(() => AuthConfig)
  authConfig?: AuthConfig;

  /**
   * Optional. Configuration for configuring the connection with an external system.
   */
  @SpeakeasyMetadata({ elemType: ConfigVariable })
  @Expose({ name: "configVariables" })
  @Type(() => ConfigVariable)
  configVariables?: ConfigVariable[];

  /**
   * Required. Connector version on which the connection is created. The format is: projects/* /locations/* /providers/* /connectors/* /versions/* Only global location is supported for ConnectorVersion resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectorVersion" })
  connectorVersion?: string;

  /**
   * Optional. Description of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
   */
  @SpeakeasyMetadata({ elemType: DestinationConfig })
  @Expose({ name: "destinationConfigs" })
  @Type(() => DestinationConfig)
  destinationConfigs?: DestinationConfig[];

  /**
   * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Determines whether or no a connection is locked. If locked, a reason must be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockConfig" })
  @Type(() => LockConfig)
  lockConfig?: LockConfig;

  /**
   * Node configuration for the connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeConfig" })
  @Type(() => NodeConfig)
  nodeConfig?: NodeConfig;

  /**
   * Optional. Service account needed for runtime plane to access GCP resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceAccount" })
  serviceAccount?: string;

  /**
   * SSL Configuration of a connection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sslConfig" })
  @Type(() => SslConfig)
  sslConfig?: SslConfig;

  /**
   * ConnectionStatus indicates the state of the connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => ConnectionStatus)
  status?: ConnectionStatus;

  /**
   * Optional. Suspended indicates if a user has suspended a connection or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suspended" })
  suspended?: boolean;
}

/**
 * Connection represents an instance of connector.
 */
export class Connection extends SpeakeasyBase {
  /**
   * AuthConfig defines details of a authentication type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authConfig" })
  @Type(() => AuthConfig)
  authConfig?: AuthConfig;

  /**
   * Optional. Configuration for configuring the connection with an external system.
   */
  @SpeakeasyMetadata({ elemType: ConfigVariable })
  @Expose({ name: "configVariables" })
  @Type(() => ConfigVariable)
  configVariables?: ConfigVariable[];

  /**
   * Required. Connector version on which the connection is created. The format is: projects/* /locations/* /providers/* /connectors/* /versions/* Only global location is supported for ConnectorVersion resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectorVersion" })
  connectorVersion?: string;

  /**
   * Output only. Created time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Optional. Description of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
   */
  @SpeakeasyMetadata({ elemType: DestinationConfig })
  @Expose({ name: "destinationConfigs" })
  @Type(() => DestinationConfig)
  destinationConfigs?: DestinationConfig[];

  /**
   * Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "envoyImageLocation" })
  envoyImageLocation?: string;

  /**
   * Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageLocation" })
  imageLocation?: string;

  /**
   * Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Determines whether or no a connection is locked. If locked, a reason must be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockConfig" })
  @Type(() => LockConfig)
  lockConfig?: LockConfig;

  /**
   * Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Node configuration for the connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeConfig" })
  @Type(() => NodeConfig)
  nodeConfig?: NodeConfig;

  /**
   * Optional. Service account needed for runtime plane to access GCP resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceAccount" })
  serviceAccount?: string;

  /**
   * Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceDirectory" })
  serviceDirectory?: string;

  /**
   * SSL Configuration of a connection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sslConfig" })
  @Type(() => SslConfig)
  sslConfig?: SslConfig;

  /**
   * ConnectionStatus indicates the state of the connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => ConnectionStatus)
  status?: ConnectionStatus;

  /**
   * Optional. Suspended indicates if a user has suspended a connection or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suspended" })
  suspended?: boolean;

  /**
   * Output only. Updated time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
