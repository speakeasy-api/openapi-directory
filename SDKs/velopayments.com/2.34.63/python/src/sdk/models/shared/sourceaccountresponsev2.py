"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autotopupconfigv2 as shared_autotopupconfigv2
from ..shared import notificationsv2 as shared_notificationsv2
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceAccountResponseV2:
    r"""Source account response"""
    
    account_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountType') }})  
    balance_visible: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balanceVisible') }})  
    funding_ref: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingRef') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Source Account Id"""  
    physical_account_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('physicalAccountName') }})  
    pooled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pooled') }})  
    rails_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('railsId') }})  
    auto_top_up_config: Optional[shared_autotopupconfigv2.AutoTopUpConfigV2] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoTopUpConfig'), 'exclude': lambda f: f is None }})  
    balance: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})
    r"""Decimal implied"""  
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})  
    customer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerId'), 'exclude': lambda f: f is None }})  
    funding_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingAccountId'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    notifications: Optional[shared_notificationsv2.NotificationsV2] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notifications'), 'exclude': lambda f: f is None }})  
    payor_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payorId'), 'exclude': lambda f: f is None }})  
    physical_account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('physicalAccountId'), 'exclude': lambda f: f is None }})  
    