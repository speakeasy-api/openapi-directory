/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Campaign } from "./campaign";
import { ExtendedAttribute } from "./extendedattribute";
import { Language } from "./language";
import { Source } from "./source";
import { Expose, Transform, Type } from "class-transformer";

export class MediaItem extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Campaign })
  @Expose({ name: "campaigns" })
  @Type(() => Campaign)
  campaigns?: Campaign[];

  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customAttributionUrl" })
  customAttributionUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customPreviewUrl" })
  customPreviewUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customThumbnailUrl" })
  customThumbnailUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dateContentAuthored" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateContentAuthored?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dateContentPublished" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateContentPublished?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dateContentReviewed" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateContentReviewed?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dateContentUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateContentUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dateSyndicationCaptured" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateSyndicationCaptured?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dateSyndicationUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateSyndicationUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dateSyndicationVisible" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateSyndicationVisible?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata({ elemType: ExtendedAttribute })
  @Expose({ name: "extendedAttributes" })
  @Type(() => ExtendedAttribute)
  extendedAttributes?: ExtendedAttribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "externalGuid" })
  externalGuid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "foreignSyndicationAPIUrl" })
  foreignSyndicationAPIUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hash" })
  hash?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  @Type(() => Language)
  language?: Language;

  @SpeakeasyMetadata()
  @Expose({ name: "mediaType" })
  mediaType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => Source)
  source?: Source;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceUrl" })
  sourceUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "targetUrl" })
  targetUrl?: string;
}
