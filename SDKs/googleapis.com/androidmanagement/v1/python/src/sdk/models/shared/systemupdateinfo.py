"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SystemUpdateInfoUpdateStatusEnum(str, Enum):
    r"""The status of an update: whether an update exists and what type it is."""
    UPDATE_STATUS_UNKNOWN = 'UPDATE_STATUS_UNKNOWN'
    UP_TO_DATE = 'UP_TO_DATE'
    UNKNOWN_UPDATE_AVAILABLE = 'UNKNOWN_UPDATE_AVAILABLE'
    SECURITY_UPDATE_AVAILABLE = 'SECURITY_UPDATE_AVAILABLE'
    OS_UPDATE_AVAILABLE = 'OS_UPDATE_AVAILABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SystemUpdateInfo:
    r"""Information about a potential pending system update."""
    
    update_received_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateReceivedTime'), 'exclude': lambda f: f is None }})
    r"""The time when the update was first available. A zero value indicates that this field is not set. This field is set only if an update is available (that is, updateStatus is neither UPDATE_STATUS_UNKNOWN nor UP_TO_DATE)."""  
    update_status: Optional[SystemUpdateInfoUpdateStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateStatus'), 'exclude': lambda f: f is None }})
    r"""The status of an update: whether an update exists and what type it is."""  
    