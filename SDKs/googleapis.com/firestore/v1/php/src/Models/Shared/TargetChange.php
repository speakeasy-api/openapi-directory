<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TargetChange - Targets being watched have changed.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TargetChange
{
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Status $cause
     */
	#[\JMS\Serializer\Annotation\SerializedName('cause')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Status')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Status $cause = null;
    
    /**
     * The consistent `read_time` for the given `target_ids` (omitted when the target_ids are not at a consistent snapshot). The stream is guaranteed to send a `read_time` with `target_ids` empty whenever the entire stream reaches a new consistent snapshot. ADD, CURRENT, and RESET messages are guaranteed to (eventually) result in a new consistent snapshot (while NO_CHANGE and REMOVE messages are not). For a given stream, `read_time` is guaranteed to be monotonically increasing.
     * 
     * @var ?string $readTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('readTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $readTime = null;
    
    /**
     * A token that can be used to resume the stream for the given `target_ids`, or all targets if `target_ids` is empty. Not set on every target change.
     * 
     * @var ?string $resumeToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('resumeToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resumeToken = null;
    
    /**
     * The type of change that occurred.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TargetChangeTargetChangeTypeEnum $targetChangeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetChangeType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TargetChangeTargetChangeTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TargetChangeTargetChangeTypeEnum $targetChangeType = null;
    
    /**
     * The target IDs of targets that have changed. If empty, the change applies to all targets. The order of the target IDs is not defined.
     * 
     * @var ?array<int> $targetIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetIds')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $targetIds = null;
    
	public function __construct()
	{
		$this->cause = null;
		$this->readTime = null;
		$this->resumeToken = null;
		$this->targetChangeType = null;
		$this->targetIds = null;
	}
}
