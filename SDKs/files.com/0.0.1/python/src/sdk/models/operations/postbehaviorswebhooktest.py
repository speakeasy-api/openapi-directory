"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import statusentity as shared_statusentity
from typing import Any, Optional


@dataclasses.dataclass
class PostBehaviorsWebhookTestRequestBody:
    
    url: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'url' }})
    r"""URL for testing the webhook."""  
    action: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'action' }})
    r"""action for test body"""  
    body: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'body', 'json': True }})
    r"""Additional body parameters."""  
    encoding: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'encoding' }})
    r"""HTTP encoding method.  Can be JSON, XML, or RAW (form data)."""  
    headers: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'headers', 'json': True }})
    r"""Additional request headers."""  
    method: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'method' }})
    r"""HTTP method(GET or POST)."""  
    

@dataclasses.dataclass
class PostBehaviorsWebhookTestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    status_entity: Optional[shared_statusentity.StatusEntity] = dataclasses.field(default=None)
    r"""The Behaviors object."""  
    