"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import v3_disruption as shared_v3_disruption
from ..shared import v3_status as shared_v3_status
from ..shared import v3_stoponroute as shared_v3_stoponroute
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V3StopsOnRouteResponse:
    r"""All stops on the specified route."""
    
    disruptions: Optional[dict[str, shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disruptions'), 'exclude': lambda f: f is None }})
    r"""Disruption information applicable to relevant routes or stops"""  
    geopath: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('geopath'), 'exclude': lambda f: f is None }})
    r"""GeoPath for the route"""  
    status: Optional[shared_v3_status.V3Status] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    stops: Optional[list[shared_v3_stoponroute.V3StopOnRoute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stops'), 'exclude': lambda f: f is None }})
    r"""Train stations, tram stops, bus stops, regional coach stops or Night Bus stops"""  
    