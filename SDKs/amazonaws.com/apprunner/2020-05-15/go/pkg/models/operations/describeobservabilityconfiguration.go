// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeObservabilityConfigurationXAmzTargetEnum
type DescribeObservabilityConfigurationXAmzTargetEnum string

const (
	DescribeObservabilityConfigurationXAmzTargetEnumAppRunnerDescribeObservabilityConfiguration DescribeObservabilityConfigurationXAmzTargetEnum = "AppRunner.DescribeObservabilityConfiguration"
)

func (e *DescribeObservabilityConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AppRunner.DescribeObservabilityConfiguration":
		*e = DescribeObservabilityConfigurationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeObservabilityConfigurationXAmzTargetEnum: %s", s)
	}
}

type DescribeObservabilityConfigurationRequest struct {
	DescribeObservabilityConfigurationRequest shared.DescribeObservabilityConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                             *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                         *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                            *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                  *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                         *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                             *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                         *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                DescribeObservabilityConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeObservabilityConfigurationResponse struct {
	ContentType string
	// Success
	DescribeObservabilityConfigurationResponse *shared.DescribeObservabilityConfigurationResponse
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
