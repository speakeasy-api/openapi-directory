/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Certificate } from "./certificate";
import { ConfigurationOverrides } from "./configurationoverrides";
import { EndpointStateEnum } from "./endpointstateenum";
import { FailureReasonEnum } from "./failurereasonenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * This entity represents the endpoint that is managed by Amazon EMR on EKS.
 */
export class Endpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "certificateArn" })
  certificateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "certificateAuthority" })
  @Type(() => Certificate)
  certificateAuthority?: Certificate;

  @SpeakeasyMetadata()
  @Expose({ name: "configurationOverrides" })
  @Type(() => ConfigurationOverrides)
  configurationOverrides?: ConfigurationOverrides;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "executionRoleArn" })
  executionRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "failureReason" })
  failureReason?: FailureReasonEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "releaseLabel" })
  releaseLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "securityGroup" })
  securityGroup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serverUrl" })
  serverUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: EndpointStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stateDetails" })
  stateDetails?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subnetIds" })
  subnetIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualClusterId" })
  virtualClusterId?: string;
}
