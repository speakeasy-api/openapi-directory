// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryVolumeGroupSLAAssignmentEnum - The type of SLA assigned to the Volume Group.
type QueryVolumeGroupSLAAssignmentEnum string

const (
	QueryVolumeGroupSLAAssignmentEnumDerived    QueryVolumeGroupSLAAssignmentEnum = "Derived"
	QueryVolumeGroupSLAAssignmentEnumDirect     QueryVolumeGroupSLAAssignmentEnum = "Direct"
	QueryVolumeGroupSLAAssignmentEnumUnassigned QueryVolumeGroupSLAAssignmentEnum = "Unassigned"
)

func (e QueryVolumeGroupSLAAssignmentEnum) ToPointer() *QueryVolumeGroupSLAAssignmentEnum {
	return &e
}

func (e *QueryVolumeGroupSLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = QueryVolumeGroupSLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVolumeGroupSLAAssignmentEnum: %v", v)
	}
}

// QueryVolumeGroupSortByEnum - The Volume Group attribute to use in storing the responses. Valid attributes are `name` and `effectiveSlaDomainName`.
type QueryVolumeGroupSortByEnum string

const (
	QueryVolumeGroupSortByEnumName                   QueryVolumeGroupSortByEnum = "name"
	QueryVolumeGroupSortByEnumEffectiveSLADomainName QueryVolumeGroupSortByEnum = "effectiveSlaDomainName"
)

func (e QueryVolumeGroupSortByEnum) ToPointer() *QueryVolumeGroupSortByEnum {
	return &e
}

func (e *QueryVolumeGroupSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "effectiveSlaDomainName":
		*e = QueryVolumeGroupSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVolumeGroupSortByEnum: %v", v)
	}
}

// QueryVolumeGroupSortOrderEnum - The order to sort the responses. Valid choices are asc (ascending) or desc (descending).
type QueryVolumeGroupSortOrderEnum string

const (
	QueryVolumeGroupSortOrderEnumAsc  QueryVolumeGroupSortOrderEnum = "asc"
	QueryVolumeGroupSortOrderEnumDesc QueryVolumeGroupSortOrderEnum = "desc"
)

func (e QueryVolumeGroupSortOrderEnum) ToPointer() *QueryVolumeGroupSortOrderEnum {
	return &e
}

func (e *QueryVolumeGroupSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryVolumeGroupSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVolumeGroupSortOrderEnum: %v", v)
	}
}

type QueryVolumeGroupRequest struct {
	// The ID of the SLA Domain that controls the protection of the Volume Group.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Specifies whether the results should contain only Volume Groups that are accessible on the Rubrik cluster.
	IsRelic *bool `queryParam:"style=form,explode=true,name=is_relic"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// The name of the Volume Group.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Ignore these many matches in the beginning.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// The ID of the Rubrik cluster that provides primary protection for the Volume Group.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// The type of SLA assigned to the Volume Group.
	SLAAssignment *QueryVolumeGroupSLAAssignmentEnum `queryParam:"style=form,explode=true,name=sla_assignment"`
	// The Volume Group attribute to use in storing the responses. Valid attributes are `name` and `effectiveSlaDomainName`.
	SortBy *QueryVolumeGroupSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// The order to sort the responses. Valid choices are asc (ascending) or desc (descending).
	SortOrder *QueryVolumeGroupSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryVolumeGroupResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Get Volume Groups summary list.
	VolumeGroupSummaryListResponse *shared.VolumeGroupSummaryListResponse
}
