"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ipaddressfamily_enum as shared_ipaddressfamily_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IPSet:
    r"""A complex type for the set of IP addresses for an accelerator."""
    
    ip_addresses: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpAddresses'), 'exclude': lambda f: f is None }})  
    ip_address_family: Optional[shared_ipaddressfamily_enum.IPAddressFamilyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpAddressFamily'), 'exclude': lambda f: f is None }})  
    ip_family: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpFamily'), 'exclude': lambda f: f is None }})  
    