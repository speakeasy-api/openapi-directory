/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Account {
    /**
     * The code of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountCode")
    public String accountCode;
    public Account withAccountCode(String accountCode) {
        this.accountCode = accountCode;
        return this;
    }
    
    /**
     * The bankAccountUUID of the bank account held by the account holder to couple the account with. Scheduled payouts in currencies matching the currency of this bank account will be sent to this bank account. Payouts in different currencies will be sent to a matching bank account of the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountUUID")
    public String bankAccountUUID;
    public Account withBankAccountUUID(String bankAccountUUID) {
        this.bankAccountUUID = bankAccountUUID;
        return this;
    }
    
    /**
     * The beneficiary of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beneficiaryAccount")
    public String beneficiaryAccount;
    public Account withBeneficiaryAccount(String beneficiaryAccount) {
        this.beneficiaryAccount = beneficiaryAccount;
        return this;
    }
    
    /**
     * The reason that a beneficiary has been set up for this account. This may have been supplied during the setup of a beneficiary at the discretion of the executing user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beneficiaryMerchantReference")
    public String beneficiaryMerchantReference;
    public Account withBeneficiaryMerchantReference(String beneficiaryMerchantReference) {
        this.beneficiaryMerchantReference = beneficiaryMerchantReference;
        return this;
    }
    
    /**
     * A description of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Account withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A set of key and value pairs for general use by the merchant.
     * The keys do not have specific names and may be used for storing miscellaneous data as desired.
     * &gt; Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;
    public Account withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The payout method code held by the account holder to couple the account with. Scheduled card payouts will be sent using this payout method code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutMethodCode")
    public String payoutMethodCode;
    public Account withPayoutMethodCode(String payoutMethodCode) {
        this.payoutMethodCode = payoutMethodCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutSchedule")
    public PayoutScheduleResponse payoutSchedule;
    public Account withPayoutSchedule(PayoutScheduleResponse payoutSchedule) {
        this.payoutSchedule = payoutSchedule;
        return this;
    }
    
    /**
     * Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutSpeed")
    public AccountPayoutSpeedEnum payoutSpeed;
    public Account withPayoutSpeed(AccountPayoutSpeedEnum payoutSpeed) {
        this.payoutSpeed = payoutSpeed;
        return this;
    }
    
    /**
     * The status of the account. Possible values: `Active`, `Inactive`, `Suspended`, `Closed`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public Account withStatus(String status) {
        this.status = status;
        return this;
    }
    
}
