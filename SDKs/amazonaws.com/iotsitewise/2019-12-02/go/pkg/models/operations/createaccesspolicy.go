// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateAccessPolicyHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateAccessPolicyRequestBodyAccessPolicyIdentity - <p>Contains an identity that can access an IoT SiteWise Monitor resource.</p> <note> <p>Currently, you can't use Amazon Web Services APIs to retrieve IAM Identity Center identity IDs. You can find the IAM Identity Center identity IDs in the URL of user and group pages in the <a href="https://console.aws.amazon.com/singlesignon">IAM Identity Center console</a>.</p> </note>
type CreateAccessPolicyRequestBodyAccessPolicyIdentity struct {
	Group   *shared.GroupIdentity   `json:"group,omitempty"`
	IamRole *shared.IAMRoleIdentity `json:"iamRole,omitempty"`
	IamUser *shared.IAMUserIdentity `json:"iamUser,omitempty"`
	User    *shared.UserIdentity    `json:"user,omitempty"`
}

// CreateAccessPolicyRequestBodyAccessPolicyPermissionEnum - The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.
type CreateAccessPolicyRequestBodyAccessPolicyPermissionEnum string

const (
	CreateAccessPolicyRequestBodyAccessPolicyPermissionEnumAdministrator CreateAccessPolicyRequestBodyAccessPolicyPermissionEnum = "ADMINISTRATOR"
	CreateAccessPolicyRequestBodyAccessPolicyPermissionEnumViewer        CreateAccessPolicyRequestBodyAccessPolicyPermissionEnum = "VIEWER"
)

func (e *CreateAccessPolicyRequestBodyAccessPolicyPermissionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ADMINISTRATOR":
		fallthrough
	case "VIEWER":
		*e = CreateAccessPolicyRequestBodyAccessPolicyPermissionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccessPolicyRequestBodyAccessPolicyPermissionEnum: %s", s)
	}
}

// CreateAccessPolicyRequestBodyAccessPolicyResource - Contains an IoT SiteWise Monitor resource ID for a portal or project.
type CreateAccessPolicyRequestBodyAccessPolicyResource struct {
	Portal  *shared.PortalResource  `json:"portal,omitempty"`
	Project *shared.ProjectResource `json:"project,omitempty"`
}

type CreateAccessPolicyRequestBody struct {
	// <p>Contains an identity that can access an IoT SiteWise Monitor resource.</p> <note> <p>Currently, you can't use Amazon Web Services APIs to retrieve IAM Identity Center identity IDs. You can find the IAM Identity Center identity IDs in the URL of user and group pages in the <a href="https://console.aws.amazon.com/singlesignon">IAM Identity Center console</a>.</p> </note>
	AccessPolicyIdentity CreateAccessPolicyRequestBodyAccessPolicyIdentity `json:"accessPolicyIdentity"`
	// The permission level for this access policy. Note that a project <code>ADMINISTRATOR</code> is also known as a project owner.
	AccessPolicyPermission CreateAccessPolicyRequestBodyAccessPolicyPermissionEnum `json:"accessPolicyPermission"`
	// Contains an IoT SiteWise Monitor resource ID for a portal or project.
	AccessPolicyResource CreateAccessPolicyRequestBodyAccessPolicyResource `json:"accessPolicyResource"`
	// A unique case-sensitive identifier that you can provide to ensure the idempotency of the request. Don't reuse this client token if a new idempotent request is required.
	ClientToken *string `json:"clientToken,omitempty"`
	// A list of key-value pairs that contain metadata for the access policy. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateAccessPolicyRequest struct {
	Headers CreateAccessPolicyHeaders
	Request CreateAccessPolicyRequestBody `request:"mediaType=application/json"`
}

type CreateAccessPolicyResponse struct {
	ContentType string
	// Success
	CreateAccessPolicyResponse *shared.CreateAccessPolicyResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
