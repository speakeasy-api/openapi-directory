/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class JobMonitoringObjectsCountByType {
    /**
     * The total count of all Archival jobs.
     */
    @JsonProperty("archival")
    public Integer archival;

    public JobMonitoringObjectsCountByType withArchival(Integer archival) {
        this.archival = archival;
        return this;
    }
    
    /**
     * The total count of all Backup jobs.
     */
    @JsonProperty("backup")
    public Integer backup;

    public JobMonitoringObjectsCountByType withBackup(Integer backup) {
        this.backup = backup;
        return this;
    }
    
    /**
     * The total count of all Conversion jobs.
     */
    @JsonProperty("conversion")
    public Integer conversion;

    public JobMonitoringObjectsCountByType withConversion(Integer conversion) {
        this.conversion = conversion;
        return this;
    }
    
    /**
     * The total count of all Index jobs.
     */
    @JsonProperty("index")
    public Integer index;

    public JobMonitoringObjectsCountByType withIndex(Integer index) {
        this.index = index;
        return this;
    }
    
    /**
     * The total count of all Log Archival jobs.
     */
    @JsonProperty("logArchival")
    public Integer logArchival;

    public JobMonitoringObjectsCountByType withLogArchival(Integer logArchival) {
        this.logArchival = logArchival;
        return this;
    }
    
    /**
     * The total count of all Log Backup jobs.
     */
    @JsonProperty("logBackup")
    public Integer logBackup;

    public JobMonitoringObjectsCountByType withLogBackup(Integer logBackup) {
        this.logBackup = logBackup;
        return this;
    }
    
    /**
     * The total count of all Log Replication jobs.
     */
    @JsonProperty("logReplication")
    public Integer logReplication;

    public JobMonitoringObjectsCountByType withLogReplication(Integer logReplication) {
        this.logReplication = logReplication;
        return this;
    }
    
    /**
     * The total count of all Log Shipping jobs.
     */
    @JsonProperty("logShipping")
    public Integer logShipping;

    public JobMonitoringObjectsCountByType withLogShipping(Integer logShipping) {
        this.logShipping = logShipping;
        return this;
    }
    
    /**
     * The total count of all Recovery jobs.
     */
    @JsonProperty("recovery")
    public Integer recovery;

    public JobMonitoringObjectsCountByType withRecovery(Integer recovery) {
        this.recovery = recovery;
        return this;
    }
    
    /**
     * The total count of all Replication jobs.
     */
    @JsonProperty("replication")
    public Integer replication;

    public JobMonitoringObjectsCountByType withReplication(Integer replication) {
        this.replication = replication;
        return this;
    }
    
    /**
     * The total count of all jobs.
     */
    @JsonProperty("total")
    public Integer total;

    public JobMonitoringObjectsCountByType withTotal(Integer total) {
        this.total = total;
        return this;
    }
    
    public JobMonitoringObjectsCountByType(@JsonProperty("archival") Integer archival, @JsonProperty("backup") Integer backup, @JsonProperty("conversion") Integer conversion, @JsonProperty("index") Integer index, @JsonProperty("logArchival") Integer logArchival, @JsonProperty("logBackup") Integer logBackup, @JsonProperty("logReplication") Integer logReplication, @JsonProperty("logShipping") Integer logShipping, @JsonProperty("recovery") Integer recovery, @JsonProperty("replication") Integer replication, @JsonProperty("total") Integer total) {
        this.archival = archival;
        this.backup = backup;
        this.conversion = conversion;
        this.index = index;
        this.logArchival = logArchival;
        this.logBackup = logBackup;
        this.logReplication = logReplication;
        this.logShipping = logShipping;
        this.recovery = recovery;
        this.replication = replication;
        this.total = total;
  }
}
