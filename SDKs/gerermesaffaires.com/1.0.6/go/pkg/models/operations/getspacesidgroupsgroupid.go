// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSpacesIDGroupsGroupIDPathParams struct {
	// Id of the group
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type GetSpacesIDGroupsGroupIDRequest struct {
	PathParams GetSpacesIDGroupsGroupIDPathParams
}

type GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnum string

const (
	GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnumRead  GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnum = "read"
	GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnumWrite GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnum = "write"
)

func (e *GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		fallthrough
	case "write":
		*e = GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnum: %s", s)
	}
}

type GetSpacesIDGroupsGroupID200ApplicationJSONAccesses struct {
	ID    *string                                                      `json:"Id,omitempty"`
	Name  *string                                                      `json:"Name,omitempty"`
	Right *GetSpacesIDGroupsGroupID200ApplicationJSONAccessesRightEnum `json:"Right,omitempty"`
}

type GetSpacesIDGroupsGroupID200ApplicationJSONPersons struct {
	MemberID *string `json:"MemberId,omitempty"`
}

// GetSpacesIDGroupsGroupID200ApplicationJSON - A company entity
type GetSpacesIDGroupsGroupID200ApplicationJSON struct {
	Accesses *GetSpacesIDGroupsGroupID200ApplicationJSONAccesses `json:"Accesses,omitempty"`
	EndDate  *string                                             `json:"EndDate,omitempty"`
	ID       *string                                             `json:"Id,omitempty"`
	Name     *string                                             `json:"Name,omitempty"`
	Persons  *GetSpacesIDGroupsGroupID200ApplicationJSONPersons  `json:"Persons,omitempty"`
}

type GetSpacesIDGroupsGroupIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A company entity
	GetSpacesIDGroupsGroupID200ApplicationJSONObject *GetSpacesIDGroupsGroupID200ApplicationJSON
}
