"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amidistributionconfiguration as shared_amidistributionconfiguration
from ..shared import containerdistributionconfiguration as shared_containerdistributionconfiguration
from ..shared import fastlaunchconfiguration as shared_fastlaunchconfiguration
from ..shared import launchtemplateconfiguration as shared_launchtemplateconfiguration
from ..shared import s3exportconfiguration as shared_s3exportconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Distribution:
    r"""Defines the settings for a specific Region."""
    
    region: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region') }})  
    ami_distribution_configuration: Optional[shared_amidistributionconfiguration.AmiDistributionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amiDistributionConfiguration'), 'exclude': lambda f: f is None }})  
    container_distribution_configuration: Optional[shared_containerdistributionconfiguration.ContainerDistributionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerDistributionConfiguration'), 'exclude': lambda f: f is None }})  
    fast_launch_configurations: Optional[list[shared_fastlaunchconfiguration.FastLaunchConfiguration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fastLaunchConfigurations'), 'exclude': lambda f: f is None }})  
    launch_template_configurations: Optional[list[shared_launchtemplateconfiguration.LaunchTemplateConfiguration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('launchTemplateConfigurations'), 'exclude': lambda f: f is None }})  
    license_configuration_arns: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('licenseConfigurationArns'), 'exclude': lambda f: f is None }})  
    s3_export_configuration: Optional[shared_s3exportconfiguration.S3ExportConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('s3ExportConfiguration'), 'exclude': lambda f: f is None }})  
    