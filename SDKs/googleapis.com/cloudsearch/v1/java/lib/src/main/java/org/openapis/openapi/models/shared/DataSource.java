/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DataSource - Datasource is a logical namespace for items to be indexed. All items must belong to a datasource. This is the prerequisite before items can be indexed into Cloud Search.
 */
public class DataSource {
    /**
     * If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableModifications")
    public Boolean disableModifications;
    public DataSource withDisableModifications(Boolean disableModifications) {
        this.disableModifications = disableModifications;
        return this;
    }
    
    /**
     * Disable serving any search or assist results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableServing")
    public Boolean disableServing;
    public DataSource withDisableServing(Boolean disableServing) {
        this.disableServing = disableServing;
        return this;
    }
    
    /**
     * Required. Display name of the datasource The maximum length is 300 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public DataSource withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * List of service accounts that have indexing access.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indexingServiceAccounts")
    public String[] indexingServiceAccounts;
    public DataSource withIndexingServiceAccounts(String[] indexingServiceAccounts) {
        this.indexingServiceAccounts = indexingServiceAccounts;
        return this;
    }
    
    /**
     * This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemsVisibility")
    public GSuitePrincipal[] itemsVisibility;
    public DataSource withItemsVisibility(GSuitePrincipal[] itemsVisibility) {
        this.itemsVisibility = itemsVisibility;
        return this;
    }
    
    /**
     * The name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public DataSource withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * IDs of the Long Running Operations (LROs) currently running for this schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationIds")
    public String[] operationIds;
    public DataSource withOperationIds(String[] operationIds) {
        this.operationIds = operationIds;
        return this;
    }
    
    /**
     * Can a user request to get thumbnail URI for Items indexed in this data source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnThumbnailUrls")
    public Boolean returnThumbnailUrls;
    public DataSource withReturnThumbnailUrls(Boolean returnThumbnailUrls) {
        this.returnThumbnailUrls = returnThumbnailUrls;
        return this;
    }
    
    /**
     * A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *&lt;value&gt;* then queries like *source:&lt;value&gt;* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shortName")
    public String shortName;
    public DataSource withShortName(String shortName) {
        this.shortName = shortName;
        return this;
    }
    
}
