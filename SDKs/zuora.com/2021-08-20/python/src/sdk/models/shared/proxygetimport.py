"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProxyGetImport:
    
    created_by_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedById'), 'exclude': lambda f: f is None }})
    r"""The user ID of the person who created the import.
    
    **Character limit**: 32
    
    **Values**: automatically generated
    """  
    created_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when the import was created.
    
    **Character limit**: 29
    
    **Values**: automatically generated
    """  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""Object identifier."""  
    imported_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImportedCount'), 'exclude': lambda f: f is None }})
    r"""The number of records successfully imported.
    
    **Values**: automatically generated
    """  
    import_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImportType'), 'exclude': lambda f: f is None }})
    r"""The type of item imported.
    
    **Character limit**: 7
    
    **Values**: Usage
    """  
    md5: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Md5'), 'exclude': lambda f: f is None }})
    r"""A check to validate the import file's integrity.
    
    **Character limit:** 32
    
    **System-generated:** no
    
    **Values**: a string of 32 characters or fewer
    """  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""A descriptive name for the import.
    
    **Character limit:** 100
    
    **Values:** one of the following:
    
    - a string of 100 characters or fewer
    - if NULL default is: `import <ImportType_value>`
    """  
    original_resource_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OriginalResourceUrl'), 'exclude': lambda f: f is None }})
    r"""The URL for your import file, which contains your records for upload. When you upload the file, Zuora assigns it to this address.
    
    **Values:** automatic dynamically-generated URL
    """  
    result_resource_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultResourceUrl'), 'exclude': lambda f: f is None }})
    r"""The URL for the import result file, which is a zipped CSV file.
    
    **Values**: automatic dynamically-generated URL
    """  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})
    r"""The status of the import process.
    
    **Values**: automatically generated using one of the following values:
    
    - Pending
    - Processing
    - Completed
    - Failed
    """  
    status_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatusReason'), 'exclude': lambda f: f is None }})
    r"""The reason for the system-generated status. Use this information if the import fails.
    
    **Character limit**: 2000
    
    **Values**: automatically generated error message
    """  
    total_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalCount'), 'exclude': lambda f: f is None }})
    r"""The number of records in the import file.
    
    **Character limit**:
    
    **Values**: automatically generated
    """  
    updated_by_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedById'), 'exclude': lambda f: f is None }})
    r"""The ID of the user who last updated the import.
    
    **Character limit**: 32
    
    **Values**: automatically generated
    """  
    updated_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when the import was last updated.
    **Character limit**: 29 **Values**: automatically generated
    """  
    