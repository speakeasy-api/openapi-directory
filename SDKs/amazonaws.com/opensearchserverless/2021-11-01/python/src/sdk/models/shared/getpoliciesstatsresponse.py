"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accesspolicystats as shared_accesspolicystats
from ..shared import securityconfigstats as shared_securityconfigstats
from ..shared import securitypolicystats as shared_securitypolicystats
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPoliciesStatsResponse:
    r"""Success"""
    
    access_policy_stats: Optional[shared_accesspolicystats.AccessPolicyStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessPolicyStats'), 'exclude': lambda f: f is None }})  
    security_config_stats: Optional[shared_securityconfigstats.SecurityConfigStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityConfigStats'), 'exclude': lambda f: f is None }})  
    security_policy_stats: Optional[shared_securitypolicystats.SecurityPolicyStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityPolicyStats'), 'exclude': lambda f: f is None }})  
    total_policy_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalPolicyCount'), 'exclude': lambda f: f is None }})  
    