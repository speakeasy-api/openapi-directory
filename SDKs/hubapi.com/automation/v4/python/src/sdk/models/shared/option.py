"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Option:
    r"""An option for a field value."""
    
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    display_order: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayOrder') }})  
    double_data: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doubleData') }})  
    hidden: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hidden') }})  
    label: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label') }})
    r"""The user-facing label for the option."""  
    read_only: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readOnly') }})  
    value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""The internal value for the option. This is what will be included in the execution request to the `actionUrl`."""  
    