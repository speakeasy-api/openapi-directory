"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountholderdetails as shared_accountholderdetails
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdateAccountHolderRequestLegalEntityEnum(str, Enum):
    r"""The legal entity type of the account holder. This determines the information that should be provided in the request.
    
    Possible values: **Business**, **Individual**, or **NonProfit**.
    
    * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails` must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.
    
    * If set to **Individual**, then `accountHolderDetails.individualDetails` must be provided.
    """
    BUSINESS = 'Business'
    INDIVIDUAL = 'Individual'
    NON_PROFIT = 'NonProfit'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateAccountHolderRequest:
    
    account_holder_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderCode') }})
    r"""The code of the Account Holder to be updated."""  
    account_holder_details: Optional[shared_accountholderdetails.AccountHolderDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderDetails'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A description of the account holder, maximum 256 characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores `_`."""  
    legal_entity: Optional[UpdateAccountHolderRequestLegalEntityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalEntity'), 'exclude': lambda f: f is None }})
    r"""The legal entity type of the account holder. This determines the information that should be provided in the request.
    
    Possible values: **Business**, **Individual**, or **NonProfit**.
    
    * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails` must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.
    
    * If set to **Individual**, then `accountHolderDetails.individualDetails` must be provided.
    """  
    primary_currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryCurrency'), 'exclude': lambda f: f is None }})
    r"""The primary three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), to which the account holder should be updated."""  
    processing_tier: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processingTier'), 'exclude': lambda f: f is None }})
    r"""The processing tier to which the Account Holder should be updated.
    >The processing tier can not be lowered through this request.
    
    >Required if accountHolderDetails are not provided.
    """  
    