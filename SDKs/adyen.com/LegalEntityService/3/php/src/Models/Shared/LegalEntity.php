<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LegalEntity - OK - the request has succeeded.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LegalEntity
{
    /**
     * Contains key-value pairs that specify the actions that the legal entity can do in your platform.The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\LegalEntityCapability> $capabilities
     */
	#[\JMS\Serializer\Annotation\SerializedName('capabilities')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\LegalEntityCapability>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $capabilities = null;
    
    /**
     * List of documents uploaded for the legal entity.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DocumentReference> $documentDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('documentDetails')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DocumentReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $documentDetails = null;
    
    /**
     * List of documents uploaded for the legal entity.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EntityReference> $documents
     */
	#[\JMS\Serializer\Annotation\SerializedName('documents')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EntityReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $documents = null;
    
    /**
     * List of legal entities associated with the current legal entity.
     * 
     * For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LegalEntityAssociation> $entityAssociations
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityAssociations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LegalEntityAssociation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $entityAssociations = null;
    
    /**
     * The unique identifier of the legal entity.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('individual')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Individual')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Individual $individual = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('organization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Organization')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Organization $organization = null;
    
    /**
     * List of the verification errors from capabilities for the legal entity.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CapabilityProblem> $problems
     */
	#[\JMS\Serializer\Annotation\SerializedName('problems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CapabilityProblem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $problems = null;
    
    /**
     * Your reference for the legal entity, maximum 150 characters.
     * 
     * @var ?string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reference = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('soleProprietorship')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SoleProprietorship')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SoleProprietorship $soleProprietorship = null;
    
    /**
     * List of transfer instruments that the legal entity owns.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TransferInstrumentReference> $transferInstruments
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferInstruments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TransferInstrumentReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $transferInstruments = null;
    
    /**
     * The type of legal entity.
     * 
     * 
     *  Possible values: **individual**, **organization**, or **soleProprietorship**.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LegalEntityTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LegalEntityTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LegalEntityTypeEnum $type = null;
    
	public function __construct()
	{
		$this->capabilities = null;
		$this->documentDetails = null;
		$this->documents = null;
		$this->entityAssociations = null;
		$this->id = "";
		$this->individual = null;
		$this->organization = null;
		$this->problems = null;
		$this->reference = null;
		$this->soleProprietorship = null;
		$this->transferInstruments = null;
		$this->type = null;
	}
}
