/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetVideosRequest {
    /**
     * The page that contains the video URI. Only available when not paired with `query`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=containing_uri")
    public String containingUri;
    public GetVideosRequest withContainingUri(String containingUri) {
        this.containingUri = containingUri;
        return this;
    }
    
    /**
     * The sort direction of the results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=direction")
    public GetVideosDirectionEnum direction;
    public GetVideosRequest withDirection(GetVideosDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * The attribute by which to filter the results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public GetVideosFilterEnum filter;
    public GetVideosRequest withFilter(GetVideosFilterEnum filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter_embeddable")
    public Boolean filterEmbeddable;
    public GetVideosRequest withFilterEmbeddable(Boolean filterEmbeddable) {
        this.filterEmbeddable = filterEmbeddable;
        return this;
    }
    
    /**
     * Whether to filter by all playable videos or by all videos that are not  playable.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter_playable")
    public Boolean filterPlayable;
    public GetVideosRequest withFilterPlayable(Boolean filterPlayable) {
        this.filterPlayable = filterPlayable;
        return this;
    }
    
    /**
     * The page number of the results to show.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Double page;
    public GetVideosRequest withPage(Double page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of items to show on each page of results, up to a maximum of 100.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Double perPage;
    public GetVideosRequest withPerPage(Double perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * The search query to use to filter the results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query")
    public String query;
    public GetVideosRequest withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * The way to sort the results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public GetVideosSortEnum sort;
    public GetVideosRequest withSort(GetVideosSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * The ID of the user.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=user_id")
    public Double userId;
    public GetVideosRequest withUserId(Double userId) {
        this.userId = userId;
        return this;
    }
    
}
