// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateReportDefinitionRequestBodyDestinationS3Location - Represents the Amazon Simple Storage Service (Amazon S3) location where AWS Application Cost Profiler reports are generated and then written to.
type UpdateReportDefinitionRequestBodyDestinationS3Location struct {
	Bucket *string `json:"bucket,omitempty"`
	Prefix *string `json:"prefix,omitempty"`
}

// UpdateReportDefinitionRequestBodyFormatEnum - Required. The format to use for the generated report.
type UpdateReportDefinitionRequestBodyFormatEnum string

const (
	UpdateReportDefinitionRequestBodyFormatEnumCsv     UpdateReportDefinitionRequestBodyFormatEnum = "CSV"
	UpdateReportDefinitionRequestBodyFormatEnumParquet UpdateReportDefinitionRequestBodyFormatEnum = "PARQUET"
)

func (e UpdateReportDefinitionRequestBodyFormatEnum) ToPointer() *UpdateReportDefinitionRequestBodyFormatEnum {
	return &e
}

func (e *UpdateReportDefinitionRequestBodyFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CSV":
		fallthrough
	case "PARQUET":
		*e = UpdateReportDefinitionRequestBodyFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateReportDefinitionRequestBodyFormatEnum: %v", v)
	}
}

// UpdateReportDefinitionRequestBodyReportFrequencyEnum - Required. The cadence to generate the report.
type UpdateReportDefinitionRequestBodyReportFrequencyEnum string

const (
	UpdateReportDefinitionRequestBodyReportFrequencyEnumMonthly UpdateReportDefinitionRequestBodyReportFrequencyEnum = "MONTHLY"
	UpdateReportDefinitionRequestBodyReportFrequencyEnumDaily   UpdateReportDefinitionRequestBodyReportFrequencyEnum = "DAILY"
	UpdateReportDefinitionRequestBodyReportFrequencyEnumAll     UpdateReportDefinitionRequestBodyReportFrequencyEnum = "ALL"
)

func (e UpdateReportDefinitionRequestBodyReportFrequencyEnum) ToPointer() *UpdateReportDefinitionRequestBodyReportFrequencyEnum {
	return &e
}

func (e *UpdateReportDefinitionRequestBodyReportFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MONTHLY":
		fallthrough
	case "DAILY":
		fallthrough
	case "ALL":
		*e = UpdateReportDefinitionRequestBodyReportFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateReportDefinitionRequestBodyReportFrequencyEnum: %v", v)
	}
}

type UpdateReportDefinitionRequestBody struct {
	// Represents the Amazon Simple Storage Service (Amazon S3) location where AWS Application Cost Profiler reports are generated and then written to.
	DestinationS3Location UpdateReportDefinitionRequestBodyDestinationS3Location `json:"destinationS3Location"`
	// Required. The format to use for the generated report.
	Format UpdateReportDefinitionRequestBodyFormatEnum `json:"format"`
	// Required. Description of the report.
	ReportDescription string `json:"reportDescription"`
	// Required. The cadence to generate the report.
	ReportFrequency UpdateReportDefinitionRequestBodyReportFrequencyEnum `json:"reportFrequency"`
}

type UpdateReportDefinitionRequest struct {
	RequestBody       UpdateReportDefinitionRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Required. ID of the report to update.
	ReportID string `pathParam:"style=simple,explode=false,name=reportId"`
}

type UpdateReportDefinitionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateReportDefinitionResult *shared.UpdateReportDefinitionResult
	// ValidationException
	ValidationException interface{}
}
