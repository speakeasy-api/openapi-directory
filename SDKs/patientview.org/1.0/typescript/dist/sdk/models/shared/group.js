"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Group = void 0;
var utils_1 = require("../../../internal/utils");
var contactpoint_1 = require("./contactpoint");
var groupfeature_1 = require("./groupfeature");
var link_1 = require("./link");
var location_1 = require("./location");
var lookup_1 = require("./lookup");
var class_transformer_1 = require("class-transformer");
var Group = /** @class */ (function (_super) {
    __extends(Group, _super);
    function Group() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address1" }),
        __metadata("design:type", String)
    ], Group.prototype, "address1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address2" }),
        __metadata("design:type", String)
    ], Group.prototype, "address2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address3" }),
        __metadata("design:type", String)
    ], Group.prototype, "address3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Group }),
        (0, class_transformer_1.Expose)({ name: "childGroups" }),
        (0, class_transformer_1.Type)(function () { return Group; }),
        __metadata("design:type", Array)
    ], Group.prototype, "childGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], Group.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: contactpoint_1.ContactPoint }),
        (0, class_transformer_1.Expose)({ name: "contactPoints" }),
        (0, class_transformer_1.Type)(function () { return contactpoint_1.ContactPoint; }),
        __metadata("design:type", Array)
    ], Group.prototype, "contactPoints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Group.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fhirResourceId" }),
        __metadata("design:type", String)
    ], Group.prototype, "fhirResourceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: groupfeature_1.GroupFeature }),
        (0, class_transformer_1.Expose)({ name: "groupFeatures" }),
        (0, class_transformer_1.Type)(function () { return groupfeature_1.GroupFeature; }),
        __metadata("design:type", Array)
    ], Group.prototype, "groupFeatures", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groupType" }),
        (0, class_transformer_1.Type)(function () { return lookup_1.Lookup; }),
        __metadata("design:type", lookup_1.Lookup)
    ], Group.prototype, "groupType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], Group.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastImportDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Group.prototype, "lastImportDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastUpdate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Group.prototype, "lastUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: link_1.Link }),
        (0, class_transformer_1.Expose)({ name: "links" }),
        (0, class_transformer_1.Type)(function () { return link_1.Link; }),
        __metadata("design:type", Array)
    ], Group.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: location_1.Location }),
        (0, class_transformer_1.Expose)({ name: "locations" }),
        (0, class_transformer_1.Type)(function () { return location_1.Location; }),
        __metadata("design:type", Array)
    ], Group.prototype, "locations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Group.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Group }),
        (0, class_transformer_1.Expose)({ name: "parentGroups" }),
        (0, class_transformer_1.Type)(function () { return Group; }),
        __metadata("design:type", Array)
    ], Group.prototype, "parentGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "postcode" }),
        __metadata("design:type", String)
    ], Group.prototype, "postcode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sftpUser" }),
        __metadata("design:type", String)
    ], Group.prototype, "sftpUser", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shortName" }),
        __metadata("design:type", String)
    ], Group.prototype, "shortName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "visible" }),
        __metadata("design:type", Boolean)
    ], Group.prototype, "visible", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "visibleToJoin" }),
        __metadata("design:type", Boolean)
    ], Group.prototype, "visibleToJoin", void 0);
    return Group;
}(utils_1.SpeakeasyBase));
exports.Group = Group;
