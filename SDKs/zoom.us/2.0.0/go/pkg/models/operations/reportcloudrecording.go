// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/types"
	"time"
)

type ReportCloudRecordingSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ReportCloudRecordingRequest struct {
	// Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
	From types.Date `queryParam:"style=form,explode=true,name=from"`
	// End date.
	To types.Date `queryParam:"style=form,explode=true,name=to"`
}

type ReportCloudRecording200ApplicationXMLCloudRecordingStorage struct {
	// Date of the usage
	Date *time.Time
	// Free storage
	FreeUsage *string
	// Paid storage
	PlanUsage *string
	// Storage used on the date
	Usage *string
}

// ReportCloudRecording200ApplicationXML - **HTTP Status Code:** `200`<br>
// Cloud Recording Report Returned
type ReportCloudRecording200ApplicationXML struct {
	// Array of cloud usage objects
	CloudRecordingStorage []ReportCloudRecording200ApplicationXMLCloudRecordingStorage
	// Start date for this report
	From *types.Date
	// End date for this report
	To *types.Date
}

type ReportCloudRecording200ApplicationJSONCloudRecordingStorage struct {
	// Date of the usage
	Date *time.Time `json:"date,omitempty"`
	// Free storage
	FreeUsage *string `json:"free_usage,omitempty"`
	// Paid storage
	PlanUsage *string `json:"plan_usage,omitempty"`
	// Storage used on the date
	Usage *string `json:"usage,omitempty"`
}

// ReportCloudRecording200ApplicationJSON - **HTTP Status Code:** `200`<br>
// Cloud Recording Report Returned
type ReportCloudRecording200ApplicationJSON struct {
	// Array of cloud usage objects
	CloudRecordingStorage []ReportCloudRecording200ApplicationJSONCloudRecordingStorage `json:"cloud_recording_storage,omitempty"`
	// Start date for this report
	From *types.Date `json:"from,omitempty"`
	// End date for this report
	To *types.Date `json:"to,omitempty"`
}

type ReportCloudRecordingResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Cloud Recording Report Returned
	ReportCloudRecording200ApplicationJSONObject *ReportCloudRecording200ApplicationJSON
}
