"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudServicebrokerV1beta1Broker:
    r"""Broker represents a consumable collection of Service Registry catalogs
    exposed as an OSB Broker.
    """
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Timestamp for when the broker was created."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the broker in the format:
    <projects>/<project-id>/brokers/<broker>.
    This allows for multiple brokers per project which can be used to
    enable having custom brokers per GKE cluster, for example.
    """  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""User friendly title of the broker.
    Limited to 1024 characters. Requests with longer titles will be rejected.
    """  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""Output only. URL of the broker OSB-compliant endpoint, for example:
    https://servicebroker.googleapis.com/projects/<project>/brokers/<broker>
    """  
    