/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InAppProduct - An in-app product. The resource for InappproductsService.
 */
public class InAppProduct {
    /**
     * Default language of the localized data, as defined by BCP-47. e.g. "en-US".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultLanguage")
    public String defaultLanguage;

    public InAppProduct withDefaultLanguage(String defaultLanguage) {
        this.defaultLanguage = defaultLanguage;
        return this;
    }
    
    /**
     * Definition of a price, i.e. currency and units.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultPrice")
    public Price defaultPrice;

    public InAppProduct withDefaultPrice(Price defaultPrice) {
        this.defaultPrice = defaultPrice;
        return this;
    }
    
    /**
     * Grace period of the subscription, specified in ISO 8601 format. Allows developers to give their subscribers a grace period when the payment for the new recurrence period is declined. Acceptable values are P0D (zero days), P3D (three days), P7D (seven days), P14D (14 days), and P30D (30 days).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gracePeriod")
    public String gracePeriod;

    public InAppProduct withGracePeriod(String gracePeriod) {
        this.gracePeriod = gracePeriod;
        return this;
    }
    
    /**
     * List of localized title and description data. Map key is the language of the localized data, as defined by BCP-47, e.g. "en-US".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listings")
    public java.util.Map<String, InAppProductListing> listings;

    public InAppProduct withListings(java.util.Map<String, InAppProductListing> listings) {
        this.listings = listings;
        return this;
    }
    
    /**
     * Details about taxation and legal compliance for managed products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("managedProductTaxesAndComplianceSettings")
    public ManagedProductTaxAndComplianceSettings managedProductTaxesAndComplianceSettings;

    public InAppProduct withManagedProductTaxesAndComplianceSettings(ManagedProductTaxAndComplianceSettings managedProductTaxesAndComplianceSettings) {
        this.managedProductTaxesAndComplianceSettings = managedProductTaxesAndComplianceSettings;
        return this;
    }
    
    /**
     * Package name of the parent app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageName")
    public String packageName;

    public InAppProduct withPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }
    
    /**
     * Prices per buyer region. None of these can be zero, as in-app products are never free. Map key is region code, as defined by ISO 3166-2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prices")
    public java.util.Map<String, Price> prices;

    public InAppProduct withPrices(java.util.Map<String, Price> prices) {
        this.prices = prices;
        return this;
    }
    
    /**
     * The type of the product, e.g. a recurring subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseType")
    public InAppProductPurchaseTypeEnum purchaseType;

    public InAppProduct withPurchaseType(InAppProductPurchaseTypeEnum purchaseType) {
        this.purchaseType = purchaseType;
        return this;
    }
    
    /**
     * Stock-keeping-unit (SKU) of the product, unique within an app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;

    public InAppProduct withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * The status of the product, e.g. whether it's active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public InAppProductStatusEnum status;

    public InAppProduct withStatus(InAppProductStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Subscription period, specified in ISO 8601 format. Acceptable values are P1W (one week), P1M (one month), P3M (three months), P6M (six months), and P1Y (one year).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionPeriod")
    public String subscriptionPeriod;

    public InAppProduct withSubscriptionPeriod(String subscriptionPeriod) {
        this.subscriptionPeriod = subscriptionPeriod;
        return this;
    }
    
    /**
     * Details about taxation, Google Play policy and legal compliance for subscription products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionTaxesAndComplianceSettings")
    public SubscriptionTaxAndComplianceSettings subscriptionTaxesAndComplianceSettings;

    public InAppProduct withSubscriptionTaxesAndComplianceSettings(SubscriptionTaxAndComplianceSettings subscriptionTaxesAndComplianceSettings) {
        this.subscriptionTaxesAndComplianceSettings = subscriptionTaxesAndComplianceSettings;
        return this;
    }
    
    /**
     * Trial period, specified in ISO 8601 format. Acceptable values are anything between P7D (seven days) and P999D (999 days).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trialPeriod")
    public String trialPeriod;

    public InAppProduct withTrialPeriod(String trialPeriod) {
        this.trialPeriod = trialPeriod;
        return this;
    }
    
    public InAppProduct(){}
}
