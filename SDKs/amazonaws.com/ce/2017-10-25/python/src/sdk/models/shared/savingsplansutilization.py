"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SavingsPlansUtilization:
    r"""The measurement of how well you're using your existing Savings Plans."""
    
    total_commitment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalCommitment'), 'exclude': lambda f: f is None }})  
    unused_commitment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnusedCommitment'), 'exclude': lambda f: f is None }})  
    used_commitment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UsedCommitment'), 'exclude': lambda f: f is None }})  
    utilization_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UtilizationPercentage'), 'exclude': lambda f: f is None }})  
    