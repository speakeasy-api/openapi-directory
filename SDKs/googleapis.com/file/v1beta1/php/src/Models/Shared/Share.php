<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Share - A Filestore share.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Share
{
    /**
     * Immutable. Full name of the Cloud Filestore Backup resource that this Share is restored from, in the format of projects/{project_id}/locations/{location_id}/backups/{backup_id}. Empty, if the Share is created from scratch and not restored from a backup.
     * 
     * @var ?string $backup
     */
	#[\JMS\Serializer\Annotation\SerializedName('backup')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $backup = null;
    
    /**
     * File share capacity in gigabytes (GB). Filestore defines 1 GB as 1024^3 bytes. Must be greater than 0.
     * 
     * @var ?string $capacityGb
     */
	#[\JMS\Serializer\Annotation\SerializedName('capacityGb')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $capacityGb = null;
    
    /**
     * Output only. The time when the share was created.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * A description of the share with 2048 characters or less. Requests with longer descriptions will be rejected.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Resource labels to represent user provided metadata.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * The mount name of the share. Must be 63 characters or less and consist of uppercase or lowercase letters, numbers, and underscores.
     * 
     * @var ?string $mountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('mountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mountName = null;
    
    /**
     * Output only. The resource name of the share, in the format `projects/{project_id}/locations/{location_id}/instances/{instance_id}/shares/{share_id}`.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Nfs Export Options. There is a limit of 10 export options per file share.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NfsExportOptions> $nfsExportOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('nfsExportOptions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NfsExportOptions>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nfsExportOptions = null;
    
    /**
     * Output only. The share state.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShareStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ShareStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShareStateEnum $state = null;
    
	public function __construct()
	{
		$this->backup = null;
		$this->capacityGb = null;
		$this->createTime = null;
		$this->description = null;
		$this->labels = null;
		$this->mountName = null;
		$this->name = null;
		$this->nfsExportOptions = null;
		$this->state = null;
	}
}
