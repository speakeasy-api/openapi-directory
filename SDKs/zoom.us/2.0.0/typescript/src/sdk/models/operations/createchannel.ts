/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateChannelSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class CreateChannelApplicationJSONMembers extends SpeakeasyBase {
  /**
   * Member's email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;
}

/**
 * Type of the channel. The value can be one of the following:<br>
 *
 * @remarks
 * `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
 * `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
 * `3`: Public channel. Anyone can search for this channel and join the channel.<br>
 * `4`: New chat. This is an instant channel which can be created by adding members to a new chat.
 */
export enum CreateChannelApplicationJSONTypeEnum {
  One = "1",
  Two = "2",
  Three = "3",
}

export class CreateChannelApplicationJSON extends SpeakeasyBase {
  /**
   * Member(s) to include in the channel. A max of 5 members can be added to the channel at once with this API.
   */
  @SpeakeasyMetadata({ elemType: CreateChannelApplicationJSONMembers })
  @Expose({ name: "members" })
  @Type(() => CreateChannelApplicationJSONMembers)
  members?: CreateChannelApplicationJSONMembers[];

  /**
   * Name of the channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Type of the channel. The value can be one of the following:<br>
   *
   * @remarks
   * `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
   * `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
   * `3`: Public channel. Anyone can search for this channel and join the channel.<br>
   * `4`: New chat. This is an instant channel which can be created by adding members to a new chat.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CreateChannelApplicationJSONTypeEnum;
}

export class CreateChannelRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CreateChannelApplicationJSON;

  /**
   * Unique identifier of the user.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

/**
 * **Status Code**: `201` <br>
 *
 * @remarks
 * Channel created.
 */
export class CreateChannel201ApplicationXML extends SpeakeasyBase {
  /**
   * Channel ID: Unique Identifier of the Channel.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Channel JID.
   */
  @SpeakeasyMetadata()
  jid?: string;

  /**
   * Channel name.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Channel type.
   */
  @SpeakeasyMetadata()
  type?: number;
}

/**
 * **Status Code**: `201` <br>
 *
 * @remarks
 * Channel created.
 */
export class CreateChannel201ApplicationJSON extends SpeakeasyBase {
  /**
   * Channel ID: Unique Identifier of the Channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Channel JID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jid" })
  jid?: string;

  /**
   * Channel name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Channel type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: number;
}

export class CreateChannelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **Status Code**: `201` <br>
   *
   * @remarks
   * Channel created.
   */
  @SpeakeasyMetadata()
  createChannel201ApplicationJSONObject?: CreateChannel201ApplicationJSON;
}
