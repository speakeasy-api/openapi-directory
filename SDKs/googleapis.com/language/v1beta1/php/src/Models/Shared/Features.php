<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Features - All available features for sentiment, syntax, and semantic analysis. Setting each one to true will enable that specific analysis for the input.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Features
{
    /**
     * Extract document-level sentiment.
     * 
     * @var ?bool $extractDocumentSentiment
     */
	#[\JMS\Serializer\Annotation\SerializedName('extractDocumentSentiment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $extractDocumentSentiment = null;
    
    /**
     * Extract entities.
     * 
     * @var ?bool $extractEntities
     */
	#[\JMS\Serializer\Annotation\SerializedName('extractEntities')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $extractEntities = null;
    
    /**
     * Extract syntax information.
     * 
     * @var ?bool $extractSyntax
     */
	#[\JMS\Serializer\Annotation\SerializedName('extractSyntax')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $extractSyntax = null;
    
	public function __construct()
	{
		$this->extractDocumentSentiment = null;
		$this->extractEntities = null;
		$this->extractSyntax = null;
	}
}
