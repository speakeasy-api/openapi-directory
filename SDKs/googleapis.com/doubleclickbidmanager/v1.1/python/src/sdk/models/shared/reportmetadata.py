"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import reportstatus as shared_reportstatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportMetadata:
    r"""Report metadata."""
    
    google_cloud_storage_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('googleCloudStoragePath'), 'exclude': lambda f: f is None }})
    r"""The path to the location in Google Cloud Storage where the report is stored."""  
    report_data_end_time_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportDataEndTimeMs'), 'exclude': lambda f: f is None }})
    r"""The ending time for the data that is shown in the report."""  
    report_data_start_time_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportDataStartTimeMs'), 'exclude': lambda f: f is None }})
    r"""The starting time for the data that is shown in the report."""  
    status: Optional[shared_reportstatus.ReportStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Report status."""  
    