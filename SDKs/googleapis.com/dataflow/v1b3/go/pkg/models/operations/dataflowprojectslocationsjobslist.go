// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DataflowProjectsLocationsJobsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DataflowProjectsLocationsJobsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DataflowProjectsLocationsJobsListSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DataflowProjectsLocationsJobsListSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DataflowProjectsLocationsJobsListSecurity struct {
	Option1 *DataflowProjectsLocationsJobsListSecurityOption1 `security:"option"`
	Option2 *DataflowProjectsLocationsJobsListSecurityOption2 `security:"option"`
	Option3 *DataflowProjectsLocationsJobsListSecurityOption3 `security:"option"`
	Option4 *DataflowProjectsLocationsJobsListSecurityOption4 `security:"option"`
}

// DataflowProjectsLocationsJobsListFilterEnum - The kind of filter to use.
type DataflowProjectsLocationsJobsListFilterEnum string

const (
	DataflowProjectsLocationsJobsListFilterEnumUnknown    DataflowProjectsLocationsJobsListFilterEnum = "UNKNOWN"
	DataflowProjectsLocationsJobsListFilterEnumAll        DataflowProjectsLocationsJobsListFilterEnum = "ALL"
	DataflowProjectsLocationsJobsListFilterEnumTerminated DataflowProjectsLocationsJobsListFilterEnum = "TERMINATED"
	DataflowProjectsLocationsJobsListFilterEnumActive     DataflowProjectsLocationsJobsListFilterEnum = "ACTIVE"
)

func (e DataflowProjectsLocationsJobsListFilterEnum) ToPointer() *DataflowProjectsLocationsJobsListFilterEnum {
	return &e
}

func (e *DataflowProjectsLocationsJobsListFilterEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "ALL":
		fallthrough
	case "TERMINATED":
		fallthrough
	case "ACTIVE":
		*e = DataflowProjectsLocationsJobsListFilterEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataflowProjectsLocationsJobsListFilterEnum: %v", v)
	}
}

// DataflowProjectsLocationsJobsListViewEnum - Deprecated. ListJobs always returns summaries now. Use GetJob for other JobViews.
type DataflowProjectsLocationsJobsListViewEnum string

const (
	DataflowProjectsLocationsJobsListViewEnumJobViewUnknown     DataflowProjectsLocationsJobsListViewEnum = "JOB_VIEW_UNKNOWN"
	DataflowProjectsLocationsJobsListViewEnumJobViewSummary     DataflowProjectsLocationsJobsListViewEnum = "JOB_VIEW_SUMMARY"
	DataflowProjectsLocationsJobsListViewEnumJobViewAll         DataflowProjectsLocationsJobsListViewEnum = "JOB_VIEW_ALL"
	DataflowProjectsLocationsJobsListViewEnumJobViewDescription DataflowProjectsLocationsJobsListViewEnum = "JOB_VIEW_DESCRIPTION"
)

func (e DataflowProjectsLocationsJobsListViewEnum) ToPointer() *DataflowProjectsLocationsJobsListViewEnum {
	return &e
}

func (e *DataflowProjectsLocationsJobsListViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JOB_VIEW_UNKNOWN":
		fallthrough
	case "JOB_VIEW_SUMMARY":
		fallthrough
	case "JOB_VIEW_ALL":
		fallthrough
	case "JOB_VIEW_DESCRIPTION":
		*e = DataflowProjectsLocationsJobsListViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataflowProjectsLocationsJobsListViewEnum: %v", v)
	}
}

type DataflowProjectsLocationsJobsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// The kind of filter to use.
	Filter *DataflowProjectsLocationsJobsListFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.
	Location string `pathParam:"style=simple,explode=false,name=location"`
	// Optional. The job name. Optional.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// If there are many jobs, limit response to at most this many. The actual number of jobs returned will be the lesser of max_responses and an unspecified server-defined limit.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Set this to the 'next_page_token' field of a previous response to request additional results in a long list.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// The project which owns the jobs.
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Deprecated. ListJobs always returns summaries now. Use GetJob for other JobViews.
	View *DataflowProjectsLocationsJobsListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type DataflowProjectsLocationsJobsListResponse struct {
	ContentType string
	// Successful response
	ListJobsResponse *shared.ListJobsResponse
	StatusCode       int
	RawResponse      *http.Response
}
