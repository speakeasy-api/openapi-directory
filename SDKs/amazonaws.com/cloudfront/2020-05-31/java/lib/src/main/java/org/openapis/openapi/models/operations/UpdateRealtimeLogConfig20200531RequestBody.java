/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



public class UpdateRealtimeLogConfig20200531RequestBody {
    /**
     * The Amazon Resource Name (ARN) for this real-time log configuration.
     */
    
    public String arn;
    public UpdateRealtimeLogConfig20200531RequestBody withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    /**
     * Contains information about the Amazon Kinesis data stream where you are sending real-time log data.
     */
    
    public org.openapis.openapi.models.shared.EndPoint[] endPoints;
    public UpdateRealtimeLogConfig20200531RequestBody withEndPoints(org.openapis.openapi.models.shared.EndPoint[] endPoints) {
        this.endPoints = endPoints;
        return this;
    }
    
    /**
     * &lt;p&gt;A list of fields to include in each real-time log record.&lt;/p&gt; &lt;p&gt;For more information about fields, see &lt;a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/real-time-logs.html#understand-real-time-log-config-fields"&gt;Real-time log configuration fields&lt;/a&gt; in the &lt;i&gt;Amazon CloudFront Developer Guide&lt;/i&gt;.&lt;/p&gt;
     */
    
    public String[] fields;
    public UpdateRealtimeLogConfig20200531RequestBody withFields(String[] fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The name for this real-time log configuration.
     */
    
    public String name;
    public UpdateRealtimeLogConfig20200531RequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The sampling rate for this real-time log configuration. The sampling rate determines the percentage of viewer requests that are represented in the real-time log data. You must provide an integer between 1 and 100, inclusive.
     */
    
    public Long samplingRate;
    public UpdateRealtimeLogConfig20200531RequestBody withSamplingRate(Long samplingRate) {
        this.samplingRate = samplingRate;
        return this;
    }
    
}
