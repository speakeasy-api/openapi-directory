/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesPredictionTiming } from "./tflapipresentationentitiespredictiontiming";
import { Expose, Transform, Type } from "class-transformer";

/**
 * DTO to capture the prediction details
 */
export class TflApiPresentationEntitiesPrediction extends SpeakeasyBase {
  /**
   * Bearing (between 0 to 359)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bearing" })
  bearing?: string;

  /**
   * The current location of the vehicle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentLocation" })
  currentLocation?: string;

  /**
   * Name of the destination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destinationName" })
  destinationName?: string;

  /**
   * Naptan Identifier for the prediction's destination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destinationNaptanId" })
  destinationNaptanId?: string;

  /**
   * Direction (unified to inbound/outbound)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  /**
   * The expected arrival time of the vehicle at the stop/station
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedArrival" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expectedArrival?: Date;

  /**
   * The identitier for the prediction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Unique identifier for the Line
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lineId" })
  lineId?: string;

  /**
   * Line Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lineName" })
  lineName?: string;

  /**
   * The mode name of the station/line the prediction relates to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modeName" })
  modeName?: string;

  /**
   * Identifier for the prediction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "naptanId" })
  naptanId?: string;

  /**
   * The type of the operation (1: is new or has been updated, 2: should be deleted from any client cache)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operationType" })
  operationType?: number;

  /**
   * Platform name (for bus, this is the stop letter)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platformName" })
  platformName?: string;

  /**
   * Station name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stationName" })
  stationName?: string;

  /**
   * The expiry time for the prediction
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeToLive" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeToLive?: Date;

  /**
   * Prediction of the Time to station in seconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeToStation" })
  timeToStation?: number;

  /**
   * Timestamp for when the prediction was inserted/modified (source column drives what objects are broadcast on each iteration)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "timing" })
  @Type(() => TflApiPresentationEntitiesPredictionTiming)
  timing?: TflApiPresentationEntitiesPredictionTiming;

  /**
   * Routing information or other descriptive text about the path of the vehicle towards the destination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "towards" })
  towards?: string;

  /**
   * The actual vehicle in transit (for train modes, the leading car of the rolling set)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vehicleId" })
  vehicleId?: string;
}
