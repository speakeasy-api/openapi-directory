// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetuserConversationsRequest struct {
	// User ID
	UserID string `pathParam:"style=simple,explode=false,name=user_id"`
}

type GetuserConversations200ApplicationJSONTimestamp struct {
	// Timestamp
	Created *string `json:"created,omitempty"`
}

type GetuserConversations200ApplicationJSON struct {
	// The display name for the conversation. It does not have to be unique
	DisplayName *string `json:"display_name,omitempty"`
	// A link towards a resources included in Conversation API
	Href *string `json:"href,omitempty"`
	// The unique identifier for this conversation
	ID *string `json:"id,omitempty"`
	// A link to an image for conversations' and users' avatars
	ImageURL *string `json:"image_url,omitempty"`
	// Member ID
	MemberID *string `json:"member_id,omitempty"`
	// Unique name for a conversation
	Name *string `json:"name,omitempty"`
	// the id of the last event of the conversation (event's id is an incremental number
	SequenceNumber *int64 `json:"sequence_number,omitempty"`
	// The state that the member is in. Possible values are `invited`, `joined`, `left`, or `unknown`
	State     *shared.MemberStateEnum                          `json:"state,omitempty"`
	Timestamp *GetuserConversations200ApplicationJSONTimestamp `json:"timestamp,omitempty"`
}

type GetuserConversationsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// List user conversations
	GetuserConversations200ApplicationJSONObjects []GetuserConversations200ApplicationJSON
}
