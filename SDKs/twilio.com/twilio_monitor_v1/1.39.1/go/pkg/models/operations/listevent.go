// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListEventServerList = []string{
	"https://monitor.twilio.com",
}

type ListEventSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type ListEventQueryParams struct {
	// Only include events initiated by this Actor. Useful for auditing actions taken by specific users or API credentials.
	ActorSid *string `queryParam:"style=form,explode=true,name=ActorSid"`
	// Only include events that occurred on or before this date. Specify the date in GMT and [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	EndDate *time.Time `queryParam:"style=form,explode=true,name=EndDate"`
	// Only include events of this [Event Type](https://www.twilio.com/docs/usage/monitor-events#event-types).
	EventType *string `queryParam:"style=form,explode=true,name=EventType"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// Only include events that refer to this resource. Useful for discovering the history of a specific resource.
	ResourceSid *string `queryParam:"style=form,explode=true,name=ResourceSid"`
	// Only include events that originated from this IP address. Useful for tracking suspicious activity originating from the API or the Twilio Console.
	SourceIPAddress *string `queryParam:"style=form,explode=true,name=SourceIpAddress"`
	// Only include events that occurred on or after this date. Specify the date in GMT and [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	StartDate *time.Time `queryParam:"style=form,explode=true,name=StartDate"`
}

type ListEventRequest struct {
	QueryParams ListEventQueryParams
	Security    ListEventSecurity
	ServerURL   *string
}

type ListEventListEventResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListEventListEventResponse - OK
type ListEventListEventResponse struct {
	Events []shared.MonitorV1Event         `json:"events,omitempty"`
	Meta   *ListEventListEventResponseMeta `json:"meta,omitempty"`
}

type ListEventResponse struct {
	ContentType string
	// OK
	ListEventResponse *ListEventListEventResponse
	StatusCode        int
	RawResponse       *http.Response
}
