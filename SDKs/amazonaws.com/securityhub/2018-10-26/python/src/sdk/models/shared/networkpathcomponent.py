"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import networkheader as shared_networkheader
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkPathComponent:
    r"""Information about a network path component."""
    
    component_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComponentId'), 'exclude': lambda f: f is None }})  
    component_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComponentType'), 'exclude': lambda f: f is None }})  
    egress: Optional[shared_networkheader.NetworkHeader] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Egress'), 'exclude': lambda f: f is None }})  
    ingress: Optional[shared_networkheader.NetworkHeader] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ingress'), 'exclude': lambda f: f is None }})  
    