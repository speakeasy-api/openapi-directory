"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackendBucketCdnPolicy = exports.BackendBucketCdnPolicyCacheModeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var backendbucketcdnpolicybypasscacheonrequestheader_1 = require("./backendbucketcdnpolicybypasscacheonrequestheader");
var backendbucketcdnpolicycachekeypolicy_1 = require("./backendbucketcdnpolicycachekeypolicy");
var backendbucketcdnpolicynegativecachingpolicy_1 = require("./backendbucketcdnpolicynegativecachingpolicy");
var class_transformer_1 = require("class-transformer");
/**
 * Specifies the cache setting for all responses from this backend. The possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid caching headers to cache content. Responses without these headers will not be cached at Google's edge, and will require a full trip to the origin on every request, potentially impacting performance and increasing load on the origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private", "no-store" or "no-cache" directives in Cache-Control response headers. Warning: this may result in Cloud CDN caching private, per-user (user identifiable) content. CACHE_ALL_STATIC Automatically cache static content, including common image formats, media (video and audio), and web assets (JavaScript and CSS). Requests and responses that are marked as uncacheable, as well as dynamic content (including HTML), will not be cached.
 */
var BackendBucketCdnPolicyCacheModeEnum;
(function (BackendBucketCdnPolicyCacheModeEnum) {
    BackendBucketCdnPolicyCacheModeEnum["CacheAllStatic"] = "CACHE_ALL_STATIC";
    BackendBucketCdnPolicyCacheModeEnum["ForceCacheAll"] = "FORCE_CACHE_ALL";
    BackendBucketCdnPolicyCacheModeEnum["InvalidCacheMode"] = "INVALID_CACHE_MODE";
    BackendBucketCdnPolicyCacheModeEnum["UseOriginHeaders"] = "USE_ORIGIN_HEADERS";
})(BackendBucketCdnPolicyCacheModeEnum = exports.BackendBucketCdnPolicyCacheModeEnum || (exports.BackendBucketCdnPolicyCacheModeEnum = {}));
/**
 * Message containing Cloud CDN configuration for a backend bucket.
 */
var BackendBucketCdnPolicy = /** @class */ (function (_super) {
    __extends(BackendBucketCdnPolicy, _super);
    function BackendBucketCdnPolicy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: backendbucketcdnpolicybypasscacheonrequestheader_1.BackendBucketCdnPolicyBypassCacheOnRequestHeader,
        }),
        (0, class_transformer_1.Expose)({ name: "bypassCacheOnRequestHeaders" }),
        (0, class_transformer_1.Type)(function () { return backendbucketcdnpolicybypasscacheonrequestheader_1.BackendBucketCdnPolicyBypassCacheOnRequestHeader; }),
        __metadata("design:type", Array)
    ], BackendBucketCdnPolicy.prototype, "bypassCacheOnRequestHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cacheKeyPolicy" }),
        (0, class_transformer_1.Type)(function () { return backendbucketcdnpolicycachekeypolicy_1.BackendBucketCdnPolicyCacheKeyPolicy; }),
        __metadata("design:type", backendbucketcdnpolicycachekeypolicy_1.BackendBucketCdnPolicyCacheKeyPolicy)
    ], BackendBucketCdnPolicy.prototype, "cacheKeyPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cacheMode" }),
        __metadata("design:type", String)
    ], BackendBucketCdnPolicy.prototype, "cacheMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientTtl" }),
        __metadata("design:type", Number)
    ], BackendBucketCdnPolicy.prototype, "clientTtl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultTtl" }),
        __metadata("design:type", Number)
    ], BackendBucketCdnPolicy.prototype, "defaultTtl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxTtl" }),
        __metadata("design:type", Number)
    ], BackendBucketCdnPolicy.prototype, "maxTtl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "negativeCaching" }),
        __metadata("design:type", Boolean)
    ], BackendBucketCdnPolicy.prototype, "negativeCaching", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: backendbucketcdnpolicynegativecachingpolicy_1.BackendBucketCdnPolicyNegativeCachingPolicy }),
        (0, class_transformer_1.Expose)({ name: "negativeCachingPolicy" }),
        (0, class_transformer_1.Type)(function () { return backendbucketcdnpolicynegativecachingpolicy_1.BackendBucketCdnPolicyNegativeCachingPolicy; }),
        __metadata("design:type", Array)
    ], BackendBucketCdnPolicy.prototype, "negativeCachingPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requestCoalescing" }),
        __metadata("design:type", Boolean)
    ], BackendBucketCdnPolicy.prototype, "requestCoalescing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serveWhileStale" }),
        __metadata("design:type", Number)
    ], BackendBucketCdnPolicy.prototype, "serveWhileStale", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "signedUrlCacheMaxAgeSec" }),
        __metadata("design:type", String)
    ], BackendBucketCdnPolicy.prototype, "signedUrlCacheMaxAgeSec", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "signedUrlKeyNames" }),
        __metadata("design:type", Array)
    ], BackendBucketCdnPolicy.prototype, "signedUrlKeyNames", void 0);
    return BackendBucketCdnPolicy;
}(utils_1.SpeakeasyBase));
exports.BackendBucketCdnPolicy = BackendBucketCdnPolicy;
