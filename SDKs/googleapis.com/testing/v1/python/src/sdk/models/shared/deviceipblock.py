"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import date_ as shared_date_
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeviceIPBlockFormEnum(str, Enum):
    r"""Whether this block is used by physical or virtual devices"""
    DEVICE_FORM_UNSPECIFIED = 'DEVICE_FORM_UNSPECIFIED'
    VIRTUAL = 'VIRTUAL'
    PHYSICAL = 'PHYSICAL'
    EMULATOR = 'EMULATOR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceIPBlock:
    r"""A single device IP block"""
    
    added_date: Optional[shared_date_.Date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addedDate'), 'exclude': lambda f: f is None }})
    r"""Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"""  
    block: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('block'), 'exclude': lambda f: f is None }})
    r"""An IP address block in CIDR notation eg: 34.68.194.64/29"""  
    form: Optional[DeviceIPBlockFormEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('form'), 'exclude': lambda f: f is None }})
    r"""Whether this block is used by physical or virtual devices"""  
    