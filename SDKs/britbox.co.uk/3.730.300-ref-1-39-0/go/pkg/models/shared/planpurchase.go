// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlanPurchaseTypeEnum - The type of plan purchased.
type PlanPurchaseTypeEnum string

const (
	PlanPurchaseTypeEnumFree         PlanPurchaseTypeEnum = "Free"
	PlanPurchaseTypeEnumSubscription PlanPurchaseTypeEnum = "Subscription"
)

func (e *PlanPurchaseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Free":
		fallthrough
	case "Subscription":
		*e = PlanPurchaseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlanPurchaseTypeEnum: %s", s)
	}
}

type PlanPurchase struct {
	// The identifier of the purchased plan.
	ID *string `json:"id,omitempty"`
	// The price of the purchased plan.
	Price *float32 `json:"price,omitempty"`
	// The identifier of the subscription membership to the plan.
	SubscriptionID *string `json:"subscriptionId,omitempty"`
	// The title of the purchased plan.
	Title string `json:"title"`
	// The type of plan purchased.
	Type PlanPurchaseTypeEnum `json:"type"`
}
