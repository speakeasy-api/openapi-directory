/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DetectedCatalogColumnLinks {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configure")
    public LinksImportationConfigureCatalogColumnLink configure;

    public DetectedCatalogColumnLinks withConfigure(LinksImportationConfigureCatalogColumnLink configure) {
        this.configure = configure;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ignore")
    public LinksImportationIgnoreColumnLink ignore;

    public DetectedCatalogColumnLinks withIgnore(LinksImportationIgnoreColumnLink ignore) {
        this.ignore = ignore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("map")
    public LinksImportationMapCatalogColumnLink map;

    public DetectedCatalogColumnLinks withMap(LinksImportationMapCatalogColumnLink map) {
        this.map = map;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reattend")
    public LinksImportationReattendColumnLink reattend;

    public DetectedCatalogColumnLinks withReattend(LinksImportationReattendColumnLink reattend) {
        this.reattend = reattend;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unmap")
    public LinksImportationUnmapCatalogColumnLink unmap;

    public DetectedCatalogColumnLinks withUnmap(LinksImportationUnmapCatalogColumnLink unmap) {
        this.unmap = unmap;
        return this;
    }
    
    public DetectedCatalogColumnLinks(){}
}
