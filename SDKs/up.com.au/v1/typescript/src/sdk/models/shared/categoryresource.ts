/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class CategoryResourceAttributes extends SpeakeasyBase {
  /**
   * The name of this category as seen in the Up application.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class CategoryResourceLinks extends SpeakeasyBase {
  /**
   * The canonical link to this resource within the API.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  self: string;
}

export class CategoryResourceRelationshipsChildrenData extends SpeakeasyBase {
  /**
   * The unique identifier of the resource within its type.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The type of this resource: `categories`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class CategoryResourceRelationshipsChildrenLinks extends SpeakeasyBase {
  /**
   * The link to retrieve the related resource(s) in this relationship.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "related" })
  related: string;
}

export class CategoryResourceRelationshipsChildren extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CategoryResourceRelationshipsChildrenData })
  @Expose({ name: "data" })
  @Type(() => CategoryResourceRelationshipsChildrenData)
  data: CategoryResourceRelationshipsChildrenData[];

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => CategoryResourceRelationshipsChildrenLinks)
  links?: CategoryResourceRelationshipsChildrenLinks;
}

export class CategoryResourceRelationshipsParentData extends SpeakeasyBase {
  /**
   * The unique identifier of the resource within its type.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The type of this resource: `categories`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class CategoryResourceRelationshipsParentLinks extends SpeakeasyBase {
  /**
   * The link to retrieve the related resource(s) in this relationship.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "related" })
  related: string;
}

export class CategoryResourceRelationshipsParent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => CategoryResourceRelationshipsParentData)
  data: CategoryResourceRelationshipsParentData;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => CategoryResourceRelationshipsParentLinks)
  links?: CategoryResourceRelationshipsParentLinks;
}

export class CategoryResourceRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "children" })
  @Type(() => CategoryResourceRelationshipsChildren)
  children: CategoryResourceRelationshipsChildren;

  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  @Type(() => CategoryResourceRelationshipsParent)
  parent: CategoryResourceRelationshipsParent;
}

/**
 * Provides information about a category and its ancestry.
 *
 * @remarks
 *
 */
export class CategoryResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => CategoryResourceAttributes)
  attributes: CategoryResourceAttributes;

  /**
   * The unique identifier for this category. This is a human-readable but
   *
   * @remarks
   * URL-safe value.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => CategoryResourceLinks)
  links?: CategoryResourceLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => CategoryResourceRelationships)
  relationships: CategoryResourceRelationships;

  /**
   * The type of this resource: `categories`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
