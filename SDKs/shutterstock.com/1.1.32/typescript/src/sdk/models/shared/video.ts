/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Category } from "./category";
import { Contributor } from "./contributor";
import { Model } from "./model";
import { VideoAssets } from "./videoassets";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a video
 */
export class Video extends SpeakeasyBase {
  /**
   * Date this video was added to the Shutterstock library
   */
  @SpeakeasyMetadata()
  @Expose({ name: "added_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  addedDate?: Date;

  /**
   * Affiliate referral link; appears only for registered affiliate partners
   */
  @SpeakeasyMetadata()
  @Expose({ name: "affiliate_url" })
  affiliateUrl?: string;

  /**
   * Aspect ratio of this video in decimal format, such as 0.6667
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aspect" })
  aspect?: number;

  /**
   * Aspect ratio of the video as a ratio, such as 16:9
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aspect_ratio" })
  aspectRatio?: string;

  /**
   * Video asset information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assets" })
  @Type(() => VideoAssets)
  assets?: VideoAssets;

  /**
   * List of categories
   */
  @SpeakeasyMetadata({ elemType: Category })
  @Expose({ name: "categories" })
  @Type(() => Category)
  categories?: Category[];

  /**
   * Information about a contributor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor" })
  @Type(() => Contributor)
  contributor: Contributor;

  /**
   * Description of this video
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Duration of this video, in seconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * Whether or not this video has been released for use by the model appearing in it
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_model_release" })
  hasModelRelease?: boolean;

  /**
   * Whether or not this video has received a release to show the landmark or property appearing in it
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_property_release" })
  hasPropertyRelease?: boolean;

  /**
   * ID of the video
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Whether or not this video contains adult content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_adult" })
  isAdult?: boolean;

  /**
   * Whether or not this video is editorial content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_editorial" })
  isEditorial?: boolean;

  /**
   * Keywords associated with the content of this video
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keywords" })
  keywords?: string[];

  /**
   * Media type of this video, should always be "video"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "media_type" })
  mediaType: string;

  /**
   * List of models in this video
   */
  @SpeakeasyMetadata({ elemType: Model })
  @Expose({ name: "models" })
  @Type(() => Model)
  models?: Model[];

  /**
   * Link to video information page; included only for certain accounts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
