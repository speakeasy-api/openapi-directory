/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Cluster - A Google Kubernetes Engine cluster.
 */
public class Cluster {
    /**
     * Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addonsConfig")
    public AddonsConfig addonsConfig;
    public Cluster withAddonsConfig(AddonsConfig addonsConfig) {
        this.addonsConfig = addonsConfig;
        return this;
    }
    
    /**
     * Configuration for returning group information from authenticators.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticatorGroupsConfig")
    public AuthenticatorGroupsConfig authenticatorGroupsConfig;
    public Cluster withAuthenticatorGroupsConfig(AuthenticatorGroupsConfig authenticatorGroupsConfig) {
        this.authenticatorGroupsConfig = authenticatorGroupsConfig;
        return this;
    }
    
    /**
     * Autopilot is the configuration for Autopilot settings on the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autopilot")
    public Autopilot autopilot;
    public Cluster withAutopilot(Autopilot autopilot) {
        this.autopilot = autopilot;
        return this;
    }
    
    /**
     * ClusterAutoscaling contains global, per-cluster information required by Cluster Autoscaler to automatically adjust the size of the cluster and create/delete node pools based on the current needs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoscaling")
    public ClusterAutoscaling autoscaling;
    public Cluster withAutoscaling(ClusterAutoscaling autoscaling) {
        this.autoscaling = autoscaling;
        return this;
    }
    
    /**
     * Configuration for Binary Authorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("binaryAuthorization")
    public BinaryAuthorization binaryAuthorization;
    public Cluster withBinaryAuthorization(BinaryAuthorization binaryAuthorization) {
        this.binaryAuthorization = binaryAuthorization;
        return this;
    }
    
    /**
     * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterIpv4Cidr")
    public String clusterIpv4Cidr;
    public Cluster withClusterIpv4Cidr(String clusterIpv4Cidr) {
        this.clusterIpv4Cidr = clusterIpv4Cidr;
        return this;
    }
    
    /**
     * Telemetry integration for the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterTelemetry")
    public ClusterTelemetry clusterTelemetry;
    public Cluster withClusterTelemetry(ClusterTelemetry clusterTelemetry) {
        this.clusterTelemetry = clusterTelemetry;
        return this;
    }
    
    /**
     * Which conditions caused the current cluster state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public StatusCondition[] conditions;
    public Cluster withConditions(StatusCondition[] conditions) {
        this.conditions = conditions;
        return this;
    }
    
    /**
     * ConfidentialNodes is configuration for the confidential nodes feature, which makes nodes run on confidential VMs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidentialNodes")
    public ConfidentialNodes confidentialNodes;
    public Cluster withConfidentialNodes(ConfidentialNodes confidentialNodes) {
        this.confidentialNodes = confidentialNodes;
        return this;
    }
    
    /**
     * Configuration for fine-grained cost management feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("costManagementConfig")
    public CostManagementConfig costManagementConfig;
    public Cluster withCostManagementConfig(CostManagementConfig costManagementConfig) {
        this.costManagementConfig = costManagementConfig;
        return this;
    }
    
    /**
     * [Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public Cluster withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * [Output only] The current software version of the master endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentMasterVersion")
    public String currentMasterVersion;
    public Cluster withCurrentMasterVersion(String currentMasterVersion) {
        this.currentMasterVersion = currentMasterVersion;
        return this;
    }
    
    /**
     * [Output only] The number of nodes currently in the cluster. Deprecated. Call Kubernetes API directly to retrieve node information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentNodeCount")
    public Integer currentNodeCount;
    public Cluster withCurrentNodeCount(Integer currentNodeCount) {
        this.currentNodeCount = currentNodeCount;
        return this;
    }
    
    /**
     * [Output only] Deprecated, use [NodePool.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1beta1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentNodeVersion")
    public String currentNodeVersion;
    public Cluster withCurrentNodeVersion(String currentNodeVersion) {
        this.currentNodeVersion = currentNodeVersion;
        return this;
    }
    
    /**
     * Configuration of etcd encryption.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseEncryption")
    public DatabaseEncryption databaseEncryption;
    public Cluster withDatabaseEncryption(DatabaseEncryption databaseEncryption) {
        this.databaseEncryption = databaseEncryption;
        return this;
    }
    
    /**
     * Constraints applied to pods.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultMaxPodsConstraint")
    public MaxPodsConstraint defaultMaxPodsConstraint;
    public Cluster withDefaultMaxPodsConstraint(MaxPodsConstraint defaultMaxPodsConstraint) {
        this.defaultMaxPodsConstraint = defaultMaxPodsConstraint;
        return this;
    }
    
    /**
     * An optional description of this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Cluster withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1beta1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableKubernetesAlpha")
    public Boolean enableKubernetesAlpha;
    public Cluster withEnableKubernetesAlpha(Boolean enableKubernetesAlpha) {
        this.enableKubernetesAlpha = enableKubernetesAlpha;
        return this;
    }
    
    /**
     * Enable the ability to use Cloud TPUs in this cluster. This field is deprecated, use tpu_config.enabled instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableTpu")
    public Boolean enableTpu;
    public Cluster withEnableTpu(Boolean enableTpu) {
        this.enableTpu = enableTpu;
        return this;
    }
    
    /**
     * [Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpoint")
    public String endpoint;
    public Cluster withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    /**
     * This checksum is computed by the server based on the value of cluster fields, and may be sent on update requests to ensure the client has an up-to-date value before proceeding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Cluster withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * [Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expireTime")
    public String expireTime;
    public Cluster withExpireTime(String expireTime) {
        this.expireTime = expireTime;
        return this;
    }
    
    /**
     * Fleet is the fleet configuration for the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fleet")
    public Fleet fleet;
    public Cluster withFleet(Fleet fleet) {
        this.fleet = fleet;
        return this;
    }
    
    /**
     * Output only. Unique id for the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Cluster withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * IdentityServiceConfig is configuration for Identity Service which allows customers to use external identity providers with the K8S API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identityServiceConfig")
    public IdentityServiceConfig identityServiceConfig;
    public Cluster withIdentityServiceConfig(IdentityServiceConfig identityServiceConfig) {
        this.identityServiceConfig = identityServiceConfig;
        return this;
    }
    
    /**
     * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialClusterVersion")
    public String initialClusterVersion;
    public Cluster withInitialClusterVersion(String initialClusterVersion) {
        this.initialClusterVersion = initialClusterVersion;
        return this;
    }
    
    /**
     * The number of nodes to create in this cluster. You must ensure that your Compute Engine [resource quota](https://cloud.google.com/compute/quotas) is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a "node_pool" object, since this configuration (along with the "node_config") will be used to create a "NodePool" object with an auto-generated name. Do not use this and a node_pool at the same time. This field is deprecated, use node_pool.initial_node_count instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialNodeCount")
    public Integer initialNodeCount;
    public Cluster withInitialNodeCount(Integer initialNodeCount) {
        this.initialNodeCount = initialNodeCount;
        return this;
    }
    
    /**
     * Deprecated. Use node_pools.instance_group_urls.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceGroupUrls")
    public String[] instanceGroupUrls;
    public Cluster withInstanceGroupUrls(String[] instanceGroupUrls) {
        this.instanceGroupUrls = instanceGroupUrls;
        return this;
    }
    
    /**
     * Configuration for controlling how IPs are allocated in the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipAllocationPolicy")
    public IPAllocationPolicy ipAllocationPolicy;
    public Cluster withIpAllocationPolicy(IPAllocationPolicy ipAllocationPolicy) {
        this.ipAllocationPolicy = ipAllocationPolicy;
        return this;
    }
    
    /**
     * The fingerprint of the set of labels for this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelFingerprint")
    public String labelFingerprint;
    public Cluster withLabelFingerprint(String labelFingerprint) {
        this.labelFingerprint = labelFingerprint;
        return this;
    }
    
    /**
     * Configuration for the legacy Attribute Based Access Control authorization mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legacyAbac")
    public LegacyAbac legacyAbac;
    public Cluster withLegacyAbac(LegacyAbac legacyAbac) {
        this.legacyAbac = legacyAbac;
        return this;
    }
    
    /**
     * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public Cluster withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locations")
    public String[] locations;
    public Cluster withLocations(String[] locations) {
        this.locations = locations;
        return this;
    }
    
    /**
     * LoggingConfig is cluster logging configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loggingConfig")
    public LoggingConfig loggingConfig;
    public Cluster withLoggingConfig(LoggingConfig loggingConfig) {
        this.loggingConfig = loggingConfig;
        return this;
    }
    
    /**
     * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loggingService")
    public String loggingService;
    public Cluster withLoggingService(String loggingService) {
        this.loggingService = loggingService;
        return this;
    }
    
    /**
     * MaintenancePolicy defines the maintenance policy to be used for the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenancePolicy")
    public MaintenancePolicy maintenancePolicy;
    public Cluster withMaintenancePolicy(MaintenancePolicy maintenancePolicy) {
        this.maintenancePolicy = maintenancePolicy;
        return this;
    }
    
    /**
     * Master is the configuration for components on master.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("master")
    public java.util.Map<String, Object> master;
    public Cluster withMaster(java.util.Map<String, Object> master) {
        this.master = master;
        return this;
    }
    
    /**
     * The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterAuth")
    public MasterAuth masterAuth;
    public Cluster withMasterAuth(MasterAuth masterAuth) {
        this.masterAuth = masterAuth;
        return this;
    }
    
    /**
     * Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterAuthorizedNetworksConfig")
    public MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig;
    public Cluster withMasterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig) {
        this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
        return this;
    }
    
    /**
     * The IP prefix in CIDR notation to use for the hosted master network. This prefix will be used for assigning private IP addresses to the master or set of masters, as well as the ILB VIP. This field is deprecated, use private_cluster_config.master_ipv4_cidr_block instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterIpv4CidrBlock")
    public String masterIpv4CidrBlock;
    public Cluster withMasterIpv4CidrBlock(String masterIpv4CidrBlock) {
        this.masterIpv4CidrBlock = masterIpv4CidrBlock;
        return this;
    }
    
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meshCertificates")
    public MeshCertificates meshCertificates;
    public Cluster withMeshCertificates(MeshCertificates meshCertificates) {
        this.meshCertificates = meshCertificates;
        return this;
    }
    
    /**
     * MonitoringConfig is cluster monitoring configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monitoringConfig")
    public MonitoringConfig monitoringConfig;
    public Cluster withMonitoringConfig(MonitoringConfig monitoringConfig) {
        this.monitoringConfig = monitoringConfig;
        return this;
    }
    
    /**
     * The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monitoringService")
    public String monitoringService;
    public Cluster withMonitoringService(String monitoringService) {
        this.monitoringService = monitoringService;
        return this;
    }
    
    /**
     * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Cluster withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used. On output this shows the network ID instead of the name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;
    public Cluster withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * NetworkConfig reports the relative names of network &amp; subnetwork.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfig")
    public NetworkConfig networkConfig;
    public Cluster withNetworkConfig(NetworkConfig networkConfig) {
        this.networkConfig = networkConfig;
        return this;
    }
    
    /**
     * Configuration options for the NetworkPolicy feature. https://kubernetes.io/docs/concepts/services-networking/networkpolicies/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkPolicy")
    public NetworkPolicy networkPolicy;
    public Cluster withNetworkPolicy(NetworkPolicy networkPolicy) {
        this.networkPolicy = networkPolicy;
        return this;
    }
    
    /**
     * Parameters that describe the nodes in a cluster. GKE Autopilot clusters do not recognize parameters in `NodeConfig`. Use AutoprovisioningNodePoolDefaults instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeConfig")
    public NodeConfig nodeConfig;
    public Cluster withNodeConfig(NodeConfig nodeConfig) {
        this.nodeConfig = nodeConfig;
        return this;
    }
    
    /**
     * [Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeIpv4CidrSize")
    public Integer nodeIpv4CidrSize;
    public Cluster withNodeIpv4CidrSize(Integer nodeIpv4CidrSize) {
        this.nodeIpv4CidrSize = nodeIpv4CidrSize;
        return this;
    }
    
    /**
     * node pool configs that apply to all auto-provisioned node pools in autopilot clusters and node auto-provisioning enabled clusters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodePoolAutoConfig")
    public NodePoolAutoConfig nodePoolAutoConfig;
    public Cluster withNodePoolAutoConfig(NodePoolAutoConfig nodePoolAutoConfig) {
        this.nodePoolAutoConfig = nodePoolAutoConfig;
        return this;
    }
    
    /**
     * Subset of Nodepool message that has defaults.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodePoolDefaults")
    public NodePoolDefaults nodePoolDefaults;
    public Cluster withNodePoolDefaults(NodePoolDefaults nodePoolDefaults) {
        this.nodePoolDefaults = nodePoolDefaults;
        return this;
    }
    
    /**
     * The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodePools")
    public NodePool[] nodePools;
    public Cluster withNodePools(NodePool[] nodePools) {
        this.nodePools = nodePools;
        return this;
    }
    
    /**
     * NotificationConfig is the configuration of notifications.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notificationConfig")
    public NotificationConfig notificationConfig;
    public Cluster withNotificationConfig(NotificationConfig notificationConfig) {
        this.notificationConfig = notificationConfig;
        return this;
    }
    
    /**
     * Configuration for the PodSecurityPolicy feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("podSecurityPolicyConfig")
    public PodSecurityPolicyConfig podSecurityPolicyConfig;
    public Cluster withPodSecurityPolicyConfig(PodSecurityPolicyConfig podSecurityPolicyConfig) {
        this.podSecurityPolicyConfig = podSecurityPolicyConfig;
        return this;
    }
    
    /**
     * If this is a private cluster setup. Private clusters are clusters that, by default have no external IP addresses on the nodes and where nodes and the master communicate over private IP addresses. This field is deprecated, use private_cluster_config.enable_private_nodes instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateCluster")
    public Boolean privateCluster;
    public Cluster withPrivateCluster(Boolean privateCluster) {
        this.privateCluster = privateCluster;
        return this;
    }
    
    /**
     * Configuration options for private clusters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateClusterConfig")
    public PrivateClusterConfig privateClusterConfig;
    public Cluster withPrivateClusterConfig(PrivateClusterConfig privateClusterConfig) {
        this.privateClusterConfig = privateClusterConfig;
        return this;
    }
    
    /**
     * ProtectConfig defines the flags needed to enable/disable features for the Protect API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protectConfig")
    public ProtectConfig protectConfig;
    public Cluster withProtectConfig(ProtectConfig protectConfig) {
        this.protectConfig = protectConfig;
        return this;
    }
    
    /**
     * ReleaseChannel indicates which release channel a cluster is subscribed to. Release channels are arranged in order of risk. When a cluster is subscribed to a release channel, Google maintains both the master version and the node version. Node auto-upgrade defaults to true and cannot be disabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("releaseChannel")
    public ReleaseChannel releaseChannel;
    public Cluster withReleaseChannel(ReleaseChannel releaseChannel) {
        this.releaseChannel = releaseChannel;
        return this;
    }
    
    /**
     * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceLabels")
    public java.util.Map<String, String> resourceLabels;
    public Cluster withResourceLabels(java.util.Map<String, String> resourceLabels) {
        this.resourceLabels = resourceLabels;
        return this;
    }
    
    /**
     * Configuration for exporting cluster resource usages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceUsageExportConfig")
    public ResourceUsageExportConfig resourceUsageExportConfig;
    public Cluster withResourceUsageExportConfig(ResourceUsageExportConfig resourceUsageExportConfig) {
        this.resourceUsageExportConfig = resourceUsageExportConfig;
        return this;
    }
    
    /**
     * [Output only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public Cluster withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servicesIpv4Cidr")
    public String servicesIpv4Cidr;
    public Cluster withServicesIpv4Cidr(String servicesIpv4Cidr) {
        this.servicesIpv4Cidr = servicesIpv4Cidr;
        return this;
    }
    
    /**
     * Configuration of Shielded Nodes feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shieldedNodes")
    public ShieldedNodes shieldedNodes;
    public Cluster withShieldedNodes(ShieldedNodes shieldedNodes) {
        this.shieldedNodes = shieldedNodes;
        return this;
    }
    
    /**
     * [Output only] The current status of this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ClusterStatusEnum status;
    public Cluster withStatus(ClusterStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * [Output only] Deprecated. Use conditions instead. Additional information about the current status of this cluster, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusMessage")
    public String statusMessage;
    public Cluster withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    /**
     * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected. On output this shows the subnetwork ID instead of the name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetwork")
    public String subnetwork;
    public Cluster withSubnetwork(String subnetwork) {
        this.subnetwork = subnetwork;
        return this;
    }
    
    /**
     * Configuration for Cloud TPU.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tpuConfig")
    public TpuConfig tpuConfig;
    public Cluster withTpuConfig(TpuConfig tpuConfig) {
        this.tpuConfig = tpuConfig;
        return this;
    }
    
    /**
     * [Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tpuIpv4CidrBlock")
    public String tpuIpv4CidrBlock;
    public Cluster withTpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
        this.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
        return this;
    }
    
    /**
     * VerticalPodAutoscaling contains global, per-cluster information required by Vertical Pod Autoscaler to automatically adjust the resources of pods controlled by it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verticalPodAutoscaling")
    public VerticalPodAutoscaling verticalPodAutoscaling;
    public Cluster withVerticalPodAutoscaling(VerticalPodAutoscaling verticalPodAutoscaling) {
        this.verticalPodAutoscaling = verticalPodAutoscaling;
        return this;
    }
    
    /**
     * Configuration for direct-path (via ALTS) with workload identity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workloadAltsConfig")
    public WorkloadALTSConfig workloadAltsConfig;
    public Cluster withWorkloadAltsConfig(WorkloadALTSConfig workloadAltsConfig) {
        this.workloadAltsConfig = workloadAltsConfig;
        return this;
    }
    
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workloadCertificates")
    public WorkloadCertificates workloadCertificates;
    public Cluster withWorkloadCertificates(WorkloadCertificates workloadCertificates) {
        this.workloadCertificates = workloadCertificates;
        return this;
    }
    
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workloadIdentityConfig")
    public WorkloadIdentityConfig workloadIdentityConfig;
    public Cluster withWorkloadIdentityConfig(WorkloadIdentityConfig workloadIdentityConfig) {
        this.workloadIdentityConfig = workloadIdentityConfig;
        return this;
    }
    
    /**
     * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the cluster resides. This field is deprecated, use location instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public Cluster withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
