// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OmidTargetingOptionDetailsOmidEnum - Output only. The type of Open Measurement enabled inventory.
type OmidTargetingOptionDetailsOmidEnum string

const (
	OmidTargetingOptionDetailsOmidEnumOmidUnspecified         OmidTargetingOptionDetailsOmidEnum = "OMID_UNSPECIFIED"
	OmidTargetingOptionDetailsOmidEnumOmidForMobileDisplayAds OmidTargetingOptionDetailsOmidEnum = "OMID_FOR_MOBILE_DISPLAY_ADS"
)

func (e OmidTargetingOptionDetailsOmidEnum) ToPointer() *OmidTargetingOptionDetailsOmidEnum {
	return &e
}

func (e *OmidTargetingOptionDetailsOmidEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OMID_UNSPECIFIED":
		fallthrough
	case "OMID_FOR_MOBILE_DISPLAY_ADS":
		*e = OmidTargetingOptionDetailsOmidEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OmidTargetingOptionDetailsOmidEnum: %v", v)
	}
}

// OmidTargetingOptionDetails - Represents a targetable Open Measurement enabled inventory type. This will be populated in the omid_details field when targeting_type is `TARGETING_TYPE_OMID`.
type OmidTargetingOptionDetails struct {
	// Output only. The type of Open Measurement enabled inventory.
	Omid *OmidTargetingOptionDetailsOmidEnum `json:"omid,omitempty"`
}
