/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * State of the release asset.
 */
export enum ReleaseAssetStateEnum {
  Uploaded = "uploaded",
  Open = "open",
}

/**
 * Data related to a release.
 */
export class ReleaseAsset extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "browser_download_url" })
  browserDownloadUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "content_type" })
  contentType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "download_count" })
  downloadCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  /**
   * The file name of the asset.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size: number;

  /**
   * State of the release asset.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: ReleaseAssetStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uploader" })
  @Type(() => NullableSimpleUser)
  uploader: NullableSimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
