// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// KlarnaInfoRegionEnum - The region of operation. For example, **NA**, **EU**, **CH**, **AU**.
type KlarnaInfoRegionEnum string

const (
	KlarnaInfoRegionEnumNa KlarnaInfoRegionEnum = "NA"
	KlarnaInfoRegionEnumEu KlarnaInfoRegionEnum = "EU"
	KlarnaInfoRegionEnumCh KlarnaInfoRegionEnum = "CH"
	KlarnaInfoRegionEnumAu KlarnaInfoRegionEnum = "AU"
)

func (e KlarnaInfoRegionEnum) ToPointer() *KlarnaInfoRegionEnum {
	return &e
}

func (e *KlarnaInfoRegionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NA":
		fallthrough
	case "EU":
		fallthrough
	case "CH":
		fallthrough
	case "AU":
		*e = KlarnaInfoRegionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KlarnaInfoRegionEnum: %v", v)
	}
}

type KlarnaInfo struct {
	// Indicates the status of [Automatic capture](https://docs.adyen.com/online-payments/capture#automatic-capture). Default value: **false**.
	AutoCapture *bool `json:"autoCapture,omitempty"`
	// The email address for disputes.
	DisputeEmail string `json:"disputeEmail"`
	// The region of operation. For example, **NA**, **EU**, **CH**, **AU**.
	Region *KlarnaInfoRegionEnum `json:"region,omitempty"`
	// The email address of merchant support.
	SupportEmail string `json:"supportEmail"`
}
