"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class DownloadTranslatedDocumentForLanguageRequest:
    
    document_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'documentId', 'style': 'simple', 'explode': False }})
    r"""Document ID"""  
    language: str = dataclasses.field(metadata={'path_param': { 'field_name': 'language', 'style': 'simple', 'explode': False }})
    r"""Target language code."""  
    project_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""Project ID"""  
    certified: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'certified', 'style': 'form', 'explode': True }})
    r"""Download certified translation"""  
    

@dataclasses.dataclass
class DownloadTranslatedDocumentForLanguageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    download_translated_document_for_language_200_application_octet_stream_binary_string: Optional[bytes] = dataclasses.field(default=None)
    r"""File"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""DocumentNotFound"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    