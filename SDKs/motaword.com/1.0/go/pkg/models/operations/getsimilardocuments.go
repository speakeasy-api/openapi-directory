// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetSimilarDocumentsPathParams struct {
	// Document ID
	DocumentID int64 `pathParam:"style=simple,explode=false,name=documentId"`
}

type GetSimilarDocumentsWithEnum string

const (
	GetSimilarDocumentsWithEnumPreview GetSimilarDocumentsWithEnum = "preview"
	GetSimilarDocumentsWithEnumEditors GetSimilarDocumentsWithEnum = "editors"
)

func (e *GetSimilarDocumentsWithEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "preview":
		fallthrough
	case "editors":
		*e = GetSimilarDocumentsWithEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSimilarDocumentsWithEnum: %s", s)
	}
}

type GetSimilarDocumentsQueryParams struct {
	// Determines the number of similar documents to return.
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Attach further information. Possible values 'preview' to fetch temporary preview URLs for Box.com or native PDF. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
	With []GetSimilarDocumentsWithEnum `queryParam:"style=form,explode=true,name=with[]"`
}

type GetSimilarDocumentsRequest struct {
	PathParams  GetSimilarDocumentsPathParams
	QueryParams GetSimilarDocumentsQueryParams
}

type GetSimilarDocumentsResponse struct {
	ContentType string
	// Document list
	DocumentList *shared.DocumentList
	StatusCode   int
	RawResponse  *http.Response
}
