/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountAccess - Requested access services for a consent.
 * 
 */
public class AccountAccess {
    /**
     * Is asking for detailed account information. 
     * 
     * If the array is empty in a request, the TPP is asking for an accessible account list. 
     * This may be restricted in a PSU/ASPSP authorization dialogue. 
     * If the array is empty, also the arrays for balances, additionalInformation sub attributes or transactions shall be empty, if used.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accounts")
    public AccountReference16CH[] accounts;
    public AccountAccess withAccounts(AccountReference16CH[] accounts) {
        this.accounts = accounts;
        return this;
    }
    
    /**
     * Optional if supported by API provider.
     * 
     * Is asking for additional information as added within this structured object.
     * The usage of this data element requires at least one of the entries "accounts", 
     * "transactions" or "balances" also to be contained in the object. 
     * If detailed accounts are referenced, it is required in addition that any account addressed within 
     * the additionalInformation attribute is also addressed by at least one of the attributes "accounts", 
     * "transactions" or "balances".
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalInformation")
    public AdditionalInformationAccess additionalInformation;
    public AccountAccess withAdditionalInformation(AdditionalInformationAccess additionalInformation) {
        this.additionalInformation = additionalInformation;
        return this;
    }
    
    /**
     * Optional if supported by API provider.
     * 
     * The values "allAccounts" and "allAccountsWithOwnerName" are admitted. 
     * The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allPsd2")
    public AccountAccessAllPsd2Enum allPsd2;
    public AccountAccess withAllPsd2(AccountAccessAllPsd2Enum allPsd2) {
        this.allPsd2 = allPsd2;
        return this;
    }
    
    /**
     * Optional if supported by API provider.
     * 
     * The values "allAccounts" and "allAccountsWithOwnerName" are admitted. 
     * The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableAccounts")
    public AccountAccessAvailableAccountsEnum availableAccounts;
    public AccountAccess withAvailableAccounts(AccountAccessAvailableAccountsEnum availableAccounts) {
        this.availableAccounts = availableAccounts;
        return this;
    }
    
    /**
     * Optional if supported by API provider.
     * 
     * The values "allAccounts" and "allAccountsWithOwnerName" are admitted. 
     * The support of the "allAccountsWithOwnerName" value by the ASPSP is optional.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableAccountsWithBalance")
    public AccountAccessAvailableAccountsWithBalanceEnum availableAccountsWithBalance;
    public AccountAccess withAvailableAccountsWithBalance(AccountAccessAvailableAccountsWithBalanceEnum availableAccountsWithBalance) {
        this.availableAccountsWithBalance = availableAccountsWithBalance;
        return this;
    }
    
    /**
     * Is asking for balances of the addressed accounts.
     * 
     * If the array is empty in the request, the TPP is asking for the balances of all accessible account lists. 
     * This may be restricted in a PSU/ASPSP authorization dialogue. 
     * If the array is empty, also the arrays for accounts, additionalInformation sub attributes or transactions shall be empty, if used.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balances")
    public AccountReference16CH[] balances;
    public AccountAccess withBalances(AccountReference16CH[] balances) {
        this.balances = balances;
        return this;
    }
    
    /**
     * If the TPP requests access to accounts via availableAccounts (List of available accounts), global 
     * or bank driven consents, the TPP may include this element to restrict access to the referred 
     * account types. Absence of the element is interpreted as "no restriction" (therefore access to 
     * accounts of all types is requested). The element may only occur, if each of the elements 
     *   - accounts 
     *   - balances 
     *   - transactions 
     * is either not present or contains an empty array. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restrictedTo")
    public String[] restrictedTo;
    public AccountAccess withRestrictedTo(String[] restrictedTo) {
        this.restrictedTo = restrictedTo;
        return this;
    }
    
    /**
     * Is asking for transactions of the addressed accounts. 
     * 
     * If the array is empty in the request, the TPP is asking for the transactions of all accessible account lists. 
     * This may be restricted in a PSU/ASPSP authorization dialogue. 
     * If the array is empty, also the arrays for accounts, additionalInformation sub attributes or balances shall be empty, if used.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactions")
    public AccountReference16CH[] transactions;
    public AccountAccess withTransactions(AccountReference16CH[] transactions) {
        this.transactions = transactions;
        return this;
    }
    
}
