"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import orderaddress as shared_orderaddress
from ..shared import orderpickupdetailscollector as shared_orderpickupdetailscollector
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderPickupDetails:
    
    address: Optional[shared_orderaddress.OrderAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    collectors: Optional[list[shared_orderpickupdetailscollector.OrderPickupDetailsCollector]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collectors'), 'exclude': lambda f: f is None }})
    r"""Collectors authorized to pick up shipment from the pickup location."""  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationId'), 'exclude': lambda f: f is None }})
    r"""ID of the pickup location."""  
    pickup_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupType'), 'exclude': lambda f: f is None }})
    r"""The pickup type of this order. Acceptable values are: - \\"`merchantStore`\\" - \\"`merchantStoreCurbside`\\" - \\"`merchantStoreLocker`\\" - \\"`thirdPartyPickupPoint`\\" - \\"`thirdPartyLocker`\\" """  
    