<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Serviceaccountkeys 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Removes and invalidates the specified credentials for the service account associated with this enterprise. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteResponse
     */
	public function androidenterpriseServiceaccountkeysDelete(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/serviceAccountKeys/{keyId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Generates new credentials for the service account associated with this enterprise. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount. Only the type of the key should be populated in the resource to be inserted.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertResponse
     */
	public function androidenterpriseServiceaccountkeysInsert(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/serviceAccountKeys', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "serviceAccountKey", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysInsertResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->serviceAccountKey = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ServiceAccountKey', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists all active credentials for the service account associated with this enterprise. Only the ID and key type are returned. The calling service account must have been retrieved by calling Enterprises.GetServiceAccount and must have been set as the enterprise service account by calling Enterprises.SetAccount.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListResponse
     */
	public function androidenterpriseServiceaccountkeysList(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/serviceAccountKeys', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseServiceaccountkeysListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->serviceAccountKeysListResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ServiceAccountKeysListResponse', 'json');
            }
        }

        return $response;
    }
}