<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class UploadFileRequest
{
	#[SpeakeasyMetadata('request:mediaType=multipart/form-data')]
    public ?UploadFileRequestBody $requestBody = null;
    
    /**
     * True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated. 
     * 
     * @var ?bool $allowOverwrite
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=allowOverwrite')]
    public ?bool $allowOverwrite = null;
    
    /**
     * Access token required to make the API call.
     * 
     * @var string $evAccessToken
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=ev-access-token')]
    public string $evAccessToken;
    
    /**
     * API Key required to make the API call.
     * 
     * @var string $evApiKey
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=ev-api-key')]
    public string $evApiKey;
    
    /**
     * File size, in bits, of the file being uploaded.
     * 
     * @var int $fileSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fileSize')]
    public int $fileSize;
    
    /**
     * Allows a file upload to resume at a certain number of bytes.
     * 
     * @var ?int $offsetBytes
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=offsetBytes')]
    public ?int $offsetBytes = null;
    
    /**
     * Destination path for the file being uploaded, including the file name.
     * 
     * @var string $path
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=path')]
    public string $path;
    
    /**
     * True if upload resume is supported, false if it isn't.
     * 
     * 
     * 
     * @var ?bool $resume
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=resume')]
    public ?bool $resume = null;
    
	public function __construct()
	{
		$this->requestBody = null;
		$this->allowOverwrite = null;
		$this->evAccessToken = "";
		$this->evApiKey = "";
		$this->fileSize = 0;
		$this->offsetBytes = null;
		$this->path = "";
		$this->resume = null;
	}
}
