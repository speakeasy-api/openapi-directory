// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateAssistantAssociationPathParams struct {
	// The identifier of the Wisdom assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
	AssistantID string `pathParam:"style=simple,explode=false,name=assistantId"`
}

type CreateAssistantAssociationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateAssistantAssociationRequestBodyAssociation - The data that is input into Wisdom as a result of the assistant association.
type CreateAssistantAssociationRequestBodyAssociation struct {
	KnowledgeBaseID *string `json:"knowledgeBaseId,omitempty"`
}

// CreateAssistantAssociationRequestBodyAssociationTypeEnum - The type of association.
type CreateAssistantAssociationRequestBodyAssociationTypeEnum string

const (
	CreateAssistantAssociationRequestBodyAssociationTypeEnumKnowledgeBase CreateAssistantAssociationRequestBodyAssociationTypeEnum = "KNOWLEDGE_BASE"
)

func (e *CreateAssistantAssociationRequestBodyAssociationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KNOWLEDGE_BASE":
		*e = CreateAssistantAssociationRequestBodyAssociationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAssistantAssociationRequestBodyAssociationTypeEnum: %s", s)
	}
}

type CreateAssistantAssociationRequestBody struct {
	// The data that is input into Wisdom as a result of the assistant association.
	Association CreateAssistantAssociationRequestBodyAssociation `json:"association"`
	// The type of association.
	AssociationType CreateAssistantAssociationRequestBodyAssociationTypeEnum `json:"associationType"`
	// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
	ClientToken *string `json:"clientToken,omitempty"`
	// The tags used to organize, track, or control access for this resource.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateAssistantAssociationRequest struct {
	PathParams CreateAssistantAssociationPathParams
	Headers    CreateAssistantAssociationHeaders
	Request    CreateAssistantAssociationRequestBody `request:"mediaType=application/json"`
}

type CreateAssistantAssociationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateAssistantAssociationResponse *shared.CreateAssistantAssociationResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ValidationException
	ValidationException interface{}
}
