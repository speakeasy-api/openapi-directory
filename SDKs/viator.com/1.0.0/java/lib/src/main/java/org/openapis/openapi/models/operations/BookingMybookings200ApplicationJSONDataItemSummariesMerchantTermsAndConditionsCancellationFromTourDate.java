/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditionsCancellationFromTourDate {
    /**
     * **number** of days prior to the tour start date that *this* policy window begins. `null` signifies open-endedness
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dayRangeMax")
    public Long dayRangeMax;

    public BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditionsCancellationFromTourDate withDayRangeMax(Long dayRangeMax) {
        this.dayRangeMax = dayRangeMax;
        return this;
    }
    
    /**
     * **number** of days prior to the tour start date that *this* policy window ends
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dayRangeMin")
    public Long dayRangeMin;

    public BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditionsCancellationFromTourDate withDayRangeMin(Long dayRangeMin) {
        this.dayRangeMin = dayRangeMin;
        return this;
    }
    
    /**
     * **percentage** of total price refundable if cancelled within *this* time window
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentageRefundable")
    public Long percentageRefundable;

    public BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditionsCancellationFromTourDate withPercentageRefundable(Long percentageRefundable) {
        this.percentageRefundable = percentageRefundable;
        return this;
    }
    
    /**
     * **Unix timestamp** giving the exact time the policy ends
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyEndTimestamp")
    public Long policyEndTimestamp;

    public BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditionsCancellationFromTourDate withPolicyEndTimestamp(Long policyEndTimestamp) {
        this.policyEndTimestamp = policyEndTimestamp;
        return this;
    }
    
    /**
     * **Unix timestamp** giving the exact time the policy commences
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyStartTimestamp")
    public Long policyStartTimestamp;

    public BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditionsCancellationFromTourDate withPolicyStartTimestamp(Long policyStartTimestamp) {
        this.policyStartTimestamp = policyStartTimestamp;
        return this;
    }
    
    public BookingMybookings200ApplicationJSONDataItemSummariesMerchantTermsAndConditionsCancellationFromTourDate(){}
}
