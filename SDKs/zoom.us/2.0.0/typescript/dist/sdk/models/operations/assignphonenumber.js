"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AssignPhoneNumberResponse = exports.AssignPhoneNumber200ApplicationJSON = exports.AssignPhoneNumber200ApplicationJSONPhoneNumbers = exports.AssignPhoneNumber200ApplicationXML = exports.AssignPhoneNumber200ApplicationXMLPhoneNumbers = exports.AssignPhoneNumberRequest = exports.AssignPhoneNumberApplicationJSON = exports.AssignPhoneNumberApplicationJSONPhoneNumbers = exports.AssignPhoneNumberSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var AssignPhoneNumberSecurity = /** @class */ (function (_super) {
    __extends(AssignPhoneNumberSecurity, _super);
    function AssignPhoneNumberSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], AssignPhoneNumberSecurity.prototype, "oAuth", void 0);
    return AssignPhoneNumberSecurity;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumberSecurity = AssignPhoneNumberSecurity;
var AssignPhoneNumberApplicationJSONPhoneNumbers = /** @class */ (function (_super) {
    __extends(AssignPhoneNumberApplicationJSONPhoneNumbers, _super);
    function AssignPhoneNumberApplicationJSONPhoneNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], AssignPhoneNumberApplicationJSONPhoneNumbers.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], AssignPhoneNumberApplicationJSONPhoneNumbers.prototype, "number", void 0);
    return AssignPhoneNumberApplicationJSONPhoneNumbers;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumberApplicationJSONPhoneNumbers = AssignPhoneNumberApplicationJSONPhoneNumbers;
/**
 * Provide either an id or a number in the request body.
 */
var AssignPhoneNumberApplicationJSON = /** @class */ (function (_super) {
    __extends(AssignPhoneNumberApplicationJSON, _super);
    function AssignPhoneNumberApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: AssignPhoneNumberApplicationJSONPhoneNumbers }),
        (0, class_transformer_1.Expose)({ name: "phone_numbers" }),
        (0, class_transformer_1.Type)(function () { return AssignPhoneNumberApplicationJSONPhoneNumbers; }),
        __metadata("design:type", Array)
    ], AssignPhoneNumberApplicationJSON.prototype, "phoneNumbers", void 0);
    return AssignPhoneNumberApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumberApplicationJSON = AssignPhoneNumberApplicationJSON;
var AssignPhoneNumberRequest = /** @class */ (function (_super) {
    __extends(AssignPhoneNumberRequest, _super);
    function AssignPhoneNumberRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", AssignPhoneNumberApplicationJSON)
    ], AssignPhoneNumberRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=userId",
        }),
        __metadata("design:type", String)
    ], AssignPhoneNumberRequest.prototype, "userId", void 0);
    return AssignPhoneNumberRequest;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumberRequest = AssignPhoneNumberRequest;
var AssignPhoneNumber200ApplicationXMLPhoneNumbers = /** @class */ (function (_super) {
    __extends(AssignPhoneNumber200ApplicationXMLPhoneNumbers, _super);
    function AssignPhoneNumber200ApplicationXMLPhoneNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssignPhoneNumber200ApplicationXMLPhoneNumbers.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssignPhoneNumber200ApplicationXMLPhoneNumbers.prototype, "number", void 0);
    return AssignPhoneNumber200ApplicationXMLPhoneNumbers;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumber200ApplicationXMLPhoneNumbers = AssignPhoneNumber200ApplicationXMLPhoneNumbers;
/**
 * **HTTP Status Code:** `200` <br>
 *
 * @remarks
 * Phone number assigned successfully.
 *
 */
var AssignPhoneNumber200ApplicationXML = /** @class */ (function (_super) {
    __extends(AssignPhoneNumber200ApplicationXML, _super);
    function AssignPhoneNumber200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AssignPhoneNumber200ApplicationXMLPhoneNumbers,
        }),
        __metadata("design:type", Array)
    ], AssignPhoneNumber200ApplicationXML.prototype, "phoneNumbers", void 0);
    return AssignPhoneNumber200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumber200ApplicationXML = AssignPhoneNumber200ApplicationXML;
var AssignPhoneNumber200ApplicationJSONPhoneNumbers = /** @class */ (function (_super) {
    __extends(AssignPhoneNumber200ApplicationJSONPhoneNumbers, _super);
    function AssignPhoneNumber200ApplicationJSONPhoneNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], AssignPhoneNumber200ApplicationJSONPhoneNumbers.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], AssignPhoneNumber200ApplicationJSONPhoneNumbers.prototype, "number", void 0);
    return AssignPhoneNumber200ApplicationJSONPhoneNumbers;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumber200ApplicationJSONPhoneNumbers = AssignPhoneNumber200ApplicationJSONPhoneNumbers;
/**
 * **HTTP Status Code:** `200` <br>
 *
 * @remarks
 * Phone number assigned successfully.
 *
 */
var AssignPhoneNumber200ApplicationJSON = /** @class */ (function (_super) {
    __extends(AssignPhoneNumber200ApplicationJSON, _super);
    function AssignPhoneNumber200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: AssignPhoneNumber200ApplicationJSONPhoneNumbers,
        }),
        (0, class_transformer_1.Expose)({ name: "phone_numbers" }),
        (0, class_transformer_1.Type)(function () { return AssignPhoneNumber200ApplicationJSONPhoneNumbers; }),
        __metadata("design:type", Array)
    ], AssignPhoneNumber200ApplicationJSON.prototype, "phoneNumbers", void 0);
    return AssignPhoneNumber200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumber200ApplicationJSON = AssignPhoneNumber200ApplicationJSON;
var AssignPhoneNumberResponse = /** @class */ (function (_super) {
    __extends(AssignPhoneNumberResponse, _super);
    function AssignPhoneNumberResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], AssignPhoneNumberResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AssignPhoneNumberResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AssignPhoneNumberResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], AssignPhoneNumberResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AssignPhoneNumber200ApplicationJSON)
    ], AssignPhoneNumberResponse.prototype, "assignPhoneNumber200ApplicationJSONObject", void 0);
    return AssignPhoneNumberResponse;
}(utils_1.SpeakeasyBase));
exports.AssignPhoneNumberResponse = AssignPhoneNumberResponse;
