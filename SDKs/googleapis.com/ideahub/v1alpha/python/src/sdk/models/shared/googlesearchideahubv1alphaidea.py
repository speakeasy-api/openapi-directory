"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlesearchideahubv1alphatopic as shared_googlesearchideahubv1alphatopic
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleSearchIdeahubV1alphaIdea:
    r"""A single Idea that we want to show the end user."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for the idea. Format: ideas/{ideaId}"""  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""The ideaâ€™s text."""  
    topics: Optional[list[shared_googlesearchideahubv1alphatopic.GoogleSearchIdeahubV1alphaTopic]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('topics'), 'exclude': lambda f: f is None }})
    r"""The Topics that match the idea."""  
    