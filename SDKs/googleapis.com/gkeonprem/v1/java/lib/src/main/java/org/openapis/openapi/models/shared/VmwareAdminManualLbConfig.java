/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class VmwareAdminManualLbConfig {
    /**
     * NodePort for add-ons server in the admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addonsNodePort")
    public Integer addonsNodePort;

    public VmwareAdminManualLbConfig withAddonsNodePort(Integer addonsNodePort) {
        this.addonsNodePort = addonsNodePort;
        return this;
    }
    
    /**
     * NodePort for control plane service. The Kubernetes API server in the admin cluster is implemented as a Service of type NodePort (ex. 30968).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("controlPlaneNodePort")
    public Integer controlPlaneNodePort;

    public VmwareAdminManualLbConfig withControlPlaneNodePort(Integer controlPlaneNodePort) {
        this.controlPlaneNodePort = controlPlaneNodePort;
        return this;
    }
    
    /**
     * NodePort for ingress service's http. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 32527).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ingressHttpNodePort")
    public Integer ingressHttpNodePort;

    public VmwareAdminManualLbConfig withIngressHttpNodePort(Integer ingressHttpNodePort) {
        this.ingressHttpNodePort = ingressHttpNodePort;
        return this;
    }
    
    /**
     * NodePort for ingress service's https. The ingress service in the admin cluster is implemented as a Service of type NodePort (ex. 30139).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ingressHttpsNodePort")
    public Integer ingressHttpsNodePort;

    public VmwareAdminManualLbConfig withIngressHttpsNodePort(Integer ingressHttpsNodePort) {
        this.ingressHttpsNodePort = ingressHttpsNodePort;
        return this;
    }
    
    /**
     * NodePort for konnectivity server service running as a sidecar in each kube-apiserver pod (ex. 30564).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("konnectivityServerNodePort")
    public Integer konnectivityServerNodePort;

    public VmwareAdminManualLbConfig withKonnectivityServerNodePort(Integer konnectivityServerNodePort) {
        this.konnectivityServerNodePort = konnectivityServerNodePort;
        return this;
    }
    
    public VmwareAdminManualLbConfig(){}
}
