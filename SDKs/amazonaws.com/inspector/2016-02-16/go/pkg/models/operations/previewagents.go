// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PreviewAgentsXAmzTargetEnum
type PreviewAgentsXAmzTargetEnum string

const (
	PreviewAgentsXAmzTargetEnumInspectorServicePreviewAgents PreviewAgentsXAmzTargetEnum = "InspectorService.PreviewAgents"
)

func (e PreviewAgentsXAmzTargetEnum) ToPointer() *PreviewAgentsXAmzTargetEnum {
	return &e
}

func (e *PreviewAgentsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InspectorService.PreviewAgents":
		*e = PreviewAgentsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PreviewAgentsXAmzTargetEnum: %v", v)
	}
}

type PreviewAgentsRequest struct {
	PreviewAgentsRequest shared.PreviewAgentsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           PreviewAgentsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type PreviewAgentsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalException
	InternalException interface{}
	// InvalidCrossAccountRoleException
	InvalidCrossAccountRoleException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// NoSuchEntityException
	NoSuchEntityException interface{}
	// Success
	PreviewAgentsResponse *shared.PreviewAgentsResponse
	StatusCode            int
	RawResponse           *http.Response
}
