"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipartSecurity:
    
    gma_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipartFormDataFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'File' }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipartFormData:
    r"""Required Document to add"""
    
    file: PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipartFormDataFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})  
    name: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'Name' }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipartRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder exchange or followup"""  
    request_body: PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipartFormData = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})
    r"""Required Document to add"""  
    requireddocumentid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'requireddocumentid', 'style': 'simple', 'explode': False }})
    r"""Id of the requireddocument"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipart201ApplicationJSON:
    r"""Id of document created"""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipartResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    post_spaces_space_id_folders_id_required_documents_requireddocumentid_multipart_201_application_json_object: Optional[PostSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidMultipart201ApplicationJSON] = dataclasses.field(default=None)
    r"""Id of document created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    