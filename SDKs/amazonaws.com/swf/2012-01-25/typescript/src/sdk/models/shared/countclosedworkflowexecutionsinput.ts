/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloseStatusFilter } from "./closestatusfilter";
import { ExecutionTimeFilter } from "./executiontimefilter";
import { TagFilter } from "./tagfilter";
import { WorkflowExecutionFilter } from "./workflowexecutionfilter";
import { WorkflowTypeFilter } from "./workflowtypefilter";
import { Expose, Type } from "class-transformer";

export class CountClosedWorkflowExecutionsInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "closeStatusFilter" })
  @Type(() => CloseStatusFilter)
  closeStatusFilter?: CloseStatusFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "closeTimeFilter" })
  @Type(() => ExecutionTimeFilter)
  closeTimeFilter?: ExecutionTimeFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain: string;

  @SpeakeasyMetadata()
  @Expose({ name: "executionFilter" })
  @Type(() => WorkflowExecutionFilter)
  executionFilter?: WorkflowExecutionFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "startTimeFilter" })
  @Type(() => ExecutionTimeFilter)
  startTimeFilter?: ExecutionTimeFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "tagFilter" })
  @Type(() => TagFilter)
  tagFilter?: TagFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "typeFilter" })
  @Type(() => WorkflowTypeFilter)
  typeFilter?: WorkflowTypeFilter;
}
