/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MediaItem - A single media item.
 */
public class MediaItem {
    /**
     * Attribution information for customer media items, such as the contributor's name and profile picture.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attribution")
    public Attribution attribution;

    public MediaItem withAttribution(Attribution attribution) {
        this.attribution = attribution;
        return this;
    }
    
    /**
     * Output only. Creation time of this media item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public MediaItem withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Reference to the photo binary data of a `MediaItem` uploaded through the Google My Business API. Create a data ref using StartUploadMediaItemData, and use this ref when uploading bytes to [UpdateMedia] and subsequently calling CreateMediaItem.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataRef")
    public MediaItemDataRef dataRef;

    public MediaItem withDataRef(MediaItemDataRef dataRef) {
        this.dataRef = dataRef;
        return this;
    }
    
    /**
     * Description for this media item. Descriptions cannot be modified through the Google My Business API, but can be set when creating a new media item that is not a cover photo.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public MediaItem withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Dimensions of the media item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensions")
    public Dimensions dimensions;

    public MediaItem withDimensions(Dimensions dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * Output only. Google-hosted URL for this media item. This URL is not static since it may change over time. For video this will be a preview image with an overlaid play icon.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("googleUrl")
    public String googleUrl;

    public MediaItem withGoogleUrl(String googleUrl) {
        this.googleUrl = googleUrl;
        return this;
    }
    
    /**
     * Insights and statistics for the media item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insights")
    public MediaInsights insights;

    public MediaItem withInsights(MediaInsights insights) {
        this.insights = insights;
        return this;
    }
    
    /**
     * How the media item is associated with its location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationAssociation")
    public LocationAssociation locationAssociation;

    public MediaItem withLocationAssociation(LocationAssociation locationAssociation) {
        this.locationAssociation = locationAssociation;
        return this;
    }
    
    /**
     * The format of this media item. Must be set when the media item is created, and is read-only on all other requests. Cannot be updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediaFormat")
    public MediaItemMediaFormatEnum mediaFormat;

    public MediaItem withMediaFormat(MediaItemMediaFormatEnum mediaFormat) {
        this.mediaFormat = mediaFormat;
        return this;
    }
    
    /**
     * The resource name for this media item. `accounts/{account_id}/locations/{location_id}/media/{media_key}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public MediaItem withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A publicly accessible URL where the media item can be retrieved from. When creating one of this or data_ref must be set to specify the source of the media item. If `source_url` was used when creating a media item, it will be populated with that source URL when the media item is retrieved. This field cannot be updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceUrl")
    public String sourceUrl;

    public MediaItem withSourceUrl(String sourceUrl) {
        this.sourceUrl = sourceUrl;
        return this;
    }
    
    /**
     * Output only. Where provided, the URL of a thumbnail image for this media item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailUrl")
    public String thumbnailUrl;

    public MediaItem withThumbnailUrl(String thumbnailUrl) {
        this.thumbnailUrl = thumbnailUrl;
        return this;
    }
    
    public MediaItem(){}
}
