<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * QueueInput - A queue is a container of related tasks. Queues are configured to manage how those tasks are dispatched. Configurable properties include rate limits, retry options, target types, and others.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class QueueInput
{
    /**
     * App Engine HTTP target. The task will be delivered to the App Engine application hostname specified by its AppEngineHttpTarget and AppEngineHttpRequest. The documentation for AppEngineHttpRequest explains how the task's host URL is constructed. Using AppEngineHttpTarget requires [`appengine.applications.get`](https://cloud.google.com/appengine/docs/admin-api/access-control) Google IAM permission for the project and the following scope: `https://www.googleapis.com/auth/cloud-platform`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AppEngineHttpTarget $appEngineHttpTarget
     */
	#[\JMS\Serializer\Annotation\SerializedName('appEngineHttpTarget')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AppEngineHttpTarget')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AppEngineHttpTarget $appEngineHttpTarget = null;
    
    /**
     * HTTP target. When specified as a Queue, all the tasks with [HttpRequest] will be overridden according to the target.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HttpTarget $httpTarget
     */
	#[\JMS\Serializer\Annotation\SerializedName('httpTarget')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HttpTarget')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HttpTarget $httpTarget = null;
    
    /**
     * Caller-specified and required in CreateQueue, after which it becomes output only. The queue name. The queue name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the queue's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Pull target.
     * 
     * @var ?array<string, mixed> $pullTarget
     */
	#[\JMS\Serializer\Annotation\SerializedName('pullTarget')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $pullTarget = null;
    
    /**
     * Output only. The last time this queue was purged. All tasks that were created before this time were purged. A queue can be purged using PurgeQueue, the [App Engine Task Queue SDK, or the Cloud Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue). Purge time will be truncated to the nearest microsecond. Purge time will be unset if the queue has never been purged.
     * 
     * @var ?string $purgeTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('purgeTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $purgeTime = null;
    
    /**
     * Rate limits. This message determines the maximum rate that tasks can be dispatched by a queue, regardless of whether the dispatch is a first task attempt or a retry. Note: The debugging command, RunTask, will run a task even if the queue has reached its RateLimits.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RateLimits $rateLimits
     */
	#[\JMS\Serializer\Annotation\SerializedName('rateLimits')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RateLimits')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RateLimits $rateLimits = null;
    
    /**
     * Retry config. These settings determine how a failed task attempt is retried.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RetryConfig $retryConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('retryConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RetryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RetryConfig $retryConfig = null;
    
    /**
     * Output only. The state of the queue. `state` can only be changed by called PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\QueueStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\QueueStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?QueueStateEnum $state = null;
    
    /**
     * The maximum amount of time that a task will be retained in this queue. Queues created by Cloud Tasks have a default `task_ttl` of 31 days. After a task has lived for `task_ttl`, the task will be deleted regardless of whether it was dispatched or not. The `task_ttl` for queues created via queue.yaml/xml is equal to the maximum duration because there is a [storage quota](https://cloud.google.com/appengine/quotas#Task_Queue) for these queues. To view the maximum valid duration, see the documentation for Duration.
     * 
     * @var ?string $taskTtl
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskTtl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taskTtl = null;
    
    /**
     * The task tombstone time to live (TTL). After a task is deleted or completed, the task's tombstone is retained for the length of time specified by `tombstone_ttl`. The tombstone is used by task de-duplication; another task with the same name can't be created until the tombstone has expired. For more information about task de-duplication, see the documentation for CreateTaskRequest. Queues created by Cloud Tasks have a default `tombstone_ttl` of 1 hour.
     * 
     * @var ?string $tombstoneTtl
     */
	#[\JMS\Serializer\Annotation\SerializedName('tombstoneTtl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tombstoneTtl = null;
    
	public function __construct()
	{
		$this->appEngineHttpTarget = null;
		$this->httpTarget = null;
		$this->name = null;
		$this->pullTarget = null;
		$this->purgeTime = null;
		$this->rateLimits = null;
		$this->retryConfig = null;
		$this->state = null;
		$this->taskTtl = null;
		$this->tombstoneTtl = null;
	}
}
