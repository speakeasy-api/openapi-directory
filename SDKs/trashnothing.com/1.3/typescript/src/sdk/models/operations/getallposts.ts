/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetAllPostsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=api_key",
  })
  apiKey?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2Code?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2Implicit?: string;
}

export class GetAllPostsRequest extends SpeakeasyBase {
  /**
   * Only posts older than this UTC date and time will be returned. The UTC date and time used must be within a day or less of date_min. And the date and time must be rounded to the nearest second.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_max;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateMax: Date;

  /**
   * Only posts newer than or equal to this UTC date and time will be returned. The UTC date and time used must be within a day or less of date_max. And the date and time must be within the last 30 days. And the date and time must be rounded to the nearest second.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_min;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateMin: Date;

  /**
   * Client device pixel ratio used to determine thumbnail size (default 1.0).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device_pixel_ratio",
  })
  devicePixelRatio?: number;

  /**
   * The page of posts to return.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of posts to return per page (must be >= 1 and <= 50).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * A comma separated list of the post types to return.  The available post types are: offer, wanted
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=types" })
  types: string;
}

/**
 * The posts.
 */
export class GetAllPosts200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Post })
  @Expose({ name: "posts" })
  @Type(() => shared.Post)
  posts?: shared.Post[];
}

export class GetAllPostsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The posts.
   */
  @SpeakeasyMetadata()
  getAllPosts200ApplicationJSONObject?: GetAllPosts200ApplicationJSON;
}
