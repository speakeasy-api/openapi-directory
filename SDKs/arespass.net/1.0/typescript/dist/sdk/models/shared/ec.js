"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Ec = exports.EcWords = exports.EcTotal = exports.EcRepeatedChars = exports.EcNumberSequence = exports.EcKeyboardSequence = exports.EcEntropyDistribution = exports.EcAlphabetSequence = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var EcAlphabetSequence = /** @class */ (function (_super) {
    __extends(EcAlphabetSequence, _super);
    function EcAlphabetSequence() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "char" }),
        __metadata("design:type", String)
    ], EcAlphabetSequence.prototype, "char", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "l33tchar" }),
        __metadata("design:type", String)
    ], EcAlphabetSequence.prototype, "l33tchar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "penalty" }),
        __metadata("design:type", Number)
    ], EcAlphabetSequence.prototype, "penalty", void 0);
    return EcAlphabetSequence;
}(utils_1.SpeakeasyBase));
exports.EcAlphabetSequence = EcAlphabetSequence;
var EcEntropyDistribution = /** @class */ (function (_super) {
    __extends(EcEntropyDistribution, _super);
    function EcEntropyDistribution() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "char" }),
        __metadata("design:type", String)
    ], EcEntropyDistribution.prototype, "char", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "l33tchar" }),
        __metadata("design:type", String)
    ], EcEntropyDistribution.prototype, "l33tchar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "percentage" }),
        __metadata("design:type", Number)
    ], EcEntropyDistribution.prototype, "percentage", void 0);
    return EcEntropyDistribution;
}(utils_1.SpeakeasyBase));
exports.EcEntropyDistribution = EcEntropyDistribution;
var EcKeyboardSequence = /** @class */ (function (_super) {
    __extends(EcKeyboardSequence, _super);
    function EcKeyboardSequence() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "char" }),
        __metadata("design:type", String)
    ], EcKeyboardSequence.prototype, "char", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "l33tchar" }),
        __metadata("design:type", String)
    ], EcKeyboardSequence.prototype, "l33tchar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "penalty" }),
        __metadata("design:type", Number)
    ], EcKeyboardSequence.prototype, "penalty", void 0);
    return EcKeyboardSequence;
}(utils_1.SpeakeasyBase));
exports.EcKeyboardSequence = EcKeyboardSequence;
var EcNumberSequence = /** @class */ (function (_super) {
    __extends(EcNumberSequence, _super);
    function EcNumberSequence() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "char" }),
        __metadata("design:type", String)
    ], EcNumberSequence.prototype, "char", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "l33tchar" }),
        __metadata("design:type", String)
    ], EcNumberSequence.prototype, "l33tchar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "penalty" }),
        __metadata("design:type", Number)
    ], EcNumberSequence.prototype, "penalty", void 0);
    return EcNumberSequence;
}(utils_1.SpeakeasyBase));
exports.EcNumberSequence = EcNumberSequence;
var EcRepeatedChars = /** @class */ (function (_super) {
    __extends(EcRepeatedChars, _super);
    function EcRepeatedChars() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "char" }),
        __metadata("design:type", String)
    ], EcRepeatedChars.prototype, "char", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "l33tchar" }),
        __metadata("design:type", String)
    ], EcRepeatedChars.prototype, "l33tchar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "penalty" }),
        __metadata("design:type", Number)
    ], EcRepeatedChars.prototype, "penalty", void 0);
    return EcRepeatedChars;
}(utils_1.SpeakeasyBase));
exports.EcRepeatedChars = EcRepeatedChars;
var EcTotal = /** @class */ (function (_super) {
    __extends(EcTotal, _super);
    function EcTotal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "char" }),
        __metadata("design:type", String)
    ], EcTotal.prototype, "char", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "l33tchar" }),
        __metadata("design:type", String)
    ], EcTotal.prototype, "l33tchar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "penalty" }),
        __metadata("design:type", Number)
    ], EcTotal.prototype, "penalty", void 0);
    return EcTotal;
}(utils_1.SpeakeasyBase));
exports.EcTotal = EcTotal;
var EcWords = /** @class */ (function (_super) {
    __extends(EcWords, _super);
    function EcWords() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "char" }),
        __metadata("design:type", String)
    ], EcWords.prototype, "char", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "l33tchar" }),
        __metadata("design:type", String)
    ], EcWords.prototype, "l33tchar", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "penalty" }),
        __metadata("design:type", Number)
    ], EcWords.prototype, "penalty", void 0);
    return EcWords;
}(utils_1.SpeakeasyBase));
exports.EcWords = EcWords;
/**
 * The password analysis, including the calculated entropy.
 */
var Ec = /** @class */ (function (_super) {
    __extends(Ec, _super);
    function Ec() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: EcAlphabetSequence }),
        (0, class_transformer_1.Expose)({ name: "alphabetSequence" }),
        (0, class_transformer_1.Type)(function () { return EcAlphabetSequence; }),
        __metadata("design:type", Array)
    ], Ec.prototype, "alphabetSequence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "apiVersion" }),
        __metadata("design:type", String)
    ], Ec.prototype, "apiVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "detectedKeyboard" }),
        __metadata("design:type", String)
    ], Ec.prototype, "detectedKeyboard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "efficiency" }),
        __metadata("design:type", Number)
    ], Ec.prototype, "efficiency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "entropy" }),
        __metadata("design:type", Number)
    ], Ec.prototype, "entropy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: EcEntropyDistribution }),
        (0, class_transformer_1.Expose)({ name: "entropyDistribution" }),
        (0, class_transformer_1.Type)(function () { return EcEntropyDistribution; }),
        __metadata("design:type", Array)
    ], Ec.prototype, "entropyDistribution", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "idealEntropy" }),
        __metadata("design:type", Number)
    ], Ec.prototype, "idealEntropy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: EcKeyboardSequence }),
        (0, class_transformer_1.Expose)({ name: "keyboardSequence" }),
        (0, class_transformer_1.Type)(function () { return EcKeyboardSequence; }),
        __metadata("design:type", Array)
    ], Ec.prototype, "keyboardSequence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "l33tPassword" }),
        __metadata("design:type", String)
    ], Ec.prototype, "l33tPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nonUniformEntropyDistributionPenalty" }),
        __metadata("design:type", Number)
    ], Ec.prototype, "nonUniformEntropyDistributionPenalty", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: EcNumberSequence }),
        (0, class_transformer_1.Expose)({ name: "numberSequence" }),
        (0, class_transformer_1.Type)(function () { return EcNumberSequence; }),
        __metadata("design:type", Array)
    ], Ec.prototype, "numberSequence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "password" }),
        __metadata("design:type", String)
    ], Ec.prototype, "password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "passwordLength" }),
        __metadata("design:type", Number)
    ], Ec.prototype, "passwordLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "penalty" }),
        __metadata("design:type", Number)
    ], Ec.prototype, "penalty", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: EcRepeatedChars }),
        (0, class_transformer_1.Expose)({ name: "repeatedChars" }),
        (0, class_transformer_1.Type)(function () { return EcRepeatedChars; }),
        __metadata("design:type", Array)
    ], Ec.prototype, "repeatedChars", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requestId" }),
        __metadata("design:type", String)
    ], Ec.prototype, "requestId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requestTimestamp" }),
        __metadata("design:type", Number)
    ], Ec.prototype, "requestTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "summary" }),
        __metadata("design:type", Array)
    ], Ec.prototype, "summary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: EcTotal }),
        (0, class_transformer_1.Expose)({ name: "total" }),
        (0, class_transformer_1.Type)(function () { return EcTotal; }),
        __metadata("design:type", Array)
    ], Ec.prototype, "total", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: EcWords }),
        (0, class_transformer_1.Expose)({ name: "words" }),
        (0, class_transformer_1.Type)(function () { return EcWords; }),
        __metadata("design:type", Array)
    ], Ec.prototype, "words", void 0);
    return Ec;
}(utils_1.SpeakeasyBase));
exports.Ec = Ec;
