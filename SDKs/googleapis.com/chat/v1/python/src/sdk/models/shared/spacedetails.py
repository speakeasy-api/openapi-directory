"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpaceDetails:
    r"""Details about the space including description and rules."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. A description of the space. It could describe the space's discussion topic, functional purpose, or participants. Supports up to 150 characters."""  
    guidelines: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guidelines'), 'exclude': lambda f: f is None }})
    r"""Optional. The space's rules, expectations, and etiquette. Supports up to 5,000 characters."""  
    