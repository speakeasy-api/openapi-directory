// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataRepositoryTaskTypeEnum string

const (
	DataRepositoryTaskTypeEnumExportToRepository           DataRepositoryTaskTypeEnum = "EXPORT_TO_REPOSITORY"
	DataRepositoryTaskTypeEnumImportMetadataFromRepository DataRepositoryTaskTypeEnum = "IMPORT_METADATA_FROM_REPOSITORY"
	DataRepositoryTaskTypeEnumReleaseDataFromFilesystem    DataRepositoryTaskTypeEnum = "RELEASE_DATA_FROM_FILESYSTEM"
	DataRepositoryTaskTypeEnumAutoReleaseData              DataRepositoryTaskTypeEnum = "AUTO_RELEASE_DATA"
)

func (e *DataRepositoryTaskTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXPORT_TO_REPOSITORY":
		fallthrough
	case "IMPORT_METADATA_FROM_REPOSITORY":
		fallthrough
	case "RELEASE_DATA_FROM_FILESYSTEM":
		fallthrough
	case "AUTO_RELEASE_DATA":
		*e = DataRepositoryTaskTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataRepositoryTaskTypeEnum: %s", s)
	}
}
