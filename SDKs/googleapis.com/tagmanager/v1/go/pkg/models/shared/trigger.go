// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TriggerTypeEnum - Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update
type TriggerTypeEnum string

const (
	TriggerTypeEnumPageview          TriggerTypeEnum = "pageview"
	TriggerTypeEnumDomReady          TriggerTypeEnum = "domReady"
	TriggerTypeEnumWindowLoaded      TriggerTypeEnum = "windowLoaded"
	TriggerTypeEnumCustomEvent       TriggerTypeEnum = "customEvent"
	TriggerTypeEnumTriggerGroup      TriggerTypeEnum = "triggerGroup"
	TriggerTypeEnumAlways            TriggerTypeEnum = "always"
	TriggerTypeEnumFormSubmission    TriggerTypeEnum = "formSubmission"
	TriggerTypeEnumClick             TriggerTypeEnum = "click"
	TriggerTypeEnumLinkClick         TriggerTypeEnum = "linkClick"
	TriggerTypeEnumJsError           TriggerTypeEnum = "jsError"
	TriggerTypeEnumHistoryChange     TriggerTypeEnum = "historyChange"
	TriggerTypeEnumTimer             TriggerTypeEnum = "timer"
	TriggerTypeEnumAmpClick          TriggerTypeEnum = "ampClick"
	TriggerTypeEnumAmpTimer          TriggerTypeEnum = "ampTimer"
	TriggerTypeEnumAmpScroll         TriggerTypeEnum = "ampScroll"
	TriggerTypeEnumAmpVisibility     TriggerTypeEnum = "ampVisibility"
	TriggerTypeEnumYouTubeVideo      TriggerTypeEnum = "youTubeVideo"
	TriggerTypeEnumScrollDepth       TriggerTypeEnum = "scrollDepth"
	TriggerTypeEnumElementVisibility TriggerTypeEnum = "elementVisibility"
)

func (e *TriggerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pageview":
		fallthrough
	case "domReady":
		fallthrough
	case "windowLoaded":
		fallthrough
	case "customEvent":
		fallthrough
	case "triggerGroup":
		fallthrough
	case "always":
		fallthrough
	case "formSubmission":
		fallthrough
	case "click":
		fallthrough
	case "linkClick":
		fallthrough
	case "jsError":
		fallthrough
	case "historyChange":
		fallthrough
	case "timer":
		fallthrough
	case "ampClick":
		fallthrough
	case "ampTimer":
		fallthrough
	case "ampScroll":
		fallthrough
	case "ampVisibility":
		fallthrough
	case "youTubeVideo":
		fallthrough
	case "scrollDepth":
		fallthrough
	case "elementVisibility":
		*e = TriggerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TriggerTypeEnum: %s", s)
	}
}

// Trigger - Represents a Google Tag Manager Trigger
type Trigger struct {
	// GTM Account ID.
	AccountID *string `json:"accountId,omitempty"`
	// Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update
	AutoEventFilter []Condition `json:"autoEventFilter,omitempty"`
	// Represents a Google Tag Manager Parameter.
	CheckValidation *Parameter `json:"checkValidation,omitempty"`
	// GTM Container ID.
	ContainerID *string `json:"containerId,omitempty"`
	// Represents a Google Tag Manager Parameter.
	ContinuousTimeMinMilliseconds *Parameter `json:"continuousTimeMinMilliseconds,omitempty"`
	// Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update
	CustomEventFilter []Condition `json:"customEventFilter,omitempty"`
	// Represents a Google Tag Manager Parameter.
	EventName *Parameter `json:"eventName,omitempty"`
	// The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update
	Filter []Condition `json:"filter,omitempty"`
	// The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.
	Fingerprint *string `json:"fingerprint,omitempty"`
	// Represents a Google Tag Manager Parameter.
	HorizontalScrollPercentageList *Parameter `json:"horizontalScrollPercentageList,omitempty"`
	// Represents a Google Tag Manager Parameter.
	Interval *Parameter `json:"interval,omitempty"`
	// Represents a Google Tag Manager Parameter.
	IntervalSeconds *Parameter `json:"intervalSeconds,omitempty"`
	// Represents a Google Tag Manager Parameter.
	Limit *Parameter `json:"limit,omitempty"`
	// Represents a Google Tag Manager Parameter.
	MaxTimerLengthSeconds *Parameter `json:"maxTimerLengthSeconds,omitempty"`
	// Trigger display name. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update
	Name *string `json:"name,omitempty"`
	// Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update
	Parameter []Parameter `json:"parameter,omitempty"`
	// Parent folder id.
	ParentFolderID *string `json:"parentFolderId,omitempty"`
	// Represents a Google Tag Manager Parameter.
	Selector *Parameter `json:"selector,omitempty"`
	// Represents a Google Tag Manager Parameter.
	TotalTimeMinMilliseconds *Parameter `json:"totalTimeMinMilliseconds,omitempty"`
	// The Trigger ID uniquely identifies the GTM Trigger.
	TriggerID *string `json:"triggerId,omitempty"`
	// Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update
	Type *TriggerTypeEnum `json:"type,omitempty"`
	// Represents a Google Tag Manager Parameter.
	UniqueTriggerID *Parameter `json:"uniqueTriggerId,omitempty"`
	// Represents a Google Tag Manager Parameter.
	VerticalScrollPercentageList *Parameter `json:"verticalScrollPercentageList,omitempty"`
	// Represents a Google Tag Manager Parameter.
	VisibilitySelector *Parameter `json:"visibilitySelector,omitempty"`
	// Represents a Google Tag Manager Parameter.
	VisiblePercentageMax *Parameter `json:"visiblePercentageMax,omitempty"`
	// Represents a Google Tag Manager Parameter.
	VisiblePercentageMin *Parameter `json:"visiblePercentageMin,omitempty"`
	// Represents a Google Tag Manager Parameter.
	WaitForTags *Parameter `json:"waitForTags,omitempty"`
	// Represents a Google Tag Manager Parameter.
	WaitForTagsTimeout *Parameter `json:"waitForTagsTimeout,omitempty"`
}
