"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import itemprotocol_enum as shared_itemprotocol_enum
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SpotSetTypeProtocolTypeEnum(str, Enum):
    r"""Spot set type `protocol`; Matches Items with the same Protocol as specified by this set."""
    PROTOCOL = 'protocol'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpotSetTypeProtocolInput:
    
    item_protocol: Optional[shared_itemprotocol_enum.ItemProtocolEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item_protocol'), 'exclude': lambda f: f is None }})
    r"""Type of protocol that was used to decode this item."""  
    setid: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setid'), 'exclude': lambda f: f is None }})
    r"""Spot set unique identifier. Must be unique within a single device"""  
    type: Optional[SpotSetTypeProtocolTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Spot set type `protocol`; Matches Items with the same Protocol as specified by this set."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpotSetTypeProtocol:
    
    created_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_by'), 'exclude': lambda f: f is None }})
    r"""Who was responsible for the creation of this spot list. Value determines who's allowed to manages this object."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for resource."""  
    item_protocol: Optional[shared_itemprotocol_enum.ItemProtocolEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('item_protocol'), 'exclude': lambda f: f is None }})
    r"""Type of protocol that was used to decode this item."""  
    setid: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setid'), 'exclude': lambda f: f is None }})
    r"""Spot set unique identifier. Must be unique within a single device"""  
    spot_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spot_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for resource."""  
    time_created: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_created'), 'exclude': lambda f: f is None }})
    r"""[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was created."""  
    time_updated: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_updated'), 'exclude': lambda f: f is None }})
    r"""[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was updated."""  
    type: Optional[SpotSetTypeProtocolTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Spot set type `protocol`; Matches Items with the same Protocol as specified by this set."""  
    