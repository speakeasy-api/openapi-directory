/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SlaDomainDefinition - SLA Domain definition. The SLA domain accepts two backup windows, one for a regular backup or snapshot and one for the first full backup or snapshot. Specify times using Rubrik cluster timezone.
 */
public class SlaDomainDefinition {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedBackupWindows")
    public BackupWindow[] allowedBackupWindows;

    public SlaDomainDefinition withAllowedBackupWindows(BackupWindow[] allowedBackupWindows) {
        this.allowedBackupWindows = allowedBackupWindows;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archivalSpecs")
    public ArchivalSpec[] archivalSpecs;

    public SlaDomainDefinition withArchivalSpecs(ArchivalSpec[] archivalSpecs) {
        this.archivalSpecs = archivalSpecs;
        return this;
    }
    
    @JsonProperty("firstFullAllowedBackupWindows")
    public BackupWindow[] firstFullAllowedBackupWindows;

    public SlaDomainDefinition withFirstFullAllowedBackupWindows(BackupWindow[] firstFullAllowedBackupWindows) {
        this.firstFullAllowedBackupWindows = firstFullAllowedBackupWindows;
        return this;
    }
    
    @JsonProperty("frequencies")
    public SlaFrequency[] frequencies;

    public SlaDomainDefinition withFrequencies(SlaFrequency[] frequencies) {
        this.frequencies = frequencies;
        return this;
    }
    
    /**
     * Boolean value that identifies a Retention Lock SLA Domain. Value is true when an SLA Domain is Retention Locked and false when it is not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRetentionLocked")
    public Boolean isRetentionLocked;

    public SlaDomainDefinition withIsRetentionLocked(Boolean isRetentionLocked) {
        this.isRetentionLocked = isRetentionLocked;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localRetentionLimit")
    public Long localRetentionLimit;

    public SlaDomainDefinition withLocalRetentionLimit(Long localRetentionLimit) {
        this.localRetentionLimit = localRetentionLimit;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public SlaDomainDefinition withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationSpecs")
    public ReplicationSpec[] replicationSpecs;

    public SlaDomainDefinition withReplicationSpecs(ReplicationSpec[] replicationSpecs) {
        this.replicationSpecs = replicationSpecs;
        return this;
    }
    
    public SlaDomainDefinition(@JsonProperty("firstFullAllowedBackupWindows") BackupWindow[] firstFullAllowedBackupWindows, @JsonProperty("frequencies") SlaFrequency[] frequencies, @JsonProperty("name") String name) {
        this.firstFullAllowedBackupWindows = firstFullAllowedBackupWindows;
        this.frequencies = frequencies;
        this.name = name;
  }
}
