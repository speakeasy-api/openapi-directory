/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ItemSnapshot - The type that defines the columns returned in the &lt;b&gt;Hourly Snapshot&lt;/b&gt; feed file.  &lt;p&gt;  &lt;b&gt;Note: &lt;/b&gt; When the value of the &lt;b&gt; availability&lt;/b&gt; column is &lt;code&gt;UNAVAILABLE&lt;/code&gt;, only the &lt;b&gt;itemId&lt;/b&gt; and &lt;b&gt; availability&lt;/b&gt; columns are populated.  &lt;/p&gt; 
 */
public class ItemSnapshot {
    /**
     * This field is returned empty. For a list of payment methods available for a marketplace, see eBay help pages or the actual View Item page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("acceptedPaymentMethods")
    public String acceptedPaymentMethods;

    public ItemSnapshot withAcceptedPaymentMethods(String acceptedPaymentMethods) {
        this.acceptedPaymentMethods = acceptedPaymentMethods;
        return this;
    }
    
    /**
     * A pipe separated (&lt;code&gt;|&lt;/code&gt;) list of URLs for the additional images of the item. These images are in addition to the primary image, which is returned in the &lt;b&gt;imageUrl&lt;/b&gt; column. &lt;b&gt;Note: &lt;/b&gt; This column can contain multiple values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalImageUrls")
    public String additionalImageUrls;

    public ItemSnapshot withAdditionalImageUrls(String additionalImageUrls) {
        this.additionalImageUrls = additionalImageUrls;
        return this;
    }
    
    /**
     * Any per item additional shipping costs for a multi-item purchase. For example, let's say the shipping cost for a power cord is $3. But for an additional cord, the shipping cost is only $1. So if you bought 3 cords, the &lt;b&gt; shippingCost&lt;/b&gt; would be $3 and this value would be $2 ($1 for each additional item).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalShippingCostPerUnit")
    public String additionalShippingCostPerUnit;

    public ItemSnapshot withAdditionalShippingCostPerUnit(String additionalShippingCostPerUnit) {
        this.additionalShippingCostPerUnit = additionalShippingCostPerUnit;
        return this;
    }
    
    /**
     * The age group that the product is recommended for. &lt;br&gt;&lt;br&gt;&lt;b&gt;Valid values:&lt;/b&gt; &lt;code&gt;newborn&lt;/code&gt;, &lt;code&gt;infant&lt;/code&gt;, &lt;code&gt;toddler&lt;/code&gt;, &lt;code&gt;kids&lt;/code&gt;, &lt;code&gt;adult&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ageGroup")
    public String ageGroup;

    public ItemSnapshot withAgeGroup(String ageGroup) {
        this.ageGroup = ageGroup;
        return this;
    }
    
    /**
     * A pipe-separated list of alerts available for the item.&lt;br&gt;&lt;br&gt;For example, if the &lt;code&gt;DELAYED_DELIVERY&lt;/code&gt; alert was returned for an item, it would indicate a delay in shipping by the seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alerts")
    public String alerts;

    public ItemSnapshot withAlerts(String alerts) {
        this.alerts = alerts;
        return this;
    }
    
    /**
     * The currency used for the Authenticity Guarantee service fee.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticityGuaranteeFeeCurrency")
    public String authenticityGuaranteeFeeCurrency;

    public ItemSnapshot withAuthenticityGuaranteeFeeCurrency(String authenticityGuaranteeFeeCurrency) {
        this.authenticityGuaranteeFeeCurrency = authenticityGuaranteeFeeCurrency;
        return this;
    }
    
    /**
     * The price of the Authenticity Guarantee service for the item.&lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;span style="color:#004680"&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/span&gt; The price returned in this field indicates the service fee for a single item quantity.&lt;/span&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticityGuaranteeFeeValue")
    public String authenticityGuaranteeFeeValue;

    public ItemSnapshot withAuthenticityGuaranteeFeeValue(String authenticityGuaranteeFeeValue) {
        this.authenticityGuaranteeFeeValue = authenticityGuaranteeFeeValue;
        return this;
    }
    
    /**
     * An indication of whether the Authenticity Guarantee service is optional or mandatory for the item. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/api:OptionalityEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticityGuaranteeSelection")
    public String authenticityGuaranteeSelection;

    public ItemSnapshot withAuthenticityGuaranteeSelection(String authenticityGuaranteeSelection) {
        this.authenticityGuaranteeSelection = authenticityGuaranteeSelection;
        return this;
    }
    
    /**
     * The unique identifier for the Authenticity Guarantee service associated with the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticityGuaranteeServiceId")
    public String authenticityGuaranteeServiceId;

    public ItemSnapshot withAuthenticityGuaranteeServiceId(String authenticityGuaranteeServiceId) {
        this.authenticityGuaranteeServiceId = authenticityGuaranteeServiceId;
        return this;
    }
    
    /**
     * An enumeration value representing the item's availability (possibility of being purchased). &lt;br&gt;&lt;br&gt;&lt;b&gt;Values: &lt;/b&gt;    &lt;ul&gt;  &lt;li&gt;AVAILABLE&lt;/li&gt;    &lt;li&gt;TEMPORARILY_UNAVAILABLE&lt;/li&gt;     &lt;li&gt;UNAVAILABLE&lt;/li&gt; &lt;/ul&gt;  Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/api:AvailabilityEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availability")
    public String availability;

    public ItemSnapshot withAvailability(String availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * This column has a value only when the seller sets their '&lt;a href="#display-item-quantity"&gt;display item quantity&lt;/a&gt;' preference to &lt;b&gt; Display "More than 10 available" in your listing (if applicable)&lt;/b&gt;. The value of this column will be "10", which is the threshold value. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availabilityThreshold")
    public Long availabilityThreshold;

    public ItemSnapshot withAvailabilityThreshold(Long availabilityThreshold) {
        this.availabilityThreshold = availabilityThreshold;
        return this;
    }
    
    /**
     * &lt;a name="display-item-quantity"&gt;&lt;/a&gt; This column has a value only when the seller sets their &lt;b&gt;Display Item Quantity&lt;/b&gt; preference to &lt;b&gt; Display "More than 10 available" in your listing (if applicable)&lt;/b&gt;. The value of this column will be &lt;code&gt; MORE_THAN&lt;/code&gt;. This indicates that the seller has more than the 'Display Item Quantity', which is 10, in stock for this item.    &lt;br&gt;&lt;br&gt; The following are the &lt;b&gt;Display Item Quantity&lt;/b&gt; preferences the seller can set. &lt;br&gt;&lt;ul&gt;&lt;li&gt; &lt;b&gt; Display "More than 10 available" in your listing (if applicable)&lt;/b&gt; &lt;br&gt;If the seller enables this preference, this column will have a value as long as there are more than 10 of this item in inventory. If the quantity is equal to 10 or drops below 10, this column will be null and the estimated quantity of the item is returned in the &lt;b&gt; estimatedAvailableQuantity&lt;/b&gt; column. &lt;/li&gt; &lt;li&gt; &lt;b&gt; Display the exact quantity in your items&lt;/b&gt; &lt;br&gt;If the seller enables this preference, the &lt;b&gt; availabilityThresholdType&lt;/b&gt; and &lt;b&gt; availabilityThreshold&lt;/b&gt; columns will be null  and the estimated quantity of the item is returned in the &lt;b&gt; estimatedAvailableQuantity&lt;/b&gt; column.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note: &lt;/b&gt; Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. &lt;/li&gt;&lt;/ul&gt;   &lt;br&gt;Code so that your app gracefully handles any future changes to these preferences. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/api:AvailabilityThresholdEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availabilityThresholdType")
    public String availabilityThresholdType;

    public ItemSnapshot withAvailabilityThresholdType(String availabilityThresholdType) {
        this.availabilityThresholdType = availabilityThresholdType;
        return this;
    }
    
    /**
     * The name brand of the item, such as Nike, Apple, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brand")
    public String brand;

    public ItemSnapshot withBrand(String brand) {
        this.brand = brand;
        return this;
    }
    
    /**
     * A comma separated list of the purchase options available for the item. Currently the only supported option is &lt;code&gt;FIXED_PRICE&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyingOptions")
    public String buyingOptions;

    public ItemSnapshot withBuyingOptions(String buyingOptions) {
        this.buyingOptions = buyingOptions;
        return this;
    }
    
    /**
     * The label of the category of the item. For example: &lt;b&gt; Toys &amp; Hobbies|Action Figures|Comic Book Heroes &lt;/b&gt;. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public String category;

    public ItemSnapshot withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * The ID of the category of the item. For example: The ID for Toys &amp; Hobbies|Action Figures|Comic Book Heroes is &lt;code&gt;158671&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryId")
    public String categoryId;

    public ItemSnapshot withCategoryId(String categoryId) {
        this.categoryId = categoryId;
        return this;
    }
    
    /**
     * Status change indicator of the listing.&lt;br&gt;&lt;br&gt;&lt;b&gt;Values:&lt;/b&gt; &lt;ul&gt;&lt;li&gt;&lt;code&gt;PRICE_CHANGE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;QUANTITY_CHANGE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;TITLE_CHANGE&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;DELETED&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;NEW&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ENDED&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("changeMetadata")
    public String changeMetadata;

    public ItemSnapshot withChangeMetadata(String changeMetadata) {
        this.changeMetadata = changeMetadata;
        return this;
    }
    
    /**
     * The color of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public String color;

    public ItemSnapshot withColor(String color) {
        this.color = color;
        return this;
    }
    
    /**
     * The text describing the condition of the item, such as New or Used. For a list of condition names, see &lt;a href="https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html " target="_blank"&gt;Item Condition IDs and Names&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public String condition;

    public ItemSnapshot withCondition(String condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * The identifier of the condition of the item. For example, 1000 is the identifier for NEW. For a list of condition names and IDs, see &lt;a href="https://developer.ebay.com/devzone/finding/callref/enums/conditionIdList.html " target="_blank"&gt;Item Condition IDs and Names&lt;/a&gt;.&lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditionId")
    public String conditionId;

    public ItemSnapshot withConditionId(String conditionId) {
        this.conditionId = conditionId;
        return this;
    }
    
    /**
     * The currency used to specify the coupon discount value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("couponDiscountCurrency")
    public String couponDiscountCurrency;

    public ItemSnapshot withCouponDiscountCurrency(String couponDiscountCurrency) {
        this.couponDiscountCurrency = couponDiscountCurrency;
        return this;
    }
    
    /**
     * The type of discount that the coupon applies.&lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;span style="color:#004680"&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/span&gt; If all coupon fields return null values, it indicates that the item never had a coupon, or that the coupon has been removed. Please ensure that you update your inventory accordingly.&lt;/span&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("couponDiscountType")
    public String couponDiscountType;

    public ItemSnapshot withCouponDiscountType(String couponDiscountType) {
        this.couponDiscountType = couponDiscountType;
        return this;
    }
    
    /**
     * The discount amount after the coupon is applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("couponDiscountValue")
    public String couponDiscountValue;

    public ItemSnapshot withCouponDiscountValue(String couponDiscountValue) {
        this.couponDiscountValue = couponDiscountValue;
        return this;
    }
    
    /**
     * The expiration date for the coupon. &lt;br&gt;&lt;br&gt;&lt;b&gt; Format: &lt;/b&gt; UTC &lt;code&gt;yyyy-MM-ddThh:mm:ss.sssZ&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("couponExpirationDate")
    public String couponExpirationDate;

    public ItemSnapshot withCouponExpirationDate(String couponExpirationDate) {
        this.couponExpirationDate = couponExpirationDate;
        return this;
    }
    
    /**
     * A description of the coupon.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("couponMessage")
    public String couponMessage;

    public ItemSnapshot withCouponMessage(String couponMessage) {
        this.couponMessage = couponMessage;
        return this;
    }
    
    /**
     * The redemption code for the coupon.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("couponRedemptionCode")
    public String couponRedemptionCode;

    public ItemSnapshot withCouponRedemptionCode(String couponRedemptionCode) {
        this.couponRedemptionCode = couponRedemptionCode;
        return this;
    }
    
    /**
     * The URL to the coupon terms of use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("couponTermsWebUrl")
    public String couponTermsWebUrl;

    public ItemSnapshot withCouponTermsWebUrl(String couponTermsWebUrl) {
        this.couponTermsWebUrl = couponTermsWebUrl;
        return this;
    }
    
    /**
     * URL to the gallery or default image of the item. The other images of the item are returned in the &lt;b&gt;additionalImageUrls&lt;/b&gt; field.&lt;br&gt;&lt;br&gt;&lt;b&gt;For example&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;code&gt;https://i.ebayimg.com/00/s/M********w/z/W********p/$_1.JPG?set_id=8********F&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultImageUrl")
    public String defaultImageUrl;

    public ItemSnapshot withDefaultImageUrl(String defaultImageUrl) {
        this.defaultImageUrl = defaultImageUrl;
        return this;
    }
    
    /**
     * A comma-separated list of available delivery options. This column lets you filter out items than cannot be shipped to the buyer. &lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values&lt;/b&gt;: SHIP_TO_HOME, SELLER_ARRANGED_LOCAL_PICKUP, IN_STORE_PICKUP, and PICKUP_DROP_OFF. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/api:DeliveryOptionsEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryOptions")
    public String deliveryOptions;

    public ItemSnapshot withDeliveryOptions(String deliveryOptions) {
        this.deliveryOptions = deliveryOptions;
        return this;
    }
    
    /**
     * The seller created description of the item.&lt;br&gt;&lt;br&gt;&lt;b&gt;For example:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;code&gt;Brand-new, unused, and unworn. Not in original packaging.&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ItemSnapshot withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The calculated amount of the discount (&lt;b&gt;originalPriceValue&lt;/b&gt; - &lt;b&gt;priceValue&lt;/b&gt;). For example,  if &lt;b&gt;originalPriceValue&lt;/b&gt; is 70 and &lt;b&gt;priceValue&lt;/b&gt; is 56, this value would be 14. &lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; The currency shown in &lt;b&gt;originalPriceCurrency&lt;/b&gt; is used for both &lt;b&gt;discountAmount&lt;/b&gt; and &lt;b&gt;originalPriceCurrency&lt;/b&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discountAmount")
    public String discountAmount;

    public ItemSnapshot withDiscountAmount(String discountAmount) {
        this.discountAmount = discountAmount;
        return this;
    }
    
    /**
     * The calculated discount percentage. For example, if &lt;b&gt; originalPriceValue&lt;/b&gt; is 70 and &lt;b&gt; discountAmount&lt;/b&gt; is 14, this value will be 20.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discountPercentage")
    public String discountPercentage;

    public ItemSnapshot withDiscountPercentage(String discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }
    
    /**
     * The currency in which the Eco Participation Fee for the item is paid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ecoParticipationFeeCurrency")
    public String ecoParticipationFeeCurrency;

    public ItemSnapshot withEcoParticipationFeeCurrency(String ecoParticipationFeeCurrency) {
        this.ecoParticipationFeeCurrency = ecoParticipationFeeCurrency;
        return this;
    }
    
    /**
     * The amount of the Eco Participation Fee, a fee paid toward the eventual disposal of the purchased item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ecoParticipationFeeValue")
    public String ecoParticipationFeeValue;

    public ItemSnapshot withEcoParticipationFeeValue(String ecoParticipationFeeValue) {
        this.ecoParticipationFeeValue = ecoParticipationFeeValue;
        return this;
    }
    
    /**
     * Indicates the &lt;a href="https://en.wikipedia.org/wiki/European_Union_energy_label"&gt;European energy efficiency&lt;/a&gt; rating (EEK) of the item. This field is returned only if the seller specified the energy efficiency rating. &lt;br&gt;&lt;br&gt;The rating is a set of energy efficiency classes from A to G, where 'A' is the most energy efficient and 'G' is the least efficient. This rating helps buyers choose between various models. &lt;br&gt;&lt;br&gt;To retrieve the manufacturer's specifications for this item, when they are available, use the &lt;a href="/api-docs/buy/browse/resources/item/methods/getItem"&gt;getItem&lt;/a&gt; method in the Browse API. The information is returned in the &lt;b&gt; productFicheWebUrl&lt;/b&gt; field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("energyEfficiencyClass")
    public String energyEfficiencyClass;

    public ItemSnapshot withEnergyEfficiencyClass(String energyEfficiencyClass) {
        this.energyEfficiencyClass = energyEfficiencyClass;
        return this;
    }
    
    /**
     * The eBay product identifier of a product from the eBay product catalog. You can use this value in the Browse API &lt;a href="/api-docs/buy/browse/resources/item_summary/methods/search"&gt;search&lt;/a&gt; method to retrieve items for this product and in the &lt;a href="/api-docs/buy/marketing/resources/methods"&gt;Marketing API&lt;/a&gt; methods to retrieve 'also viewed' and 'also bought' products to encourage up-selling and cross-selling.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("epid")
    public String epid;

    public ItemSnapshot withEpid(String epid) {
        this.epid = epid;
        return this;
    }
    
    /**
     * The estimated number of this item that are available for purchase. Because the quantity of an item can change several times within a second, it is impossible to return the exact quantity. So instead of returning quantity, the estimated availability of the item is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimatedAvailableQuantity")
    public Long estimatedAvailableQuantity;

    public ItemSnapshot withEstimatedAvailableQuantity(Long estimatedAvailableQuantity) {
        this.estimatedAvailableQuantity = estimatedAvailableQuantity;
        return this;
    }
    
    /**
     * In cases where items could vary by gender, this specifies for which gender the product is intended. Possible values include male, female, and unisex.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public String gender;

    public ItemSnapshot withGender(String gender) {
        this.gender = gender;
        return this;
    }
    
    /**
     * The unique Global Trade Item Number of the item as defined by &lt;a href="https://www.gtin.info " target="_blank"&gt;https://www.gtin.info&lt;/a&gt;. This can be a UPC (Universal Product Code), EAN (European Article Number), or an ISBN (International Standard Book Number) value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gtin")
    public String gtin;

    public ItemSnapshot withGtin(String gtin) {
        this.gtin = gtin;
        return this;
    }
    
    /**
     * Base64 encoded additional information about the hazardous material.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hazmatAdditionalInformation")
    public String hazmatAdditionalInformation;

    public ItemSnapshot withHazmatAdditionalInformation(String hazmatAdditionalInformation) {
        this.hazmatAdditionalInformation = hazmatAdditionalInformation;
        return this;
    }
    
    /**
     * The base64 encoded descriptions of hazardous material pictograms, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;encoded(exploding bomb)|encoded(flame)&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hazmatPictogramDescriptions")
    public String hazmatPictogramDescriptions;

    public ItemSnapshot withHazmatPictogramDescriptions(String hazmatPictogramDescriptions) {
        this.hazmatPictogramDescriptions = hazmatPictogramDescriptions;
        return this;
    }
    
    /**
     * The IDs of hazardous material pictograms, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;SGH01|SGH02&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hazmatPictogramIds")
    public String hazmatPictogramIds;

    public ItemSnapshot withHazmatPictogramIds(String hazmatPictogramIds) {
        this.hazmatPictogramIds = hazmatPictogramIds;
        return this;
    }
    
    /**
     * The image URLs of hazardous material pictograms, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;https:&amp;#47;&amp;#47;img1|https:&amp;#47;&amp;#47;img2&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hazmatPictogramImageUrls")
    public String hazmatPictogramImageUrls;

    public ItemSnapshot withHazmatPictogramImageUrls(String hazmatPictogramImageUrls) {
        this.hazmatPictogramImageUrls = hazmatPictogramImageUrls;
        return this;
    }
    
    /**
     * The localized signal word for the hazardous material, such as 'Danger'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hazmatSignalWord")
    public String hazmatSignalWord;

    public ItemSnapshot withHazmatSignalWord(String hazmatSignalWord) {
        this.hazmatSignalWord = hazmatSignalWord;
        return this;
    }
    
    /**
     * The ID of the signal word for the hazardous material.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hazmatSignalWordId")
    public String hazmatSignalWordId;

    public ItemSnapshot withHazmatSignalWordId(String hazmatSignalWordId) {
        this.hazmatSignalWordId = hazmatSignalWordId;
        return this;
    }
    
    /**
     * The base64 encoded descriptions of hazardous material statements, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;encoded(Unstable explosives)|encoded(Flammable gas)&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hazmatStatementDescriptions")
    public String hazmatStatementDescriptions;

    public ItemSnapshot withHazmatStatementDescriptions(String hazmatStatementDescriptions) {
        this.hazmatStatementDescriptions = hazmatStatementDescriptions;
        return this;
    }
    
    /**
     * The IDs of hazardous material statements, separated by the pipe symbol. For example: &lt;br /&gt;&lt;br /&gt;&lt;code&gt;H200|H221&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hazmatStatementIds")
    public String hazmatStatementIds;

    public ItemSnapshot withHazmatStatementIds(String hazmatStatementIds) {
        this.hazmatStatementIds = hazmatStatementIds;
        return this;
    }
    
    /**
     * A boolean that indicates whether the images can be altered. If the value is &lt;code&gt;true&lt;/code&gt;, you cannot modify the image. &lt;p&gt;&lt;span class="tablenote"&gt;&lt;b&gt;Note: &lt;/b&gt; Due to image licensing agreements and other legal concerns, modification (including resizing) of some images is strictly prohibited. These images are for display as-is only. &lt;/span&gt;&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageAlteringProhibited")
    public Boolean imageAlteringProhibited;

    public ItemSnapshot withImageAlteringProhibited(Boolean imageAlteringProhibited) {
        this.imageAlteringProhibited = imageAlteringProhibited;
        return this;
    }
    
    /**
     * The URL to the primary image of the item.  This is the URL of the largest image available based on what the seller submitted. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageUrl")
    public String imageUrl;

    public ItemSnapshot withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * The ePID (eBay Product ID of a product in the eBay product catalog) for the item, which has been programmatically determined by eBay using the item's title, aspects, and other data. &lt;br&gt;&lt;br&gt;If the seller actually provided an ePID at listing time for the item, the ePID value is returned in the &lt;b&gt;epid&lt;/b&gt; column instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inferredEpid")
    public String inferredEpid;

    public ItemSnapshot withInferredEpid(String inferredEpid) {
        this.inferredEpid = inferredEpid;
        return this;
    }
    
    /**
     * The URL of the View Item page of the item, with the affiliate tracking ID appended to it.&lt;br&gt;&lt;br&gt;&lt;b&gt;For example&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;code&gt;https://www.ebay.de/itm/2********0?mkevt=1&amp;mkcid=1&amp;mkrid=707-53477-19255-0&amp;campid=CAMPAIGNID&amp;toolid=2***6&amp;customid=CUSTOMID&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemAffiliateWebUrl")
    public String itemAffiliateWebUrl;

    public ItemSnapshot withItemAffiliateWebUrl(String itemAffiliateWebUrl) {
        this.itemAffiliateWebUrl = itemAffiliateWebUrl;
        return this;
    }
    
    /**
     * A timestamp indicating when the item was created. &lt;br&gt;&lt;br&gt;&lt;b&gt; Format: &lt;/b&gt; UTC &lt;code&gt;yyyy-MM-ddThh:mm:ss.sssZ&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemCreationDate")
    public String itemCreationDate;

    public ItemSnapshot withItemCreationDate(String itemCreationDate) {
        this.itemCreationDate = itemCreationDate;
        return this;
    }
    
    /**
     * A timestamp indicating when the item's sale period will end based on its start date and duration. For Good 'Til Cancelled items, no value is returned in this column. &lt;br&gt;&lt;br&gt;&lt;b&gt; Format: &lt;/b&gt; UTC &lt;code&gt;yyyy-MM-ddThh:mm:ss.sssZ&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemEndDate")
    public String itemEndDate;

    public ItemSnapshot withItemEndDate(String itemEndDate) {
        this.itemEndDate = itemEndDate;
        return this;
    }
    
    /**
     * The unique identifier of an item in eBay RESTful format. An example would be &lt;code&gt;v1|1**********2|4**********2&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemId")
    public String itemId;

    public ItemSnapshot withItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }
    
    /**
     * The country where the item is physically located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemLocationCountry")
    public String itemLocationCountry;

    public ItemSnapshot withItemLocationCountry(String itemLocationCountry) {
        this.itemLocationCountry = itemLocationCountry;
        return this;
    }
    
    /**
     * This timestamp denotes the date and time the changes for that item were picked up and added to the snapshot feed file. &lt;br&gt;&lt;br&gt;For example, let's say you have a snapshot feed file and also ran the &lt;b&gt; getItem&lt;/b&gt; method. When you compare the same item information from the two sources, you see that the price in the &lt;b&gt; getItem&lt;/b&gt; method response is different from the price in the snapshot feed file. By knowing the date and time you submitted the &lt;b&gt; getItem&lt;/b&gt; method, you can use the &lt;b&gt; itemSnapshotDate&lt;/b&gt; data to determine which price is the most current for this item. &lt;br&gt;&lt;br&gt;&lt;b&gt; Format: &lt;/b&gt; UTC &lt;code&gt;yyyy-MM-ddThh:mm:ss.sssZ&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemSnapshotDate")
    public String itemSnapshotDate;

    public ItemSnapshot withItemSnapshotDate(String itemSnapshotDate) {
        this.itemSnapshotDate = itemSnapshotDate;
        return this;
    }
    
    /**
     * The URL of the View Item page of the item. &lt;br/&gt;&lt;br&gt;&lt;b&gt;For example:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;Single SKU:&lt;/b&gt;&lt;br&gt;&lt;code&gt;https://www.ebay.de/itm/2********0&lt;/code&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;MSKU:&lt;/b&gt;&lt;br&gt;&lt;code&gt;https://www.ebay.com/itm/2********9?var=5********2&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemWebUrl")
    public String itemWebUrl;

    public ItemSnapshot withItemWebUrl(String itemWebUrl) {
        this.itemWebUrl = itemWebUrl;
        return this;
    }
    
    /**
     * The unique identifier of the eBay listing that contains the item. This is the traditional/legacy ID that is often seen in the URL of the listing View Item page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legacyItemId")
    public String legacyItemId;

    public ItemSnapshot withLegacyItemId(String legacyItemId) {
        this.legacyItemId = legacyItemId;
        return this;
    }
    
    /**
     * A semicolon separated list of the name/value pairs for the aspects of the item, which are BASE64 encoded. The aspect label is separated by a pipe (|), the aspect name and value are separated by a colon (:) and the name/value pairs are separated by a semicolon (;). &lt;p&gt;&lt;b&gt; Example without Label&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Format:&lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;&lt;/code&gt; &lt;/p&gt;       &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Example&lt;/b&gt; (The delimiters are &lt;b style="font-family: 'Arial Black';"&gt;emphasized&lt;/b&gt;):    &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;U2l6ZQ==&lt;b style="font-family: 'Arial Black';"&gt;:&lt;/b&gt;WEw=&lt;b style="font-family: 'Arial Black';"&gt;;&lt;/b&gt;Q29sb3I=&lt;b style="font-family: 'Arial Black';"&gt;:&lt;/b&gt;UmVk&lt;b style="font-family: 'Arial Black';"&gt;;&lt;/b&gt;U2xlZXZlcw==&lt;b style="font-family: 'Arial Black';"&gt;:&lt;/b&gt;TG9uZw==&lt;/code&gt; &lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Decoded: &lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Size:XL;Color:Red;Sleeves:Long &lt;/p&gt;        &lt;p&gt;&lt;br&gt;&lt;b&gt; Example with Label&lt;/b&gt;&lt;/p&gt;    &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Format:&lt;/b&gt;   &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;&lt;em&gt;encodedLabel&lt;/em&gt;|&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedName&lt;/em&gt;:&lt;em&gt;encodedValue&lt;/em&gt;;&lt;em&gt;encodedLabel&lt;/em&gt;|&lt;/code&gt;&lt;/p&gt;       &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Encoded Example&lt;/b&gt; (The delimiters are &lt;b style="font-family: 'Arial Black';"&gt;emphasized&lt;/b&gt;):  &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;code&gt;UHJvZHVjdCBJZGVudGlmaWVycw==&lt;b style="font-family: 'Arial Black';"&gt;|&lt;/b&gt;R1RJTg==&lt;b style="font-family: 'Arial Black';"&gt;:&lt;/b&gt;MDE5MDE5ODA2NjYzMw==&lt;b style="font-family: 'Arial Black';"&gt;;&lt;/b&gt;QlJBTkQ=&lt;b style="font-family: 'Arial Black';"&gt;:&lt;/b&gt;QXBwbGU=&lt;b style="font-family: 'Arial Black';"&gt;;&lt;/b&gt;UHJvZHVjdCBLZXkgRmVhdHVyZXM=&lt;b style="font-family: 'Arial Black';"&gt;|&lt;/b&gt;TW9kZWw=&lt;b style="font-family: 'Arial Black';"&gt;:&lt;/b&gt;aVBob25lIDc=&lt;/code&gt; &lt;/p&gt;        &lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;b&gt; Decoded: &lt;/b&gt; &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;Product Identifiers|GTIN:0190198066633;BRAND:Apple;Product Key Features|Model:iPhone 7&lt;/p&gt;        &lt;p&gt;&lt;span class="tablenote"&gt;&lt;b&gt;Note: &lt;/b&gt; The separators (&lt;code&gt; |  :  ; &lt;/code&gt;) are &lt;i&gt; not&lt;/i&gt; encoded. You must decode each label, name, and value separately. You cannot decode the entire string.&lt;/b&gt;&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href="/api-docs/buy/static/api-feed.html#encoded-aspects"&gt;Encoded Aspects&lt;/a&gt; in the Buying Integration Guide.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localizedAspects")
    public String localizedAspects;

    public ItemSnapshot withLocalizedAspects(String localizedAspects) {
        this.localizedAspects = localizedAspects;
        return this;
    }
    
    /**
     * The number of items in a lot. In other words, a lot size is the number of items that are being sold together.  &lt;br&gt;&lt;br&gt;A lot is a set of two or more items included in a single listing that must be purchased together in a single order line item. All the items in the lot are the same but there can be multiple items in a single lot,  such as the package of batteries shown in the example below.   &lt;br&gt;&lt;br&gt;&lt;table border="1"&gt; &lt;tr&gt; &lt;tr&gt;  &lt;th&gt;Item&lt;/th&gt;  &lt;th&gt;Lot Definition&lt;/th&gt; &lt;th&gt;Lot Size&lt;/th&gt;&lt;/tr&gt;  &lt;tr&gt;  &lt;td&gt;A package of 24 AA batteries&lt;/td&gt;  &lt;td&gt;A box of 10 packages&lt;/td&gt;  &lt;td&gt;10  &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt;  &lt;td&gt;A P235/75-15 Goodyear tire &lt;/td&gt;  &lt;td&gt;4 tires  &lt;/td&gt;  &lt;td&gt;4  &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;Fashion Jewelry Rings  &lt;/td&gt; &lt;td&gt;Package of 100 assorted rings  &lt;/td&gt; &lt;td&gt;100 &lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;  &lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;b&gt;Note: &lt;/b&gt;  Lots are not supported in all categories.  &lt;/span&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lotSize")
    public Long lotSize;

    public ItemSnapshot withLotSize(Long lotSize) {
        this.lotSize = lotSize;
        return this;
    }
    
    /**
     * The material that the item is made of.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("material")
    public String material;

    public ItemSnapshot withMaterial(String material) {
        this.material = material;
        return this;
    }
    
    /**
     * The manufacturer part number, which is a number that is used in combination with &lt;b&gt; brand&lt;/b&gt; to identify a product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mpn")
    public String mpn;

    public ItemSnapshot withMpn(String mpn) {
        this.mpn = mpn;
        return this;
    }
    
    /**
     * The currency of the &lt;b&gt; originalPriceValue&lt;/b&gt; of the item and the &lt;b&gt; discountAmount&lt;/b&gt;.  For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:CurrencyCodeEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalPriceCurrency")
    public String originalPriceCurrency;

    public ItemSnapshot withOriginalPriceCurrency(String originalPriceCurrency) {
        this.originalPriceCurrency = originalPriceCurrency;
        return this;
    }
    
    /**
     * The original selling price of the item. This lets you surface a strikethrough price for the item. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalPriceValue")
    public String originalPriceValue;

    public ItemSnapshot withOriginalPriceValue(String originalPriceValue) {
        this.originalPriceValue = originalPriceValue;
        return this;
    }
    
    /**
     * (Primary Item Aspect) Text describing the pattern used on the item. For example, paisley.&lt;br&gt;&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; All the item aspects, including this aspect, are returned in the localizedAspects container.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pattern")
    public String pattern;

    public ItemSnapshot withPattern(String pattern) {
        this.pattern = pattern;
        return this;
    }
    
    /**
     * The currency used for the price of the item. Generally, this is the currency used by the country of the eBay site offering the item. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:CurrencyCodeEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceCurrency")
    public String priceCurrency;

    public ItemSnapshot withPriceCurrency(String priceCurrency) {
        this.priceCurrency = priceCurrency;
        return this;
    }
    
    /**
     * The price of the item, which can be a discounted price. &lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;b&gt; Note: &lt;/b&gt;The price includes the value-added tax (VAT) for applicable jurisdictions when requested from supported marketplaces. In this case, users must pass the &lt;a href="/api-docs/static/rest-request-components.html#HTTP"&gt;&lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt;&lt;/a&gt; request header specifying the supported marketplace (such as &lt;code&gt;EBAY_GB&lt;/code&gt;) to see the VAT-inclusive pricing. For more information on VAT, refer to &lt;a href="https://www.ebay.co.uk/help/listings/default/vat-obligations-eu?id=4650&amp;st=12&amp;pos=1&amp;query=Your%20VAT%20obligations%20in%20the%20EU&amp;intent=VAT"&gt;VAT Obligations in the EU&lt;/a&gt;.&lt;/span&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceValue")
    public String priceValue;

    public ItemSnapshot withPriceValue(String priceValue) {
        this.priceValue = priceValue;
        return this;
    }
    
    /**
     * The unique identifier for the item group that contains this item. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryItemGroupId")
    public String primaryItemGroupId;

    public ItemSnapshot withPrimaryItemGroupId(String primaryItemGroupId) {
        this.primaryItemGroupId = primaryItemGroupId;
        return this;
    }
    
    /**
     * The item group type. Supported value: &lt;code&gt;SELLER_DEFINED_VARIATIONS&lt;/code&gt;, indicates that the item group was created by the seller. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryItemGroupType")
    public String primaryItemGroupType;

    public ItemSnapshot withPrimaryItemGroupType(String primaryItemGroupType) {
        this.primaryItemGroupType = primaryItemGroupType;
        return this;
    }
    
    /**
     * A pipe separated list of the qualified programs available for the item, such as EBAY_PLUS and AUTHENTICITY_GUARANTEE.  &lt;br&gt;&lt;br&gt;eBay Plus is a premium account option for buyers, which provides benefits such as fast free domestic shipping and free returns on selected items. Top-Rated eBay sellers must opt in to eBay Plus to be able to offer the program on qualifying listings. Sellers must commit to next-day delivery of those items.  &lt;span class="tablenote"&gt;&lt;b&gt;Note: &lt;/b&gt; eBay Plus is available only to buyers in Germany, Austria, and Australia marketplaces. &lt;/span&gt;&lt;br&gt;&lt;br&gt;The eBay Authenticity Guarantee program enables third-party authenticators to perform authentication verification inspections on items such as watches and sneakers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("qualifiedPrograms")
    public String qualifiedPrograms;

    public ItemSnapshot withQualifiedPrograms(String qualifiedPrograms) {
        this.qualifiedPrograms = qualifiedPrograms;
        return this;
    }
    
    /**
     * The number of items used when calculating the shipping estimation information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantityUsedForEstimate")
    public Long quantityUsedForEstimate;

    public ItemSnapshot withQuantityUsedForEstimate(Long quantityUsedForEstimate) {
        this.quantityUsedForEstimate = quantityUsedForEstimate;
        return this;
    }
    
    /**
     * An enumeration value representing how a buyer is refunded when an item is returned. &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.  For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/api:RefundMethodEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refundMethod")
    public String refundMethod;

    public ItemSnapshot withRefundMethod(String refundMethod) {
        this.refundMethod = refundMethod;
        return this;
    }
    
    /**
     * A score that describes how easy it is to repair the product. Score values range from 0.1 (hardest to repair) to 10.0 (easiest), always including a single decimal place.&lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt; Support for this field is currently limited to the France marketplace.&lt;/span&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repairScore")
    public String repairScore;

    public ItemSnapshot withRepairScore(String repairScore) {
        this.repairScore = repairScore;
        return this;
    }
    
    /**
     * An enumeration value that indicates the alternative methods for a full refund when an item is returned. This column will have data if the seller offers the buyer an item replacement or exchange instead of a monetary refund. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/api:ReturnMethodEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnMethod")
    public String returnMethod;

    public ItemSnapshot withReturnMethod(String returnMethod) {
        this.returnMethod = returnMethod;
        return this;
    }
    
    /**
     * An enumeration value that indicates the period of time being used to measure the duration, such as business days, months, or years. &lt;br&gt;&lt;br&gt;&lt;b&gt;TimeDurationUnitEnum&lt;/b&gt; is a common type shared by multiple eBay APIs and fields to express the time unit, but for return period duration, this value will always be &lt;code&gt;DAY&lt;/code&gt;. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/bas:TimeDurationUnitEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnPeriodUnit")
    public String returnPeriodUnit;

    public ItemSnapshot withReturnPeriodUnit(String returnPeriodUnit) {
        this.returnPeriodUnit = returnPeriodUnit;
        return this;
    }
    
    /**
     * The amount of days that the buyer has to return the item after the purchase date. For example, if this value is &lt;code&gt;30&lt;/code&gt;, the return period is 30 days.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnPeriodValue")
    public Long returnPeriodValue;

    public ItemSnapshot withReturnPeriodValue(Long returnPeriodValue) {
        this.returnPeriodValue = returnPeriodValue;
        return this;
    }
    
    /**
     * An enumeration value that indicates the party responsible for the return shipping costs when an item is returned. &lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values: &lt;/b&gt; &lt;code&gt;BUYER&lt;/code&gt; or &lt;code&gt;SELLER&lt;/code&gt; &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/api:ReturnShippingCostPayerEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnShippingCostPayer")
    public String returnShippingCostPayer;

    public ItemSnapshot withReturnShippingCostPayer(String returnShippingCostPayer) {
        this.returnShippingCostPayer = returnShippingCostPayer;
        return this;
    }
    
    /**
     * Indicates whether the seller accepts returns for the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnsAccepted")
    public Boolean returnsAccepted;

    public ItemSnapshot withReturnsAccepted(Boolean returnsAccepted) {
        this.returnsAccepted = returnsAccepted;
        return this;
    }
    
    /**
     * A string value that specifies whether the seller is a business or an individual. This is determined when the seller registers with eBay. If the seller registers for a business account, the value returned in this field will be &lt;code&gt;BUSINESS&lt;/code&gt;. If the seller registers for a private account, the value returned in this field will be &lt;code&gt;INDIVIDUAL&lt;/code&gt;.&lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt; This designation is required by the tax laws in some countries.&lt;/span&gt;&lt;br&gt;&lt;br&gt;This field is returned only on the following sites: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, and EBAY_PL.&lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt; &lt;code&gt;BUSINESS&lt;/code&gt; or &lt;code&gt;INDIVIDUAL&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerAccountType")
    public String sellerAccountType;

    public ItemSnapshot withSellerAccountType(String sellerAccountType) {
        this.sellerAccountType = sellerAccountType;
        return this;
    }
    
    /**
     * The percentage of the seller's total positive feedback.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerFeedbackPercentage")
    public String sellerFeedbackPercentage;

    public ItemSnapshot withSellerFeedbackPercentage(String sellerFeedbackPercentage) {
        this.sellerFeedbackPercentage = sellerFeedbackPercentage;
        return this;
    }
    
    /**
     * The feedback score of the seller. This value is based on the ratings from eBay members that bought items from this seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerFeedbackScore")
    public String sellerFeedbackScore;

    public ItemSnapshot withSellerFeedbackScore(String sellerFeedbackScore) {
        this.sellerFeedbackScore = sellerFeedbackScore;
        return this;
    }
    
    /**
     * An identifier generated/incremented when a seller revises the item. There are two types of item revisions: &lt;ul&gt;&lt;li&gt;Seller changes, such as changing the title&lt;/li&gt;  &lt;li&gt;eBay system changes, such as changing the quantity when an item is purchased&lt;/li&gt;&lt;/ul&gt; This ID is changed &lt;i&gt; only&lt;/i&gt; when the seller makes a change to the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerItemRevision")
    public String sellerItemRevision;

    public ItemSnapshot withSellerItemRevision(String sellerItemRevision) {
        this.sellerItemRevision = sellerItemRevision;
        return this;
    }
    
    /**
     * An enumeration value representing the eBay status of the seller. &lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt; &lt;code&gt;TOP_RATED&lt;/code&gt;, &lt;code&gt;ABOVE_STANDARD&lt;/code&gt;, or an empty value. &lt;br&gt;&lt;br&gt;An empty value indicates a return of anything other than &lt;code&gt;TOP_RATED&lt;/code&gt; or &lt;code&gt;ABOVE_STANDARD&lt;/code&gt;.&lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/buy/feed/types/api:SellerTrustLevelEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerTrustLevel")
    public String sellerTrustLevel;

    public ItemSnapshot withSellerTrustLevel(String sellerTrustLevel) {
        this.sellerTrustLevel = sellerTrustLevel;
        return this;
    }
    
    /**
     * The seller's eBay user name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerUsername")
    public String sellerUsername;

    public ItemSnapshot withSellerUsername(String sellerUsername) {
        this.sellerUsername = sellerUsername;
        return this;
    }
    
    /**
     * A pipe (&lt;code&gt;|&lt;/code&gt;) separated alphabetical list of the geographic countries and regions where the item cannot be shipped. These countries and regions refine (restrict) the &lt;b&gt; shipToIncludedRegions&lt;/b&gt; list.  &lt;br&gt;&lt;br&gt;The COUNTRY: list is separated from the REGION: list with a semicolon (&lt;code&gt;;&lt;/code&gt;).       &lt;br&gt;&lt;br&gt;&lt;b&gt; Format Example: &lt;/b&gt; &lt;br&gt; &lt;code&gt;COUNTRY:US|BM|GL|MX|PM;REGION:AFRICA|ASIA|CENTRAL_AMERICA_AND_CARIBBEAN|EUROPE|MIDDLE_EAST|OCEANIA|SOUTH_AMERICA|SOUTHEAST_ASIA;&lt;/code&gt;  &lt;br&gt;&lt;br&gt;&lt;b&gt; Country Values: &lt;/b&gt; The two-letter &lt;a href="https://www.iso.org/iso-3166-country-codes.html"&gt;ISO 3166&lt;/a&gt; standard code of the country.       &lt;br&gt;&lt;br&gt;&lt;b&gt; Region Values: &lt;/b&gt; AFRICA, AMERICAS, ANTARCTIC, ARCTIC, ASIA, AUSTRALIA, CENTRAL_AMERICA_AND_CARIBBEAN, EUROPE, EURO_UNION, GREATER_CHINA, MIDDLE_EAST, NORTH_AMERICA, OCEANIA, REST_OF_ASIA, SOUTHEAST_ASIA, SOUTH_AMERICA, WORLDWIDE &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipToExcludedRegions")
    public String shipToExcludedRegions;

    public ItemSnapshot withShipToExcludedRegions(String shipToExcludedRegions) {
        this.shipToExcludedRegions = shipToExcludedRegions;
        return this;
    }
    
    /**
     * A pipe (&lt;code&gt;|&lt;/code&gt;) separated alphabetical list of the geographic countries and regions where the seller will ship the item. &lt;br&gt;&lt;br&gt;If a region is specified, you will need to subtract any countries and regions returned in the &lt;b&gt; shipToExcludedRegions&lt;/b&gt; column to fully understand where the seller will ship. &lt;br&gt;&lt;br&gt;The COUNTRY: list is separated from the REGION: list with a semicolon (&lt;code&gt;;&lt;/code&gt;).       &lt;br&gt;&lt;br&gt;&lt;b&gt; Format Example: &lt;/b&gt; &lt;br&gt; &lt;code&gt;COUNTRY:US|BM|GL|MX|PM;REGION:AFRICA|ASIA|CENTRAL_AMERICA_AND_CARIBBEAN|EUROPE|MIDDLE_EAST|OCEANIA|SOUTH_AMERICA|SOUTHEAST_ASIA;&lt;/code&gt;  &lt;br&gt;&lt;br&gt;&lt;b&gt; Country Values: &lt;/b&gt; The two-letter &lt;a href="https://www.iso.org/iso-3166-country-codes.html"&gt;ISO 3166&lt;/a&gt; standard code of the country.       &lt;br&gt;&lt;br&gt;&lt;b&gt; Region Values: &lt;/b&gt; AFRICA, AMERICAS, ANTARCTIC, ARCTIC, ASIA, AUSTRALIA, CENTRAL_AMERICA_AND_CARIBBEAN, EUROPE, EURO_UNION, GREATER_CHINA, MIDDLE_EAST, NORTH_AMERICA, OCEANIA, REST_OF_ASIA, SOUTHEAST_ASIA, SOUTH_AMERICA, WORLDWIDE &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipToIncludedRegions")
    public String shipToIncludedRegions;

    public ItemSnapshot withShipToIncludedRegions(String shipToIncludedRegions) {
        this.shipToIncludedRegions = shipToIncludedRegions;
        return this;
    }
    
    /**
     * The name of the shipping provider, such as FedEx, or USPS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingCarrierCode")
    public String shippingCarrierCode;

    public ItemSnapshot withShippingCarrierCode(String shippingCarrierCode) {
        this.shippingCarrierCode = shippingCarrierCode;
        return this;
    }
    
    /**
     * The final shipping cost for all the items after all discounts are applied.&lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;b&gt; Note: &lt;/b&gt;The price includes the value-added tax (VAT) for applicable jurisdictions when requested from supported marketplaces. In this case, users must pass the &lt;a href="/api-docs/static/rest-request-components.html#HTTP"&gt;&lt;code&gt;X-EBAY-C-MARKETPLACE-ID&lt;/code&gt;&lt;/a&gt; request header specifying the supported marketplace (such as &lt;code&gt;EBAY_GB&lt;/code&gt;) to see the VAT-inclusive pricing. For more information on VAT, refer to &lt;a href="https://www.ebay.co.uk/help/listings/default/vat-obligations-eu?id=4650&amp;st=12&amp;pos=1&amp;query=Your%20VAT%20obligations%20in%20the%20EU&amp;intent=VAT"&gt;VAT Obligations in the EU&lt;/a&gt;.&lt;/span&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingCost")
    public String shippingCost;

    public ItemSnapshot withShippingCost(String shippingCost) {
        this.shippingCost = shippingCost;
        return this;
    }
    
    /**
     * Indicates the class of the shipping cost. &lt;br&gt;&lt;br&gt;&lt;b&gt; Valid Values: &lt;/b&gt; FIXED or CALCULATED &lt;br&gt;&lt;br&gt;Code so that your app gracefully handles any future changes to this list. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingCostType")
    public String shippingCostType;

    public ItemSnapshot withShippingCostType(String shippingCostType) {
        this.shippingCostType = shippingCostType;
        return this;
    }
    
    /**
     * The type of shipping service. For example, USPS First Class.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingServiceCode")
    public String shippingServiceCode;

    public ItemSnapshot withShippingServiceCode(String shippingServiceCode) {
        this.shippingServiceCode = shippingServiceCode;
        return this;
    }
    
    /**
     * The type of a shipping option, such as EXPEDITED, ONE_DAY, STANDARD, ECONOMY, PICKUP, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingType")
    public String shippingType;

    public ItemSnapshot withShippingType(String shippingType) {
        this.shippingType = shippingType;
        return this;
    }
    
    /**
     * The size of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public String size;

    public ItemSnapshot withSize(String size) {
        this.size = size;
        return this;
    }
    
    /**
     * The seller-defined description of the TAKE_BACK custom policy for the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("takeBackPolicyDescription")
    public String takeBackPolicyDescription;

    public ItemSnapshot withTakeBackPolicyDescription(String takeBackPolicyDescription) {
        this.takeBackPolicyDescription = takeBackPolicyDescription;
        return this;
    }
    
    /**
     * The seller-defined label of the TAKE_BACK custom policy for the item. A TAKE_BACK policy describes the seller's regulatory responsibility to take back a purchased item for disposal when the buyer purchases a new one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("takeBackPolicyLabel")
    public String takeBackPolicyLabel;

    public ItemSnapshot withTakeBackPolicyLabel(String takeBackPolicyLabel) {
        this.takeBackPolicyLabel = takeBackPolicyLabel;
        return this;
    }
    
    /**
     * The seller created title of the item. This text is an escaped string when special characters are present, using the following rules:&lt;/p&gt;   &lt;ul&gt;       &lt;li&gt;Double quotes (&amp;#34;) and backslashes (&amp;#92;) in the Title are escaped with a backslash (&amp;#92;) character&lt;/li&gt;      &lt;li&gt;If there are any tabs (&amp;#92;t), double quotes (&amp;#34;), or backslashes (&amp;#92;) in the Title, the entire Title will be wrapped in double quotes.&lt;/li&gt;   &lt;/ul&gt;   &lt;p&gt;&lt;b&gt;For example&lt;/b&gt;&lt;/p&gt;   &lt;p&gt;Before:&lt;/p&gt;   &lt;p&gt;&lt;code&gt;Misty Rainforest Modern Masters 2017 MTG Magic Fetch Land Free Ship W&lt;b&gt;&amp;#92;&lt;/b&gt;Tracking&lt;/code&gt;   &lt;/p&gt;   &lt;p&gt;&lt;code&gt;Marvel Legends HULK 8&lt;b&gt;&amp;#34;&lt;/b&gt; Figure Avengers Age of Ultron Studios 6&lt;b&gt;&amp;#34;&lt;/b&gt; Series&lt;/code&gt;   &lt;/p&gt;   &lt;p&gt;After:&lt;/p&gt;   &lt;p&gt;&lt;code&gt;&amp;#34;Misty Rainforest Modern Masters 2017 MTG Magic Fetch Land Free Ship W&lt;b&gt;&amp;#92;&amp;#92;&lt;/b&gt; Tracking&amp;#34;&lt;/code&gt;   &lt;/p&gt;   &lt;p&gt;&lt;code&gt;&amp;#34;Marvel Legends HULK 8&lt;b&gt;&amp;#92;&amp;#34;&lt;/b&gt; Figure Avengers Age of Ultron Studios 6&lt;b&gt;&amp;#92;&amp;#34;&lt;/b&gt; Series&lt;b&gt;&amp;#34;&lt;/b&gt; &lt;/code&gt;   &lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public ItemSnapshot withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * For an item that is priced by the unit, the total number of units that are on offer. For example, if the item is priced by the meter and 50 cm is on offer, the &lt;b&gt;totalUnits&lt;/b&gt; would be 0.5 m.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalUnits")
    public String totalUnits;

    public ItemSnapshot withTotalUnits(String totalUnits) {
        this.totalUnits = totalUnits;
        return this;
    }
    
    /**
     * The URL to the image that shows the information on the tyre label.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tyreLabelImageUrl")
    public String tyreLabelImageUrl;

    public ItemSnapshot withTyreLabelImageUrl(String tyreLabelImageUrl) {
        this.tyreLabelImageUrl = tyreLabelImageUrl;
        return this;
    }
    
    /**
     * This is the price per unit for the item. Some European countries require listings for certain types of products to include the price per unit so buyers can accurately compare prices.   &lt;br&gt;&lt;br&gt;For example: &lt;br&gt;&lt;br&gt;&lt;code&gt;"unitPricingMeasure": "100g",&lt;br&gt; "unitPrice": {&lt;br&gt;&amp;nbsp;&amp;nbsp;"value": "7.99",&lt;br&gt;&amp;nbsp;&amp;nbsp;"currency": "GBP"&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPrice")
    public String unitPrice;

    public ItemSnapshot withUnitPrice(String unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    /**
     * The designation, such as size, weight, volume, count, etc., that was used to specify the quantity of the item.  This helps buyers compare prices. &lt;br&gt;&lt;br&gt;For example, the following tells the buyer that the item is 7.99 per 100 grams. &lt;br&gt;&lt;br&gt;&lt;code&gt;"unitPricingMeasure": "100g",&lt;br&gt; "unitPrice": {&lt;br&gt;&amp;nbsp;&amp;nbsp;"value": "7.99",&lt;br&gt;&amp;nbsp;&amp;nbsp;"currency": "GBP"&lt;/code&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPricingMeasure")
    public String unitPricingMeasure;

    public ItemSnapshot withUnitPricingMeasure(String unitPricingMeasure) {
        this.unitPricingMeasure = unitPricingMeasure;
        return this;
    }
    
    public ItemSnapshot(){}
}
