/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class FacetscategoryRequest {
    /**
     * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Accept")
    public String accept;

    public FacetscategoryRequest withAccept(String accept) {
        this.accept = accept;
        return this;
    }
    
    /**
     * Describes the type of the content being sent.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Content-Type")
    public String contentType;

    public FacetscategoryRequest withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Starter page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_from")
    public String from;

    public FacetscategoryRequest withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Finisher page range. These parameters allow the API to be paginated. Take into account that the initial and final pages cannot have a separation superior to 50 pages. Thus, it will be displayed 50 items per page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_to")
    public String to;

    public FacetscategoryRequest withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * Mapping of the term. It can be `c` for a category, `b` for a brand, or `specificationFilter_{specificationId}` for a specification. You need to include a map for each term you are searching for in the same term's order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=map")
    public String map;

    public FacetscategoryRequest withMap(String map) {
        this.map = map;
        return this;
    }
    
    /**
     * Term used for the facet's search. You can search for as much term as you want. The term can be: `categoryId`, `brandId`, `specificationId`.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=term")
    public String term;

    public FacetscategoryRequest withTerm(String term) {
        this.term = term;
        return this;
    }
    
    public FacetscategoryRequest(@JsonProperty("Accept") String accept, @JsonProperty("Content-Type") String contentType, @JsonProperty("map") String map, @JsonProperty("term") String term) {
        this.accept = accept;
        this.contentType = contentType;
        this.map = map;
        this.term = term;
  }
}
