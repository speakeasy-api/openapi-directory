<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TransactionResourceRelationships
{
	#[\JMS\Serializer\Annotation\SerializedName('account')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsAccount')]
    public TransactionResourceRelationshipsAccount $account;
    
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsCategory')]
    public TransactionResourceRelationshipsCategory $category;
    
	#[\JMS\Serializer\Annotation\SerializedName('parentCategory')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsParentCategory')]
    public TransactionResourceRelationshipsParentCategory $parentCategory;
    
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsTags')]
    public TransactionResourceRelationshipsTags $tags;
    
    /**
     * If this transaction is a transfer between accounts, this relationship
     * 
     * will contain the account the transaction went to/came from. The
     * `amount` field can be used to determine the direction of the transfer.
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsTransferAccount $transferAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferAccount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsTransferAccount')]
    public TransactionResourceRelationshipsTransferAccount $transferAccount;
    
	public function __construct()
	{
		$this->account = new \OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsAccount();
		$this->category = new \OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsCategory();
		$this->parentCategory = new \OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsParentCategory();
		$this->tags = new \OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsTags();
		$this->transferAccount = new \OpenAPI\OpenAPI\Models\Shared\TransactionResourceRelationshipsTransferAccount();
	}
}
