/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of the value being provided.
 */
export enum AppRestrictionsSchemaRestrictionRestrictionValueTypeEnum {
  Bool = "bool",
  String = "string",
  Integer = "integer",
  Choice = "choice",
  Multiselect = "multiselect",
  Hidden = "hidden",
  Bundle = "bundle",
  BundleArray = "bundleArray",
}

/**
 * A typed value for the restriction.
 */
export class AppRestrictionsSchemaRestrictionRestrictionValue extends SpeakeasyBase {
  /**
   * The type of the value being provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AppRestrictionsSchemaRestrictionRestrictionValueTypeEnum;

  /**
   * The boolean value - this will only be present if type is bool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valueBool" })
  valueBool?: boolean;

  /**
   * The integer value - this will only be present if type is integer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valueInteger" })
  valueInteger?: number;

  /**
   * The list of string values - this will only be present if type is multiselect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valueMultiselect" })
  valueMultiselect?: string[];

  /**
   * The string value - this will be present for types string, choice and hidden.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valueString" })
  valueString?: string;
}
