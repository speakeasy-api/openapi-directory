// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SendchatbotSecurity struct {
	ClientCredentials string `security:"scheme,type=oauth2,name=Authorization"`
}

type SendchatbotApplicationJSON struct {
	// Account ID of the authorized account.
	AccountID string `json:"account_id"`
	// JSON template describing how the message should be displayed for the user. For more information please see our ["Send Message" templates](https://marketplace.zoom.us/docs/guides/chatbots/sending-messages#example-request).
	Content map[string]interface{} `json:"content"`
	// **Optional**<br>
	// Applies the markdown parser to your chatbot message if the value of this field is set to `true`.<br> To learn more, refer to the Chatbot message [markdown reference](https://marketplace.zoom.us/docs/guides/chatbots/customizing-messages/message-with-markdown).
	IsMarkdownSupport *bool `json:"is_markdown_support,omitempty"`
	// Robot JID created when enabling chatbot features on your marketplace app.
	RobotJid string `json:"robot_jid"`
	// Unique JID of reciever. Can be a group or user.
	ToJid string `json:"to_jid"`
	// **Optional**<br>
	// The UserJID of the user on whose behalf the message is being sent. Use this field to prevent members of a channel from getting notifications that were set up by a user who has left the channel.
	UserJid *string `json:"user_jid,omitempty"`
	// **Optional**<br>Allow a Chatbot to send a message to a group channel, but have only one designated person in that group channel see the message by providing the person's UserID in this field.
	VisibleToUser *string `json:"visible_to_user,omitempty"`
}

type SendchatbotResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
