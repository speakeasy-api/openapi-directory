"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetTrackingSourcesSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetTrackingSourcesRequest:
    
    webinar_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'webinarId', 'style': 'simple', 'explode': False }})
    r"""The webinar ID in \\"**long**\\" format(represented as int64 data type in JSON)."""  
    

@dataclasses.dataclass
class GetTrackingSources200ApplicationXMLTrackingSources:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the tracking source."""  
    registration_count: Optional[int] = dataclasses.field(default=None)
    r"""Number of registrations made from this source."""  
    source_name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the source (platform) where the registration URL was shared."""  
    tracking_url: Optional[str] = dataclasses.field(default=None)
    r"""Tracking URL. The URL that was shared for the registration."""  
    visitor_count: Optional[int] = dataclasses.field(default=None)
    r"""Number of visitors who visited the registration page from this source."""  
    

@dataclasses.dataclass
class GetTrackingSources200ApplicationXML:
    r"""**HTTP Status Code:** `200`"""
    
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""The total number of registration records for this Webinar."""  
    tracking_sources: Optional[list[GetTrackingSources200ApplicationXMLTrackingSources]] = dataclasses.field(default=None)
    r"""Tracking Sources object."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTrackingSources200ApplicationJSONTrackingSources:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the tracking source."""  
    registration_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registration_count'), 'exclude': lambda f: f is None }})
    r"""Number of registrations made from this source."""  
    source_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_name'), 'exclude': lambda f: f is None }})
    r"""Name of the source (platform) where the registration URL was shared."""  
    tracking_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tracking_url'), 'exclude': lambda f: f is None }})
    r"""Tracking URL. The URL that was shared for the registration."""  
    visitor_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visitor_count'), 'exclude': lambda f: f is None }})
    r"""Number of visitors who visited the registration page from this source."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTrackingSources200ApplicationJSON:
    r"""**HTTP Status Code:** `200`"""
    
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""The total number of registration records for this Webinar."""  
    tracking_sources: Optional[list[GetTrackingSources200ApplicationJSONTrackingSources]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tracking_sources'), 'exclude': lambda f: f is None }})
    r"""Tracking Sources object."""  
    

@dataclasses.dataclass
class GetTrackingSourcesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_tracking_sources_200_application_json_object: Optional[GetTrackingSources200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    