// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NamedStyleNamedStyleTypeEnum - The type of this named style.
type NamedStyleNamedStyleTypeEnum string

const (
	NamedStyleNamedStyleTypeEnumNamedStyleTypeUnspecified NamedStyleNamedStyleTypeEnum = "NAMED_STYLE_TYPE_UNSPECIFIED"
	NamedStyleNamedStyleTypeEnumNormalText                NamedStyleNamedStyleTypeEnum = "NORMAL_TEXT"
	NamedStyleNamedStyleTypeEnumTitle                     NamedStyleNamedStyleTypeEnum = "TITLE"
	NamedStyleNamedStyleTypeEnumSubtitle                  NamedStyleNamedStyleTypeEnum = "SUBTITLE"
	NamedStyleNamedStyleTypeEnumHeading1                  NamedStyleNamedStyleTypeEnum = "HEADING_1"
	NamedStyleNamedStyleTypeEnumHeading2                  NamedStyleNamedStyleTypeEnum = "HEADING_2"
	NamedStyleNamedStyleTypeEnumHeading3                  NamedStyleNamedStyleTypeEnum = "HEADING_3"
	NamedStyleNamedStyleTypeEnumHeading4                  NamedStyleNamedStyleTypeEnum = "HEADING_4"
	NamedStyleNamedStyleTypeEnumHeading5                  NamedStyleNamedStyleTypeEnum = "HEADING_5"
	NamedStyleNamedStyleTypeEnumHeading6                  NamedStyleNamedStyleTypeEnum = "HEADING_6"
)

func (e *NamedStyleNamedStyleTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NAMED_STYLE_TYPE_UNSPECIFIED":
		fallthrough
	case "NORMAL_TEXT":
		fallthrough
	case "TITLE":
		fallthrough
	case "SUBTITLE":
		fallthrough
	case "HEADING_1":
		fallthrough
	case "HEADING_2":
		fallthrough
	case "HEADING_3":
		fallthrough
	case "HEADING_4":
		fallthrough
	case "HEADING_5":
		fallthrough
	case "HEADING_6":
		*e = NamedStyleNamedStyleTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NamedStyleNamedStyleTypeEnum: %s", s)
	}
}

// NamedStyle - A named style. Paragraphs in the document can inherit their TextStyle and ParagraphStyle from this named style when they have the same named style type.
type NamedStyle struct {
	// The type of this named style.
	NamedStyleType *NamedStyleNamedStyleTypeEnum `json:"namedStyleType,omitempty"`
	// Styles that apply to a whole paragraph. Inherited paragraph styles are represented as unset fields in this message. A paragraph style's parent depends on where the paragraph style is defined: * The ParagraphStyle on a Paragraph inherits from the paragraph's corresponding named style type. * The ParagraphStyle on a named style inherits from the normal text named style. * The ParagraphStyle of the normal text named style inherits from the default paragraph style in the Docs editor. * The ParagraphStyle on a Paragraph element that's contained in a table may inherit its paragraph style from the table style. If the paragraph style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
	ParagraphStyle *ParagraphStyle `json:"paragraphStyle,omitempty"`
	// Represents the styling that can be applied to text. Inherited text styles are represented as unset fields in this message. A text style's parent depends on where the text style is defined: * The TextStyle of text in a Paragraph inherits from the paragraph's corresponding named style type. * The TextStyle on a named style inherits from the normal text named style. * The TextStyle of the normal text named style inherits from the default text style in the Docs editor. * The TextStyle on a Paragraph element that's contained in a table may inherit its text style from the table style. If the text style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
	TextStyle *TextStyle `json:"textStyle,omitempty"`
}
