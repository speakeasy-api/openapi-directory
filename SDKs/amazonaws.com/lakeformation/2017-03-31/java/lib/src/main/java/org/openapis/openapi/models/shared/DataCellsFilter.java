/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DataCellsFilter - A structure that describes certain columns on certain rows.
 */
public class DataCellsFilter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ColumnNames")
    public String[] columnNames;
    public DataCellsFilter withColumnNames(String[] columnNames) {
        this.columnNames = columnNames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ColumnWildcard")
    public ColumnWildcard columnWildcard;
    public DataCellsFilter withColumnWildcard(ColumnWildcard columnWildcard) {
        this.columnWildcard = columnWildcard;
        return this;
    }
    
    @JsonProperty("DatabaseName")
    public String databaseName;
    public DataCellsFilter withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;
    public DataCellsFilter withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RowFilter")
    public RowFilter rowFilter;
    public DataCellsFilter withRowFilter(RowFilter rowFilter) {
        this.rowFilter = rowFilter;
        return this;
    }
    
    @JsonProperty("TableCatalogId")
    public String tableCatalogId;
    public DataCellsFilter withTableCatalogId(String tableCatalogId) {
        this.tableCatalogId = tableCatalogId;
        return this;
    }
    
    @JsonProperty("TableName")
    public String tableName;
    public DataCellsFilter withTableName(String tableName) {
        this.tableName = tableName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VersionId")
    public String versionId;
    public DataCellsFilter withVersionId(String versionId) {
        this.versionId = versionId;
        return this;
    }
    
}
