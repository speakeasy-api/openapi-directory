/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetMediaRequestBody {
    /**
     * &lt;p&gt;Identifies the chunk on the Kinesis video stream where you want the &lt;code&gt;GetMedia&lt;/code&gt; API to start returning media data. You have the following options to identify the starting chunk: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Choose the latest (or oldest) chunk.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Identify a specific chunk. You can identify a specific chunk either by providing a fragment number or timestamp (server or producer). &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Each chunk's metadata includes a continuation token as a Matroska (MKV) tag (&lt;code&gt;AWS_KINESISVIDEO_CONTINUATION_TOKEN&lt;/code&gt;). If your previous &lt;code&gt;GetMedia&lt;/code&gt; request terminated, you can use this tag value in your next &lt;code&gt;GetMedia&lt;/code&gt; request. The API then starts returning chunks starting where the last API ended.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonProperty("StartSelector")
    public GetMediaRequestBodyStartSelector startSelector;

    public GetMediaRequestBody withStartSelector(GetMediaRequestBodyStartSelector startSelector) {
        this.startSelector = startSelector;
        return this;
    }
    
    /**
     * The ARN of the stream from where you want to get the media content. If you don't specify the &lt;code&gt;streamARN&lt;/code&gt;, you must specify the &lt;code&gt;streamName&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreamARN")
    public String streamARN;

    public GetMediaRequestBody withStreamARN(String streamARN) {
        this.streamARN = streamARN;
        return this;
    }
    
    /**
     * The Kinesis video stream name from where you want to get the media content. If you don't specify the &lt;code&gt;streamName&lt;/code&gt;, you must specify the &lt;code&gt;streamARN&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreamName")
    public String streamName;

    public GetMediaRequestBody withStreamName(String streamName) {
        this.streamName = streamName;
        return this;
    }
    
    public GetMediaRequestBody(@JsonProperty("StartSelector") GetMediaRequestBodyStartSelector startSelector) {
        this.startSelector = startSelector;
  }
}
