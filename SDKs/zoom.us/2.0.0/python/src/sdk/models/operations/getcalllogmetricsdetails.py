"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetCallLogMetricsDetailsRequest:
    
    call_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'call_id', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the phone call. The value of this field can be retrieved from [List Call Logs]() API."""  
    

@dataclasses.dataclass
class GetCallLogMetricsDetails200ApplicationXMLCallee:
    r"""Callee object contains information of the calee."""
    
    codec: Optional[str] = dataclasses.field(default=None)
    r"""Audio codec."""  
    device_type: Optional[str] = dataclasses.field(default=None)
    r"""Device type."""  
    extension_number: Optional[str] = dataclasses.field(default=None)
    r"""Full extension number of the callee."""  
    headset: Optional[str] = dataclasses.field(default=None)
    r"""Headset used for the call by the callee."""  
    isp: Optional[str] = dataclasses.field(default=None)
    r"""ISP."""  
    microphone: Optional[str] = dataclasses.field(default=None)
    r"""Microphone used for the call by the callee."""  
    phone_number: Optional[str] = dataclasses.field(default=None)
    r"""Phone number of the callee in E164 format."""  
    site_id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)."""  
    

@dataclasses.dataclass
class GetCallLogMetricsDetails200ApplicationXMLCaller:
    r"""Caller object contains information of the caller."""
    
    codec: Optional[str] = dataclasses.field(default=None)
    r"""Audio codec."""  
    device_type: Optional[str] = dataclasses.field(default=None)
    r"""Device type."""  
    extension_number: Optional[str] = dataclasses.field(default=None)
    r"""Full extension number of the caller."""  
    headset: Optional[str] = dataclasses.field(default=None)
    r"""Headset used for the call by the caller."""  
    isp: Optional[str] = dataclasses.field(default=None)
    r"""ISP."""  
    microphone: Optional[str] = dataclasses.field(default=None)
    r"""Microphone used for the call by the caller."""  
    phone_number: Optional[str] = dataclasses.field(default=None)
    r"""Phone number of the caller in E164 format."""  
    site_id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)."""  
    

@dataclasses.dataclass
class GetCallLogMetricsDetails200ApplicationXML:
    
    call_id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the phone call."""  
    callee: Optional[GetCallLogMetricsDetails200ApplicationXMLCallee] = dataclasses.field(default=None)
    r"""Callee object contains information of the calee."""  
    caller: Optional[GetCallLogMetricsDetails200ApplicationXMLCaller] = dataclasses.field(default=None)
    r"""Caller object contains information of the caller."""  
    date_time: Optional[str] = dataclasses.field(default=None)
    r"""Date and time at which the call started."""  
    direction: Optional[str] = dataclasses.field(default=None)
    r"""Direction of the call. The value of this field can be either `internal` or `outbound`."""  
    duration: Optional[int] = dataclasses.field(default=None)
    r"""Duration of the call in seconds."""  
    mos: Optional[str] = dataclasses.field(default=None)
    r"""Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallLogMetricsDetails200ApplicationJSONCallee:
    r"""Callee object contains information of the calee."""
    
    codec: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codec'), 'exclude': lambda f: f is None }})
    r"""Audio codec."""  
    device_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device_type'), 'exclude': lambda f: f is None }})
    r"""Device type."""  
    extension_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Full extension number of the callee."""  
    headset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headset'), 'exclude': lambda f: f is None }})
    r"""Headset used for the call by the callee."""  
    isp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isp'), 'exclude': lambda f: f is None }})
    r"""ISP."""  
    microphone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('microphone'), 'exclude': lambda f: f is None }})
    r"""Microphone used for the call by the callee."""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_number'), 'exclude': lambda f: f is None }})
    r"""Phone number of the callee in E164 format."""  
    site_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallLogMetricsDetails200ApplicationJSONCaller:
    r"""Caller object contains information of the caller."""
    
    codec: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codec'), 'exclude': lambda f: f is None }})
    r"""Audio codec."""  
    device_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device_type'), 'exclude': lambda f: f is None }})
    r"""Device type."""  
    extension_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Full extension number of the caller."""  
    headset: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('headset'), 'exclude': lambda f: f is None }})
    r"""Headset used for the call by the caller."""  
    isp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isp'), 'exclude': lambda f: f is None }})
    r"""ISP."""  
    microphone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('microphone'), 'exclude': lambda f: f is None }})
    r"""Microphone used for the call by the caller."""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_number'), 'exclude': lambda f: f is None }})
    r"""Phone number of the caller in E164 format."""  
    site_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallLogMetricsDetails200ApplicationJSON:
    
    call_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('call_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the phone call."""  
    callee: Optional[GetCallLogMetricsDetails200ApplicationJSONCallee] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callee'), 'exclude': lambda f: f is None }})
    r"""Callee object contains information of the calee."""  
    caller: Optional[GetCallLogMetricsDetails200ApplicationJSONCaller] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caller'), 'exclude': lambda f: f is None }})
    r"""Caller object contains information of the caller."""  
    date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_time'), 'exclude': lambda f: f is None }})
    r"""Date and time at which the call started."""  
    direction: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('direction'), 'exclude': lambda f: f is None }})
    r"""Direction of the call. The value of this field can be either `internal` or `outbound`."""  
    duration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration'), 'exclude': lambda f: f is None }})
    r"""Duration of the call in seconds."""  
    mos: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mos'), 'exclude': lambda f: f is None }})
    r"""Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality."""  
    

@dataclasses.dataclass
class GetCallLogMetricsDetailsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_call_log_metrics_details_200_application_json_object: Optional[GetCallLogMetricsDetails200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    