/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class WebhooksShortExecuteSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey: string;
}

export class WebhooksShortExecuteRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: any;

  /**
   * The name of downstream event when connector does not supply in body or header
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=e" })
  e?: string;

  /**
   * JWT Webhook token that represents the unifiedApi and applicationId associated to the event source.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Unique identifier to used to look up consumer/connection when receiving connector events from downstream.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=l_id" })
  lId?: string;

  /**
   * Service provider ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=serviceId",
  })
  serviceId: string;
}

export class WebhooksShortExecuteResponse extends SpeakeasyBase {
  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  badRequestResponse?: shared.BadRequestResponse;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Execute Webhook
   */
  @SpeakeasyMetadata()
  executeWebhookResponse?: shared.ExecuteWebhookResponse;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  notFoundResponse?: shared.NotFoundResponse;

  /**
   * Payment Required
   */
  @SpeakeasyMetadata()
  paymentRequiredResponse?: shared.PaymentRequiredResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  unauthorizedResponse?: shared.UnauthorizedResponse;

  /**
   * Unexpected error
   */
  @SpeakeasyMetadata()
  unexpectedErrorResponse?: shared.UnexpectedErrorResponse;

  /**
   * Unprocessable
   */
  @SpeakeasyMetadata()
  unprocessableResponse?: shared.UnprocessableResponse;
}
