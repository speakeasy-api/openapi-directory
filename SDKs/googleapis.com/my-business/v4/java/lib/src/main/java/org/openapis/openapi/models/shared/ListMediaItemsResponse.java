/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ListMediaItemsResponse - Response message for Media.ListMediaItems.
 */
public class ListMediaItemsResponse {
    /**
     * The returned list of media items.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediaItems")
    public MediaItem[] mediaItems;
    public ListMediaItemsResponse withMediaItems(MediaItem[] mediaItems) {
        this.mediaItems = mediaItems;
        return this;
    }
    
    /**
     * If there are more media items than the requested page size, then this field is populated with a token to fetch the next page of media items on a subsequent call to ListMediaItems.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextPageToken")
    public String nextPageToken;
    public ListMediaItemsResponse withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The total number of media items for this location, irrespective of pagination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalMediaItemCount")
    public Integer totalMediaItemCount;
    public ListMediaItemsResponse withTotalMediaItemCount(Integer totalMediaItemCount) {
        this.totalMediaItemCount = totalMediaItemCount;
        return this;
    }
    
}
