/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetPaymentsForPayoutV3QueryParams {
    /**
     * Page number. Default is 1.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Integer page;
    public GetPaymentsForPayoutV3QueryParams withPage(Integer page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of results to return in a page
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Integer pageSize;
    public GetPaymentsForPayoutV3QueryParams withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Payment Memo of the Payment
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=paymentMemo")
    public String paymentMemo;
    public GetPaymentsForPayoutV3QueryParams withPaymentMemo(String paymentMemo) {
        this.paymentMemo = paymentMemo;
        return this;
    }
    
    /**
     * Payor's Id of the Payment
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=payorPaymentId")
    public String payorPaymentId;
    public GetPaymentsForPayoutV3QueryParams withPayorPaymentId(String payorPaymentId) {
        this.payorPaymentId = payorPaymentId;
        return this;
    }
    
    /**
     * The remote id of the payees.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=remoteId")
    public String remoteId;
    public GetPaymentsForPayoutV3QueryParams withRemoteId(String remoteId) {
        this.remoteId = remoteId;
        return this;
    }
    
    /**
     * Physical Account Name
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sourceAccountName")
    public String sourceAccountName;
    public GetPaymentsForPayoutV3QueryParams withSourceAccountName(String sourceAccountName) {
        this.sourceAccountName = sourceAccountName;
        return this;
    }
    
    /**
     * Payment Status
     * * ACCEPTED: any payment which was accepted at submission time (status may have changed since)
     * * REJECTED: any payment rejected by initial submission processing
     * * WITHDRAWN: any payment which has been withdrawn
     * * WITHDRAWABLE: any payment eligible for withdrawal
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public GetPaymentsForPayoutV3StatusEnum status;
    public GetPaymentsForPayoutV3QueryParams withStatus(GetPaymentsForPayoutV3StatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Transmission Type
     * * ACH
     * * SAME_DAY_ACH
     * * WIRE
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=transmissionType")
    public GetPaymentsForPayoutV3TransmissionTypeEnum transmissionType;
    public GetPaymentsForPayoutV3QueryParams withTransmissionType(GetPaymentsForPayoutV3TransmissionTypeEnum transmissionType) {
        this.transmissionType = transmissionType;
        return this;
    }
    
}
