/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Indicates how you're authenticating your request
 */
export enum PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2GrantTypeEnum {
  Password = "password",
  RefreshToken = "refresh_token",
}

/**
 * Currently limited to Order Management System
 */
export enum PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2ScopeEnum {
  Oms = "oms",
}

export class PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV3 extends SpeakeasyBase {
  /**
   * Id and secret provided by FDC
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "client_secret" })
  clientSecret: string;

  /**
   * Indicates how you're authenticating your request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grant_type" })
  grantType: PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2GrantTypeEnum;

  /**
   * You may request future tokens with the `refresh_token` from your previous `/oauth/access_token` request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refresh_token" })
  refreshToken: string;

  /**
   * Currently limited to Order Management System
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope: PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2ScopeEnum;
}

export class PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2 extends SpeakeasyBase {
  /**
   * Id and secret provided by FDC
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "client_secret" })
  clientSecret: string;

  /**
   * Indicates how you're authenticating your request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grant_type" })
  grantType: PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2GrantTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password: string;

  /**
   * Currently limited to Order Management System
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope: PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2ScopeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;
}

/**
 * Authorized
 */
export class PostOauthAccessTokenAccessTokenResponseV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "access_token" })
  accessToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expires_in" })
  expiresIn?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "refresh_token" })
  refreshToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "token_type" })
  tokenType?: string;
}

export class PostOauthAccessTokenResponse extends SpeakeasyBase {
  /**
   * Authorized
   */
  @SpeakeasyMetadata()
  accessTokenResponseV2?: PostOauthAccessTokenAccessTokenResponseV2;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  oneordersGetResponses404ContentApplication1jsonSchema?: shared.OneordersGetResponses404ContentApplication1jsonSchema;
}
