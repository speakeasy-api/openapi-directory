"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class URLNotificationTypeEnum(str, Enum):
    r"""The URL life cycle event that Google is being notified about."""
    URL_NOTIFICATION_TYPE_UNSPECIFIED = 'URL_NOTIFICATION_TYPE_UNSPECIFIED'
    URL_UPDATED = 'URL_UPDATED'
    URL_DELETED = 'URL_DELETED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class URLNotification:
    r"""`UrlNotification` is the resource used in all Indexing API calls. It describes one event in the life cycle of a Web Document."""
    
    notify_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notifyTime'), 'exclude': lambda f: f is None }})
    r"""Creation timestamp for this notification. Users should _not_ specify it, the field is ignored at the request time."""  
    type: Optional[URLNotificationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The URL life cycle event that Google is being notified about."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The object of this notification. The URL must be owned by the publisher of this notification and, in case of `URL_UPDATED` notifications, it _must_ be crawlable by Google."""  
    