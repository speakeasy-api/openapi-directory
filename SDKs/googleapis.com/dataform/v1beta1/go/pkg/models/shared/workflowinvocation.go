// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkflowInvocationStateEnum - Output only. This workflow invocation's current state.
type WorkflowInvocationStateEnum string

const (
	WorkflowInvocationStateEnumStateUnspecified WorkflowInvocationStateEnum = "STATE_UNSPECIFIED"
	WorkflowInvocationStateEnumRunning          WorkflowInvocationStateEnum = "RUNNING"
	WorkflowInvocationStateEnumSucceeded        WorkflowInvocationStateEnum = "SUCCEEDED"
	WorkflowInvocationStateEnumCancelled        WorkflowInvocationStateEnum = "CANCELLED"
	WorkflowInvocationStateEnumFailed           WorkflowInvocationStateEnum = "FAILED"
	WorkflowInvocationStateEnumCanceling        WorkflowInvocationStateEnum = "CANCELING"
)

func (e WorkflowInvocationStateEnum) ToPointer() *WorkflowInvocationStateEnum {
	return &e
}

func (e *WorkflowInvocationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELING":
		*e = WorkflowInvocationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowInvocationStateEnum: %v", v)
	}
}

// WorkflowInvocation - Represents a single invocation of a compilation result.
type WorkflowInvocation struct {
	// Immutable. The name of the compilation result to compile. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
	CompilationResult *string `json:"compilationResult,omitempty"`
	// Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
	InvocationConfig *InvocationConfig `json:"invocationConfig,omitempty"`
	// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
	InvocationTiming *Interval `json:"invocationTiming,omitempty"`
	// Output only. The workflow invocation's name.
	Name *string `json:"name,omitempty"`
	// Output only. This workflow invocation's current state.
	State *WorkflowInvocationStateEnum `json:"state,omitempty"`
	// Immutable. The name of the workflow config to invoke. Must be in the format `projects/*/locations/*/repositories/*/workflowConfigs/*`.
	WorkflowConfig *string `json:"workflowConfig,omitempty"`
}

// WorkflowInvocationInput - Represents a single invocation of a compilation result.
type WorkflowInvocationInput struct {
	// Immutable. The name of the compilation result to compile. Must be in the format `projects/*/locations/*/repositories/*/compilationResults/*`.
	CompilationResult *string `json:"compilationResult,omitempty"`
	// Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
	InvocationConfig *InvocationConfig `json:"invocationConfig,omitempty"`
	// Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
	InvocationTiming *Interval `json:"invocationTiming,omitempty"`
	// Immutable. The name of the workflow config to invoke. Must be in the format `projects/*/locations/*/repositories/*/workflowConfigs/*`.
	WorkflowConfig *string `json:"workflowConfig,omitempty"`
}
