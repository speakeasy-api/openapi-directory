/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class UpdateTrailResponse {
    /**
     * CloudTrailARNInvalidException
     */
    
    public Object cloudTrailARNInvalidException;

    public UpdateTrailResponse withCloudTrailARNInvalidException(Object cloudTrailARNInvalidException) {
        this.cloudTrailARNInvalidException = cloudTrailARNInvalidException;
        return this;
    }
    
    /**
     * CloudTrailAccessNotEnabledException
     */
    
    public Object cloudTrailAccessNotEnabledException;

    public UpdateTrailResponse withCloudTrailAccessNotEnabledException(Object cloudTrailAccessNotEnabledException) {
        this.cloudTrailAccessNotEnabledException = cloudTrailAccessNotEnabledException;
        return this;
    }
    
    /**
     * CloudTrailInvalidClientTokenIdException
     */
    
    public Object cloudTrailInvalidClientTokenIdException;

    public UpdateTrailResponse withCloudTrailInvalidClientTokenIdException(Object cloudTrailInvalidClientTokenIdException) {
        this.cloudTrailInvalidClientTokenIdException = cloudTrailInvalidClientTokenIdException;
        return this;
    }
    
    /**
     * CloudWatchLogsDeliveryUnavailableException
     */
    
    public Object cloudWatchLogsDeliveryUnavailableException;

    public UpdateTrailResponse withCloudWatchLogsDeliveryUnavailableException(Object cloudWatchLogsDeliveryUnavailableException) {
        this.cloudWatchLogsDeliveryUnavailableException = cloudWatchLogsDeliveryUnavailableException;
        return this;
    }
    
    /**
     * ConflictException
     */
    
    public Object conflictException;

    public UpdateTrailResponse withConflictException(Object conflictException) {
        this.conflictException = conflictException;
        return this;
    }
    
    
    public String contentType;

    public UpdateTrailResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InsufficientDependencyServiceAccessPermissionException
     */
    
    public Object insufficientDependencyServiceAccessPermissionException;

    public UpdateTrailResponse withInsufficientDependencyServiceAccessPermissionException(Object insufficientDependencyServiceAccessPermissionException) {
        this.insufficientDependencyServiceAccessPermissionException = insufficientDependencyServiceAccessPermissionException;
        return this;
    }
    
    /**
     * InsufficientEncryptionPolicyException
     */
    
    public Object insufficientEncryptionPolicyException;

    public UpdateTrailResponse withInsufficientEncryptionPolicyException(Object insufficientEncryptionPolicyException) {
        this.insufficientEncryptionPolicyException = insufficientEncryptionPolicyException;
        return this;
    }
    
    /**
     * InsufficientS3BucketPolicyException
     */
    
    public Object insufficientS3BucketPolicyException;

    public UpdateTrailResponse withInsufficientS3BucketPolicyException(Object insufficientS3BucketPolicyException) {
        this.insufficientS3BucketPolicyException = insufficientS3BucketPolicyException;
        return this;
    }
    
    /**
     * InsufficientSnsTopicPolicyException
     */
    
    public Object insufficientSnsTopicPolicyException;

    public UpdateTrailResponse withInsufficientSnsTopicPolicyException(Object insufficientSnsTopicPolicyException) {
        this.insufficientSnsTopicPolicyException = insufficientSnsTopicPolicyException;
        return this;
    }
    
    /**
     * InvalidCloudWatchLogsLogGroupArnException
     */
    
    public Object invalidCloudWatchLogsLogGroupArnException;

    public UpdateTrailResponse withInvalidCloudWatchLogsLogGroupArnException(Object invalidCloudWatchLogsLogGroupArnException) {
        this.invalidCloudWatchLogsLogGroupArnException = invalidCloudWatchLogsLogGroupArnException;
        return this;
    }
    
    /**
     * InvalidCloudWatchLogsRoleArnException
     */
    
    public Object invalidCloudWatchLogsRoleArnException;

    public UpdateTrailResponse withInvalidCloudWatchLogsRoleArnException(Object invalidCloudWatchLogsRoleArnException) {
        this.invalidCloudWatchLogsRoleArnException = invalidCloudWatchLogsRoleArnException;
        return this;
    }
    
    /**
     * InvalidEventSelectorsException
     */
    
    public Object invalidEventSelectorsException;

    public UpdateTrailResponse withInvalidEventSelectorsException(Object invalidEventSelectorsException) {
        this.invalidEventSelectorsException = invalidEventSelectorsException;
        return this;
    }
    
    /**
     * InvalidHomeRegionException
     */
    
    public Object invalidHomeRegionException;

    public UpdateTrailResponse withInvalidHomeRegionException(Object invalidHomeRegionException) {
        this.invalidHomeRegionException = invalidHomeRegionException;
        return this;
    }
    
    /**
     * InvalidKmsKeyIdException
     */
    
    public Object invalidKmsKeyIdException;

    public UpdateTrailResponse withInvalidKmsKeyIdException(Object invalidKmsKeyIdException) {
        this.invalidKmsKeyIdException = invalidKmsKeyIdException;
        return this;
    }
    
    /**
     * InvalidParameterCombinationException
     */
    
    public Object invalidParameterCombinationException;

    public UpdateTrailResponse withInvalidParameterCombinationException(Object invalidParameterCombinationException) {
        this.invalidParameterCombinationException = invalidParameterCombinationException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public UpdateTrailResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidS3BucketNameException
     */
    
    public Object invalidS3BucketNameException;

    public UpdateTrailResponse withInvalidS3BucketNameException(Object invalidS3BucketNameException) {
        this.invalidS3BucketNameException = invalidS3BucketNameException;
        return this;
    }
    
    /**
     * InvalidS3PrefixException
     */
    
    public Object invalidS3PrefixException;

    public UpdateTrailResponse withInvalidS3PrefixException(Object invalidS3PrefixException) {
        this.invalidS3PrefixException = invalidS3PrefixException;
        return this;
    }
    
    /**
     * InvalidSnsTopicNameException
     */
    
    public Object invalidSnsTopicNameException;

    public UpdateTrailResponse withInvalidSnsTopicNameException(Object invalidSnsTopicNameException) {
        this.invalidSnsTopicNameException = invalidSnsTopicNameException;
        return this;
    }
    
    /**
     * InvalidTrailNameException
     */
    
    public Object invalidTrailNameException;

    public UpdateTrailResponse withInvalidTrailNameException(Object invalidTrailNameException) {
        this.invalidTrailNameException = invalidTrailNameException;
        return this;
    }
    
    /**
     * KmsException
     */
    
    public Object kmsException;

    public UpdateTrailResponse withKmsException(Object kmsException) {
        this.kmsException = kmsException;
        return this;
    }
    
    /**
     * KmsKeyDisabledException
     */
    
    public Object kmsKeyDisabledException;

    public UpdateTrailResponse withKmsKeyDisabledException(Object kmsKeyDisabledException) {
        this.kmsKeyDisabledException = kmsKeyDisabledException;
        return this;
    }
    
    /**
     * KmsKeyNotFoundException
     */
    
    public Object kmsKeyNotFoundException;

    public UpdateTrailResponse withKmsKeyNotFoundException(Object kmsKeyNotFoundException) {
        this.kmsKeyNotFoundException = kmsKeyNotFoundException;
        return this;
    }
    
    /**
     * NoManagementAccountSLRExistsException
     */
    
    public Object noManagementAccountSLRExistsException;

    public UpdateTrailResponse withNoManagementAccountSLRExistsException(Object noManagementAccountSLRExistsException) {
        this.noManagementAccountSLRExistsException = noManagementAccountSLRExistsException;
        return this;
    }
    
    /**
     * NotOrganizationMasterAccountException
     */
    
    public Object notOrganizationMasterAccountException;

    public UpdateTrailResponse withNotOrganizationMasterAccountException(Object notOrganizationMasterAccountException) {
        this.notOrganizationMasterAccountException = notOrganizationMasterAccountException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;

    public UpdateTrailResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * OrganizationNotInAllFeaturesModeException
     */
    
    public Object organizationNotInAllFeaturesModeException;

    public UpdateTrailResponse withOrganizationNotInAllFeaturesModeException(Object organizationNotInAllFeaturesModeException) {
        this.organizationNotInAllFeaturesModeException = organizationNotInAllFeaturesModeException;
        return this;
    }
    
    /**
     * OrganizationsNotInUseException
     */
    
    public Object organizationsNotInUseException;

    public UpdateTrailResponse withOrganizationsNotInUseException(Object organizationsNotInUseException) {
        this.organizationsNotInUseException = organizationsNotInUseException;
        return this;
    }
    
    
    public Integer statusCode;

    public UpdateTrailResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public UpdateTrailResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * S3BucketDoesNotExistException
     */
    
    public Object s3BucketDoesNotExistException;

    public UpdateTrailResponse withS3BucketDoesNotExistException(Object s3BucketDoesNotExistException) {
        this.s3BucketDoesNotExistException = s3BucketDoesNotExistException;
        return this;
    }
    
    /**
     * TrailNotFoundException
     */
    
    public Object trailNotFoundException;

    public UpdateTrailResponse withTrailNotFoundException(Object trailNotFoundException) {
        this.trailNotFoundException = trailNotFoundException;
        return this;
    }
    
    /**
     * TrailNotProvidedException
     */
    
    public Object trailNotProvidedException;

    public UpdateTrailResponse withTrailNotProvidedException(Object trailNotProvidedException) {
        this.trailNotProvidedException = trailNotProvidedException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public UpdateTrailResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.UpdateTrailResponse updateTrailResponse;

    public UpdateTrailResponse withUpdateTrailResponse(org.openapis.openapi.models.shared.UpdateTrailResponse updateTrailResponse) {
        this.updateTrailResponse = updateTrailResponse;
        return this;
    }
    
    public UpdateTrailResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
