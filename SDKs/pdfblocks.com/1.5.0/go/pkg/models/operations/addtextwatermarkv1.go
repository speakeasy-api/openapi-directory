// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// AddTextWatermarkV1RequestBodyColorEnum - The color of the text watermark.
type AddTextWatermarkV1RequestBodyColorEnum string

const (
	AddTextWatermarkV1RequestBodyColorEnumRed   AddTextWatermarkV1RequestBodyColorEnum = "Red"
	AddTextWatermarkV1RequestBodyColorEnumBlue  AddTextWatermarkV1RequestBodyColorEnum = "Blue"
	AddTextWatermarkV1RequestBodyColorEnumGray  AddTextWatermarkV1RequestBodyColorEnum = "Gray"
	AddTextWatermarkV1RequestBodyColorEnumBlack AddTextWatermarkV1RequestBodyColorEnum = "Black"
)

func (e *AddTextWatermarkV1RequestBodyColorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Red":
		fallthrough
	case "Blue":
		fallthrough
	case "Gray":
		fallthrough
	case "Black":
		*e = AddTextWatermarkV1RequestBodyColorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddTextWatermarkV1RequestBodyColorEnum: %s", s)
	}
}

type AddTextWatermarkV1RequestBodyFile struct {
	Content []byte `multipartForm:"content"`
	File    string `multipartForm:"name=file"`
}

type AddTextWatermarkV1RequestBody struct {
	// The color of the text watermark.
	Color *AddTextWatermarkV1RequestBodyColorEnum `multipartForm:"name=color"`
	// The input PDF document
	File AddTextWatermarkV1RequestBodyFile `multipartForm:"file"`
	// The first line of text of the watermark.
	Line1 string `multipartForm:"name=line_1"`
	// The second line of text of the watermark.
	Line2 *string `multipartForm:"name=line_2"`
	// The third line of text of the watermark.
	Line3 *string `multipartForm:"name=line_3"`
	// The distance in inches from the border of the page to the text watermark.
	Margin *float32 `multipartForm:"name=margin"`
	// The [id of the text watermark template](https://www.pdfblocks.com/docs/api/v1/text-watermark-templates.pdf).
	Template *int `multipartForm:"name=template"`
	// The transparency level for the text watermark from 0 (opaque) to 100 (transparent).
	Transparency *int `multipartForm:"name=transparency"`
}

// AddTextWatermarkV14XXApplicationProblemPlusJSON - Error
type AddTextWatermarkV14XXApplicationProblemPlusJSON struct {
	Errors map[string]interface{} `json:"errors,omitempty"`
	Status *int64                 `json:"status,omitempty"`
	Title  *string                `json:"title,omitempty"`
	Type   *string                `json:"type,omitempty"`
}

type AddTextWatermarkV1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The document was processed succesfully.
	AddTextWatermarkV1200ApplicationPdfBinaryString []byte
	// Error
	AddTextWatermarkV14XXApplicationProblemPlusJSONObject *AddTextWatermarkV14XXApplicationProblemPlusJSON
}
