// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// DestinyResponsesDestinyProfileResponseCharacterActivities - Character activity data - the activities available to this character and its status, keyed by the Character's Id.
// COMPONENT TYPE: CharacterActivities
type DestinyResponsesDestinyProfileResponseCharacterActivities struct {
	Data map[string]DestinyEntitiesCharactersDestinyCharacterActivitiesComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterCollectibles - COMPONENT TYPE: Collectibles
type DestinyResponsesDestinyProfileResponseCharacterCollectibles struct {
	Data map[string]DestinyComponentsCollectiblesDestinyCollectiblesComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterCurrencyLookups - A "lookup" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.
// COMPONENT TYPE: CurrencyLookups
type DestinyResponsesDestinyProfileResponseCharacterCurrencyLookups struct {
	Data map[string]DestinyComponentsInventoryDestinyCurrenciesComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterEquipment - The character's equipped items, keyed by the Character's Id.
// COMPONENT TYPE: CharacterEquipment
type DestinyResponsesDestinyProfileResponseCharacterEquipment struct {
	Data map[string]DestinyEntitiesInventoryDestinyInventoryComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterInventories - The character-level non-equipped inventory items, keyed by the Character's Id.
// COMPONENT TYPE: CharacterInventories
type DestinyResponsesDestinyProfileResponseCharacterInventories struct {
	Data map[string]DestinyEntitiesInventoryDestinyInventoryComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterKiosks - Items available from Kiosks that are available to a specific character as opposed to the account as a whole. It must be combined with data from the profileKiosks property to get a full picture of the character's available items to check out of a kiosk.
// This component returns information about what Kiosk items are available to you on a *Character* level. Usually, kiosk items will be earned for the entire Profile (all characters) at once. To find those, look in the profileKiosks property.
// COMPONENT TYPE: Kiosks
type DestinyResponsesDestinyProfileResponseCharacterKiosks struct {
	Data map[string]DestinyComponentsKiosksDestinyKiosksComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterPlugSets - When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more info), this is the set of plugs and their states, per character, that are character-scoped.
// This comes back with ItemSockets, as it is needed for a complete picture of the sockets on requested items.
// COMPONENT TYPE: ItemSockets
type DestinyResponsesDestinyProfileResponseCharacterPlugSets struct {
	Data map[string]DestinyComponentsPlugSetsDestinyPlugSetsComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterPresentationNodes - COMPONENT TYPE: PresentationNodes
type DestinyResponsesDestinyProfileResponseCharacterPresentationNodes struct {
	Data map[string]DestinyComponentsPresentationDestinyPresentationNodesComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterProgressions - Character-level progression data, keyed by the Character's Id.
// COMPONENT TYPE: CharacterProgressions
type DestinyResponsesDestinyProfileResponseCharacterProgressions struct {
	Data map[string]DestinyEntitiesCharactersDestinyCharacterProgressionComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterRecords - COMPONENT TYPE: Records
type DestinyResponsesDestinyProfileResponseCharacterRecords struct {
	Data map[string]DestinyComponentsRecordsDestinyCharacterRecordsComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterRenderData - Character rendering data - a minimal set of info needed to render a character in 3D - keyed by the Character's Id.
// COMPONENT TYPE: CharacterRenderData
type DestinyResponsesDestinyProfileResponseCharacterRenderData struct {
	Data map[string]DestinyEntitiesCharactersDestinyCharacterRenderComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacterStringVariables - COMPONENT TYPE: StringVariables
type DestinyResponsesDestinyProfileResponseCharacterStringVariables struct {
	Data map[string]DestinyComponentsStringVariablesDestinyStringVariablesComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseCharacters - Basic information about each character, keyed by the CharacterId.
// COMPONENT TYPE: Characters
type DestinyResponsesDestinyProfileResponseCharacters struct {
	Data map[string]DestinyEntitiesCharactersDestinyCharacterComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseItemComponents - Information about instanced items across all returned characters, keyed by the item's instance ID.
// COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]
type DestinyResponsesDestinyProfileResponseItemComponents struct {
	Instances      *DictionaryComponentResponseOfint64AndDestinyItemInstanceComponent
	Objectives     *DictionaryComponentResponseOfint64AndDestinyItemObjectivesComponent
	Perks          *DictionaryComponentResponseOfint64AndDestinyItemPerksComponent
	PlugObjectives *DictionaryComponentResponseOfint64AndDestinyItemPlugObjectivesComponent
	PlugStates     *DictionaryComponentResponseOfuint32AndDestinyItemPlugComponent
	RenderData     *DictionaryComponentResponseOfint64AndDestinyItemRenderComponent
	ReusablePlugs  *DictionaryComponentResponseOfint64AndDestinyItemReusablePlugsComponent
	Sockets        *DictionaryComponentResponseOfint64AndDestinyItemSocketsComponent
	Stats          *DictionaryComponentResponseOfint64AndDestinyItemStatsComponent
	TalentGrids    *DictionaryComponentResponseOfint64AndDestinyItemTalentGridComponent
}

// DestinyResponsesDestinyProfileResponseMetrics - COMPONENT TYPE: Metrics
type DestinyResponsesDestinyProfileResponseMetrics struct {
	Data *DestinyComponentsMetricsDestinyMetricsComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponsePlatformSilver - Silver quantities for any platform on which this Profile plays destiny.
//
//	COMPONENT TYPE: PlatformSilver
type DestinyResponsesDestinyProfileResponsePlatformSilver struct {
	Data *DestinyComponentsInventoryDestinyPlatformSilverComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfile - The basic information about the Destiny Profile (formerly "Account").
// COMPONENT TYPE: Profiles
type DestinyResponsesDestinyProfileResponseProfile struct {
	// The most essential summary information about a Profile (in Destiny 1, we called these "Accounts").
	Data *DestinyEntitiesProfilesDestinyProfileComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfileCollectibles - COMPONENT TYPE: Collectibles
type DestinyResponsesDestinyProfileResponseProfileCollectibles struct {
	Data *DestinyComponentsCollectiblesDestinyProfileCollectiblesComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfileCurrencies - The profile-level currencies owned by the Destiny Profile.
// COMPONENT TYPE: ProfileCurrencies
type DestinyResponsesDestinyProfileResponseProfileCurrencies struct {
	// A list of minimal information for items in an inventory: be it a character's inventory, or a Profile's inventory. (Note that the Vault is a collection of inventory buckets in the Profile's inventory)
	// Inventory Items returned here are in a flat list, but importantly they have a bucketHash property that indicates the specific inventory bucket that is holding them. These buckets constitute things like the separate sections of the Vault, the user's inventory slots, etc. See DestinyInventoryBucketDefinition for more info.
	Data *DestinyEntitiesInventoryDestinyInventoryComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfileInventory - The profile-level inventory of the Destiny Profile.
// COMPONENT TYPE: ProfileInventories
type DestinyResponsesDestinyProfileResponseProfileInventory struct {
	// A list of minimal information for items in an inventory: be it a character's inventory, or a Profile's inventory. (Note that the Vault is a collection of inventory buckets in the Profile's inventory)
	// Inventory Items returned here are in a flat list, but importantly they have a bucketHash property that indicates the specific inventory bucket that is holding them. These buckets constitute things like the separate sections of the Vault, the user's inventory slots, etc. See DestinyInventoryBucketDefinition for more info.
	Data *DestinyEntitiesInventoryDestinyInventoryComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfileKiosks - Items available from Kiosks that are available Profile-wide (i.e. across all characters)
// This component returns information about what Kiosk items are available to you on a *Profile* level. It is theoretically possible for Kiosks to have items gated by specific Character as well. If you ever have those, you will find them on the characterKiosks property.
// COMPONENT TYPE: Kiosks
type DestinyResponsesDestinyProfileResponseProfileKiosks struct {
	// A Kiosk is a Vendor (DestinyVendorDefinition) that sells items based on whether you have already acquired that item before.
	// This component returns information about what Kiosk items are available to you on a *Profile* level. It is theoretically possible for Kiosks to have items gated by specific Character as well. If you ever have those, you will find them on the individual character's DestinyCharacterKiosksComponent.
	// Note that, because this component returns vendorItemIndexes (that is to say, indexes into the Kiosk Vendor's itemList property), these results are necessarily content version dependent. Make sure that you have the latest version of the content manifest databases before using this data.
	Data *DestinyComponentsKiosksDestinyKiosksComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfilePlugSets - When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more info), this is the set of plugs and their states that are profile-scoped.
// This comes back with ItemSockets, as it is needed for a complete picture of the sockets on requested items.
// COMPONENT TYPE: ItemSockets
type DestinyResponsesDestinyProfileResponseProfilePlugSets struct {
	// Sockets may refer to a "Plug Set": a set of reusable plugs that may be shared across multiple sockets (or even, in theory, multiple sockets over multiple items).
	// This is the set of those plugs that we came across in the users' inventory, along with the values for plugs in the set. Any given set in this component may be represented in Character and Profile-level, as some plugs may be Profile-level restricted, and some character-level restricted. (note that the ones that are even more specific will remain on the actual socket component itself, as they cannot be reused)
	Data *DestinyComponentsPlugSetsDestinyPlugSetsComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfilePresentationNodes - COMPONENT TYPE: PresentationNodes
type DestinyResponsesDestinyProfileResponseProfilePresentationNodes struct {
	Data *DestinyComponentsPresentationDestinyPresentationNodesComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfileProgression - When we have progression information - such as Checklists - that may apply profile-wide, it will be returned here rather than in the per-character progression data.
// COMPONENT TYPE: ProfileProgression
type DestinyResponsesDestinyProfileResponseProfileProgression struct {
	// The set of progression-related information that applies at a Profile-wide level for your Destiny experience. This differs from the Jimi Hendrix Experience because there's less guitars on fire. Yet. #spoileralert?
	// This will include information such as Checklist info.
	Data *DestinyComponentsProfilesDestinyProfileProgressionComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfileRecords - COMPONENT TYPE: Records
type DestinyResponsesDestinyProfileResponseProfileRecords struct {
	Data *DestinyComponentsRecordsDestinyProfileRecordsComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfileStringVariables - COMPONENT TYPE: StringVariables
type DestinyResponsesDestinyProfileResponseProfileStringVariables struct {
	Data *DestinyComponentsStringVariablesDestinyStringVariablesComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseProfileTransitoryData - COMPONENT TYPE: Transitory
type DestinyResponsesDestinyProfileResponseProfileTransitoryData struct {
	// This is an experimental set of data that Bungie considers to be "transitory" - information that may be useful for API users, but that is coming from a non-authoritative data source about information that could potentially change at a more frequent pace than Bungie.net will receive updates about it.
	// This information is provided exclusively for convenience should any of it be useful to users: we provide no guarantees to the accuracy or timeliness of data that comes from this source. Know that this data can potentially be out-of-date or even wrong entirely if the user disconnected from the game or suddenly changed their status before we can receive refreshed data.
	Data *DestinyComponentsProfilesDestinyProfileTransitoryComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponseVendorReceipts - Recent, refundable purchases you have made from vendors. When will you use it? Couldn't say...
// COMPONENT TYPE: VendorReceipts
type DestinyResponsesDestinyProfileResponseVendorReceipts struct {
	// For now, this isn't used for much: it's a record of the recent refundable purchases that the user has made. In the future, it could be used for providing refunds/buyback via the API. Wouldn't that be fun?
	Data *DestinyEntitiesProfilesDestinyVendorReceiptsComponent
	// If true, this component is disabled.
	Disabled *bool
	Privacy  *int
}

// DestinyResponsesDestinyProfileResponse - The response for GetDestinyProfile, with components for character and item-level data.
type DestinyResponsesDestinyProfileResponse struct {
	// Character activity data - the activities available to this character and its status, keyed by the Character's Id.
	// COMPONENT TYPE: CharacterActivities
	CharacterActivities *DestinyResponsesDestinyProfileResponseCharacterActivities
	// COMPONENT TYPE: Collectibles
	CharacterCollectibles *DestinyResponsesDestinyProfileResponseCharacterCollectibles
	// A "lookup" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.
	// COMPONENT TYPE: CurrencyLookups
	CharacterCurrencyLookups *DestinyResponsesDestinyProfileResponseCharacterCurrencyLookups
	// The character's equipped items, keyed by the Character's Id.
	// COMPONENT TYPE: CharacterEquipment
	CharacterEquipment *DestinyResponsesDestinyProfileResponseCharacterEquipment
	// The character-level non-equipped inventory items, keyed by the Character's Id.
	// COMPONENT TYPE: CharacterInventories
	CharacterInventories *DestinyResponsesDestinyProfileResponseCharacterInventories
	// Items available from Kiosks that are available to a specific character as opposed to the account as a whole. It must be combined with data from the profileKiosks property to get a full picture of the character's available items to check out of a kiosk.
	// This component returns information about what Kiosk items are available to you on a *Character* level. Usually, kiosk items will be earned for the entire Profile (all characters) at once. To find those, look in the profileKiosks property.
	// COMPONENT TYPE: Kiosks
	CharacterKiosks *DestinyResponsesDestinyProfileResponseCharacterKiosks
	// When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more info), this is the set of plugs and their states, per character, that are character-scoped.
	// This comes back with ItemSockets, as it is needed for a complete picture of the sockets on requested items.
	// COMPONENT TYPE: ItemSockets
	CharacterPlugSets *DestinyResponsesDestinyProfileResponseCharacterPlugSets
	// COMPONENT TYPE: PresentationNodes
	CharacterPresentationNodes *DestinyResponsesDestinyProfileResponseCharacterPresentationNodes
	// Character-level progression data, keyed by the Character's Id.
	// COMPONENT TYPE: CharacterProgressions
	CharacterProgressions *DestinyResponsesDestinyProfileResponseCharacterProgressions
	// COMPONENT TYPE: Records
	CharacterRecords *DestinyResponsesDestinyProfileResponseCharacterRecords
	// Character rendering data - a minimal set of info needed to render a character in 3D - keyed by the Character's Id.
	// COMPONENT TYPE: CharacterRenderData
	CharacterRenderData *DestinyResponsesDestinyProfileResponseCharacterRenderData
	// COMPONENT TYPE: StringVariables
	CharacterStringVariables *DestinyResponsesDestinyProfileResponseCharacterStringVariables
	// Do you ever get the feeling that a system was designed *too* flexibly? That it can be used in so many different ways that you end up being unable to provide an easy to use abstraction for the mess that's happening under the surface?
	// Let's talk about character-specific data that might be related to items without instances. These two statements are totally unrelated, I promise.
	// At some point during D2, it was decided that items - such as Bounties - could be given to characters and *not* have instance data, but that *could* display and even use relevant state information on your account and character.
	// Up to now, any item that had meaningful dependencies on character or account state had to be instanced, and thus "itemComponents" was all that you needed: it was keyed by item's instance IDs and provided the stateful information you needed inside.
	// Unfortunately, we don't live in such a magical world anymore. This is information held on a per-character basis about non-instanced items that the characters have in their inventory - or that reference character-specific state information even if it's in Account-level inventory - and the values related to that item's state in relation to the given character.
	// To give a concrete example, look at a Moments of Triumph bounty. They exist in a character's inventory, and show/care about a character's progression toward completing the bounty. But the bounty itself is a non-instanced item, like a mod or a currency. This returns that data for the characters who have the bounty in their inventory.
	// I'm not crying, you're crying Okay we're both crying but it's going to be okay I promise Actually I shouldn't promise that, I don't know if it's going to be okay
	CharacterUninstancedItemComponents map[string]DestinyBaseItemComponentSetOfuint32
	// Basic information about each character, keyed by the CharacterId.
	// COMPONENT TYPE: Characters
	Characters *DestinyResponsesDestinyProfileResponseCharacters
	// Information about instanced items across all returned characters, keyed by the item's instance ID.
	// COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]
	ItemComponents *DestinyResponsesDestinyProfileResponseItemComponents
	// COMPONENT TYPE: Metrics
	Metrics *DestinyResponsesDestinyProfileResponseMetrics
	// Silver quantities for any platform on which this Profile plays destiny.
	//  COMPONENT TYPE: PlatformSilver
	PlatformSilver *DestinyResponsesDestinyProfileResponsePlatformSilver
	// The basic information about the Destiny Profile (formerly "Account").
	// COMPONENT TYPE: Profiles
	Profile *DestinyResponsesDestinyProfileResponseProfile
	// COMPONENT TYPE: Collectibles
	ProfileCollectibles *DestinyResponsesDestinyProfileResponseProfileCollectibles
	// The profile-level currencies owned by the Destiny Profile.
	// COMPONENT TYPE: ProfileCurrencies
	ProfileCurrencies *DestinyResponsesDestinyProfileResponseProfileCurrencies
	// The profile-level inventory of the Destiny Profile.
	// COMPONENT TYPE: ProfileInventories
	ProfileInventory *DestinyResponsesDestinyProfileResponseProfileInventory
	// Items available from Kiosks that are available Profile-wide (i.e. across all characters)
	// This component returns information about what Kiosk items are available to you on a *Profile* level. It is theoretically possible for Kiosks to have items gated by specific Character as well. If you ever have those, you will find them on the characterKiosks property.
	// COMPONENT TYPE: Kiosks
	ProfileKiosks *DestinyResponsesDestinyProfileResponseProfileKiosks
	// When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more info), this is the set of plugs and their states that are profile-scoped.
	// This comes back with ItemSockets, as it is needed for a complete picture of the sockets on requested items.
	// COMPONENT TYPE: ItemSockets
	ProfilePlugSets *DestinyResponsesDestinyProfileResponseProfilePlugSets
	// COMPONENT TYPE: PresentationNodes
	ProfilePresentationNodes *DestinyResponsesDestinyProfileResponseProfilePresentationNodes
	// When we have progression information - such as Checklists - that may apply profile-wide, it will be returned here rather than in the per-character progression data.
	// COMPONENT TYPE: ProfileProgression
	ProfileProgression *DestinyResponsesDestinyProfileResponseProfileProgression
	// COMPONENT TYPE: Records
	ProfileRecords *DestinyResponsesDestinyProfileResponseProfileRecords
	// COMPONENT TYPE: StringVariables
	ProfileStringVariables *DestinyResponsesDestinyProfileResponseProfileStringVariables
	// COMPONENT TYPE: Transitory
	ProfileTransitoryData *DestinyResponsesDestinyProfileResponseProfileTransitoryData
	// Recent, refundable purchases you have made from vendors. When will you use it? Couldn't say...
	// COMPONENT TYPE: VendorReceipts
	VendorReceipts *DestinyResponsesDestinyProfileResponseVendorReceipts
}
