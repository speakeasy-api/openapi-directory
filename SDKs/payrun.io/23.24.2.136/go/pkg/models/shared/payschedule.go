// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PaySchedulePaySchedulePayFrequencyEnum - The pay schedules' pay frequency
type PaySchedulePaySchedulePayFrequencyEnum string

const (
	PaySchedulePaySchedulePayFrequencyEnumWeekly     PaySchedulePaySchedulePayFrequencyEnum = "Weekly"
	PaySchedulePaySchedulePayFrequencyEnumMonthly    PaySchedulePaySchedulePayFrequencyEnum = "Monthly"
	PaySchedulePaySchedulePayFrequencyEnumTwoWeekly  PaySchedulePaySchedulePayFrequencyEnum = "TwoWeekly"
	PaySchedulePaySchedulePayFrequencyEnumFourWeekly PaySchedulePaySchedulePayFrequencyEnum = "FourWeekly"
	PaySchedulePaySchedulePayFrequencyEnumYearly     PaySchedulePaySchedulePayFrequencyEnum = "Yearly"
)

func (e PaySchedulePaySchedulePayFrequencyEnum) ToPointer() *PaySchedulePaySchedulePayFrequencyEnum {
	return &e
}

func (e *PaySchedulePaySchedulePayFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Weekly":
		fallthrough
	case "Monthly":
		fallthrough
	case "TwoWeekly":
		fallthrough
	case "FourWeekly":
		fallthrough
	case "Yearly":
		*e = PaySchedulePaySchedulePayFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaySchedulePaySchedulePayFrequencyEnum: %v", v)
	}
}

type PaySchedulePaySchedule struct {
	// The pay schedules' meta data
	MetaData map[string]interface{} `json:"MetaData,omitempty"`
	// The pay schedules' name
	Name *string `json:"Name,omitempty"`
	// The pay schedules' pay frequency
	PayFrequency *PaySchedulePaySchedulePayFrequencyEnum `json:"PayFrequency,omitempty"`
}

// PaySchedule - The pay schedule object.
type PaySchedule struct {
	PaySchedule *PaySchedulePaySchedule `json:"PaySchedule,omitempty"`
}
