"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .auth_controller import AuthController
from .observation_controller import ObservationController
from .observation_heading_controller import ObservationHeadingController
from .patient_controller import PatientController
from .patient_management_controller import PatientManagementController

SERVERS = [
    "https://www.patientview.org/",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""The recommended REST API endpoints to be used when integrating with PatientView"""
    auth_controller: AuthController
    r"""Auth Controller"""
    observation_controller: ObservationController
    r"""Observation Controller"""
    observation_heading_controller: ObservationHeadingController
    r"""Observation Heading Controller"""
    patient_controller: PatientController
    r"""Patient Controller"""
    patient_management_controller: PatientManagementController
    r"""Patient Management Controller"""

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.auth_controller = AuthController(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.observation_controller = ObservationController(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.observation_heading_controller = ObservationHeadingController(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.patient_controller = PatientController(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.patient_management_controller = PatientManagementController(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    