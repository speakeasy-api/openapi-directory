"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import codesigningcertificatechain as shared_codesigningcertificatechain
from ..shared import codesigningsignature as shared_codesigningsignature
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomCodeSigning:
    r"""Describes a custom method used to code sign a file."""
    
    certificate_chain: Optional[shared_codesigningcertificatechain.CodeSigningCertificateChain] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateChain'), 'exclude': lambda f: f is None }})  
    hash_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hashAlgorithm'), 'exclude': lambda f: f is None }})  
    signature: Optional[shared_codesigningsignature.CodeSigningSignature] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signature'), 'exclude': lambda f: f is None }})  
    signature_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signatureAlgorithm'), 'exclude': lambda f: f is None }})  
    