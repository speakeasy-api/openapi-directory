// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CloudsearchStatsGetSearchapplicationSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type CloudsearchStatsGetSearchapplicationSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type CloudsearchStatsGetSearchapplicationSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type CloudsearchStatsGetSearchapplicationSecurity struct {
	Option1 *CloudsearchStatsGetSearchapplicationSecurityOption1 `security:"option"`
	Option2 *CloudsearchStatsGetSearchapplicationSecurityOption2 `security:"option"`
	Option3 *CloudsearchStatsGetSearchapplicationSecurityOption3 `security:"option"`
}

type CloudsearchStatsGetSearchapplicationRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	EndDateDay *int64 `queryParam:"style=form,explode=true,name=endDate.day"`
	// Month of date. Must be from 1 to 12.
	EndDateMonth *int64 `queryParam:"style=form,explode=true,name=endDate.month"`
	// Year of date. Must be from 1 to 9999.
	EndDateYear *int64 `queryParam:"style=form,explode=true,name=endDate.year"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Day of month. Must be from 1 to 31 and valid for the year and month.
	StartDateDay *int64 `queryParam:"style=form,explode=true,name=startDate.day"`
	// Month of date. Must be from 1 to 12.
	StartDateMonth *int64 `queryParam:"style=form,explode=true,name=startDate.month"`
	// Year of date. Must be from 1 to 9999.
	StartDateYear *int64 `queryParam:"style=form,explode=true,name=startDate.year"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type CloudsearchStatsGetSearchapplicationResponse struct {
	ContentType string
	// Successful response
	GetCustomerSearchApplicationStatsResponse *shared.GetCustomerSearchApplicationStatsResponse
	StatusCode                                int
	RawResponse                               *http.Response
}
