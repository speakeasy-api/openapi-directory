// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SearchTopicsRequest struct {
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub Enterprise Server. The REST API supports the same qualifiers as the web interface for GitHub Enterprise Server. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@3.3/rest/reference/search#constructing-a-search-query).
	Q string `queryParam:"style=form,explode=true,name=q"`
}

// SearchTopics200ApplicationJSON - Response
type SearchTopics200ApplicationJSON struct {
	IncompleteResults bool                           `json:"incomplete_results"`
	Items             []shared.TopicSearchResultItem `json:"items"`
	TotalCount        int64                          `json:"total_count"`
}

type SearchTopicsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	SearchTopics200ApplicationJSONObject *SearchTopics200ApplicationJSON
}
