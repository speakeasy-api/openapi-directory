/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class PrimaryIPActions {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public PrimaryIPActions(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Assign a Primary IP to a resource
     * Assigns a Primary IP to a Server.
     * 
     * A Server can only have one Primary IP of type `ipv4` and one of type `ipv6` assigned. If you need more IPs use Floating IPs.
     * 
     * The Server must be powered off (status `off`) in order for this operation to succeed.
     * 
     * #### Call specific error codes
     * 
     * | Code                          | Description                                                   |
     * |------------------------------ |-------------------------------------------------------------- |
     * | `server_not_stopped`          | The server is running, but needs to be powered off            |
     * | `primary_ip_already_assigned` | Primary ip is already assigned to a different server          |
     * | `server_has_ipv4`             | The server already has an ipv4 address                        |
     * | `server_has_ipv6`             | The server already has an ipv6 address                        |
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsAssignResponse postPrimaryIpsIdActionsAssign(org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsAssignRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsAssignRequest.class, baseUrl, "/primary_ips/{id}/actions/assign", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsAssignResponse res = new org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsAssignResponse() {{
            actionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsAssignActionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsAssignActionResponse.class);
                res.actionResponse = out;
            }
        }

        return res;
    }

    /**
     * Change reverse DNS entry for a Primary IP
     * Changes the hostname that will appear when getting the hostname belonging to this Primary IP.
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeDnsPtrResponse postPrimaryIpsIdActionsChangeDnsPtr(org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeDnsPtrRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeDnsPtrRequest.class, baseUrl, "/primary_ips/{id}/actions/change_dns_ptr", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeDnsPtrResponse res = new org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeDnsPtrResponse() {{
            actionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeDnsPtrActionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeDnsPtrActionResponse.class);
                res.actionResponse = out;
            }
        }

        return res;
    }

    /**
     * Change Primary IP Protection
     * Changes the protection configuration of a Primary IP.
     * 
     * A Primary IP can only be delete protected if its `auto_delete` property is set to `false`.
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeProtectionResponse postPrimaryIpsIdActionsChangeProtection(org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeProtectionRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeProtectionRequest.class, baseUrl, "/primary_ips/{id}/actions/change_protection", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeProtectionResponse res = new org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeProtectionResponse() {{
            actionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeProtectionActionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsChangeProtectionActionResponse.class);
                res.actionResponse = out;
            }
        }

        return res;
    }

    /**
     * Unassign a Primary IP from a resource
     * Unassigns a Primary IP from a Server.
     * 
     * The Server must be powered off (status `off`) in order for this operation to succeed.
     * 
     * Note that only Servers that have at least one network interface (public or private) attached can be powered on.
     * 
     * #### Call specific error codes
     * 
     * | Code                              | Description                                                   |
     * |---------------------------------- |-------------------------------------------------------------- |
     * | `server_not_stopped`              | The server is running, but needs to be powered off            |
     * | `server_is_load_balancer_target`  | The server ipv4 address is a loadbalancer target              |
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsUnassignResponse postPrimaryIpsIdActionsUnassign(org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsUnassignRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsUnassignRequest.class, baseUrl, "/primary_ips/{id}/actions/unassign", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        
        
        HTTPClient client = this._defaultClient;
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsUnassignResponse res = new org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsUnassignResponse() {{
            actionResponse = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsUnassignActionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostPrimaryIpsIdActionsUnassignActionResponse.class);
                res.actionResponse = out;
            }
        }

        return res;
    }
}