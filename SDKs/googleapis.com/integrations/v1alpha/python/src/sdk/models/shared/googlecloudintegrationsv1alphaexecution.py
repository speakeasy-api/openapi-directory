"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmeventbusprotoeventexecutiondetails as shared_enterprisecrmeventbusprotoeventexecutiondetails
from ..shared import enterprisecrmfrontendseventbusprotoparameterentry as shared_enterprisecrmfrontendseventbusprotoparameterentry
from ..shared import googlecloudintegrationsv1alphaexecutiondetails as shared_googlecloudintegrationsv1alphaexecutiondetails
from ..shared import googlecloudintegrationsv1alphavaluetype as shared_googlecloudintegrationsv1alphavaluetype
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudIntegrationsV1alphaExecutionExecutionMethodEnum(str, Enum):
    r"""The ways user posts this event."""
    EXECUTION_METHOD_UNSPECIFIED = 'EXECUTION_METHOD_UNSPECIFIED'
    POST = 'POST'
    POST_TO_QUEUE = 'POST_TO_QUEUE'
    SCHEDULE = 'SCHEDULE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaExecution:
    r"""The Execution resource contains detailed information of an individual integration execution."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Created time of the execution."""  
    direct_sub_executions: Optional[list[GoogleCloudIntegrationsV1alphaExecution]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('directSubExecutions'), 'exclude': lambda f: f is None }})
    r"""Direct sub executions of the following Execution."""  
    event_execution_details: Optional[shared_enterprisecrmeventbusprotoeventexecutiondetails.EnterpriseCrmEventbusProtoEventExecutionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventExecutionDetails'), 'exclude': lambda f: f is None }})
    r"""Contains the details of the execution info of this event: this includes the tasks execution details plus the event execution statistics. Next available id: 10"""  
    execution_details: Optional[shared_googlecloudintegrationsv1alphaexecutiondetails.GoogleCloudIntegrationsV1alphaExecutionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionDetails'), 'exclude': lambda f: f is None }})
    r"""Contains the details of the execution info: this includes the tasks execution details plus the event execution statistics."""  
    execution_method: Optional[GoogleCloudIntegrationsV1alphaExecutionExecutionMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionMethod'), 'exclude': lambda f: f is None }})
    r"""The ways user posts this event."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Auto-generated primary key."""  
    request_parameters: Optional[dict[str, shared_googlecloudintegrationsv1alphavaluetype.GoogleCloudIntegrationsV1alphaValueType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestParameters'), 'exclude': lambda f: f is None }})
    r"""Event parameters come in as part of the request."""  
    request_params: Optional[list[shared_enterprisecrmfrontendseventbusprotoparameterentry.EnterpriseCrmFrontendsEventbusProtoParameterEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestParams'), 'exclude': lambda f: f is None }})
    r"""Event parameters come in as part of the request."""  
    response_parameters: Optional[dict[str, shared_googlecloudintegrationsv1alphavaluetype.GoogleCloudIntegrationsV1alphaValueType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseParameters'), 'exclude': lambda f: f is None }})
    r"""Event parameters returned as part of the response."""  
    response_params: Optional[list[shared_enterprisecrmfrontendseventbusprotoparameterentry.EnterpriseCrmFrontendsEventbusProtoParameterEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseParams'), 'exclude': lambda f: f is None }})
    r"""Event parameters come out as part of the response."""  
    trigger_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerId'), 'exclude': lambda f: f is None }})
    r"""The trigger id of the integration trigger config. If both trigger_id and client_id is present, the integration is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Last modified time of the execution."""  
    