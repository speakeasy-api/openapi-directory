<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Review
{
    /**
     * Author of this review.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReviewAuthor $author
     */
	#[\JMS\Serializer\Annotation\SerializedName('author')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReviewAuthor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReviewAuthor $author = null;
    
    /**
     * Review text.
     * 
     * @var ?string $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $content = null;
    
    /**
     * Date of this review.
     * 
     * @var ?string $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $date = null;
    
    /**
     * URL for the full review text, for reviews gathered from the web.
     * 
     * @var ?string $fullTextUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('fullTextUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fullTextUrl = null;
    
    /**
     * Resource type for a review.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.
     * 
     * @var ?string $rating
     */
	#[\JMS\Serializer\Annotation\SerializedName('rating')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rating = null;
    
    /**
     * Information regarding the source of this review, when the review is not from a Google Books user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReviewSource $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReviewSource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReviewSource $source = null;
    
    /**
     * Title for this review.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Volume that this review is for.
     * 
     * @var ?string $volumeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $volumeId = null;
    
	public function __construct()
	{
		$this->author = null;
		$this->content = null;
		$this->date = null;
		$this->fullTextUrl = null;
		$this->kind = null;
		$this->rating = null;
		$this->source = null;
		$this->title = null;
		$this->type = null;
		$this->volumeId = null;
	}
}
