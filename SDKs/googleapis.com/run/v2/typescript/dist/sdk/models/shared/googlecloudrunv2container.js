"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleCloudRunV2Container = void 0;
var utils_1 = require("../../../internal/utils");
var googlecloudrunv2containerport_1 = require("./googlecloudrunv2containerport");
var googlecloudrunv2envvar_1 = require("./googlecloudrunv2envvar");
var googlecloudrunv2probe_1 = require("./googlecloudrunv2probe");
var googlecloudrunv2resourcerequirements_1 = require("./googlecloudrunv2resourcerequirements");
var googlecloudrunv2volumemount_1 = require("./googlecloudrunv2volumemount");
var class_transformer_1 = require("class-transformer");
/**
 * A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments may be supplied by the system to the container at runtime.
 */
var GoogleCloudRunV2Container = /** @class */ (function (_super) {
    __extends(GoogleCloudRunV2Container, _super);
    function GoogleCloudRunV2Container() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "args" }),
        __metadata("design:type", Array)
    ], GoogleCloudRunV2Container.prototype, "args", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "command" }),
        __metadata("design:type", Array)
    ], GoogleCloudRunV2Container.prototype, "command", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: googlecloudrunv2envvar_1.GoogleCloudRunV2EnvVar }),
        (0, class_transformer_1.Expose)({ name: "env" }),
        (0, class_transformer_1.Type)(function () { return googlecloudrunv2envvar_1.GoogleCloudRunV2EnvVar; }),
        __metadata("design:type", Array)
    ], GoogleCloudRunV2Container.prototype, "env", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image" }),
        __metadata("design:type", String)
    ], GoogleCloudRunV2Container.prototype, "image", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "livenessProbe" }),
        (0, class_transformer_1.Type)(function () { return googlecloudrunv2probe_1.GoogleCloudRunV2Probe; }),
        __metadata("design:type", googlecloudrunv2probe_1.GoogleCloudRunV2Probe)
    ], GoogleCloudRunV2Container.prototype, "livenessProbe", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GoogleCloudRunV2Container.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: googlecloudrunv2containerport_1.GoogleCloudRunV2ContainerPort }),
        (0, class_transformer_1.Expose)({ name: "ports" }),
        (0, class_transformer_1.Type)(function () { return googlecloudrunv2containerport_1.GoogleCloudRunV2ContainerPort; }),
        __metadata("design:type", Array)
    ], GoogleCloudRunV2Container.prototype, "ports", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resources" }),
        (0, class_transformer_1.Type)(function () { return googlecloudrunv2resourcerequirements_1.GoogleCloudRunV2ResourceRequirements; }),
        __metadata("design:type", googlecloudrunv2resourcerequirements_1.GoogleCloudRunV2ResourceRequirements)
    ], GoogleCloudRunV2Container.prototype, "resources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startupProbe" }),
        (0, class_transformer_1.Type)(function () { return googlecloudrunv2probe_1.GoogleCloudRunV2Probe; }),
        __metadata("design:type", googlecloudrunv2probe_1.GoogleCloudRunV2Probe)
    ], GoogleCloudRunV2Container.prototype, "startupProbe", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: googlecloudrunv2volumemount_1.GoogleCloudRunV2VolumeMount }),
        (0, class_transformer_1.Expose)({ name: "volumeMounts" }),
        (0, class_transformer_1.Type)(function () { return googlecloudrunv2volumemount_1.GoogleCloudRunV2VolumeMount; }),
        __metadata("design:type", Array)
    ], GoogleCloudRunV2Container.prototype, "volumeMounts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workingDir" }),
        __metadata("design:type", String)
    ], GoogleCloudRunV2Container.prototype, "workingDir", void 0);
    return GoogleCloudRunV2Container;
}(utils_1.SpeakeasyBase));
exports.GoogleCloudRunV2Container = GoogleCloudRunV2Container;
