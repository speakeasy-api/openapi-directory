// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerSeasonStatsByTeamWAdpFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerSeasonStatsByTeamWAdpFormatEnum string

const (
	ProjectedPlayerSeasonStatsByTeamWAdpFormatEnumXML  ProjectedPlayerSeasonStatsByTeamWAdpFormatEnum = "XML"
	ProjectedPlayerSeasonStatsByTeamWAdpFormatEnumJSON ProjectedPlayerSeasonStatsByTeamWAdpFormatEnum = "JSON"
)

func (e *ProjectedPlayerSeasonStatsByTeamWAdpFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = ProjectedPlayerSeasonStatsByTeamWAdpFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerSeasonStatsByTeamWAdpFormatEnum: %s", s)
	}
}

type ProjectedPlayerSeasonStatsByTeamWAdpPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerSeasonStatsByTeamWAdpFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Year of the season and the season type. If no season type is provided, then the default is regular season.
	//           <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
	//
	Season string `pathParam:"style=simple,explode=false,name=season"`
	// Abbreviation of the team. Example: <code>WAS</code>.
	Team string `pathParam:"style=simple,explode=false,name=team"`
}

type ProjectedPlayerSeasonStatsByTeamWAdpRequest struct {
	PathParams ProjectedPlayerSeasonStatsByTeamWAdpPathParams
}

type ProjectedPlayerSeasonStatsByTeamWAdpResponse struct {
	ContentType             string
	PlayerSeasonProjections []shared.PlayerSeasonProjection
	StatusCode              int
	RawResponse             *http.Response
}
