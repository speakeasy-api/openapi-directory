// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum string

const (
	EnterpriseCrmLoggingGwsFieldLimitsLogActionEnumLogActionUnspecified EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum = "LOG_ACTION_UNSPECIFIED"
	EnterpriseCrmLoggingGwsFieldLimitsLogActionEnumDontLog              EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum = "DONT_LOG"
	EnterpriseCrmLoggingGwsFieldLimitsLogActionEnumLog                  EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum = "LOG"
)

func (e *EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LOG_ACTION_UNSPECIFIED":
		fallthrough
	case "DONT_LOG":
		fallthrough
	case "LOG":
		*e = EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum: %s", s)
	}
}

type EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum string

const (
	EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnumLogTypeUnspecified EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum = "LOG_TYPE_UNSPECIFIED"
	EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnumGws                EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum = "GWS"
	EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnumGts                EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum = "GTS"
	EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnumAll                EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum = "ALL"
)

func (e *EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LOG_TYPE_UNSPECIFIED":
		fallthrough
	case "GWS":
		fallthrough
	case "GTS":
		fallthrough
	case "ALL":
		*e = EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum: %s", s)
	}
}

type EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum string

const (
	EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnumShortenerTypeUnspecified EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum = "SHORTENER_TYPE_UNSPECIFIED"
	EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnumShorten                  EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum = "SHORTEN"
	EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnumHash                     EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum = "HASH"
	EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnumShortenWithHash          EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum = "SHORTEN_WITH_HASH"
	EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnumShortenEmail             EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum = "SHORTEN_EMAIL"
	EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnumShortenEmailWithHash     EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum = "SHORTEN_EMAIL_WITH_HASH"
	EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnumShortenDomain            EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum = "SHORTEN_DOMAIN"
)

func (e *EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SHORTENER_TYPE_UNSPECIFIED":
		fallthrough
	case "SHORTEN":
		fallthrough
	case "HASH":
		fallthrough
	case "SHORTEN_WITH_HASH":
		fallthrough
	case "SHORTEN_EMAIL":
		fallthrough
	case "SHORTEN_EMAIL_WITH_HASH":
		fallthrough
	case "SHORTEN_DOMAIN":
		*e = EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum: %s", s)
	}
}

// EnterpriseCrmLoggingGwsFieldLimits - Describes string and array limits when writing to logs. When a limit is exceeded the *shortener_type* describes how to shorten the field. next_id: 6
type EnterpriseCrmLoggingGwsFieldLimits struct {
	LogAction *EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum `json:"logAction,omitempty"`
	// To which type(s) of logs the limits apply.
	LogType []EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum `json:"logType,omitempty"`
	// maximum array size. If the array exceds this size, the field (list) is truncated.
	MaxArraySize *int `json:"maxArraySize,omitempty"`
	// maximum string length. If the field exceeds this amount the field is shortened.
	MaxStringLength *int                                                 `json:"maxStringLength,omitempty"`
	ShortenerType   *EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum `json:"shortenerType,omitempty"`
}
