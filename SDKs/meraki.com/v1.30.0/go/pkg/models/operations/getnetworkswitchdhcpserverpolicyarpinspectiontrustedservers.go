// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersPathParams struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

type GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersQueryParams struct {
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	// The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
}

type GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersRequest struct {
	PathParams  GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersPathParams
	QueryParams GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersQueryParams
}

// GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ApplicationJSONIpv4 - IPv4 attributes of the trusted server.
type GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ApplicationJSONIpv4 struct {
	// IPv4 address of the trusted server.
	Address *string `json:"address,omitempty"`
}

type GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ApplicationJSON struct {
	// IPv4 attributes of the trusted server.
	Ipv4 *GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ApplicationJSONIpv4 `json:"ipv4,omitempty"`
	// Mac address of the trusted server.
	Mac *string `json:"mac,omitempty"`
	// ID of the trusted server.
	TrustedServerID *string `json:"trustedServerId,omitempty"`
	// Vlan ID of the trusted server.
	Vlan *int64 `json:"vlan,omitempty"`
}

type GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServersResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ApplicationJSONObjects []GetNetworkSwitchDhcpServerPolicyArpInspectionTrustedServers200ApplicationJSON
}
