"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import playerlevel as shared_playerlevel
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlayerExperienceInfo:
    r"""1P/3P metadata about the player's experience."""
    
    current_experience_points: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentExperiencePoints'), 'exclude': lambda f: f is None }})
    r"""The current number of experience points for the player."""  
    current_level: Optional[shared_playerlevel.PlayerLevel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentLevel'), 'exclude': lambda f: f is None }})
    r"""1P/3P metadata about a user's level."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#playerExperienceInfo`."""  
    last_level_up_timestamp_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastLevelUpTimestampMillis'), 'exclude': lambda f: f is None }})
    r"""The timestamp when the player was leveled up, in millis since Unix epoch UTC."""  
    next_level: Optional[shared_playerlevel.PlayerLevel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextLevel'), 'exclude': lambda f: f is None }})
    r"""1P/3P metadata about a user's level."""  
    