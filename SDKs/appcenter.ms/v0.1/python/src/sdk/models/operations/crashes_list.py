"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import crash as shared_crash
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class CrashesListSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    
class CrashesListErrorTypeEnum(str, Enum):
    CRASHING_ERRORS = 'CrashingErrors'
    HANDLED_ERRORS = 'HandledErrors'


@dataclasses.dataclass
class CrashesListRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    crash_group_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'crash_group_id', 'style': 'simple', 'explode': False }})
    r"""id of a specific group"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    app_version: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'app_version', 'style': 'form', 'explode': True }})
    r"""version"""  
    date_from: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date_from', 'style': 'form', 'explode': True }})  
    date_to: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date_to', 'style': 'form', 'explode': True }})  
    error_type: Optional[CrashesListErrorTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'error_type', 'style': 'form', 'explode': True }})  
    include_log: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_log', 'style': 'form', 'explode': True }})
    r"""true if the crash should include the custom log report. Default is false"""  
    include_report: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_report', 'style': 'form', 'explode': True }})
    r"""true if the crash should include the raw crash report. Default is false"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CrashesListDefaultApplicationJSON:
    r"""Error"""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclasses.dataclass
class CrashesListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    crashes: Optional[list[shared_crash.Crash]] = dataclasses.field(default=None)
    r"""Success"""  
    crashes_list_default_application_json_object: Optional[CrashesListDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    