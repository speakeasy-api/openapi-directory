"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import importerror as shared_importerror
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportRowError:
    r"""A resource that reports the import job errors at row level."""
    
    errors: Optional[list[shared_importerror.ImportErrorT]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""The list of errors detected in the row."""  
    row_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowNumber'), 'exclude': lambda f: f is None }})
    r"""The row number where the error was detected."""  
    vm_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmName'), 'exclude': lambda f: f is None }})
    r"""The name of the VM in the row."""  
    vm_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmUuid'), 'exclude': lambda f: f is None }})
    r"""The VM UUID."""  
    