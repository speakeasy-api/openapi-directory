// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeleteTemplateRequest struct {
	// Template unique identifier
	TemplateID int64 `queryParam:"style=form,explode=true,name=templateId"`
}

// DeleteTemplate500ApplicationJSON - Internal Server Error
type DeleteTemplate500ApplicationJSON struct {
	// Error description
	Error *string `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// DeleteTemplate422ApplicationJSONErrorEnum - Error description
type DeleteTemplate422ApplicationJSONErrorEnum string

const (
	DeleteTemplate422ApplicationJSONErrorEnumUnableToParseJSONPleaseCheckFormatting               DeleteTemplate422ApplicationJSONErrorEnum = "Unable to parse JSON, please check formatting"
	DeleteTemplate422ApplicationJSONErrorEnumRequiredParameterMissing                             DeleteTemplate422ApplicationJSONErrorEnum = "Required parameter missing"
	DeleteTemplate422ApplicationJSONErrorEnumRequiredParameterMissingTemplateDefinitionNotDefined DeleteTemplate422ApplicationJSONErrorEnum = "Required parameter missing: template definition not defined"
	DeleteTemplate422ApplicationJSONErrorEnumRequiredParameterMissingTemplateNotDefined           DeleteTemplate422ApplicationJSONErrorEnum = "Required parameter missing: template not defined"
)

func (e *DeleteTemplate422ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unable to parse JSON, please check formatting":
		fallthrough
	case "Required parameter missing":
		fallthrough
	case "Required parameter missing: template definition not defined":
		fallthrough
	case "Required parameter missing: template not defined":
		*e = DeleteTemplate422ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTemplate422ApplicationJSONErrorEnum: %s", s)
	}
}

// DeleteTemplate422ApplicationJSON - Unprocessable Entity
type DeleteTemplate422ApplicationJSON struct {
	// Error description
	Error *DeleteTemplate422ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// DeleteTemplate404ApplicationJSONErrorEnum - Error description
type DeleteTemplate404ApplicationJSONErrorEnum string

const (
	DeleteTemplate404ApplicationJSONErrorEnumEntityNotFound                               DeleteTemplate404ApplicationJSONErrorEnum = "Entity not found"
	DeleteTemplate404ApplicationJSONErrorEnumResourceNotFound                             DeleteTemplate404ApplicationJSONErrorEnum = "Resource not found"
	DeleteTemplate404ApplicationJSONErrorEnumNoneOfTheTemplatesIsAvailableForTheWorkspace DeleteTemplate404ApplicationJSONErrorEnum = "None of the templates is available for the workspace."
)

func (e *DeleteTemplate404ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Entity not found":
		fallthrough
	case "Resource not found":
		fallthrough
	case "None of the templates is available for the workspace.":
		*e = DeleteTemplate404ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTemplate404ApplicationJSONErrorEnum: %s", s)
	}
}

// DeleteTemplate404ApplicationJSON - Not Found
type DeleteTemplate404ApplicationJSON struct {
	// Error description
	Error *DeleteTemplate404ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// DeleteTemplate403ApplicationJSONErrorEnum - Error description
type DeleteTemplate403ApplicationJSONErrorEnum string

const (
	DeleteTemplate403ApplicationJSONErrorEnumYourAccountHasExceededTheMonthlyDocumentGenerationLimit DeleteTemplate403ApplicationJSONErrorEnum = "Your account has exceeded the monthly document generation limit."
)

func (e *DeleteTemplate403ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Your account has exceeded the monthly document generation limit.":
		*e = DeleteTemplate403ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTemplate403ApplicationJSONErrorEnum: %s", s)
	}
}

// DeleteTemplate403ApplicationJSON - Forbidden
type DeleteTemplate403ApplicationJSON struct {
	// Error description
	Error *DeleteTemplate403ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// DeleteTemplate401ApplicationJSONErrorEnum - Error description
type DeleteTemplate401ApplicationJSONErrorEnum string

const (
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedRequestExpired                        DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: request expired"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedSignatureOrSecretMissing              DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: signature or secret missing"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedWorkspaceMissing                      DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: workspace missing"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedKeyMissing                            DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: key missing"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedPropertyIssIssuerMissingInJwt         DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: property 'iss' (issuer) missing in JWT"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedPropertySubSubjectMissingInJwt        DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: property 'sub' (subject) missing in JWT"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedPropertyExpExpirationTimeMissingInJwt DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: property 'exp' (expiration time) missing in JWT"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedInvalidIssIssuer                      DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: invalid 'iss' (issuer)"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailedIncorrectSignature                    DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed: incorrect signature"
	DeleteTemplate401ApplicationJSONErrorEnumAuthenticationFailed                                      DeleteTemplate401ApplicationJSONErrorEnum = "Authentication failed"
)

func (e *DeleteTemplate401ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Authentication failed: request expired":
		fallthrough
	case "Authentication failed: signature or secret missing":
		fallthrough
	case "Authentication failed: workspace missing":
		fallthrough
	case "Authentication failed: key missing":
		fallthrough
	case "Authentication failed: property 'iss' (issuer) missing in JWT":
		fallthrough
	case "Authentication failed: property 'sub' (subject) missing in JWT":
		fallthrough
	case "Authentication failed: property 'exp' (expiration time) missing in JWT":
		fallthrough
	case "Authentication failed: invalid 'iss' (issuer)":
		fallthrough
	case "Authentication failed: incorrect signature":
		fallthrough
	case "Authentication failed":
		*e = DeleteTemplate401ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTemplate401ApplicationJSONErrorEnum: %s", s)
	}
}

// DeleteTemplate401ApplicationJSON - Unauthorized
type DeleteTemplate401ApplicationJSON struct {
	// Error description
	Error *DeleteTemplate401ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

type DeleteTemplate200ApplicationJSONResponse struct {
	Success *bool `json:"success,omitempty"`
}

// DeleteTemplate200ApplicationJSON - The request was successfully executed.
type DeleteTemplate200ApplicationJSON struct {
	Response *DeleteTemplate200ApplicationJSONResponse `json:"response,omitempty"`
}

type DeleteTemplateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The request was successfully executed.
	DeleteTemplate200ApplicationJSONObject *DeleteTemplate200ApplicationJSON
	// Unauthorized
	DeleteTemplate401ApplicationJSONObject *DeleteTemplate401ApplicationJSON
	// Forbidden
	DeleteTemplate403ApplicationJSONObject *DeleteTemplate403ApplicationJSON
	// Not Found
	DeleteTemplate404ApplicationJSONObject *DeleteTemplate404ApplicationJSON
	// Unprocessable Entity
	DeleteTemplate422ApplicationJSONObject *DeleteTemplate422ApplicationJSON
	// Internal Server Error
	DeleteTemplate500ApplicationJSONObject *DeleteTemplate500ApplicationJSON
}
