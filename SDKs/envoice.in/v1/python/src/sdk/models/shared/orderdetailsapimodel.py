"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import currencydetailsapimodel as shared_currencydetailsapimodel
from ..shared import orderbillingdetailsapimodel as shared_orderbillingdetailsapimodel
from ..shared import ordershippingdetailsapimodel as shared_ordershippingdetailsapimodel
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OrderDetailsAPIModelStatusEnum(str, Enum):
    r"""Order status"""
    PENDING_PAYMENT = 'PendingPayment'
    PROCESSING = 'Processing'
    SHIPPED = 'Shipped'
    COMPLETED = 'Completed'
    ON_HOLD = 'OnHold'
    CANCELLED = 'Cancelled'
    REFUNDED = 'Refunded'
    FAILED = 'Failed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderDetailsAPIModel:
    
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessToken'), 'exclude': lambda f: f is None }})
    r"""Product short link"""  
    after_payment_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AfterPaymentDescription'), 'exclude': lambda f: f is None }})
    r"""After payment description"""  
    coupon_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CouponCode'), 'exclude': lambda f: f is None }})
    r"""Coupon to apply in order to get the discount"""  
    currency: Optional[shared_currencydetailsapimodel.CurrencyDetailsAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Currency'), 'exclude': lambda f: f is None }})  
    currency_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrencyId'), 'exclude': lambda f: f is None }})
    r"""Foreign key Currency"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})
    r"""Product description"""  
    discount_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DiscountAmount'), 'exclude': lambda f: f is None }})
    r"""Discount amount"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})
    r"""Order id"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""Product alias"""  
    note: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Note'), 'exclude': lambda f: f is None }})
    r"""Customer note to seller"""  
    order_billing_details: Optional[shared_orderbillingdetailsapimodel.OrderBillingDetailsAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrderBillingDetails'), 'exclude': lambda f: f is None }})  
    order_shipping_details: Optional[shared_ordershippingdetailsapimodel.OrderShippingDetailsAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrderShippingDetails'), 'exclude': lambda f: f is None }})  
    product_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProductId'), 'exclude': lambda f: f is None }})
    r"""Product id"""  
    referral: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Referral'), 'exclude': lambda f: f is None }})
    r"""Represent the referral for this order"""  
    shipping_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingAmount'), 'exclude': lambda f: f is None }})
    r"""Cost for shipping the product"""  
    shipping_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingDescription'), 'exclude': lambda f: f is None }})
    r"""Client instructions for shipping"""  
    status: Optional[OrderDetailsAPIModelStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})
    r"""Order status"""  
    sub_total_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SubTotalAmount'), 'exclude': lambda f: f is None }})
    r"""Sub total amount"""  
    tax_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxAmount'), 'exclude': lambda f: f is None }})
    r"""Tax amount"""  
    total_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalAmount'), 'exclude': lambda f: f is None }})
    r"""Total amount"""  
    total_with_shipping: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalWithShipping'), 'exclude': lambda f: f is None }})
    r"""Total amount with shipping"""  
    what_happens_next_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WhatHappensNextDescription'), 'exclude': lambda f: f is None }})
    r"""What happens next description"""  
    