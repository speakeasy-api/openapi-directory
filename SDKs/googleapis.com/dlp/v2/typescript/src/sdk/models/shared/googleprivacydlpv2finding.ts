/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2InfoType } from "./googleprivacydlpv2infotype";
import { GooglePrivacyDlpV2Location } from "./googleprivacydlpv2location";
import { GooglePrivacyDlpV2QuoteInfo } from "./googleprivacydlpv2quoteinfo";
import { Expose, Type } from "class-transformer";

/**
 * Confidence of how likely it is that the `info_type` is correct.
 */
export enum GooglePrivacyDlpV2FindingLikelihoodEnum {
  LikelihoodUnspecified = "LIKELIHOOD_UNSPECIFIED",
  VeryUnlikely = "VERY_UNLIKELY",
  Unlikely = "UNLIKELY",
  Possible = "POSSIBLE",
  Likely = "LIKELY",
  VeryLikely = "VERY_LIKELY",
}

/**
 * Represents a piece of potentially sensitive content.
 */
export class GooglePrivacyDlpV2Finding extends SpeakeasyBase {
  /**
   * Timestamp when finding was detected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * The unique finding id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "findingId" })
  findingId?: string;

  /**
   * Type of information detected by the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "infoType" })
  @Type(() => GooglePrivacyDlpV2InfoType)
  infoType?: GooglePrivacyDlpV2InfoType;

  /**
   * Time the job started that produced this finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobCreateTime" })
  jobCreateTime?: string;

  /**
   * The job that stored the finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobName" })
  jobName?: string;

  /**
   * The labels associated with this `Finding`. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Confidence of how likely it is that the `info_type` is correct.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "likelihood" })
  likelihood?: GooglePrivacyDlpV2FindingLikelihoodEnum;

  /**
   * Specifies the location of the finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => GooglePrivacyDlpV2Location)
  location?: GooglePrivacyDlpV2Location;

  /**
   * Resource name in format projects/{project}/locations/{location}/findings/{finding} Populated only when viewing persisted findings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The content that was found. Even if the content is not textual, it may be converted to a textual representation here. Provided if `include_quote` is true and the finding is less than or equal to 4096 bytes long. If the finding exceeds 4096 bytes in length, the quote may be omitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quote" })
  quote?: string;

  /**
   * Message for infoType-dependent details parsed from quote.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quoteInfo" })
  @Type(() => GooglePrivacyDlpV2QuoteInfo)
  quoteInfo?: GooglePrivacyDlpV2QuoteInfo;

  /**
   * The job that stored the finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceName" })
  resourceName?: string;

  /**
   * Job trigger name, if applicable, for this finding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggerName" })
  triggerName?: string;
}
