"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import paragraphstyle as shared_paragraphstyle
from ..shared import paragraphstylesuggestionstate as shared_paragraphstylesuggestionstate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuggestedParagraphStyle:
    r"""A suggested change to a ParagraphStyle."""
    
    paragraph_style: Optional[shared_paragraphstyle.ParagraphStyle] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paragraphStyle'), 'exclude': lambda f: f is None }})
    r"""Styles that apply to a whole paragraph. Inherited paragraph styles are represented as unset fields in this message. A paragraph style's parent depends on where the paragraph style is defined: * The ParagraphStyle on a Paragraph inherits from the paragraph's corresponding named style type. * The ParagraphStyle on a named style inherits from the normal text named style. * The ParagraphStyle of the normal text named style inherits from the default paragraph style in the Docs editor. * The ParagraphStyle on a Paragraph element that's contained in a table may inherit its paragraph style from the table style. If the paragraph style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor."""  
    paragraph_style_suggestion_state: Optional[shared_paragraphstylesuggestionstate.ParagraphStyleSuggestionState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paragraphStyleSuggestionState'), 'exclude': lambda f: f is None }})
    r"""A mask that indicates which of the fields on the base ParagraphStyle have been changed in this suggestion. For any field set to true, there's a new suggested value."""  
    