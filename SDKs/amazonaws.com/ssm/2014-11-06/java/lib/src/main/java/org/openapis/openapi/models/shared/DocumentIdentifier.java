/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DocumentIdentifier - Describes the name of a SSM document.
 */
public class DocumentIdentifier {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Author")
    public String author;

    public DocumentIdentifier withAuthor(String author) {
        this.author = author;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;

    public DocumentIdentifier withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisplayName")
    public String displayName;

    public DocumentIdentifier withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentFormat")
    public DocumentFormatEnum documentFormat;

    public DocumentIdentifier withDocumentFormat(DocumentFormatEnum documentFormat) {
        this.documentFormat = documentFormat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentType")
    public DocumentTypeEnum documentType;

    public DocumentIdentifier withDocumentType(DocumentTypeEnum documentType) {
        this.documentType = documentType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentVersion")
    public String documentVersion;

    public DocumentIdentifier withDocumentVersion(String documentVersion) {
        this.documentVersion = documentVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public DocumentIdentifier withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Owner")
    public String owner;

    public DocumentIdentifier withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlatformTypes")
    public PlatformTypeEnum[] platformTypes;

    public DocumentIdentifier withPlatformTypes(PlatformTypeEnum[] platformTypes) {
        this.platformTypes = platformTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Requires")
    public DocumentRequires[] requires;

    public DocumentIdentifier withRequires(DocumentRequires[] requires) {
        this.requires = requires;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReviewStatus")
    public ReviewStatusEnum reviewStatus;

    public DocumentIdentifier withReviewStatus(ReviewStatusEnum reviewStatus) {
        this.reviewStatus = reviewStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SchemaVersion")
    public String schemaVersion;

    public DocumentIdentifier withSchemaVersion(String schemaVersion) {
        this.schemaVersion = schemaVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;

    public DocumentIdentifier withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetType")
    public String targetType;

    public DocumentIdentifier withTargetType(String targetType) {
        this.targetType = targetType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VersionName")
    public String versionName;

    public DocumentIdentifier withVersionName(String versionName) {
        this.versionName = versionName;
        return this;
    }
    
    public DocumentIdentifier(){}
}
