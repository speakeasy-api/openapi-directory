<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PrivateAuctionTerms - Pricing terms for Private Auctions.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PrivateAuctionTerms
{
    /**
     * Represents a price and a pricing type for a deal.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Price $floorPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('floorPrice')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Price')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Price $floorPrice = null;
    
    /**
     * Output only. True if open auction buyers are allowed to compete with invited buyers in this private auction.
     * 
     * @var ?bool $openAuctionAllowed
     */
	#[\JMS\Serializer\Annotation\SerializedName('openAuctionAllowed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $openAuctionAllowed = null;
    
	public function __construct()
	{
		$this->floorPrice = null;
		$this->openAuctionAllowed = null;
	}
}
