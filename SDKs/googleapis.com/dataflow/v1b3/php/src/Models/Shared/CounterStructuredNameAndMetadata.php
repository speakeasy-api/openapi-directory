<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CounterStructuredNameAndMetadata - A single message which encapsulates structured name and metadata for a given counter.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CounterStructuredNameAndMetadata
{
    /**
     * CounterMetadata includes all static non-name non-value counter attributes.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CounterMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CounterMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CounterMetadata $metadata = null;
    
    /**
     * Identifies a counter within a per-job namespace. Counters whose structured names are the same get merged into a single value for the job.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CounterStructuredName $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CounterStructuredName')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CounterStructuredName $name = null;
    
	public function __construct()
	{
		$this->metadata = null;
		$this->name = null;
	}
}
