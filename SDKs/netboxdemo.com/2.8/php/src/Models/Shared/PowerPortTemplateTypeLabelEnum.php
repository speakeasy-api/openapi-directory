<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


enum PowerPortTemplateTypeLabelEnum: string
{
    case C6 = 'C6';
    case C8 = 'C8';
    case C14 = 'C14';
    case C16 = 'C16';
    case C20 = 'C20';
    case P_PLUS_N_PLUS_E4_H = 'P+N+E 4H';
    case P_PLUS_N_PLUS_E6_H = 'P+N+E 6H';
    case P_PLUS_N_PLUS_E9_H = 'P+N+E 9H';
    case TWO_P_PLUS_E4_H = '2P+E 4H';
    case TWO_P_PLUS_E6_H = '2P+E 6H';
    case TWO_P_PLUS_E9_H = '2P+E 9H';
    case THREE_P_PLUS_E4_H = '3P+E 4H';
    case THREE_P_PLUS_E6_H = '3P+E 6H';
    case THREE_P_PLUS_E9_H = '3P+E 9H';
    case THREE_P_PLUS_N_PLUS_E4_H = '3P+N+E 4H';
    case THREE_P_PLUS_N_PLUS_E6_H = '3P+N+E 6H';
    case THREE_P_PLUS_N_PLUS_E9_H = '3P+N+E 9H';
    case NEMA115_P = 'NEMA 1-15P';
    case NEMA515_P = 'NEMA 5-15P';
    case NEMA520_P = 'NEMA 5-20P';
    case NEMA530_P = 'NEMA 5-30P';
    case NEMA550_P = 'NEMA 5-50P';
    case NEMA615_P = 'NEMA 6-15P';
    case NEMA620_P = 'NEMA 6-20P';
    case NEMA630_P = 'NEMA 6-30P';
    case NEMA650_P = 'NEMA 6-50P';
    case NEMA1030_P = 'NEMA 10-30P';
    case NEMA1050_P = 'NEMA 10-50P';
    case NEMA1420_P = 'NEMA 14-20P';
    case NEMA1430_P = 'NEMA 14-30P';
    case NEMA1450_P = 'NEMA 14-50P';
    case NEMA1460_P = 'NEMA 14-60P';
    case NEMA_L115_P = 'NEMA L1-15P';
    case NEMA_L515_P = 'NEMA L5-15P';
    case NEMA_L520_P = 'NEMA L5-20P';
    case NEMA_L530_P = 'NEMA L5-30P';
    case NEMA_L550_P = 'NEMA L5-50P';
    case NEMA_L615_P = 'NEMA L6-15P';
    case NEMA_L620_P = 'NEMA L6-20P';
    case NEMA_L630_P = 'NEMA L6-30P';
    case NEMA_L650_P = 'NEMA L6-50P';
    case NEMA_L1030_P = 'NEMA L10-30P';
    case NEMA_L1420_P = 'NEMA L14-20P';
    case NEMA_L1430_P = 'NEMA L14-30P';
    case NEMA_L1450_P = 'NEMA L14-50P';
    case NEMA_L1460_P = 'NEMA L14-60P';
    case NEMA_L2120_P = 'NEMA L21-20P';
    case NEMA_L2130_P = 'NEMA L21-30P';
    case CS6361_C = 'CS6361C';
    case CS6365_C = 'CS6365C';
    case CS8165_C = 'CS8165C';
    case CS8265_C = 'CS8265C';
    case CS8365_C = 'CS8365C';
    case CS8465_C = 'CS8465C';
    case ITA_TYPE_ECEE75 = 'ITA Type E (CEE 7/5)';
    case ITA_TYPE_FCEE74 = 'ITA Type F (CEE 7/4)';
    case ITA_TYPE_EFCEE77 = 'ITA Type E/F (CEE 7/7)';
    case ITA_TYPE_GBS1363 = 'ITA Type G (BS 1363)';
    case ITA_TYPE_H = 'ITA Type H';
    case ITA_TYPE_I = 'ITA Type I';
    case ITA_TYPE_J = 'ITA Type J';
    case ITA_TYPE_K = 'ITA Type K';
    case ITA_TYPE_LCEI2350 = 'ITA Type L (CEI 23-50)';
    case ITA_TYPE_MBS546 = 'ITA Type M (BS 546)';
    case ITA_TYPE_N = 'ITA Type N';
    case ITA_TYPE_O = 'ITA Type O';
}
