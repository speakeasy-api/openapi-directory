/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MemberAbilityEnum } from "./memberabilityenum";
import { MembershipStatusEnum } from "./membershipstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * The membership object listed by the request.
 */
export class MembershipSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborationArn" })
  collaborationArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborationCreatorAccountId" })
  collaborationCreatorAccountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborationCreatorDisplayName" })
  collaborationCreatorDisplayName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborationId" })
  collaborationId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborationName" })
  collaborationName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memberAbilities" })
  memberAbilities: MemberAbilityEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: MembershipStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
