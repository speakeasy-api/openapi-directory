/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListAssetsQueryParams {
    /**
     * The ID of the asset model by which to filter the list of assets. This parameter is required if you choose &lt;code&gt;ALL&lt;/code&gt; for &lt;code&gt;filter&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=assetModelId")
    public String assetModelId;
    public ListAssetsQueryParams withAssetModelId(String assetModelId) {
        this.assetModelId = assetModelId;
        return this;
    }
    
    /**
     * &lt;p&gt;The filter for the requested list of assets. Choose one of the following options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ALL&lt;/code&gt; \u2013 The list includes all assets for a given asset model ID. The &lt;code&gt;assetModelId&lt;/code&gt; parameter is required if you filter by &lt;code&gt;ALL&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;TOP_LEVEL&lt;/code&gt; \u2013 The list includes only top-level assets in the asset hierarchy tree.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Default: &lt;code&gt;ALL&lt;/code&gt; &lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public ListAssetsFilterEnum filter;
    public ListAssetsQueryParams withFilter(ListAssetsFilterEnum filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * &lt;p&gt;The maximum number of results to return for each paginated request.&lt;/p&gt; &lt;p&gt;Default: 50&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public ListAssetsQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token to be used for the next set of paginated results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListAssetsQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
}
