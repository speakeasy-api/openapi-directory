"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PipeTargetHTTPParameters:
    r"""These are custom parameter to be used when the target is an API Gateway REST APIs or EventBridge ApiDestinations."""
    
    header_parameters: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HeaderParameters'), 'exclude': lambda f: f is None }})  
    path_parameter_values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PathParameterValues'), 'exclude': lambda f: f is None }})  
    query_string_parameters: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryStringParameters'), 'exclude': lambda f: f is None }})  
    