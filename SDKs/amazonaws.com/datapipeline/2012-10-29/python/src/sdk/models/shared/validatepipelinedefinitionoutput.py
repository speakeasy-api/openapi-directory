"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import validationerror as shared_validationerror
from ..shared import validationwarning as shared_validationwarning
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ValidatePipelineDefinitionOutput:
    r"""Contains the output of ValidatePipelineDefinition."""
    
    errored: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errored') }})  
    validation_errors: Optional[list[shared_validationerror.ValidationError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validationErrors'), 'exclude': lambda f: f is None }})  
    validation_warnings: Optional[list[shared_validationwarning.ValidationWarning]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validationWarnings'), 'exclude': lambda f: f is None }})  
    