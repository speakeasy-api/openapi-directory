/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Product - A product is a segment of inventory that a seller wants to sell. It is associated with certain terms and targeting information which helps the buyer know more about the inventory.
 */
public class Product {
    /**
     * The proposed end time for the deal. The field will be truncated to the order of seconds during serving.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableEndTime")
    public String availableEndTime;

    public Product withAvailableEndTime(String availableEndTime) {
        this.availableEndTime = availableEndTime;
        return this;
    }
    
    /**
     * Inventory availability dates. The start time will be truncated to seconds during serving. Thus, a field specified as 3:23:34.456 (HH:mm:ss.SSS) will be truncated to 3:23:34 when serving.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableStartTime")
    public String availableStartTime;

    public Product withAvailableStartTime(String availableStartTime) {
        this.availableStartTime = availableStartTime;
        return this;
    }
    
    /**
     * Creation time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Product withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Optional contact information for the creator of this product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorContacts")
    public ContactInformation[] creatorContacts;

    public Product withCreatorContacts(ContactInformation[] creatorContacts) {
        this.creatorContacts = creatorContacts;
        return this;
    }
    
    /**
     * The display name for this product as set by the seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Product withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * If the creator has already signed off on the product, then the buyer can finalize the deal by accepting the product as is. When copying to a proposal, if any of the terms are changed, then auto_finalize is automatically set to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasCreatorSignedOff")
    public Boolean hasCreatorSignedOff;

    public Product withHasCreatorSignedOff(Boolean hasCreatorSignedOff) {
        this.hasCreatorSignedOff = hasCreatorSignedOff;
        return this;
    }
    
    /**
     * The unique ID for the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productId")
    public String productId;

    public Product withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * The revision number of the product (auto-assigned by Marketplace).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productRevision")
    public String productRevision;

    public Product withProductRevision(String productRevision) {
        this.productRevision = productRevision;
        return this;
    }
    
    /**
     * An ID which can be used by the Publisher Profile API to get more information about the seller that created this product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publisherProfileId")
    public String publisherProfileId;

    public Product withPublisherProfileId(String publisherProfileId) {
        this.publisherProfileId = publisherProfileId;
        return this;
    }
    
    /**
     * Represents a seller of inventory. Each seller is identified by a unique Ad Manager account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seller")
    public Seller seller;

    public Product withSeller(Seller seller) {
        this.seller = seller;
        return this;
    }
    
    /**
     * The syndication product associated with the deal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("syndicationProduct")
    public ProductSyndicationProductEnum syndicationProduct;

    public Product withSyndicationProduct(ProductSyndicationProductEnum syndicationProduct) {
        this.syndicationProduct = syndicationProduct;
        return this;
    }
    
    /**
     * Targeting that is shared between the buyer and the seller. Each targeting criterion has a specified key and for each key there is a list of inclusion value or exclusion values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetingCriterion")
    public TargetingCriteria[] targetingCriterion;

    public Product withTargetingCriterion(TargetingCriteria[] targetingCriterion) {
        this.targetingCriterion = targetingCriterion;
        return this;
    }
    
    /**
     * The deal terms specify the details of a Product/deal. They specify things like price per buyer, the type of pricing model (for example, fixed price, auction) and expected impressions from the publisher.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terms")
    public DealTerms terms;

    public Product withTerms(DealTerms terms) {
        this.terms = terms;
        return this;
    }
    
    /**
     * Time of last update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Product withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * The web-property code for the seller. This needs to be copied as is when adding a new deal to a proposal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webPropertyCode")
    public String webPropertyCode;

    public Product withWebPropertyCode(String webPropertyCode) {
        this.webPropertyCode = webPropertyCode;
        return this;
    }
    
    public Product(){}
}
