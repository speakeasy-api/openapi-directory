// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteDBClusterSnapshotActionEnum
type GETDeleteDBClusterSnapshotActionEnum string

const (
	GETDeleteDBClusterSnapshotActionEnumDeleteDbClusterSnapshot GETDeleteDBClusterSnapshotActionEnum = "DeleteDBClusterSnapshot"
)

func (e *GETDeleteDBClusterSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteDBClusterSnapshot":
		*e = GETDeleteDBClusterSnapshotActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDBClusterSnapshotActionEnum: %s", s)
	}
}

// GETDeleteDBClusterSnapshotVersionEnum
type GETDeleteDBClusterSnapshotVersionEnum string

const (
	GETDeleteDBClusterSnapshotVersionEnumTwoThousandAndFourteen1031 GETDeleteDBClusterSnapshotVersionEnum = "2014-10-31"
)

func (e *GETDeleteDBClusterSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETDeleteDBClusterSnapshotVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDBClusterSnapshotVersionEnum: %s", s)
	}
}

type GETDeleteDBClusterSnapshotQueryParams struct {
	Action GETDeleteDBClusterSnapshotActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The identifier of the cluster snapshot to delete.</p> <p>Constraints: Must be the name of an existing cluster snapshot in the <code>available</code> state.</p>
	DBClusterSnapshotIdentifier string                                `queryParam:"style=form,explode=true,name=DBClusterSnapshotIdentifier"`
	Version                     GETDeleteDBClusterSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteDBClusterSnapshotHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteDBClusterSnapshotRequest struct {
	QueryParams GETDeleteDBClusterSnapshotQueryParams
	Headers     GETDeleteDBClusterSnapshotHeaders
}

type GETDeleteDBClusterSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
