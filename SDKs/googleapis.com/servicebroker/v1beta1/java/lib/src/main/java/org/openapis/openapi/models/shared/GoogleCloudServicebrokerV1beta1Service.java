/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * GoogleCloudServicebrokerV1beta1Service - The resource model mostly follows the Open Service Broker API, as
 * described here:
 * https://github.com/openservicebrokerapi/servicebroker/blob/master/_spec.md
 * Though due to Google Specifics it has additional optional fields.
 */
public class GoogleCloudServicebrokerV1beta1Service {
    /**
     * Specifies whether instances of the service can be bound to applications.
     * Required.
     */
    
    public Boolean bindable;

    public GoogleCloudServicebrokerV1beta1Service withBindable(Boolean bindable) {
        this.bindable = bindable;
        return this;
    }
    
    /**
     * Whether the service provides an endpoint to get service bindings.
     */
    
    public Boolean bindingRetrievable;

    public GoogleCloudServicebrokerV1beta1Service withBindingRetrievable(Boolean bindingRetrievable) {
        this.bindingRetrievable = bindingRetrievable;
        return this;
    }
    
    /**
     * Whether the service provides an endpoint to get service bindings.
     */
    
    public Boolean bindingsRetrievable;

    public GoogleCloudServicebrokerV1beta1Service withBindingsRetrievable(Boolean bindingsRetrievable) {
        this.bindingsRetrievable = bindingsRetrievable;
        return this;
    }
    
    /**
     * Message containing information required to activate Dashboard SSO feature.
     */
    
    public GoogleCloudServicebrokerV1beta1DashboardClient dashboardClient;

    public GoogleCloudServicebrokerV1beta1Service withDashboardClient(GoogleCloudServicebrokerV1beta1DashboardClient dashboardClient) {
        this.dashboardClient = dashboardClient;
        return this;
    }
    
    /**
     * Textual description of the service. Required.
     */
    
    public String description;

    public GoogleCloudServicebrokerV1beta1Service withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * ID is a globally unique identifier used to uniquely identify the service.
     * ID is an opaque string.
     */
    
    public String id;

    public GoogleCloudServicebrokerV1beta1Service withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether the service provides an endpoint to get service instances.
     */
    
    public Boolean instancesRetrievable;

    public GoogleCloudServicebrokerV1beta1Service withInstancesRetrievable(Boolean instancesRetrievable) {
        this.instancesRetrievable = instancesRetrievable;
        return this;
    }
    
    /**
     * A list of metadata for a service offering.
     * Metadata is an arbitrary JSON object.
     */
    
    public java.util.Map<String, Object> metadata;

    public GoogleCloudServicebrokerV1beta1Service withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * User friendly service name.
     * Name must match [a-z0-9]+ regexp.
     * The name must be globally unique within GCP project.
     * Note, which is different from ("This must be globally unique within a
     * platform marketplace").
     * Required.
     */
    
    public String name;

    public GoogleCloudServicebrokerV1beta1Service withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Whether the service supports upgrade/downgrade for some plans.
     */
    
    public Boolean planUpdateable;

    public GoogleCloudServicebrokerV1beta1Service withPlanUpdateable(Boolean planUpdateable) {
        this.planUpdateable = planUpdateable;
        return this;
    }
    
    /**
     * A list of plans for this service.
     * At least one plan is required.
     */
    
    public GoogleCloudServicebrokerV1beta1Plan[] plans;

    public GoogleCloudServicebrokerV1beta1Service withPlans(GoogleCloudServicebrokerV1beta1Plan[] plans) {
        this.plans = plans;
        return this;
    }
    
    /**
     * Tags provide a flexible mechanism to expose a classification, attribute, or
     * base technology of a service.
     */
    
    public String[] tags;

    public GoogleCloudServicebrokerV1beta1Service withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    public GoogleCloudServicebrokerV1beta1Service(){}
}
