// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskEnumStatusEnum string

const (
	TaskEnumStatusEnumPending   TaskEnumStatusEnum = "pending"
	TaskEnumStatusEnumReserved  TaskEnumStatusEnum = "reserved"
	TaskEnumStatusEnumAssigned  TaskEnumStatusEnum = "assigned"
	TaskEnumStatusEnumCanceled  TaskEnumStatusEnum = "canceled"
	TaskEnumStatusEnumCompleted TaskEnumStatusEnum = "completed"
	TaskEnumStatusEnumWrapping  TaskEnumStatusEnum = "wrapping"
)

func (e *TaskEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "reserved":
		fallthrough
	case "assigned":
		fallthrough
	case "canceled":
		fallthrough
	case "completed":
		fallthrough
	case "wrapping":
		*e = TaskEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskEnumStatusEnum: %s", s)
	}
}
