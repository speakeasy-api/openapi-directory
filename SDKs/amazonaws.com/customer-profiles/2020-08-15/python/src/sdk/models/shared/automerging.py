"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import conflictresolution as shared_conflictresolution
from ..shared import consolidation as shared_consolidation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoMerging:
    r"""Configuration settings for how to perform the auto-merging of profiles."""
    
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Enabled') }})  
    conflict_resolution: Optional[shared_conflictresolution.ConflictResolution] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConflictResolution'), 'exclude': lambda f: f is None }})  
    consolidation: Optional[shared_consolidation.Consolidation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Consolidation'), 'exclude': lambda f: f is None }})  
    min_allowed_confidence_score_for_merging: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinAllowedConfidenceScoreForMerging'), 'exclude': lambda f: f is None }})  
    