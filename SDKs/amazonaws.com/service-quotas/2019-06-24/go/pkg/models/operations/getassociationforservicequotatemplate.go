// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetAssociationForServiceQuotaTemplateXAmzTargetEnum
type GetAssociationForServiceQuotaTemplateXAmzTargetEnum string

const (
	GetAssociationForServiceQuotaTemplateXAmzTargetEnumServiceQuotasV20190624GetAssociationForServiceQuotaTemplate GetAssociationForServiceQuotaTemplateXAmzTargetEnum = "ServiceQuotasV20190624.GetAssociationForServiceQuotaTemplate"
)

func (e *GetAssociationForServiceQuotaTemplateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ServiceQuotasV20190624.GetAssociationForServiceQuotaTemplate":
		*e = GetAssociationForServiceQuotaTemplateXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAssociationForServiceQuotaTemplateXAmzTargetEnum: %s", s)
	}
}

type GetAssociationForServiceQuotaTemplateHeaders struct {
	XAmzAlgorithm     *string                                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetAssociationForServiceQuotaTemplateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetAssociationForServiceQuotaTemplateRequest struct {
	Headers GetAssociationForServiceQuotaTemplateHeaders
	Request map[string]interface{} `request:"mediaType=application/json"`
}

type GetAssociationForServiceQuotaTemplateResponse struct {
	// AWSServiceAccessNotEnabledException
	AWSServiceAccessNotEnabledException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// DependencyAccessDeniedException
	DependencyAccessDeniedException interface{}
	// Success
	GetAssociationForServiceQuotaTemplateResponse *shared.GetAssociationForServiceQuotaTemplateResponse
	// NoAvailableOrganizationException
	NoAvailableOrganizationException interface{}
	StatusCode                       int
	RawResponse                      *http.Response
	// ServiceException
	ServiceException interface{}
	// ServiceQuotaTemplateNotInUseException
	ServiceQuotaTemplateNotInUseException interface{}
	// TemplatesNotAvailableInRegionException
	TemplatesNotAvailableInRegionException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
