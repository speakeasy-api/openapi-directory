"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatalabelingv1beta1bigquerysource as shared_googleclouddatalabelingv1beta1bigquerysource
from ..shared import googleclouddatalabelingv1beta1classificationmetadata as shared_googleclouddatalabelingv1beta1classificationmetadata
from ..shared import googleclouddatalabelingv1beta1gcssource as shared_googleclouddatalabelingv1beta1gcssource
from ..shared import googleclouddatalabelingv1beta1textmetadata as shared_googleclouddatalabelingv1beta1textmetadata
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum(str, Enum):
    r"""Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob."""
    ANNOTATION_TYPE_UNSPECIFIED = 'ANNOTATION_TYPE_UNSPECIFIED'
    IMAGE_CLASSIFICATION_ANNOTATION = 'IMAGE_CLASSIFICATION_ANNOTATION'
    IMAGE_BOUNDING_BOX_ANNOTATION = 'IMAGE_BOUNDING_BOX_ANNOTATION'
    IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION = 'IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION'
    IMAGE_BOUNDING_POLY_ANNOTATION = 'IMAGE_BOUNDING_POLY_ANNOTATION'
    IMAGE_POLYLINE_ANNOTATION = 'IMAGE_POLYLINE_ANNOTATION'
    IMAGE_SEGMENTATION_ANNOTATION = 'IMAGE_SEGMENTATION_ANNOTATION'
    VIDEO_SHOTS_CLASSIFICATION_ANNOTATION = 'VIDEO_SHOTS_CLASSIFICATION_ANNOTATION'
    VIDEO_OBJECT_TRACKING_ANNOTATION = 'VIDEO_OBJECT_TRACKING_ANNOTATION'
    VIDEO_OBJECT_DETECTION_ANNOTATION = 'VIDEO_OBJECT_DETECTION_ANNOTATION'
    VIDEO_EVENT_ANNOTATION = 'VIDEO_EVENT_ANNOTATION'
    TEXT_CLASSIFICATION_ANNOTATION = 'TEXT_CLASSIFICATION_ANNOTATION'
    TEXT_ENTITY_EXTRACTION_ANNOTATION = 'TEXT_ENTITY_EXTRACTION_ANNOTATION'
    GENERAL_CLASSIFICATION_ANNOTATION = 'GENERAL_CLASSIFICATION_ANNOTATION'

class GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum(str, Enum):
    r"""Required. Data type must be specifed when user tries to import data."""
    DATA_TYPE_UNSPECIFIED = 'DATA_TYPE_UNSPECIFIED'
    IMAGE = 'IMAGE'
    VIDEO = 'VIDEO'
    TEXT = 'TEXT'
    GENERAL_DATA = 'GENERAL_DATA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatalabelingV1beta1InputConfig:
    r"""The configuration of input data, including data type, location, etc."""
    
    annotation_type: Optional[GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('annotationType'), 'exclude': lambda f: f is None }})
    r"""Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob."""  
    bigquery_source: Optional[shared_googleclouddatalabelingv1beta1bigquerysource.GoogleCloudDatalabelingV1beta1BigQuerySource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigquerySource'), 'exclude': lambda f: f is None }})
    r"""The BigQuery location for input data. If used in an EvaluationJob, this is where the service saves the prediction input and output sampled from the model version."""  
    classification_metadata: Optional[shared_googleclouddatalabelingv1beta1classificationmetadata.GoogleCloudDatalabelingV1beta1ClassificationMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('classificationMetadata'), 'exclude': lambda f: f is None }})
    r"""Metadata for classification annotations."""  
    data_type: Optional[GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataType'), 'exclude': lambda f: f is None }})
    r"""Required. Data type must be specifed when user tries to import data."""  
    gcs_source: Optional[shared_googleclouddatalabelingv1beta1gcssource.GoogleCloudDatalabelingV1beta1GcsSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcsSource'), 'exclude': lambda f: f is None }})
    r"""Source of the Cloud Storage file to be imported."""  
    text_metadata: Optional[shared_googleclouddatalabelingv1beta1textmetadata.GoogleCloudDatalabelingV1beta1TextMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textMetadata'), 'exclude': lambda f: f is None }})
    r"""Metadata for the text."""  
    