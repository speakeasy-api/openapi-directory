/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const GetV1ServerList = [
  "https://ipgeolocation.abstractapi.com",
] as const;

export class GetV1Request extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=api_key",
  })
  apiKey: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ip_address",
  })
  ipAddress?: string;
}

export class GetV1Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Location of geolocated IP
   */
  @SpeakeasyMetadata()
  inlineResponse200?: shared.InlineResponse200;
}
