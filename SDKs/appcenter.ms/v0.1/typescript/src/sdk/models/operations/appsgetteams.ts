/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AppsGetTeamsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class AppsGetTeamsRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum AppsGetTeamsDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class AppsGetTeamsDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: AppsGetTeamsDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class AppsGetTeamsDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => AppsGetTeamsDefaultApplicationJSONError)
  error: AppsGetTeamsDefaultApplicationJSONError;
}

export enum AppsGetTeams200ApplicationJSONPermissionsEnum {
  Manager = "manager",
  Developer = "developer",
  Viewer = "viewer",
  Tester = "tester",
}

export class AppsGetTeams200ApplicationJSON extends SpeakeasyBase {
  /**
   * The description of the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The display name of the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The internal unique id (UUID) of the team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The name of the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The permissions the team has for the app
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: AppsGetTeams200ApplicationJSONPermissionsEnum[];
}

export class AppsGetTeamsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: AppsGetTeams200ApplicationJSON })
  appsGetTeams200ApplicationJSONAnies?: AppsGetTeams200ApplicationJSON[];

  /**
   * Error
   */
  @SpeakeasyMetadata()
  appsGetTeamsDefaultApplicationJSONObject?: AppsGetTeamsDefaultApplicationJSON;
}
