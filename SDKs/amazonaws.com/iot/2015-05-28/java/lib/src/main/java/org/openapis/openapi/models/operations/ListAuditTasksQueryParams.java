/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListAuditTasksQueryParams {
    /**
     * The end of the time period.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endTime")
    public OffsetDateTime endTime;
    public ListAuditTasksQueryParams withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The maximum number of results to return at one time. The default is 25.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public ListAuditTasksQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token for the next set of results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListAuditTasksQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * The beginning of the time period. Audit information is retained for a limited time (90 days). Requesting a start time prior to what is retained results in an "InvalidRequestException".
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startTime")
    public OffsetDateTime startTime;
    public ListAuditTasksQueryParams withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * A filter to limit the output to audits with the specified completion status: can be one of "IN_PROGRESS", "COMPLETED", "FAILED", or "CANCELED".
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=taskStatus")
    public ListAuditTasksTaskStatusEnum taskStatus;
    public ListAuditTasksQueryParams withTaskStatus(ListAuditTasksTaskStatusEnum taskStatus) {
        this.taskStatus = taskStatus;
        return this;
    }
    
    /**
     * A filter to limit the output to the specified type of audit: can be one of "ON_DEMAND_AUDIT_TASK" or "SCHEDULED__AUDIT_TASK".
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=taskType")
    public ListAuditTasksTaskTypeEnum taskType;
    public ListAuditTasksQueryParams withTaskType(ListAuditTasksTaskTypeEnum taskType) {
        this.taskType = taskType;
        return this;
    }
    
}
