// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type StoresListSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type StoresListRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type StoresList200ApplicationJSONIntuneDetailsAppCategory struct {
	// ID for the category.
	ID *string `json:"id,omitempty"`
	// display name for the app category
	Name *string `json:"name,omitempty"`
}

type StoresList200ApplicationJSONIntuneDetailsTargetAudience struct {
	// ID for the target audience/group.
	ID *string `json:"id,omitempty"`
	// display name for the target audience/group
	Name *string `json:"name,omitempty"`
}

// StoresList200ApplicationJSONIntuneDetails - Store details for intune
type StoresList200ApplicationJSONIntuneDetails struct {
	AppCategory    *StoresList200ApplicationJSONIntuneDetailsAppCategory    `json:"app_category,omitempty"`
	TargetAudience *StoresList200ApplicationJSONIntuneDetailsTargetAudience `json:"target_audience,omitempty"`
}

// StoresList200ApplicationJSONTrackEnum - Store track
type StoresList200ApplicationJSONTrackEnum string

const (
	StoresList200ApplicationJSONTrackEnumProduction         StoresList200ApplicationJSONTrackEnum = "production"
	StoresList200ApplicationJSONTrackEnumAlpha              StoresList200ApplicationJSONTrackEnum = "alpha"
	StoresList200ApplicationJSONTrackEnumBeta               StoresList200ApplicationJSONTrackEnum = "beta"
	StoresList200ApplicationJSONTrackEnumTestflightInternal StoresList200ApplicationJSONTrackEnum = "testflight-internal"
	StoresList200ApplicationJSONTrackEnumTestflightExternal StoresList200ApplicationJSONTrackEnum = "testflight-external"
)

func (e StoresList200ApplicationJSONTrackEnum) ToPointer() *StoresList200ApplicationJSONTrackEnum {
	return &e
}

func (e *StoresList200ApplicationJSONTrackEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "production":
		fallthrough
	case "alpha":
		fallthrough
	case "beta":
		fallthrough
	case "testflight-internal":
		fallthrough
	case "testflight-external":
		*e = StoresList200ApplicationJSONTrackEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StoresList200ApplicationJSONTrackEnum: %v", v)
	}
}

// StoresList200ApplicationJSON - ExternalStoreResponse
type StoresList200ApplicationJSON struct {
	// The ID of the principal that created the store.
	CreatedBy *string `json:"created_by,omitempty"`
	// The type of the principal that created the store.
	CreatedByPrincipalType *string `json:"created_by_principal_type,omitempty"`
	// Store id
	ID *string `json:"id,omitempty"`
	// Store details for intune
	IntuneDetails *StoresList200ApplicationJSONIntuneDetails `json:"intune_details,omitempty"`
	// Store Name
	Name *string `json:"name,omitempty"`
	// Id for the shared service connection. In case of Apple / GooglePlay stores, this connection will be used to connect to the Apple / Google stores in App Center.
	ServiceConnectionID *string `json:"service_connection_id,omitempty"`
	// Store track
	Track *StoresList200ApplicationJSONTrackEnum `json:"track,omitempty"`
	// Store Type
	Type *string `json:"type,omitempty"`
}

type StoresListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	StoresList200ApplicationJSONObjects []StoresList200ApplicationJSON
}
