// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type OrgInvitationsUpdateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// OrgInvitationsUpdateRequestBodyRoleEnum - The user's role in the organizatiion
type OrgInvitationsUpdateRequestBodyRoleEnum string

const (
	OrgInvitationsUpdateRequestBodyRoleEnumAdmin        OrgInvitationsUpdateRequestBodyRoleEnum = "admin"
	OrgInvitationsUpdateRequestBodyRoleEnumCollaborator OrgInvitationsUpdateRequestBodyRoleEnum = "collaborator"
	OrgInvitationsUpdateRequestBodyRoleEnumMember       OrgInvitationsUpdateRequestBodyRoleEnum = "member"
)

func (e *OrgInvitationsUpdateRequestBodyRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "admin":
		fallthrough
	case "collaborator":
		fallthrough
	case "member":
		*e = OrgInvitationsUpdateRequestBodyRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgInvitationsUpdateRequestBodyRoleEnum: %s", s)
	}
}

// OrgInvitationsUpdateRequestBody - The new role of the user
type OrgInvitationsUpdateRequestBody struct {
	// The user's role in the organizatiion
	Role *OrgInvitationsUpdateRequestBodyRoleEnum `json:"role,omitempty"`
}

type OrgInvitationsUpdateRequest struct {
	// The new role of the user
	RequestBody OrgInvitationsUpdateRequestBody `request:"mediaType=application/json"`
	// The email address of the user to send the password reset mail to.
	Email string `pathParam:"style=simple,explode=false,name=email"`
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

type OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum string

const (
	OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnumBadRequest          OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnumConflict            OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnumNotAcceptable       OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnumNotFound            OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnumInternalServerError OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnumUnauthorized        OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnumTooManyRequests     OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type OrgInvitationsUpdateDefaultApplicationJSONError struct {
	Code    OrgInvitationsUpdateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                  `json:"message"`
}

// OrgInvitationsUpdateDefaultApplicationJSON - Error
type OrgInvitationsUpdateDefaultApplicationJSON struct {
	Error OrgInvitationsUpdateDefaultApplicationJSONError `json:"error"`
}

type OrgInvitationsUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	OrgInvitationsUpdateDefaultApplicationJSONObject *OrgInvitationsUpdateDefaultApplicationJSON
}
