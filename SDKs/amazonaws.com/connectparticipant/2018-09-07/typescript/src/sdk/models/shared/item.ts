/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttachmentItem } from "./attachmentitem";
import { ChatItemTypeEnum } from "./chatitemtypeenum";
import { MessageMetadata } from "./messagemetadata";
import { ParticipantRoleEnum } from "./participantroleenum";
import { Expose, Type } from "class-transformer";

/**
 * An item - message or event - that has been sent.
 */
export class Item extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AbsoluteTime" })
  absoluteTime?: string;

  @SpeakeasyMetadata({ elemType: AttachmentItem })
  @Expose({ name: "Attachments" })
  @Type(() => AttachmentItem)
  attachments?: AttachmentItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "ContactId" })
  contactId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Content" })
  content?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ContentType" })
  contentType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MessageMetadata" })
  @Type(() => MessageMetadata)
  messageMetadata?: MessageMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "ParticipantId" })
  participantId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParticipantRole" })
  participantRole?: ParticipantRoleEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RelatedContactId" })
  relatedContactId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: ChatItemTypeEnum;
}
