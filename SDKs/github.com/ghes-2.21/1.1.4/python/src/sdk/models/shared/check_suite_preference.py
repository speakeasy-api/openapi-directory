"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import minimal_repository as shared_minimal_repository
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CheckSuitePreferencePreferencesAutoTriggerChecks:
    
    app_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('app_id') }})  
    setting: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setting') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CheckSuitePreferencePreferences:
    
    auto_trigger_checks: Optional[list[CheckSuitePreferencePreferencesAutoTriggerChecks]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_trigger_checks'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CheckSuitePreference:
    r"""Check suite configuration preferences for a repository."""
    
    preferences: CheckSuitePreferencePreferences = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preferences') }})  
    repository: shared_minimal_repository.MinimalRepository = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repository') }})
    r"""Minimal Repository"""  
    