/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ComponentStatusEnum } from "./componentstatusenum";
import { ComponentTypeEnum } from "./componenttypeenum";
import { Host } from "./host";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The SAP component of your application.
 */
export class Component extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationId" })
  applicationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ComponentId" })
  componentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ComponentType" })
  componentType?: ComponentTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Databases" })
  databases?: string[];

  @SpeakeasyMetadata({ elemType: Host })
  @Expose({ name: "Hosts" })
  @Type(() => Host)
  hosts?: Host[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "PrimaryHost" })
  primaryHost?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ComponentStatusEnum;
}
