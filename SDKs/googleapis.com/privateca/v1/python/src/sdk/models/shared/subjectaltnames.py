"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import x509extension as shared_x509extension
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubjectAltNames:
    r"""SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the \\"common name\\" in the distinguished name)."""
    
    custom_sans: Optional[list[shared_x509extension.X509Extension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customSans'), 'exclude': lambda f: f is None }})
    r"""Contains additional subject alternative name values. For each custom_san, the `value` field must contain an ASN.1 encoded UTF8String."""  
    dns_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnsNames'), 'exclude': lambda f: f is None }})
    r"""Contains only valid, fully-qualified host names."""  
    email_addresses: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailAddresses'), 'exclude': lambda f: f is None }})
    r"""Contains only valid RFC 2822 E-mail addresses."""  
    ip_addresses: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipAddresses'), 'exclude': lambda f: f is None }})
    r"""Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses."""  
    uris: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uris'), 'exclude': lambda f: f is None }})
    r"""Contains only valid RFC 3986 URIs."""  
    