/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Cancellations } from "./cancellations";
import { Fields1 } from "./fields1";
import { Interactions } from "./interactions";
import { Payments } from "./payments";
import { Refunds } from "./refunds";
import { Settlements } from "./settlements";
import { Expose, Type } from "class-transformer";

export class TransactionDetailsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "acceptHeader" })
  acceptHeader: string;

  @SpeakeasyMetadata()
  @Expose({ name: "antifraudAffiliationId" })
  antifraudAffiliationId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "antifraudTid" })
  antifraudTid: string;

  @SpeakeasyMetadata()
  @Expose({ name: "authorizationDate" })
  authorizationDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "authorizationToken" })
  authorizationToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "buyer" })
  buyer: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cancelationDate" })
  cancelationDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cancelationToken" })
  cancelationToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "cancellations" })
  @Type(() => Cancellations)
  cancellations: Cancellations;

  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commitmentDate" })
  commitmentDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commitmentToken" })
  commitmentToken: string;

  @SpeakeasyMetadata({ elemType: Fields1 })
  @Expose({ name: "fields" })
  @Type(() => Fields1)
  fields: Fields1[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "interactions" })
  @Type(() => Interactions)
  interactions: Interactions;

  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress: string;

  @SpeakeasyMetadata()
  @Expose({ name: "markedForRecurrence" })
  markedForRecurrence: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payments" })
  @Type(() => Payments)
  payments: Payments;

  @SpeakeasyMetadata()
  @Expose({ name: "receiverUri" })
  receiverUri: string;

  @SpeakeasyMetadata()
  @Expose({ name: "referenceKey" })
  referenceKey: string;

  @SpeakeasyMetadata()
  @Expose({ name: "refundingDate" })
  refundingDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "refundingToken" })
  refundingToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "refunds" })
  @Type(() => Refunds)
  refunds: Refunds;

  @SpeakeasyMetadata()
  @Expose({ name: "salesChannel" })
  salesChannel: string;

  @SpeakeasyMetadata()
  @Expose({ name: "settlements" })
  @Type(() => Settlements)
  settlements: Settlements;

  @SpeakeasyMetadata()
  @Expose({ name: "softDescriptor" })
  softDescriptor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  startDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutStatus" })
  timeoutStatus: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalRefunds" })
  totalRefunds: number;

  @SpeakeasyMetadata()
  @Expose({ name: "transactionId" })
  transactionId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "urn" })
  urn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userAgent" })
  userAgent: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}
