"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import checkresponse as shared_checkresponse
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BulkCheckResponseBulkErrorCodeEnum(str, Enum):
    r"""Error code for the entire request. Present only if the entire request failed. Individual check errors will not trigger the presence of this field."""
    ERROR_CODE_UNSPECIFIED = 'ERROR_CODE_UNSPECIFIED'
    ERROR_CODE_INVALID_QUERY = 'ERROR_CODE_INVALID_QUERY'
    ERROR_CODE_FETCH_ERROR = 'ERROR_CODE_FETCH_ERROR'
    ERROR_CODE_FAILED_SSL_VALIDATION = 'ERROR_CODE_FAILED_SSL_VALIDATION'
    ERROR_CODE_REDIRECT = 'ERROR_CODE_REDIRECT'
    ERROR_CODE_TOO_LARGE = 'ERROR_CODE_TOO_LARGE'
    ERROR_CODE_MALFORMED_HTTP_RESPONSE = 'ERROR_CODE_MALFORMED_HTTP_RESPONSE'
    ERROR_CODE_WRONG_CONTENT_TYPE = 'ERROR_CODE_WRONG_CONTENT_TYPE'
    ERROR_CODE_MALFORMED_CONTENT = 'ERROR_CODE_MALFORMED_CONTENT'
    ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE = 'ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE'
    ERROR_CODE_FETCH_BUDGET_EXHAUSTED = 'ERROR_CODE_FETCH_BUDGET_EXHAUSTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BulkCheckResponse:
    r"""Response for BulkCheck call. Results are sent in a list in the same order in which they were sent. Individual check errors are described in the appropriate check_results entry. If the entire call fails, the response will include a bulk_error_code field describing the error."""
    
    bulk_error_code: Optional[BulkCheckResponseBulkErrorCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bulkErrorCode'), 'exclude': lambda f: f is None }})
    r"""Error code for the entire request. Present only if the entire request failed. Individual check errors will not trigger the presence of this field."""  
    check_results: Optional[list[shared_checkresponse.CheckResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checkResults'), 'exclude': lambda f: f is None }})
    r"""List of results for each check request. Results are returned in the same order in which they were sent in the request."""  
    