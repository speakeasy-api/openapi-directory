"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import forum_forumrecruitmentdetail as shared_forum_forumrecruitmentdetail
from ..shared import forum_pollresponse as shared_forum_pollresponse
from ..shared import forum_postresponse as shared_forum_postresponse
from ..shared import groupsv2_groupresponse as shared_groupsv2_groupresponse
from ..shared import queries_pagedquery as shared_queries_pagedquery
from ..shared import tags_models_contracts_tagresponse as shared_tags_models_contracts_tagresponse
from ..shared import user_generaluser as shared_user_generaluser
from typing import Optional


@dataclasses.dataclass
class ForumPostSearchResponse:
    
    authors: Optional[list[shared_user_generaluser.UserGeneralUser]] = dataclasses.field(default=None)  
    available_pages: Optional[int] = dataclasses.field(default=None)  
    groups: Optional[list[shared_groupsv2_groupresponse.GroupsV2GroupResponse]] = dataclasses.field(default=None)  
    has_more: Optional[bool] = dataclasses.field(default=None)  
    polls: Optional[list[shared_forum_pollresponse.ForumPollResponse]] = dataclasses.field(default=None)  
    query: Optional[shared_queries_pagedquery.QueriesPagedQuery] = dataclasses.field(default=None)  
    recruitment_details: Optional[list[shared_forum_forumrecruitmentdetail.ForumForumRecruitmentDetail]] = dataclasses.field(default=None)  
    related_posts: Optional[list[shared_forum_postresponse.ForumPostResponse]] = dataclasses.field(default=None)  
    replacement_continuation_token: Optional[str] = dataclasses.field(default=None)  
    results: Optional[list[shared_forum_postresponse.ForumPostResponse]] = dataclasses.field(default=None)  
    searched_tags: Optional[list[shared_tags_models_contracts_tagresponse.TagsModelsContractsTagResponse]] = dataclasses.field(default=None)  
    total_results: Optional[int] = dataclasses.field(default=None)  
    use_total_results: Optional[bool] = dataclasses.field(default=None)
    r"""If useTotalResults is true, then totalResults represents an accurate count.
    If False, it does not, and may be estimated/only the size of the current page.
    Either way, you should probably always only trust hasMore.
    This is a long-held historical throwback to when we used to do paging with known total results. Those queries toasted our database, and we were left to hastily alter our endpoints and create backward- compatible shims, of which useTotalResults is one.
    """  
    