// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTRebootClusterActionEnum
type POSTRebootClusterActionEnum string

const (
	POSTRebootClusterActionEnumRebootCluster POSTRebootClusterActionEnum = "RebootCluster"
)

func (e POSTRebootClusterActionEnum) ToPointer() *POSTRebootClusterActionEnum {
	return &e
}

func (e *POSTRebootClusterActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RebootCluster":
		*e = POSTRebootClusterActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRebootClusterActionEnum: %v", v)
	}
}

// POSTRebootClusterVersionEnum
type POSTRebootClusterVersionEnum string

const (
	POSTRebootClusterVersionEnumTwoThousandAndTwelve1201 POSTRebootClusterVersionEnum = "2012-12-01"
)

func (e POSTRebootClusterVersionEnum) ToPointer() *POSTRebootClusterVersionEnum {
	return &e
}

func (e *POSTRebootClusterVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = POSTRebootClusterVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRebootClusterVersionEnum: %v", v)
	}
}

type POSTRebootClusterRequest struct {
	Action            POSTRebootClusterActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                       `request:"mediaType=text/xml"`
	Version           POSTRebootClusterVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTRebootClusterResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
