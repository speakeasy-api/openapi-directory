/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GETPaymentRunDataTransactionElementResponse {
    /**
     * The total amount of the newly generated payment.
     * 
     * **Note:** This field is only available if `type` is `Payment`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public GETPaymentRunDataTransactionElementResponse withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The amount applied to the record.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedAmount")
    public Double appliedAmount;
    public GETPaymentRunDataTransactionElementResponse withAppliedAmount(Double appliedAmount) {
        this.appliedAmount = appliedAmount;
        return this;
    }
    
    /**
     * The error code of the response.
     * 
     * **Note:** This field is only available if `type` is `Payment`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorCode")
    public String errorCode;
    public GETPaymentRunDataTransactionElementResponse withErrorCode(String errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    /**
     * The detailed information of the error response.
     * 
     * **Note:** This field is only available if `type` is `Payment`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;
    public GETPaymentRunDataTransactionElementResponse withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * The ID of the current transaction.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETPaymentRunDataTransactionElementResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The status of the newly generated payment.
     * 
     * **Note:** This field is only available if `type` is `Payment`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GETPaymentRunDataTransactionElementResponseStatusEnum status;
    public GETPaymentRunDataTransactionElementResponse withStatus(GETPaymentRunDataTransactionElementResponseStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The type of the current transaction.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public GETPaymentRunDataTransactionElementResponseTypeEnum type;
    public GETPaymentRunDataTransactionElementResponse withType(GETPaymentRunDataTransactionElementResponseTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
