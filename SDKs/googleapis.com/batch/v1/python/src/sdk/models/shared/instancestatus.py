"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import disk as shared_disk
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InstanceStatusProvisioningModelEnum(str, Enum):
    r"""The VM instance provisioning model."""
    PROVISIONING_MODEL_UNSPECIFIED = 'PROVISIONING_MODEL_UNSPECIFIED'
    STANDARD = 'STANDARD'
    SPOT = 'SPOT'
    PREEMPTIBLE = 'PREEMPTIBLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InstanceStatus:
    r"""VM instance status."""
    
    boot_disk: Optional[shared_disk.Disk] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bootDisk'), 'exclude': lambda f: f is None }})
    r"""A new persistent disk or a local ssd. A VM can only have one local SSD setting but multiple local SSD partitions. See https://cloud.google.com/compute/docs/disks#pdspecs and https://cloud.google.com/compute/docs/disks#localssds."""  
    machine_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineType'), 'exclude': lambda f: f is None }})
    r"""The Compute Engine machine type."""  
    provisioning_model: Optional[InstanceStatusProvisioningModelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provisioningModel'), 'exclude': lambda f: f is None }})
    r"""The VM instance provisioning model."""  
    task_pack: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskPack'), 'exclude': lambda f: f is None }})
    r"""The max number of tasks can be assigned to this instance type."""  
    