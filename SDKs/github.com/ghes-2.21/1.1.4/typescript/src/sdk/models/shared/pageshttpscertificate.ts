/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum PagesHttpsCertificateStateEnum {
  New = "new",
  AuthorizationCreated = "authorization_created",
  AuthorizationPending = "authorization_pending",
  Authorized = "authorized",
  AuthorizationRevoked = "authorization_revoked",
  Issued = "issued",
  Uploaded = "uploaded",
  Approved = "approved",
  Errored = "errored",
  BadAuthz = "bad_authz",
  DestroyPending = "destroy_pending",
  DnsChanged = "dns_changed",
}

export class PagesHttpsCertificate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Array of the domain set and its alternate name (if it is configured)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domains" })
  domains: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: PagesHttpsCertificateStateEnum;
}
