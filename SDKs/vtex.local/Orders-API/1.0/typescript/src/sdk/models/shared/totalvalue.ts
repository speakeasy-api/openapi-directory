/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Facets } from "./facets";
import { Expose, Type } from "class-transformer";

export class TotalValue extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Facets" })
  @Type(() => Facets)
  facets: Facets;

  @SpeakeasyMetadata()
  @Expose({ name: "Max" })
  max: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Mean" })
  mean: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Min" })
  min: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Missing" })
  missing: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StdDev" })
  stdDev: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Sum" })
  sum: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SumOfSquares" })
  sumOfSquares: number;
}
