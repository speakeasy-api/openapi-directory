/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TextDetection - &lt;p&gt;Information about a word or line of text detected by &lt;a&gt;DetectText&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;DetectedText&lt;/code&gt; field contains the text that Amazon Rekognition detected in the image. &lt;/p&gt; &lt;p&gt;Every word and line has an identifier (&lt;code&gt;Id&lt;/code&gt;). Each word belongs to a line and has a parent identifier (&lt;code&gt;ParentId&lt;/code&gt;) that identifies the line of text in which the word appears. The word &lt;code&gt;Id&lt;/code&gt; is also an index for the word within a line of words. &lt;/p&gt; &lt;p&gt;For more information, see Detecting text in the Amazon Rekognition Developer Guide.&lt;/p&gt;
 */
public class TextDetection {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Confidence")
    public Float confidence;
    public TextDetection withConfidence(Float confidence) {
        this.confidence = confidence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DetectedText")
    public String detectedText;
    public TextDetection withDetectedText(String detectedText) {
        this.detectedText = detectedText;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Geometry")
    public Geometry geometry;
    public TextDetection withGeometry(Geometry geometry) {
        this.geometry = geometry;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Long id;
    public TextDetection withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ParentId")
    public Long parentId;
    public TextDetection withParentId(Long parentId) {
        this.parentId = parentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public TextTypesEnum type;
    public TextDetection withType(TextTypesEnum type) {
        this.type = type;
        return this;
    }
    
}
