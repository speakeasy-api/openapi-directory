/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Status of the account tax exemption. Applicable if you use Zuora Tax or Connect tax engines. Required if you use Zuora Tax.
 *
 * @remarks
 *
 */
export enum TaxInfoExemptStatusEnum {
  No = "No",
  Yes = "Yes",
  PendingVerification = "PendingVerification",
}

/**
 * Information about the tax exempt status of a customer account.
 *
 * @remarks
 *
 */
export class TaxInfo extends SpeakeasyBase {
  /**
   * EU Value Added Tax ID.
   *
   * @remarks
   *
   * **Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com).
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "VATId" })
  vatId?: string;

  /**
   * Unique code that identifies a company account in Avalara. Use this field to calculate taxes based on origin and sold-to addresses in Avalara.
   *
   * @remarks
   *
   * **Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com).
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyCode" })
  companyCode?: string;

  /**
   * ID of the customer tax exemption certificate. Applicable if you use Zuora Tax or Connect tax engines.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptCertificateId" })
  exemptCertificateId?: string;

  /**
   * Type of tax exemption certificate that the customer holds. Applicable if you use Zuora Tax or Connect tax engines.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptCertificateType" })
  exemptCertificateType?: string;

  /**
   * Description of the tax exemption certificate that the customer holds. Applicable if you use Zuora Tax or Connect tax engines.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptDescription" })
  exemptDescription?: string;

  /**
   * Date when the customer tax exemption starts, in YYYY-MM-DD format. Applicable if you use Zuora Tax or Connect tax engines.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptEffectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  exemptEffectiveDate?: Date;

  /**
   * Date when the customer tax exemption expires, in YYYY-MM-DD format. Applicable if you use Zuora Tax or Connect tax engines.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptExpirationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  exemptExpirationDate?: Date;

  /**
   * Jurisdiction in which the customer tax exemption certificate was issued.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptIssuingJurisdiction" })
  exemptIssuingJurisdiction?: string;

  /**
   * Status of the account tax exemption. Applicable if you use Zuora Tax or Connect tax engines. Required if you use Zuora Tax.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exemptStatus" })
  exemptStatus?: TaxInfoExemptStatusEnum;
}
