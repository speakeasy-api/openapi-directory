<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PUTSrpUpdateType - Container for custom fields of a Rate Plan object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PUTSrpUpdateType
{
    /**
     * Container for one or more product rate plan charges. 
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PUTScUpdateType> $chargeUpdateDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('chargeUpdateDetails')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PUTScUpdateType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $chargeUpdateDetails = null;
    
    /**
     * The date when the amendment changes take effect. The format of the date is yyyy-mm-dd.
     * 
     * 
     * If there is already a future-dated Update Product amendment on the subscription, the `specificUpdateDate` field will be used instead of this field to specify when the Update Product amendment takes effect.
     * 
     * 
     * @var \DateTime $contractEffectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('contractEffectiveDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $contractEffectiveDate;
    
    /**
     * The date when the customer accepts the contract in yyyy-mm-dd format.
     * 
     * 
     * If this field is not set:
     * 
     * * If the `serviceActivationDate` field is not set, the value of this field is set to be the contract effective date.
     * * If the `serviceActivationDate` field is set, the value of this field is set to be the service activation date.
     * 
     * The billing trigger dates must follow this rule:
     * 
     * contractEffectiveDate <= serviceActivationDate <= contractAcceptanceDate
     * 
     * 
     * @var ?\DateTime $customerAcceptanceDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('customerAcceptanceDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $customerAcceptanceDate = null;
    
    /**
     * ID of a rate plan for this subscription.
     * 
     * 
     * 
     * @var string $ratePlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ratePlanId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ratePlanId;
    
    /**
     * The date when the update amendment is activated in yyyy-mm-dd format.
     * 
     * 
     * You must specify a Service Activation date if the Customer Acceptance date is set. If the Customer Acceptance date is not set, the value of the `serviceActivationDate` field defaults to be the Contract Effective Date.
     * 
     * The billing trigger dates must follow this rule:
     * 
     * contractEffectiveDate <= serviceActivationDate <= contractAcceptanceDate
     * 
     * 
     * @var ?\DateTime $serviceActivationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceActivationDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $serviceActivationDate = null;
    
    /**
     * The date when the Update Product amendment takes effect. This field is only applicable if there is already a future-dated Update Product amendment on the subscription. The format of the date is yyyy-mm-dd.
     * 
     * 
     * Required only for Update Product amendments if there is already a future-dated Update Product amendment on the subscription.
     * 
     * 
     * @var ?\DateTime $specificUpdateDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('specificUpdateDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $specificUpdateDate = null;
    
	public function __construct()
	{
		$this->chargeUpdateDetails = null;
		$this->contractEffectiveDate = new \DateTime();
		$this->customerAcceptanceDate = null;
		$this->ratePlanId = "";
		$this->serviceActivationDate = null;
		$this->specificUpdateDate = null;
	}
}
