// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopProcessingJobXAmzTargetEnum
type StopProcessingJobXAmzTargetEnum string

const (
	StopProcessingJobXAmzTargetEnumSageMakerStopProcessingJob StopProcessingJobXAmzTargetEnum = "SageMaker.StopProcessingJob"
)

func (e *StopProcessingJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SageMaker.StopProcessingJob":
		*e = StopProcessingJobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopProcessingJobXAmzTargetEnum: %s", s)
	}
}

type StopProcessingJobRequest struct {
	StopProcessingJobRequest shared.StopProcessingJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               StopProcessingJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopProcessingJobResponse struct {
	ContentType string
	// ResourceNotFound
	ResourceNotFound interface{}
	StatusCode       int
	RawResponse      *http.Response
}
