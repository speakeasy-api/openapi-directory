// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type BookingAvailabilityHeaders struct {
	// Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
	//
	AcceptLanguage string `header:"style=simple,explode=false,name=Accept-Language"`
}

type BookingAvailabilityRequestBodyAgeBands struct {
	// **unique numeric identifier** for the age band
	// - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
	//
	BandID *int64 `json:"bandId,omitempty"`
	// **number of people** in *this* age band
	Count *int64 `json:"count,omitempty"`
}

type BookingAvailabilityRequestBody struct {
	// **array of objects** specifying the age bands by which to to filter search results
	AgeBands []BookingAvailabilityRequestBodyAgeBands `json:"ageBands,omitempty"`
	// **currency code** for the currency in which to display tour grade pricing information
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// **month component** (text format) of the start of the date range for which to retrieve tour grade availability information (must be in the future)
	Month *string `json:"month,omitempty"`
	// **unique alphanumeric identifier** of the product for which you wish to retrieve tour grade availability information
	ProductCode *string `json:"productCode,omitempty"`
	// **year component** (text format) of the start of the date range for which to retrieve tour grade availability information (must be in the future)
	Year *string `json:"year,omitempty"`
}

type BookingAvailabilityRequest struct {
	Headers BookingAvailabilityHeaders
	Request *BookingAvailabilityRequestBody `request:"mediaType=application/json"`
}

type BookingAvailability200ApplicationJSONDataAvailability struct {
	// **indicator** - `true` if *this* tour grade is available to book
	Available *bool `json:"available,omitempty"`
	// **date** on which *this* tour grade is available to be booked
	BookingDate *string `json:"bookingDate,omitempty"`
	// **currency code** of the currency in which product pricing is displayed
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// **alphanumeric identifier** for *this* tour grade
	GradeCode *string `json:"gradeCode,omitempty"`
	// **numeric merchant net rate** for *this* tour grade
	// - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
	//
	MerchantNetPrice *float64 `json:"merchantNetPrice,omitempty"`
	// **currency-formatted merchant net rate** for *this* tour grade
	// - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
	//
	MerchantNetPriceFormatted *string `json:"merchantNetPriceFormatted,omitempty"`
	// **numeric suggested retail price** for *this* tour grade
	// - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
	//
	RetailPrice *float64 `json:"retailPrice,omitempty"`
	// **currency-formatted suggested retail price** for *this* tour grade
	// - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
	//
	RetailPriceFormatted *string `json:"retailPriceFormatted,omitempty"`
	// **sort order** of this tour grade availability object
	SortOrder *int64 `json:"sortOrder,omitempty"`
	// **natural-language explanation** as to why *this* tour grade is not available to be booked
	UnavailableReason *string `json:"unavailableReason,omitempty"`
}

// BookingAvailability200ApplicationJSONData - **object** detailing available tourgrades for the specified age bands and date range for this product
type BookingAvailability200ApplicationJSONData struct {
	// **array** of tour grade availability objects
	Availability []BookingAvailability200ApplicationJSONDataAvailability `json:"availability,omitempty"`
	// **first available date** (in plain text format) for the tour grade
	FirstAvailableDate *string `json:"firstAvailableDate,omitempty"`
	// **last available date** for the tour grade
	LastAvailableDate *string `json:"lastAvailableDate,omitempty"`
	// **unique alphanumeric identifer** of the product that was specified in the request
	ProductCode *string `json:"productCode,omitempty"`
}

// BookingAvailability200ApplicationJSON - Success
type BookingAvailability200ApplicationJSON struct {
	// **object** detailing available tourgrades for the specified age bands and date range for this product
	Data *BookingAvailability200ApplicationJSONData `json:"data,omitempty"`
	// **timestamp** of *this* response
	DateStamp *string `json:"dateStamp,omitempty"`
	// **array** of error codes pertaining to *this* error
	// - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
	//
	ErrorCodes []string `json:"errorCodes,omitempty"`
	// **array** of error message strings
	ErrorMessage []interface{} `json:"errorMessage,omitempty"`
	// **array** of error message strings in plain text
	ErrorMessageText *string `json:"errorMessageText,omitempty"`
	// **name** of *this* type of error
	ErrorName *string `json:"errorName,omitempty"`
	// **reference number** of *this* error
	ErrorReference *string `json:"errorReference,omitempty"`
	// **code** specifying the type of error
	ErrorType *string `json:"errorType,omitempty"`
	// ignore (Viator only)
	ExtraInfo map[string]interface{} `json:"extraInfo,omitempty"`
	// ignore (Viator only)
	ExtraObject map[string]interface{} `json:"extraObject,omitempty"`
	// **boolean indicator** of *this* request's outcome
	// - `true`: the request was successful with no errors
	// - `false`: an error was encountered
	//
	Success *bool `json:"success,omitempty"`
	// **number** of results available for *this* service
	//
	TotalCount *int64 `json:"totalCount,omitempty"`
	// **unique numeric id** of the server that processed *this* request
	Vmid *string `json:"vmid,omitempty"`
}

type BookingAvailabilityResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	BookingAvailability200ApplicationJSONObject *BookingAvailability200ApplicationJSON
}
