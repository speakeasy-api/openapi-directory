"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocalTime:
    r"""Represents a time part of a given date"""
    
    hour: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hour'), 'exclude': lambda f: f is None }})
    r"""An hour of the day. Available values: 0-23"""  
    minute: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minute'), 'exclude': lambda f: f is None }})
    r"""The minutes. Available values: 0-59"""  
    nano: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nano'), 'exclude': lambda f: f is None }})
    r"""~"""  
    second: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('second'), 'exclude': lambda f: f is None }})
    r"""The seconds.  Available values: 0-59"""  
    