"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import predictedpoints as shared_predictedpoints
from typing import Optional


@dataclasses.dataclass
class GetPredictedPointsRequest:
    
    distance: int = dataclasses.field(metadata={'query_param': { 'field_name': 'distance', 'style': 'form', 'explode': True }})
    r"""Distance filter"""  
    down: int = dataclasses.field(metadata={'query_param': { 'field_name': 'down', 'style': 'form', 'explode': True }})
    r"""Down filter"""  
    

@dataclasses.dataclass
class GetPredictedPointsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    predicted_points: Optional[list[shared_predictedpoints.PredictedPoints]] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    