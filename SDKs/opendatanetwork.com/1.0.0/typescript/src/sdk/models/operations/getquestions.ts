/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetQuestionsRequest extends SpeakeasyBase {
  /**
   * e.g. cQovpGcdUT1CSzgYk0KPYdAI0
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-App-Token",
  })
  xAppToken?: string;

  /**
   * The [Socrata App Token](https://dev.socrata.com/docs/app-tokens.html) to be
   *
   * @remarks
   * used with your request. The `app_token` parameter is required if an app token is not passed via the `X-App-Token` HTTP header. Clients must [register for their own app tokens](https://dev.socrata.com/docs/app-tokens.html).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=app_token",
  })
  appToken?: string;

  /**
   * Maximum number of results to return.
   *
   * @remarks
   * Must be an integer from 0 to 50000.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Number of results to skip.
   *
   * @remarks
   * Used for pagination.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * String to search against.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query: string;
}

export class GetQuestionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
