"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DirectoryChromeosdevicesIssueCommandRequestCommandTypeEnum(str, Enum):
    r"""The type of command."""
    COMMAND_TYPE_UNSPECIFIED = 'COMMAND_TYPE_UNSPECIFIED'
    REBOOT = 'REBOOT'
    TAKE_A_SCREENSHOT = 'TAKE_A_SCREENSHOT'
    SET_VOLUME = 'SET_VOLUME'
    WIPE_USERS = 'WIPE_USERS'
    REMOTE_POWERWASH = 'REMOTE_POWERWASH'
    DEVICE_START_CRD_SESSION = 'DEVICE_START_CRD_SESSION'
    CAPTURE_LOGS = 'CAPTURE_LOGS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DirectoryChromeosdevicesIssueCommandRequest:
    r"""A request for issuing a command."""
    
    command_type: Optional[DirectoryChromeosdevicesIssueCommandRequestCommandTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commandType'), 'exclude': lambda f: f is None }})
    r"""The type of command."""  
    payload: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payload'), 'exclude': lambda f: f is None }})
    r"""The payload for the command, provide it only if command supports it. The following commands support adding payload: * `SET_VOLUME`: Payload is a stringified JSON object in the form: { \\"volume\\": 50 }. The volume has to be an integer in the range [0,100]. * `DEVICE_START_CRD_SESSION`: Payload is optionally a stringified JSON object in the form: { \\"ackedUserPresence\\": true }. `ackedUserPresence` is a boolean. By default, `ackedUserPresence` is set to `false`. To start a Chrome Remote Desktop session for an active device, set `ackedUserPresence` to `true`."""  
    