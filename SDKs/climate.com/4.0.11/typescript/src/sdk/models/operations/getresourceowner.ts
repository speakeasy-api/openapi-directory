/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetResourceOwnerSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Api-Key",
  })
  apiKey?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2AuthorizationCode?: string;
}

export class GetResourceOwnerRequest extends SpeakeasyBase {
  /**
   * Unique identifier of the resource owner.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=resourceOwnerId",
  })
  resourceOwnerId: string;
}

export class GetResourceOwnerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Input
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  resourceOwner?: shared.ResourceOwner;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
