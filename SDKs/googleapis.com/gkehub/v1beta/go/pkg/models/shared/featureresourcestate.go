// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FeatureResourceStateStateEnum - The current state of the Feature resource in the Hub API.
type FeatureResourceStateStateEnum string

const (
	FeatureResourceStateStateEnumStateUnspecified FeatureResourceStateStateEnum = "STATE_UNSPECIFIED"
	FeatureResourceStateStateEnumEnabling         FeatureResourceStateStateEnum = "ENABLING"
	FeatureResourceStateStateEnumActive           FeatureResourceStateStateEnum = "ACTIVE"
	FeatureResourceStateStateEnumDisabling        FeatureResourceStateStateEnum = "DISABLING"
	FeatureResourceStateStateEnumUpdating         FeatureResourceStateStateEnum = "UPDATING"
	FeatureResourceStateStateEnumServiceUpdating  FeatureResourceStateStateEnum = "SERVICE_UPDATING"
)

func (e FeatureResourceStateStateEnum) ToPointer() *FeatureResourceStateStateEnum {
	return &e
}

func (e *FeatureResourceStateStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ENABLING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DISABLING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "SERVICE_UPDATING":
		*e = FeatureResourceStateStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeatureResourceStateStateEnum: %v", v)
	}
}

// FeatureResourceState - FeatureResourceState describes the state of a Feature *resource* in the GkeHub API. See `FeatureState` for the "running state" of the Feature in the Hub and across Memberships.
type FeatureResourceState struct {
	// The current state of the Feature resource in the Hub API.
	State *FeatureResourceStateStateEnum `json:"state,omitempty"`
}
