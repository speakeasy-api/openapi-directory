<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
/**
 * RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel - Data of the shipment to be created
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RechnungsdruckWebAppControllersApiApiAddShipmentToOrderModel
{
    /**
     * Optional the id of a shipping carrier that should be assigend to the shipment
     * 
     * Will override the carrier from the shipment product.
     * Please use the integer value from this Enumeration:
     * {Billbee.Interfaces.Shipping.Enums.ShippingCarrier}
     * 
     * @var ?int $carrierId
     */
	#[\JMS\Serializer\Annotation\SerializedName('CarrierId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=CarrierId')]
    public ?int $carrierId = null;
    
    /**
     * Optional a text stored with the shipment
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('Comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=Comment')]
    public ?string $comment = null;
    
    /**
     * Optional a differing order number of the shipment if available
     * 
     * @var ?string $orderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('OrderId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=OrderId')]
    public ?string $orderId = null;
    
    /**
     * 0 if Shipment, 1 if Retoure
     * 
     * {Billbee.Interfaces.Shipping.Enums.ShipmentTypeEnum}
     * 
     * @var ?int $shipmentType
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShipmentType')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=ShipmentType')]
    public ?int $shipmentType = null;
    
    /**
     * The id of the shipment (Sendungsnummer/trackingid)
     * 
     * @var ?string $shippingId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=ShippingId')]
    public ?string $shippingId = null;
    
    /**
     * Optional the id of a shipping provider existing in the billbee account that should be assigned to the shipment
     * 
     * @var ?int $shippingProviderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingProviderId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=ShippingProviderId')]
    public ?int $shippingProviderId = null;
    
    /**
     * Optional the id of a shipping provider product that should be assigend to the shipment
     * 
     * @var ?int $shippingProviderProductId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingProviderProductId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=ShippingProviderProductId')]
    public ?int $shippingProviderProductId = null;
    
	public function __construct()
	{
		$this->carrierId = null;
		$this->comment = null;
		$this->orderId = null;
		$this->shipmentType = null;
		$this->shippingId = null;
		$this->shippingProviderId = null;
		$this->shippingProviderProductId = null;
	}
}
