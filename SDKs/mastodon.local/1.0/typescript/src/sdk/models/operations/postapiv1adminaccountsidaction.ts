/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostApiV1AdminAccountsIdActionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

/**
 * Type of action to be taken. Enumerable oneOf: none disable silence suspend
 */
export enum PostApiV1AdminAccountsIdActionRequestBodyTypeEnum {
  None = "none",
  Disable = "disable",
  Silence = "silence",
  Suspend = "suspend",
}

export class PostApiV1AdminAccountsIdActionRequestBody extends SpeakeasyBase {
  /**
   * ID of an associated report that caused this action to be taken
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_id" })
  reportId?: string;

  /**
   * Whether an email should be sent to the user with the above information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "send_email_notification" })
  sendEmailNotification?: boolean;

  /**
   * Additional text for clarification of why this action was taken
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;

  /**
   * Type of action to be taken. Enumerable oneOf: none disable silence suspend
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: PostApiV1AdminAccountsIdActionRequestBodyTypeEnum;

  /**
   * ID of a preset warning
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warning_preset_id" })
  warningPresetId?: string;
}

export class PostApiV1AdminAccountsIdActionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostApiV1AdminAccountsIdActionRequestBody;

  /**
   * ID of the account
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class PostApiV1AdminAccountsIdActionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
