<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class BookingVoucherRequest
{
    /**
     * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
     * 
     * 
     * 
     * @var string $acceptLanguage
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Accept-Language')]
    public string $acceptLanguage;
    
    /**
     * ignore (Viator only)
     * 
     * @var ?bool $embeddedResources
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=embeddedResources')]
    public ?bool $embeddedResources = null;
    
    /**
     * **specifier**:
     * 
     * - set to `true` if you wish to retrieve the full HTML-formatted voucher
     * - set to `false` if you want the div fragment (optional)
     * 
     * 
     * @var ?bool $fullHTML
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fullHTML')]
    public ?bool $fullHTML = null;
    
    /**
     * Booking-reference number generated by Viator
     * 
     * 
     *   - **Note**: For more information, see: [Booking references](#section/Key-concepts/Booking-references)
     * 
     * 
     * @var ?int $itemId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=itemId')]
    public ?int $itemId = null;
    
    /**
     * **surname** of *this* lead traveler
     * 
     * @var ?string $leadLastName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=leadLastName')]
    public ?string $leadLastName = null;
    
    /**
     * **specifier**: 
     * 
     * - if set to `true`, the service returns the mobile (cut down) HTML-formatted voucher
     * - if `false` the full voucher HTML is returned (ignoring `fullHTML`)
     * - default: `true` 
     * - this field should only be enabled for products that have a `voucherOption` of `'VOUCHER_E'`
     * - do not enable `mobileVouchers` for paper vouchers (`voucherOption` of `'VOUCHER_PAPER_ONLY'`) as no barcode is returned
     * - the voucher information is available in the response from [/product](#operation/product), [/booking/book](#operation/bookingBook), [/booking/pastbooking](#operation/bookingPastbooking), [/booking/mybookings](#operation/bookingMybookings) (it is also displayed under the 'Redemption Info' heading in this service)
     * 
     * 
     * @var ?bool $mobileVoucher
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=mobileVoucher')]
    public ?bool $mobileVoucher = null;
    
    /**
     * **identifier** for the voucher
     * 
     * - **note**: use &lt;u&gt;either&lt;/u&gt; `voucherKey` &lt;u&gt;or&lt;/u&gt; the three separate parameters
     * - if `voucherKey` is provided as well as the other parameters, then `voucherKey` overrides the other paramaters
     * - `voucherKey` is obtained from [/booking/mybookings](#operation/bookingMybookings) or in the response from [/booking/book](#operation/bookingBook) when you make a booking
     * 
     * 
     * @var ?string $voucherKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=voucherKey')]
    public ?string $voucherKey = null;
    
	public function __construct()
	{
		$this->acceptLanguage = "";
		$this->embeddedResources = null;
		$this->fullHTML = null;
		$this->itemId = null;
		$this->leadLastName = null;
		$this->mobileVoucher = null;
		$this->voucherKey = null;
	}
}
