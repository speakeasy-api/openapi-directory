// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// HolidaysFederalEnum - A boolean parameter. If true or 1, will return only federal holidays. If false or 0, will return no federal holidays.
type HolidaysFederalEnum string

const (
	HolidaysFederalEnumOne   HolidaysFederalEnum = "1"
	HolidaysFederalEnumZero  HolidaysFederalEnum = "0"
	HolidaysFederalEnumTrue  HolidaysFederalEnum = "true"
	HolidaysFederalEnumFalse HolidaysFederalEnum = "false"
)

func (e *HolidaysFederalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "0":
		fallthrough
	case "true":
		fallthrough
	case "false":
		*e = HolidaysFederalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HolidaysFederalEnum: %s", s)
	}
}

// HolidaysOptionalEnum - A boolean parameter. If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
type HolidaysOptionalEnum string

const (
	HolidaysOptionalEnumOne   HolidaysOptionalEnum = "1"
	HolidaysOptionalEnumZero  HolidaysOptionalEnum = "0"
	HolidaysOptionalEnumTrue  HolidaysOptionalEnum = "true"
	HolidaysOptionalEnumFalse HolidaysOptionalEnum = "false"
)

func (e *HolidaysOptionalEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "0":
		fallthrough
	case "true":
		fallthrough
	case "false":
		*e = HolidaysOptionalEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HolidaysOptionalEnum: %s", s)
	}
}

type HolidaysRequest struct {
	// A boolean parameter. If true or 1, will return only federal holidays. If false or 0, will return no federal holidays.
	Federal *HolidaysFederalEnum `queryParam:"style=form,explode=true,name=federal"`
	// A boolean parameter. If false or 0 (default), will return only legislated holidays. If true or 1, will return optional holidays from Alberta and BC.
	Optional *HolidaysOptionalEnum `queryParam:"style=form,explode=true,name=optional"`
	// A calendar year
	Year *int64 `queryParam:"style=form,explode=true,name=year"`
}

// Holidays200ApplicationJSON - OK
type Holidays200ApplicationJSON struct {
	Holidays []shared.Holiday `json:"holidays,omitempty"`
}

type HolidaysResponse struct {
	ContentType string
	// OK
	Holidays200ApplicationJSONObject *Holidays200ApplicationJSON
	StatusCode                       int
	RawResponse                      *http.Response
}
