/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImportFile } from "./importfile";
import { Expose, Type } from "class-transformer";

/**
 * Which interpreter (python or jinja) should be used during expansion.
 */
export enum TemplateContentsInterpreterEnum {
  UnknownInterpreter = "UNKNOWN_INTERPRETER",
  Python = "PYTHON",
  Jinja = "JINJA",
}

/**
 * Files that make up the template contents of a template type.
 */
export class TemplateContents extends SpeakeasyBase {
  /**
   * Import files referenced by the main template.
   */
  @SpeakeasyMetadata({ elemType: ImportFile })
  @Expose({ name: "imports" })
  @Type(() => ImportFile)
  imports?: ImportFile[];

  /**
   * Which interpreter (python or jinja) should be used during expansion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interpreter" })
  interpreter?: TemplateContentsInterpreterEnum;

  /**
   * The filename of the mainTemplate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mainTemplate" })
  mainTemplate?: string;

  /**
   * The contents of the template schema.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schema" })
  schema?: string;

  /**
   * The contents of the main template file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  template?: string;
}
