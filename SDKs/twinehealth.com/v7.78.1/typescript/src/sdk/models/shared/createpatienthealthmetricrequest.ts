/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PatientHealthMetricCreateResource } from "./patienthealthmetriccreateresource";
import { Expose, Type } from "class-transformer";

export class CreatePatientHealthMetricRequestMeta extends SpeakeasyBase {
  /**
   * If `true`, the patient health metric will be ignored if there is an existing patient health metric for
   *
   * @remarks
   * the same patient, with the same `type` and same `occurred_at`.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ignore_duplicates" })
  ignoreDuplicates?: boolean;
}

export class CreatePatientHealthMetricRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => PatientHealthMetricCreateResource)
  data: PatientHealthMetricCreateResource;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => CreatePatientHealthMetricRequestMeta)
  meta?: CreatePatientHealthMetricRequestMeta;
}
