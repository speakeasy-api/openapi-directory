/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateUploadShareRequest - Request model for creating an Upload Share
 */
public class CreateUploadShareRequest {
    /**
     * &amp;#128679; Deprecated since v4.20.0
     * 
     * Language tag for messages to creator
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorLanguage")
    public String creatorLanguage;
    public CreateUploadShareRequest withCreatorLanguage(String creatorLanguage) {
        this.creatorLanguage = creatorLanguage;
        return this;
    }
    
    /**
     * Expiration information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiration")
    public ObjectExpiration expiration;
    public CreateUploadShareRequest withExpiration(ObjectExpiration expiration) {
        this.expiration = expiration;
        return this;
    }
    
    /**
     * Number of days after which uploaded files expire
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filesExpiryPeriod")
    public Integer filesExpiryPeriod;
    public CreateUploadShareRequest withFilesExpiryPeriod(Integer filesExpiryPeriod) {
        this.filesExpiryPeriod = filesExpiryPeriod;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Internal notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalNotes")
    public String internalNotes;
    public CreateUploadShareRequest withInternalNotes(String internalNotes) {
        this.internalNotes = internalNotes;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Notification email content
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mailBody")
    public String mailBody;
    public CreateUploadShareRequest withMailBody(String mailBody) {
        this.mailBody = mailBody;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * CSV string of recipient email addresses
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mailRecipients")
    public String mailRecipients;
    public CreateUploadShareRequest withMailRecipients(String mailRecipients) {
        this.mailRecipients = mailRecipients;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Notification email subject
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mailSubject")
    public String mailSubject;
    public CreateUploadShareRequest withMailSubject(String mailSubject) {
        this.mailSubject = mailSubject;
        return this;
    }
    
    /**
     * Maximal total size of uploaded files (in bytes)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxSize")
    public Long maxSize;
    public CreateUploadShareRequest withMaxSize(Long maxSize) {
        this.maxSize = maxSize;
        return this;
    }
    
    /**
     * Maximal amount of files to upload
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxSlots")
    public Integer maxSlots;
    public CreateUploadShareRequest withMaxSlots(Integer maxSlots) {
        this.maxSlots = maxSlots;
        return this;
    }
    
    /**
     * Alias name
     * 
     * (default: name of the shared node)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CreateUploadShareRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public CreateUploadShareRequest withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.20.0
     * 
     * Notify creator on every upload.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifyCreator")
    public Boolean notifyCreator;
    public CreateUploadShareRequest withNotifyCreator(Boolean notifyCreator) {
        this.notifyCreator = notifyCreator;
        return this;
    }
    
    /**
     * Password
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public CreateUploadShareRequest withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Language tag for messages to receiver
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiverLanguage")
    public String receiverLanguage;
    public CreateUploadShareRequest withReceiverLanguage(String receiverLanguage) {
        this.receiverLanguage = receiverLanguage;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Notify recipients via email
     * 
     * Please use `POST /shares/uploads/{share_id}/email` API instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sendMail")
    public Boolean sendMail;
    public CreateUploadShareRequest withSendMail(Boolean sendMail) {
        this.sendMail = sendMail;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Send share password via SMS
     * 
     * Please use `textMessageRecipients` attribute instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sendSms")
    public Boolean sendSms;
    public CreateUploadShareRequest withSendSms(Boolean sendSms) {
        this.sendSms = sendSms;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Show creator first and last name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCreatorName")
    public Boolean showCreatorName;
    public CreateUploadShareRequest withShowCreatorName(Boolean showCreatorName) {
        this.showCreatorName = showCreatorName;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Show creator email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCreatorUsername")
    public Boolean showCreatorUsername;
    public CreateUploadShareRequest withShowCreatorUsername(Boolean showCreatorUsername) {
        this.showCreatorUsername = showCreatorUsername;
        return this;
    }
    
    /**
     * Allow display of already uploaded files
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showUploadedFiles")
    public Boolean showUploadedFiles;
    public CreateUploadShareRequest withShowUploadedFiles(Boolean showUploadedFiles) {
        this.showUploadedFiles = showUploadedFiles;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * CSV string of recipient MSISDNs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smsRecipients")
    public String smsRecipients;
    public CreateUploadShareRequest withSmsRecipients(String smsRecipients) {
        this.smsRecipients = smsRecipients;
        return this;
    }
    
    /**
     * Target room or folder ID
     */
    @JsonProperty("targetId")
    public Long targetId;
    public CreateUploadShareRequest withTargetId(Long targetId) {
        this.targetId = targetId;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * List of recipient FQTNs
     * 
     * E.123 / E.164 Format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textMessageRecipients")
    public String[] textMessageRecipients;
    public CreateUploadShareRequest withTextMessageRecipients(String[] textMessageRecipients) {
        this.textMessageRecipients = textMessageRecipients;
        return this;
    }
    
}
