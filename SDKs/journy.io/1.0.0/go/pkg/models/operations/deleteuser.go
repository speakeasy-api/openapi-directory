// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// DeleteUserRequestBodyIdentification - User identification requires a userId, email or both
type DeleteUserRequestBodyIdentification struct {
	// Email address of the user
	Email *string `json:"email,omitempty"`
	// Unique identifier for the user in your database
	UserID *string `json:"userId,omitempty"`
}

// DeleteUserRequestBody - Delete a user
type DeleteUserRequestBody struct {
	// User identification requires a userId, email or both
	Identification DeleteUserRequestBodyIdentification `json:"identification"`
}

type DeleteUser500ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// DeleteUser500ApplicationJSON - The message specifies what is done
type DeleteUser500ApplicationJSON struct {
	Message string                           `json:"message"`
	Meta    DeleteUser500ApplicationJSONMeta `json:"meta"`
}

type DeleteUser429ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// DeleteUser429ApplicationJSON - The message specifies what is done
type DeleteUser429ApplicationJSON struct {
	Message string                           `json:"message"`
	Meta    DeleteUser429ApplicationJSONMeta `json:"meta"`
}

type DeleteUser403ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// DeleteUser403ApplicationJSON - The message specifies what is done
type DeleteUser403ApplicationJSON struct {
	Message string                           `json:"message"`
	Meta    DeleteUser403ApplicationJSONMeta `json:"meta"`
}

type DeleteUser401ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// DeleteUser401ApplicationJSON - The message specifies what is done
type DeleteUser401ApplicationJSON struct {
	Message string                           `json:"message"`
	Meta    DeleteUser401ApplicationJSONMeta `json:"meta"`
}

// DeleteUser400ApplicationJSONErrorsParameters - All query-, header- and path- parameters that seemed incorrect
type DeleteUser400ApplicationJSONErrorsParameters struct {
	Header map[string]string `json:"header,omitempty"`
	Path   map[string]string `json:"path,omitempty"`
	Query  map[string]string `json:"query,omitempty"`
}

// DeleteUser400ApplicationJSONErrors - Map that sums up all received values that seemed incorrect
type DeleteUser400ApplicationJSONErrors struct {
	// All input fields that seemed incorrect
	Fields map[string]string `json:"fields,omitempty"`
	// All query-, header- and path- parameters that seemed incorrect
	Parameters *DeleteUser400ApplicationJSONErrorsParameters `json:"parameters,omitempty"`
}

type DeleteUser400ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// DeleteUser400ApplicationJSON - The message specifies what is done
type DeleteUser400ApplicationJSON struct {
	// Map that sums up all received values that seemed incorrect
	Errors  DeleteUser400ApplicationJSONErrors `json:"errors"`
	Message string                             `json:"message"`
	Meta    DeleteUser400ApplicationJSONMeta   `json:"meta"`
}

type DeleteUser202ApplicationJSONMeta struct {
	RequestID string  `json:"requestId"`
	Status    float64 `json:"status"`
}

// DeleteUser202ApplicationJSON - The message specifies what is done
type DeleteUser202ApplicationJSON struct {
	Message string                           `json:"message"`
	Meta    DeleteUser202ApplicationJSONMeta `json:"meta"`
}

type DeleteUserResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Accepted
	DeleteUser202ApplicationJSONObject *DeleteUser202ApplicationJSON
	// Bad request, some fields or parameters are incorrect
	DeleteUser400ApplicationJSONObject *DeleteUser400ApplicationJSON
	// No API Key was provided or the key is not authorised to perform the action
	DeleteUser401ApplicationJSONObject *DeleteUser401ApplicationJSON
	// The API Key provided is currently not enabled
	DeleteUser403ApplicationJSONObject *DeleteUser403ApplicationJSON
	// Too many API requests were send
	DeleteUser429ApplicationJSONObject *DeleteUser429ApplicationJSON
	// An unexpected error occurred
	DeleteUser500ApplicationJSONObject *DeleteUser500ApplicationJSON
}
