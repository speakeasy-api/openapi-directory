// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListAuthorizersStatusEnum - The status of the list authorizers request.
type ListAuthorizersStatusEnum string

const (
	ListAuthorizersStatusEnumActive   ListAuthorizersStatusEnum = "ACTIVE"
	ListAuthorizersStatusEnumInactive ListAuthorizersStatusEnum = "INACTIVE"
)

func (e *ListAuthorizersStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		*e = ListAuthorizersStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAuthorizersStatusEnum: %s", s)
	}
}

type ListAuthorizersQueryParams struct {
	// Return the list of authorizers in ascending alphabetical order.
	IsAscendingOrder *bool `queryParam:"style=form,explode=true,name=isAscendingOrder"`
	// A marker used to get the next set of results.
	Marker *string `queryParam:"style=form,explode=true,name=marker"`
	// The maximum number of results to return at one time.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// The status of the list authorizers request.
	Status *ListAuthorizersStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListAuthorizersHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListAuthorizersRequest struct {
	QueryParams ListAuthorizersQueryParams
	Headers     ListAuthorizersHeaders
}

type ListAuthorizersResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListAuthorizersResponse *shared.ListAuthorizersResponse
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
