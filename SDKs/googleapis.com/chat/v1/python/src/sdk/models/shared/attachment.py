"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attachmentdataref as shared_attachmentdataref
from ..shared import drivedataref as shared_drivedataref
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AttachmentSourceEnum(str, Enum):
    r"""The source of the attachment."""
    SOURCE_UNSPECIFIED = 'SOURCE_UNSPECIFIED'
    DRIVE_FILE = 'DRIVE_FILE'
    UPLOADED_CONTENT = 'UPLOADED_CONTENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttachmentInput:
    r"""An attachment in Google Chat."""
    
    attachment_data_ref: Optional[shared_attachmentdataref.AttachmentDataRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachmentDataRef'), 'exclude': lambda f: f is None }})  
    content_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentName'), 'exclude': lambda f: f is None }})
    r"""The original file name for the content, not the full path."""  
    content_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentType'), 'exclude': lambda f: f is None }})
    r"""The content type (MIME type) of the file."""  
    drive_data_ref: Optional[shared_drivedataref.DriveDataRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driveDataRef'), 'exclude': lambda f: f is None }})
    r"""A reference to the data of a drive attachment."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Resource name of the attachment, in the form \\"spaces/*/messages/*/attachments/*\\"."""  
    source: Optional[AttachmentSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""The source of the attachment."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Attachment:
    r"""An attachment in Google Chat."""
    
    attachment_data_ref: Optional[shared_attachmentdataref.AttachmentDataRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachmentDataRef'), 'exclude': lambda f: f is None }})  
    content_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentName'), 'exclude': lambda f: f is None }})
    r"""The original file name for the content, not the full path."""  
    content_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentType'), 'exclude': lambda f: f is None }})
    r"""The content type (MIME type) of the file."""  
    download_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('downloadUri'), 'exclude': lambda f: f is None }})
    r"""Output only. The download URL which should be used to allow a human user to download the attachment. Chat apps should not use this URL to download attachment content."""  
    drive_data_ref: Optional[shared_drivedataref.DriveDataRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driveDataRef'), 'exclude': lambda f: f is None }})
    r"""A reference to the data of a drive attachment."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Resource name of the attachment, in the form \\"spaces/*/messages/*/attachments/*\\"."""  
    source: Optional[AttachmentSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""The source of the attachment."""  
    thumbnail_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbnailUri'), 'exclude': lambda f: f is None }})
    r"""Output only. The thumbnail URL which should be used to preview the attachment to a human user. Chat apps should not use this URL to download attachment content."""  
    