/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommitmentCostEstimate } from "./commitmentcostestimate";
import { CostEstimate } from "./costestimate";
import { EstimationTimePoint } from "./estimationtimepoint";
import { WorkloadCostEstimate } from "./workloadcostestimate";
import { Expose, Type } from "class-transformer";

/**
 * Workload cost estimates for a single time segment.
 */
export class SegmentCostEstimate extends SpeakeasyBase {
  /**
   * Estimated costs for each commitment.
   */
  @SpeakeasyMetadata({ elemType: CommitmentCostEstimate })
  @Expose({ name: "commitmentCostEstimates" })
  @Type(() => CommitmentCostEstimate)
  commitmentCostEstimates?: CommitmentCostEstimate[];

  /**
   * Represents a point in time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "segmentStartTime" })
  @Type(() => EstimationTimePoint)
  segmentStartTime?: EstimationTimePoint;

  /**
   * An estimated cost.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "segmentTotalCostEstimate" })
  @Type(() => CostEstimate)
  segmentTotalCostEstimate?: CostEstimate;

  /**
   * Estimated costs for each workload.
   */
  @SpeakeasyMetadata({ elemType: WorkloadCostEstimate })
  @Expose({ name: "workloadCostEstimates" })
  @Type(() => WorkloadCostEstimate)
  workloadCostEstimates?: WorkloadCostEstimate[];
}
