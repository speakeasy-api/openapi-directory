<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateWatchRequestInput - Create a new watch.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateWatchRequestInput
{
    /**
     * A watch for events for a form. When the designated event happens, a notification will be published to the specified target. The notification's attributes will include a `formId` key that has the ID of the watched form and an `eventType` key that has the string of the type. Messages are sent with at-least-once delivery and are only dropped in extraordinary circumstances. Typically all notifications should be reliably delivered within a few seconds; however, in some situations notifications may be delayed. A watch expires seven days after it is created unless it is renewed with watches.renew
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WatchInput $watch
     */
	#[\JMS\Serializer\Annotation\SerializedName('watch')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WatchInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WatchInput $watch = null;
    
    /**
     * The ID to use for the watch. If specified, the ID must not already be in use. If not specified, an ID is generated. This value should be 4-63 characters, and valid characters are /a-z-/.
     * 
     * @var ?string $watchId
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $watchId = null;
    
	public function __construct()
	{
		$this->watch = null;
		$this->watchId = null;
	}
}
