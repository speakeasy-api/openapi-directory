/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DateDetails } from "./datedetails";
import { LabeledItem } from "./labeleditem";
import { LookupDetails } from "./lookupdetails";
import { RelationshipDetails } from "./relationshipdetails";
import { Expose, Type } from "class-transformer";

/**
 * Details on a column in the table.
 */
export class ColumnDescription extends SpeakeasyBase {
  /**
   * Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  dataType?: string;

  /**
   * Details about a date column.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateDetails" })
  @Type(() => DateDetails)
  dateDetails?: DateDetails;

  /**
   * Internal id for a column.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation.
   */
  @SpeakeasyMetadata({ elemType: LabeledItem })
  @Expose({ name: "labels" })
  @Type(() => LabeledItem)
  labels?: LabeledItem[];

  /**
   * Details about a lookup column whose value comes from the associated relationship.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lookupDetails" })
  @Type(() => LookupDetails)
  lookupDetails?: LookupDetails;

  /**
   * Optional. Indicates whether or not multiple values are allowed for array types where such a restriction is possible.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multipleValuesDisallowed" })
  multipleValuesDisallowed?: boolean;

  /**
   * column name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Optional. Indicates that values for the column cannot be set by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readonly" })
  readonly?: boolean;

  /**
   * Details about a relationship column.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationshipDetails" })
  @Type(() => RelationshipDetails)
  relationshipDetails?: RelationshipDetails;
}
