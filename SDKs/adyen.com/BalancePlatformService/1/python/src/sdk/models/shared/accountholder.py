"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountholdercapability as shared_accountholdercapability
from ..shared import contactdetails as shared_contactdetails
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountHolderStatusEnum(str, Enum):
    r"""The status of the account holder.
    
    Possible values: 
    
     * **Active**: The account holder is active. This is the default status when creating an account holder. 
    
     * **Inactive**: The account holder is temporarily inactive due to missing KYC details. You can set the account back to active by providing the missing KYC details. 
    
     * **Suspended**: The account holder is permanently deactivated by Adyen. This action cannot be undone. 
    
    * **Closed**: The account holder is permanently deactivated by you. This action cannot be undone.
    """
    ACTIVE = 'Active'
    CLOSED = 'Closed'
    INACTIVE = 'Inactive'
    SUSPENDED = 'Suspended'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountHolder:
    r"""OK - the request has succeeded."""
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The unique identifier of the account holder."""  
    legal_entity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalEntityId') }})
    r"""The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) associated with the account holder. Adyen performs a verification process against the legal entity of the account holder."""  
    balance_platform: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balancePlatform'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the account holder belongs. Required in the request if your API credentials can be used for multiple balance platforms."""  
    capabilities: Optional[dict[str, shared_accountholdercapability.AccountHolderCapability]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capabilities'), 'exclude': lambda f: f is None }})
    r"""Contains key-value pairs that specify the actions that an account holder can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing. The value is an object containing the settings for the capability."""  
    contact_details: Optional[shared_contactdetails.ContactDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactDetails'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Your description for the account holder, maximum 300 characters."""  
    primary_balance_account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryBalanceAccount'), 'exclude': lambda f: f is None }})
    r"""The ID of the account holder's primary balance account. By default, this is set to the first balance account that you create for the account holder. To assign a different balance account, send a PATCH request."""  
    reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference'), 'exclude': lambda f: f is None }})
    r"""Your reference for the account holder, maximum 150 characters."""  
    status: Optional[AccountHolderStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the account holder.
    
    Possible values: 
    
     * **Active**: The account holder is active. This is the default status when creating an account holder. 
    
     * **Inactive**: The account holder is temporarily inactive due to missing KYC details. You can set the account back to active by providing the missing KYC details. 
    
     * **Suspended**: The account holder is permanently deactivated by Adyen. This action cannot be undone. 
    
    * **Closed**: The account holder is permanently deactivated by you. This action cannot be undone.
    """  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""The [time zone](https://www.iana.org/time-zones) of the account holder. For example, **Europe/Amsterdam**.
    Defaults to the time zone of the balance platform if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountHolderInput:
    
    legal_entity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalEntityId') }})
    r"""The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) associated with the account holder. Adyen performs a verification process against the legal entity of the account holder."""  
    balance_platform: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balancePlatform'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/get/balancePlatforms/{id}__queryParam_id) to which the account holder belongs. Required in the request if your API credentials can be used for multiple balance platforms."""  
    capabilities: Optional[dict[str, shared_accountholdercapability.AccountHolderCapabilityInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capabilities'), 'exclude': lambda f: f is None }})
    r"""Contains key-value pairs that specify the actions that an account holder can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing. The value is an object containing the settings for the capability."""  
    contact_details: Optional[shared_contactdetails.ContactDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactDetails'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Your description for the account holder, maximum 300 characters."""  
    primary_balance_account: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryBalanceAccount'), 'exclude': lambda f: f is None }})
    r"""The ID of the account holder's primary balance account. By default, this is set to the first balance account that you create for the account holder. To assign a different balance account, send a PATCH request."""  
    reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference'), 'exclude': lambda f: f is None }})
    r"""Your reference for the account holder, maximum 150 characters."""  
    status: Optional[AccountHolderStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the account holder.
    
    Possible values: 
    
     * **Active**: The account holder is active. This is the default status when creating an account holder. 
    
     * **Inactive**: The account holder is temporarily inactive due to missing KYC details. You can set the account back to active by providing the missing KYC details. 
    
     * **Suspended**: The account holder is permanently deactivated by Adyen. This action cannot be undone. 
    
    * **Closed**: The account holder is permanently deactivated by you. This action cannot be undone.
    """  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""The [time zone](https://www.iana.org/time-zones) of the account holder. For example, **Europe/Amsterdam**.
    Defaults to the time zone of the balance platform if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
    """  
    