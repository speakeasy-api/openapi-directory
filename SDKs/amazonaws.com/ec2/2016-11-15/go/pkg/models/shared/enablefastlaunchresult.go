// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// EnableFastLaunchResultLaunchTemplate - The launch template that is used when launching Windows instances from pre-provisioned snapshots.
type EnableFastLaunchResultLaunchTemplate struct {
	LaunchTemplateID   *string
	LaunchTemplateName *string
	Version            *string
}

// EnableFastLaunchResultResourceTypeEnum - The type of resource that was defined for pre-provisioning the Windows AMI for faster launching.
type EnableFastLaunchResultResourceTypeEnum string

const (
	EnableFastLaunchResultResourceTypeEnumSnapshot EnableFastLaunchResultResourceTypeEnum = "snapshot"
)

func (e *EnableFastLaunchResultResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "snapshot":
		*e = EnableFastLaunchResultResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableFastLaunchResultResourceTypeEnum: %s", s)
	}
}

// EnableFastLaunchResultSnapshotConfiguration - Settings to create and manage the pre-provisioned snapshots that Amazon EC2 uses for faster launches from the Windows AMI. This property is returned when the associated <code>resourceType</code> is <code>snapshot</code>.
type EnableFastLaunchResultSnapshotConfiguration struct {
	TargetResourceCount *int64
}

// EnableFastLaunchResultStateEnum - The current state of faster launching for the specified Windows AMI.
type EnableFastLaunchResultStateEnum string

const (
	EnableFastLaunchResultStateEnumEnabling        EnableFastLaunchResultStateEnum = "enabling"
	EnableFastLaunchResultStateEnumEnablingFailed  EnableFastLaunchResultStateEnum = "enabling-failed"
	EnableFastLaunchResultStateEnumEnabled         EnableFastLaunchResultStateEnum = "enabled"
	EnableFastLaunchResultStateEnumEnabledFailed   EnableFastLaunchResultStateEnum = "enabled-failed"
	EnableFastLaunchResultStateEnumDisabling       EnableFastLaunchResultStateEnum = "disabling"
	EnableFastLaunchResultStateEnumDisablingFailed EnableFastLaunchResultStateEnum = "disabling-failed"
)

func (e *EnableFastLaunchResultStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enabling":
		fallthrough
	case "enabling-failed":
		fallthrough
	case "enabled":
		fallthrough
	case "enabled-failed":
		fallthrough
	case "disabling":
		fallthrough
	case "disabling-failed":
		*e = EnableFastLaunchResultStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableFastLaunchResultStateEnum: %s", s)
	}
}

// EnableFastLaunchResult - Success
type EnableFastLaunchResult struct {
	ImageID               *string
	LaunchTemplate        *EnableFastLaunchResultLaunchTemplate
	MaxParallelLaunches   *int64
	OwnerID               *string
	ResourceType          *EnableFastLaunchResultResourceTypeEnum
	SnapshotConfiguration *EnableFastLaunchResultSnapshotConfiguration
	State                 *EnableFastLaunchResultStateEnum
	StateTransitionReason *string
	StateTransitionTime   *time.Time
}
