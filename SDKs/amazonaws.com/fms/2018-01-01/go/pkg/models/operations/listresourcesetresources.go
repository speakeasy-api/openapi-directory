// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListResourceSetResourcesXAmzTargetEnum
type ListResourceSetResourcesXAmzTargetEnum string

const (
	ListResourceSetResourcesXAmzTargetEnumAwsfms20180101ListResourceSetResources ListResourceSetResourcesXAmzTargetEnum = "AWSFMS_20180101.ListResourceSetResources"
)

func (e ListResourceSetResourcesXAmzTargetEnum) ToPointer() *ListResourceSetResourcesXAmzTargetEnum {
	return &e
}

func (e *ListResourceSetResourcesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSFMS_20180101.ListResourceSetResources":
		*e = ListResourceSetResourcesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListResourceSetResourcesXAmzTargetEnum: %v", v)
	}
}

type ListResourceSetResourcesRequest struct {
	ListResourceSetResourcesRequest shared.ListResourceSetResourcesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      ListResourceSetResourcesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListResourceSetResourcesResponse struct {
	ContentType string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// Success
	ListResourceSetResourcesResponse *shared.ListResourceSetResourcesResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
