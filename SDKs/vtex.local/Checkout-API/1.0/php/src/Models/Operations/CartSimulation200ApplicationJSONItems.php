<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CartSimulation200ApplicationJSONItems
{
    /**
     * Availability.
     * 
     * @var ?string $availability
     */
	#[\JMS\Serializer\Annotation\SerializedName('availability')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $availability = null;
    
    /**
     * ID of the item.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * List price in cents.
     * 
     * @var ?int $listPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('listPrice')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $listPrice = null;
    
    /**
     * Measurement unit.
     * 
     * @var ?string $measurementUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurementUnit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $measurementUnit = null;
    
    /**
     * Array containing offering information.
     * 
     * @var ?array<mixed> $offerings
     */
	#[\JMS\Serializer\Annotation\SerializedName('offerings')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $offerings = null;
    
    /**
     * Parent assembly binding.
     * 
     * @var ?string $parentAssemblyBinding
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentAssemblyBinding')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentAssemblyBinding = null;
    
    /**
     * Parent item index.
     * 
     * @var ?int $parentItemIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentItemIndex')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $parentItemIndex = null;
    
    /**
     * Price in cents.
     * 
     * @var ?int $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $price = null;
    
    /**
     * Price information for all units of a specific item.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CartSimulation200ApplicationJSONItemsPriceDefinition $priceDefinition
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceDefinition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CartSimulation200ApplicationJSONItemsPriceDefinition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CartSimulation200ApplicationJSONItemsPriceDefinition $priceDefinition = null;
    
    /**
     * Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\CartSimulation200ApplicationJSONItemsPriceTags> $priceTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceTags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\CartSimulation200ApplicationJSONItemsPriceTags>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $priceTags = null;
    
    /**
     * Price expiration date and time.
     * 
     * @var ?string $priceValidUntil
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceValidUntil')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priceValidUntil = null;
    
    /**
     * The quantity of the item the cart.
     * 
     * @var ?int $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $quantity = null;
    
    /**
     * Request index information.
     * 
     * @var ?int $requestIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestIndex')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $requestIndex = null;
    
    /**
     * Reward value in cents.
     * 
     * @var ?int $rewardValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('rewardValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $rewardValue = null;
    
    /**
     * The seller responsible for the SKU.
     * 
     * @var ?string $seller
     */
	#[\JMS\Serializer\Annotation\SerializedName('seller')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $seller = null;
    
    /**
     * Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.
     * 
     * @var ?array<string> $sellerChain
     */
	#[\JMS\Serializer\Annotation\SerializedName('sellerChain')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sellerChain = null;
    
    /**
     * Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.
     * 
     * @var ?int $sellingPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('sellingPrice')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sellingPrice = null;
    
    /**
     * Tax value in cents.
     * 
     * @var ?int $tax
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $tax = null;
    
    /**
     * Unit multiplier.
     * 
     * @var ?int $unitMultiplier
     */
	#[\JMS\Serializer\Annotation\SerializedName('unitMultiplier')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $unitMultiplier = null;
    
	public function __construct()
	{
		$this->availability = null;
		$this->id = null;
		$this->listPrice = null;
		$this->measurementUnit = null;
		$this->offerings = null;
		$this->parentAssemblyBinding = null;
		$this->parentItemIndex = null;
		$this->price = null;
		$this->priceDefinition = null;
		$this->priceTags = null;
		$this->priceValidUntil = null;
		$this->quantity = null;
		$this->requestIndex = null;
		$this->rewardValue = null;
		$this->seller = null;
		$this->sellerChain = null;
		$this->sellingPrice = null;
		$this->tax = null;
		$this->unitMultiplier = null;
	}
}
