/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Subnet } from "./subnet";
import { Expose, Type } from "class-transformer";

/**
 * Definition of a Serverless VPC Access connector.
 */
export class ConnectorInput extends SpeakeasyBase {
  /**
   * The range of internal addresses that follows RFC 4632 notation. Example: `10.132.0.0/28`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipCidrRange" })
  ipCidrRange?: string;

  /**
   * Machine type of VM Instance underlying connector. Default is e2-micro
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machineType" })
  machineType?: string;

  /**
   * Maximum value of instances in autoscaling group underlying the connector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxInstances" })
  maxInstances?: number;

  /**
   * Maximum throughput of the connector in Mbps. Default is 300, max is 1000.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxThroughput" })
  maxThroughput?: number;

  /**
   * Minimum value of instances in autoscaling group underlying the connector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minInstances" })
  minInstances?: number;

  /**
   * Minimum throughput of the connector in Mbps. Default and min is 200.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minThroughput" })
  minThroughput?: number;

  /**
   * The resource name in the format `projects/* /locations/* /connectors/*`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Name of a VPC network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * The subnet in which to house the connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subnet" })
  @Type(() => Subnet)
  subnet?: Subnet;
}

/**
 * Output only. State of the VPC access connector.
 */
export enum ConnectorStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Ready = "READY",
  Creating = "CREATING",
  Deleting = "DELETING",
  Error = "ERROR",
  Updating = "UPDATING",
}

/**
 * Definition of a Serverless VPC Access connector.
 */
export class Connector extends SpeakeasyBase {
  /**
   * Output only. List of projects using the connector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectedProjects" })
  connectedProjects?: string[];

  /**
   * The range of internal addresses that follows RFC 4632 notation. Example: `10.132.0.0/28`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipCidrRange" })
  ipCidrRange?: string;

  /**
   * Machine type of VM Instance underlying connector. Default is e2-micro
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machineType" })
  machineType?: string;

  /**
   * Maximum value of instances in autoscaling group underlying the connector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxInstances" })
  maxInstances?: number;

  /**
   * Maximum throughput of the connector in Mbps. Default is 300, max is 1000.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxThroughput" })
  maxThroughput?: number;

  /**
   * Minimum value of instances in autoscaling group underlying the connector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minInstances" })
  minInstances?: number;

  /**
   * Minimum throughput of the connector in Mbps. Default and min is 200.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minThroughput" })
  minThroughput?: number;

  /**
   * The resource name in the format `projects/* /locations/* /connectors/*`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Name of a VPC network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: string;

  /**
   * Output only. State of the VPC access connector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ConnectorStateEnum;

  /**
   * The subnet in which to house the connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subnet" })
  @Type(() => Subnet)
  subnet?: Subnet;
}
