// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskExecutionStatusEnum string

const (
	TaskExecutionStatusEnumQueued       TaskExecutionStatusEnum = "QUEUED"
	TaskExecutionStatusEnumLaunching    TaskExecutionStatusEnum = "LAUNCHING"
	TaskExecutionStatusEnumPreparing    TaskExecutionStatusEnum = "PREPARING"
	TaskExecutionStatusEnumTransferring TaskExecutionStatusEnum = "TRANSFERRING"
	TaskExecutionStatusEnumVerifying    TaskExecutionStatusEnum = "VERIFYING"
	TaskExecutionStatusEnumSuccess      TaskExecutionStatusEnum = "SUCCESS"
	TaskExecutionStatusEnumError        TaskExecutionStatusEnum = "ERROR"
)

func (e *TaskExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "QUEUED":
		fallthrough
	case "LAUNCHING":
		fallthrough
	case "PREPARING":
		fallthrough
	case "TRANSFERRING":
		fallthrough
	case "VERIFYING":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "ERROR":
		*e = TaskExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskExecutionStatusEnum: %s", s)
	}
}
