/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkerSettings - Provides data to pass through to the worker harness.
 */
public class WorkerSettings {
    /**
     * The base URL for accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseUrl")
    public String baseUrl;

    public WorkerSettings withBaseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
        return this;
    }
    
    /**
     * Whether to send work progress updates to the service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportingEnabled")
    public Boolean reportingEnabled;

    public WorkerSettings withReportingEnabled(Boolean reportingEnabled) {
        this.reportingEnabled = reportingEnabled;
        return this;
    }
    
    /**
     * The Cloud Dataflow service path relative to the root URL, for example, "dataflow/v1b3/projects".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servicePath")
    public String servicePath;

    public WorkerSettings withServicePath(String servicePath) {
        this.servicePath = servicePath;
        return this;
    }
    
    /**
     * The Shuffle service path relative to the root URL, for example, "shuffle/v1beta1".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shuffleServicePath")
    public String shuffleServicePath;

    public WorkerSettings withShuffleServicePath(String shuffleServicePath) {
        this.shuffleServicePath = shuffleServicePath;
        return this;
    }
    
    /**
     * The prefix of the resources the system should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tempStoragePrefix")
    public String tempStoragePrefix;

    public WorkerSettings withTempStoragePrefix(String tempStoragePrefix) {
        this.tempStoragePrefix = tempStoragePrefix;
        return this;
    }
    
    /**
     * The ID of the worker running this pipeline.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workerId")
    public String workerId;

    public WorkerSettings withWorkerId(String workerId) {
        this.workerId = workerId;
        return this;
    }
    
    public WorkerSettings(){}
}
