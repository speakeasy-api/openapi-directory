// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETResizeClusterActionEnum
type GETResizeClusterActionEnum string

const (
	GETResizeClusterActionEnumResizeCluster GETResizeClusterActionEnum = "ResizeCluster"
)

func (e GETResizeClusterActionEnum) ToPointer() *GETResizeClusterActionEnum {
	return &e
}

func (e *GETResizeClusterActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ResizeCluster":
		*e = GETResizeClusterActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResizeClusterActionEnum: %v", v)
	}
}

// GETResizeClusterVersionEnum
type GETResizeClusterVersionEnum string

const (
	GETResizeClusterVersionEnumTwoThousandAndTwelve1201 GETResizeClusterVersionEnum = "2012-12-01"
)

func (e GETResizeClusterVersionEnum) ToPointer() *GETResizeClusterVersionEnum {
	return &e
}

func (e *GETResizeClusterVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETResizeClusterVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResizeClusterVersionEnum: %v", v)
	}
}

type GETResizeClusterRequest struct {
	Action GETResizeClusterActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A boolean value indicating whether the resize operation is using the classic resize process. If you don't provide this parameter or set the value to <code>false</code>, the resize type is elastic.
	Classic *bool `queryParam:"style=form,explode=true,name=Classic"`
	// The unique identifier for the cluster to resize.
	ClusterIdentifier string `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	// The new cluster type for the specified cluster.
	ClusterType *string `queryParam:"style=form,explode=true,name=ClusterType"`
	// The new node type for the nodes you are adding. If not specified, the cluster's current node type is used.
	NodeType *string `queryParam:"style=form,explode=true,name=NodeType"`
	// The new number of nodes for the cluster. If not specified, the cluster's current number of nodes is used.
	NumberOfNodes *int64 `queryParam:"style=form,explode=true,name=NumberOfNodes"`
	// The identifier of the reserved node.
	ReservedNodeID *string `queryParam:"style=form,explode=true,name=ReservedNodeId"`
	// The identifier of the target reserved node offering.
	TargetReservedNodeOfferingID *string                     `queryParam:"style=form,explode=true,name=TargetReservedNodeOfferingId"`
	Version                      GETResizeClusterVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETResizeClusterResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
