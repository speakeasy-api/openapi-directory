/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * HarvestOrderReporting - The reporting related to a harvest order operation
 */
public class HarvestOrderReporting {
    /**
     * The marketplace order status forced by BeezUP during the order change oepration. This could happend when there is no status on the marketplace side.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beezUPForcedStatus")
    public String beezUPForcedStatus;

    public HarvestOrderReporting withBeezUPForcedStatus(String beezUPForcedStatus) {
        this.beezUPForcedStatus = beezUPForcedStatus;
        return this;
    }
    
    /**
     * BeezUP order status. Unified for all marketplaces.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beezUPStatus")
    public String beezUPStatus;

    public HarvestOrderReporting withBeezUPStatus(String beezUPStatus) {
        this.beezUPStatus = beezUPStatus;
        return this;
    }
    
    /**
     * The creation UTC date of the execution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationUtcDate")
    public OffsetDateTime creationUtcDate;

    public HarvestOrderReporting withCreationUtcDate(OffsetDateTime creationUtcDate) {
        this.creationUtcDate = creationUtcDate;
        return this;
    }
    
    /**
     * The warning message during the execution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;

    public HarvestOrderReporting withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * The execution identifier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionUUID")
    public String executionUUID;

    public HarvestOrderReporting withExecutionUUID(String executionUUID) {
        this.executionUUID = executionUUID;
        return this;
    }
    
    /**
     * The last update UTC date of the execution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdateUtcDate")
    public OffsetDateTime lastUpdateUtcDate;

    public HarvestOrderReporting withLastUpdateUtcDate(OffsetDateTime lastUpdateUtcDate) {
        this.lastUpdateUtcDate = lastUpdateUtcDate;
        return this;
    }
    
    /**
     * The order marketplace status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("marketplaceStatus")
    public String marketplaceStatus;

    public HarvestOrderReporting withMarketplaceStatus(String marketplaceStatus) {
        this.marketplaceStatus = marketplaceStatus;
        return this;
    }
    
    /**
     * The processing status of the execution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingStatus")
    public String processingStatus;

    public HarvestOrderReporting withProcessingStatus(String processingStatus) {
        this.processingStatus = processingStatus;
        return this;
    }
    
    /**
     * The warning message during the execution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warningMessage")
    public String warningMessage;

    public HarvestOrderReporting withWarningMessage(String warningMessage) {
        this.warningMessage = warningMessage;
        return this;
    }
    
    public HarvestOrderReporting(){}
}
