/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DialogCodeHookSettings } from "./dialogcodehooksettings";
import { FulfillmentCodeHookSettings } from "./fulfillmentcodehooksettings";
import { InitialResponseSetting } from "./initialresponsesetting";
import { InputContext } from "./inputcontext";
import { IntentClosingSetting } from "./intentclosingsetting";
import { IntentConfirmationSetting } from "./intentconfirmationsetting";
import { KendraConfiguration } from "./kendraconfiguration";
import { OutputContext } from "./outputcontext";
import { SampleUtterance } from "./sampleutterance";
import { SlotPriority } from "./slotpriority";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeIntentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "botId" })
  botId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "botVersion" })
  botVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dialogCodeHook" })
  @Type(() => DialogCodeHookSettings)
  dialogCodeHook?: DialogCodeHookSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "fulfillmentCodeHook" })
  @Type(() => FulfillmentCodeHookSettings)
  fulfillmentCodeHook?: FulfillmentCodeHookSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "initialResponseSetting" })
  @Type(() => InitialResponseSetting)
  initialResponseSetting?: InitialResponseSetting;

  @SpeakeasyMetadata({ elemType: InputContext })
  @Expose({ name: "inputContexts" })
  @Type(() => InputContext)
  inputContexts?: InputContext[];

  @SpeakeasyMetadata()
  @Expose({ name: "intentClosingSetting" })
  @Type(() => IntentClosingSetting)
  intentClosingSetting?: IntentClosingSetting;

  @SpeakeasyMetadata()
  @Expose({ name: "intentConfirmationSetting" })
  @Type(() => IntentConfirmationSetting)
  intentConfirmationSetting?: IntentConfirmationSetting;

  @SpeakeasyMetadata()
  @Expose({ name: "intentId" })
  intentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "intentName" })
  intentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "kendraConfiguration" })
  @Type(() => KendraConfiguration)
  kendraConfiguration?: KendraConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "localeId" })
  localeId?: string;

  @SpeakeasyMetadata({ elemType: OutputContext })
  @Expose({ name: "outputContexts" })
  @Type(() => OutputContext)
  outputContexts?: OutputContext[];

  @SpeakeasyMetadata()
  @Expose({ name: "parentIntentSignature" })
  parentIntentSignature?: string;

  @SpeakeasyMetadata({ elemType: SampleUtterance })
  @Expose({ name: "sampleUtterances" })
  @Type(() => SampleUtterance)
  sampleUtterances?: SampleUtterance[];

  @SpeakeasyMetadata({ elemType: SlotPriority })
  @Expose({ name: "slotPriorities" })
  @Type(() => SlotPriority)
  slotPriorities?: SlotPriority[];
}
