"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import order as shared_order
from ..shared import statusinvalid as shared_statusinvalid
from enum import Enum
from typing import Optional

class GetOrdersStatusStatusJSONStatusEnum(str, Enum):
    r"""Status of the Order used as filter"""
    ABANDONED = 'Abandoned'
    CANCELED = 'Canceled'
    PENDING_PAYMENT = 'Pending Payment'
    PAID = 'Paid'


@dataclasses.dataclass
class GetOrdersStatusStatusJSONRequest:
    
    authtoken: str = dataclasses.field(metadata={'query_param': { 'field_name': 'authtoken', 'style': 'form', 'explode': True }})
    r"""API OAuth token."""  
    login: str = dataclasses.field(metadata={'query_param': { 'field_name': 'login', 'style': 'form', 'explode': True }})
    r"""API OAuth login."""  
    status: GetOrdersStatusStatusJSONStatusEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'status', 'style': 'simple', 'explode': False }})
    r"""Status of the Order used as filter"""  
    

@dataclasses.dataclass
class GetOrdersStatusStatusJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    orders: Optional[list[shared_order.Order]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    status_invalid: Optional[shared_statusinvalid.StatusInvalid] = dataclasses.field(default=None)
    r"""Status Invalid."""  
    