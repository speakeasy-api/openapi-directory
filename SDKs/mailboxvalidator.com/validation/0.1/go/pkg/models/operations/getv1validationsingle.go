// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetV1ValidationSingleFormatEnum - Return the result in json (default) or xml format.
type GetV1ValidationSingleFormatEnum string

const (
	GetV1ValidationSingleFormatEnumJSON GetV1ValidationSingleFormatEnum = "json"
	GetV1ValidationSingleFormatEnumXML  GetV1ValidationSingleFormatEnum = "xml"
)

func (e *GetV1ValidationSingleFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		*e = GetV1ValidationSingleFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV1ValidationSingleFormatEnum: %s", s)
	}
}

type GetV1ValidationSingleRequest struct {
	// The email address to be validated.
	Email string `queryParam:"style=form,explode=true,name=email"`
	// Return the result in json (default) or xml format.
	Format *GetV1ValidationSingleFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// API key.
	Key string `queryParam:"style=form,explode=true,name=key"`
}

type GetV1ValidationSingleResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// single email validation response
	GetV1ValidationSingle200ApplicationJSONString *string
}
