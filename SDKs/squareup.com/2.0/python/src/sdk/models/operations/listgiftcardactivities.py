"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listgiftcardactivitiesresponse as shared_listgiftcardactivitiesresponse
from typing import Optional


@dataclasses.dataclass
class ListGiftCardActivitiesSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListGiftCardActivitiesRequest:
    
    begin_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'begin_time', 'style': 'form', 'explode': True }})
    r"""The timestamp for the beginning of the reporting period, in RFC 3339 format.
    Inclusive. Default: The current time minus one year.
    """  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""A pagination cursor returned by a previous call to this endpoint.
    Provide this cursor to retrieve the next set of results for the original query.
    If you do not provide the cursor, the call returns the first page of the results.
    """  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_time', 'style': 'form', 'explode': True }})
    r"""The timestamp for the end of the reporting period, in RFC 3339 format.
    Inclusive. Default: The current time.
    """  
    gift_card_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'gift_card_id', 'style': 'form', 'explode': True }})
    r"""If you provide a gift card ID, the endpoint returns activities that belong
    to the specified gift card. Otherwise, the endpoint returns all gift card activities for 
    the seller.
    """  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""If you provide a limit value, the endpoint returns the specified number
    of results (or less) per page. A maximum value is 100. The default value is 50.
    """  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'location_id', 'style': 'form', 'explode': True }})
    r"""If you provide a location ID, the endpoint returns gift card activities for that location.
    Otherwise, the endpoint returns gift card activities for all locations.
    """  
    sort_order: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_order', 'style': 'form', 'explode': True }})
    r"""The order in which the endpoint returns the activities, based on `created_at`.
    - `ASC` - Oldest to newest.
    - `DESC` - Newest to oldest (default).
    """  
    type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""If you provide a type, the endpoint returns gift card activities of this type.
    Otherwise, the endpoint returns all types of gift card activities.
    """  
    

@dataclasses.dataclass
class ListGiftCardActivitiesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_gift_card_activities_response: Optional[shared_listgiftcardactivitiesresponse.ListGiftCardActivitiesResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    