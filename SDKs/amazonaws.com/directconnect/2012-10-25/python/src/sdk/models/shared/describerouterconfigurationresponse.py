"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import routertype as shared_routertype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeRouterConfigurationResponse:
    r"""Success"""
    
    customer_router_config: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerRouterConfig'), 'exclude': lambda f: f is None }})  
    router: Optional[shared_routertype.RouterType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('router'), 'exclude': lambda f: f is None }})  
    virtual_interface_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtualInterfaceId'), 'exclude': lambda f: f is None }})  
    virtual_interface_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtualInterfaceName'), 'exclude': lambda f: f is None }})  
    