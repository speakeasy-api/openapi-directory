/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PointPointHourlyCloudCoverData } from "./pointpointhourlycloudcoverdata";
import { PointPointHourlyPrecipitationData } from "./pointpointhourlyprecipitationdata";
import { PointPointHourlyProbData } from "./pointpointhourlyprobdata";
import { PointPointHourlyWindData } from "./pointpointhourlywinddata";
import { Expose, Transform, Type } from "class-transformer";

export class PointPointHourlyData extends SpeakeasyBase {
  /**
   * Convective available potential energy.
   *
   * @remarks
   * Unit: J/kg
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cape" })
  cape?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "cloud_cover" })
  @Type(() => PointPointHourlyCloudCoverData)
  cloudCover: PointPointHourlyCloudCoverData;

  /**
   * Datetime in YYYY-MM-DDTHH:MM:SS format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dew_point" })
  dewPoint?: number;

  /**
   * Evaporation of liquid water into water vapor.
   *
   * @remarks
   * Unit: mm/h
   */
  @SpeakeasyMetadata()
  @Expose({ name: "evaporation" })
  evaporation?: number;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feels_like" })
  feelsLike?: number;

  /**
   * Relative humidity.
   *
   * @remarks
   * Unit: \%
   */
  @SpeakeasyMetadata()
  @Expose({ name: "humidity" })
  humidity?: number;

  /**
   * Numeric identifier of the weather icon. The following values can appear:
   *
   * @remarks
   *
   * * 1 - Not available
   * * 2 - Sunny
   * * 3 - Mostly sunny
   * * 4 - Partly sunny
   * * 5 - Mostly cloudy
   * * 6 - Cloudy
   * * 7 - Overcast
   * * 8 - Overcast with low clouds
   * * 9 - Fog
   * * 10 - Light rain
   * * 11 - Rain
   * * 12 - Possible rain
   * * 13 - Rain shower
   * * 14 - Thunderstorm
   * * 15 - Local thunderstorms
   * * 16 - Light snow
   * * 17 - Snow
   * * 18 - Possible snow
   * * 19 - Snow shower
   * * 20 - Rain and snow
   * * 21 - Possible rain and snow
   * * 22 - Rain and snow
   * * 23 - Freezing rain
   * * 24 - Possible freezing rain
   * * 25 - Hail
   * * 26 - Clear (night)
   * * 27 - Mostly clear (night)
   * * 28 - Partly clear (night)
   * * 29 - Mostly cloudy (night)
   * * 30 - Cloudy (night)
   * * 31 - Overcast with low clouds (night)
   * * 32 - Rain shower (night)
   * * 33 - Local thunderstorms (night)
   * * 34 - Snow shower (night)
   * * 35 - Rain and snow (night)
   * * 36 - Possible freezing rain (night)
   *
   * Unit: weather_ico0_36
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icon" })
  icon?: number;

  /**
   * Global downward short-wave radiation flux.
   *
   * @remarks
   * Unit: W/m2
   */
  @SpeakeasyMetadata()
  @Expose({ name: "irradiance" })
  irradiance?: number;

  /**
   * Surface lifted index.
   *
   * @remarks
   * Unit: K
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lftx" })
  lftx?: number;

  /**
   * Total column of ozone.
   *
   * @remarks
   * Unit: Dobson
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ozone" })
  ozone?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "precipitation" })
  @Type(() => PointPointHourlyPrecipitationData)
  precipitation: PointPointHourlyPrecipitationData;

  /**
   * Atmospheric pressure at mean sea level.
   *
   * @remarks
   * Units: metric = hPa, us = Hg, uk = hPa, ca = kPa
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pressure" })
  pressure?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "probability" })
  @Type(() => PointPointHourlyProbData)
  probability: PointPointHourlyProbData;

  /**
   * Snow depth.
   *
   * @remarks
   * Units: metric = cm, us = inch, uk = cm, ca = cm
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snow_depth" })
  snowDepth?: number;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "soil_temperature" })
  soilTemperature?: number;

  /**
   * Short text summary of the weather, e.g. `Light rain`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "summary" })
  summary?: string;

  /**
   * Sunshine duration since start of previous hour.
   *
   * @remarks
   * Unit: s
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sunshine_duration" })
  sunshineDuration?: number;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "surface_temperature" })
  surfaceTemperature?: number;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "temperature" })
  temperature?: number;

  /**
   * UV index, values from zero (low risk of harm) to 11+ (extreme risk of harm).
   *
   * @remarks
   * Unit: uv_index
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uv_index" })
  uvIndex?: number;

  /**
   * Visibility.
   *
   * @remarks
   * Units: metric = km, us = mi, uk = mi, ca = km
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: number;

  /**
   * String identifier of the weather icon, e.g. `light_rain`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weather" })
  weather?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "wind" })
  @Type(() => PointPointHourlyWindData)
  wind: PointPointHourlyWindData;

  /**
   * Units: metric = °C, us = °F, uk = °C, ca = °C
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wind_chill" })
  windChill?: number;
}
