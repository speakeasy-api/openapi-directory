/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CloudStorage } from "./cloudstorage";
import { CustomerAddresses } from "./customeraddresses";
import { Customers } from "./customers";
import { DeliveryNote } from "./deliverynote";
import { EnumApi } from "./enumapi";
import { Events } from "./events";
import { Invoice } from "./invoice";
import { Orders } from "./orders";
import { Products } from "./products";
import { Provisioning } from "./provisioning";
import { Shipments } from "./shipments";
import { Webhooks } from "./webhooks";
import axios, { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://app.billbee.io"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * Documentation of the Billbee REST API to connect a Billbee account to external aplications.
 *
 * @remarks
 *
 * ## Endpoint
 *
 * The Billbee API endpoint base url is https://api.billbee.io/api/v1
 *
 * ## Activation
 *
 * You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.
 *
 * ## Authorization & security
 *
 * Because you can access private data with the Billbee API, every request has to be sent over https and must
 *
 * * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key
 * * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header
 *
 * ## Throttling
 *
 * Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.
 *
 * When you exceed these 2 calls, the API will return a HTTP 429 status code
 *
 *
 */
export class SDK {
  public cloudStorage: CloudStorage;
  public customerAddresses: CustomerAddresses;
  public customers: Customers;
  public deliveryNote: DeliveryNote;
  public enumApi: EnumApi;
  public events: Events;
  public invoice: Invoice;
  public orders: Orders;
  public products: Products;
  public provisioning: Provisioning;
  public shipments: Shipments;
  public webhooks: Webhooks;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.cloudStorage = new CloudStorage(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.customerAddresses = new CustomerAddresses(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.customers = new Customers(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.deliveryNote = new DeliveryNote(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.enumApi = new EnumApi(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.events = new Events(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.invoice = new Invoice(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.orders = new Orders(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.products = new Products(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.provisioning = new Provisioning(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.shipments = new Shipments(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.webhooks = new Webhooks(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
