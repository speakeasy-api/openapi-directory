"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSubscription = exports.EventSubscriptionTypeEnum = exports.EventSubscriptionStatusEnum = exports.EventSubscriptionSelectedEventCategoryEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * If specified, this subscription will only receive webhooks for Events with the specified `category`.
 */
var EventSubscriptionSelectedEventCategoryEnum;
(function (EventSubscriptionSelectedEventCategoryEnum) {
    EventSubscriptionSelectedEventCategoryEnum["AccountCreated"] = "account.created";
    EventSubscriptionSelectedEventCategoryEnum["AccountUpdated"] = "account.updated";
    EventSubscriptionSelectedEventCategoryEnum["AccountNumberCreated"] = "account_number.created";
    EventSubscriptionSelectedEventCategoryEnum["AccountNumberUpdated"] = "account_number.updated";
    EventSubscriptionSelectedEventCategoryEnum["AccountStatementCreated"] = "account_statement.created";
    EventSubscriptionSelectedEventCategoryEnum["AccountTransferCreated"] = "account_transfer.created";
    EventSubscriptionSelectedEventCategoryEnum["AccountTransferUpdated"] = "account_transfer.updated";
    EventSubscriptionSelectedEventCategoryEnum["AchPrenotificationCreated"] = "ach_prenotification.created";
    EventSubscriptionSelectedEventCategoryEnum["AchPrenotificationUpdated"] = "ach_prenotification.updated";
    EventSubscriptionSelectedEventCategoryEnum["AchTransferCreated"] = "ach_transfer.created";
    EventSubscriptionSelectedEventCategoryEnum["AchTransferUpdated"] = "ach_transfer.updated";
    EventSubscriptionSelectedEventCategoryEnum["CardCreated"] = "card.created";
    EventSubscriptionSelectedEventCategoryEnum["CardUpdated"] = "card.updated";
    EventSubscriptionSelectedEventCategoryEnum["CardDisputeCreated"] = "card_dispute.created";
    EventSubscriptionSelectedEventCategoryEnum["CardDisputeUpdated"] = "card_dispute.updated";
    EventSubscriptionSelectedEventCategoryEnum["CheckDepositCreated"] = "check_deposit.created";
    EventSubscriptionSelectedEventCategoryEnum["CheckDepositUpdated"] = "check_deposit.updated";
    EventSubscriptionSelectedEventCategoryEnum["CheckTransferCreated"] = "check_transfer.created";
    EventSubscriptionSelectedEventCategoryEnum["CheckTransferUpdated"] = "check_transfer.updated";
    EventSubscriptionSelectedEventCategoryEnum["DeclinedTransactionCreated"] = "declined_transaction.created";
    EventSubscriptionSelectedEventCategoryEnum["DigitalWalletTokenCreated"] = "digital_wallet_token.created";
    EventSubscriptionSelectedEventCategoryEnum["DigitalWalletTokenUpdated"] = "digital_wallet_token.updated";
    EventSubscriptionSelectedEventCategoryEnum["DocumentCreated"] = "document.created";
    EventSubscriptionSelectedEventCategoryEnum["EntityCreated"] = "entity.created";
    EventSubscriptionSelectedEventCategoryEnum["EntityUpdated"] = "entity.updated";
    EventSubscriptionSelectedEventCategoryEnum["ExternalAccountCreated"] = "external_account.created";
    EventSubscriptionSelectedEventCategoryEnum["FileCreated"] = "file.created";
    EventSubscriptionSelectedEventCategoryEnum["GroupUpdated"] = "group.updated";
    EventSubscriptionSelectedEventCategoryEnum["GroupHeartbeat"] = "group.heartbeat";
    EventSubscriptionSelectedEventCategoryEnum["InboundAchTransferReturnCreated"] = "inbound_ach_transfer_return.created";
    EventSubscriptionSelectedEventCategoryEnum["InboundAchTransferReturnUpdated"] = "inbound_ach_transfer_return.updated";
    EventSubscriptionSelectedEventCategoryEnum["InboundWireDrawdownRequestCreated"] = "inbound_wire_drawdown_request.created";
    EventSubscriptionSelectedEventCategoryEnum["OauthConnectionCreated"] = "oauth_connection.created";
    EventSubscriptionSelectedEventCategoryEnum["OauthConnectionDeactivated"] = "oauth_connection.deactivated";
    EventSubscriptionSelectedEventCategoryEnum["PendingTransactionCreated"] = "pending_transaction.created";
    EventSubscriptionSelectedEventCategoryEnum["PendingTransactionUpdated"] = "pending_transaction.updated";
    EventSubscriptionSelectedEventCategoryEnum["RealTimeDecisionCardAuthorizationRequested"] = "real_time_decision.card_authorization_requested";
    EventSubscriptionSelectedEventCategoryEnum["RealTimeDecisionDigitalWalletTokenRequested"] = "real_time_decision.digital_wallet_token_requested";
    EventSubscriptionSelectedEventCategoryEnum["RealTimeDecisionDigitalWalletAuthenticationRequested"] = "real_time_decision.digital_wallet_authentication_requested";
    EventSubscriptionSelectedEventCategoryEnum["RealTimePaymentsTransferCreated"] = "real_time_payments_transfer.created";
    EventSubscriptionSelectedEventCategoryEnum["RealTimePaymentsTransferUpdated"] = "real_time_payments_transfer.updated";
    EventSubscriptionSelectedEventCategoryEnum["RealTimePaymentsRequestForPaymentCreated"] = "real_time_payments_request_for_payment.created";
    EventSubscriptionSelectedEventCategoryEnum["RealTimePaymentsRequestForPaymentUpdated"] = "real_time_payments_request_for_payment.updated";
    EventSubscriptionSelectedEventCategoryEnum["TransactionCreated"] = "transaction.created";
    EventSubscriptionSelectedEventCategoryEnum["WireDrawdownRequestCreated"] = "wire_drawdown_request.created";
    EventSubscriptionSelectedEventCategoryEnum["WireDrawdownRequestUpdated"] = "wire_drawdown_request.updated";
    EventSubscriptionSelectedEventCategoryEnum["WireTransferCreated"] = "wire_transfer.created";
    EventSubscriptionSelectedEventCategoryEnum["WireTransferUpdated"] = "wire_transfer.updated";
})(EventSubscriptionSelectedEventCategoryEnum = exports.EventSubscriptionSelectedEventCategoryEnum || (exports.EventSubscriptionSelectedEventCategoryEnum = {}));
/**
 * This indicates if we'll send notifications to this subscription.
 */
var EventSubscriptionStatusEnum;
(function (EventSubscriptionStatusEnum) {
    EventSubscriptionStatusEnum["Active"] = "active";
    EventSubscriptionStatusEnum["Disabled"] = "disabled";
    EventSubscriptionStatusEnum["Deleted"] = "deleted";
    EventSubscriptionStatusEnum["RequiresAttention"] = "requires_attention";
})(EventSubscriptionStatusEnum = exports.EventSubscriptionStatusEnum || (exports.EventSubscriptionStatusEnum = {}));
/**
 * A constant representing the object's type. For this resource it will always be `event_subscription`.
 */
var EventSubscriptionTypeEnum;
(function (EventSubscriptionTypeEnum) {
    EventSubscriptionTypeEnum["EventSubscription"] = "event_subscription";
})(EventSubscriptionTypeEnum = exports.EventSubscriptionTypeEnum || (exports.EventSubscriptionTypeEnum = {}));
/**
 * Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks).
 */
var EventSubscription = /** @class */ (function (_super) {
    __extends(EventSubscription, _super);
    function EventSubscription() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], EventSubscription.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], EventSubscription.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selected_event_category" }),
        __metadata("design:type", String)
    ], EventSubscription.prototype, "selectedEventCategory", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shared_secret" }),
        __metadata("design:type", String)
    ], EventSubscription.prototype, "sharedSecret", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], EventSubscription.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], EventSubscription.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], EventSubscription.prototype, "url", void 0);
    return EventSubscription;
}(utils_1.SpeakeasyBase));
exports.EventSubscription = EventSubscription;
