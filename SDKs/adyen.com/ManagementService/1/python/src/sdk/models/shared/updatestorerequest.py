"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import storesplitconfiguration as shared_storesplitconfiguration
from ..shared import updatableaddress as shared_updatableaddress
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdateStoreRequestStatusEnum(str, Enum):
    r"""The status of the store. Possible values are:
    
    - **active**: This value is assigned automatically when a store is created. 
    - **inactive**: The maximum [transaction limits and number of Store-and-Forward transactions](https://docs.adyen.com/point-of-sale/determine-account-structure/configure-features#payment-features) for the store are set to 0. This blocks new transactions, but captures are still possible.
    - **closed**: The terminals of the store are reassigned to the merchant inventory, so they can't process payments.
    
    You can change the status from **active** to **inactive**, and from **inactive** to **active** or **closed**. 
    Once **closed**, a store can't be reopened.
    """
    ACTIVE = 'active'
    CLOSED = 'closed'
    INACTIVE = 'inactive'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateStoreRequest:
    
    address: Optional[shared_updatableaddress.UpdatableAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    business_line_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessLineIds'), 'exclude': lambda f: f is None }})
    r"""The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of the store."""  
    external_reference_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalReferenceId'), 'exclude': lambda f: f is None }})
    r"""When using the Zip payment method: The location ID that Zip has assigned to your store."""  
    split_configuration: Optional[shared_storesplitconfiguration.StoreSplitConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('splitConfiguration'), 'exclude': lambda f: f is None }})  
    status: Optional[UpdateStoreRequestStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the store. Possible values are:
    
    - **active**: This value is assigned automatically when a store is created. 
    - **inactive**: The maximum [transaction limits and number of Store-and-Forward transactions](https://docs.adyen.com/point-of-sale/determine-account-structure/configure-features#payment-features) for the store are set to 0. This blocks new transactions, but captures are still possible.
    - **closed**: The terminals of the store are reassigned to the merchant inventory, so they can't process payments.
    
    You can change the status from **active** to **inactive**, and from **inactive** to **active** or **closed**. 
    Once **closed**, a store can't be reopened.
    """  
    