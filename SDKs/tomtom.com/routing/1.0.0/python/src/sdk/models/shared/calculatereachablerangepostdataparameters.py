"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CalculateReachableRangePostDataParametersAvoidAreasRectanglesNorthEastCorner:
    
    latitude: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latitude'), 'exclude': lambda f: f is None }})  
    longitude: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longitude'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CalculateReachableRangePostDataParametersAvoidAreasRectanglesSouthWestCorner:
    
    latitude: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latitude'), 'exclude': lambda f: f is None }})  
    longitude: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longitude'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CalculateReachableRangePostDataParametersAvoidAreasRectangles:
    
    north_east_corner: Optional[CalculateReachableRangePostDataParametersAvoidAreasRectanglesNorthEastCorner] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('northEastCorner'), 'exclude': lambda f: f is None }})  
    south_west_corner: Optional[CalculateReachableRangePostDataParametersAvoidAreasRectanglesSouthWestCorner] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('southWestCorner'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CalculateReachableRangePostDataParametersAvoidAreas:
    
    rectangles: Optional[list[CalculateReachableRangePostDataParametersAvoidAreasRectangles]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rectangles'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CalculateReachableRangePostDataParameters:
    
    allow_vignette: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowVignette'), 'exclude': lambda f: f is None }})  
    avoid_areas: Optional[CalculateReachableRangePostDataParametersAvoidAreas] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avoidAreas'), 'exclude': lambda f: f is None }})  
    avoid_vignette: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avoidVignette'), 'exclude': lambda f: f is None }})  
    