"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class IPReputationReputationEnum(str, Enum):
    r"""The reputation category this IP reputation represents."""
    REPUTATION_CATEGORY_UNSPECIFIED = 'REPUTATION_CATEGORY_UNSPECIFIED'
    HIGH = 'HIGH'
    MEDIUM = 'MEDIUM'
    LOW = 'LOW'
    BAD = 'BAD'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IPReputation:
    r"""IP Reputation information for a set of IPs in a specific reputation category."""
    
    ip_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipCount'), 'exclude': lambda f: f is None }})
    r"""Total number of unique IPs in this reputation category. This metric only pertains to traffic that passed [SPF](http://www.openspf.org/) or [DKIM](http://www.dkim.org/)."""  
    reputation: Optional[IPReputationReputationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reputation'), 'exclude': lambda f: f is None }})
    r"""The reputation category this IP reputation represents."""  
    sample_ips: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampleIps'), 'exclude': lambda f: f is None }})
    r"""A sample of IPs in this reputation category."""  
    