<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ContextDataType - Contextual user data type used for evaluating the risk of an unexpected event by Amazon Cognito advanced security.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ContextDataType
{
	#[\JMS\Serializer\Annotation\SerializedName('EncodedData')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $encodedData = null;
    
    /**
     * $httpHeaders
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\HttpHeader> $httpHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('HttpHeaders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\HttpHeader>')]
    public array $httpHeaders;
    
	#[\JMS\Serializer\Annotation\SerializedName('IpAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ipAddress;
    
	#[\JMS\Serializer\Annotation\SerializedName('ServerName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverName;
    
	#[\JMS\Serializer\Annotation\SerializedName('ServerPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serverPath;
    
	public function __construct()
	{
		$this->encodedData = null;
		$this->httpHeaders = [];
		$this->ipAddress = "";
		$this->serverName = "";
		$this->serverPath = "";
	}
}
