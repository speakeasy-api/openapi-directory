"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deliverystreamtype_enum as shared_deliverystreamtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListDeliveryStreamsInput:
    
    delivery_stream_type: Optional[shared_deliverystreamtype_enum.DeliveryStreamTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryStreamType'), 'exclude': lambda f: f is None }})  
    exclusive_start_delivery_stream_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExclusiveStartDeliveryStreamName'), 'exclude': lambda f: f is None }})  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Limit'), 'exclude': lambda f: f is None }})  
    