/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Venue - Venue
 */
public class Venue {
    /**
     * Venue accessible seating detail
     */
    
    public String accessibleSeatingDetail;

    public Venue withAccessibleSeatingDetail(String accessibleSeatingDetail) {
        this.accessibleSeatingDetail = accessibleSeatingDetail;
        return this;
    }
    
    /**
     * Additional information of the entity
     */
    
    public String additionalInfo;

    public Venue withAdditionalInfo(String additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }
    
    /**
     * Address
     */
    
    public Address address;

    public Venue withAddress(Address address) {
        this.address = address;
        return this;
    }
    
    /**
     * Venue box office information
     */
    
    public VenueBoxOfficeInfo boxOfficeInfo;

    public Venue withBoxOfficeInfo(VenueBoxOfficeInfo boxOfficeInfo) {
        this.boxOfficeInfo = boxOfficeInfo;
        return this;
    }
    
    /**
     * City
     */
    
    public City city;

    public Venue withCity(City city) {
        this.city = city;
        return this;
    }
    
    /**
     * Country
     */
    
    public Country country;

    public Venue withCountry(Country country) {
        this.country = country;
        return this;
    }
    
    /**
     * Default currency of ticket prices for events in this venue
     */
    
    public String currency;

    public Venue withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Description's of the entity
     */
    
    public String description;

    public Venue withDescription(String description) {
        this.description = description;
        return this;
    }
    
    
    public Double distance;

    public Venue withDistance(Double distance) {
        this.distance = distance;
        return this;
    }
    
    /**
     * The list of associated DMAs (Designated Market Areas) of the venue
     */
    
    public Dma[] dma;

    public Venue withDma(Dma[] dma) {
        this.dma = dma;
        return this;
    }
    
    /**
     * List of external links
     */
    
    public java.util.Map<String, ExternalLink[]> externalLinks;

    public Venue withExternalLinks(java.util.Map<String, ExternalLink[]> externalLinks) {
        this.externalLinks = externalLinks;
        return this;
    }
    
    /**
     * Venue general information
     */
    
    public VenueGeneralInfo generalInfo;

    public Venue withGeneralInfo(VenueGeneralInfo generalInfo) {
        this.generalInfo = generalInfo;
        return this;
    }
    
    /**
     * Unique id of the entity in the discovery API
     */
    
    public String id;

    public Venue withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Images of the entity
     */
    
    public Image[] images;

    public Venue withImages(Image[] images) {
        this.images = images;
        return this;
    }
    
    /**
     * Locale in which the content is returned
     */
    
    public String locale;

    public Venue withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * Location
     */
    
    public Location location;

    public Venue withLocation(Location location) {
        this.location = location;
        return this;
    }
    
    /**
     * Markets of the venue
     */
    
    public Market[] markets;

    public Venue withMarkets(Market[] markets) {
        this.markets = markets;
        return this;
    }
    
    /**
     * Name of the entity
     */
    
    public String name;

    public Venue withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Venue parking info
     */
    
    public String parkingDetail;

    public Venue withParkingDetail(String parkingDetail) {
        this.parkingDetail = parkingDetail;
        return this;
    }
    
    /**
     * Postal code / zipcode of the venue
     */
    
    public String postalCode;

    public Venue withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Social networks data
     */
    
    public Social social;

    public Venue withSocial(Social social) {
        this.social = social;
        return this;
    }
    
    /**
     * State
     */
    
    public State state;

    public Venue withState(State state) {
        this.state = state;
        return this;
    }
    
    /**
     * Indicate if this is a test entity, by default test entities won't appear in discovery API
     */
    
    public Boolean test;

    public Venue withTest(Boolean test) {
        this.test = test;
        return this;
    }
    
    /**
     * Timezone of the venue
     */
    
    public String timezone;

    public Venue withTimezone(String timezone) {
        this.timezone = timezone;
        return this;
    }
    
    /**
     * Type of the entity
     */
    
    public VenueTypeEnum type;

    public Venue withType(VenueTypeEnum type) {
        this.type = type;
        return this;
    }
    
    
    public String units;

    public Venue withUnits(String units) {
        this.units = units;
        return this;
    }
    
    /**
     * number of upcoming events
     */
    
    public java.util.Map<String, Integer> upcomingEvents;

    public Venue withUpcomingEvents(java.util.Map<String, Integer> upcomingEvents) {
        this.upcomingEvents = upcomingEvents;
        return this;
    }
    
    /**
     * URL of a web site detail page of the entity
     */
    
    public String url;

    public Venue withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public Venue(@JsonProperty("id") String id, @JsonProperty("type") VenueTypeEnum type) {
        this.id = id;
        this.type = type;
  }
}
