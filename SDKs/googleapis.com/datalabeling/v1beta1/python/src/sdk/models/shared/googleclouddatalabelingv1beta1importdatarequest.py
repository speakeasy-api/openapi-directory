"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatalabelingv1beta1inputconfig as shared_googleclouddatalabelingv1beta1inputconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatalabelingV1beta1ImportDataRequest:
    r"""Request message for ImportData API."""
    
    input_config: Optional[shared_googleclouddatalabelingv1beta1inputconfig.GoogleCloudDatalabelingV1beta1InputConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputConfig'), 'exclude': lambda f: f is None }})
    r"""The configuration of input data, including data type, location, etc."""  
    user_email_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userEmailAddress'), 'exclude': lambda f: f is None }})
    r"""Email of the user who started the import task and should be notified by email. If empty no notification will be sent."""  
    