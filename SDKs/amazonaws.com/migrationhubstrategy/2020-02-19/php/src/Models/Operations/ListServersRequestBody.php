<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class ListServersRequestBody
{
    /**
     *  Specifies the filter value, which is based on the type of server criteria. For example, if <code>serverCriteria</code> is <code>OS_NAME</code>, and the <code>filterValue</code> is equal to <code>WindowsServer</code>, then <code>ListServers</code> returns all of the servers matching the OS name <code>WindowsServer</code>. 
     * 
     * @var ?string $filterValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filterValue = null;
    
    /**
     *  Specifies the group ID to filter on. 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Group> $groupIdFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('groupIdFilter')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Group>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $groupIdFilter = null;
    
    /**
     *  The maximum number of items to include in the response. The maximum value is 100. 
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxResults')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     *  The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set <code>maxResults</code> to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10. 
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     *  Criteria for filtering servers. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListServersRequestBodyServerCriteriaEnum $serverCriteria
     */
	#[\JMS\Serializer\Annotation\SerializedName('serverCriteria')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ListServersRequestBodyServerCriteriaEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ListServersRequestBodyServerCriteriaEnum $serverCriteria = null;
    
    /**
     *  Specifies whether to sort by ascending (<code>ASC</code>) or descending (<code>DESC</code>) order. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListServersRequestBodySortEnum $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ListServersRequestBodySortEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ListServersRequestBodySortEnum $sort = null;
    
	public function __construct()
	{
		$this->filterValue = null;
		$this->groupIdFilter = null;
		$this->maxResults = null;
		$this->nextToken = null;
		$this->serverCriteria = null;
		$this->sort = null;
	}
}
