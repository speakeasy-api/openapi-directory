"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class GroupEmbargoOptionsTypeEnum(str, Enum):
    r"""Embargo permission type"""
    LOGGED_IN = 'logged_in'
    IP_RANGE = 'ip_range'
    ADMINISTRATOR = 'administrator'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GroupEmbargoOptions:
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Embargo option id"""  
    ip_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip_name') }})
    r"""IP range name; value appears if type is ip_range"""  
    type: GroupEmbargoOptionsTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Embargo permission type"""  
    