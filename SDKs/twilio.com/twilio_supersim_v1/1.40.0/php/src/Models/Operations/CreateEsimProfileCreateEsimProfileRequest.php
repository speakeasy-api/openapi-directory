<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateEsimProfileCreateEsimProfileRequest
{
    /**
     * The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum $callbackMethod
     */
	#[SpeakeasyMetadata('form:name=CallbackMethod')]
    public ?CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum $callbackMethod = null;
    
    /**
     * The URL we should call using the `callback_method` when the status of the eSIM Profile changes. At this stage of the eSIM Profile pilot, the a request to the URL will only be called when the ESimProfile resource changes from `reserving` to `available`.
     * 
     * @var ?string $callbackUrl
     */
	#[SpeakeasyMetadata('form:name=CallbackUrl')]
    public ?string $callbackUrl = null;
    
    /**
     * Identifier of the eUICC that will claim the eSIM Profile.
     * 
     * @var ?string $eid
     */
	#[SpeakeasyMetadata('form:name=Eid')]
    public ?string $eid = null;
    
    /**
     * When set to `true`, a value for `Eid` does not need to be provided. Instead, when the eSIM profile is reserved, a matching ID will be generated and returned via the `matching_id` property. This identifies the specific eSIM profile that can be used by any capable device to claim and download the profile.
     * 
     * @var ?bool $generateMatchingId
     */
	#[SpeakeasyMetadata('form:name=GenerateMatchingId')]
    public ?bool $generateMatchingId = null;
    
	public function __construct()
	{
		$this->callbackMethod = null;
		$this->callbackUrl = null;
		$this->eid = null;
		$this->generateMatchingId = null;
	}
}
