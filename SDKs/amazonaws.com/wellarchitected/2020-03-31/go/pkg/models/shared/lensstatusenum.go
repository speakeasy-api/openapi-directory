// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LensStatusEnum string

const (
	LensStatusEnumCurrent    LensStatusEnum = "CURRENT"
	LensStatusEnumNotCurrent LensStatusEnum = "NOT_CURRENT"
	LensStatusEnumDeprecated LensStatusEnum = "DEPRECATED"
	LensStatusEnumDeleted    LensStatusEnum = "DELETED"
	LensStatusEnumUnshared   LensStatusEnum = "UNSHARED"
)

func (e LensStatusEnum) ToPointer() *LensStatusEnum {
	return &e
}

func (e *LensStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CURRENT":
		fallthrough
	case "NOT_CURRENT":
		fallthrough
	case "DEPRECATED":
		fallthrough
	case "DELETED":
		fallthrough
	case "UNSHARED":
		*e = LensStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LensStatusEnum: %v", v)
	}
}
