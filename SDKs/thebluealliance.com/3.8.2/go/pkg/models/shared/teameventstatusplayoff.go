// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TeamEventStatusPlayoffLevelEnum - The highest playoff level the team reached.
type TeamEventStatusPlayoffLevelEnum string

const (
	TeamEventStatusPlayoffLevelEnumQm TeamEventStatusPlayoffLevelEnum = "qm"
	TeamEventStatusPlayoffLevelEnumEf TeamEventStatusPlayoffLevelEnum = "ef"
	TeamEventStatusPlayoffLevelEnumQf TeamEventStatusPlayoffLevelEnum = "qf"
	TeamEventStatusPlayoffLevelEnumSf TeamEventStatusPlayoffLevelEnum = "sf"
	TeamEventStatusPlayoffLevelEnumF  TeamEventStatusPlayoffLevelEnum = "f"
)

func (e *TeamEventStatusPlayoffLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "qm":
		fallthrough
	case "ef":
		fallthrough
	case "qf":
		fallthrough
	case "sf":
		fallthrough
	case "f":
		*e = TeamEventStatusPlayoffLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamEventStatusPlayoffLevelEnum: %s", s)
	}
}

// TeamEventStatusPlayoffStatusEnum - Current competition status for the playoffs.
type TeamEventStatusPlayoffStatusEnum string

const (
	TeamEventStatusPlayoffStatusEnumWon        TeamEventStatusPlayoffStatusEnum = "won"
	TeamEventStatusPlayoffStatusEnumEliminated TeamEventStatusPlayoffStatusEnum = "eliminated"
	TeamEventStatusPlayoffStatusEnumPlaying    TeamEventStatusPlayoffStatusEnum = "playing"
)

func (e *TeamEventStatusPlayoffStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "won":
		fallthrough
	case "eliminated":
		fallthrough
	case "playing":
		*e = TeamEventStatusPlayoffStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamEventStatusPlayoffStatusEnum: %s", s)
	}
}

// TeamEventStatusPlayoff - Playoff status for this team, may be null if the team did not make playoffs, or playoffs have not begun.
type TeamEventStatusPlayoff struct {
	// A Win-Loss-Tie record for a team, or an alliance.
	CurrentLevelRecord *WLTRecord `json:"current_level_record,omitempty"`
	// The highest playoff level the team reached.
	Level *TeamEventStatusPlayoffLevelEnum `json:"level,omitempty"`
	// The average match score during playoffs. Year specific. May be null if not relevant for a given year.
	PlayoffAverage *int64 `json:"playoff_average,omitempty"`
	// A Win-Loss-Tie record for a team, or an alliance.
	Record *WLTRecord `json:"record,omitempty"`
	// Current competition status for the playoffs.
	Status *TeamEventStatusPlayoffStatusEnum `json:"status,omitempty"`
}
