// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConferenceEnumStatusEnum - The status of the resources to read. Can be: `init`, `in-progress`, or `completed`.
type ConferenceEnumStatusEnum string

const (
	ConferenceEnumStatusEnumInit       ConferenceEnumStatusEnum = "init"
	ConferenceEnumStatusEnumInProgress ConferenceEnumStatusEnum = "in-progress"
	ConferenceEnumStatusEnumCompleted  ConferenceEnumStatusEnum = "completed"
)

func (e *ConferenceEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "init":
		fallthrough
	case "in-progress":
		fallthrough
	case "completed":
		*e = ConferenceEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConferenceEnumStatusEnum: %s", s)
	}
}
