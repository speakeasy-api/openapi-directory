"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import collect_on_delivery_payment_type_enum as shared_collect_on_delivery_payment_type_enum
from ..shared import payment_amount as shared_payment_amount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CollectOnDelivery:
    r"""Defer payment until package is delivered, instead of when it is ordered."""
    
    payment_amount: Optional[shared_payment_amount.PaymentAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment_amount'), 'exclude': lambda f: f is None }})  
    payment_type: Optional[shared_collect_on_delivery_payment_type_enum.CollectOnDeliveryPaymentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment_type'), 'exclude': lambda f: f is None }})  
    