"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetAPIV2CddriveFilesFileIDContentSecurity:
    
    cd_oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetAPIV2CddriveFilesFileIDContentRequest:
    
    file_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'file-id', 'style': 'simple', 'explode': False }})
    r"""The ID of the file to download."""  
    range: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Range', 'style': 'simple', 'explode': False }})
    r"""Can be used to limit the range of bytes retrieved. Only a single byte range in the format ```bytes={start-range}-{end-range}``` is supported."""  
    

@dataclasses.dataclass
class GetAPIV2CddriveFilesFileIDContentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_api_v2_cddrive_files_file_id_content_200_application_octet_stream_binary_string: Optional[bytes] = dataclasses.field(default=None)
    r"""The file was found and will be returned in the body of the response."""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    