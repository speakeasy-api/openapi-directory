/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Represents the summary of a vehicle background check
 */
export class VehicleSummary extends SpeakeasyBase {
  /**
   * Number of passengers allowed to travel in the vehicle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capacity" })
  capacity?: number;

  /**
   * Vehicle color
   */
  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  color?: string;

  /**
   * Vehicle license plate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "license_plate" })
  licensePlate?: string;

  /**
   * Vehicle manufacturer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manufacturer" })
  manufacturer?: string;

  /**
   * Vehicle model
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: string;

  /**
   * Vehicle door count
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number_of_doors" })
  numberOfDoors?: number;

  /**
   * Expiration date of the vehicle compulsory insurance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "obligatory_insurance_expiration_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  obligatoryInsuranceExpirationDate?: Date;

  /**
   * Status of the vehicle compulsory insurances
   */
  @SpeakeasyMetadata()
  @Expose({ name: "obligatory_insurance_status" })
  obligatoryInsuranceStatus?: string;

  /**
   * Vehicle service type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_type" })
  serviceType?: string;

  /**
   * Vehicle category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vehicle_category" })
  vehicleCategory?: string;

  /**
   * Vehicle ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vehicle_id" })
  vehicleId?: string;

  /**
   * Vehicle type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vehicle_type" })
  vehicleType?: string;

  /**
   * Vehicle model year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "year" })
  year?: number;
}
