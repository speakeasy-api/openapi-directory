<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ProxyCreateUnitOfMeasure
{
    /**
     *  Indicates if the UOM is available for new product rate plans. The default value is `true`.
     * 
     * **Character limit**: 5 **Values**: `true`, `false ` 
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('Active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
    /**
     * The number of digits to the right of the decimal point that you want to measure for the unit. To use whole numbers only, set this value to 0. You can't change this value after this `UOM` is used in any product, subscription, or usage. **Character limit**: 1 **Values**: an integer between 0 and 9, exclusive 
     * 
     * @var int $decimalPlaces
     */
	#[\JMS\Serializer\Annotation\SerializedName('DecimalPlaces')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $decimalPlaces;
    
    /**
     * The name of the UOM that you want displayed on invoices. The default value is the `UomName` field value. **Character limit**: 50 **Values**: A string of 50 characters or fewer 
     * 
     * @var ?string $displayedAs
     */
	#[\JMS\Serializer\Annotation\SerializedName('DisplayedAs')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayedAs = null;
    
    /**
     *  Specifies whether to round the UOM value up or down when the value exceeds the `DecimalPlaces` field value. The default value is `Up`.
     * 
     * **Character limit**: 4 **Values**: `Up`, `Down` 
     * 
     * @var ?string $roundingMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('RoundingMode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $roundingMode = null;
    
    /**
     *  The name of the UOM, such as license or GB. This name is displayed in query results and in the web-based UI labels. If you want a different name to be displayed on invoices, then use the `DisplayedAs` field to provide the invoice label.
     * 
     * **Character limit**: 50 **Values**: a string of 50 characters or fewer 
     * 
     * @var string $uomName
     */
	#[\JMS\Serializer\Annotation\SerializedName('UomName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uomName;
    
	public function __construct()
	{
		$this->active = null;
		$this->decimalPlaces = 0;
		$this->displayedAs = null;
		$this->roundingMode = null;
		$this->uomName = "";
	}
}
