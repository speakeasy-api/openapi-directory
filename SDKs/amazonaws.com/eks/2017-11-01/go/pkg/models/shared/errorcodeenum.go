// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ErrorCodeEnum string

const (
	ErrorCodeEnumSubnetNotFound               ErrorCodeEnum = "SubnetNotFound"
	ErrorCodeEnumSecurityGroupNotFound        ErrorCodeEnum = "SecurityGroupNotFound"
	ErrorCodeEnumEniLimitReached              ErrorCodeEnum = "EniLimitReached"
	ErrorCodeEnumIPNotAvailable               ErrorCodeEnum = "IpNotAvailable"
	ErrorCodeEnumAccessDenied                 ErrorCodeEnum = "AccessDenied"
	ErrorCodeEnumOperationNotPermitted        ErrorCodeEnum = "OperationNotPermitted"
	ErrorCodeEnumVpcIDNotFound                ErrorCodeEnum = "VpcIdNotFound"
	ErrorCodeEnumUnknown                      ErrorCodeEnum = "Unknown"
	ErrorCodeEnumNodeCreationFailure          ErrorCodeEnum = "NodeCreationFailure"
	ErrorCodeEnumPodEvictionFailure           ErrorCodeEnum = "PodEvictionFailure"
	ErrorCodeEnumInsufficientFreeAddresses    ErrorCodeEnum = "InsufficientFreeAddresses"
	ErrorCodeEnumClusterUnreachable           ErrorCodeEnum = "ClusterUnreachable"
	ErrorCodeEnumInsufficientNumberOfReplicas ErrorCodeEnum = "InsufficientNumberOfReplicas"
	ErrorCodeEnumConfigurationConflict        ErrorCodeEnum = "ConfigurationConflict"
	ErrorCodeEnumAdmissionRequestDenied       ErrorCodeEnum = "AdmissionRequestDenied"
	ErrorCodeEnumUnsupportedAddonModification ErrorCodeEnum = "UnsupportedAddonModification"
	ErrorCodeEnumK8sResourceNotFound          ErrorCodeEnum = "K8sResourceNotFound"
)

func (e ErrorCodeEnum) ToPointer() *ErrorCodeEnum {
	return &e
}

func (e *ErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SubnetNotFound":
		fallthrough
	case "SecurityGroupNotFound":
		fallthrough
	case "EniLimitReached":
		fallthrough
	case "IpNotAvailable":
		fallthrough
	case "AccessDenied":
		fallthrough
	case "OperationNotPermitted":
		fallthrough
	case "VpcIdNotFound":
		fallthrough
	case "Unknown":
		fallthrough
	case "NodeCreationFailure":
		fallthrough
	case "PodEvictionFailure":
		fallthrough
	case "InsufficientFreeAddresses":
		fallthrough
	case "ClusterUnreachable":
		fallthrough
	case "InsufficientNumberOfReplicas":
		fallthrough
	case "ConfigurationConflict":
		fallthrough
	case "AdmissionRequestDenied":
		fallthrough
	case "UnsupportedAddonModification":
		fallthrough
	case "K8sResourceNotFound":
		*e = ErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorCodeEnum: %v", v)
	}
}
