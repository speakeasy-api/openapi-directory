// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SNMPConfigSNMPVersionEnum string

const (
	SNMPConfigSNMPVersionEnumV2c SNMPConfigSNMPVersionEnum = "v2c"
	SNMPConfigSNMPVersionEnumV3  SNMPConfigSNMPVersionEnum = "v3"
)

func (e *SNMPConfigSNMPVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "v2c":
		fallthrough
	case "v3":
		*e = SNMPConfigSNMPVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SNMPConfigSNMPVersionEnum: %s", s)
	}
}

// SNMPConfig - OK
type SNMPConfig struct {
	ConfigSnmp2c *Snmp2cConfig              `json:"config_snmp_2c,omitempty"`
	ConfigSnmp3  *Snmp3Config               `json:"config_snmp_3,omitempty"`
	SnmpEnabled  *bool                      `json:"snmp_enabled,omitempty"`
	SnmpVersion  *SNMPConfigSNMPVersionEnum `json:"snmp_version,omitempty"`
}
