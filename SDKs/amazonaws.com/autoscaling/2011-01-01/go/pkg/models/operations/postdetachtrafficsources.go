// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDetachTrafficSourcesActionEnum
type POSTDetachTrafficSourcesActionEnum string

const (
	POSTDetachTrafficSourcesActionEnumDetachTrafficSources POSTDetachTrafficSourcesActionEnum = "DetachTrafficSources"
)

func (e POSTDetachTrafficSourcesActionEnum) ToPointer() *POSTDetachTrafficSourcesActionEnum {
	return &e
}

func (e *POSTDetachTrafficSourcesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DetachTrafficSources":
		*e = POSTDetachTrafficSourcesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDetachTrafficSourcesActionEnum: %v", v)
	}
}

// POSTDetachTrafficSourcesVersionEnum
type POSTDetachTrafficSourcesVersionEnum string

const (
	POSTDetachTrafficSourcesVersionEnumTwoThousandAndEleven0101 POSTDetachTrafficSourcesVersionEnum = "2011-01-01"
)

func (e POSTDetachTrafficSourcesVersionEnum) ToPointer() *POSTDetachTrafficSourcesVersionEnum {
	return &e
}

func (e *POSTDetachTrafficSourcesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-01-01":
		*e = POSTDetachTrafficSourcesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDetachTrafficSourcesVersionEnum: %v", v)
	}
}

type POSTDetachTrafficSourcesRequest struct {
	Action            POSTDetachTrafficSourcesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                              `request:"mediaType=text/xml"`
	Version           POSTDetachTrafficSourcesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDetachTrafficSourcesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
