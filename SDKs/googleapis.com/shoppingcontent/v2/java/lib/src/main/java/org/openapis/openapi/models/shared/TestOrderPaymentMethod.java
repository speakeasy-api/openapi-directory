/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TestOrderPaymentMethod {
    /**
     * The card expiration month (January = 1, February = 2 etc.).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationMonth")
    public Integer expirationMonth;
    public TestOrderPaymentMethod withExpirationMonth(Integer expirationMonth) {
        this.expirationMonth = expirationMonth;
        return this;
    }
    
    /**
     * The card expiration year (4-digit, e.g. 2015).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationYear")
    public Integer expirationYear;
    public TestOrderPaymentMethod withExpirationYear(Integer expirationYear) {
        this.expirationYear = expirationYear;
        return this;
    }
    
    /**
     * The last four digits of the card number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastFourDigits")
    public String lastFourDigits;
    public TestOrderPaymentMethod withLastFourDigits(String lastFourDigits) {
        this.lastFourDigits = lastFourDigits;
        return this;
    }
    
    /**
     * The billing address. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("predefinedBillingAddress")
    public String predefinedBillingAddress;
    public TestOrderPaymentMethod withPredefinedBillingAddress(String predefinedBillingAddress) {
        this.predefinedBillingAddress = predefinedBillingAddress;
        return this;
    }
    
    /**
     * The type of instrument. Note that real orders might have different values than the four values accepted by `createTestOrder`. Acceptable values are: - "`AMEX`" - "`DISCOVER`" - "`MASTERCARD`" - "`VISA`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public TestOrderPaymentMethod withType(String type) {
        this.type = type;
        return this;
    }
    
}
