<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TransformSummary - Description of the type, names/ids, and input/outputs for a transform.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TransformSummary
{
    /**
     * Transform-specific display data.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DisplayData> $displayData
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayData')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DisplayData>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $displayData = null;
    
    /**
     * SDK generated id of this transform instance.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * User names for all collection inputs to this transform.
     * 
     * @var ?array<string> $inputCollectionName
     */
	#[\JMS\Serializer\Annotation\SerializedName('inputCollectionName')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $inputCollectionName = null;
    
    /**
     * Type of transform.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransformSummaryKindEnum $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransformSummaryKindEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransformSummaryKindEnum $kind = null;
    
    /**
     * User provided name for this transform instance.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * User names for all collection outputs to this transform.
     * 
     * @var ?array<string> $outputCollectionName
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputCollectionName')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $outputCollectionName = null;
    
	public function __construct()
	{
		$this->displayData = null;
		$this->id = null;
		$this->inputCollectionName = null;
		$this->kind = null;
		$this->name = null;
		$this->outputCollectionName = null;
	}
}
