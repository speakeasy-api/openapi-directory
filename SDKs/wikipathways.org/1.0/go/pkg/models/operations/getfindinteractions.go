// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetFindInteractionsFormatEnum
type GetFindInteractionsFormatEnum string

const (
	GetFindInteractionsFormatEnumJSON GetFindInteractionsFormatEnum = "json"
	GetFindInteractionsFormatEnumXML  GetFindInteractionsFormatEnum = "xml"
	GetFindInteractionsFormatEnumHTML GetFindInteractionsFormatEnum = "html"
	GetFindInteractionsFormatEnumDump GetFindInteractionsFormatEnum = "dump"
	GetFindInteractionsFormatEnumJpg  GetFindInteractionsFormatEnum = "jpg"
	GetFindInteractionsFormatEnumPdf  GetFindInteractionsFormatEnum = "pdf"
)

func (e *GetFindInteractionsFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetFindInteractionsFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFindInteractionsFormatEnum: %s", s)
	}
}

type GetFindInteractionsQueryParams struct {
	Format *GetFindInteractionsFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The name of an entity to find interactions for (e.g. 'P53')
	Query string `queryParam:"style=form,explode=true,name=query"`
}

type GetFindInteractionsRequest struct {
	QueryParams GetFindInteractionsQueryParams
}

type GetFindInteractionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
