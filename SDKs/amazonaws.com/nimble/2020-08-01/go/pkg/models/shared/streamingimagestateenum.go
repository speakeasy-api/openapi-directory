// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StreamingImageStateEnum string

const (
	StreamingImageStateEnumCreateInProgress StreamingImageStateEnum = "CREATE_IN_PROGRESS"
	StreamingImageStateEnumReady            StreamingImageStateEnum = "READY"
	StreamingImageStateEnumDeleteInProgress StreamingImageStateEnum = "DELETE_IN_PROGRESS"
	StreamingImageStateEnumDeleted          StreamingImageStateEnum = "DELETED"
	StreamingImageStateEnumUpdateInProgress StreamingImageStateEnum = "UPDATE_IN_PROGRESS"
	StreamingImageStateEnumUpdateFailed     StreamingImageStateEnum = "UPDATE_FAILED"
	StreamingImageStateEnumCreateFailed     StreamingImageStateEnum = "CREATE_FAILED"
	StreamingImageStateEnumDeleteFailed     StreamingImageStateEnum = "DELETE_FAILED"
)

func (e *StreamingImageStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "READY":
		fallthrough
	case "DELETE_IN_PROGRESS":
		fallthrough
	case "DELETED":
		fallthrough
	case "UPDATE_IN_PROGRESS":
		fallthrough
	case "UPDATE_FAILED":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "DELETE_FAILED":
		*e = StreamingImageStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StreamingImageStateEnum: %s", s)
	}
}
