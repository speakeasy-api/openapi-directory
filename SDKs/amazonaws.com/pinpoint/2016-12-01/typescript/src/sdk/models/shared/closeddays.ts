/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClosedDaysRule } from "./closeddaysrule";
import { Expose, Type } from "class-transformer";

/**
 * The time when journey will stop sending messages.
 */
export class ClosedDays extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ClosedDaysRule })
  @Expose({ name: "CUSTOM" })
  @Type(() => ClosedDaysRule)
  custom?: ClosedDaysRule[];

  @SpeakeasyMetadata({ elemType: ClosedDaysRule })
  @Expose({ name: "EMAIL" })
  @Type(() => ClosedDaysRule)
  email?: ClosedDaysRule[];

  @SpeakeasyMetadata({ elemType: ClosedDaysRule })
  @Expose({ name: "PUSH" })
  @Type(() => ClosedDaysRule)
  push?: ClosedDaysRule[];

  @SpeakeasyMetadata({ elemType: ClosedDaysRule })
  @Expose({ name: "SMS" })
  @Type(() => ClosedDaysRule)
  sms?: ClosedDaysRule[];

  @SpeakeasyMetadata({ elemType: ClosedDaysRule })
  @Expose({ name: "VOICE" })
  @Type(() => ClosedDaysRule)
  voice?: ClosedDaysRule[];
}
