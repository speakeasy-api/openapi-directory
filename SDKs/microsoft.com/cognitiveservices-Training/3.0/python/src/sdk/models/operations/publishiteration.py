"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import customvisionerror as shared_customvisionerror
from typing import Optional


@dataclasses.dataclass
class PublishIterationRequest:
    
    iteration_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'iterationId', 'style': 'simple', 'explode': False }})
    r"""The iteration id."""  
    prediction_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'predictionId', 'style': 'form', 'explode': True }})
    r"""The id of the prediction resource to publish to."""  
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    publish_name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'publishName', 'style': 'form', 'explode': True }})
    r"""The name to give the published iteration."""  
    training_key: str = dataclasses.field(metadata={'header': { 'field_name': 'Training-Key', 'style': 'simple', 'explode': False }})
    r"""API key."""  
    

@dataclasses.dataclass
class PublishIterationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    custom_vision_error: Optional[shared_customvisionerror.CustomVisionError] = dataclasses.field(default=None)
    r"""Error response"""  
    publish_iteration_200_application_json_boolean: Optional[bool] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    