// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GETDescribeSpotFleetRequestHistoryActionEnum
type GETDescribeSpotFleetRequestHistoryActionEnum string

const (
	GETDescribeSpotFleetRequestHistoryActionEnumDescribeSpotFleetRequestHistory GETDescribeSpotFleetRequestHistoryActionEnum = "DescribeSpotFleetRequestHistory"
)

func (e GETDescribeSpotFleetRequestHistoryActionEnum) ToPointer() *GETDescribeSpotFleetRequestHistoryActionEnum {
	return &e
}

func (e *GETDescribeSpotFleetRequestHistoryActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeSpotFleetRequestHistory":
		*e = GETDescribeSpotFleetRequestHistoryActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeSpotFleetRequestHistoryActionEnum: %v", v)
	}
}

// GETDescribeSpotFleetRequestHistoryEventTypeEnum - The type of events to describe. By default, all events are described.
type GETDescribeSpotFleetRequestHistoryEventTypeEnum string

const (
	GETDescribeSpotFleetRequestHistoryEventTypeEnumInstanceChange     GETDescribeSpotFleetRequestHistoryEventTypeEnum = "instanceChange"
	GETDescribeSpotFleetRequestHistoryEventTypeEnumFleetRequestChange GETDescribeSpotFleetRequestHistoryEventTypeEnum = "fleetRequestChange"
	GETDescribeSpotFleetRequestHistoryEventTypeEnumError              GETDescribeSpotFleetRequestHistoryEventTypeEnum = "error"
	GETDescribeSpotFleetRequestHistoryEventTypeEnumInformation        GETDescribeSpotFleetRequestHistoryEventTypeEnum = "information"
)

func (e GETDescribeSpotFleetRequestHistoryEventTypeEnum) ToPointer() *GETDescribeSpotFleetRequestHistoryEventTypeEnum {
	return &e
}

func (e *GETDescribeSpotFleetRequestHistoryEventTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "instanceChange":
		fallthrough
	case "fleetRequestChange":
		fallthrough
	case "error":
		fallthrough
	case "information":
		*e = GETDescribeSpotFleetRequestHistoryEventTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeSpotFleetRequestHistoryEventTypeEnum: %v", v)
	}
}

// GETDescribeSpotFleetRequestHistoryVersionEnum
type GETDescribeSpotFleetRequestHistoryVersionEnum string

const (
	GETDescribeSpotFleetRequestHistoryVersionEnumTwoThousandAndSixteen1115 GETDescribeSpotFleetRequestHistoryVersionEnum = "2016-11-15"
)

func (e GETDescribeSpotFleetRequestHistoryVersionEnum) ToPointer() *GETDescribeSpotFleetRequestHistoryVersionEnum {
	return &e
}

func (e *GETDescribeSpotFleetRequestHistoryVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDescribeSpotFleetRequestHistoryVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeSpotFleetRequestHistoryVersionEnum: %v", v)
	}
}

type GETDescribeSpotFleetRequestHistoryRequest struct {
	Action GETDescribeSpotFleetRequestHistoryActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The type of events to describe. By default, all events are described.
	EventType *GETDescribeSpotFleetRequestHistoryEventTypeEnum `queryParam:"style=form,explode=true,name=EventType"`
	// The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// The token to include in another request to get the next page of items. This value is <code>null</code> when there are no more items to return.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// The ID of the Spot Fleet request.
	SpotFleetRequestID string `queryParam:"style=form,explode=true,name=SpotFleetRequestId"`
	// The starting date and time for the events, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
	StartTime         time.Time                                     `queryParam:"style=form,explode=true,name=StartTime"`
	Version           GETDescribeSpotFleetRequestHistoryVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeSpotFleetRequestHistoryResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
