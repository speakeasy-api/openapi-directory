/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AssociateRepositoryRequestBody {
    /**
     * Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate repository associations if there are failures and retries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientRequestToken")
    public String clientRequestToken;
    public AssociateRepositoryRequestBody withClientRequestToken(String clientRequestToken) {
        this.clientRequestToken = clientRequestToken;
        return this;
    }
    
    /**
     * &lt;p&gt;An object that contains:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The encryption option for a repository association. It is either owned by Amazon Web Services Key Management Service (KMS) (&lt;code&gt;AWS_OWNED_CMK&lt;/code&gt;) or customer managed (&lt;code&gt;CUSTOMER_MANAGED_CMK&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The ID of the Amazon Web Services KMS key that is associated with a repository association.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KMSKeyDetails")
    public AssociateRepositoryRequestBodyKMSKeyDetails kmsKeyDetails;
    public AssociateRepositoryRequestBody withKMSKeyDetails(AssociateRepositoryRequestBodyKMSKeyDetails kmsKeyDetails) {
        this.kmsKeyDetails = kmsKeyDetails;
        return this;
    }
    
    /**
     * Information about an associated Amazon Web Services CodeCommit repository or an associated repository that is managed by Amazon Web Services CodeStar Connections (for example, Bitbucket). This &lt;code&gt;Repository&lt;/code&gt; object is not used if your source code is in an associated GitHub repository.
     */
    @JsonProperty("Repository")
    public AssociateRepositoryRequestBodyRepository repository;
    public AssociateRepositoryRequestBody withRepository(AssociateRepositoryRequestBodyRepository repository) {
        this.repository = repository;
        return this;
    }
    
    /**
     * &lt;p&gt;An array of key-value pairs used to tag an associated repository. A tag is a custom attribute label with two parts:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;A &lt;i&gt;tag key&lt;/i&gt; (for example, &lt;code&gt;CostCenter&lt;/code&gt;, &lt;code&gt;Environment&lt;/code&gt;, &lt;code&gt;Project&lt;/code&gt;, or &lt;code&gt;Secret&lt;/code&gt;). Tag keys are case sensitive.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;An optional field known as a &lt;i&gt;tag value&lt;/i&gt; (for example, &lt;code&gt;111122223333&lt;/code&gt;, &lt;code&gt;Production&lt;/code&gt;, or a team name). Omitting the tag value is the same as using an empty string. Like tag keys, tag values are case sensitive.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;
    public AssociateRepositoryRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
}
