// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum - The match type for this filter.
type GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum string

const (
	GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnumMatchTypeUnspecified GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum = "MATCH_TYPE_UNSPECIFIED"
	GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnumExact                GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum = "EXACT"
	GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnumBeginsWith           GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum = "BEGINS_WITH"
	GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnumEndsWith             GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum = "ENDS_WITH"
	GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnumContains             GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum = "CONTAINS"
	GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnumFullRegexp           GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum = "FULL_REGEXP"
	GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnumPartialRegexp        GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum = "PARTIAL_REGEXP"
)

func (e *GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "EXACT":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "FULL_REGEXP":
		fallthrough
	case "PARTIAL_REGEXP":
		*e = GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum: %s", s)
	}
}

// GoogleAnalyticsAdminV1betaAccessStringFilter - The filter for strings.
type GoogleAnalyticsAdminV1betaAccessStringFilter struct {
	// If true, the string value is case sensitive.
	CaseSensitive *bool `json:"caseSensitive,omitempty"`
	// The match type for this filter.
	MatchType *GoogleAnalyticsAdminV1betaAccessStringFilterMatchTypeEnum `json:"matchType,omitempty"`
	// The string value used for the matching.
	Value *string `json:"value,omitempty"`
}
