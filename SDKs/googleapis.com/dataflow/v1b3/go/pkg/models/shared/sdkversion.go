// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SDKVersionSDKSupportStatusEnum - The support status for this SDK version.
type SDKVersionSDKSupportStatusEnum string

const (
	SDKVersionSDKSupportStatusEnumUnknown     SDKVersionSDKSupportStatusEnum = "UNKNOWN"
	SDKVersionSDKSupportStatusEnumSupported   SDKVersionSDKSupportStatusEnum = "SUPPORTED"
	SDKVersionSDKSupportStatusEnumStale       SDKVersionSDKSupportStatusEnum = "STALE"
	SDKVersionSDKSupportStatusEnumDeprecated  SDKVersionSDKSupportStatusEnum = "DEPRECATED"
	SDKVersionSDKSupportStatusEnumUnsupported SDKVersionSDKSupportStatusEnum = "UNSUPPORTED"
)

func (e *SDKVersionSDKSupportStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "SUPPORTED":
		fallthrough
	case "STALE":
		fallthrough
	case "DEPRECATED":
		fallthrough
	case "UNSUPPORTED":
		*e = SDKVersionSDKSupportStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SDKVersionSDKSupportStatusEnum: %s", s)
	}
}

// SDKVersion - The version of the SDK used to run the job.
type SDKVersion struct {
	// The support status for this SDK version.
	SDKSupportStatus *SDKVersionSDKSupportStatusEnum `json:"sdkSupportStatus,omitempty"`
	// The version of the SDK used to run the job.
	Version *string `json:"version,omitempty"`
	// A readable string describing the version of the SDK.
	VersionDisplayName *string `json:"versionDisplayName,omitempty"`
}
