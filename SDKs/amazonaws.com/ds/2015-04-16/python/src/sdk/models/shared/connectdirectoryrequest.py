"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import directoryconnectsettings as shared_directoryconnectsettings
from ..shared import directorysize_enum as shared_directorysize_enum
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectDirectoryRequest:
    r"""Contains the inputs for the <a>ConnectDirectory</a> operation."""
    
    connect_settings: shared_directoryconnectsettings.DirectoryConnectSettings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectSettings') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    password: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Password') }})  
    size: shared_directorysize_enum.DirectorySizeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Size') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    short_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShortName'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    