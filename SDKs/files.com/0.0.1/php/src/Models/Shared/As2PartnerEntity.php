<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * As2PartnerEntity - Create As2 Partner
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class As2PartnerEntity
{
    /**
     * Id of the AS2 Station associated with this partner.
     * 
     * @var ?int $as2StationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('as2_station_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $as2StationId = null;
    
    /**
     * `true` if remote server only accepts connections from dedicated IPs
     * 
     * @var ?bool $enableDedicatedIps
     */
	#[\JMS\Serializer\Annotation\SerializedName('enable_dedicated_ips')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableDedicatedIps = null;
    
    /**
     * Serial of public certificate used for message security in hex format.
     * 
     * @var ?string $hexPublicCertificateSerial
     */
	#[\JMS\Serializer\Annotation\SerializedName('hex_public_certificate_serial')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hexPublicCertificateSerial = null;
    
    /**
     * Id of the AS2 Partner.
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * The partner's formal AS2 name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Issuer of public certificate used for message security.
     * 
     * @var ?string $publicCertificateIssuer
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_certificate_issuer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicCertificateIssuer = null;
    
    /**
     * MD5 hash of public certificate used for message security.
     * 
     * @var ?string $publicCertificateMd5
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_certificate_md5')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicCertificateMd5 = null;
    
    /**
     * Not after value of public certificate used for message security.
     * 
     * @var ?string $publicCertificateNotAfter
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_certificate_not_after')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicCertificateNotAfter = null;
    
    /**
     * Not before value of public certificate used for message security.
     * 
     * @var ?string $publicCertificateNotBefore
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_certificate_not_before')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicCertificateNotBefore = null;
    
    /**
     * Serial of public certificate used for message security.
     * 
     * @var ?string $publicCertificateSerial
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_certificate_serial')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicCertificateSerial = null;
    
    /**
     * Subject of public certificate used for message security.
     * 
     * @var ?string $publicCertificateSubject
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_certificate_subject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicCertificateSubject = null;
    
    /**
     * Remote server certificate security setting
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\As2PartnerEntityServerCertificateEnum $serverCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('server_certificate')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\As2PartnerEntityServerCertificateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?As2PartnerEntityServerCertificateEnum $serverCertificate = null;
    
    /**
     * Public URI for sending AS2 message to.
     * 
     * @var ?string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uri = null;
    
	public function __construct()
	{
		$this->as2StationId = null;
		$this->enableDedicatedIps = null;
		$this->hexPublicCertificateSerial = null;
		$this->id = null;
		$this->name = null;
		$this->publicCertificateIssuer = null;
		$this->publicCertificateMd5 = null;
		$this->publicCertificateNotAfter = null;
		$this->publicCertificateNotBefore = null;
		$this->publicCertificateSerial = null;
		$this->publicCertificateSubject = null;
		$this->serverCertificate = null;
		$this->uri = null;
	}
}
