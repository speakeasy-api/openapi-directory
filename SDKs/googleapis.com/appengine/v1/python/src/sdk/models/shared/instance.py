"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InstanceAvailabilityEnum(str, Enum):
    r"""Output only. Availability of the instance."""
    UNSPECIFIED = 'UNSPECIFIED'
    RESIDENT = 'RESIDENT'
    DYNAMIC = 'DYNAMIC'

class InstanceVMLivenessEnum(str, Enum):
    r"""Output only. The liveness health check of this instance. Only applicable for instances in App Engine flexible environment."""
    LIVENESS_STATE_UNSPECIFIED = 'LIVENESS_STATE_UNSPECIFIED'
    UNKNOWN = 'UNKNOWN'
    HEALTHY = 'HEALTHY'
    UNHEALTHY = 'UNHEALTHY'
    DRAINING = 'DRAINING'
    TIMEOUT = 'TIMEOUT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Instance:
    r"""An Instance resource is the computing unit that App Engine uses to automatically scale an application."""
    
    app_engine_release: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appEngineRelease'), 'exclude': lambda f: f is None }})
    r"""Output only. App Engine release this instance is running on."""  
    availability: Optional[InstanceAvailabilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availability'), 'exclude': lambda f: f is None }})
    r"""Output only. Availability of the instance."""  
    average_latency: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('averageLatency'), 'exclude': lambda f: f is None }})
    r"""Output only. Average latency (ms) over the last minute."""  
    errors: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""Output only. Number of errors since this instance was started."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Output only. Relative name of the instance within the version. Example: instance-1."""  
    memory_usage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memoryUsage'), 'exclude': lambda f: f is None }})
    r"""Output only. Total memory in use (bytes)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Full path to the Instance resource in the API. Example: apps/myapp/services/default/versions/v1/instances/instance-1."""  
    qps: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qps'), 'exclude': lambda f: f is None }})
    r"""Output only. Average queries per second (QPS) over the last minute."""  
    requests: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requests'), 'exclude': lambda f: f is None }})
    r"""Output only. Number of requests since this instance was started."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time that this instance was started.@OutputOnly"""  
    vm_debug_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmDebugEnabled'), 'exclude': lambda f: f is None }})
    r"""Output only. Whether this instance is in debug mode. Only applicable for instances in App Engine flexible environment."""  
    vm_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmId'), 'exclude': lambda f: f is None }})
    r"""Output only. Virtual machine ID of this instance. Only applicable for instances in App Engine flexible environment."""  
    vm_ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmIp'), 'exclude': lambda f: f is None }})
    r"""Output only. The IP address of this instance. Only applicable for instances in App Engine flexible environment."""  
    vm_liveness: Optional[InstanceVMLivenessEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmLiveness'), 'exclude': lambda f: f is None }})
    r"""Output only. The liveness health check of this instance. Only applicable for instances in App Engine flexible environment."""  
    vm_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmName'), 'exclude': lambda f: f is None }})
    r"""Output only. Name of the virtual machine where this instance lives. Only applicable for instances in App Engine flexible environment."""  
    vm_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmStatus'), 'exclude': lambda f: f is None }})
    r"""Output only. Status of the virtual machine where this instance lives. Only applicable for instances in App Engine flexible environment."""  
    vm_zone_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmZoneName'), 'exclude': lambda f: f is None }})
    r"""Output only. Zone where the virtual machine is located. Only applicable for instances in App Engine flexible environment."""  
    