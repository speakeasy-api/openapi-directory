/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionStatusEnum } from "./executionstatusenum";
import { MonitoringTypeEnum } from "./monitoringtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Summary of information about the last monitoring job to run.
 */
export class MonitoringExecutionSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointName" })
  endpointName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringExecutionStatus" })
  monitoringExecutionStatus: ExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringJobDefinitionName" })
  monitoringJobDefinitionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringScheduleName" })
  monitoringScheduleName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringType" })
  monitoringType?: MonitoringTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingJobArn" })
  processingJobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduledTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduledTime: Date;
}
