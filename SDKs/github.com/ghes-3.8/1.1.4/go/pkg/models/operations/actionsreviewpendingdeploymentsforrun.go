// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum - Whether to approve or reject deployment to the specified environments.
type ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum string

const (
	ActionsReviewPendingDeploymentsForRunRequestBodyStateEnumApproved ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum = "approved"
	ActionsReviewPendingDeploymentsForRunRequestBodyStateEnumRejected ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum = "rejected"
)

func (e *ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "approved":
		fallthrough
	case "rejected":
		*e = ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum: %s", s)
	}
}

type ActionsReviewPendingDeploymentsForRunRequestBody struct {
	// A comment to accompany the deployment review
	Comment string `json:"comment"`
	// The list of environment ids to approve or reject
	EnvironmentIds []int64 `json:"environment_ids"`
	// Whether to approve or reject deployment to the specified environments.
	State ActionsReviewPendingDeploymentsForRunRequestBodyStateEnum `json:"state"`
}

type ActionsReviewPendingDeploymentsForRunRequest struct {
	RequestBody ActionsReviewPendingDeploymentsForRunRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
	// The unique identifier of the workflow run.
	RunID int64 `pathParam:"style=simple,explode=false,name=run_id"`
}

type ActionsReviewPendingDeploymentsForRunResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Deployments []shared.Deployment
}
