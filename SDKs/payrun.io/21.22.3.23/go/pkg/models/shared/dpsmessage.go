// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// DpsMessageDpsMessageMessageStatusEnum - The dps messages' message status
type DpsMessageDpsMessageMessageStatusEnum string

const (
	DpsMessageDpsMessageMessageStatusEnumRetrieved   DpsMessageDpsMessageMessageStatusEnum = "Retrieved"
	DpsMessageDpsMessageMessageStatusEnumApplied     DpsMessageDpsMessageMessageStatusEnum = "Applied"
	DpsMessageDpsMessageMessageStatusEnumUnresolved  DpsMessageDpsMessageMessageStatusEnum = "Unresolved"
	DpsMessageDpsMessageMessageStatusEnumIgnored     DpsMessageDpsMessageMessageStatusEnum = "Ignored"
	DpsMessageDpsMessageMessageStatusEnumInformation DpsMessageDpsMessageMessageStatusEnum = "Information"
)

func (e *DpsMessageDpsMessageMessageStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Retrieved":
		fallthrough
	case "Applied":
		fallthrough
	case "Unresolved":
		fallthrough
	case "Ignored":
		fallthrough
	case "Information":
		*e = DpsMessageDpsMessageMessageStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DpsMessageDpsMessageMessageStatusEnum: %s", s)
	}
}

type DpsMessageDpsMessage struct {
	// The dps messages' form type
	FormType *string `json:"FormType,omitempty"`
	// The dps messages' issue date
	IssueDate *types.Date `json:"IssueDate,omitempty"`
	// The dps messages' last updated
	LastUpdated *time.Time `json:"LastUpdated,omitempty"`
	// The dps messages' message
	Message *string `json:"Message,omitempty"`
	// The dps messages' message status
	MessageStatus *DpsMessageDpsMessageMessageStatusEnum `json:"MessageStatus,omitempty"`
	// The dps messages' message type
	MessageType *string `json:"MessageType,omitempty"`
	// The dps messages' processing result
	ProcessingResult *string `json:"ProcessingResult,omitempty"`
	// The dps messages' retrieve date
	RetrieveDate *time.Time `json:"RetrieveDate,omitempty"`
	// The dps messages' sequence number
	SequenceNumber *int `json:"SequenceNumber,omitempty"`
}

// DpsMessage - The dps message object.
type DpsMessage struct {
	DpsMessage *DpsMessageDpsMessage `json:"DpsMessage,omitempty"`
}
