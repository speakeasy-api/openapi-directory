/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class TokenRequest extends SpeakeasyBase {
  /**
   * OAuth2 grant type. Supports 'client_credentials', 'password', 'refresh_token' or 'user_id'.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=grant_type" })
  @Expose({ name: "grant_type" })
  grantType: string;

  /**
   * MW Account password (to be used in password grant type)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=password" })
  @Expose({ name: "password" })
  password?: string;

  /**
   * Refresh token value for refresh token flow.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=refresh_token" })
  @Expose({ name: "refresh_token" })
  refreshToken?: string;

  /**
   * Authorization scope. Use 'privileged' for private endpoints.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=scope" })
  @Expose({ name: "scope" })
  scope: string;

  /**
   * Value for user_id grant type flow.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=user_id" })
  @Expose({ name: "user_id" })
  userId?: number;

  /**
   * MW Account email (to be used in password grant type)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=username" })
  @Expose({ name: "username" })
  username?: string;
}
