/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ComparisonOperatorEnum } from "./comparisonoperatorenum";
import { MachineLearningDetectionConfig } from "./machinelearningdetectionconfig";
import { MetricValue } from "./metricvalue";
import { StatisticalThreshold } from "./statisticalthreshold";
import { Expose, Type } from "class-transformer";

/**
 * The criteria by which the behavior is determined to be normal.
 */
export class BehaviorCriteria extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonOperator" })
  comparisonOperator?: ComparisonOperatorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "consecutiveDatapointsToAlarm" })
  consecutiveDatapointsToAlarm?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "consecutiveDatapointsToClear" })
  consecutiveDatapointsToClear?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "durationSeconds" })
  durationSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "mlDetectionConfig" })
  @Type(() => MachineLearningDetectionConfig)
  mlDetectionConfig?: MachineLearningDetectionConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "statisticalThreshold" })
  @Type(() => StatisticalThreshold)
  statisticalThreshold?: StatisticalThreshold;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  @Type(() => MetricValue)
  value?: MetricValue;
}
