"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import videofiledetailsaudiostream as shared_videofiledetailsaudiostream
from ..shared import videofiledetailsvideostream as shared_videofiledetailsvideostream
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VideoFileDetailsFileTypeEnum(str, Enum):
    r"""The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded."""
    VIDEO = 'video'
    AUDIO = 'audio'
    IMAGE = 'image'
    ARCHIVE = 'archive'
    DOCUMENT = 'document'
    PROJECT = 'project'
    OTHER = 'other'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VideoFileDetails:
    r"""Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information."""
    
    audio_streams: Optional[list[shared_videofiledetailsaudiostream.VideoFileDetailsAudioStream]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audioStreams'), 'exclude': lambda f: f is None }})
    r"""A list of audio streams contained in the uploaded video file. Each item in the list contains detailed metadata about an audio stream."""  
    bitrate_bps: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bitrateBps'), 'exclude': lambda f: f is None }})
    r"""The uploaded video file's combined (video and audio) bitrate in bits per second."""  
    container: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('container'), 'exclude': lambda f: f is None }})
    r"""The uploaded video file's container format."""  
    creation_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationTime'), 'exclude': lambda f: f is None }})
    r"""The date and time when the uploaded video file was created. The value is specified in ISO 8601 format. Currently, the following ISO 8601 formats are supported: - Date only: YYYY-MM-DD - Naive time: YYYY-MM-DDTHH:MM:SS - Time with timezone: YYYY-MM-DDTHH:MM:SS+HH:MM"""  
    duration_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationMs'), 'exclude': lambda f: f is None }})
    r"""The length of the uploaded video in milliseconds."""  
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileName'), 'exclude': lambda f: f is None }})
    r"""The uploaded file's name. This field is present whether a video file or another type of file was uploaded."""  
    file_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileSize'), 'exclude': lambda f: f is None }})
    r"""The uploaded file's size in bytes. This field is present whether a video file or another type of file was uploaded."""  
    file_type: Optional[VideoFileDetailsFileTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileType'), 'exclude': lambda f: f is None }})
    r"""The uploaded file's type as detected by YouTube's video processing engine. Currently, YouTube only processes video files, but this field is present whether a video file or another type of file was uploaded."""  
    video_streams: Optional[list[shared_videofiledetailsvideostream.VideoFileDetailsVideoStream]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoStreams'), 'exclude': lambda f: f is None }})
    r"""A list of video streams contained in the uploaded video file. Each item in the list contains detailed metadata about a video stream."""  
    