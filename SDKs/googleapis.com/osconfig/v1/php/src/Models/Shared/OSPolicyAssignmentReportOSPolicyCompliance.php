<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OSPolicyAssignmentReportOSPolicyCompliance - Compliance data for an OS policy
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OSPolicyAssignmentReportOSPolicyCompliance
{
    /**
     * The compliance state of the OS policy.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum $complianceState
     */
	#[\JMS\Serializer\Annotation\SerializedName('complianceState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum $complianceState = null;
    
    /**
     * The reason for the OS policy to be in an unknown compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. If populated, the field can contain one of the following values: * `vm-not-running`: The VM was not running. * `os-policies-not-supported-by-agent`: The version of the OS Config agent running on the VM does not support running OS policies. * `no-agent-detected`: The OS Config agent is not detected for the VM. * `resource-execution-errors`: The OS Config agent encountered errors while executing one or more resources in the policy. See `os_policy_resource_compliances` for details. * `task-timeout`: The task sent to the agent to apply the policy timed out. * `unexpected-agent-state`: The OS Config agent did not report the final status of the task that attempted to apply the policy. Instead, the agent unexpectedly started working on a different task. This mostly happens when the agent or VM unexpectedly restarts while applying OS policies. * `internal-service-errors`: Internal service errors were encountered while attempting to apply the policy.
     * 
     * @var ?string $complianceStateReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('complianceStateReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $complianceStateReason = null;
    
    /**
     * The OS policy id
     * 
     * @var ?string $osPolicyId
     */
	#[\JMS\Serializer\Annotation\SerializedName('osPolicyId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $osPolicyId = null;
    
    /**
     * Compliance data for each resource within the policy that is applied to the VM.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance> $osPolicyResourceCompliances
     */
	#[\JMS\Serializer\Annotation\SerializedName('osPolicyResourceCompliances')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $osPolicyResourceCompliances = null;
    
	public function __construct()
	{
		$this->complianceState = null;
		$this->complianceStateReason = null;
		$this->osPolicyId = null;
		$this->osPolicyResourceCompliances = null;
	}
}
