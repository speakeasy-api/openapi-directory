/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Dimension } from "./dimension";
import { FilterExpression } from "./filterexpression";
import { Metric } from "./metric";
import { Expose, Type } from "class-transformer";

/**
 * Filters the dimensions and metrics in the response to just this compatibility. Commonly used as `”compatibilityFilter”: “COMPATIBLE”` to only return compatible dimensions & metrics.
 */
export enum CheckCompatibilityRequestCompatibilityFilterEnum {
  CompatibilityUnspecified = "COMPATIBILITY_UNSPECIFIED",
  Compatible = "COMPATIBLE",
  Incompatible = "INCOMPATIBLE",
}

/**
 * The request for compatibility information for a report's dimensions and metrics. Check compatibility provides a preview of the compatibility of a report; fields shared with the `runReport` request should be the same values as in your `runReport` request.
 */
export class CheckCompatibilityRequest extends SpeakeasyBase {
  /**
   * Filters the dimensions and metrics in the response to just this compatibility. Commonly used as `”compatibilityFilter”: “COMPATIBLE”` to only return compatible dimensions & metrics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "compatibilityFilter" })
  compatibilityFilter?: CheckCompatibilityRequestCompatibilityFilterEnum;

  /**
   * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimensionFilter" })
  @Type(() => FilterExpression)
  dimensionFilter?: FilterExpression;

  /**
   * The dimensions in this report. `dimensions` should be the same value as in your `runReport` request.
   */
  @SpeakeasyMetadata({ elemType: Dimension })
  @Expose({ name: "dimensions" })
  @Type(() => Dimension)
  dimensions?: Dimension[];

  /**
   * To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metricFilter" })
  @Type(() => FilterExpression)
  metricFilter?: FilterExpression;

  /**
   * The metrics in this report. `metrics` should be the same value as in your `runReport` request.
   */
  @SpeakeasyMetadata({ elemType: Metric })
  @Expose({ name: "metrics" })
  @Type(() => Metric)
  metrics?: Metric[];
}
