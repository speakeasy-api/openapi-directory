/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Route - Represents a Route resource. A route defines a path from VM instances in the VPC network to a specific destination. This destination can be inside or outside the VPC network. For more information, read the Routes overview.
 */
public class Route {
    /**
     * [Output Only] AS path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("asPaths")
    public RouteAsPath[] asPaths;

    public Route withAsPaths(RouteAsPath[] asPaths) {
        this.asPaths = asPaths;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public Route withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this field when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Route withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The destination range of outgoing packets that this route applies to. Both IPv4 and IPv6 are supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destRange")
    public String destRange;

    public Route withDestRange(String destRange) {
        this.destRange = destRange;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Route withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of this resource. Always compute#routes for Route resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Route withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Route withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Fully-qualified URL of the network that this route applies to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public Route withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * The URL to a gateway that should handle matching packets. You can only specify the internet gateway using a full or partial valid URL: projects/ project/global/gateways/default-internet-gateway
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextHopGateway")
    public String nextHopGateway;

    public Route withNextHopGateway(String nextHopGateway) {
        this.nextHopGateway = nextHopGateway;
        return this;
    }
    
    /**
     * The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that should handle matching packets or the IP address of the forwarding Rule. For example, the following are all valid URLs: - 10.128.0.56 - https://www.googleapis.com/compute/v1/projects/project/regions/region /forwardingRules/forwardingRule - regions/region/forwardingRules/forwardingRule 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextHopIlb")
    public String nextHopIlb;

    public Route withNextHopIlb(String nextHopIlb) {
        this.nextHopIlb = nextHopIlb;
        return this;
    }
    
    /**
     * The URL to an instance that should handle matching packets. You can specify this as a full or partial URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextHopInstance")
    public String nextHopInstance;

    public Route withNextHopInstance(String nextHopInstance) {
        this.nextHopInstance = nextHopInstance;
        return this;
    }
    
    /**
     * The network IP address of an instance that should handle matching packets. Only IPv4 is supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextHopIp")
    public String nextHopIp;

    public Route withNextHopIp(String nextHopIp) {
        this.nextHopIp = nextHopIp;
        return this;
    }
    
    /**
     * The URL of the local network if it should handle matching packets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextHopNetwork")
    public String nextHopNetwork;

    public Route withNextHopNetwork(String nextHopNetwork) {
        this.nextHopNetwork = nextHopNetwork;
        return this;
    }
    
    /**
     * [Output Only] The network peering name that should handle matching packets, which should conform to RFC1035.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextHopPeering")
    public String nextHopPeering;

    public Route withNextHopPeering(String nextHopPeering) {
        this.nextHopPeering = nextHopPeering;
        return this;
    }
    
    /**
     * The URL to a VpnTunnel that should handle matching packets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextHopVpnTunnel")
    public String nextHopVpnTunnel;

    public Route withNextHopVpnTunnel(String nextHopVpnTunnel) {
        this.nextHopVpnTunnel = nextHopVpnTunnel;
        return this;
    }
    
    /**
     * The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length. In cases where multiple routes have equal prefix length, the one with the lowest-numbered priority value wins. The default value is `1000`. The priority value must be from `0` to `65535`, inclusive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public Long priority;

    public Route withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * [Output only] The status of the route.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routeStatus")
    public RouteRouteStatusEnum routeStatus;

    public Route withRouteStatus(RouteRouteStatusEnum routeStatus) {
        this.routeStatus = routeStatus;
        return this;
    }
    
    /**
     * [Output Only] The type of this route, which can be one of the following values: - 'TRANSIT' for a transit route that this router learned from another Cloud Router and will readvertise to one of its BGP peers - 'SUBNET' for a route from a subnet of the VPC - 'BGP' for a route learned from a BGP peer of this router - 'STATIC' for a static route
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routeType")
    public RouteRouteTypeEnum routeType;

    public Route withRouteType(RouteRouteTypeEnum routeType) {
        this.routeType = routeType;
        return this;
    }
    
    /**
     * [Output Only] Server-defined fully-qualified URL for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public Route withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * A list of instance tags to which this route applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;

    public Route withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * [Output Only] If potential misconfigurations are detected for this route, this field will be populated with warning messages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warnings")
    public RouteWarnings[] warnings;

    public Route withWarnings(RouteWarnings[] warnings) {
        this.warnings = warnings;
        return this;
    }
    
    public Route(){}
}
