"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class BulkCallResponseMessageEnum(str, Enum):
    r"""Response message"""
    BULK_CALLS_REQUEST_EXECUTED = 'BulkCalls Request Executed'
    MANDATORY_PARAMETERS_MISSING = 'Mandatory Parameters Missing'
    THIS_DELIMITER_IS_NOT_ALLOWED = 'This Delimiter is not allowed'
    BULK_CALLS_SHOULD_BE_USED_FOR_AT_LEAST_2_NUMBERS = 'BulkCalls should be used for at least 2 numbers'
    TO_PARAMETER_LENGTH_DOES_NOT_MATCH_GATEWAYS_LENGTH = '\'To\' parameter length does not match \'Gateways\' Length'
    ANSWER_URL_IS_NOT_VALID = 'AnswerUrl is not Valid'
    HANGUP_URL_IS_NOT_VALID = 'HangupUrl is not Valid'
    RING_URL_IS_NOT_VALID = 'RingUrl is not Valid'
    UNKNOWN_CORE_UUID = 'Unknown Core UUID'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BulkCallResponse:
    r"""Response"""
    
    message: BulkCallResponseMessageEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message') }})
    r"""Response message"""  
    request_uuid: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RequestUUID') }})
    r"""Unique identifiers of each Call request (UUIDv4)"""  
    rest_api_server: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RestApiServer') }})
    r"""API server which handled this request (an Eqivo extension)"""  
    success: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Success') }})
    r"""Whether the request was successful or not"""  
    