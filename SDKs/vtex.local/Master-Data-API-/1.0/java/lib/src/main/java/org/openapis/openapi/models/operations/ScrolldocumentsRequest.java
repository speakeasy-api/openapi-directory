/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ScrolldocumentsRequest {
    /**
     * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Accept")
    public String accept;

    public ScrolldocumentsRequest withAccept(String accept) {
        this.accept = accept;
        return this;
    }
    
    /**
     * Type of the content being sent.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Content-Type")
    public String contentType;

    public ScrolldocumentsRequest withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Defines the collection of documents to be returned. A range within the collection limited by 100 documents per query.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=REST-Range")
    public String restRange;

    public ScrolldocumentsRequest withRESTRange(String restRange) {
        this.restRange = restRange;
        return this;
    }
    
    /**
     * Fields that should be returned by document. Separate fields' names with commas. For example `_fields=email,firstName,document`. You can also use `_all` to fetch all fields.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_fields")
    public String fields;

    public ScrolldocumentsRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * String to search. Use quotes for a partial query. For example, `_keyword=Maria` or `_keyword="Maria"`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_keyword")
    public String keyword;

    public ScrolldocumentsRequest withKeyword(String keyword) {
        this.keyword = keyword;
        return this;
    }
    
    /**
     * Name of the schema the document to be created needs to be compliant with.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_schema")
    public String schema;

    public ScrolldocumentsRequest withSchema(String schema) {
        this.schema = schema;
        return this;
    }
    
    /**
     * Sets sorting mode in two parts. The first part is the name of the field you want to sort by. In the second part, use `ASC` for ascending or `DESC` for descending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_sort")
    public String sort;

    public ScrolldocumentsRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Value of the header `X-VTEX-MD-TOKEN` returned in your first request. Send its value in this query string in the subsequent requests. The token has a timeout of 10 minutes, which refreshes after each new request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_token")
    public String token;

    public ScrolldocumentsRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    /**
     * Filter specification.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_where")
    public String where;

    public ScrolldocumentsRequest withWhere(String where) {
        this.where = where;
        return this;
    }
    
    /**
     * Name of the data entity. Defined by the api. Examples of native data entities you can use are `CL` for client profiles and `AD` for client addresses.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=dataEntityName")
    public String dataEntityName;

    public ScrolldocumentsRequest withDataEntityName(String dataEntityName) {
        this.dataEntityName = dataEntityName;
        return this;
    }
    
    public ScrolldocumentsRequest(@JsonProperty("Accept") String accept, @JsonProperty("Content-Type") String contentType, @JsonProperty("REST-Range") String restRange, @JsonProperty("dataEntityName") String dataEntityName) {
        this.accept = accept;
        this.contentType = contentType;
        this.restRange = restRange;
        this.dataEntityName = dataEntityName;
  }
}
