<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Address
{
    /**
     * ‘Attn.’ (if applicable). Only applicable for B2B customers.
     * 
     * @var ?string $attention
     */
	#[\JMS\Serializer\Annotation\SerializedName('attention')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $attention = null;
    
    /**
     * Customer’s city.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * Customer’s country. This value overrides the purchase country if they are different. Should follow the standard of ISO 3166 alpha-2. E.g. GB, US, DE, SE.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * Customer’s email address.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Customers family name in UTF-8 encoding.
     * 
     * Cannot be only numbers, must be more than 1 character.
     * Allowed special characters: -'’.
     * More information can be found [in this link](https://docs.klarna.com/klarna-payments/in-depth-knowledge/customer-data-requirements/#details-needed-per-market)
     * 
     * @var ?string $familyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('family_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $familyName = null;
    
    /**
     * Customers given name in UTF-8 encoding.
     * 
     * Cannot be only numbers, must be more than 1 character.
     * Allowed special characters: -'’.
     * More information can be found [in this link](https://docs.klarna.com/klarna-payments/in-depth-knowledge/customer-data-requirements/#details-needed-per-market)
     * 
     * @var ?string $givenName
     */
	#[\JMS\Serializer\Annotation\SerializedName('given_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $givenName = null;
    
    /**
     * Organization name (if applicable). Only applicable for B2B customers.
     * 
     * @var ?string $organizationName
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $organizationName = null;
    
    /**
     * Phone number. Preferably a mobile phone number.
     * 
     * @var ?string $phone
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phone = null;
    
    /**
     * Customer’s postal code. Validation according to Universal Postal Union addressing systems.
     * 
     * E.g. 12345, W1G OPW.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postal_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * Customer’s region or state - Mandatory for US and AU market. Validations according to ISO 3166-2 format, e.g. OH, NJ, etc.
     * 
     * @var ?string $region
     */
	#[\JMS\Serializer\Annotation\SerializedName('region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $region = null;
    
    /**
     * Customer’s street address. Regional formatting is required, as follows:
     * 
     * UK/US/FR: 33 Cavendish Square
     * Rest of EU: De Ruijterkade 7
     * 
     * @var ?string $streetAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('street_address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streetAddress = null;
    
    /**
     * Customer’s street address. Second Line. 
     * 
     * @var ?string $streetAddress2
     */
	#[\JMS\Serializer\Annotation\SerializedName('street_address2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streetAddress2 = null;
    
    /**
     * Customer’s Title. Allowed values per country:
     * 
     * UK - "Mr", "Ms"
     * DE - "Herr", "Frau"
     * AT: "Herr, "Frau"
     * CH: de-CH: "Herr, "Frau" it-CH: "Sig.", "Sig.ra" fr-CH: "M", "Mme" 
     * BE: "Dhr.", "Mevr."
     * NL: "Dhr.", "Mevr."
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->attention = null;
		$this->city = null;
		$this->country = null;
		$this->email = null;
		$this->familyName = null;
		$this->givenName = null;
		$this->organizationName = null;
		$this->phone = null;
		$this->postalCode = null;
		$this->region = null;
		$this->streetAddress = null;
		$this->streetAddress2 = null;
		$this->title = null;
	}
}
