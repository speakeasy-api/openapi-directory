// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum - Format of message.
type GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum string

const (
	GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnumMessageFormatUnspecified GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum = "MESSAGE_FORMAT_UNSPECIFIED"
	GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnumProto                    GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum = "PROTO"
	GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnumJSON                     GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum = "JSON"
)

func (e GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum) ToPointer() *GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum {
	return &e
}

func (e *GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MESSAGE_FORMAT_UNSPECIFIED":
		fallthrough
	case "PROTO":
		fallthrough
	case "JSON":
		*e = GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum: %v", v)
	}
}

// GoogleCloudDialogflowV2beta1NotificationConfig - Defines notification behavior.
type GoogleCloudDialogflowV2beta1NotificationConfig struct {
	// Format of message.
	MessageFormat *GoogleCloudDialogflowV2beta1NotificationConfigMessageFormatEnum `json:"messageFormat,omitempty"`
	// Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format: `projects//locations//topics/`.
	Topic *string `json:"topic,omitempty"`
}
