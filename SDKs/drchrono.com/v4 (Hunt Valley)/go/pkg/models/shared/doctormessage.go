// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DoctorMessageMessageNote - Additional note
type DoctorMessageMessageNote struct {
	CreatedAt *string `json:"created_at,omitempty"`
	// ID of `/api/users` who created the note
	CreatedBy *string `json:"created_by,omitempty"`
	// Content of the note
	Text *string `json:"text,omitempty"`
}

// DoctorMessageTypeEnum -
// Value | Description
// ----- | -----------
// `"GP"` | Generated PDF
// `"GC"` | Generated CSV
// `"GZ"` | Generated ZIP
// `"IF"` | Incoming Fax
// `"OF"` | Outgoing Fax
// `"IL"` | Incoming Labs
// `"IR"` | Inbound Referrals
// `"OR"` | Outbound Referrals
// `"IE"` | Incoming eRx
// `"OA"` | Online Appointments
// `"PO"` | Patient Onboarding
// `"PI"` | Patient Incoming Message
// `"PM"` | Patient Outgoing Message
// `"OO"` | Demo Meeting Message
// `"OD"` | Outbound Direct Message
// `"ID"` | Inbound Direct Message
type DoctorMessageTypeEnum string

const (
	DoctorMessageTypeEnumGp DoctorMessageTypeEnum = "GP"
	DoctorMessageTypeEnumGc DoctorMessageTypeEnum = "GC"
	DoctorMessageTypeEnumGt DoctorMessageTypeEnum = "GT"
	DoctorMessageTypeEnumGz DoctorMessageTypeEnum = "GZ"
	DoctorMessageTypeEnumIf DoctorMessageTypeEnum = "IF"
	DoctorMessageTypeEnumOf DoctorMessageTypeEnum = "OF"
	DoctorMessageTypeEnumIl DoctorMessageTypeEnum = "IL"
	DoctorMessageTypeEnumIr DoctorMessageTypeEnum = "IR"
	DoctorMessageTypeEnumOr DoctorMessageTypeEnum = "OR"
	DoctorMessageTypeEnumIe DoctorMessageTypeEnum = "IE"
	DoctorMessageTypeEnumOa DoctorMessageTypeEnum = "OA"
	DoctorMessageTypeEnumPo DoctorMessageTypeEnum = "PO"
	DoctorMessageTypeEnumPi DoctorMessageTypeEnum = "PI"
	DoctorMessageTypeEnumPm DoctorMessageTypeEnum = "PM"
	DoctorMessageTypeEnumOo DoctorMessageTypeEnum = "OO"
	DoctorMessageTypeEnumOd DoctorMessageTypeEnum = "OD"
	DoctorMessageTypeEnumID DoctorMessageTypeEnum = "ID"
	DoctorMessageTypeEnumDl DoctorMessageTypeEnum = "DL"
	DoctorMessageTypeEnumCn DoctorMessageTypeEnum = "CN"
)

func (e *DoctorMessageTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GP":
		fallthrough
	case "GC":
		fallthrough
	case "GT":
		fallthrough
	case "GZ":
		fallthrough
	case "IF":
		fallthrough
	case "OF":
		fallthrough
	case "IL":
		fallthrough
	case "IR":
		fallthrough
	case "OR":
		fallthrough
	case "IE":
		fallthrough
	case "OA":
		fallthrough
	case "PO":
		fallthrough
	case "PI":
		fallthrough
	case "PM":
		fallthrough
	case "OO":
		fallthrough
	case "OD":
		fallthrough
	case "ID":
		fallthrough
	case "DL":
		fallthrough
	case "CN":
		*e = DoctorMessageTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DoctorMessageTypeEnum: %s", s)
	}
}

// DoctorMessage - Created
type DoctorMessage struct {
	// If true, indicates that the message has been soft-deleted
	Archived *bool `json:"archived,omitempty"`
	// Files are passed using `multipart/form-data` encoding, but returned as URLs.
	Attachment *string `json:"attachment,omitempty"`
	Doctor     int64   `json:"doctor"`
	ID         *int64  `json:"id,omitempty"`
	// Array of notes attached to the message
	MessageNotes []DoctorMessageMessageNote `json:"message_notes,omitempty"`
	// ID of `/api/users` who owns the message, who may be the doctor themselves or one of their staff members
	Owner *string `json:"owner,omitempty"`
	// ID of patient that the message concerns, if applicable
	Patient    *int64  `json:"patient,omitempty"`
	Read       *bool   `json:"read,omitempty"`
	ReceivedAt *string `json:"received_at,omitempty"`
	// ID of `/api/users` who has been assigned to process the message, who may be the doctor themselves or one of their staff members
	ResponsibleUser *string `json:"responsible_user,omitempty"`
	Starred         *bool   `json:"starred,omitempty"`
	Title           string  `json:"title"`
	// Value | Description
	// ----- | -----------
	// `"GP"` | Generated PDF
	// `"GC"` | Generated CSV
	// `"GZ"` | Generated ZIP
	// `"IF"` | Incoming Fax
	// `"OF"` | Outgoing Fax
	// `"IL"` | Incoming Labs
	// `"IR"` | Inbound Referrals
	// `"OR"` | Outbound Referrals
	// `"IE"` | Incoming eRx
	// `"OA"` | Online Appointments
	// `"PO"` | Patient Onboarding
	// `"PI"` | Patient Incoming Message
	// `"PM"` | Patient Outgoing Message
	// `"OO"` | Demo Meeting Message
	// `"OD"` | Outbound Direct Message
	// `"ID"` | Inbound Direct Message
	//
	Type      *DoctorMessageTypeEnum `json:"type,omitempty"`
	UpdatedAt *string                `json:"updated_at,omitempty"`
	// Used by doctors and their staff to keep track of what step of processing the message is in
	WorkflowStep *string `json:"workflow_step,omitempty"`
}
