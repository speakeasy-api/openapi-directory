"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimensionorderby as shared_dimensionorderby
from ..shared import metricorderby as shared_metricorderby
from ..shared import pivotorderby as shared_pivotorderby
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderBy:
    r"""Order bys define how rows will be sorted in the response. For example, ordering rows by descending event count is one ordering, and ordering rows by the event name string is a different ordering."""
    
    desc: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('desc'), 'exclude': lambda f: f is None }})
    r"""If true, sorts by descending order."""  
    dimension: Optional[shared_dimensionorderby.DimensionOrderBy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimension'), 'exclude': lambda f: f is None }})
    r"""Sorts by dimension values."""  
    metric: Optional[shared_metricorderby.MetricOrderBy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metric'), 'exclude': lambda f: f is None }})
    r"""Sorts by metric values."""  
    pivot: Optional[shared_pivotorderby.PivotOrderBy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pivot'), 'exclude': lambda f: f is None }})
    r"""Sorts by a pivot column group."""  
    