/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETRetrieveAllPaymentsQueryParams {
    /**
     * This parameter filters the response based on the `accountId` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=accountId")
    public String accountId;
    public GETRetrieveAllPaymentsQueryParams withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `amount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=amount")
    public Double amount;
    public GETRetrieveAllPaymentsQueryParams withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `appliedAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=appliedAmount")
    public Double appliedAmount;
    public GETRetrieveAllPaymentsQueryParams withAppliedAmount(Double appliedAmount) {
        this.appliedAmount = appliedAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `createdById` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdById")
    public String createdById;
    public GETRetrieveAllPaymentsQueryParams withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `createdDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=createdDate")
    public OffsetDateTime createdDate;
    public GETRetrieveAllPaymentsQueryParams withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `creditBalanceAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=creditBalanceAmount")
    public Double creditBalanceAmount;
    public GETRetrieveAllPaymentsQueryParams withCreditBalanceAmount(Double creditBalanceAmount) {
        this.creditBalanceAmount = creditBalanceAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `currency` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=currency")
    public String currency;
    public GETRetrieveAllPaymentsQueryParams withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `effectiveDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=effectiveDate")
    public OffsetDateTime effectiveDate;
    public GETRetrieveAllPaymentsQueryParams withEffectiveDate(OffsetDateTime effectiveDate) {
        this.effectiveDate = effectiveDate;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `number` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=number")
    public String number;
    public GETRetrieveAllPaymentsQueryParams withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Number of rows returned per page.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageSize")
    public Long pageSize;
    public GETRetrieveAllPaymentsQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `refundAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=refundAmount")
    public Double refundAmount;
    public GETRetrieveAllPaymentsQueryParams withRefundAmount(Double refundAmount) {
        this.refundAmount = refundAmount;
        return this;
    }
    
    /**
     * This parameter restricts the order of the data returned in the response. You can use this parameter to supply a dimension you want to sort on.
     * 
     * A sortable field uses the following form: 
     * 
     * *operator* *field_name*
     * 
     * You can use at most two sortable fields in one URL path. Use a comma to separate sortable fields. For example:  *operator* *field_name*, *operator* *field_name*  
     * 
     * *operator* is used to mark the order of sequencing. The operator is optional. If you only specify the sortable field without any operator, the response data is sorted in descending order by this field.
     * 
     *   - The `-` operator indicates an ascending order.
     *   - The `+` operator indicates a descending order.
     * 
     * By default, the response data is displayed in descending order by payment number.
     * 
     * *field_name* indicates the name of a sortable field. The supported sortable fields of this operation are as below:
     * 
     *   - number
     *   - accountId
     *   - amount
     *   - appliedAmount
     *   - unappliedAmount
     *   - refundAmount
     *   - creditBalanceAmount
     *   - effectiveDate
     *   - createdDate
     *   - createdById
     *   - updatedDate
     *   - updatedById
     *   
     * Examples:
     * 
     * - /v1/payments?sort=+number
     * 
     * - /v1/payments?status=Processed&amp;sort=-number,+amount
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GETRetrieveAllPaymentsQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `status` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public GETRetrieveAllPaymentsStatusEnum status;
    public GETRetrieveAllPaymentsQueryParams withStatus(GETRetrieveAllPaymentsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `type` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type")
    public GETRetrieveAllPaymentsTypeEnum type;
    public GETRetrieveAllPaymentsQueryParams withType(GETRetrieveAllPaymentsTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `unappliedAmount` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=unappliedAmount")
    public Double unappliedAmount;
    public GETRetrieveAllPaymentsQueryParams withUnappliedAmount(Double unappliedAmount) {
        this.unappliedAmount = unappliedAmount;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `updatedById` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updatedById")
    public String updatedById;
    public GETRetrieveAllPaymentsQueryParams withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * This parameter filters the response based on the `updatedDate` field.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=updatedDate")
    public OffsetDateTime updatedDate;
    public GETRetrieveAllPaymentsQueryParams withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
