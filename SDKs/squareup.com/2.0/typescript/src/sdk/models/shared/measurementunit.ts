/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MeasurementUnitCustom } from "./measurementunitcustom";
import { Expose, Type } from "class-transformer";

/**
 * Represents a unit of measurement to use with a quantity, such as ounces
 *
 * @remarks
 * or inches. Exactly one of the following fields are required: `custom_unit`,
 * `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
 */
export class MeasurementUnit extends SpeakeasyBase {
  /**
   * Represents a standard area unit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "area_unit" })
  areaUnit?: string;

  /**
   * The information needed to define a custom unit, provided by the seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_unit" })
  @Type(() => MeasurementUnitCustom)
  customUnit?: MeasurementUnitCustom;

  /**
   * Reserved for API integrations that lack the ability to specify a real measurement unit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "generic_unit" })
  genericUnit?: string;

  /**
   * Represents a standard length unit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "length_unit" })
  lengthUnit?: string;

  /**
   * Represents a standard unit of time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time_unit" })
  timeUnit?: string;

  /**
   * Represents the type of the measurement unit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Represents a standard volume unit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "volume_unit" })
  volumeUnit?: string;

  /**
   * Represents a standard unit of weight or mass.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weight_unit" })
  weightUnit?: string;
}
