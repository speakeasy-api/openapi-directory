"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timeperiod as shared_timeperiod
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeBudgetPerformanceHistoryRequest:
    
    account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountId') }})
    r"""The account ID of the user. It's a 12-digit number."""  
    budget_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BudgetName') }})
    r"""A string that represents the budget name. The \\":\\" and \\"\\\" characters aren't allowed."""  
    max_results: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxResults'), 'exclude': lambda f: f is None }})
    r"""An integer that represents how many entries a paginated response contains. The maximum is 100."""  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})
    r"""A generic string."""  
    time_period: Optional[shared_timeperiod.TimePeriod] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimePeriod'), 'exclude': lambda f: f is None }})  
    