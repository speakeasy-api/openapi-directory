"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountLabelInput:
    r"""Label assigned by CSS domain or CSS group to one of its sub-accounts."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""Immutable. The ID of account this label belongs to."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of this label."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The display name of this label."""  
    
class AccountLabelLabelTypeEnum(str, Enum):
    r"""Output only. The type of this label."""
    LABEL_TYPE_UNSPECIFIED = 'LABEL_TYPE_UNSPECIFIED'
    MANUAL = 'MANUAL'
    AUTOMATIC = 'AUTOMATIC'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountLabel:
    r"""Label assigned by CSS domain or CSS group to one of its sub-accounts."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""Immutable. The ID of account this label belongs to."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of this label."""  
    label_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelId'), 'exclude': lambda f: f is None }})
    r"""Output only. The ID of the label."""  
    label_type: Optional[AccountLabelLabelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelType'), 'exclude': lambda f: f is None }})
    r"""Output only. The type of this label."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The display name of this label."""  
    