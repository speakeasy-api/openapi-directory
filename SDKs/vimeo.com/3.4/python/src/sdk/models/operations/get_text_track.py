"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import legacy_error as shared_legacy_error
from ..shared import text_track as shared_text_track
from typing import Optional


@dataclasses.dataclass
class GetTextTrackRequest:
    
    texttrack_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'texttrack_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the text track."""  
    video_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'video_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the video."""  
    

@dataclasses.dataclass
class GetTextTrackResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""* Error code 3430: You don't have permission to access this text track.
    * Error code 3431: This text track is disabled.
    """  
    legacy_error: Optional[shared_legacy_error.LegacyError] = dataclasses.field(default=None)
    r"""* No such video or text track exists.
    * Error code 5014: The text track that you specified doesn't exist.
    * Error code 5015: The text track that you specified belongs to a different video.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    text_track: Optional[shared_text_track.TextTrack] = dataclasses.field(default=None)
    r"""The text track was returned."""  
    