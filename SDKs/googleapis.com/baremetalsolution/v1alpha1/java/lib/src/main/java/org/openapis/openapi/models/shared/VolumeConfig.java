/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VolumeConfig - Configuration parameters for a new volume.
 */
public class VolumeConfig {
    /**
     * A transient unique identifier to identify a volume within an ProvisioningConfig request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public VolumeConfig withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Location where to deploy the volume.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public VolumeConfig withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * LUN ranges to be configured. Set only when protocol is PROTOCOL_FC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lunRanges")
    public LunRange[] lunRanges;
    public VolumeConfig withLunRanges(LunRange[] lunRanges) {
        this.lunRanges = lunRanges;
        return this;
    }
    
    /**
     * Machine ids connected to this volume. Set only when protocol is PROTOCOL_FC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineIds")
    public String[] machineIds;
    public VolumeConfig withMachineIds(String[] machineIds) {
        this.machineIds = machineIds;
        return this;
    }
    
    /**
     * NFS exports. Set only when protocol is PROTOCOL_NFS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nfsExports")
    public NfsExport[] nfsExports;
    public VolumeConfig withNfsExports(NfsExport[] nfsExports) {
        this.nfsExports = nfsExports;
        return this;
    }
    
    /**
     * Volume protocol.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public VolumeConfigProtocolEnum protocol;
    public VolumeConfig withProtocol(VolumeConfigProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * The requested size of this volume, in GB. This will be updated in a later iteration with a generic size field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeGb")
    public Integer sizeGb;
    public VolumeConfig withSizeGb(Integer sizeGb) {
        this.sizeGb = sizeGb;
        return this;
    }
    
    /**
     * Whether snapshots should be enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshotsEnabled")
    public Boolean snapshotsEnabled;
    public VolumeConfig withSnapshotsEnabled(Boolean snapshotsEnabled) {
        this.snapshotsEnabled = snapshotsEnabled;
        return this;
    }
    
    /**
     * The type of this Volume.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public VolumeConfigTypeEnum type;
    public VolumeConfig withType(VolumeConfigTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * User note field, it can be used by customers to add additional information for the BMS Ops team (b/194021617).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userNote")
    public String userNote;
    public VolumeConfig withUserNote(String userNote) {
        this.userNote = userNote;
        return this;
    }
    
}
