/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LinkTokenCreateRequestUserStatedIncomeSource - Specifies user stated income sources for the Income product
 */
public class LinkTokenCreateRequestUserStatedIncomeSource {
    /**
     * The income category for a specified income source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public UserStatedIncomeSourceCategoryEnum category;

    public LinkTokenCreateRequestUserStatedIncomeSource withCategory(UserStatedIncomeSourceCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * The employer corresponding to an income source specified by the user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employer")
    public String employer;

    public LinkTokenCreateRequestUserStatedIncomeSource withEmployer(String employer) {
        this.employer = employer;
        return this;
    }
    
    /**
     * The income amount paid annually for a specified income source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pay_annual")
    public Double payAnnual;

    public LinkTokenCreateRequestUserStatedIncomeSource withPayAnnual(Double payAnnual) {
        this.payAnnual = payAnnual;
        return this;
    }
    
    /**
     * The pay frequency of a specified income source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pay_frequency")
    public UserStatedIncomeSourceFrequencyEnum payFrequency;

    public LinkTokenCreateRequestUserStatedIncomeSource withPayFrequency(UserStatedIncomeSourceFrequencyEnum payFrequency) {
        this.payFrequency = payFrequency;
        return this;
    }
    
    /**
     * The income amount paid per cycle for a specified income source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pay_per_cycle")
    public Double payPerCycle;

    public LinkTokenCreateRequestUserStatedIncomeSource withPayPerCycle(Double payPerCycle) {
        this.payPerCycle = payPerCycle;
        return this;
    }
    
    /**
     * The pay type - `GROSS`, `NET`, or `UNKNOWN` for a specified income source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pay_type")
    public UserStatedIncomeSourcePayTypeEnum payType;

    public LinkTokenCreateRequestUserStatedIncomeSource withPayType(UserStatedIncomeSourcePayTypeEnum payType) {
        this.payType = payType;
        return this;
    }
    
    public LinkTokenCreateRequestUserStatedIncomeSource(){}
}
