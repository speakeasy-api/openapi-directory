<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateGraphqlApiRequestBody
{
    /**
     * A list of additional authentication providers for the <code>GraphqlApi</code> API.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AdditionalAuthenticationProvider> $additionalAuthenticationProviders
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalAuthenticationProviders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AdditionalAuthenticationProvider>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalAuthenticationProviders = null;
    
    /**
     * The new authentication type for the <code>GraphqlApi</code> object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyAuthenticationTypeEnum $authenticationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('authenticationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyAuthenticationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateGraphqlApiRequestBodyAuthenticationTypeEnum $authenticationType = null;
    
    /**
     * A <code>LambdaAuthorizerConfig</code> specifies how to authorize AppSync API access when using the <code>AWS_LAMBDA</code> authorizer mode. Be aware that an AppSync API can have only one Lambda authorizer configured at a time.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyLambdaAuthorizerConfig $lambdaAuthorizerConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('lambdaAuthorizerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyLambdaAuthorizerConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateGraphqlApiRequestBodyLambdaAuthorizerConfig $lambdaAuthorizerConfig = null;
    
    /**
     * The Amazon CloudWatch Logs configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyLogConfig $logConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('logConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyLogConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateGraphqlApiRequestBodyLogConfig $logConfig = null;
    
    /**
     * The new name for the <code>GraphqlApi</code> object.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Describes an OpenID Connect (OIDC) configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyOpenIDConnectConfig $openIDConnectConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('openIDConnectConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyOpenIDConnectConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateGraphqlApiRequestBodyOpenIDConnectConfig $openIDConnectConfig = null;
    
    /**
     * Describes an Amazon Cognito user pool configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyUserPoolConfig $userPoolConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('userPoolConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateGraphqlApiRequestBodyUserPoolConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateGraphqlApiRequestBodyUserPoolConfig $userPoolConfig = null;
    
    /**
     * A flag indicating whether to use X-Ray tracing for the <code>GraphqlApi</code>.
     * 
     * @var ?bool $xrayEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('xrayEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $xrayEnabled = null;
    
	public function __construct()
	{
		$this->additionalAuthenticationProviders = null;
		$this->authenticationType = null;
		$this->lambdaAuthorizerConfig = null;
		$this->logConfig = null;
		$this->name = "";
		$this->openIDConnectConfig = null;
		$this->userPoolConfig = null;
		$this->xrayEnabled = null;
	}
}
