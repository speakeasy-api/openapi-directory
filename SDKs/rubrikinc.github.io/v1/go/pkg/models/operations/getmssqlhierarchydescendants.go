// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetMssqlHierarchyDescendantsObjectTypeEnum string

const (
	GetMssqlHierarchyDescendantsObjectTypeEnumHost                   GetMssqlHierarchyDescendantsObjectTypeEnum = "Host"
	GetMssqlHierarchyDescendantsObjectTypeEnumMssqlInstance          GetMssqlHierarchyDescendantsObjectTypeEnum = "MssqlInstance"
	GetMssqlHierarchyDescendantsObjectTypeEnumMssqlDatabase          GetMssqlHierarchyDescendantsObjectTypeEnum = "MssqlDatabase"
	GetMssqlHierarchyDescendantsObjectTypeEnumWindowsCluster         GetMssqlHierarchyDescendantsObjectTypeEnum = "WindowsCluster"
	GetMssqlHierarchyDescendantsObjectTypeEnumMssqlAvailabilityGroup GetMssqlHierarchyDescendantsObjectTypeEnum = "MssqlAvailabilityGroup"
)

func (e GetMssqlHierarchyDescendantsObjectTypeEnum) ToPointer() *GetMssqlHierarchyDescendantsObjectTypeEnum {
	return &e
}

func (e *GetMssqlHierarchyDescendantsObjectTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Host":
		fallthrough
	case "MssqlInstance":
		fallthrough
	case "MssqlDatabase":
		fallthrough
	case "WindowsCluster":
		fallthrough
	case "MssqlAvailabilityGroup":
		*e = GetMssqlHierarchyDescendantsObjectTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMssqlHierarchyDescendantsObjectTypeEnum: %v", v)
	}
}

// GetMssqlHierarchyDescendantsSLAAssignmentEnum - Filter by SLA Domain assignment type.
type GetMssqlHierarchyDescendantsSLAAssignmentEnum string

const (
	GetMssqlHierarchyDescendantsSLAAssignmentEnumDerived    GetMssqlHierarchyDescendantsSLAAssignmentEnum = "Derived"
	GetMssqlHierarchyDescendantsSLAAssignmentEnumDirect     GetMssqlHierarchyDescendantsSLAAssignmentEnum = "Direct"
	GetMssqlHierarchyDescendantsSLAAssignmentEnumUnassigned GetMssqlHierarchyDescendantsSLAAssignmentEnum = "Unassigned"
)

func (e GetMssqlHierarchyDescendantsSLAAssignmentEnum) ToPointer() *GetMssqlHierarchyDescendantsSLAAssignmentEnum {
	return &e
}

func (e *GetMssqlHierarchyDescendantsSLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = GetMssqlHierarchyDescendantsSLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMssqlHierarchyDescendantsSLAAssignmentEnum: %v", v)
	}
}

// GetMssqlHierarchyDescendantsSnappableStatusEnum - Determines whether SQL Server instances are fetched with additional privilege checks.
type GetMssqlHierarchyDescendantsSnappableStatusEnum string

const (
	GetMssqlHierarchyDescendantsSnappableStatusEnumProtectable GetMssqlHierarchyDescendantsSnappableStatusEnum = "Protectable"
)

func (e GetMssqlHierarchyDescendantsSnappableStatusEnum) ToPointer() *GetMssqlHierarchyDescendantsSnappableStatusEnum {
	return &e
}

func (e *GetMssqlHierarchyDescendantsSnappableStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Protectable":
		*e = GetMssqlHierarchyDescendantsSnappableStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMssqlHierarchyDescendantsSnappableStatusEnum: %v", v)
	}
}

// GetMssqlHierarchyDescendantsSortByEnum - Attribute to sort the results on.
type GetMssqlHierarchyDescendantsSortByEnum string

const (
	GetMssqlHierarchyDescendantsSortByEnumName                         GetMssqlHierarchyDescendantsSortByEnum = "name"
	GetMssqlHierarchyDescendantsSortByEnumDescendantCountMssqlInstance GetMssqlHierarchyDescendantsSortByEnum = "descendantCount.MssqlInstance"
	GetMssqlHierarchyDescendantsSortByEnumDescendantCountMssqlDatabase GetMssqlHierarchyDescendantsSortByEnum = "descendantCount.MssqlDatabase"
	GetMssqlHierarchyDescendantsSortByEnumLogBackupRetentionHours      GetMssqlHierarchyDescendantsSortByEnum = "logBackupRetentionHours"
	GetMssqlHierarchyDescendantsSortByEnumCopyOnly                     GetMssqlHierarchyDescendantsSortByEnum = "copyOnly"
	GetMssqlHierarchyDescendantsSortByEnumEffectiveSLADomainName       GetMssqlHierarchyDescendantsSortByEnum = "effectiveSlaDomainName"
)

func (e GetMssqlHierarchyDescendantsSortByEnum) ToPointer() *GetMssqlHierarchyDescendantsSortByEnum {
	return &e
}

func (e *GetMssqlHierarchyDescendantsSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "descendantCount.MssqlInstance":
		fallthrough
	case "descendantCount.MssqlDatabase":
		fallthrough
	case "logBackupRetentionHours":
		fallthrough
	case "copyOnly":
		fallthrough
	case "effectiveSlaDomainName":
		*e = GetMssqlHierarchyDescendantsSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMssqlHierarchyDescendantsSortByEnum: %v", v)
	}
}

// GetMssqlHierarchyDescendantsSortOrderEnum - Sort order, either ascending or descending.
type GetMssqlHierarchyDescendantsSortOrderEnum string

const (
	GetMssqlHierarchyDescendantsSortOrderEnumAsc  GetMssqlHierarchyDescendantsSortOrderEnum = "asc"
	GetMssqlHierarchyDescendantsSortOrderEnumDesc GetMssqlHierarchyDescendantsSortOrderEnum = "desc"
)

func (e GetMssqlHierarchyDescendantsSortOrderEnum) ToPointer() *GetMssqlHierarchyDescendantsSortOrderEnum {
	return &e
}

func (e *GetMssqlHierarchyDescendantsSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = GetMssqlHierarchyDescendantsSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMssqlHierarchyDescendantsSortOrderEnum: %v", v)
	}
}

type GetMssqlHierarchyDescendantsRequest struct {
	// Filter by the ID of the effective SLA Domain.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Boolean that filters top-level nodes with the Host or WindowsCluster object type by whether or not the nodes have children MssqlInstance nodes. When this value is 'true,' the filter shows only nodes with children MssqlInstance nodes. When this value is 'false,' the filter shows only nodes without children MssqlInstance nodes.
	HasInstances *bool `queryParam:"style=form,explode=true,name=has_instances"`
	// ID of the parent SQL server hierarchy object. To get top-level nodes, use **root** as the ID.
	//
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Filter by the value of the `isClustered` field for nodes with object type MssqlDatabase or MssqlInstance.
	IsClustered *bool `queryParam:"style=form,explode=true,name=is_clustered"`
	// Filter database by the value of the `isLiveMount` field for nodes with MssqlDatabase as the value of the object type field.
	IsLiveMount *bool `queryParam:"style=form,explode=true,name=is_live_mount"`
	// Filter by the value of the `isLogShippingSecondary` field for nodes with MssqlDatabase as the value of the object type field.
	IsLogShippingSecondary *bool `queryParam:"style=form,explode=true,name=is_log_shipping_secondary"`
	// Filter by the value of the `isRelic` field for nodes with MssqlDatabase as the value of the object type field.
	IsRelic *bool `queryParam:"style=form,explode=true,name=is_relic"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter descendants by provided name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Filter by a comma-separated list of node object types.
	//
	ObjectType []GetMssqlHierarchyDescendantsObjectTypeEnum `queryParam:"style=form,explode=false,name=object_type"`
	// An integer that specifies the number of initial matches to ignore.
	//
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter by primary cluster ID, or **local**.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Filter by SLA Domain assignment type.
	SLAAssignment *GetMssqlHierarchyDescendantsSLAAssignmentEnum `queryParam:"style=form,explode=true,name=sla_assignment"`
	// Determines whether SQL Server instances are fetched with additional privilege checks.
	SnappableStatus *GetMssqlHierarchyDescendantsSnappableStatusEnum `queryParam:"style=form,explode=true,name=snappable_status"`
	// Attribute to sort the results on.
	SortBy *GetMssqlHierarchyDescendantsSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *GetMssqlHierarchyDescendantsSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type GetMssqlHierarchyDescendantsResponse struct {
	ContentType string
	// Summary list of descendant objects.
	MssqlHierarchyObjectSummaryListResponse *shared.MssqlHierarchyObjectSummaryListResponse
	StatusCode                              int
	RawResponse                             *http.Response
}
