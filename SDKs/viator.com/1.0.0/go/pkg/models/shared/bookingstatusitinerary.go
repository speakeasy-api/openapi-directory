// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BookingStatusItineraryLevelEnum - **level** of *this* itinerary's booking status
type BookingStatusItineraryLevelEnum string

const (
	BookingStatusItineraryLevelEnumItem      BookingStatusItineraryLevelEnum = "ITEM"
	BookingStatusItineraryLevelEnumItinerary BookingStatusItineraryLevelEnum = "ITINERARY"
)

func (e BookingStatusItineraryLevelEnum) ToPointer() *BookingStatusItineraryLevelEnum {
	return &e
}

func (e *BookingStatusItineraryLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ITEM":
		fallthrough
	case "ITINERARY":
		*e = BookingStatusItineraryLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BookingStatusItineraryLevelEnum: %v", v)
	}
}

// BookingStatusItineraryTypeEnum - **specifier** of *this* itinerary's booking status
// * See: [bookingStatus fields and meanings](#section/Appendices/bookingStatus-field-values-and-meanings)
type BookingStatusItineraryTypeEnum string

const (
	BookingStatusItineraryTypeEnumWaiting      BookingStatusItineraryTypeEnum = "WAITING"
	BookingStatusItineraryTypeEnumConfirmed    BookingStatusItineraryTypeEnum = "CONFIRMED"
	BookingStatusItineraryTypeEnumPending      BookingStatusItineraryTypeEnum = "PENDING"
	BookingStatusItineraryTypeEnumFailed       BookingStatusItineraryTypeEnum = "FAILED"
	BookingStatusItineraryTypeEnumCancelled    BookingStatusItineraryTypeEnum = "CANCELLED"
	BookingStatusItineraryTypeEnumAmended      BookingStatusItineraryTypeEnum = "AMENDED"
	BookingStatusItineraryTypeEnumPendingAmend BookingStatusItineraryTypeEnum = "PENDING_AMEND"
)

func (e BookingStatusItineraryTypeEnum) ToPointer() *BookingStatusItineraryTypeEnum {
	return &e
}

func (e *BookingStatusItineraryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WAITING":
		fallthrough
	case "CONFIRMED":
		fallthrough
	case "PENDING":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "AMENDED":
		fallthrough
	case "PENDING_AMEND":
		*e = BookingStatusItineraryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BookingStatusItineraryTypeEnum: %v", v)
	}
}

// BookingStatusItinerary - **object** containing itinerary booking status information
type BookingStatusItinerary struct {
	// **indicator**: `true` if *this* itinerary's booking has been amended
	Amended *bool `json:"amended,omitempty"`
	// **indicator**: `true` if *this* itinerary's booking has been cancelled
	Cancelled *bool `json:"cancelled,omitempty"`
	// **indicator**: `true` if *this* itinerary's booking is confirmed
	Confirmed *bool `json:"confirmed,omitempty"`
	// **indicator**: `true` if *this* itinerary's booking has failed
	Failed *bool `json:"failed,omitempty"`
	// **level** of *this* itinerary's booking status
	Level *BookingStatusItineraryLevelEnum `json:"level,omitempty"`
	// **indicator**: `true` if *this* itinerary's booking is pending
	Pending *bool `json:"pending,omitempty"`
	// **numeric identifier** of *this* itinerary's booking status
	Status *int64 `json:"status,omitempty"`
	// **natural-language description** of *this* itinerary's booking status
	Text *string `json:"text,omitempty"`
	// **specifier** of *this* itinerary's booking status
	// * See: [bookingStatus fields and meanings](#section/Appendices/bookingStatus-field-values-and-meanings)
	//
	Type *BookingStatusItineraryTypeEnum `json:"type,omitempty"`
}
