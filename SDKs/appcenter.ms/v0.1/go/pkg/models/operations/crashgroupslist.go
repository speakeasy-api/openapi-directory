// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type CrashGroupsListSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type CrashGroupsListPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// CrashGroupsListDollarOrderbyEnum - the OData-like $orderby argument
type CrashGroupsListDollarOrderbyEnum string

const (
	CrashGroupsListDollarOrderbyEnumLastOccurrenceAsc  CrashGroupsListDollarOrderbyEnum = "last_occurrence asc"
	CrashGroupsListDollarOrderbyEnumLastOccurrenceDesc CrashGroupsListDollarOrderbyEnum = "last_occurrence desc"
	CrashGroupsListDollarOrderbyEnumCountAsc           CrashGroupsListDollarOrderbyEnum = "count asc"
	CrashGroupsListDollarOrderbyEnumCountDesc          CrashGroupsListDollarOrderbyEnum = "count desc"
	CrashGroupsListDollarOrderbyEnumDisplayIDAsc       CrashGroupsListDollarOrderbyEnum = "display_id asc"
	CrashGroupsListDollarOrderbyEnumDisplayIDDesc      CrashGroupsListDollarOrderbyEnum = "display_id desc"
	CrashGroupsListDollarOrderbyEnumImpactedUsersAsc   CrashGroupsListDollarOrderbyEnum = "impacted_users asc"
	CrashGroupsListDollarOrderbyEnumImpactedUsersDesc  CrashGroupsListDollarOrderbyEnum = "impacted_users desc"
)

func (e *CrashGroupsListDollarOrderbyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "last_occurrence asc":
		fallthrough
	case "last_occurrence desc":
		fallthrough
	case "count asc":
		fallthrough
	case "count desc":
		fallthrough
	case "display_id asc":
		fallthrough
	case "display_id desc":
		fallthrough
	case "impacted_users asc":
		fallthrough
	case "impacted_users desc":
		*e = CrashGroupsListDollarOrderbyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CrashGroupsListDollarOrderbyEnum: %s", s)
	}
}

// CrashGroupsListGroupStatusEnum
type CrashGroupsListGroupStatusEnum string

const (
	CrashGroupsListGroupStatusEnumOpen    CrashGroupsListGroupStatusEnum = "open"
	CrashGroupsListGroupStatusEnumClosed  CrashGroupsListGroupStatusEnum = "closed"
	CrashGroupsListGroupStatusEnumIgnored CrashGroupsListGroupStatusEnum = "ignored"
)

func (e *CrashGroupsListGroupStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "open":
		fallthrough
	case "closed":
		fallthrough
	case "ignored":
		*e = CrashGroupsListGroupStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CrashGroupsListGroupStatusEnum: %s", s)
	}
}

// CrashGroupsListGroupTypeEnum
type CrashGroupsListGroupTypeEnum string

const (
	CrashGroupsListGroupTypeEnumGroupType1 CrashGroupsListGroupTypeEnum = "GroupType1"
	CrashGroupsListGroupTypeEnumGroupType2 CrashGroupsListGroupTypeEnum = "GroupType2"
)

func (e *CrashGroupsListGroupTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GroupType1":
		fallthrough
	case "GroupType2":
		*e = CrashGroupsListGroupTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CrashGroupsListGroupTypeEnum: %s", s)
	}
}

type CrashGroupsListQueryParams struct {
	// the OData-like $orderby argument
	DollarOrderby *CrashGroupsListDollarOrderbyEnum `queryParam:"style=form,explode=true,name=$orderby"`
	// version
	AppVersion *string `queryParam:"style=form,explode=true,name=app_version"`
	// Cassandra request continuation token. The token is used for pagination.
	ContinuationToken *string                         `queryParam:"style=form,explode=true,name=continuation_token"`
	GroupStatus       *CrashGroupsListGroupStatusEnum `queryParam:"style=form,explode=true,name=group_status"`
	// A freetext search that matches in crash, crash types, crash stack_traces and crash user
	GroupTextSearch *string                       `queryParam:"style=form,explode=true,name=group_text_search"`
	GroupType       *CrashGroupsListGroupTypeEnum `queryParam:"style=form,explode=true,name=group_type"`
	// Earliest date when the last time a crash occured in a crash group
	LastOccurrenceFrom *time.Time `queryParam:"style=form,explode=true,name=last_occurrence_from"`
	// Latest date when the last time a crash occured in a crash group
	LastOccurrenceTo *time.Time `queryParam:"style=form,explode=true,name=last_occurrence_to"`
}

type CrashGroupsListRequest struct {
	PathParams  CrashGroupsListPathParams
	QueryParams CrashGroupsListQueryParams
	Security    CrashGroupsListSecurity
}

// CrashGroupsListDefaultApplicationJSON - Error
type CrashGroupsListDefaultApplicationJSON struct {
	Message string `json:"message"`
}

// CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum - programming language of the frame
type CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum string

const (
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumJavaScript   CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "JavaScript"
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumCSharp       CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "CSharp"
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumObjectiveC   CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "Objective-C"
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumObjectiveCpp CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "Objective-Cpp"
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumCpp          CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "Cpp"
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumC            CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "C"
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumSwift        CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "Swift"
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumJava         CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "Java"
	CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnumUnknown      CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum = "Unknown"
)

func (e *CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "JavaScript":
		fallthrough
	case "CSharp":
		fallthrough
	case "Objective-C":
		fallthrough
	case "Objective-Cpp":
		fallthrough
	case "Cpp":
		fallthrough
	case "C":
		fallthrough
	case "Swift":
		fallthrough
	case "Java":
		fallthrough
	case "Unknown":
		*e = CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum: %s", s)
	}
}

// CrashGroupsList200ApplicationJSONCrashGroupsReasonFrame - frame belonging to the reason of the crash
type CrashGroupsList200ApplicationJSONCrashGroupsReasonFrame struct {
	// this line isn't from any framework
	AppCode *bool `json:"app_code,omitempty"`
	// is a class method
	ClassMethod *bool `json:"class_method,omitempty"`
	// name of the class
	ClassName *string `json:"class_name,omitempty"`
	// Formatted frame string
	CodeFormatted *string `json:"code_formatted,omitempty"`
	// Unformatted Frame string
	CodeRaw *string `json:"code_raw,omitempty"`
	// Exception type.
	ExceptionType *string `json:"exception_type,omitempty"`
	// name of the file
	File *string `json:"file,omitempty"`
	// Name of the framework
	FrameworkName *string `json:"framework_name,omitempty"`
	// programming language of the frame
	Language *CrashGroupsList200ApplicationJSONCrashGroupsReasonFrameLanguageEnum `json:"language,omitempty"`
	// line number
	Line *int64 `json:"line,omitempty"`
	// name of the method
	Method *string `json:"method,omitempty"`
	// parameters of the frames method
	MethodParams *string `json:"method_params,omitempty"`
	// OS exception type. (aka. SIGNAL)
	OsExceptionType *string `json:"os_exception_type,omitempty"`
}

type CrashGroupsList200ApplicationJSONCrashGroupsStatusEnum string

const (
	CrashGroupsList200ApplicationJSONCrashGroupsStatusEnumOpen    CrashGroupsList200ApplicationJSONCrashGroupsStatusEnum = "open"
	CrashGroupsList200ApplicationJSONCrashGroupsStatusEnumClosed  CrashGroupsList200ApplicationJSONCrashGroupsStatusEnum = "closed"
	CrashGroupsList200ApplicationJSONCrashGroupsStatusEnumIgnored CrashGroupsList200ApplicationJSONCrashGroupsStatusEnum = "ignored"
)

func (e *CrashGroupsList200ApplicationJSONCrashGroupsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "open":
		fallthrough
	case "closed":
		fallthrough
	case "ignored":
		*e = CrashGroupsList200ApplicationJSONCrashGroupsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CrashGroupsList200ApplicationJSONCrashGroupsStatusEnum: %s", s)
	}
}

type CrashGroupsList200ApplicationJSONCrashGroups struct {
	Annotation   string  `json:"annotation"`
	AppVersion   string  `json:"app_version"`
	Build        string  `json:"build"`
	Count        int64   `json:"count"`
	CrashGroupID string  `json:"crash_group_id"`
	CrashReason  string  `json:"crash_reason"`
	DisplayID    string  `json:"display_id"`
	Exception    *string `json:"exception,omitempty"`
	// Crash or handled exception
	Fatal           bool      `json:"fatal"`
	FirstOccurrence time.Time `json:"first_occurrence"`
	ImpactedUsers   *int64    `json:"impacted_users,omitempty"`
	LastOccurrence  time.Time `json:"last_occurrence"`
	NewCrashGroupID string    `json:"new_crash_group_id"`
	// frame belonging to the reason of the crash
	ReasonFrame *CrashGroupsList200ApplicationJSONCrashGroupsReasonFrame `json:"reason_frame,omitempty"`
	Status      CrashGroupsList200ApplicationJSONCrashGroupsStatusEnum   `json:"status"`
}

// CrashGroupsList200ApplicationJSON - Success
type CrashGroupsList200ApplicationJSON struct {
	// Cassandra request continuation token. The token is used for pagination.
	ContinuationToken *string                                        `json:"continuation_token,omitempty"`
	CrashGroups       []CrashGroupsList200ApplicationJSONCrashGroups `json:"crash_groups"`
	LimitedResultSet  bool                                           `json:"limited_result_set"`
}

type CrashGroupsListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	CrashGroupsList200ApplicationJSONObject *CrashGroupsList200ApplicationJSON
	// Error
	CrashGroupsListDefaultApplicationJSONObject *CrashGroupsListDefaultApplicationJSON
}
