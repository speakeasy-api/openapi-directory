// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlaylistItemStatusPrivacyStatusEnum - This resource's privacy status.
type PlaylistItemStatusPrivacyStatusEnum string

const (
	PlaylistItemStatusPrivacyStatusEnumPublic   PlaylistItemStatusPrivacyStatusEnum = "public"
	PlaylistItemStatusPrivacyStatusEnumUnlisted PlaylistItemStatusPrivacyStatusEnum = "unlisted"
	PlaylistItemStatusPrivacyStatusEnumPrivate  PlaylistItemStatusPrivacyStatusEnum = "private"
)

func (e PlaylistItemStatusPrivacyStatusEnum) ToPointer() *PlaylistItemStatusPrivacyStatusEnum {
	return &e
}

func (e *PlaylistItemStatusPrivacyStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "public":
		fallthrough
	case "unlisted":
		fallthrough
	case "private":
		*e = PlaylistItemStatusPrivacyStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlaylistItemStatusPrivacyStatusEnum: %v", v)
	}
}

// PlaylistItemStatus - Information about the playlist item's privacy status.
type PlaylistItemStatus struct {
	// This resource's privacy status.
	PrivacyStatus *PlaylistItemStatusPrivacyStatusEnum `json:"privacyStatus,omitempty"`
}
