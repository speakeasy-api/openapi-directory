<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleChromePolicyVersionsV1ResolveRequest - Request message for getting the resolved policy value for a specific target.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleChromePolicyVersionsV1ResolveRequest
{
    /**
     * The maximum number of policies to return, defaults to 100 and has a maximum of 1000.
     * 
     * @var ?int $pageSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $pageSize = null;
    
    /**
     * The page token used to retrieve a specific page of the request.
     * 
     * @var ?string $pageToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pageToken = null;
    
    /**
     * Required. The schema filter to apply to the resolve request. Specify a schema name to view a particular schema, for example: chrome.users.ShowLogoutButton Wildcards are supported, but only in the leaf portion of the schema name. Wildcards cannot be used in namespace directly. Please read https://developers.google.com/chrome/policy/guides/policy-schemas for details on schema namespaces. For example: Valid: "chrome.users.*", "chrome.users.apps.*", "chrome.printers.*" Invalid: "*", "*.users", "chrome.*", "chrome.*.apps.*"
     * 
     * @var ?string $policySchemaFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('policySchemaFilter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $policySchemaFilter = null;
    
    /**
     * The key used to identify the target on which the policy will be applied.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromePolicyVersionsV1PolicyTargetKey $policyTargetKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('policyTargetKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleChromePolicyVersionsV1PolicyTargetKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromePolicyVersionsV1PolicyTargetKey $policyTargetKey = null;
    
	public function __construct()
	{
		$this->pageSize = null;
		$this->pageToken = null;
		$this->policySchemaFilter = null;
		$this->policyTargetKey = null;
	}
}
