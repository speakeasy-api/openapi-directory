// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateIPGroupXAmzTargetEnum
type CreateIPGroupXAmzTargetEnum string

const (
	CreateIPGroupXAmzTargetEnumWorkspacesServiceCreateIPGroup CreateIPGroupXAmzTargetEnum = "WorkspacesService.CreateIpGroup"
)

func (e *CreateIPGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkspacesService.CreateIpGroup":
		*e = CreateIPGroupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIPGroupXAmzTargetEnum: %s", s)
	}
}

type CreateIPGroupRequest struct {
	CreateIPGroupRequest shared.CreateIPGroupRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           CreateIPGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateIPGroupResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateIPGroupResult *shared.CreateIPGroupResult
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceCreationFailedException
	ResourceCreationFailedException interface{}
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
}
