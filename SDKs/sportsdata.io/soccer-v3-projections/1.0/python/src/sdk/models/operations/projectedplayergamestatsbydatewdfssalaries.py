"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import playergameprojection as shared_playergameprojection
from enum import Enum
from typing import Optional

class ProjectedPlayerGameStatsByDateWDfsSalariesFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""
    XML = 'xml'
    JSON = 'json'


@dataclasses.dataclass
class ProjectedPlayerGameStatsByDateWDfsSalariesRequest:
    
    date_: str = dataclasses.field(metadata={'path_param': { 'field_name': 'date', 'style': 'simple', 'explode': False }})
    r"""The date of the game(s).
    <br>Examples: <code>2017-02-27</code>, <code>2017-09-01</code>.
    """  
    format: ProjectedPlayerGameStatsByDateWDfsSalariesFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""  
    

@dataclasses.dataclass
class ProjectedPlayerGameStatsByDateWDfsSalariesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    player_game_projections: Optional[list[shared_playergameprojection.PlayerGameProjection]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    