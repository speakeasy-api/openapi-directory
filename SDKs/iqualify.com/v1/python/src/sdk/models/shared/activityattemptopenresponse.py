"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import activityattemptopenresponsefeedback as shared_activityattemptopenresponsefeedback
from ..shared import activityattemptopenresponsefiles as shared_activityattemptopenresponsefiles
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActivityAttemptOpenResponse:
    
    activity_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityId'), 'exclude': lambda f: f is None }})  
    activity_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activityType'), 'exclude': lambda f: f is None }})  
    feedback: Optional[shared_activityattemptopenresponsefeedback.ActivityAttemptOpenResponseFeedback] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feedback'), 'exclude': lambda f: f is None }})  
    learner_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('learnerEmail'), 'exclude': lambda f: f is None }})  
    offering_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offeringId'), 'exclude': lambda f: f is None }})  
    response_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responseText'), 'exclude': lambda f: f is None }})  
    uploaded_files: Optional[shared_activityattemptopenresponsefiles.ActivityAttemptOpenResponseFiles] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uploadedFiles'), 'exclude': lambda f: f is None }})  
    