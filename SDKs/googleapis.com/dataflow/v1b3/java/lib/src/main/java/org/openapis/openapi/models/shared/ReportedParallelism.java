/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReportedParallelism - Represents the level of parallelism in a WorkItem's input, reported by the worker.
 */
public class ReportedParallelism {
    /**
     * Specifies whether the parallelism is infinite. If true, "value" is ignored. Infinite parallelism means the service will assume that the work item can always be split into more non-empty work items by dynamic splitting. This is a work-around for lack of support for infinity by the current JSON-based Java RPC stack.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isInfinite")
    public Boolean isInfinite;

    public ReportedParallelism withIsInfinite(Boolean isInfinite) {
        this.isInfinite = isInfinite;
        return this;
    }
    
    /**
     * Specifies the level of parallelism in case it is finite.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Double value;

    public ReportedParallelism withValue(Double value) {
        this.value = value;
        return this;
    }
    
    public ReportedParallelism(){}
}
