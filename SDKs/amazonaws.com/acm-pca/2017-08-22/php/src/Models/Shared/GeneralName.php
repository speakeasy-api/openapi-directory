<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GeneralName - Describes an ASN.1 X.400 <code>GeneralName</code> as defined in <a href="https://datatracker.ietf.org/doc/html/rfc5280">RFC 5280</a>. Only one of the following naming options should be provided. Providing more than one option results in an <code>InvalidArgsException</code> error.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GeneralName
{
    /**
     * Contains information about the certificate subject. The <code>Subject</code> field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The <code>Subject </code>must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Asn1Subject $directoryName
     */
	#[\JMS\Serializer\Annotation\SerializedName('DirectoryName')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Asn1Subject')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Asn1Subject $directoryName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DnsName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dnsName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('EdiPartyName')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EdiPartyName')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EdiPartyName $ediPartyName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('IpAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipAddress = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OtherName')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OtherName')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OtherName $otherName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('RegisteredId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $registeredId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Rfc822Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rfc822Name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('UniformResourceIdentifier')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uniformResourceIdentifier = null;
    
	public function __construct()
	{
		$this->directoryName = null;
		$this->dnsName = null;
		$this->ediPartyName = null;
		$this->ipAddress = null;
		$this->otherName = null;
		$this->registeredId = null;
		$this->rfc822Name = null;
		$this->uniformResourceIdentifier = null;
	}
}
