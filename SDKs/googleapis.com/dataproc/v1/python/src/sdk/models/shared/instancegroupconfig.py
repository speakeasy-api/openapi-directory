"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import acceleratorconfig as shared_acceleratorconfig
from ..shared import diskconfig as shared_diskconfig
from ..shared import instancereference as shared_instancereference
from ..shared import managedgroupconfig as shared_managedgroupconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InstanceGroupConfigPreemptibilityEnum(str, Enum):
    r"""Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE."""
    PREEMPTIBILITY_UNSPECIFIED = 'PREEMPTIBILITY_UNSPECIFIED'
    NON_PREEMPTIBLE = 'NON_PREEMPTIBLE'
    PREEMPTIBLE = 'PREEMPTIBLE'
    SPOT = 'SPOT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InstanceGroupConfigInput:
    r"""The config settings for Compute Engine resources in an instance group, such as a master or worker group."""
    
    accelerators: Optional[list[shared_acceleratorconfig.AcceleratorConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accelerators'), 'exclude': lambda f: f is None }})
    r"""Optional. The Compute Engine accelerator configuration for these instances."""  
    disk_config: Optional[shared_diskconfig.DiskConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diskConfig'), 'exclude': lambda f: f is None }})
    r"""Specifies the config of disk options for a group of VM instances."""  
    image_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageUri'), 'exclude': lambda f: f is None }})
    r"""Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default."""  
    machine_type_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineTypeUri'), 'exclude': lambda f: f is None }})
    r"""Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2."""  
    min_cpu_platform: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minCpuPlatform'), 'exclude': lambda f: f is None }})
    r"""Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu)."""  
    num_instances: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numInstances'), 'exclude': lambda f: f is None }})
    r"""Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1."""  
    preemptibility: Optional[InstanceGroupConfigPreemptibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preemptibility'), 'exclude': lambda f: f is None }})
    r"""Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InstanceGroupConfig:
    r"""The config settings for Compute Engine resources in an instance group, such as a master or worker group."""
    
    accelerators: Optional[list[shared_acceleratorconfig.AcceleratorConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accelerators'), 'exclude': lambda f: f is None }})
    r"""Optional. The Compute Engine accelerator configuration for these instances."""  
    disk_config: Optional[shared_diskconfig.DiskConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diskConfig'), 'exclude': lambda f: f is None }})
    r"""Specifies the config of disk options for a group of VM instances."""  
    image_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageUri'), 'exclude': lambda f: f is None }})
    r"""Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default."""  
    instance_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceNames'), 'exclude': lambda f: f is None }})
    r"""Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group."""  
    instance_references: Optional[list[shared_instancereference.InstanceReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceReferences'), 'exclude': lambda f: f is None }})
    r"""Output only. List of references to Compute Engine instances."""  
    is_preemptible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isPreemptible'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies that this instance group contains preemptible instances."""  
    machine_type_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineTypeUri'), 'exclude': lambda f: f is None }})
    r"""Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2."""  
    managed_group_config: Optional[shared_managedgroupconfig.ManagedGroupConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('managedGroupConfig'), 'exclude': lambda f: f is None }})
    r"""Specifies the resources used to actively manage an instance group."""  
    min_cpu_platform: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minCpuPlatform'), 'exclude': lambda f: f is None }})
    r"""Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu)."""  
    num_instances: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numInstances'), 'exclude': lambda f: f is None }})
    r"""Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1."""  
    preemptibility: Optional[InstanceGroupConfigPreemptibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preemptibility'), 'exclude': lambda f: f is None }})
    r"""Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE."""  
    