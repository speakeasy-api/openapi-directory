<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TrustInput - Represents a relationship between two domains. This allows a controller in one domain to authenticate a user in another domain.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TrustInput
{
    /**
     * The trust authentication type, which decides whether the trusted side has forest/domain wide access or selective access to an approved set of resources.
     * 
     * @var ?bool $selectiveAuthentication
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectiveAuthentication')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $selectiveAuthentication = null;
    
    /**
     * The target DNS server IP addresses which can resolve the remote domain involved in the trust.
     * 
     * @var ?array<string> $targetDnsIpAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetDnsIpAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $targetDnsIpAddresses = null;
    
    /**
     * The fully qualified target domain name which will be in trust with the current domain.
     * 
     * @var ?string $targetDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetDomainName = null;
    
    /**
     * The trust direction, which decides if the current domain is trusted, trusting, or both.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TrustTrustDirectionEnum $trustDirection
     */
	#[\JMS\Serializer\Annotation\SerializedName('trustDirection')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TrustTrustDirectionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TrustTrustDirectionEnum $trustDirection = null;
    
    /**
     * Input only. The trust secret used for the handshake with the target domain. It will not be stored.
     * 
     * @var ?string $trustHandshakeSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('trustHandshakeSecret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $trustHandshakeSecret = null;
    
    /**
     * The type of trust represented by the trust resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TrustTrustTypeEnum $trustType
     */
	#[\JMS\Serializer\Annotation\SerializedName('trustType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TrustTrustTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TrustTrustTypeEnum $trustType = null;
    
	public function __construct()
	{
		$this->selectiveAuthentication = null;
		$this->targetDnsIpAddresses = null;
		$this->targetDomainName = null;
		$this->trustDirection = null;
		$this->trustHandshakeSecret = null;
		$this->trustType = null;
	}
}
