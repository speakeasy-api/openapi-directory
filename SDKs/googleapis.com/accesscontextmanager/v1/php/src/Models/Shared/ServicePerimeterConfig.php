<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ServicePerimeterConfig - `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ServicePerimeterConfig
{
    /**
     * A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`. For Service Perimeter Bridge, must be empty.
     * 
     * @var ?array<string> $accessLevels
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessLevels')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $accessLevels = null;
    
    /**
     * List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EgressPolicy> $egressPolicies
     */
	#[\JMS\Serializer\Annotation\SerializedName('egressPolicies')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EgressPolicy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $egressPolicies = null;
    
    /**
     * List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\IngressPolicy> $ingressPolicies
     */
	#[\JMS\Serializer\Annotation\SerializedName('ingressPolicies')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\IngressPolicy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ingressPolicies = null;
    
    /**
     * A list of Google Cloud resources that are inside of the service perimeter. Currently only projects and VPCs are allowed. Project format: `projects/{project_number}` VPC network format: `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`.
     * 
     * @var ?array<string> $resources
     */
	#[\JMS\Serializer\Annotation\SerializedName('resources')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resources = null;
    
    /**
     * Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions.
     * 
     * @var ?array<string> $restrictedServices
     */
	#[\JMS\Serializer\Annotation\SerializedName('restrictedServices')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $restrictedServices = null;
    
    /**
     * Specifies how APIs are allowed to communicate within the Service Perimeter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VpcAccessibleServices $vpcAccessibleServices
     */
	#[\JMS\Serializer\Annotation\SerializedName('vpcAccessibleServices')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VpcAccessibleServices')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VpcAccessibleServices $vpcAccessibleServices = null;
    
	public function __construct()
	{
		$this->accessLevels = null;
		$this->egressPolicies = null;
		$this->ingressPolicies = null;
		$this->resources = null;
		$this->restrictedServices = null;
		$this->vpcAccessibleServices = null;
	}
}
