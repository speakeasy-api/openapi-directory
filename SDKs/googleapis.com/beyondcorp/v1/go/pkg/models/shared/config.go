// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConfigTransportProtocolEnum - Required. Immutable. The transport protocol used between the client and the server.
type ConfigTransportProtocolEnum string

const (
	ConfigTransportProtocolEnumTransportProtocolUnspecified ConfigTransportProtocolEnum = "TRANSPORT_PROTOCOL_UNSPECIFIED"
	ConfigTransportProtocolEnumTCP                          ConfigTransportProtocolEnum = "TCP"
)

func (e *ConfigTransportProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TRANSPORT_PROTOCOL_UNSPECIFIED":
		fallthrough
	case "TCP":
		*e = ConfigTransportProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigTransportProtocolEnum: %s", s)
	}
}

// Config - The basic ingress config for ClientGateways.
type Config struct {
	// Required. The settings used to configure basic ClientGateways.
	DestinationRoutes []DestinationRoute `json:"destinationRoutes,omitempty"`
	// Required. Immutable. The transport protocol used between the client and the server.
	TransportProtocol *ConfigTransportProtocolEnum `json:"transportProtocol,omitempty"`
}
