/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoText } from "./autotext";
import { ParagraphMarker } from "./paragraphmarker";
import { TextRun } from "./textrun";
import { Expose, Type } from "class-transformer";

/**
 * A TextElement describes the content of a range of indices in the text content of a Shape or TableCell.
 */
export class TextElement extends SpeakeasyBase {
  /**
   * A TextElement kind that represents auto text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoText" })
  @Type(() => AutoText)
  autoText?: AutoText;

  /**
   * The zero-based end index of this text element, exclusive, in Unicode code units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endIndex" })
  endIndex?: number;

  /**
   * A TextElement kind that represents the beginning of a new paragraph.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paragraphMarker" })
  @Type(() => ParagraphMarker)
  paragraphMarker?: ParagraphMarker;

  /**
   * The zero-based start index of this text element, in Unicode code units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startIndex" })
  startIndex?: number;

  /**
   * A TextElement kind that represents a run of text that all has the same styling.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textRun" })
  @Type(() => TextRun)
  textRun?: TextRun;
}
