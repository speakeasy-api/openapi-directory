// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostChargeRequestBodyActionEnum string

const (
	PostChargeRequestBodyActionEnumStart PostChargeRequestBodyActionEnum = "START"
	PostChargeRequestBodyActionEnumStop  PostChargeRequestBodyActionEnum = "STOP"
)

func (e PostChargeRequestBodyActionEnum) ToPointer() *PostChargeRequestBodyActionEnum {
	return &e
}

func (e *PostChargeRequestBodyActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "START":
		fallthrough
	case "STOP":
		*e = PostChargeRequestBodyActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostChargeRequestBodyActionEnum: %v", v)
	}
}

// PostChargeRequestBody - Include command properties to send here
type PostChargeRequestBody struct {
	Action PostChargeRequestBodyActionEnum `json:"action"`
}

type PostChargeRequest struct {
	// Include command properties to send here
	RequestBody PostChargeRequestBody `request:"mediaType=application/json"`
	// The vehicle id that needs to be fetched
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// PostCharge200ApplicationJSON - Returns the status of the command
type PostCharge200ApplicationJSON struct {
	Message *string                `json:"message,omitempty"`
	Ok      *bool                  `json:"ok,omitempty"`
	Result  map[string]interface{} `json:"result,omitempty"`
}

type PostChargeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Returns the status of the command
	PostCharge200ApplicationJSONObject *PostCharge200ApplicationJSON
}
