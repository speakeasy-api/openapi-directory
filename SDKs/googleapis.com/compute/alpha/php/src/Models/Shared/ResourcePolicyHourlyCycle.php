<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ResourcePolicyHourlyCycle - Time window specified for hourly operations.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ResourcePolicyHourlyCycle
{
    /**
     * [Output only] Duration of the time window, automatically chosen to be smallest possible in the given scenario.
     * 
     * @var ?string $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $duration = null;
    
    /**
     * Defines a schedule with units measured in hours. The value determines how many hours pass between the start of each cycle.
     * 
     * @var ?int $hoursInCycle
     */
	#[\JMS\Serializer\Annotation\SerializedName('hoursInCycle')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hoursInCycle = null;
    
    /**
     * Time within the window to start the operations. It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
	public function __construct()
	{
		$this->duration = null;
		$this->hoursInCycle = null;
		$this->startTime = null;
	}
}
