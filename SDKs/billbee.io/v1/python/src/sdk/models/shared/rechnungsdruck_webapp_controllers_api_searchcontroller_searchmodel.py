"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RechnungsdruckWebAppControllersAPISearchControllerSearchModelSearchModeEnum(str, Enum):
    ZERO = '0'
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RechnungsdruckWebAppControllersAPISearchControllerSearchModel:
    
    search_mode: Optional[RechnungsdruckWebAppControllersAPISearchControllerSearchModelSearchModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SearchMode'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'SearchMode' }})  
    term: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Term'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Term' }})  
    type: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Type' }})  
    