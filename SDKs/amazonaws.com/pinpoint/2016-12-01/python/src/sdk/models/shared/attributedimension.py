"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attributetype_enum as shared_attributetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttributeDimension:
    r"""Specifies attribute-based criteria for including or excluding endpoints from a segment."""
    
    values: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Values') }})  
    attribute_type: Optional[shared_attributetype_enum.AttributeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttributeType'), 'exclude': lambda f: f is None }})  
    