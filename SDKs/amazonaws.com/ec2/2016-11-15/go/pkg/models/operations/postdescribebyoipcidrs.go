// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeByoipCidrsActionEnum
type POSTDescribeByoipCidrsActionEnum string

const (
	POSTDescribeByoipCidrsActionEnumDescribeByoipCidrs POSTDescribeByoipCidrsActionEnum = "DescribeByoipCidrs"
)

func (e *POSTDescribeByoipCidrsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeByoipCidrs":
		*e = POSTDescribeByoipCidrsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeByoipCidrsActionEnum: %s", s)
	}
}

// POSTDescribeByoipCidrsVersionEnum
type POSTDescribeByoipCidrsVersionEnum string

const (
	POSTDescribeByoipCidrsVersionEnumTwoThousandAndSixteen1115 POSTDescribeByoipCidrsVersionEnum = "2016-11-15"
)

func (e *POSTDescribeByoipCidrsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDescribeByoipCidrsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeByoipCidrsVersionEnum: %s", s)
	}
}

type POSTDescribeByoipCidrsQueryParams struct {
	Action POSTDescribeByoipCidrsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string                           `queryParam:"style=form,explode=true,name=NextToken"`
	Version   POSTDescribeByoipCidrsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeByoipCidrsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeByoipCidrsRequest struct {
	QueryParams POSTDescribeByoipCidrsQueryParams
	Headers     POSTDescribeByoipCidrsHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeByoipCidrsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
