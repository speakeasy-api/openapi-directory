"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import action as shared_action
from ..shared import chatchannel as shared_chatchannel
from ..shared import incidenttemplate as shared_incidenttemplate
from ..shared import integration as shared_integration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetResponsePlanOutput:
    r"""Success"""
    
    arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arn') }})  
    incident_template: shared_incidenttemplate.IncidentTemplate = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('incidentTemplate') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    actions: Optional[list[shared_action.Action]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actions'), 'exclude': lambda f: f is None }})  
    chat_channel: Optional[shared_chatchannel.ChatChannel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chatChannel'), 'exclude': lambda f: f is None }})  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})  
    engagements: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engagements'), 'exclude': lambda f: f is None }})  
    integrations: Optional[list[shared_integration.Integration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integrations'), 'exclude': lambda f: f is None }})  
    