/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BatchStrategyEnum } from "./batchstrategyenum";
import { TransformInput } from "./transforminput";
import { TransformOutput } from "./transformoutput";
import { TransformResources } from "./transformresources";
import { Expose, Type } from "class-transformer";

/**
 * Defines the input needed to run a transform job using the inference specification specified in the algorithm.
 */
export class TransformJobDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BatchStrategy" })
  batchStrategy?: BatchStrategyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Environment" })
  environment?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrentTransforms" })
  maxConcurrentTransforms?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxPayloadInMB" })
  maxPayloadInMB?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TransformInput" })
  @Type(() => TransformInput)
  transformInput: TransformInput;

  @SpeakeasyMetadata()
  @Expose({ name: "TransformOutput" })
  @Type(() => TransformOutput)
  transformOutput: TransformOutput;

  @SpeakeasyMetadata()
  @Expose({ name: "TransformResources" })
  @Type(() => TransformResources)
  transformResources: TransformResources;
}
