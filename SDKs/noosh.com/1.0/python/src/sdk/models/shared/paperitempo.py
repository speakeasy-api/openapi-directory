"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaperItemPO:
    r"""Java type: com.noosh.domain.nooshapi.persist.po.PaperItemPO"""
    
    min_uom_qty: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('min_uom_qty'), 'exclude': lambda f: f is None }})  
    paper_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paper_id'), 'exclude': lambda f: f is None }})  
    price_1: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_1'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    price_2: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_2'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    price_3: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_3'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    price_4: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_4'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    price_5: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_5'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    price_per_tonne: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_per_tonne'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    qty_uom: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qty_uom'), 'exclude': lambda f: f is None }})  
    quantity_1: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_1'), 'exclude': lambda f: f is None }})  
    quantity_2: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_2'), 'exclude': lambda f: f is None }})  
    quantity_3: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_3'), 'exclude': lambda f: f is None }})  
    quantity_4: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_4'), 'exclude': lambda f: f is None }})  
    quantity_5: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_5'), 'exclude': lambda f: f is None }})  
    size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size'), 'exclude': lambda f: f is None }})  
    sku: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sku'), 'exclude': lambda f: f is None }})  
    unit_price_1: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit_price_1'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    unit_price_2: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit_price_2'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    unit_price_3: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit_price_3'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    unit_price_4: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit_price_4'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    unit_price_5: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit_price_5'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    