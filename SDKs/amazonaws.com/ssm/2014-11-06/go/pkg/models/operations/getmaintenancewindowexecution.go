// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetMaintenanceWindowExecutionXAmzTargetEnum
type GetMaintenanceWindowExecutionXAmzTargetEnum string

const (
	GetMaintenanceWindowExecutionXAmzTargetEnumAmazonSsmGetMaintenanceWindowExecution GetMaintenanceWindowExecutionXAmzTargetEnum = "AmazonSSM.GetMaintenanceWindowExecution"
)

func (e GetMaintenanceWindowExecutionXAmzTargetEnum) ToPointer() *GetMaintenanceWindowExecutionXAmzTargetEnum {
	return &e
}

func (e *GetMaintenanceWindowExecutionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.GetMaintenanceWindowExecution":
		*e = GetMaintenanceWindowExecutionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMaintenanceWindowExecutionXAmzTargetEnum: %v", v)
	}
}

type GetMaintenanceWindowExecutionRequest struct {
	GetMaintenanceWindowExecutionRequest shared.GetMaintenanceWindowExecutionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           GetMaintenanceWindowExecutionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetMaintenanceWindowExecutionResponse struct {
	ContentType string
	// DoesNotExistException
	DoesNotExistException interface{}
	// Success
	GetMaintenanceWindowExecutionResult *shared.GetMaintenanceWindowExecutionResult
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
