/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressFamilyEnum } from "./addressfamilyenum";
import { BGPPeer } from "./bgppeer";
import { RouteFilterPrefix } from "./routefilterprefix";
import { Tag } from "./tag";
import { VirtualInterfaceStateEnum } from "./virtualinterfacestateenum";
import { Expose, Type } from "class-transformer";

/**
 * Information about a virtual interface.
 */
export class VirtualInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "addressFamily" })
  addressFamily?: AddressFamilyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "amazonAddress" })
  amazonAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "amazonSideAsn" })
  amazonSideAsn?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "asn" })
  asn?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "authKey" })
  authKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "awsDeviceV2" })
  awsDeviceV2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "awsLogicalDeviceId" })
  awsLogicalDeviceId?: string;

  @SpeakeasyMetadata({ elemType: BGPPeer })
  @Expose({ name: "bgpPeers" })
  @Type(() => BGPPeer)
  bgpPeers?: BGPPeer[];

  @SpeakeasyMetadata()
  @Expose({ name: "connectionId" })
  connectionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customerAddress" })
  customerAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "customerRouterConfig" })
  customerRouterConfig?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "directConnectGatewayId" })
  directConnectGatewayId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jumboFrameCapable" })
  jumboFrameCapable?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mtu" })
  mtu?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ownerAccount" })
  ownerAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  @SpeakeasyMetadata({ elemType: RouteFilterPrefix })
  @Expose({ name: "routeFilterPrefixes" })
  @Type(() => RouteFilterPrefix)
  routeFilterPrefixes?: RouteFilterPrefix[];

  @SpeakeasyMetadata()
  @Expose({ name: "siteLinkEnabled" })
  siteLinkEnabled?: boolean;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "virtualGatewayId" })
  virtualGatewayId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualInterfaceId" })
  virtualInterfaceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualInterfaceName" })
  virtualInterfaceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualInterfaceState" })
  virtualInterfaceState?: VirtualInterfaceStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualInterfaceType" })
  virtualInterfaceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vlan" })
  vlan?: number;
}
