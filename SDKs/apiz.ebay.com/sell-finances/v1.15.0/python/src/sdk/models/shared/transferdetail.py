"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amount as shared_amount
from ..shared import balanceadjustment as shared_balanceadjustment
from ..shared import charge as shared_charge
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransferDetail:
    r"""This type is used by the <b>transferDetail</b> container, which provides more details about the transfer and the charge(s) associated with the transfer."""
    
    balance_adjustment: Optional[shared_balanceadjustment.BalanceAdjustment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balanceAdjustment'), 'exclude': lambda f: f is None }})
    r"""This type is used by the <b>balanceAdjustment</b> container, which shows the seller payout balance that will be applied toward the charges outlined in the <b>charges</b> array."""  
    charges: Optional[list[shared_charge.Charge]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('charges'), 'exclude': lambda f: f is None }})
    r"""This container is an array of one or more charges related to the transfer. Charges can be related to an order cancellation, order return, case, payment dispute, etc."""  
    total_charge_net_amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalChargeNetAmount'), 'exclude': lambda f: f is None }})
    r"""This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit."""  
    