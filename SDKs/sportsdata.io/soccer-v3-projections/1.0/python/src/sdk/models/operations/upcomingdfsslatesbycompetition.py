"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import dfsslate as shared_dfsslate
from enum import Enum
from typing import Optional

class UpcomingDfsSlatesByCompetitionFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""
    JSON = 'json'
    XML = 'xml'


@dataclasses.dataclass
class UpcomingDfsSlatesByCompetitionRequest:
    
    competition_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'competitionId', 'style': 'simple', 'explode': False }})
    r"""The Competition Id.
    <br>Examples: <code>3</code>
    """  
    format: UpcomingDfsSlatesByCompetitionFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""  
    

@dataclasses.dataclass
class UpcomingDfsSlatesByCompetitionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    dfs_slates: Optional[list[shared_dfsslate.DfsSlate]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    