/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateTaskQueueServerList = [
  "https://taskrouter.twilio.com",
] as const;

export class CreateTaskQueueSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateTaskQueueCreateTaskQueueRequest extends SpeakeasyBase {
  /**
   * The SID of the Activity to assign Workers when a task is assigned to them.
   */
  @SpeakeasyMetadata({ data: "form, name=AssignmentActivitySid" })
  assignmentActivitySid?: string;

  /**
   * A descriptive string that you create to describe the TaskQueue. For example `Support-Tier 1`, `Sales`, or `Escalation`.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName: string;

  /**
   * The maximum number of Workers to reserve for the assignment of a Task in the queue. Can be an integer between 1 and 50, inclusive and defaults to 1.
   */
  @SpeakeasyMetadata({ data: "form, name=MaxReservedWorkers" })
  maxReservedWorkers?: number;

  /**
   * The SID of the Activity to assign Workers when a task is reserved for them.
   */
  @SpeakeasyMetadata({ data: "form, name=ReservationActivitySid" })
  reservationActivitySid?: string;

  /**
   * A string that describes the Worker selection criteria for any Tasks that enter the TaskQueue. For example, `'"language" == "spanish"'`. The default value is `1==1`. If this value is empty, Tasks will wait in the TaskQueue until they are deleted or moved to another TaskQueue. For more information about Worker selection, see [Describing Worker selection criteria](https://www.twilio.com/docs/taskrouter/api/taskqueues#target-workers).
   */
  @SpeakeasyMetadata({ data: "form, name=TargetWorkers" })
  targetWorkers?: string;

  @SpeakeasyMetadata({ data: "form, name=TaskOrder" })
  taskOrder?: shared.TaskQueueEnumTaskOrderEnum;
}

export class CreateTaskQueueRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateTaskQueueCreateTaskQueueRequest;

  /**
   * The SID of the Workspace that the new TaskQueue belongs to.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=WorkspaceSid",
  })
  workspaceSid: string;
}

export class CreateTaskQueueResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  taskrouterV1WorkspaceTaskQueue?: shared.TaskrouterV1WorkspaceTaskQueue;
}
