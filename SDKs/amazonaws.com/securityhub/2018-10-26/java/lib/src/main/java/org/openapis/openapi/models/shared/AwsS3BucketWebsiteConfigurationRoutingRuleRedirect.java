/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AwsS3BucketWebsiteConfigurationRoutingRuleRedirect - The rules to redirect the request if the condition in &lt;code&gt;Condition&lt;/code&gt; is met.
 */
public class AwsS3BucketWebsiteConfigurationRoutingRuleRedirect {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Hostname")
    public String hostname;
    public AwsS3BucketWebsiteConfigurationRoutingRuleRedirect withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HttpRedirectCode")
    public String httpRedirectCode;
    public AwsS3BucketWebsiteConfigurationRoutingRuleRedirect withHttpRedirectCode(String httpRedirectCode) {
        this.httpRedirectCode = httpRedirectCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Protocol")
    public String protocol;
    public AwsS3BucketWebsiteConfigurationRoutingRuleRedirect withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReplaceKeyPrefixWith")
    public String replaceKeyPrefixWith;
    public AwsS3BucketWebsiteConfigurationRoutingRuleRedirect withReplaceKeyPrefixWith(String replaceKeyPrefixWith) {
        this.replaceKeyPrefixWith = replaceKeyPrefixWith;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReplaceKeyWith")
    public String replaceKeyWith;
    public AwsS3BucketWebsiteConfigurationRoutingRuleRedirect withReplaceKeyWith(String replaceKeyWith) {
        this.replaceKeyWith = replaceKeyWith;
        return this;
    }
    
}
