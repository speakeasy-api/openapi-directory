<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class VirtualMachineSummary
{
	#[\JMS\Serializer\Annotation\SerializedName('agentStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AgentStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AgentStatus $agentStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('cloudInstantiationSpec')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CloudInstantiationSpec')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CloudInstantiationSpec $cloudInstantiationSpec = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('clusterName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clusterName = null;
    
    /**
     * The ID of the SLA Domain configured directly on the Rubrik object.
     * 
     * @var string $configuredSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configuredSlaDomainId;
    
    /**
     * The name of the SLA Domain configured directly on the Rubrik object.
     * 
     * @var string $configuredSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $configuredSlaDomainName;
    
    /**
     * Specifies whether the SLA Domain is used for protection or retention.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConfiguredSlaTypeEnum $configuredSlaDomainType
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuredSlaDomainType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConfiguredSlaTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConfiguredSlaTypeEnum $configuredSlaDomainType = null;
    
    /**
     * The ID of the SLA Domain that controls the protection of the Rubrik object.
     * 
     * @var string $effectiveSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effectiveSlaDomainId;
    
    /**
     * The name of the SLA Domain that controls the protection of the Rubrik object.
     * 
     * @var string $effectiveSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $effectiveSlaDomainName;
    
    /**
     * Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
     * 
     * @var ?string $effectiveSlaDomainPolarisManagedId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaDomainPolarisManagedId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaDomainPolarisManagedId = null;
    
    /**
     * The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     * 
     * @var ?string $effectiveSlaSourceObjectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaSourceObjectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaSourceObjectId = null;
    
    /**
     * The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
     * 
     * @var ?string $effectiveSlaSourceObjectName
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveSlaSourceObjectName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveSlaSourceObjectName = null;
    
    /**
     * Brief info of all the objects in the folder path to this VM.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\VmPathPoint> $folderPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('folderPath')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VmPathPoint>')]
    public array $folderPath;
    
    /**
     * Status of authentication with a specific virtual machine using guest credentials. Possible values are: SUCCESSFUL, PENDING, or FAILED.
     * 
     * @var string $guestCredentialAuthorizationStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestCredentialAuthorizationStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $guestCredentialAuthorizationStatus;
    
	#[\JMS\Serializer\Annotation\SerializedName('guestOsName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $guestOsName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('hostName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hostName = null;
    
    /**
     * The ID of the Rubrik object.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Brief info of all the objects in the infrastructure path to this VM.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\VmPathPoint> $infraPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('infraPath')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VmPathPoint>')]
    public array $infraPath;
    
	#[\JMS\Serializer\Annotation\SerializedName('ipAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ipAddress;
    
    /**
     * Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
     * 
     * @var ?bool $isConfiguredSlaDomainRetentionLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isConfiguredSlaDomainRetentionLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isConfiguredSlaDomainRetentionLocked = null;
    
    /**
     * Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
     * 
     * @var ?bool $isEffectiveSlaDomainRetentionLocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('isEffectiveSlaDomainRetentionLocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isEffectiveSlaDomainRetentionLocked = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isRelic')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isRelic;
    
	#[\JMS\Serializer\Annotation\SerializedName('isReplicationEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isReplicationEnabled;
    
	#[\JMS\Serializer\Annotation\SerializedName('moid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $moid;
    
    /**
     * The name of the Rubrik object.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('parentAppInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ParentAppInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ParentAppInfo $parentAppInfo = null;
    
    /**
     * The power status of VM(ON,OFF,SLEEP etc.).
     * 
     * @var ?string $powerStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('powerStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $powerStatus = null;
    
    /**
     * The ID of the cluster that manages the Rubrik object.
     * 
     * @var string $primaryClusterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryClusterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryClusterId;
    
	#[\JMS\Serializer\Annotation\SerializedName('protectionDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $protectionDate = null;
    
    /**
     * The ID of the SLA Domain whose retention policy is in use.
     * 
     * @var ?string $retentionSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $retentionSlaDomainId = null;
    
    /**
     * The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VirtualMachineSummarySlaAssignmentEnum $slaAssignment
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaAssignment')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VirtualMachineSummarySlaAssignmentEnum>')]
    public VirtualMachineSummarySlaAssignmentEnum $slaAssignment;
    
    /**
     * The UTC time when the SLA Domain was last updated.
     * 
     * @var ?\DateTime $slaLastUpdateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaLastUpdateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $slaLastUpdateTime = null;
    
    /**
     * Consistency level mandated for this VM or empty string for none.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VirtualMachineSummarySnapshotConsistencyMandateEnum $snapshotConsistencyMandate
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshotConsistencyMandate')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VirtualMachineSummarySnapshotConsistencyMandateEnum>')]
    public VirtualMachineSummarySnapshotConsistencyMandateEnum $snapshotConsistencyMandate;
    
	#[\JMS\Serializer\Annotation\SerializedName('toolsInstalled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $toolsInstalled = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('vcenterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vcenterId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('vmwareToolsInstalled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $vmwareToolsInstalled;
    
	public function __construct()
	{
		$this->agentStatus = null;
		$this->cloudInstantiationSpec = null;
		$this->clusterName = null;
		$this->configuredSlaDomainId = "";
		$this->configuredSlaDomainName = "";
		$this->configuredSlaDomainType = null;
		$this->effectiveSlaDomainId = "";
		$this->effectiveSlaDomainName = "";
		$this->effectiveSlaDomainPolarisManagedId = null;
		$this->effectiveSlaSourceObjectId = null;
		$this->effectiveSlaSourceObjectName = null;
		$this->folderPath = [];
		$this->guestCredentialAuthorizationStatus = "";
		$this->guestOsName = null;
		$this->hostId = null;
		$this->hostName = null;
		$this->id = "";
		$this->infraPath = [];
		$this->ipAddress = "";
		$this->isConfiguredSlaDomainRetentionLocked = null;
		$this->isEffectiveSlaDomainRetentionLocked = null;
		$this->isRelic = false;
		$this->isReplicationEnabled = false;
		$this->moid = "";
		$this->name = "";
		$this->parentAppInfo = null;
		$this->powerStatus = null;
		$this->primaryClusterId = "";
		$this->protectionDate = null;
		$this->retentionSlaDomainId = null;
		$this->slaAssignment = \OpenAPI\OpenAPI\Models\Shared\VirtualMachineSummarySlaAssignmentEnum::DERIVED;
		$this->slaLastUpdateTime = null;
		$this->snapshotConsistencyMandate = \OpenAPI\OpenAPI\Models\Shared\VirtualMachineSummarySnapshotConsistencyMandateEnum::UNKNOWN;
		$this->toolsInstalled = null;
		$this->vcenterId = null;
		$this->vmwareToolsInstalled = false;
	}
}
