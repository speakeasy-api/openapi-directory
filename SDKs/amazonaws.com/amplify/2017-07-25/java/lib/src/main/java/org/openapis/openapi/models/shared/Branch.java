/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Branch -  The branch for an Amplify app, which maps to a third-party repository branch. 
 */
public class Branch {
    @JsonProperty("activeJobId")
    public String activeJobId;

    public Branch withActiveJobId(String activeJobId) {
        this.activeJobId = activeJobId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associatedResources")
    public String[] associatedResources;

    public Branch withAssociatedResources(String[] associatedResources) {
        this.associatedResources = associatedResources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backendEnvironmentArn")
    public String backendEnvironmentArn;

    public Branch withBackendEnvironmentArn(String backendEnvironmentArn) {
        this.backendEnvironmentArn = backendEnvironmentArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basicAuthCredentials")
    public String basicAuthCredentials;

    public Branch withBasicAuthCredentials(String basicAuthCredentials) {
        this.basicAuthCredentials = basicAuthCredentials;
        return this;
    }
    
    @JsonProperty("branchArn")
    public String branchArn;

    public Branch withBranchArn(String branchArn) {
        this.branchArn = branchArn;
        return this;
    }
    
    @JsonProperty("branchName")
    public String branchName;

    public Branch withBranchName(String branchName) {
        this.branchName = branchName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildSpec")
    public String buildSpec;

    public Branch withBuildSpec(String buildSpec) {
        this.buildSpec = buildSpec;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createTime")
    public OffsetDateTime createTime;

    public Branch withCreateTime(OffsetDateTime createTime) {
        this.createTime = createTime;
        return this;
    }
    
    @JsonProperty("customDomains")
    public String[] customDomains;

    public Branch withCustomDomains(String[] customDomains) {
        this.customDomains = customDomains;
        return this;
    }
    
    @JsonProperty("description")
    public String description;

    public Branch withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationBranch")
    public String destinationBranch;

    public Branch withDestinationBranch(String destinationBranch) {
        this.destinationBranch = destinationBranch;
        return this;
    }
    
    @JsonProperty("displayName")
    public String displayName;

    public Branch withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonProperty("enableAutoBuild")
    public Boolean enableAutoBuild;

    public Branch withEnableAutoBuild(Boolean enableAutoBuild) {
        this.enableAutoBuild = enableAutoBuild;
        return this;
    }
    
    @JsonProperty("enableBasicAuth")
    public Boolean enableBasicAuth;

    public Branch withEnableBasicAuth(Boolean enableBasicAuth) {
        this.enableBasicAuth = enableBasicAuth;
        return this;
    }
    
    @JsonProperty("enableNotification")
    public Boolean enableNotification;

    public Branch withEnableNotification(Boolean enableNotification) {
        this.enableNotification = enableNotification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enablePerformanceMode")
    public Boolean enablePerformanceMode;

    public Branch withEnablePerformanceMode(Boolean enablePerformanceMode) {
        this.enablePerformanceMode = enablePerformanceMode;
        return this;
    }
    
    @JsonProperty("enablePullRequestPreview")
    public Boolean enablePullRequestPreview;

    public Branch withEnablePullRequestPreview(Boolean enablePullRequestPreview) {
        this.enablePullRequestPreview = enablePullRequestPreview;
        return this;
    }
    
    @JsonProperty("environmentVariables")
    public java.util.Map<String, String> environmentVariables;

    public Branch withEnvironmentVariables(java.util.Map<String, String> environmentVariables) {
        this.environmentVariables = environmentVariables;
        return this;
    }
    
    @JsonProperty("framework")
    public String framework;

    public Branch withFramework(String framework) {
        this.framework = framework;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pullRequestEnvironmentName")
    public String pullRequestEnvironmentName;

    public Branch withPullRequestEnvironmentName(String pullRequestEnvironmentName) {
        this.pullRequestEnvironmentName = pullRequestEnvironmentName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceBranch")
    public String sourceBranch;

    public Branch withSourceBranch(String sourceBranch) {
        this.sourceBranch = sourceBranch;
        return this;
    }
    
    @JsonProperty("stage")
    public StageEnum stage;

    public Branch withStage(StageEnum stage) {
        this.stage = stage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public Branch withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailUrl")
    public String thumbnailUrl;

    public Branch withThumbnailUrl(String thumbnailUrl) {
        this.thumbnailUrl = thumbnailUrl;
        return this;
    }
    
    @JsonProperty("totalNumberOfJobs")
    public String totalNumberOfJobs;

    public Branch withTotalNumberOfJobs(String totalNumberOfJobs) {
        this.totalNumberOfJobs = totalNumberOfJobs;
        return this;
    }
    
    @JsonProperty("ttl")
    public String ttl;

    public Branch withTtl(String ttl) {
        this.ttl = ttl;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updateTime")
    public OffsetDateTime updateTime;

    public Branch withUpdateTime(OffsetDateTime updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Branch(@JsonProperty("activeJobId") String activeJobId, @JsonProperty("branchArn") String branchArn, @JsonProperty("branchName") String branchName, @JsonProperty("createTime") OffsetDateTime createTime, @JsonProperty("customDomains") String[] customDomains, @JsonProperty("description") String description, @JsonProperty("displayName") String displayName, @JsonProperty("enableAutoBuild") Boolean enableAutoBuild, @JsonProperty("enableBasicAuth") Boolean enableBasicAuth, @JsonProperty("enableNotification") Boolean enableNotification, @JsonProperty("enablePullRequestPreview") Boolean enablePullRequestPreview, @JsonProperty("environmentVariables") java.util.Map<String, String> environmentVariables, @JsonProperty("framework") String framework, @JsonProperty("stage") StageEnum stage, @JsonProperty("totalNumberOfJobs") String totalNumberOfJobs, @JsonProperty("ttl") String ttl, @JsonProperty("updateTime") OffsetDateTime updateTime) {
        this.activeJobId = activeJobId;
        this.branchArn = branchArn;
        this.branchName = branchName;
        this.createTime = createTime;
        this.customDomains = customDomains;
        this.description = description;
        this.displayName = displayName;
        this.enableAutoBuild = enableAutoBuild;
        this.enableBasicAuth = enableBasicAuth;
        this.enableNotification = enableNotification;
        this.enablePullRequestPreview = enablePullRequestPreview;
        this.environmentVariables = environmentVariables;
        this.framework = framework;
        this.stage = stage;
        this.totalNumberOfJobs = totalNumberOfJobs;
        this.ttl = ttl;
        this.updateTime = updateTime;
  }
}
