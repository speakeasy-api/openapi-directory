"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetProfileSecurity:
    
    gma_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetProfileRequest:
    
    contract: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Contract', 'style': 'form', 'explode': True }})
    r"""to get a contract (if not signed error 404 + html contract)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProfile200ApplicationJSONBirth:
    
    city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('City'), 'exclude': lambda f: f is None }})  
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Country'), 'exclude': lambda f: f is None }})  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Date'), 'exclude': lambda f: f is None }})  
    zip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ZipCode'), 'exclude': lambda f: f is None }})  
    
class GetProfile200ApplicationJSONSexEnum(str, Enum):
    MALE = 'male'
    FEMALE = 'female'

class GetProfile200ApplicationJSONStatusEnum(str, Enum):
    VALIDATED = 'validated'
    NOT_VALIDATED = 'not validated'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProfile200ApplicationJSON:
    r"""the status of the member"""
    
    birth: Optional[GetProfile200ApplicationJSONBirth] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Birth'), 'exclude': lambda f: f is None }})  
    birth_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BirthName'), 'exclude': lambda f: f is None }})  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirstName'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    private_space_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrivateSpaceId'), 'exclude': lambda f: f is None }})  
    sex: Optional[GetProfile200ApplicationJSONSexEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Sex'), 'exclude': lambda f: f is None }})  
    status: Optional[GetProfile200ApplicationJSONStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetProfileResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_profile_200_application_json_object: Optional[GetProfile200ApplicationJSON] = dataclasses.field(default=None)
    r"""the status of the member"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    