/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The Type of this registration (per meter, per user, ...)
 */
export enum RegisterRealtimeApiDataRegistrationTypeEnum {
  Disabled = "Disabled",
  SingleMeterRegistration = "SingleMeterRegistration",
  UserRegistration = "UserRegistration",
}

/**
 * Container class for the register realtime API API
 */
export class RegisterRealtimeApiData extends SpeakeasyBase {
  /**
   * The URL of your endpoint. To this endpoint all the values are send to.
   */
  @SpeakeasyMetadata({ data: "form, name=ApiUrl" })
  @Expose({ name: "ApiUrl" })
  apiUrl?: string;

  /**
   * The Password (basic auth) of your endpoint. Leave empty of none.
   */
  @SpeakeasyMetadata({ data: "form, name=BasicAuthPassword" })
  @Expose({ name: "BasicAuthPassword" })
  basicAuthPassword?: string;

  /**
   * The Username (basic auth) of your endpoint. Leave empty of none.
   */
  @SpeakeasyMetadata({ data: "form, name=BasicAuthUsername" })
  @Expose({ name: "BasicAuthUsername" })
  basicAuthUsername?: string;

  /**
   * The ID of the registration
   */
  @SpeakeasyMetadata({ data: "form, name=Id" })
  @Expose({ name: "Id" })
  id?: string;

  /**
   * The ID of the Meter. Just used if the RegistrationType is "SingleMeterRegistration".
   */
  @SpeakeasyMetadata({ data: "form, name=MeterId" })
  @Expose({ name: "MeterId" })
  meterId?: string;

  /**
   * The Type of this registration (per meter, per user, ...)
   */
  @SpeakeasyMetadata({ data: "form, name=RegistrationType" })
  @Expose({ name: "RegistrationType" })
  registrationType?: RegisterRealtimeApiDataRegistrationTypeEnum;

  /**
   * The serial number of the Meter. Just used if the RegistrationType is "SingleMeterRegistration" and the MeterId is null.
   *
   * @remarks
   *             Example: 1 SME 01 63000000 or 6300000
   */
  @SpeakeasyMetadata({ data: "form, name=SerialNumber" })
  @Expose({ name: "SerialNumber" })
  serialNumber?: string;
}
