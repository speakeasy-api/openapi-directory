/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * An object representing the device associated with the event.
 */
export class DeviceEventDevice extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Attributes" })
  attributes?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceId" })
  deviceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}

export class DeviceEvent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Device" })
  @Type(() => DeviceEventDevice)
  device?: DeviceEventDevice;

  @SpeakeasyMetadata()
  @Expose({ name: "StdEvent" })
  stdEvent?: string;
}
