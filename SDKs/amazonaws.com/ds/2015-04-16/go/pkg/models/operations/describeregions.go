// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeRegionsXAmzTargetEnum
type DescribeRegionsXAmzTargetEnum string

const (
	DescribeRegionsXAmzTargetEnumDirectoryService20150416DescribeRegions DescribeRegionsXAmzTargetEnum = "DirectoryService_20150416.DescribeRegions"
)

func (e DescribeRegionsXAmzTargetEnum) ToPointer() *DescribeRegionsXAmzTargetEnum {
	return &e
}

func (e *DescribeRegionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DirectoryService_20150416.DescribeRegions":
		*e = DescribeRegionsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeRegionsXAmzTargetEnum: %v", v)
	}
}

type DescribeRegionsRequest struct {
	DescribeRegionsRequest shared.DescribeRegionsRequest `request:"mediaType=application/json"`
	// Pagination token
	NextToken         *string                       `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeRegionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeRegionsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	DescribeRegionsResult *shared.DescribeRegionsResult
	// DirectoryDoesNotExistException
	DirectoryDoesNotExistException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceException
	ServiceException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
