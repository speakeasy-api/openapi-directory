/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleIdentityStsV1ExchangeOauthTokenResponse - Response message for ExchangeOauthToken. see https://www.rfc-editor.org/rfc/rfc6749#section-5.1
 */
public class GoogleIdentityStsV1ExchangeOauthTokenResponse {
    /**
     * An OAuth 2.0 security token, issued by Google, in response to the Oauth token exchange request for the authorization code and refresh token flows. The returned [access token](https://www.rfc-editor.org/rfc/rfc6749#section-4.1.4). Tokens can vary in size, depending, in part, on the size of mapped claims, up to a maximum of 12288 bytes (12 KB). Google reserves the right to change the token size and the maximum length at any time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access_token")
    public String accessToken;
    public GoogleIdentityStsV1ExchangeOauthTokenResponse withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * The amount of time, in seconds, between the time when the access token was issued and the time when the access token will expires.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expires_in")
    public Integer expiresIn;
    public GoogleIdentityStsV1ExchangeOauthTokenResponse withExpiresIn(Integer expiresIn) {
        this.expiresIn = expiresIn;
        return this;
    }
    
    /**
     * Google issued ID token in response to the OAuth token exchange request for ID token flow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_token")
    public String idToken;
    public GoogleIdentityStsV1ExchangeOauthTokenResponse withIdToken(String idToken) {
        this.idToken = idToken;
        return this;
    }
    
    /**
     * A refresh token, issued by Google, in response to the OAuth token exchange request for refresh token flow
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refresh_token")
    public String refreshToken;
    public GoogleIdentityStsV1ExchangeOauthTokenResponse withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
    /**
     * A list of scopes associated with the returned token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;
    public GoogleIdentityStsV1ExchangeOauthTokenResponse withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * The type of token. Field reserved for RFC compliance. See https://www.rfc-editor.org/rfc/rfc6749#section-5.1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token_type")
    public String tokenType;
    public GoogleIdentityStsV1ExchangeOauthTokenResponse withTokenType(String tokenType) {
        this.tokenType = tokenType;
        return this;
    }
    
}
