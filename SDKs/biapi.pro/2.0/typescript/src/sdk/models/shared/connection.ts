/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Successful DELETE on Connection resource
 */
export class Connection extends SpeakeasyBase {
  /**
   * This connection is active and will be automatically synced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active: boolean;

  /**
   * Creation date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * ID of connection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * ID of the related connector
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_connector" })
  idConnector: number;

  /**
   * ID of the related user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_user" })
  idUser?: number;

  /**
   * Last successful push
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_push" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastPush?: Date;

  /**
   * Last successful update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_update" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdate?: Date;

  /**
   * Date of next synchronization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_try" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextTry?: Date;
}
