"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkGroupConfiguration = void 0;
var utils_1 = require("../../../internal/utils");
var customercontentencryptionconfiguration_1 = require("./customercontentencryptionconfiguration");
var engineversion_1 = require("./engineversion");
var resultconfiguration_1 = require("./resultconfiguration");
var class_transformer_1 = require("class-transformer");
/**
 * The configuration of the workgroup, which includes the location in Amazon S3 where query and calculation results are stored, the encryption option, if any, used for query and calculation results, whether the Amazon CloudWatch Metrics are enabled for the workgroup and whether workgroup settings override query settings, and the data usage limits for the amount of data scanned per query or per workgroup. The workgroup settings override is specified in <code>EnforceWorkGroupConfiguration</code> (true/false) in the <code>WorkGroupConfiguration</code>. See <a>WorkGroupConfiguration$EnforceWorkGroupConfiguration</a>.
 */
var WorkGroupConfiguration = /** @class */ (function (_super) {
    __extends(WorkGroupConfiguration, _super);
    function WorkGroupConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AdditionalConfiguration" }),
        __metadata("design:type", String)
    ], WorkGroupConfiguration.prototype, "additionalConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BytesScannedCutoffPerQuery" }),
        __metadata("design:type", Number)
    ], WorkGroupConfiguration.prototype, "bytesScannedCutoffPerQuery", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CustomerContentEncryptionConfiguration" }),
        (0, class_transformer_1.Type)(function () { return customercontentencryptionconfiguration_1.CustomerContentEncryptionConfiguration; }),
        __metadata("design:type", customercontentencryptionconfiguration_1.CustomerContentEncryptionConfiguration)
    ], WorkGroupConfiguration.prototype, "customerContentEncryptionConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EnableMinimumEncryptionConfiguration" }),
        __metadata("design:type", Boolean)
    ], WorkGroupConfiguration.prototype, "enableMinimumEncryptionConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EnforceWorkGroupConfiguration" }),
        __metadata("design:type", Boolean)
    ], WorkGroupConfiguration.prototype, "enforceWorkGroupConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EngineVersion" }),
        (0, class_transformer_1.Type)(function () { return engineversion_1.EngineVersion; }),
        __metadata("design:type", engineversion_1.EngineVersion)
    ], WorkGroupConfiguration.prototype, "engineVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ExecutionRole" }),
        __metadata("design:type", String)
    ], WorkGroupConfiguration.prototype, "executionRole", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "PublishCloudWatchMetricsEnabled" }),
        __metadata("design:type", Boolean)
    ], WorkGroupConfiguration.prototype, "publishCloudWatchMetricsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RequesterPaysEnabled" }),
        __metadata("design:type", Boolean)
    ], WorkGroupConfiguration.prototype, "requesterPaysEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ResultConfiguration" }),
        (0, class_transformer_1.Type)(function () { return resultconfiguration_1.ResultConfiguration; }),
        __metadata("design:type", resultconfiguration_1.ResultConfiguration)
    ], WorkGroupConfiguration.prototype, "resultConfiguration", void 0);
    return WorkGroupConfiguration;
}(utils_1.SpeakeasyBase));
exports.WorkGroupConfiguration = WorkGroupConfiguration;
