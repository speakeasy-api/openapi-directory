<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SubjectDescription - These values describe fields in an issued X.509 certificate such as the distinguished name, subject alternative names, serial number, and lifetime.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SubjectDescription
{
    /**
     * The serial number encoded in lowercase hexadecimal.
     * 
     * @var ?string $hexSerialNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('hexSerialNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hexSerialNumber = null;
    
    /**
     * For convenience, the actual lifetime of an issued certificate.
     * 
     * @var ?string $lifetime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lifetime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lifetime = null;
    
    /**
     * The time after which the certificate is expired. Per RFC 5280, the validity period for a certificate is the period of time from not_before_time through not_after_time, inclusive. Corresponds to 'not_before_time' + 'lifetime' - 1 second.
     * 
     * @var ?string $notAfterTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('notAfterTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notAfterTime = null;
    
    /**
     * The time at which the certificate becomes valid.
     * 
     * @var ?string $notBeforeTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('notBeforeTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notBeforeTime = null;
    
    /**
     * Subject describes parts of a distinguished name that, in turn, describes the subject of the certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Subject $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Subject')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Subject $subject = null;
    
    /**
     * SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the "common name" in the distinguished name).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SubjectAltNames $subjectAltName
     */
	#[\JMS\Serializer\Annotation\SerializedName('subjectAltName')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SubjectAltNames')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SubjectAltNames $subjectAltName = null;
    
	public function __construct()
	{
		$this->hexSerialNumber = null;
		$this->lifetime = null;
		$this->notAfterTime = null;
		$this->notBeforeTime = null;
		$this->subject = null;
		$this->subjectAltName = null;
	}
}
