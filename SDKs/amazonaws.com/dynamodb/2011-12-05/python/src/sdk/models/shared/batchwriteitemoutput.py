"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import batchwriteresponse as shared_batchwriteresponse
from ..shared import writerequest as shared_writerequest
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchWriteItemOutput:
    r"""A container for <code>BatchWriteItem</code> response"""
    
    responses: Optional[dict[str, shared_batchwriteresponse.BatchWriteResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Responses'), 'exclude': lambda f: f is None }})  
    unprocessed_items: Optional[dict[str, list[shared_writerequest.WriteRequest]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnprocessedItems'), 'exclude': lambda f: f is None }})  
    