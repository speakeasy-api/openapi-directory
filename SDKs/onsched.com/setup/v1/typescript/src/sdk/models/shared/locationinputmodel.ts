/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressInputModel } from "./addressinputmodel";
import { AppointmentRemindersInputModel } from "./appointmentremindersinputmodel";
import { BusinessDefaultsInputModel } from "./businessdefaultsinputmodel";
import { BusinessHoursInputModel } from "./businesshoursinputmodel";
import { OnlineSettingsInputModel } from "./onlinesettingsinputmodel";
import { Expose, Type } from "class-transformer";

export class LocationInputModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => AddressInputModel)
  address?: AddressInputModel;

  /**
   * Field is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adminEmail" })
  adminEmail?: string;

  /**
   * This field is no longer required and has been deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adminName" })
  adminName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "appointmentReminders" })
  @Type(() => AppointmentRemindersInputModel)
  appointmentReminders?: AppointmentRemindersInputModel;

  @SpeakeasyMetadata()
  @Expose({ name: "businessHours" })
  @Type(() => BusinessHoursInputModel)
  businessHours?: BusinessHoursInputModel;

  @SpeakeasyMetadata()
  @Expose({ name: "defaults" })
  @Type(() => BusinessDefaultsInputModel)
  defaults?: BusinessDefaultsInputModel;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fax" })
  fax?: string;

  /**
   * Use the friendlyId as an alternative to the assigned locationId
   *
   * @remarks
   * Choose something easy and meaningful. Must be unique within your company.
   * FriendlyId's are limited to maximum of 64 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendlyId" })
  friendlyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * GroupSize Limits the number of people that can come
   *
   * @remarks
   * along on a single appointment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "regionId" })
  regionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "settings" })
  @Type(() => OnlineSettingsInputModel)
  settings?: OnlineSettingsInputModel;

  /**
   * Field is required. It is in Iana format. e.g. America/New_York. Use moment.js in your client for ease of timezone detection and selection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezoneName" })
  timezoneName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "website" })
  website?: string;
}
