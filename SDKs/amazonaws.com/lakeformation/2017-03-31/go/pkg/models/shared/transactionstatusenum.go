// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TransactionStatusEnum string

const (
	TransactionStatusEnumActive           TransactionStatusEnum = "ACTIVE"
	TransactionStatusEnumCommitted        TransactionStatusEnum = "COMMITTED"
	TransactionStatusEnumAborted          TransactionStatusEnum = "ABORTED"
	TransactionStatusEnumCommitInProgress TransactionStatusEnum = "COMMIT_IN_PROGRESS"
)

func (e TransactionStatusEnum) ToPointer() *TransactionStatusEnum {
	return &e
}

func (e *TransactionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "COMMITTED":
		fallthrough
	case "ABORTED":
		fallthrough
	case "COMMIT_IN_PROGRESS":
		*e = TransactionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionStatusEnum: %v", v)
	}
}
