// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReadSetActivationJobStatusEnum string

const (
	ReadSetActivationJobStatusEnumSubmitted             ReadSetActivationJobStatusEnum = "SUBMITTED"
	ReadSetActivationJobStatusEnumInProgress            ReadSetActivationJobStatusEnum = "IN_PROGRESS"
	ReadSetActivationJobStatusEnumCancelling            ReadSetActivationJobStatusEnum = "CANCELLING"
	ReadSetActivationJobStatusEnumCancelled             ReadSetActivationJobStatusEnum = "CANCELLED"
	ReadSetActivationJobStatusEnumFailed                ReadSetActivationJobStatusEnum = "FAILED"
	ReadSetActivationJobStatusEnumCompleted             ReadSetActivationJobStatusEnum = "COMPLETED"
	ReadSetActivationJobStatusEnumCompletedWithFailures ReadSetActivationJobStatusEnum = "COMPLETED_WITH_FAILURES"
)

func (e *ReadSetActivationJobStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUBMITTED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "COMPLETED_WITH_FAILURES":
		*e = ReadSetActivationJobStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReadSetActivationJobStatusEnum: %s", s)
	}
}
