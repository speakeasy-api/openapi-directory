/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateHostedNumbersAuthorizationDocumentServerList = [
  "https://preview.twilio.com",
] as const;

export class CreateHostedNumbersAuthorizationDocumentSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateHostedNumbersAuthorizationDocumentCreateHostedNumbersAuthorizationDocumentRequest extends SpeakeasyBase {
  /**
   * A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.
   */
  @SpeakeasyMetadata({ data: "form, name=AddressSid" })
  addressSid: string;

  /**
   * Email recipients who will be informed when an Authorization Document has been sent and signed.
   */
  @SpeakeasyMetadata({ data: "form, name=CcEmails" })
  ccEmails?: string[];

  /**
   * The contact phone number of the person authorized to sign the Authorization Document.
   */
  @SpeakeasyMetadata({ data: "form, name=ContactPhoneNumber" })
  contactPhoneNumber: string;

  /**
   * The title of the person authorized to sign the Authorization Document for this phone number.
   */
  @SpeakeasyMetadata({ data: "form, name=ContactTitle" })
  contactTitle: string;

  /**
   * Email that this AuthorizationDocument will be sent to for signing.
   */
  @SpeakeasyMetadata({ data: "form, name=Email" })
  email: string;

  /**
   * A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform.
   */
  @SpeakeasyMetadata({ data: "form, name=HostedNumberOrderSids" })
  hostedNumberOrderSids: string[];
}

export class CreateHostedNumbersAuthorizationDocumentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  previewHostedNumbersAuthorizationDocument?: shared.PreviewHostedNumbersAuthorizationDocument;
}
