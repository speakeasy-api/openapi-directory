/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ScheduleEByCandidate {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("candidate_id")
    public String candidateId;

    public ScheduleEByCandidate withCandidateId(String candidateId) {
        this.candidateId = candidateId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("candidate_name")
    public String candidateName;

    public ScheduleEByCandidate withCandidateName(String candidateName) {
        this.candidateName = candidateName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_id")
    public String committeeId;

    public ScheduleEByCandidate withCommitteeId(String committeeId) {
        this.committeeId = committeeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_name")
    public String committeeName;

    public ScheduleEByCandidate withCommitteeName(String committeeName) {
        this.committeeName = committeeName;
        return this;
    }
    
    /**
     * Number of records making up the total.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Integer count;

    public ScheduleEByCandidate withCount(Integer count) {
        this.count = count;
        return this;
    }
    
    /**
     * Filter records to only those that were applicable to a given
     * two-year period.The cycle begins with an odd year and is named
     * for its ending, even year.
     * 
     */
    @JsonProperty("cycle")
    public Integer cycle;

    public ScheduleEByCandidate withCycle(Integer cycle) {
        this.cycle = cycle;
        return this;
    }
    
    /**
     * Explains if the money was spent in order to support or oppose a candidate or candidates. (Coded S or O for support or oppose.) This indicator applies to independent expenditures and communication costs.
     */
    @JsonProperty("support_oppose_indicator")
    public String supportOpposeIndicator;

    public ScheduleEByCandidate withSupportOpposeIndicator(String supportOpposeIndicator) {
        this.supportOpposeIndicator = supportOpposeIndicator;
        return this;
    }
    
    /**
     * Sum of transactions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;

    public ScheduleEByCandidate withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    public ScheduleEByCandidate(@JsonProperty("cycle") Integer cycle, @JsonProperty("support_oppose_indicator") String supportOpposeIndicator) {
        this.cycle = cycle;
        this.supportOpposeIndicator = supportOpposeIndicator;
  }
}
