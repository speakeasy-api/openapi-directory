/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETCreditMemoType - Container for custom fields of a Credit Memo object.
 * 
 */
public class GETCreditMemoType {
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public GETCreditMemoType withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the credit memo's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public GETCreditMemoType withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Origin of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Origin__NS")
    public String originNS;
    public GETCreditMemoType withOriginNS(String originNS) {
        this.originNS = originNS;
        return this;
    }
    
    /**
     * Date when the credit memo was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public GETCreditMemoType withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * Related transaction in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Transaction__NS")
    public String transactionNS;
    public GETCreditMemoType withTransactionNS(String transactionNS) {
        this.transactionNS = transactionNS;
        return this;
    }
    
    /**
     * The ID of the customer account associated with the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public GETCreditMemoType withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The total amount of the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public GETCreditMemoType withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The applied amount of the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedAmount")
    public Double appliedAmount;
    public GETCreditMemoType withAppliedAmount(Double appliedAmount) {
        this.appliedAmount = appliedAmount;
        return this;
    }
    
    /**
     * Whether the credit memo automatically applies to the invoice upon posting.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoApplyUponPosting")
    public Boolean autoApplyUponPosting;
    public GETCreditMemoType withAutoApplyUponPosting(Boolean autoApplyUponPosting) {
        this.autoApplyUponPosting = autoApplyUponPosting;
        return this;
    }
    
    /**
     * The ID of the Zuora user who cancelled the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancelledById")
    public String cancelledById;
    public GETCreditMemoType withCancelledById(String cancelledById) {
        this.cancelledById = cancelledById;
        return this;
    }
    
    /**
     * The date and time when the credit memo was cancelled, in `yyyy-mm-dd hh:mm:ss` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("cancelledOn")
    public OffsetDateTime cancelledOn;
    public GETCreditMemoType withCancelledOn(OffsetDateTime cancelledOn) {
        this.cancelledOn = cancelledOn;
        return this;
    }
    
    /**
     * Comments about the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public GETCreditMemoType withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The ID of the Zuora user who created the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdById")
    public String createdById;
    public GETCreditMemoType withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * The date and time when the credit memo was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;
    public GETCreditMemoType withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The date when the credit memo takes effect, in `yyyy-mm-dd` format. For example, 2017-05-20.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("creditMemoDate")
    public LocalDate creditMemoDate;
    public GETCreditMemoType withCreditMemoDate(LocalDate creditMemoDate) {
        this.creditMemoDate = creditMemoDate;
        return this;
    }
    
    /**
     * A currency defined in the web-based UI administrative settings.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public GETCreditMemoType withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Whether the credit memo is excluded from the rule of automatically applying credit memos to invoices.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludeFromAutoApplyRules")
    public Boolean excludeFromAutoApplyRules;
    public GETCreditMemoType withExcludeFromAutoApplyRules(Boolean excludeFromAutoApplyRules) {
        this.excludeFromAutoApplyRules = excludeFromAutoApplyRules;
        return this;
    }
    
    /**
     * The unique ID of the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETCreditMemoType withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the latest PDF file generated for the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latestPDFFileId")
    public String latestPDFFileId;
    public GETCreditMemoType withLatestPDFFileId(String latestPDFFileId) {
        this.latestPDFFileId = latestPDFFileId;
        return this;
    }
    
    /**
     * The unique identification number of the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;
    public GETCreditMemoType withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * The ID of the Zuora user who posted the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postedById")
    public String postedById;
    public GETCreditMemoType withPostedById(String postedById) {
        this.postedById = postedById;
        return this;
    }
    
    /**
     * The date and time when the credit memo was posted, in `yyyy-mm-dd hh:mm:ss` format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("postedOn")
    public OffsetDateTime postedOn;
    public GETCreditMemoType withPostedOn(OffsetDateTime postedOn) {
        this.postedOn = postedOn;
        return this;
    }
    
    /**
     * A code identifying the reason for the transaction. The value must be an existing reason code or empty.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasonCode")
    public String reasonCode;
    public GETCreditMemoType withReasonCode(String reasonCode) {
        this.reasonCode = reasonCode;
        return this;
    }
    
    /**
     * The ID of a referred invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("referredInvoiceId")
    public String referredInvoiceId;
    public GETCreditMemoType withReferredInvoiceId(String referredInvoiceId) {
        this.referredInvoiceId = referredInvoiceId;
        return this;
    }
    
    /**
     * The amount of the refund on the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refundAmount")
    public Double refundAmount;
    public GETCreditMemoType withRefundAmount(Double refundAmount) {
        this.refundAmount = refundAmount;
        return this;
    }
    
    /**
     * The source of the credit memo.
     * 
     * Possible values:
     * - `BillRun`: The credit memo is generated by a bill run.
     * - `API`: The credit memo is created by calling the [Invoice and collect](https://www.zuora.com/developer/api-reference/#operation/POST_TransactionInvoicePayment) operation.
     * - `ApiSubscribe`: The credit memo is created by calling the [Create subscription](https://www.zuora.com/developer/api-reference/#operation/POST_Subscription) and [Create account](https://www.zuora.com/developer/api-reference/#operation/POST_Account) operation.
     * - `ApiAmend`: The credit memo is created by calling the [Update subscription](https://www.zuora.com/developer/api-reference/#operation/PUT_Subscription) operation.
     * - `AdhocFromPrpc`: The credit memo is created from a product rate plan charge through the Zuora UI or by calling the [Create credit memo from charge](https://www.zuora.com/developer/api-reference/#operation/POST_CreditMemoFromPrpc) operation.
     * - `AdhocFromInvoice`: The credit memo is created from an invoice or created by reversing an invoice. You can create a credit memo from an invoice through the Zuora UI or by calling the [Create a credit memo from an invoice](https://www.zuora.com/developer/api-reference/#operation/POST_CreditMemoFromInvoice) operation. You can create a credit memo by reversing an invoice through the Zuora UI or by calling the [Reverse an invoice](https://www.zuora.com/developer/api-reference/#operation/PUT_ReverseInvoice) operation.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;
    public GETCreditMemoType withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * The ID of the credit memo source.
     * 
     * If a credit memo is generated from a bill run, the value is the number of the corresponding bill run. Otherwise, the value is `null`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceId")
    public String sourceId;
    public GETCreditMemoType withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    /**
     * The status of the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GETCreditMemoTypeStatusEnum status;
    public GETCreditMemoType withStatus(GETCreditMemoTypeStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public GETCreditMemoType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * The target date for the credit memo, in `yyyy-mm-dd` format. For example, 2017-07-20.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("targetDate")
    public LocalDate targetDate;
    public GETCreditMemoType withTargetDate(LocalDate targetDate) {
        this.targetDate = targetDate;
        return this;
    }
    
    /**
     * The amount of taxation.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxAmount")
    public Double taxAmount;
    public GETCreditMemoType withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * The message about the status of tax calculation related to the credit memo. If tax calculation fails in one credit memo, this field displays the reason for the failure.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxMessage")
    public String taxMessage;
    public GETCreditMemoType withTaxMessage(String taxMessage) {
        this.taxMessage = taxMessage;
        return this;
    }
    
    /**
     * The status of tax calculation related to the credit memo.
     * 
     * **Note**: This field is only applicable to tax calculation by third-party tax engines.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxStatus")
    public GETCreditMemoTypeTaxStatusEnum taxStatus;
    public GETCreditMemoType withTaxStatus(GETCreditMemoTypeTaxStatusEnum taxStatus) {
        this.taxStatus = taxStatus;
        return this;
    }
    
    /**
     * The total amount of taxes or VAT for which the customer has an exemption.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalTaxExemptAmount")
    public Double totalTaxExemptAmount;
    public GETCreditMemoType withTotalTaxExemptAmount(Double totalTaxExemptAmount) {
        this.totalTaxExemptAmount = totalTaxExemptAmount;
        return this;
    }
    
    /**
     * Whether the credit memo was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferredToAccounting")
    public GETCreditMemoTypeTransferredToAccountingEnum transferredToAccounting;
    public GETCreditMemoType withTransferredToAccounting(GETCreditMemoTypeTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
    /**
     * The unapplied amount of the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unappliedAmount")
    public Double unappliedAmount;
    public GETCreditMemoType withUnappliedAmount(Double unappliedAmount) {
        this.unappliedAmount = unappliedAmount;
        return this;
    }
    
    /**
     * The ID of the Zuora user who last updated the credit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedById")
    public String updatedById;
    public GETCreditMemoType withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * The date and time when the credit memo was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:36:10.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedDate")
    public OffsetDateTime updatedDate;
    public GETCreditMemoType withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
