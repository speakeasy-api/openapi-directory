"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createcustomlineitemoutput as shared_createcustomlineitemoutput
from ..shared import customlineitemflatchargedetails as shared_customlineitemflatchargedetails
from ..shared import customlineitempercentagechargedetails as shared_customlineitempercentagechargedetails
from ..shared import customlineitemtype_enum as shared_customlineitemtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateCustomLineItemRequestBodyBillingPeriodRange:
    r"""The billing period range in which the custom line item request will be applied."""
    
    exclusive_end_billing_period: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExclusiveEndBillingPeriod'), 'exclude': lambda f: f is None }})  
    inclusive_start_billing_period: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InclusiveStartBillingPeriod'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateCustomLineItemRequestBodyChargeDetails:
    r"""The charge details of a custom line item. It should contain only one of <code>Flat</code> or <code>Percentage</code>."""
    
    flat: Optional[shared_customlineitemflatchargedetails.CustomLineItemFlatChargeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Flat'), 'exclude': lambda f: f is None }})  
    percentage: Optional[shared_customlineitempercentagechargedetails.CustomLineItemPercentageChargeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Percentage'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_customlineitemtype_enum.CustomLineItemTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateCustomLineItemRequestBody:
    
    billing_group_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillingGroupArn') }})
    r"""The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to."""  
    charge_details: CreateCustomLineItemRequestBodyChargeDetails = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChargeDetails') }})
    r"""The charge details of a custom line item. It should contain only one of <code>Flat</code> or <code>Percentage</code>."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description') }})
    r"""The description of the custom line item. This is shown on the Bills page in association with the charge value."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})
    r"""The name of the custom line item."""  
    billing_period_range: Optional[CreateCustomLineItemRequestBodyBillingPeriodRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillingPeriodRange'), 'exclude': lambda f: f is None }})
    r"""The billing period range in which the custom line item request will be applied."""  
    tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})
    r"""A map that contains tag keys and tag values that are attached to a custom line item."""  
    

@dataclasses.dataclass
class CreateCustomLineItemRequest:
    
    request_body: CreateCustomLineItemRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    x_amzn_client_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amzn-Client-Token', 'style': 'simple', 'explode': False }})
    r"""The token that is needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update."""  
    

@dataclasses.dataclass
class CreateCustomLineItemResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    access_denied_exception: Optional[Any] = dataclasses.field(default=None)
    r"""AccessDeniedException"""  
    conflict_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ConflictException"""  
    create_custom_line_item_output: Optional[shared_createcustomlineitemoutput.CreateCustomLineItemOutput] = dataclasses.field(default=None)
    r"""Success"""  
    internal_server_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InternalServerException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    service_limit_exceeded_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceLimitExceededException"""  
    throttling_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ThrottlingException"""  
    validation_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ValidationException"""  
    