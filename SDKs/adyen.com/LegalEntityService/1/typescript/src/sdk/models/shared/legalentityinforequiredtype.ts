/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IndividualInput } from "./individual";
import { LegalEntityAssociationInput } from "./legalentityassociation";
import { OrganizationInput } from "./organization";
import { Expose, Type } from "class-transformer";

/**
 * The type of legal entity.
 *
 * @remarks
 *
 *  Possible values: **individual** or **organization**
 */
export enum LegalEntityInfoRequiredTypeTypeEnum {
  Individual = "individual",
  Organization = "organization",
}

export class LegalEntityInfoRequiredTypeInput extends SpeakeasyBase {
  /**
   * List of legal entities associated with the current legal entity.
   *
   * @remarks
   * For example, ultimate beneficial owners associated with an organization through ownership or control, or as signatories.
   */
  @SpeakeasyMetadata({ elemType: LegalEntityAssociationInput })
  @Expose({ name: "entityAssociations" })
  @Type(() => LegalEntityAssociationInput)
  entityAssociations?: LegalEntityAssociationInput[];

  @SpeakeasyMetadata()
  @Expose({ name: "individual" })
  @Type(() => IndividualInput)
  individual?: IndividualInput;

  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  @Type(() => OrganizationInput)
  organization?: OrganizationInput;

  /**
   * Your reference for the legal entity, maximum 150 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * The type of legal entity.
   *
   * @remarks
   *
   *  Possible values: **individual** or **organization**
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: LegalEntityInfoRequiredTypeTypeEnum;
}
