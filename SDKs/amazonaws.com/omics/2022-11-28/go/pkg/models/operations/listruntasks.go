// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListRunTasksStatusEnum - Filter the list by status.
type ListRunTasksStatusEnum string

const (
	ListRunTasksStatusEnumPending   ListRunTasksStatusEnum = "PENDING"
	ListRunTasksStatusEnumStarting  ListRunTasksStatusEnum = "STARTING"
	ListRunTasksStatusEnumRunning   ListRunTasksStatusEnum = "RUNNING"
	ListRunTasksStatusEnumStopping  ListRunTasksStatusEnum = "STOPPING"
	ListRunTasksStatusEnumCompleted ListRunTasksStatusEnum = "COMPLETED"
	ListRunTasksStatusEnumCancelled ListRunTasksStatusEnum = "CANCELLED"
	ListRunTasksStatusEnumFailed    ListRunTasksStatusEnum = "FAILED"
)

func (e *ListRunTasksStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "STARTING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		*e = ListRunTasksStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRunTasksStatusEnum: %s", s)
	}
}

type ListRunTasksRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The run's ID.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The maximum number of run tasks to return in one page of results.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Specify the pagination token from a previous request to retrieve the next page of results.
	StartingToken *string `queryParam:"style=form,explode=true,name=startingToken"`
	// Filter the list by status.
	Status *ListRunTasksStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListRunTasksResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListRunTasksResponse *shared.ListRunTasksResponse
	// RequestTimeoutException
	RequestTimeoutException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
