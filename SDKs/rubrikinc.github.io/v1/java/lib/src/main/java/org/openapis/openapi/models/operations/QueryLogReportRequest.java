/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryLogReportRequest {
    /**
     * Filter by the database type.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=database_type")
    public String databaseType;

    public QueryLogReportRequest withDatabaseType(String databaseType) {
        this.databaseType = databaseType;
        return this;
    }
    
    /**
     * Filter by effective SLA domain.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=effective_sla_domain_id")
    public String effectiveSlaDomainId;

    public QueryLogReportRequest withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QueryLogReportRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Filter by the database location.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=location")
    public String location;

    public QueryLogReportRequest withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Filter by the database log backup delay in seconds, greater than this value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=log_backup_delay")
    public Integer logBackupDelay;

    public QueryLogReportRequest withLogBackupDelay(Integer logBackupDelay) {
        this.logBackupDelay = logBackupDelay;
        return this;
    }
    
    /**
     * Filter by the database name substring.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public QueryLogReportRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Integer specifying the number of initial matches to ignore.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QueryLogReportRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Specifies the attribute to use while sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryLogReportSortByEnum sortBy;

    public QueryLogReportRequest withSortBy(QueryLogReportSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Sort order, either ascending or descending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryLogReportSortOrderEnum sortOrder;

    public QueryLogReportRequest withSortOrder(QueryLogReportSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QueryLogReportRequest(){}
}
