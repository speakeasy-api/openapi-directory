// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
)

type Filings struct {
	// Additional banks or depositories in which the committee deposits funds, holds accounts, rents safety deposit boxes or maintains funds.
	//
	AdditionalBankNames []string `json:"additional_bank_names,omitempty"`
	// The first value in the chain is the original filing.  The ordering in the chain reflects the order the
	// amendments were filed up to the amendment being inspected.
	//
	AmendmentChain []float64 `json:"amendment_chain,omitempty"`
	// The first value in the chain is the original filing.  The ordering in the chain reflects the order the
	// amendments were filed up to the amendment being inspected.
	//
	AmendmentIndicator *string `json:"amendment_indicator,omitempty"`
	// Amendment version
	//
	AmendmentVersion *int `json:"amendment_version,omitempty"`
	// City of bank or depository as reported on the Form 1
	//
	BankDepositoryCity *string `json:"bank_depository_city,omitempty"`
	// Primary bank or depository in which the committee deposits funds, holds accounts, rents safety deposit boxes or maintains funds.
	//
	BankDepositoryName *string `json:"bank_depository_name,omitempty"`
	// State of bank or depository as reported on the Form 1
	//
	BankDepositoryState *string `json:"bank_depository_state,omitempty"`
	// Street of bank or depository as reported on their Form 1.
	//
	BankDepositoryStreet1 *string `json:"bank_depository_street_1,omitempty"`
	// Second line of the street of bank or depository as reported on the Form 1
	//
	BankDepositoryStreet2 *string `json:"bank_depository_street_2,omitempty"`
	// Zip code of bank or depository as reported on the Form 1
	//
	BankDepositoryZip    *string `json:"bank_depository_zip,omitempty"`
	BeginningImageNumber *string `json:"beginning_image_number,omitempty"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office.
	//
	CandidateID *string `json:"candidate_id,omitempty"`
	// Name of candidate running for office
	CandidateName *string `json:"candidate_name,omitempty"`
	// Balance for the committee at the start of the two-year period
	CashOnHandBeginningPeriod *float64 `json:"cash_on_hand_beginning_period,omitempty"`
	// Ending cash balance on the most recent filing
	CashOnHandEndPeriod *float64 `json:"cash_on_hand_end_period,omitempty"`
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	CommitteeID *string `json:"committee_id,omitempty"`
	// The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
	CommitteeName *string `json:"committee_name,omitempty"`
	// The one-letter type code of the organization:
	//         - C communication cost
	//         - D delegate
	//         - E electioneering communication
	//         - H House
	//         - I independent expenditure filer (not a committee)
	//         - N PAC - nonqualified
	//         - O independent expenditure-only (super PACs)
	//         - P presidential
	//         - Q PAC - qualified
	//         - S Senate
	//         - U single candidate independent expenditure
	//         - V PAC with non-contribution account, nonqualified
	//         - W PAC with non-contribution account, qualified
	//         - X party, nonqualified
	//         - Y party, qualified
	//         - Z national party non-federal account
	//
	CommitteeType *string `json:"committee_type,omitempty"`
	// Ending date of the reporting period
	CoverageEndDate *types.Date `json:"coverage_end_date,omitempty"`
	// Beginning date of the reporting period
	CoverageStartDate *types.Date `json:"coverage_start_date,omitempty"`
	CsvURL            *string     `json:"csv_url,omitempty"`
	// Filter records to only those that were applicable to a given
	// two-year period.The cycle begins with an odd year and is named
	// for its ending, even year.
	//
	Cycle *int `json:"cycle,omitempty"`
	// Debts owed by the committee
	DebtsOwedByCommittee *float64 `json:"debts_owed_by_committee,omitempty"`
	// Debts owed to the committee
	DebtsOwedToCommittee *float64 `json:"debts_owed_to_committee,omitempty"`
	DocumentDescription  *string  `json:"document_description,omitempty"`
	// The type of document for documents other than reports:
	//     - 2 24 Hour Contribution Notice
	//     - 4 48 Hour Contribution Notice
	//     - A Debt Settlement Statement
	//     - B Acknowledgment of Receipt of Debt Settlement Statement
	//     - C RFAI: Debt Settlement First Notice
	//     - D Commission Debt Settlement Review
	//     - E Commission Response TO Debt Settlement Request
	//     - F Administrative Termination
	//     - G Debt Settlement Plan Amendment
	//     - H Disavowal Notice
	//     - I Disavowal Response
	//     - J Conduit Report
	//     - K Termination Approval
	//     - L Repeat Non-Filer Notice
	//     - M Filing Frequency Change Notice
	//     - N Paper Amendment to Electronic Report
	//     - O Acknowledgment of Filing Frequency Change
	//     - S RFAI: Debt Settlement Second
	//     - T Miscellaneous Report TO FEC
	//     - V Repeat Violation Notice (441A OR 441B)
	//     - P Notice of Paper Filing
	//     - R F3L Filing Frequency Change Notice
	//     - Q Acknowledgment of F3L Filing Frequency Change
	//     - U Unregistered Committee Notice
	//
	DocumentType *string `json:"document_type,omitempty"`
	// The type of document for documents other than reports:
	//     - 2 24 Hour Contribution Notice
	//     - 4 48 Hour Contribution Notice
	//     - A Debt Settlement Statement
	//     - B Acknowledgment of Receipt of Debt Settlement Statement
	//     - C RFAI: Debt Settlement First Notice
	//     - D Commission Debt Settlement Review
	//     - E Commission Response TO Debt Settlement Request
	//     - F Administrative Termination
	//     - G Debt Settlement Plan Amendment
	//     - H Disavowal Notice
	//     - I Disavowal Response
	//     - J Conduit Report
	//     - K Termination Approval
	//     - L Repeat Non-Filer Notice
	//     - M Filing Frequency Change Notice
	//     - N Paper Amendment to Electronic Report
	//     - O Acknowledgment of Filing Frequency Change
	//     - S RFAI: Debt Settlement Second
	//     - T Miscellaneous Report TO FEC
	//     - V Repeat Violation Notice (441A OR 441B)
	//     - P Notice of Paper Filing
	//     - R F3L Filing Frequency Change Notice
	//     - Q Acknowledgment of F3L Filing Frequency Change
	//     - U Unregistered Committee Notice
	//
	DocumentTypeFull *string `json:"document_type_full,omitempty"`
	// Year of election
	ElectionYear      *int    `json:"election_year,omitempty"`
	EndingImageNumber *string `json:"ending_image_number,omitempty"`
	FecFileID         *string `json:"fec_file_id,omitempty"`
	FecURL            *string `json:"fec_url,omitempty"`
	// Filing ID number
	FileNumber *int `json:"file_number,omitempty"`
	// The forms filed are categorized based on the nature of the filing:
	//     - REPORT F3, F3X, F3P, F3L, F4, F5, F7, F13
	//     - NOTICE F5, F24, F6, F9, F10, F11
	//     - STATEMENT F1, F2
	//     - OTHER F1M, F8, F99, F12, FRQ
	//
	FormCategory *string `json:"form_category,omitempty"`
	// The form where the underlying data comes from, for example, Form 1 would appear as F1:
	//     - F1   Statement of Organization
	//     - F1M  Notification of Multicandidate Status
	//     - F2   Statement of Candidacy
	//     - F3   Report of Receipts and Disbursements for an Authorized Committee
	//     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President
	//     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs
	//     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee
	//     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention
	//     - F5   Report of Independent Expenditures Made and Contributions Received
	//     - F6   48 Hour Notice of Contributions/Loans Received
	//     - F7   Report of Communication Costs by Corporations and Membership Organizations
	//     - F8   Debt Settlement Plan
	//     - F9   24 Hour Notice of Disbursements for Electioneering Communications
	//     - F13  Report of Donations Accepted for Inaugural Committee
	//     - F99  Miscellaneous Text
	//     - FRQ  Request for Additional Information
	//
	FormType *string `json:"form_type,omitempty"`
	// House personal funds
	HousePersonalFunds *float64 `json:"house_personal_funds,omitempty"`
	// HTML link to the filing.
	//
	HTMLURL *string `json:"html_url,omitempty"`
	// False indicates that a report is the most recent. True indicates that the report has been superseded by an amendment.
	//
	IsAmended *bool `json:"is_amended,omitempty"`
	// The method used to file with the FEC, either electronic or on paper.
	MeansFiled *string `json:"means_filed,omitempty"`
	// Report is either new or is the most-recently filed amendment
	//
	MostRecent           *bool `json:"most_recent,omitempty"`
	MostRecentFileNumber *int  `json:"most_recent_file_number,omitempty"`
	// Net donations
	NetDonations *float64 `json:"net_donations,omitempty"`
	// Federal office candidate runs for: H, S or P
	Office *string `json:"office,omitempty"`
	// Opposition personal funds
	OppositionPersonalFunds *float64 `json:"opposition_personal_funds,omitempty"`
	// Number of pages in the document
	//
	Pages *int `json:"pages,omitempty"`
	// Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
	Party *string `json:"party,omitempty"`
	// pdf link to the filing
	//
	PdfURL *string `json:"pdf_url,omitempty"`
	// Previous filing ID number
	//
	PreviousFileNumber *int `json:"previous_file_number,omitempty"`
	// Primary general indicator
	//
	PrimaryGeneralIndicator *string `json:"primary_general_indicator,omitempty"`
	// Date the FEC received the electronic or paper record
	ReceiptDate *types.Date `json:"receipt_date,omitempty"`
	// Name of report where the underlying data comes from:
	//     - 10D Pre-Election
	//     - 10G Pre-General
	//     - 10P Pre-Primary
	//     - 10R Pre-Run-Off
	//     - 10S Pre-Special
	//     - 12C Pre-Convention
	//     - 12G Pre-General
	//     - 12P Pre-Primary
	//     - 12R Pre-Run-Off
	//     - 12S Pre-Special
	//     - 30D Post-Election
	//     - 30G Post-General
	//     - 30P Post-Primary
	//     - 30R Post-Run-Off
	//     - 30S Post-Special
	//     - 60D Post-Convention
	//     - M1  January Monthly
	//     - M10 October Monthly
	//     - M11 November Monthly
	//     - M12 December Monthly
	//     - M2  February Monthly
	//     - M3  March Monthly
	//     - M4  April Monthly
	//     - M5  May Monthly
	//     - M6  June Monthly
	//     - M7  July Monthly
	//     - M8  August Monthly
	//     - M9  September Monthly
	//     - MY  Mid-Year Report
	//     - Q1  April Quarterly
	//     - Q2  July Quarterly
	//     - Q3  October Quarterly
	//     - TER Termination Report
	//     - YE  Year-End
	//     - ADJ COMP ADJUST AMEND
	//     - CA  COMPREHENSIVE AMEND
	//     - 90S Post Inaugural Supplement
	//     - 90D Post Inaugural
	//     - 48  48 Hour Notification
	//     - 24  24 Hour Notification
	//     - M7S July Monthly/Semi-Annual
	//     - MSA Monthly Semi-Annual (MY)
	//     - MYS Monthly Year End/Semi-Annual
	//     - Q2S July Quarterly/Semi-Annual
	//     - QSA Quarterly Semi-Annual (MY)
	//     - QYS Quarterly Year End/Semi-Annual
	//     - QYE Quarterly Semi-Annual (YE)
	//     - QMS Quarterly Mid-Year/ Semi-Annual
	//     - MSY Monthly Semi-Annual (YE)
	//
	ReportType     *string `json:"report_type,omitempty"`
	ReportTypeFull *string `json:"report_type_full,omitempty"`
	// Forms with coverage date -
	//     year from the coverage ending date.
	// Forms without coverage date -
	//     year from the receipt date.
	//
	ReportYear *int `json:"report_year,omitempty"`
	// Requests for additional information (RFAIs) sent to filers. The request type is based on the type of document filed:
	//     - 1 Statement of Organization
	//     - 2 Report of Receipts and Expenditures (Form 3 and 3X)
	//     - 3 Second Notice - Reports
	//     - 4 Request for Additional Information
	//     - 5 Informational - Reports
	//     - 6 Second Notice - Statement of Organization
	//     - 7 Failure to File
	//     - 8 From Public Disclosure
	//     - 9 From Multi Candidate Status
	//
	RequestType *string `json:"request_type,omitempty"`
	// Senate personal funds
	SenatePersonalFunds *float64 `json:"senate_personal_funds,omitempty"`
	// US state or territory where a candidate runs for office
	State *string `json:"state,omitempty"`
	SubID *string `json:"sub_id,omitempty"`
	// Total communications cost
	TotalCommunicationCost *float64 `json:"total_communication_cost,omitempty"`
	// Total disbursements
	TotalDisbursements *float64 `json:"total_disbursements,omitempty"`
	// Total independent expenditures
	TotalIndependentExpenditures *float64 `json:"total_independent_expenditures,omitempty"`
	// Total individual contributions
	TotalIndividualContributions *float64 `json:"total_individual_contributions,omitempty"`
	// Total receipts
	TotalReceipts *float64 `json:"total_receipts,omitempty"`
	// Name of the Committee's treasurer. If multiple treasurers for the committee, the most recent treasurer will be shown.
	TreasurerName *string `json:"treasurer_name,omitempty"`
	// Date the record was updated
	UpdateDate *types.Date `json:"update_date,omitempty"`
}
