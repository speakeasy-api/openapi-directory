"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import exportapiresponse as shared_exportapiresponse
from typing import Any, Optional


@dataclasses.dataclass
class ExportAPIRequest:
    
    api_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'apiId', 'style': 'simple', 'explode': False }})
    r"""The API identifier."""  
    output_type: str = dataclasses.field(metadata={'query_param': { 'field_name': 'outputType', 'style': 'form', 'explode': True }})
    r"""The output type of the exported definition file. Valid values are JSON and YAML."""  
    specification: str = dataclasses.field(metadata={'path_param': { 'field_name': 'specification', 'style': 'simple', 'explode': False }})
    r"""The version of the API specification to use. OAS30, for OpenAPI 3.0, is the only supported value."""  
    export_version: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'exportVersion', 'style': 'form', 'explode': True }})
    r"""The version of the API Gateway export algorithm. API Gateway uses the latest version by default. Currently, the only supported version is 1.0."""  
    include_extensions: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includeExtensions', 'style': 'form', 'explode': True }})
    r"""Specifies whether to include <a href=\\"https://docs.aws.amazon.com//apigateway/latest/developerguide/api-gateway-swagger-extensions.html\\">API Gateway extensions</a> in the exported API definition. API Gateway extensions are included by default."""  
    stage_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stageName', 'style': 'form', 'explode': True }})
    r"""The name of the API stage to export. If you don't specify this property, a representation of the latest API configuration is exported."""  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class ExportAPIResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    bad_request_exception: Optional[Any] = dataclasses.field(default=None)
    r"""BadRequestException"""  
    export_api_response: Optional[shared_exportapiresponse.ExportAPIResponse] = dataclasses.field(default=None)
    r"""Success"""  
    not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""NotFoundException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    too_many_requests_exception: Optional[Any] = dataclasses.field(default=None)
    r"""TooManyRequestsException"""  
    