// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryVcdClusterV1SortByEnum - Attribute to sort the results on.
type QueryVcdClusterV1SortByEnum string

const (
	QueryVcdClusterV1SortByEnumName   QueryVcdClusterV1SortByEnum = "Name"
	QueryVcdClusterV1SortByEnumStatus QueryVcdClusterV1SortByEnum = "Status"
)

func (e QueryVcdClusterV1SortByEnum) ToPointer() *QueryVcdClusterV1SortByEnum {
	return &e
}

func (e *QueryVcdClusterV1SortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Name":
		fallthrough
	case "Status":
		*e = QueryVcdClusterV1SortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVcdClusterV1SortByEnum: %v", v)
	}
}

// QueryVcdClusterV1SortOrderEnum - Order for sorting the results, either ascending or descending.
type QueryVcdClusterV1SortOrderEnum string

const (
	QueryVcdClusterV1SortOrderEnumAsc  QueryVcdClusterV1SortOrderEnum = "asc"
	QueryVcdClusterV1SortOrderEnumDesc QueryVcdClusterV1SortOrderEnum = "desc"
)

func (e QueryVcdClusterV1SortOrderEnum) ToPointer() *QueryVcdClusterV1SortOrderEnum {
	return &e
}

func (e *QueryVcdClusterV1SortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryVcdClusterV1SortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVcdClusterV1SortOrderEnum: %v", v)
	}
}

// QueryVcdClusterV1StatusEnum - Filter the results using the status value of the vCD Cluster objects.
type QueryVcdClusterV1StatusEnum string

const (
	QueryVcdClusterV1StatusEnumDisconnected    QueryVcdClusterV1StatusEnum = "Disconnected"
	QueryVcdClusterV1StatusEnumRefreshing      QueryVcdClusterV1StatusEnum = "Refreshing"
	QueryVcdClusterV1StatusEnumConnected       QueryVcdClusterV1StatusEnum = "Connected"
	QueryVcdClusterV1StatusEnumBadlyConfigured QueryVcdClusterV1StatusEnum = "BadlyConfigured"
	QueryVcdClusterV1StatusEnumDeleting        QueryVcdClusterV1StatusEnum = "Deleting"
	QueryVcdClusterV1StatusEnumRemote          QueryVcdClusterV1StatusEnum = "Remote"
)

func (e QueryVcdClusterV1StatusEnum) ToPointer() *QueryVcdClusterV1StatusEnum {
	return &e
}

func (e *QueryVcdClusterV1StatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Disconnected":
		fallthrough
	case "Refreshing":
		fallthrough
	case "Connected":
		fallthrough
	case "BadlyConfigured":
		fallthrough
	case "Deleting":
		fallthrough
	case "Remote":
		*e = QueryVcdClusterV1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryVcdClusterV1StatusEnum: %v", v)
	}
}

type QueryVcdClusterV1Request struct {
	// Search for a vCD Cluster object by name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Attribute to sort the results on.
	SortBy *QueryVcdClusterV1SortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Order for sorting the results, either ascending or descending.
	SortOrder *QueryVcdClusterV1SortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
	// Filter the results using the status value of the vCD Cluster objects.
	Status *QueryVcdClusterV1StatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type QueryVcdClusterV1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Summary information for vCD clusters.
	VcdClusterSummaryListResponse *shared.VcdClusterSummaryListResponse
}
