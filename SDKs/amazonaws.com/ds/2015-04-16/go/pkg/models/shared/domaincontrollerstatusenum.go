// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DomainControllerStatusEnum string

const (
	DomainControllerStatusEnumCreating  DomainControllerStatusEnum = "Creating"
	DomainControllerStatusEnumActive    DomainControllerStatusEnum = "Active"
	DomainControllerStatusEnumImpaired  DomainControllerStatusEnum = "Impaired"
	DomainControllerStatusEnumRestoring DomainControllerStatusEnum = "Restoring"
	DomainControllerStatusEnumDeleting  DomainControllerStatusEnum = "Deleting"
	DomainControllerStatusEnumDeleted   DomainControllerStatusEnum = "Deleted"
	DomainControllerStatusEnumFailed    DomainControllerStatusEnum = "Failed"
)

func (e DomainControllerStatusEnum) ToPointer() *DomainControllerStatusEnum {
	return &e
}

func (e *DomainControllerStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Creating":
		fallthrough
	case "Active":
		fallthrough
	case "Impaired":
		fallthrough
	case "Restoring":
		fallthrough
	case "Deleting":
		fallthrough
	case "Deleted":
		fallthrough
	case "Failed":
		*e = DomainControllerStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DomainControllerStatusEnum: %v", v)
	}
}
