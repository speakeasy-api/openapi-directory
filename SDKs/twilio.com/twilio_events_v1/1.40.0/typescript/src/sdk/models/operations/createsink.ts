/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateSinkServerList = ["https://events.twilio.com"] as const;

export class CreateSinkSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateSinkCreateSinkRequest extends SpeakeasyBase {
  /**
   * A human readable description for the Sink **This value should not contain PII.**
   */
  @SpeakeasyMetadata({ data: "form, name=Description" })
  description: string;

  /**
   * The information required for Twilio to connect to the provided Sink encoded as JSON.
   */
  @SpeakeasyMetadata({ data: "form, name=SinkConfiguration" })
  sinkConfiguration: any;

  @SpeakeasyMetadata({ data: "form, name=SinkType" })
  sinkType: shared.SinkEnumSinkTypeEnum;
}

export class CreateSinkResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  eventsV1Sink?: shared.EventsV1Sink;
}
