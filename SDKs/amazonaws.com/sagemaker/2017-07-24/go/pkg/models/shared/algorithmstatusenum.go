// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AlgorithmStatusEnum string

const (
	AlgorithmStatusEnumPending    AlgorithmStatusEnum = "Pending"
	AlgorithmStatusEnumInProgress AlgorithmStatusEnum = "InProgress"
	AlgorithmStatusEnumCompleted  AlgorithmStatusEnum = "Completed"
	AlgorithmStatusEnumFailed     AlgorithmStatusEnum = "Failed"
	AlgorithmStatusEnumDeleting   AlgorithmStatusEnum = "Deleting"
)

func (e *AlgorithmStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "InProgress":
		fallthrough
	case "Completed":
		fallthrough
	case "Failed":
		fallthrough
	case "Deleting":
		*e = AlgorithmStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlgorithmStatusEnum: %s", s)
	}
}
