/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class SearchdocumentsQueryParams {
    /**
     * Fields that will be returned by document
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_fields")
    public String fields;
    public SearchdocumentsQueryParams withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * String to search
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_keyword")
    public String keyword;
    public SearchdocumentsQueryParams withKeyword(String keyword) {
        this.keyword = keyword;
        return this;
    }
    
    /**
     * Enter with the name of the schema to filter documents by compatibility of the schema.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_schema")
    public String schema;
    public SearchdocumentsQueryParams withSchema(String schema) {
        this.schema = schema;
        return this;
    }
    
    /**
     * Use ASC value to sort ascending or DESC value to sort descending. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_sort")
    public String sort;
    public SearchdocumentsQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Specification of filters. As seen below
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=_where")
    public String where;
    public SearchdocumentsQueryParams withWhere(String where) {
        this.where = where;
        return this;
    }
    
}
