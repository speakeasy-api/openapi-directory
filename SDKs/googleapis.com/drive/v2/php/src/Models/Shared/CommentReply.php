<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CommentReply - A comment on a file in Google Drive.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CommentReply
{
    /**
     * Information about a Drive user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\User $author
     */
	#[\JMS\Serializer\Annotation\SerializedName('author')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\User')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?User $author = null;
    
    /**
     * The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).
     * 
     * @var ?string $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $content = null;
    
    /**
     * The date when this reply was first created.
     * 
     * @var ?\DateTime $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdDate = null;
    
    /**
     * Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * HTML formatted content for this reply.
     * 
     * @var ?string $htmlContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlContent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlContent = null;
    
    /**
     * This is always drive#commentReply.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The date when this reply was last modified.
     * 
     * @var ?\DateTime $modifiedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $modifiedDate = null;
    
    /**
     * The ID of the reply.
     * 
     * @var ?string $replyId
     */
	#[\JMS\Serializer\Annotation\SerializedName('replyId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replyId = null;
    
    /**
     * The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  
     * 
     * - "resolve" - To resolve a comment. 
     * - "reopen" - To reopen (un-resolve) a comment.
     * 
     * @var ?string $verb
     */
	#[\JMS\Serializer\Annotation\SerializedName('verb')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $verb = null;
    
	public function __construct()
	{
		$this->author = null;
		$this->content = null;
		$this->createdDate = null;
		$this->deleted = null;
		$this->htmlContent = null;
		$this->kind = null;
		$this->modifiedDate = null;
		$this->replyId = null;
		$this->verb = null;
	}
}
