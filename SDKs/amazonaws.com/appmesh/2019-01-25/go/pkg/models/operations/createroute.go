// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateRoutePathParams struct {
	// The name of the service mesh to create the route in.
	MeshName string `pathParam:"style=simple,explode=false,name=meshName"`
	// The name of the virtual router in which to create the route. If the virtual router is in a shared mesh, then you must be the owner of the virtual router resource.
	VirtualRouterName string `pathParam:"style=simple,explode=false,name=virtualRouterName"`
}

type CreateRouteQueryParams struct {
	// The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.
	MeshOwner *string `queryParam:"style=form,explode=true,name=meshOwner"`
}

type CreateRouteHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateRouteRequestBodySpec - An object that represents a route specification. Specify one route type.
type CreateRouteRequestBodySpec struct {
	GrpcRoute  *shared.GrpcRoute `json:"grpcRoute,omitempty"`
	Http2Route *shared.HTTPRoute `json:"http2Route,omitempty"`
	HTTPRoute  *shared.HTTPRoute `json:"httpRoute,omitempty"`
	Priority   *int64            `json:"priority,omitempty"`
	TCPRoute   *shared.TCPRoute  `json:"tcpRoute,omitempty"`
}

type CreateRouteRequestBody struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.
	ClientToken *string `json:"clientToken,omitempty"`
	// The name to use for the route.
	RouteName string `json:"routeName"`
	// An object that represents a route specification. Specify one route type.
	Spec CreateRouteRequestBodySpec `json:"spec"`
	// Optional metadata that you can apply to the route to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
	Tags []shared.TagRef `json:"tags,omitempty"`
}

type CreateRouteRequest struct {
	PathParams  CreateRoutePathParams
	QueryParams CreateRouteQueryParams
	Headers     CreateRouteHeaders
	Request     CreateRouteRequestBody `request:"mediaType=application/json"`
}

type CreateRouteResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateRouteOutput *shared.CreateRouteOutput
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
