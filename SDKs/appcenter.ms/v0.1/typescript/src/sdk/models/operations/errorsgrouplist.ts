/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ErrorsGroupListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * Type of error (handled vs unhandled), including All
 */
export enum ErrorsGroupListErrorTypeEnum {
  All = "all",
  UnhandledError = "unhandledError",
  HandledError = "handledError",
}

export class ErrorsGroupListRequest extends SpeakeasyBase {
  /**
   * controls the sorting order and sorting based on which column
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=$orderby",
  })
  dollarOrderby?: string;

  /**
   * The maximum number of results to return. (0 will fetch all results till the max number.)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=$top" })
  dollarTop?: number;

  /**
   * app build
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=app_build",
  })
  appBuild?: string;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * Last date time in data in ISO 8601 date time format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  end?: Date;

  /**
   * Type of error (handled vs unhandled), including All
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=errorType",
  })
  errorType?: ErrorsGroupListErrorTypeEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=groupState",
  })
  groupState?: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * Start date time in data in ISO 8601 date time format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=start;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  start: Date;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=version",
  })
  version?: string;
}

export enum ErrorsGroupListDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class ErrorsGroupListDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ErrorsGroupListDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class ErrorsGroupListDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorsGroupListDefaultApplicationJSONError)
  error: ErrorsGroupListDefaultApplicationJSONError;
}

/**
 * programming language of the frame
 */
export enum ErrorsGroupList200ApplicationJSONErrorGroupsReasonFramesLanguageEnum {
  JavaScript = "JavaScript",
  CSharp = "CSharp",
  ObjectiveC = "Objective-C",
  ObjectiveCpp = "Objective-Cpp",
  Cpp = "Cpp",
  C = "C",
  Swift = "Swift",
  Java = "Java",
  Unknown = "Unknown",
}

export class ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames extends SpeakeasyBase {
  /**
   * this line isn't from any framework
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appCode" })
  appCode?: boolean;

  /**
   * is a class method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classMethod" })
  classMethod?: boolean;

  /**
   * name of the class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "className" })
  className?: string;

  /**
   * Formatted frame string
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codeFormatted" })
  codeFormatted?: string;

  /**
   * Unformatted Frame string
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codeRaw" })
  codeRaw?: string;

  /**
   * Exception type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exceptionType" })
  exceptionType?: string;

  /**
   * name of the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file" })
  file?: string;

  /**
   * Name of the framework
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frameworkName" })
  frameworkName?: string;

  /**
   * programming language of the frame
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: ErrorsGroupList200ApplicationJSONErrorGroupsReasonFramesLanguageEnum;

  /**
   * line number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line" })
  line?: number;

  /**
   * name of the method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: string;

  /**
   * parameters of the frames method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "methodParams" })
  methodParams?: string;

  /**
   * OS exception type. (aka. SIGNAL)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "osExceptionType" })
  osExceptionType?: string;
}

export enum ErrorsGroupList200ApplicationJSONErrorGroupsStateEnum {
  Open = "open",
  Closed = "closed",
  Ignored = "ignored",
}

export class ErrorsGroupList200ApplicationJSONErrorGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "annotation" })
  annotation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "appBuild" })
  appBuild?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "appVersion" })
  appVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "codeRaw" })
  codeRaw?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceCount" })
  deviceCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "errorGroupId" })
  errorGroupId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exceptionAppCode" })
  exceptionAppCode?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "exceptionClassMethod" })
  exceptionClassMethod?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "exceptionClassName" })
  exceptionClassName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exceptionFile" })
  exceptionFile?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exceptionLine" })
  exceptionLine?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exceptionMessage" })
  exceptionMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exceptionMethod" })
  exceptionMethod?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exceptionType" })
  exceptionType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstOccurrence" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstOccurrence: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastOccurrence" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastOccurrence: Date;

  @SpeakeasyMetadata({
    elemType: ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames,
  })
  @Expose({ name: "reasonFrames" })
  @Type(() => ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames)
  reasonFrames?: ErrorsGroupList200ApplicationJSONErrorGroupsReasonFrames[];

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: ErrorsGroupList200ApplicationJSONErrorGroupsStateEnum;
}

/**
 * List of error groups
 */
export class ErrorsGroupList200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ErrorsGroupList200ApplicationJSONErrorGroups })
  @Expose({ name: "errorGroups" })
  @Type(() => ErrorsGroupList200ApplicationJSONErrorGroups)
  errorGroups?: ErrorsGroupList200ApplicationJSONErrorGroups[];

  @SpeakeasyMetadata()
  @Expose({ name: "nextLink" })
  nextLink?: string;
}

export class ErrorsGroupListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * List of error groups
   */
  @SpeakeasyMetadata()
  errorsGroupList200ApplicationJSONObject?: ErrorsGroupList200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  errorsGroupListDefaultApplicationJSONObject?: ErrorsGroupListDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
