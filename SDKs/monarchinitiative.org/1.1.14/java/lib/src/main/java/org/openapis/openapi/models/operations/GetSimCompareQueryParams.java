/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetSimCompareQueryParams {
    /**
     * set to true if *all* input ids are phenotypic features, else set to false
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_feature_set")
    public Boolean isFeatureSet;
    public GetSimCompareQueryParams withIsFeatureSet(Boolean isFeatureSet) {
        this.isFeatureSet = isFeatureSet;
        return this;
    }
    
    /**
     * Metric for computing similarity
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=metric")
    public GetSimCompareMetricEnum metric;
    public GetSimCompareQueryParams withMetric(GetSimCompareMetricEnum metric) {
        this.metric = metric;
        return this;
    }
    
    /**
     * A phenotype or identifier that is composed of phenotypes (eg disease, gene)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query_id")
    public String[] queryId;
    public GetSimCompareQueryParams withQueryId(String[] queryId) {
        this.queryId = queryId;
        return this;
    }
    
    /**
     * A phenotype or identifier that is composed of phenotypes (eg disease, gene)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ref_id")
    public String[] refId;
    public GetSimCompareQueryParams withRefId(String[] refId) {
        this.refId = refId;
        return this;
    }
    
}
