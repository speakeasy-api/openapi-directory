// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AlbumAPIGetUserCollectionsPathParams struct {
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// AlbumAPIGetUserCollectionsLanguagePreferenceEnum
type AlbumAPIGetUserCollectionsLanguagePreferenceEnum string

const (
	AlbumAPIGetUserCollectionsLanguagePreferenceEnumDefault  AlbumAPIGetUserCollectionsLanguagePreferenceEnum = "Default"
	AlbumAPIGetUserCollectionsLanguagePreferenceEnumJapanese AlbumAPIGetUserCollectionsLanguagePreferenceEnum = "Japanese"
	AlbumAPIGetUserCollectionsLanguagePreferenceEnumRomaji   AlbumAPIGetUserCollectionsLanguagePreferenceEnum = "Romaji"
	AlbumAPIGetUserCollectionsLanguagePreferenceEnumEnglish  AlbumAPIGetUserCollectionsLanguagePreferenceEnum = "English"
)

func (e *AlbumAPIGetUserCollectionsLanguagePreferenceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = AlbumAPIGetUserCollectionsLanguagePreferenceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetUserCollectionsLanguagePreferenceEnum: %s", s)
	}
}

type AlbumAPIGetUserCollectionsQueryParams struct {
	LanguagePreference *AlbumAPIGetUserCollectionsLanguagePreferenceEnum `queryParam:"style=form,explode=true,name=languagePreference"`
}

type AlbumAPIGetUserCollectionsRequest struct {
	PathParams  AlbumAPIGetUserCollectionsPathParams
	QueryParams AlbumAPIGetUserCollectionsQueryParams
}

type AlbumAPIGetUserCollectionsResponse struct {
	// OK
	AlbumForUserForAPIContracts []shared.AlbumForUserForAPIContract
	Body                        []byte
	ContentType                 string
	StatusCode                  int
	RawResponse                 *http.Response
}
