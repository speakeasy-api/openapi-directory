// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetDirectDebitsForMandateUUIDQueryParams struct {
	// The mandate UUID to retrieve
	MandateUUID string `queryParam:"style=form,explode=true,name=mandateUuid"`
}

type GetDirectDebitsForMandateUUIDRequest struct {
	QueryParams GetDirectDebitsForMandateUUIDQueryParams
}

// GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum - The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.
type GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum string

const (
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumZero  GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "0"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumOne   GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "1"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumTwo   GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "2"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumThree GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "3"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumFour  GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "4"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumFive  GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "5"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumSix   GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "6"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumSeven GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "7"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumEight GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "8"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumNine  GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "9"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumA     GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "A"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnumB     GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum = "B"
)

func (e *GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		fallthrough
	case "5":
		fallthrough
	case "6":
		fallthrough
	case "7":
		fallthrough
	case "8":
		fallthrough
	case "9":
		fallthrough
	case "A":
		fallthrough
	case "B":
		*e = GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum: %s", s)
	}
}

// GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum - The statuses of the direct debit payments associated with the mandate.
// * 'RECIEVED' - Direct Debit has been recieved
// * 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it
// * 'REJECT_READY_FOR_PROCESSING'
// * 'REJECT_RECORD_IN_PROGRESS'
// * 'REJECT_RECORDED'
// * 'REJECT_FILE_CREATED'
// * 'REJECT_FILE_SENT'
// * 'COLLECTED' - Direct debit collected
// * 'REFUND_REQUESTED' - Refund requested on direct debit
// * 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit
// * 'REFUND_RECORDED'
// * 'REFUND_FILE_CREATED'
// * 'REFUND_FILE_SENT'
type GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum string

const (
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRecieved                 GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "RECIEVED"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRejectRequested          GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REJECT_REQUESTED"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRejectReadyForProcessing GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REJECT_READY_FOR_PROCESSING"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRejectRecordInProgress   GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REJECT_RECORD_IN_PROGRESS"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRejectRecorded           GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REJECT_RECORDED"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRejectFileCreated        GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REJECT_FILE_CREATED"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRejectFileSent           GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REJECT_FILE_SENT"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumCollected                GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "COLLECTED"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRefundRequested          GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REFUND_REQUESTED"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRefundRecordInProgress   GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REFUND_RECORD_IN_PROGRESS"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRefundRecorded           GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REFUND_RECORDED"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRefundFileCreated        GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REFUND_FILE_CREATED"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnumRefundFileSent           GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum = "REFUND_FILE_SENT"
)

func (e *GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RECIEVED":
		fallthrough
	case "REJECT_REQUESTED":
		fallthrough
	case "REJECT_READY_FOR_PROCESSING":
		fallthrough
	case "REJECT_RECORD_IN_PROGRESS":
		fallthrough
	case "REJECT_RECORDED":
		fallthrough
	case "REJECT_FILE_CREATED":
		fallthrough
	case "REJECT_FILE_SENT":
		fallthrough
	case "COLLECTED":
		fallthrough
	case "REFUND_REQUESTED":
		fallthrough
	case "REFUND_RECORD_IN_PROGRESS":
		fallthrough
	case "REFUND_RECORDED":
		fallthrough
	case "REFUND_FILE_CREATED":
		fallthrough
	case "REFUND_FILE_SENT":
		*e = GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum: %s", s)
	}
}

// GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum - The type of the direct debit.
type GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum string

const (
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnumFirstCollection       GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum = "FIRST_COLLECTION"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnumOngoingCollection     GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum = "ONGOING_COLLECTION"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnumRepresentedCollection GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum = "REPRESENTED_COLLECTION"
	GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnumFinalCollection       GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum = "FINAL_COLLECTION"
)

func (e *GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FIRST_COLLECTION":
		fallthrough
	case "ONGOING_COLLECTION":
		fallthrough
	case "REPRESENTED_COLLECTION":
		fallthrough
	case "FINAL_COLLECTION":
		*e = GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum: %s", s)
	}
}

type GetDirectDebitsForMandateUUIDDirectDebitsDirectDebit struct {
	// Value of the payment
	Amount   *int64                                                                                                   `json:"amount,omitempty"`
	Currency *shared.OneaccountsGetResponses200ContentApplication1jsonSchemaPropertiesAccountsItemsPropertiesCurrency `json:"currency,omitempty"`
	// Date the direct debit was created. Milliseconds since the epoch (1970).
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// The direct debit reference.
	DirectDebitReference *string `json:"directDebitReference,omitempty"`
	// The UUID for the direct debit payment
	DirectDebitUUID *string `json:"directDebitUuid,omitempty"`
	// DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.
	IsDDIC *bool `json:"isDDIC,omitempty"`
	// Date the direct debit was last updated. Milliseconds since the epoch (1970).
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// The UUID for the mandate
	MandateUUID *string `json:"mandateUUid,omitempty"`
	// The Alias of the party who sets up the direct debit.
	OriginatorAlias *string `json:"originatorAlias,omitempty"`
	// The creator of the party who sets up the direct debit.
	OriginatorName *string `json:"originatorName,omitempty"`
	// Set by party who sets up the direct debit.
	OriginatorReference *string `json:"originatorReference,omitempty"`
	// Reason why rejected
	SchemeRejectReason *string `json:"schemeRejectReason,omitempty"`
	// The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.
	SchemeRejectReasonCode *GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitSchemeRejectReasonCodeEnum `json:"schemeRejectReasonCode,omitempty"`
	// The statuses of the direct debit payments associated with the mandate.
	// * 'RECIEVED' - Direct Debit has been recieved
	// * 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it
	// * 'REJECT_READY_FOR_PROCESSING'
	// * 'REJECT_RECORD_IN_PROGRESS'
	// * 'REJECT_RECORDED'
	// * 'REJECT_FILE_CREATED'
	// * 'REJECT_FILE_SENT'
	// * 'COLLECTED' - Direct debit collected
	// * 'REFUND_REQUESTED' - Refund requested on direct debit
	// * 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit
	// * 'REFUND_RECORDED'
	// * 'REFUND_FILE_CREATED'
	// * 'REFUND_FILE_SENT'
	//
	Status *GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitStatusEnum `json:"status,omitempty"`
	// The ican of your fire account that the money was taken from
	TargetIcan *int64 `json:"targetIcan,omitempty"`
	// The payee that was created when the DD was processed
	TargetPayeeID *int64 `json:"targetPayeeId,omitempty"`
	// The type of the direct debit.
	Type *GetDirectDebitsForMandateUUIDDirectDebitsDirectDebitTypeEnum `json:"type,omitempty"`
}

// GetDirectDebitsForMandateUUIDDirectDebits - Retrieve all direct debit payments associated with a direct debit mandate.
type GetDirectDebitsForMandateUUIDDirectDebits struct {
	Directdebits []GetDirectDebitsForMandateUUIDDirectDebitsDirectDebit `json:"directdebits,omitempty"`
	// Number of direct debits found
	Total *int64 `json:"total,omitempty"`
}

type GetDirectDebitsForMandateUUIDResponse struct {
	ContentType string
	// Retrieve all direct debit payments associated with a direct debit mandate.
	DirectDebits *GetDirectDebitsForMandateUUIDDirectDebits
	StatusCode   int
	RawResponse  *http.Response
}
