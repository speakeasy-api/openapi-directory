"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VolumeMount:
    r"""VolumeMount describes a mounting of a Volume within a container."""
    
    mount_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mountPath'), 'exclude': lambda f: f is None }})
    r"""Path within the container at which the volume should be mounted. Must not contain ':'."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the volume. There must be a corresponding Volume with the same name."""  
    read_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readOnly'), 'exclude': lambda f: f is None }})
    r"""(Optional) Only true is accepted. Defaults to true."""  
    sub_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subPath'), 'exclude': lambda f: f is None }})
    r"""(Optional) Path within the volume from which the container's volume should be mounted. Defaults to \\"\\" (volume's root)."""  
    