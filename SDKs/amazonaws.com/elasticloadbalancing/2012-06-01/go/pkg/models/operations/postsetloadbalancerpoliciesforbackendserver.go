// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTSetLoadBalancerPoliciesForBackendServerActionEnum
type POSTSetLoadBalancerPoliciesForBackendServerActionEnum string

const (
	POSTSetLoadBalancerPoliciesForBackendServerActionEnumSetLoadBalancerPoliciesForBackendServer POSTSetLoadBalancerPoliciesForBackendServerActionEnum = "SetLoadBalancerPoliciesForBackendServer"
)

func (e POSTSetLoadBalancerPoliciesForBackendServerActionEnum) ToPointer() *POSTSetLoadBalancerPoliciesForBackendServerActionEnum {
	return &e
}

func (e *POSTSetLoadBalancerPoliciesForBackendServerActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SetLoadBalancerPoliciesForBackendServer":
		*e = POSTSetLoadBalancerPoliciesForBackendServerActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSetLoadBalancerPoliciesForBackendServerActionEnum: %v", v)
	}
}

// POSTSetLoadBalancerPoliciesForBackendServerVersionEnum
type POSTSetLoadBalancerPoliciesForBackendServerVersionEnum string

const (
	POSTSetLoadBalancerPoliciesForBackendServerVersionEnumTwoThousandAndTwelve0601 POSTSetLoadBalancerPoliciesForBackendServerVersionEnum = "2012-06-01"
)

func (e POSTSetLoadBalancerPoliciesForBackendServerVersionEnum) ToPointer() *POSTSetLoadBalancerPoliciesForBackendServerVersionEnum {
	return &e
}

func (e *POSTSetLoadBalancerPoliciesForBackendServerVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-06-01":
		*e = POSTSetLoadBalancerPoliciesForBackendServerVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSetLoadBalancerPoliciesForBackendServerVersionEnum: %v", v)
	}
}

type POSTSetLoadBalancerPoliciesForBackendServerRequest struct {
	Action            POSTSetLoadBalancerPoliciesForBackendServerActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                                 `request:"mediaType=text/xml"`
	Version           POSTSetLoadBalancerPoliciesForBackendServerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTSetLoadBalancerPoliciesForBackendServerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
