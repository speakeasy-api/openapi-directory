// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutItemXAmzTargetEnum
type PutItemXAmzTargetEnum string

const (
	PutItemXAmzTargetEnumDynamoDb20111205PutItem PutItemXAmzTargetEnum = "DynamoDB_20111205.PutItem"
)

func (e PutItemXAmzTargetEnum) ToPointer() *PutItemXAmzTargetEnum {
	return &e
}

func (e *PutItemXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DynamoDB_20111205.PutItem":
		*e = PutItemXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutItemXAmzTargetEnum: %v", v)
	}
}

type PutItemRequest struct {
	PutItemInput      shared.PutItemInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        PutItemXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutItemResponse struct {
	// ConditionalCheckFailedException
	ConditionalCheckFailedException interface{}
	ContentType                     string
	// InternalServerError
	InternalServerError interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// Success
	PutItemOutput *shared.PutItemOutput
	StatusCode    int
	RawResponse   *http.Response
	// RequestLimitExceeded
	RequestLimitExceeded interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
