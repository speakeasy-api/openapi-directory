<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ShiftQuery - The parameters of a `Shift` search query, which includes filter and sort options.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ShiftQuery
{
    /**
     * Defines a filter used in a search for `Shift` records. `AND` logic is
     * 
     * used by Square's servers to apply each filter property specified.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShiftFilter $filter
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ShiftFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShiftFilter $filter = null;
    
    /**
     * Sets the sort order of search results.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ShiftSort $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ShiftSort')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ShiftSort $sort = null;
    
	public function __construct()
	{
		$this->filter = null;
		$this->sort = null;
	}
}
