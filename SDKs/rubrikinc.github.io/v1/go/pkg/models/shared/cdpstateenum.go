// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CdpStateEnum - Current CDP State of virtual machine.
type CdpStateEnum string

const (
	CdpStateEnumNotEnabled                CdpStateEnum = "NotEnabled"
	CdpStateEnumPending                   CdpStateEnum = "Pending"
	CdpStateEnumWaitingForInitialSnapshot CdpStateEnum = "WaitingForInitialSnapshot"
	CdpStateEnumRunning                   CdpStateEnum = "Running"
	CdpStateEnumBroken                    CdpStateEnum = "Broken"
	CdpStateEnumFailedToStart             CdpStateEnum = "FailedToStart"
	CdpStateEnumTryingToStart             CdpStateEnum = "TryingToStart"
	CdpStateEnumResyncing                 CdpStateEnum = "Resyncing"
)

func (e CdpStateEnum) ToPointer() *CdpStateEnum {
	return &e
}

func (e *CdpStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NotEnabled":
		fallthrough
	case "Pending":
		fallthrough
	case "WaitingForInitialSnapshot":
		fallthrough
	case "Running":
		fallthrough
	case "Broken":
		fallthrough
	case "FailedToStart":
		fallthrough
	case "TryingToStart":
		fallthrough
	case "Resyncing":
		*e = CdpStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CdpStateEnum: %v", v)
	}
}
