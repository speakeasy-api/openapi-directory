"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grid as shared_grid
from ..shared import image as shared_image
from ..shared import question as shared_question
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QuestionGroupItem:
    r"""Defines a question that comprises multiple questions grouped together."""
    
    grid: Optional[shared_grid.Grid] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grid'), 'exclude': lambda f: f is None }})
    r"""A grid of choices (radio or check boxes) with each row constituting a separate question. Each row has the same choices, which are shown as the columns."""  
    image: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Data representing an image."""  
    questions: Optional[list[shared_question.Question]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('questions'), 'exclude': lambda f: f is None }})
    r"""Required. A list of questions that belong in this question group. A question must only belong to one group. The `kind` of the group may affect what types of questions are allowed."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QuestionGroupItemInput:
    r"""Defines a question that comprises multiple questions grouped together."""
    
    grid: Optional[shared_grid.GridInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grid'), 'exclude': lambda f: f is None }})
    r"""A grid of choices (radio or check boxes) with each row constituting a separate question. Each row has the same choices, which are shown as the columns."""  
    image: Optional[shared_image.ImageInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Data representing an image."""  
    questions: Optional[list[shared_question.QuestionInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('questions'), 'exclude': lambda f: f is None }})
    r"""Required. A list of questions that belong in this question group. A question must only belong to one group. The `kind` of the group may affect what types of questions are allowed."""  
    