"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountholderdetails as shared_accountholderdetails
from ..shared import accountholderstatus as shared_accountholderstatus
from ..shared import errorfieldtype as shared_errorfieldtype
from ..shared import kycverificationresult as shared_kycverificationresult
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateAccountHolderResponseLegalEntityEnum(str, Enum):
    r"""The type of legal entity of the new account holder."""
    BUSINESS = 'Business'
    INDIVIDUAL = 'Individual'
    NON_PROFIT = 'NonProfit'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAccountHolderResponse:
    r"""OK - the request has succeeded."""
    
    account_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountCode'), 'exclude': lambda f: f is None }})
    r"""The code of a new account created for the account holder."""  
    account_holder_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderCode'), 'exclude': lambda f: f is None }})
    r"""The code of the new account holder."""  
    account_holder_details: Optional[shared_accountholderdetails.AccountHolderDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderDetails'), 'exclude': lambda f: f is None }})  
    account_holder_status: Optional[shared_accountholderstatus.AccountHolderStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderStatus'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The description of the new account holder."""  
    invalid_fields: Optional[list[shared_errorfieldtype.ErrorFieldType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalidFields'), 'exclude': lambda f: f is None }})
    r"""A list of fields that caused the `/createAccountHolder` request to fail."""  
    legal_entity: Optional[CreateAccountHolderResponseLegalEntityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalEntity'), 'exclude': lambda f: f is None }})
    r"""The type of legal entity of the new account holder."""  
    primary_currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryCurrency'), 'exclude': lambda f: f is None }})
    r"""The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals."""  
    psp_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pspReference'), 'exclude': lambda f: f is None }})
    r"""The reference of a request. Can be used to uniquely identify the request."""  
    result_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultCode'), 'exclude': lambda f: f is None }})
    r"""The result code."""  
    verification: Optional[shared_kycverificationresult.KYCVerificationResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verification'), 'exclude': lambda f: f is None }})  
    