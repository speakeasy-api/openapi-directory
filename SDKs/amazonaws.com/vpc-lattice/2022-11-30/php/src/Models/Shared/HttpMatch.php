<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HttpMatch - Describes criteria that can be applied to incoming requests.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HttpMatch
{
    /**
     * $headerMatches
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\HeaderMatch> $headerMatches
     */
	#[\JMS\Serializer\Annotation\SerializedName('headerMatches')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\HeaderMatch>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $headerMatches = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $method = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('pathMatch')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PathMatch')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PathMatch $pathMatch = null;
    
	public function __construct()
	{
		$this->headerMatches = null;
		$this->method = null;
		$this->pathMatch = null;
	}
}
