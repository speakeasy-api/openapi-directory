// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListAuditMitigationActionsExecutionsActionStatusEnum - Specify this filter to limit results to those with a specific status.
type ListAuditMitigationActionsExecutionsActionStatusEnum string

const (
	ListAuditMitigationActionsExecutionsActionStatusEnumInProgress ListAuditMitigationActionsExecutionsActionStatusEnum = "IN_PROGRESS"
	ListAuditMitigationActionsExecutionsActionStatusEnumCompleted  ListAuditMitigationActionsExecutionsActionStatusEnum = "COMPLETED"
	ListAuditMitigationActionsExecutionsActionStatusEnumFailed     ListAuditMitigationActionsExecutionsActionStatusEnum = "FAILED"
	ListAuditMitigationActionsExecutionsActionStatusEnumCanceled   ListAuditMitigationActionsExecutionsActionStatusEnum = "CANCELED"
	ListAuditMitigationActionsExecutionsActionStatusEnumSkipped    ListAuditMitigationActionsExecutionsActionStatusEnum = "SKIPPED"
	ListAuditMitigationActionsExecutionsActionStatusEnumPending    ListAuditMitigationActionsExecutionsActionStatusEnum = "PENDING"
)

func (e *ListAuditMitigationActionsExecutionsActionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELED":
		fallthrough
	case "SKIPPED":
		fallthrough
	case "PENDING":
		*e = ListAuditMitigationActionsExecutionsActionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAuditMitigationActionsExecutionsActionStatusEnum: %s", s)
	}
}

type ListAuditMitigationActionsExecutionsQueryParams struct {
	// Specify this filter to limit results to those with a specific status.
	ActionStatus *ListAuditMitigationActionsExecutionsActionStatusEnum `queryParam:"style=form,explode=true,name=actionStatus"`
	// Specify this filter to limit results to those that were applied to a specific audit finding.
	FindingID string `queryParam:"style=form,explode=true,name=findingId"`
	// The maximum number of results to return at one time. The default is 25.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token for the next set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// Specify this filter to limit results to actions for a specific audit mitigation actions task.
	TaskID string `queryParam:"style=form,explode=true,name=taskId"`
}

type ListAuditMitigationActionsExecutionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListAuditMitigationActionsExecutionsRequest struct {
	QueryParams ListAuditMitigationActionsExecutionsQueryParams
	Headers     ListAuditMitigationActionsExecutionsHeaders
}

type ListAuditMitigationActionsExecutionsResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListAuditMitigationActionsExecutionsResponse *shared.ListAuditMitigationActionsExecutionsResponse
	StatusCode                                   int
	RawResponse                                  *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
