// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DatabaseCreateDocumentSecurity struct {
	Jwt     string `security:"scheme,type=apiKey,subtype=header,name=X-Appwrite-JWT"`
	Key     string `security:"scheme,type=apiKey,subtype=header,name=X-Appwrite-Key"`
	Project string `security:"scheme,type=apiKey,subtype=header,name=X-Appwrite-Project"`
}

type DatabaseCreateDocumentRequestBody struct {
	// Document data as JSON object.
	Data map[string]interface{} `json:"data"`
	// Parent document unique ID. Use when you want your new document to be a child of a parent document.
	ParentDocument *string `json:"parentDocument,omitempty"`
	// Parent document property name. Use when you want your new document to be a child of a parent document.
	ParentProperty *string `json:"parentProperty,omitempty"`
	// Parent document property connection type. You can set this value to **assign**, **append** or **prepend**, default value is assign. Use when you want your new document to be a child of a parent document.
	ParentPropertyType *string `json:"parentPropertyType,omitempty"`
	// An array of strings with read permissions. By default only the current user is granted with read permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
	Read []string `json:"read,omitempty"`
	// An array of strings with write permissions. By default only the current user is granted with write permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
	Write []string `json:"write,omitempty"`
}

type DatabaseCreateDocumentRequest struct {
	RequestBody *DatabaseCreateDocumentRequestBody `request:"mediaType=application/json"`
	// Collection unique ID. You can create a new collection with validation rules using the Database service [server integration](/docs/server/database#createCollection).
	CollectionID string `pathParam:"style=simple,explode=false,name=collectionId"`
}

type DatabaseCreateDocumentResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Document
	Document map[string]interface{}
}
