"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes = exports.GetLaunchTemplateDataResultLaunchTemplateDataMonitoring = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsStateEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsInstanceMetadataTagsEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpTokensEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpProtocolIpv6Enum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpEndpointEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions = exports.GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptionsAutoRecoveryEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageTypesEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsInstanceGenerationsEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsSpotInstanceTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsMarketTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceInitiatedShutdownBehaviorEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile = exports.GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions = exports.GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions = exports.GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators = exports.GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications = exports.GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification = exports.GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions = exports.GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification = exports.GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget = exports.GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationPreferenceEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings = exports.GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs = exports.GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum = void 0;
exports.GetLaunchTemplateDataResult = exports.GetLaunchTemplateDataResultLaunchTemplateData = exports.GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications = exports.GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags = exports.GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions = exports.GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptionsHostnameTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataPlacement = exports.GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces = exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses = exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes = exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The volume type.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum["Standard"] = "standard";
    GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum["Io1"] = "io1";
    GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum["Io2"] = "io2";
    GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum["Gp2"] = "gp2";
    GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum["Sc1"] = "sc1";
    GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum["St1"] = "st1";
    GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum["Gp3"] = "gp3";
})(GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbsVolumeTypeEnum = {}));
/**
 * Information about the block device for an EBS volume.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs.prototype, "deleteOnTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs.prototype, "encrypted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs.prototype, "iops", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs.prototype, "kmsKeyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs.prototype, "snapshotId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs.prototype, "throughput", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs.prototype, "volumeSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs.prototype, "volumeType", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs = GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs;
/**
 * Describes a block device mapping.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings.prototype, "deviceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappingsEbs)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings.prototype, "ebs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings.prototype, "noDevice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings.prototype, "virtualName", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings = GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings;
/**
 * <p>Indicates the instance's Capacity Reservation preferences. Possible preferences include:</p> <ul> <li> <p> <code>open</code> - The instance can run in any <code>open</code> Capacity Reservation that has matching attributes (instance type, platform, Availability Zone).</p> </li> <li> <p> <code>none</code> - The instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity.</p> </li> </ul>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationPreferenceEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationPreferenceEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationPreferenceEnum["Open"] = "open";
    GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationPreferenceEnum["None"] = "none";
})(GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationPreferenceEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationPreferenceEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationPreferenceEnum = {}));
/**
 * Information about the target Capacity Reservation or Capacity Reservation group.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget.prototype, "capacityReservationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget.prototype, "capacityReservationResourceGroupArn", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget = GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget;
/**
 * Information about the Capacity Reservation targeting option.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification.prototype, "capacityReservationPreference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecificationCapacityReservationTarget)
    ], GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification.prototype, "capacityReservationTarget", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification = GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification;
/**
 * The CPU options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimizing CPU options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions.prototype, "coreCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions.prototype, "threadsPerCore", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions = GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions;
/**
 * The credit option for CPU usage of the instance.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification.prototype, "cpuCredits", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification = GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification;
/**
 * Describes an elastic GPU.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications.prototype, "type", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications = GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications;
/**
 *  Describes an elastic inference accelerator.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators.prototype, "count", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators.prototype, "type", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators = GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators;
/**
 * Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions.prototype, "enabled", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions = GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions;
/**
 * Indicates whether an instance is configured for hibernation. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Hibernate.html">Hibernate your instance</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions.prototype, "configured", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions = GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions;
/**
 * The IAM instance profile.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile.prototype, "arn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile.prototype, "name", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile = GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile;
/**
 * Indicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceInitiatedShutdownBehaviorEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceInitiatedShutdownBehaviorEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceInitiatedShutdownBehaviorEnum["Stop"] = "stop";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceInitiatedShutdownBehaviorEnum["Terminate"] = "terminate";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceInitiatedShutdownBehaviorEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceInitiatedShutdownBehaviorEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceInitiatedShutdownBehaviorEnum = {}));
/**
 * The market type.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsMarketTypeEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsMarketTypeEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsMarketTypeEnum["Spot"] = "spot";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsMarketTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsMarketTypeEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsMarketTypeEnum = {}));
/**
 * The behavior when a Spot Instance is interrupted.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum["Hibernate"] = "hibernate";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum["Stop"] = "stop";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum["Terminate"] = "terminate";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsInstanceInterruptionBehaviorEnum = {}));
/**
 * The Spot Instance request type.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsSpotInstanceTypeEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsSpotInstanceTypeEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsSpotInstanceTypeEnum["OneTime"] = "one-time";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsSpotInstanceTypeEnum["Persistent"] = "persistent";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsSpotInstanceTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsSpotInstanceTypeEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptionsSpotInstanceTypeEnum = {}));
/**
 * The options for Spot Instances.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions.prototype, "blockDurationMinutes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions.prototype, "instanceInterruptionBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions.prototype, "maxPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions.prototype, "spotInstanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions.prototype, "validUntil", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions = GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions;
/**
 * The market (purchasing) option for the instances.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions.prototype, "marketType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptionsSpotOptions)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions.prototype, "spotOptions", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions = GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions;
/**
 * <p>The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance.</p> <p>To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>.</p> <p>Default: No minimum or maximum limits</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount;
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum["Nvidia"] = "nvidia";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum["Amd"] = "amd";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum["AmazonWebServices"] = "amazon-web-services";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum["Xilinx"] = "xilinx";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorManufacturersEnum = {}));
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["A100"] = "a100";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["V100"] = "v100";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["K80"] = "k80";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["T4"] = "t4";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["M60"] = "m60";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["RadeonProV520"] = "radeon-pro-v520";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["Vu9p"] = "vu9p";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["Inferentia"] = "inferentia";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum["K520"] = "k520";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorNamesEnum = {}));
/**
 * <p>The minimum and maximum amount of total accelerator memory, in MiB.</p> <p>Default: No minimum or maximum limits</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB;
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum["Gpu"] = "gpu";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum["Fpga"] = "fpga";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum["Inference"] = "inference";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTypesEnum = {}));
/**
 * <p>Indicates whether bare metal instance types must be included, excluded, or required.</p> <ul> <li> <p>To include bare metal instance types, specify <code>included</code>.</p> </li> <li> <p>To require only bare metal instance types, specify <code>required</code>.</p> </li> <li> <p>To exclude bare metal instance types, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>excluded</code> </p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum["Included"] = "included";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum["Required"] = "required";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum["Excluded"] = "excluded";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBareMetalEnum = {}));
/**
 * <p>The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS–optimized instances</a> in the <i>Amazon EC2 User Guide</i>.</p> <p>Default: No minimum or maximum limits</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps;
/**
 * <p>Indicates whether burstable performance T instance types are included, excluded, or required. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a>.</p> <ul> <li> <p>To include burstable performance instance types, specify <code>included</code>.</p> </li> <li> <p>To require only burstable performance instance types, specify <code>required</code>.</p> </li> <li> <p>To exclude burstable performance instance types, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>excluded</code> </p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum["Included"] = "included";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum["Required"] = "required";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum["Excluded"] = "excluded";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBurstablePerformanceEnum = {}));
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum["Intel"] = "intel";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum["Amd"] = "amd";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum["AmazonWebServices"] = "amazon-web-services";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsCpuManufacturersEnum = {}));
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsInstanceGenerationsEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsInstanceGenerationsEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsInstanceGenerationsEnum["Current"] = "current";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsInstanceGenerationsEnum["Previous"] = "previous";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsInstanceGenerationsEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsInstanceGenerationsEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsInstanceGenerationsEnum = {}));
/**
 * <p>Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon EC2 instance store</a> in the <i>Amazon EC2 User Guide</i>.</p> <ul> <li> <p>To include instance types with instance store volumes, specify <code>included</code>.</p> </li> <li> <p>To require only instance types with instance store volumes, specify <code>required</code>.</p> </li> <li> <p>To exclude instance types with instance store volumes, specify <code>excluded</code>.</p> </li> </ul> <p>Default: <code>included</code> </p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum["Included"] = "included";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum["Required"] = "required";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum["Excluded"] = "excluded";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageEnum = {}));
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageTypesEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageTypesEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageTypesEnum["Hdd"] = "hdd";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageTypesEnum["Ssd"] = "ssd";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageTypesEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageTypesEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsLocalStorageTypesEnum = {}));
/**
 * <p>The minimum and maximum amount of memory per vCPU, in GiB.</p> <p>Default: No minimum or maximum limits</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu;
/**
 * The minimum and maximum amount of memory, in MiB.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB;
/**
 * <p>The minimum and maximum amount of network bandwidth, in gigabits per second (Gbps).</p> <p>Default: No minimum or maximum limits</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps;
/**
 * <p>The minimum and maximum number of network interfaces.</p> <p>Default: No minimum or maximum limits</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount;
/**
 * <p>The minimum and maximum amount of total local storage, in GB.</p> <p>Default: No minimum or maximum limits</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB;
/**
 * The minimum and maximum number of vCPUs.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount.prototype, "max", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount.prototype, "min", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount;
/**
 * <p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceTypes</code>.</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorCount)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "acceleratorCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "acceleratorManufacturers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "acceleratorNames", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiB)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "acceleratorTotalMemoryMiB", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "acceleratorTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "allowedInstanceTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "bareMetal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbps)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "baselineEbsBandwidthMbps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "burstablePerformance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "cpuManufacturers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "excludedInstanceTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "instanceGenerations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "localStorage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "localStorageTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpu)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "memoryGiBPerVCpu", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsMemoryMiB)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "memoryMiB", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkBandwidthGbps)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "networkBandwidthGbps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsNetworkInterfaceCount)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "networkInterfaceCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "onDemandMaxPricePercentageOverLowestPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "requireHibernateSupport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "spotMaxPricePercentageOverLowestPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsTotalLocalStorageGB)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "totalLocalStorageGB", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirementsVCpuCount)
    ], GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements.prototype, "vCpuCount", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements = GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements;
/**
 * The instance type.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["A1Medium"] = "a1.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["A1Large"] = "a1.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["A1Xlarge"] = "a1.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["A12xlarge"] = "a1.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["A14xlarge"] = "a1.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["A1Metal"] = "a1.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C1Medium"] = "c1.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C1Xlarge"] = "c1.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C3Large"] = "c3.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C3Xlarge"] = "c3.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C32xlarge"] = "c3.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C34xlarge"] = "c3.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C38xlarge"] = "c3.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C4Large"] = "c4.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C4Xlarge"] = "c4.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C42xlarge"] = "c4.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C44xlarge"] = "c4.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C48xlarge"] = "c4.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5Large"] = "c5.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5Xlarge"] = "c5.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C52xlarge"] = "c5.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C54xlarge"] = "c5.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C59xlarge"] = "c5.9xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C512xlarge"] = "c5.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C518xlarge"] = "c5.18xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C524xlarge"] = "c5.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5Metal"] = "c5.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5aLarge"] = "c5a.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5aXlarge"] = "c5a.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5a2xlarge"] = "c5a.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5a4xlarge"] = "c5a.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5a8xlarge"] = "c5a.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5a12xlarge"] = "c5a.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5a16xlarge"] = "c5a.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5a24xlarge"] = "c5a.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5adLarge"] = "c5ad.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5adXlarge"] = "c5ad.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5ad2xlarge"] = "c5ad.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5ad4xlarge"] = "c5ad.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5ad8xlarge"] = "c5ad.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5ad12xlarge"] = "c5ad.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5ad16xlarge"] = "c5ad.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5ad24xlarge"] = "c5ad.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5dLarge"] = "c5d.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5dXlarge"] = "c5d.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5d2xlarge"] = "c5d.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5d4xlarge"] = "c5d.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5d9xlarge"] = "c5d.9xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5d12xlarge"] = "c5d.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5d18xlarge"] = "c5d.18xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5d24xlarge"] = "c5d.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5dMetal"] = "c5d.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5nLarge"] = "c5n.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5nXlarge"] = "c5n.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5n2xlarge"] = "c5n.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5n4xlarge"] = "c5n.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5n9xlarge"] = "c5n.9xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5n18xlarge"] = "c5n.18xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C5nMetal"] = "c5n.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gMedium"] = "c6g.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gLarge"] = "c6g.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gXlarge"] = "c6g.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6g2xlarge"] = "c6g.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6g4xlarge"] = "c6g.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6g8xlarge"] = "c6g.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6g12xlarge"] = "c6g.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6g16xlarge"] = "c6g.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gMetal"] = "c6g.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gdMedium"] = "c6gd.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gdLarge"] = "c6gd.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gdXlarge"] = "c6gd.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gd2xlarge"] = "c6gd.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gd4xlarge"] = "c6gd.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gd8xlarge"] = "c6gd.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gd12xlarge"] = "c6gd.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gd16xlarge"] = "c6gd.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gdMetal"] = "c6gd.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gnMedium"] = "c6gn.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gnLarge"] = "c6gn.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gnXlarge"] = "c6gn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gn2xlarge"] = "c6gn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gn4xlarge"] = "c6gn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gn8xlarge"] = "c6gn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gn12xlarge"] = "c6gn.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6gn16xlarge"] = "c6gn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6iLarge"] = "c6i.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6iXlarge"] = "c6i.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6i2xlarge"] = "c6i.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6i4xlarge"] = "c6i.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6i8xlarge"] = "c6i.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6i12xlarge"] = "c6i.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6i16xlarge"] = "c6i.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6i24xlarge"] = "c6i.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6i32xlarge"] = "c6i.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6iMetal"] = "c6i.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Cc14xlarge"] = "cc1.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Cc28xlarge"] = "cc2.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Cg14xlarge"] = "cg1.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Cr18xlarge"] = "cr1.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D2Xlarge"] = "d2.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D22xlarge"] = "d2.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D24xlarge"] = "d2.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D28xlarge"] = "d2.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D3Xlarge"] = "d3.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D32xlarge"] = "d3.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D34xlarge"] = "d3.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D38xlarge"] = "d3.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D3enXlarge"] = "d3en.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D3en2xlarge"] = "d3en.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D3en4xlarge"] = "d3en.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D3en6xlarge"] = "d3en.6xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D3en8xlarge"] = "d3en.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["D3en12xlarge"] = "d3en.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Dl124xlarge"] = "dl1.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["F12xlarge"] = "f1.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["F14xlarge"] = "f1.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["F116xlarge"] = "f1.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G22xlarge"] = "g2.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G28xlarge"] = "g2.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G34xlarge"] = "g3.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G38xlarge"] = "g3.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G316xlarge"] = "g3.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G3sXlarge"] = "g3s.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4adXlarge"] = "g4ad.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4ad2xlarge"] = "g4ad.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4ad4xlarge"] = "g4ad.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4ad8xlarge"] = "g4ad.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4ad16xlarge"] = "g4ad.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4dnXlarge"] = "g4dn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4dn2xlarge"] = "g4dn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4dn4xlarge"] = "g4dn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4dn8xlarge"] = "g4dn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4dn12xlarge"] = "g4dn.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4dn16xlarge"] = "g4dn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G4dnMetal"] = "g4dn.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G5Xlarge"] = "g5.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G52xlarge"] = "g5.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G54xlarge"] = "g5.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G58xlarge"] = "g5.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G512xlarge"] = "g5.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G516xlarge"] = "g5.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G524xlarge"] = "g5.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G548xlarge"] = "g5.48xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G5gXlarge"] = "g5g.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G5g2xlarge"] = "g5g.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G5g4xlarge"] = "g5g.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G5g8xlarge"] = "g5g.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G5g16xlarge"] = "g5g.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["G5gMetal"] = "g5g.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Hi14xlarge"] = "hi1.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Hpc6a48xlarge"] = "hpc6a.48xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Hs18xlarge"] = "hs1.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["H12xlarge"] = "h1.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["H14xlarge"] = "h1.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["H18xlarge"] = "h1.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["H116xlarge"] = "h1.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I2Xlarge"] = "i2.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I22xlarge"] = "i2.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I24xlarge"] = "i2.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I28xlarge"] = "i2.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3Large"] = "i3.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3Xlarge"] = "i3.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I32xlarge"] = "i3.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I34xlarge"] = "i3.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I38xlarge"] = "i3.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I316xlarge"] = "i3.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3Metal"] = "i3.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3enLarge"] = "i3en.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3enXlarge"] = "i3en.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3en2xlarge"] = "i3en.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3en3xlarge"] = "i3en.3xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3en6xlarge"] = "i3en.6xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3en12xlarge"] = "i3en.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3en24xlarge"] = "i3en.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I3enMetal"] = "i3en.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Im4gnLarge"] = "im4gn.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Im4gnXlarge"] = "im4gn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Im4gn2xlarge"] = "im4gn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Im4gn4xlarge"] = "im4gn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Im4gn8xlarge"] = "im4gn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Im4gn16xlarge"] = "im4gn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Inf1Xlarge"] = "inf1.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Inf12xlarge"] = "inf1.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Inf16xlarge"] = "inf1.6xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Inf124xlarge"] = "inf1.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Is4genMedium"] = "is4gen.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Is4genLarge"] = "is4gen.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Is4genXlarge"] = "is4gen.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Is4gen2xlarge"] = "is4gen.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Is4gen4xlarge"] = "is4gen.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Is4gen8xlarge"] = "is4gen.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M1Small"] = "m1.small";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M1Medium"] = "m1.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M1Large"] = "m1.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M1Xlarge"] = "m1.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M2Xlarge"] = "m2.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M22xlarge"] = "m2.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M24xlarge"] = "m2.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M3Medium"] = "m3.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M3Large"] = "m3.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M3Xlarge"] = "m3.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M32xlarge"] = "m3.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M4Large"] = "m4.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M4Xlarge"] = "m4.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M42xlarge"] = "m4.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M44xlarge"] = "m4.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M410xlarge"] = "m4.10xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M416xlarge"] = "m4.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5Large"] = "m5.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5Xlarge"] = "m5.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M52xlarge"] = "m5.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M54xlarge"] = "m5.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M58xlarge"] = "m5.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M512xlarge"] = "m5.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M516xlarge"] = "m5.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M524xlarge"] = "m5.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5Metal"] = "m5.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5aLarge"] = "m5a.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5aXlarge"] = "m5a.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5a2xlarge"] = "m5a.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5a4xlarge"] = "m5a.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5a8xlarge"] = "m5a.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5a12xlarge"] = "m5a.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5a16xlarge"] = "m5a.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5a24xlarge"] = "m5a.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5adLarge"] = "m5ad.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5adXlarge"] = "m5ad.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5ad2xlarge"] = "m5ad.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5ad4xlarge"] = "m5ad.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5ad8xlarge"] = "m5ad.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5ad12xlarge"] = "m5ad.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5ad16xlarge"] = "m5ad.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5ad24xlarge"] = "m5ad.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dLarge"] = "m5d.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dXlarge"] = "m5d.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5d2xlarge"] = "m5d.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5d4xlarge"] = "m5d.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5d8xlarge"] = "m5d.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5d12xlarge"] = "m5d.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5d16xlarge"] = "m5d.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5d24xlarge"] = "m5d.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dMetal"] = "m5d.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dnLarge"] = "m5dn.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dnXlarge"] = "m5dn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dn2xlarge"] = "m5dn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dn4xlarge"] = "m5dn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dn8xlarge"] = "m5dn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dn12xlarge"] = "m5dn.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dn16xlarge"] = "m5dn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dn24xlarge"] = "m5dn.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5dnMetal"] = "m5dn.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5nLarge"] = "m5n.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5nXlarge"] = "m5n.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5n2xlarge"] = "m5n.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5n4xlarge"] = "m5n.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5n8xlarge"] = "m5n.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5n12xlarge"] = "m5n.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5n16xlarge"] = "m5n.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5n24xlarge"] = "m5n.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5nMetal"] = "m5n.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5znLarge"] = "m5zn.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5znXlarge"] = "m5zn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5zn2xlarge"] = "m5zn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5zn3xlarge"] = "m5zn.3xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5zn6xlarge"] = "m5zn.6xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5zn12xlarge"] = "m5zn.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M5znMetal"] = "m5zn.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6aLarge"] = "m6a.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6aXlarge"] = "m6a.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6a2xlarge"] = "m6a.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6a4xlarge"] = "m6a.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6a8xlarge"] = "m6a.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6a12xlarge"] = "m6a.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6a16xlarge"] = "m6a.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6a24xlarge"] = "m6a.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6a32xlarge"] = "m6a.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6a48xlarge"] = "m6a.48xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gMetal"] = "m6g.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gMedium"] = "m6g.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gLarge"] = "m6g.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gXlarge"] = "m6g.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6g2xlarge"] = "m6g.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6g4xlarge"] = "m6g.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6g8xlarge"] = "m6g.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6g12xlarge"] = "m6g.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6g16xlarge"] = "m6g.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gdMetal"] = "m6gd.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gdMedium"] = "m6gd.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gdLarge"] = "m6gd.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gdXlarge"] = "m6gd.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gd2xlarge"] = "m6gd.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gd4xlarge"] = "m6gd.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gd8xlarge"] = "m6gd.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gd12xlarge"] = "m6gd.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6gd16xlarge"] = "m6gd.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6iLarge"] = "m6i.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6iXlarge"] = "m6i.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6i2xlarge"] = "m6i.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6i4xlarge"] = "m6i.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6i8xlarge"] = "m6i.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6i12xlarge"] = "m6i.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6i16xlarge"] = "m6i.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6i24xlarge"] = "m6i.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6i32xlarge"] = "m6i.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6iMetal"] = "m6i.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Mac1Metal"] = "mac1.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P2Xlarge"] = "p2.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P28xlarge"] = "p2.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P216xlarge"] = "p2.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P32xlarge"] = "p3.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P38xlarge"] = "p3.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P316xlarge"] = "p3.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P3dn24xlarge"] = "p3dn.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P4d24xlarge"] = "p4d.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R3Large"] = "r3.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R3Xlarge"] = "r3.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R32xlarge"] = "r3.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R34xlarge"] = "r3.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R38xlarge"] = "r3.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R4Large"] = "r4.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R4Xlarge"] = "r4.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R42xlarge"] = "r4.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R44xlarge"] = "r4.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R48xlarge"] = "r4.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R416xlarge"] = "r4.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5Large"] = "r5.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5Xlarge"] = "r5.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R52xlarge"] = "r5.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R54xlarge"] = "r5.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R58xlarge"] = "r5.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R512xlarge"] = "r5.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R516xlarge"] = "r5.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R524xlarge"] = "r5.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5Metal"] = "r5.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5aLarge"] = "r5a.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5aXlarge"] = "r5a.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5a2xlarge"] = "r5a.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5a4xlarge"] = "r5a.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5a8xlarge"] = "r5a.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5a12xlarge"] = "r5a.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5a16xlarge"] = "r5a.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5a24xlarge"] = "r5a.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5adLarge"] = "r5ad.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5adXlarge"] = "r5ad.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5ad2xlarge"] = "r5ad.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5ad4xlarge"] = "r5ad.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5ad8xlarge"] = "r5ad.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5ad12xlarge"] = "r5ad.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5ad16xlarge"] = "r5ad.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5ad24xlarge"] = "r5ad.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5bLarge"] = "r5b.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5bXlarge"] = "r5b.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5b2xlarge"] = "r5b.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5b4xlarge"] = "r5b.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5b8xlarge"] = "r5b.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5b12xlarge"] = "r5b.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5b16xlarge"] = "r5b.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5b24xlarge"] = "r5b.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5bMetal"] = "r5b.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dLarge"] = "r5d.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dXlarge"] = "r5d.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5d2xlarge"] = "r5d.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5d4xlarge"] = "r5d.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5d8xlarge"] = "r5d.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5d12xlarge"] = "r5d.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5d16xlarge"] = "r5d.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5d24xlarge"] = "r5d.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dMetal"] = "r5d.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dnLarge"] = "r5dn.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dnXlarge"] = "r5dn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dn2xlarge"] = "r5dn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dn4xlarge"] = "r5dn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dn8xlarge"] = "r5dn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dn12xlarge"] = "r5dn.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dn16xlarge"] = "r5dn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dn24xlarge"] = "r5dn.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5dnMetal"] = "r5dn.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5nLarge"] = "r5n.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5nXlarge"] = "r5n.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5n2xlarge"] = "r5n.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5n4xlarge"] = "r5n.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5n8xlarge"] = "r5n.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5n12xlarge"] = "r5n.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5n16xlarge"] = "r5n.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5n24xlarge"] = "r5n.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R5nMetal"] = "r5n.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gMedium"] = "r6g.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gLarge"] = "r6g.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gXlarge"] = "r6g.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6g2xlarge"] = "r6g.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6g4xlarge"] = "r6g.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6g8xlarge"] = "r6g.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6g12xlarge"] = "r6g.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6g16xlarge"] = "r6g.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gMetal"] = "r6g.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gdMedium"] = "r6gd.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gdLarge"] = "r6gd.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gdXlarge"] = "r6gd.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gd2xlarge"] = "r6gd.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gd4xlarge"] = "r6gd.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gd8xlarge"] = "r6gd.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gd12xlarge"] = "r6gd.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gd16xlarge"] = "r6gd.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6gdMetal"] = "r6gd.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6iLarge"] = "r6i.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6iXlarge"] = "r6i.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6i2xlarge"] = "r6i.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6i4xlarge"] = "r6i.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6i8xlarge"] = "r6i.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6i12xlarge"] = "r6i.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6i16xlarge"] = "r6i.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6i24xlarge"] = "r6i.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6i32xlarge"] = "r6i.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6iMetal"] = "r6i.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T1Micro"] = "t1.micro";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T2Nano"] = "t2.nano";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T2Micro"] = "t2.micro";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T2Small"] = "t2.small";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T2Medium"] = "t2.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T2Large"] = "t2.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T2Xlarge"] = "t2.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T22xlarge"] = "t2.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3Nano"] = "t3.nano";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3Micro"] = "t3.micro";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3Small"] = "t3.small";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3Medium"] = "t3.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3Large"] = "t3.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3Xlarge"] = "t3.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T32xlarge"] = "t3.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3aNano"] = "t3a.nano";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3aMicro"] = "t3a.micro";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3aSmall"] = "t3a.small";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3aMedium"] = "t3a.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3aLarge"] = "t3a.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3aXlarge"] = "t3a.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T3a2xlarge"] = "t3a.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T4gNano"] = "t4g.nano";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T4gMicro"] = "t4g.micro";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T4gSmall"] = "t4g.small";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T4gMedium"] = "t4g.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T4gLarge"] = "t4g.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T4gXlarge"] = "t4g.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["T4g2xlarge"] = "t4g.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U6tb156xlarge"] = "u-6tb1.56xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U6tb1112xlarge"] = "u-6tb1.112xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U9tb1112xlarge"] = "u-9tb1.112xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U12tb1112xlarge"] = "u-12tb1.112xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U6tb1Metal"] = "u-6tb1.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U9tb1Metal"] = "u-9tb1.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U12tb1Metal"] = "u-12tb1.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U18tb1Metal"] = "u-18tb1.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U24tb1Metal"] = "u-24tb1.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Vt13xlarge"] = "vt1.3xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Vt16xlarge"] = "vt1.6xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Vt124xlarge"] = "vt1.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X116xlarge"] = "x1.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X132xlarge"] = "x1.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X1eXlarge"] = "x1e.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X1e2xlarge"] = "x1e.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X1e4xlarge"] = "x1e.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X1e8xlarge"] = "x1e.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X1e16xlarge"] = "x1e.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X1e32xlarge"] = "x1e.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iezn2xlarge"] = "x2iezn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iezn4xlarge"] = "x2iezn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iezn6xlarge"] = "x2iezn.6xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iezn8xlarge"] = "x2iezn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iezn12xlarge"] = "x2iezn.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2ieznMetal"] = "x2iezn.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gdMedium"] = "x2gd.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gdLarge"] = "x2gd.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gdXlarge"] = "x2gd.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gd2xlarge"] = "x2gd.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gd4xlarge"] = "x2gd.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gd8xlarge"] = "x2gd.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gd12xlarge"] = "x2gd.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gd16xlarge"] = "x2gd.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2gdMetal"] = "x2gd.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Z1dLarge"] = "z1d.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Z1dXlarge"] = "z1d.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Z1d2xlarge"] = "z1d.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Z1d3xlarge"] = "z1d.3xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Z1d6xlarge"] = "z1d.6xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Z1d12xlarge"] = "z1d.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Z1dMetal"] = "z1d.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2idn16xlarge"] = "x2idn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2idn24xlarge"] = "x2idn.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2idn32xlarge"] = "x2idn.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iednXlarge"] = "x2iedn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iedn2xlarge"] = "x2iedn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iedn4xlarge"] = "x2iedn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iedn8xlarge"] = "x2iedn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iedn16xlarge"] = "x2iedn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iedn24xlarge"] = "x2iedn.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iedn32xlarge"] = "x2iedn.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6aLarge"] = "c6a.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6aXlarge"] = "c6a.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6a2xlarge"] = "c6a.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6a4xlarge"] = "c6a.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6a8xlarge"] = "c6a.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6a12xlarge"] = "c6a.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6a16xlarge"] = "c6a.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6a24xlarge"] = "c6a.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6a32xlarge"] = "c6a.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6a48xlarge"] = "c6a.48xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6aMetal"] = "c6a.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6aMetal"] = "m6a.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I4iLarge"] = "i4i.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I4iXlarge"] = "i4i.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I4i2xlarge"] = "i4i.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I4i4xlarge"] = "i4i.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I4i8xlarge"] = "i4i.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I4i16xlarge"] = "i4i.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I4i32xlarge"] = "i4i.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["I4iMetal"] = "i4i.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2idnMetal"] = "x2idn.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["X2iednMetal"] = "x2iedn.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7gMedium"] = "c7g.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7gLarge"] = "c7g.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7gXlarge"] = "c7g.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7g2xlarge"] = "c7g.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7g4xlarge"] = "c7g.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7g8xlarge"] = "c7g.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7g12xlarge"] = "c7g.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7g16xlarge"] = "c7g.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Mac2Metal"] = "mac2.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6idLarge"] = "c6id.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6idXlarge"] = "c6id.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6id2xlarge"] = "c6id.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6id4xlarge"] = "c6id.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6id8xlarge"] = "c6id.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6id12xlarge"] = "c6id.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6id16xlarge"] = "c6id.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6id24xlarge"] = "c6id.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6id32xlarge"] = "c6id.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6idMetal"] = "c6id.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idLarge"] = "m6id.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idXlarge"] = "m6id.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6id2xlarge"] = "m6id.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6id4xlarge"] = "m6id.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6id8xlarge"] = "m6id.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6id12xlarge"] = "m6id.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6id16xlarge"] = "m6id.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6id24xlarge"] = "m6id.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6id32xlarge"] = "m6id.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idMetal"] = "m6id.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idLarge"] = "r6id.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idXlarge"] = "r6id.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6id2xlarge"] = "r6id.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6id4xlarge"] = "r6id.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6id8xlarge"] = "r6id.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6id12xlarge"] = "r6id.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6id16xlarge"] = "r6id.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6id24xlarge"] = "r6id.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6id32xlarge"] = "r6id.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idMetal"] = "r6id.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6aLarge"] = "r6a.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6aXlarge"] = "r6a.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6a2xlarge"] = "r6a.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6a4xlarge"] = "r6a.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6a8xlarge"] = "r6a.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6a12xlarge"] = "r6a.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6a16xlarge"] = "r6a.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6a24xlarge"] = "r6a.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6a32xlarge"] = "r6a.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6a48xlarge"] = "r6a.48xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6aMetal"] = "r6a.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["P4de24xlarge"] = "p4de.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U3tb156xlarge"] = "u-3tb1.56xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U18tb1112xlarge"] = "u-18tb1.112xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["U24tb1112xlarge"] = "u-24tb1.112xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Trn12xlarge"] = "trn1.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Trn132xlarge"] = "trn1.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["Hpc6id32xlarge"] = "hpc6id.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6inLarge"] = "c6in.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6inXlarge"] = "c6in.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6in2xlarge"] = "c6in.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6in4xlarge"] = "c6in.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6in8xlarge"] = "c6in.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6in12xlarge"] = "c6in.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6in16xlarge"] = "c6in.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6in24xlarge"] = "c6in.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C6in32xlarge"] = "c6in.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6inLarge"] = "m6in.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6inXlarge"] = "m6in.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6in2xlarge"] = "m6in.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6in4xlarge"] = "m6in.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6in8xlarge"] = "m6in.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6in12xlarge"] = "m6in.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6in16xlarge"] = "m6in.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6in24xlarge"] = "m6in.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6in32xlarge"] = "m6in.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idnLarge"] = "m6idn.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idnXlarge"] = "m6idn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idn2xlarge"] = "m6idn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idn4xlarge"] = "m6idn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idn8xlarge"] = "m6idn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idn12xlarge"] = "m6idn.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idn16xlarge"] = "m6idn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idn24xlarge"] = "m6idn.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M6idn32xlarge"] = "m6idn.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6inLarge"] = "r6in.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6inXlarge"] = "r6in.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6in2xlarge"] = "r6in.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6in4xlarge"] = "r6in.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6in8xlarge"] = "r6in.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6in12xlarge"] = "r6in.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6in16xlarge"] = "r6in.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6in24xlarge"] = "r6in.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6in32xlarge"] = "r6in.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idnLarge"] = "r6idn.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idnXlarge"] = "r6idn.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idn2xlarge"] = "r6idn.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idn4xlarge"] = "r6idn.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idn8xlarge"] = "r6idn.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idn12xlarge"] = "r6idn.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idn16xlarge"] = "r6idn.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idn24xlarge"] = "r6idn.24xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R6idn32xlarge"] = "r6idn.32xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["C7gMetal"] = "c7g.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7gMedium"] = "m7g.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7gLarge"] = "m7g.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7gXlarge"] = "m7g.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7g2xlarge"] = "m7g.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7g4xlarge"] = "m7g.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7g8xlarge"] = "m7g.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7g12xlarge"] = "m7g.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7g16xlarge"] = "m7g.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["M7gMetal"] = "m7g.metal";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7gMedium"] = "r7g.medium";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7gLarge"] = "r7g.large";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7gXlarge"] = "r7g.xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7g2xlarge"] = "r7g.2xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7g4xlarge"] = "r7g.4xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7g8xlarge"] = "r7g.8xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7g12xlarge"] = "r7g.12xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7g16xlarge"] = "r7g.16xlarge";
    GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum["R7gMetal"] = "r7g.metal";
})(GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataInstanceTypeEnum = {}));
/**
 * Describes a license configuration.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications.prototype, "licenseConfigurationArn", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications = GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications;
/**
 * Disables the automatic recovery behavior of your instance or sets it to default.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptionsAutoRecoveryEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptionsAutoRecoveryEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptionsAutoRecoveryEnum["Default"] = "default";
    GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptionsAutoRecoveryEnum["Disabled"] = "disabled";
})(GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptionsAutoRecoveryEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptionsAutoRecoveryEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptionsAutoRecoveryEnum = {}));
/**
 * The maintenance options for your instance.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions.prototype, "autoRecovery", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions = GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions;
/**
 * <p>Enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is <code>enabled</code>.</p> <note> <p>If you specify a value of <code>disabled</code>, you will not be able to access your instance metadata. </p> </note>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpEndpointEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpEndpointEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpEndpointEnum["Disabled"] = "disabled";
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpEndpointEnum["Enabled"] = "enabled";
})(GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpEndpointEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpEndpointEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpEndpointEnum = {}));
/**
 * <p>Enables or disables the IPv6 endpoint for the instance metadata service.</p> <p>Default: <code>disabled</code> </p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpProtocolIpv6Enum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpProtocolIpv6Enum) {
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpProtocolIpv6Enum["Disabled"] = "disabled";
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpProtocolIpv6Enum["Enabled"] = "enabled";
})(GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpProtocolIpv6Enum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpProtocolIpv6Enum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpProtocolIpv6Enum = {}));
/**
 * <p>Indicates whether IMDSv2 is <code>optional</code> or <code>required</code>.</p> <p> <code>optional</code> - When IMDSv2 is optional, you can choose to retrieve instance metadata with or without a session token in your request. If you retrieve the IAM role credentials without a token, the IMDSv1 role credentials are returned. If you retrieve the IAM role credentials using a valid session token, the IMDSv2 role credentials are returned.</p> <p> <code>required</code> - When IMDSv2 is required, you must send a session token with any instance metadata retrieval requests. In this state, retrieving the IAM role credentials always returns IMDSv2 credentials; IMDSv1 credentials are not available.</p> <p>Default: <code>optional</code> </p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpTokensEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpTokensEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpTokensEnum["Optional"] = "optional";
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpTokensEnum["Required"] = "required";
})(GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpTokensEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpTokensEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsHttpTokensEnum = {}));
/**
 * <p>Set to <code>enabled</code> to allow access to instance tags from the instance metadata. Set to <code>disabled</code> to turn off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags using the instance metadata</a>.</p> <p>Default: <code>disabled</code> </p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsInstanceMetadataTagsEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsInstanceMetadataTagsEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsInstanceMetadataTagsEnum["Disabled"] = "disabled";
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsInstanceMetadataTagsEnum["Enabled"] = "enabled";
})(GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsInstanceMetadataTagsEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsInstanceMetadataTagsEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsInstanceMetadataTagsEnum = {}));
/**
 * <p>The state of the metadata option changes.</p> <p> <code>pending</code> - The metadata options are being updated and the instance is not ready to process metadata traffic with the new selection.</p> <p> <code>applied</code> - The metadata options have been successfully applied on the instance.</p>
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsStateEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsStateEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsStateEnum["Pending"] = "pending";
    GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsStateEnum["Applied"] = "applied";
})(GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsStateEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsStateEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptionsStateEnum = {}));
/**
 * The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions.prototype, "httpEndpoint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions.prototype, "httpProtocolIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions.prototype, "httpPutResponseHopLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions.prototype, "httpTokens", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions.prototype, "instanceMetadataTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions.prototype, "state", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions = GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions;
/**
 * The monitoring for the instance.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataMonitoring = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataMonitoring, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataMonitoring() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataMonitoring.prototype, "enabled", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataMonitoring;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataMonitoring = GetLaunchTemplateDataResultLaunchTemplateDataMonitoring;
/**
 * Information about the IPv4 delegated prefixes assigned to a network interface.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes.prototype, "ipv4Prefix", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes = GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes;
/**
 * Describes an IPv6 address.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses.prototype, "ipv6Address", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses = GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses;
/**
 * Information about the IPv6 delegated prefixes assigned to a network interface.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes.prototype, "ipv6Prefix", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes = GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes;
/**
 * Describes a secondary private IPv4 address for a network interface.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses.prototype, "primary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses.prototype, "privateIpAddress", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses = GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses;
/**
 * Describes a network interface.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "associateCarrierIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "associatePublicIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "deleteOnTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "deviceIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "interfaceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "ipv4PrefixCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv4Prefixes,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "ipv4Prefixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "ipv6AddressCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Addresses,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "ipv6Addresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "ipv6PrefixCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesIpv6Prefixes,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "ipv6Prefixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "networkCardIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "networkInterfaceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "privateIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfacesPrivateIpAddresses,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "privateIpAddresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "secondaryPrivateIpAddressCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces.prototype, "subnetId", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces = GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces;
/**
 * The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of <code>dedicated</code> runs on single-tenant hardware.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum["Default"] = "default";
    GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum["Dedicated"] = "dedicated";
    GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum["Host"] = "host";
})(GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataPlacementTenancyEnum = {}));
/**
 * The placement of the instance.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataPlacement = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataPlacement, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataPlacement() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "affinity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "availabilityZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "groupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "hostId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "hostResourceGroupArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "partitionNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "spreadDomain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPlacement.prototype, "tenancy", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataPlacement;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataPlacement = GetLaunchTemplateDataResultLaunchTemplateDataPlacement;
/**
 * The type of hostname to assign to an instance.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptionsHostnameTypeEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptionsHostnameTypeEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptionsHostnameTypeEnum["IpName"] = "ip-name";
    GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptionsHostnameTypeEnum["ResourceName"] = "resource-name";
})(GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptionsHostnameTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptionsHostnameTypeEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptionsHostnameTypeEnum = {}));
/**
 * The options for the instance hostname.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions.prototype, "enableResourceNameDnsAAAARecord", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions.prototype, "enableResourceNameDnsARecord", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions.prototype, "hostnameType", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions = GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions;
/**
 * The type of resource to tag.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum;
(function (GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum) {
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["CapacityReservation"] = "capacity-reservation";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ClientVpnEndpoint"] = "client-vpn-endpoint";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["CustomerGateway"] = "customer-gateway";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["CarrierGateway"] = "carrier-gateway";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["CoipPool"] = "coip-pool";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["DedicatedHost"] = "dedicated-host";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["DhcpOptions"] = "dhcp-options";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["EgressOnlyInternetGateway"] = "egress-only-internet-gateway";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ElasticIp"] = "elastic-ip";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ElasticGpu"] = "elastic-gpu";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ExportImageTask"] = "export-image-task";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ExportInstanceTask"] = "export-instance-task";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Fleet"] = "fleet";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["FpgaImage"] = "fpga-image";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["HostReservation"] = "host-reservation";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Image"] = "image";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ImportImageTask"] = "import-image-task";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ImportSnapshotTask"] = "import-snapshot-task";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Instance"] = "instance";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["InstanceEventWindow"] = "instance-event-window";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["InternetGateway"] = "internet-gateway";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Ipam"] = "ipam";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["IpamPool"] = "ipam-pool";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["IpamScope"] = "ipam-scope";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Ipv4poolEc2"] = "ipv4pool-ec2";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Ipv6poolEc2"] = "ipv6pool-ec2";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["KeyPair"] = "key-pair";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["LaunchTemplate"] = "launch-template";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["LocalGateway"] = "local-gateway";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["LocalGatewayRouteTable"] = "local-gateway-route-table";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["LocalGatewayVirtualInterface"] = "local-gateway-virtual-interface";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["LocalGatewayVirtualInterfaceGroup"] = "local-gateway-virtual-interface-group";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["LocalGatewayRouteTableVpcAssociation"] = "local-gateway-route-table-vpc-association";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["LocalGatewayRouteTableVirtualInterfaceGroupAssociation"] = "local-gateway-route-table-virtual-interface-group-association";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Natgateway"] = "natgateway";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["NetworkAcl"] = "network-acl";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["NetworkInterface"] = "network-interface";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["NetworkInsightsAnalysis"] = "network-insights-analysis";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["NetworkInsightsPath"] = "network-insights-path";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["NetworkInsightsAccessScope"] = "network-insights-access-scope";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["NetworkInsightsAccessScopeAnalysis"] = "network-insights-access-scope-analysis";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["PlacementGroup"] = "placement-group";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["PrefixList"] = "prefix-list";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ReplaceRootVolumeTask"] = "replace-root-volume-task";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["ReservedInstances"] = "reserved-instances";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["RouteTable"] = "route-table";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["SecurityGroup"] = "security-group";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["SecurityGroupRule"] = "security-group-rule";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Snapshot"] = "snapshot";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["SpotFleetRequest"] = "spot-fleet-request";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["SpotInstancesRequest"] = "spot-instances-request";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Subnet"] = "subnet";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["SubnetCidrReservation"] = "subnet-cidr-reservation";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TrafficMirrorFilter"] = "traffic-mirror-filter";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TrafficMirrorSession"] = "traffic-mirror-session";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TrafficMirrorTarget"] = "traffic-mirror-target";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TransitGateway"] = "transit-gateway";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TransitGatewayAttachment"] = "transit-gateway-attachment";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TransitGatewayConnectPeer"] = "transit-gateway-connect-peer";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TransitGatewayMulticastDomain"] = "transit-gateway-multicast-domain";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TransitGatewayPolicyTable"] = "transit-gateway-policy-table";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TransitGatewayRouteTable"] = "transit-gateway-route-table";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TransitGatewayRouteTableAnnouncement"] = "transit-gateway-route-table-announcement";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Volume"] = "volume";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["Vpc"] = "vpc";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpcEndpoint"] = "vpc-endpoint";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpcEndpointConnection"] = "vpc-endpoint-connection";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpcEndpointService"] = "vpc-endpoint-service";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpcEndpointServicePermission"] = "vpc-endpoint-service-permission";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpcPeeringConnection"] = "vpc-peering-connection";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpnConnection"] = "vpn-connection";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpnGateway"] = "vpn-gateway";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpcFlowLog"] = "vpc-flow-log";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["CapacityReservationFleet"] = "capacity-reservation-fleet";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["TrafficMirrorFilterRule"] = "traffic-mirror-filter-rule";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpcEndpointConnectionDeviceType"] = "vpc-endpoint-connection-device-type";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VerifiedAccessInstance"] = "verified-access-instance";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VerifiedAccessGroup"] = "verified-access-group";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VerifiedAccessEndpoint"] = "verified-access-endpoint";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VerifiedAccessPolicy"] = "verified-access-policy";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VerifiedAccessTrustProvider"] = "verified-access-trust-provider";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpnConnectionDeviceType"] = "vpn-connection-device-type";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["VpcBlockPublicAccessExclusion"] = "vpc-block-public-access-exclusion";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["IpamResourceDiscovery"] = "ipam-resource-discovery";
    GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum["IpamResourceDiscoveryAssociation"] = "ipam-resource-discovery-association";
})(GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum = exports.GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum || (exports.GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsResourceTypeEnum = {}));
/**
 * Describes a tag.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags.prototype, "value", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags = GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags;
/**
 * The tags specification for the launch template.
 */
var GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications, _super);
    function GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataTagSpecificationsTags,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications.prototype, "tags", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications = GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications;
/**
 * The instance data.
 */
var GetLaunchTemplateDataResultLaunchTemplateData = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResultLaunchTemplateData, _super);
    function GetLaunchTemplateDataResultLaunchTemplateData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataBlockDeviceMappings,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "blockDeviceMappings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataCapacityReservationSpecification)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "capacityReservationSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataCpuOptions)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "cpuOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataCreditSpecification)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "creditSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "disableApiStop", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "disableApiTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "ebsOptimized", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataElasticGpuSpecifications,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "elasticGpuSpecifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataElasticInferenceAccelerators,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "elasticInferenceAccelerators", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataEnclaveOptions)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "enclaveOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataHibernationOptions)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "hibernationOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataIamInstanceProfile)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "iamInstanceProfile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "imageId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "instanceInitiatedShutdownBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceMarketOptions)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "instanceMarketOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataInstanceRequirements)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "instanceRequirements", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "instanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "kernelId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "keyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataLicenseSpecifications,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "licenseSpecifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataMaintenanceOptions)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "maintenanceOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataMetadataOptions)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "metadataOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataMonitoring)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "monitoring", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataNetworkInterfaces,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "networkInterfaces", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataPlacement)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "placement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateDataPrivateDnsNameOptions)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "privateDnsNameOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "ramDiskId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "securityGroupIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "securityGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetLaunchTemplateDataResultLaunchTemplateDataTagSpecifications,
        }),
        __metadata("design:type", Array)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "tagSpecifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetLaunchTemplateDataResultLaunchTemplateData.prototype, "userData", void 0);
    return GetLaunchTemplateDataResultLaunchTemplateData;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResultLaunchTemplateData = GetLaunchTemplateDataResultLaunchTemplateData;
/**
 * Success
 */
var GetLaunchTemplateDataResult = /** @class */ (function (_super) {
    __extends(GetLaunchTemplateDataResult, _super);
    function GetLaunchTemplateDataResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetLaunchTemplateDataResultLaunchTemplateData)
    ], GetLaunchTemplateDataResult.prototype, "launchTemplateData", void 0);
    return GetLaunchTemplateDataResult;
}(utils_1.SpeakeasyBase));
exports.GetLaunchTemplateDataResult = GetLaunchTemplateDataResult;
