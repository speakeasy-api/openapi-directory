"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import executionresults as shared_executionresults
from ..shared import executionstatus_enum as shared_executionstatus_enum
from ..shared import filelocation as shared_filelocation
from ..shared import loggingconfiguration as shared_loggingconfiguration
from ..shared import posixprofile as shared_posixprofile
from ..shared import servicemetadata as shared_servicemetadata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribedExecution:
    r"""The details for an execution object."""
    
    execution_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionId'), 'exclude': lambda f: f is None }})  
    execution_role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExecutionRole'), 'exclude': lambda f: f is None }})  
    initial_file_location: Optional[shared_filelocation.FileLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InitialFileLocation'), 'exclude': lambda f: f is None }})  
    logging_configuration: Optional[shared_loggingconfiguration.LoggingConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LoggingConfiguration'), 'exclude': lambda f: f is None }})  
    posix_profile: Optional[shared_posixprofile.PosixProfile] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PosixProfile'), 'exclude': lambda f: f is None }})
    r"""The full POSIX identity, including user ID (<code>Uid</code>), group ID (<code>Gid</code>), and any secondary groups IDs (<code>SecondaryGids</code>), that controls your users' access to your Amazon EFS file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems."""  
    results: Optional[shared_executionresults.ExecutionResults] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Results'), 'exclude': lambda f: f is None }})  
    service_metadata: Optional[shared_servicemetadata.ServiceMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceMetadata'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_executionstatus_enum.ExecutionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    