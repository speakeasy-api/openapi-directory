<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetRepositoriesRequest
{
    /**
     * Filter the results to include only repositories created on or
     * 
     * after this [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601)
     *  timestamp. Example: `YYYY-MM-DDTHH:mm:ss.sssZ`
     * 
     * @var ?string $after
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=after')]
    public ?string $after = null;
    
    /**
     * Query string to narrow down the response as per [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering).
     * 
     * `role` parameter must also be specified.
     * 
     * 
     * @var ?string $q
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q')]
    public ?string $q = null;
    
    /**
     * Filters the result based on the authenticated user's role on each repository.
     * 
     * 
     * * **member**: returns repositories to which the user has explicit read access
     * * **contributor**: returns repositories to which the user has explicit write access
     * * **admin**: returns repositories to which the user has explicit administrator access
     * * **owner**: returns all repositories owned by the current user
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetRepositoriesRoleEnum $role
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=role')]
    public ?GetRepositoriesRoleEnum $role = null;
    
    /**
     * Field by which the results should be sorted as per [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering).
     * 
     * 
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
	public function __construct()
	{
		$this->after = null;
		$this->q = null;
		$this->role = null;
		$this->sort = null;
	}
}
