/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Filters - A filter collection lists filters created by users in an Analytics account. Each resource in the collection corresponds to a filter.
 */
public class Filters {
    /**
     * A list of filters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public Filter[] items;

    public Filters withItems(Filter[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * The maximum number of resources the response can contain, regardless of the actual number of resources returned. Its value ranges from 1 to 1,000 with a value of 1000 by default, or otherwise specified by the max-results query parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemsPerPage")
    public Integer itemsPerPage;

    public Filters withItemsPerPage(Integer itemsPerPage) {
        this.itemsPerPage = itemsPerPage;
        return this;
    }
    
    /**
     * Collection type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Filters withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Link to next page for this filter collection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextLink")
    public String nextLink;

    public Filters withNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }
    
    /**
     * Link to previous page for this filter collection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previousLink")
    public String previousLink;

    public Filters withPreviousLink(String previousLink) {
        this.previousLink = previousLink;
        return this;
    }
    
    /**
     * The starting index of the resources, which is 1 by default or otherwise specified by the start-index query parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startIndex")
    public Integer startIndex;

    public Filters withStartIndex(Integer startIndex) {
        this.startIndex = startIndex;
        return this;
    }
    
    /**
     * The total number of results for the query, regardless of the number of results in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalResults")
    public Integer totalResults;

    public Filters withTotalResults(Integer totalResults) {
        this.totalResults = totalResults;
        return this;
    }
    
    /**
     * Email ID of the authenticated user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public Filters withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public Filters(){}
}
