/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ActionsSetGithubActionsPermissionsRepositoryRequestBody extends SpeakeasyBase {
  /**
   * The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `local_only`, or `selected`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowed_actions" })
  allowedActions?: shared.AllowedActionsEnum;

  /**
   * Whether GitHub Actions is enabled on the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;
}

export class ActionsSetGithubActionsPermissionsRepositoryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ActionsSetGithubActionsPermissionsRepositoryRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class ActionsSetGithubActionsPermissionsRepositoryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
