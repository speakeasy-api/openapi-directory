// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QueryGrantableRolesRequestViewEnum string

const (
	QueryGrantableRolesRequestViewEnumBasic QueryGrantableRolesRequestViewEnum = "BASIC"
	QueryGrantableRolesRequestViewEnumFull  QueryGrantableRolesRequestViewEnum = "FULL"
)

func (e *QueryGrantableRolesRequestViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BASIC":
		fallthrough
	case "FULL":
		*e = QueryGrantableRolesRequestViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryGrantableRolesRequestViewEnum: %s", s)
	}
}

// QueryGrantableRolesRequest - The grantable role query request.
type QueryGrantableRolesRequest struct {
	// Required. The full resource name to query from the list of grantable roles. The name follows the Google Cloud Platform resource format. For example, a Cloud Platform project with id `my-project` will be named `//cloudresourcemanager.googleapis.com/projects/my-project`.
	FullResourceName *string `json:"fullResourceName,omitempty"`
	// Optional limit on the number of roles to include in the response. The default is 300, and the maximum is 1,000.
	PageSize *int `json:"pageSize,omitempty"`
	// Optional pagination token returned in an earlier QueryGrantableRolesResponse.
	PageToken *string                             `json:"pageToken,omitempty"`
	View      *QueryGrantableRolesRequestViewEnum `json:"view,omitempty"`
}
