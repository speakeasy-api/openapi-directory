// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SchedulerAcceleratorConfigTypeEnum - Type of this accelerator.
type SchedulerAcceleratorConfigTypeEnum string

const (
	SchedulerAcceleratorConfigTypeEnumSchedulerAcceleratorTypeUnspecified SchedulerAcceleratorConfigTypeEnum = "SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED"
	SchedulerAcceleratorConfigTypeEnumNvidiaTeslaK80                      SchedulerAcceleratorConfigTypeEnum = "NVIDIA_TESLA_K80"
	SchedulerAcceleratorConfigTypeEnumNvidiaTeslaP100                     SchedulerAcceleratorConfigTypeEnum = "NVIDIA_TESLA_P100"
	SchedulerAcceleratorConfigTypeEnumNvidiaTeslaV100                     SchedulerAcceleratorConfigTypeEnum = "NVIDIA_TESLA_V100"
	SchedulerAcceleratorConfigTypeEnumNvidiaTeslaP4                       SchedulerAcceleratorConfigTypeEnum = "NVIDIA_TESLA_P4"
	SchedulerAcceleratorConfigTypeEnumNvidiaTeslaT4                       SchedulerAcceleratorConfigTypeEnum = "NVIDIA_TESLA_T4"
	SchedulerAcceleratorConfigTypeEnumNvidiaTeslaA100                     SchedulerAcceleratorConfigTypeEnum = "NVIDIA_TESLA_A100"
	SchedulerAcceleratorConfigTypeEnumTpuV2                               SchedulerAcceleratorConfigTypeEnum = "TPU_V2"
	SchedulerAcceleratorConfigTypeEnumTpuV3                               SchedulerAcceleratorConfigTypeEnum = "TPU_V3"
)

func (e *SchedulerAcceleratorConfigTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SCHEDULER_ACCELERATOR_TYPE_UNSPECIFIED":
		fallthrough
	case "NVIDIA_TESLA_K80":
		fallthrough
	case "NVIDIA_TESLA_P100":
		fallthrough
	case "NVIDIA_TESLA_V100":
		fallthrough
	case "NVIDIA_TESLA_P4":
		fallthrough
	case "NVIDIA_TESLA_T4":
		fallthrough
	case "NVIDIA_TESLA_A100":
		fallthrough
	case "TPU_V2":
		fallthrough
	case "TPU_V3":
		*e = SchedulerAcceleratorConfigTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SchedulerAcceleratorConfigTypeEnum: %s", s)
	}
}

// SchedulerAcceleratorConfig - Definition of a hardware accelerator. Note that not all combinations of `type` and `core_count` are valid. Check [GPUs on Compute Engine](https://cloud.google.com/compute/docs/gpus) to find a valid combination. TPUs are not supported.
type SchedulerAcceleratorConfig struct {
	// Count of cores of this accelerator.
	CoreCount *string `json:"coreCount,omitempty"`
	// Type of this accelerator.
	Type *SchedulerAcceleratorConfigTypeEnum `json:"type,omitempty"`
}
