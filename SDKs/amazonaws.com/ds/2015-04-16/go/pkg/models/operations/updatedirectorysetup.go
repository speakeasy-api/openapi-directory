// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDirectorySetupXAmzTargetEnum
type UpdateDirectorySetupXAmzTargetEnum string

const (
	UpdateDirectorySetupXAmzTargetEnumDirectoryService20150416UpdateDirectorySetup UpdateDirectorySetupXAmzTargetEnum = "DirectoryService_20150416.UpdateDirectorySetup"
)

func (e *UpdateDirectorySetupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DirectoryService_20150416.UpdateDirectorySetup":
		*e = UpdateDirectorySetupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDirectorySetupXAmzTargetEnum: %s", s)
	}
}

type UpdateDirectorySetupRequest struct {
	UpdateDirectorySetupRequest shared.UpdateDirectorySetupRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  UpdateDirectorySetupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateDirectorySetupResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientException
	ClientException interface{}
	ContentType     string
	// DirectoryDoesNotExistException
	DirectoryDoesNotExistException interface{}
	// DirectoryInDesiredStateException
	DirectoryInDesiredStateException interface{}
	// DirectoryUnavailableException
	DirectoryUnavailableException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// SnapshotLimitExceededException
	SnapshotLimitExceededException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ServiceException
	ServiceException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
	// Success
	UpdateDirectorySetupResult map[string]interface{}
}
