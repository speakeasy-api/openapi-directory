"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import dkimsigningkeylength_enum as shared_dkimsigningkeylength_enum
from ..shared import putemailidentitydkimsigningattributesresponse as shared_putemailidentitydkimsigningattributesresponse
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutEmailIdentityDkimSigningAttributesRequestBodySigningAttributes:
    r"""An object that contains configuration for Bring Your Own DKIM (BYODKIM), or, for Easy DKIM"""
    
    domain_signing_private_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainSigningPrivateKey'), 'exclude': lambda f: f is None }})  
    domain_signing_selector: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainSigningSelector'), 'exclude': lambda f: f is None }})  
    next_signing_key_length: Optional[shared_dkimsigningkeylength_enum.DkimSigningKeyLengthEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextSigningKeyLength'), 'exclude': lambda f: f is None }})  
    
class PutEmailIdentityDkimSigningAttributesRequestBodySigningAttributesOriginEnum(str, Enum):
    r"""<p>The method to use to configure DKIM for the identity. There are the following possible values:</p> <ul> <li> <p> <code>AWS_SES</code> – Configure DKIM for the identity by using <a href=\\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\\">Easy DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p> </li> </ul>"""
    AWS_SES = 'AWS_SES'
    EXTERNAL = 'EXTERNAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutEmailIdentityDkimSigningAttributesRequestBody:
    
    signing_attributes_origin: PutEmailIdentityDkimSigningAttributesRequestBodySigningAttributesOriginEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SigningAttributesOrigin') }})
    r"""<p>The method to use to configure DKIM for the identity. There are the following possible values:</p> <ul> <li> <p> <code>AWS_SES</code> – Configure DKIM for the identity by using <a href=\\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\\">Easy DKIM</a>.</p> </li> <li> <p> <code>EXTERNAL</code> – Configure DKIM for the identity by using Bring Your Own DKIM (BYODKIM).</p> </li> </ul>"""  
    signing_attributes: Optional[PutEmailIdentityDkimSigningAttributesRequestBodySigningAttributes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SigningAttributes'), 'exclude': lambda f: f is None }})
    r"""An object that contains configuration for Bring Your Own DKIM (BYODKIM), or, for Easy DKIM"""  
    

@dataclasses.dataclass
class PutEmailIdentityDkimSigningAttributesRequest:
    
    email_identity: str = dataclasses.field(metadata={'path_param': { 'field_name': 'EmailIdentity', 'style': 'simple', 'explode': False }})
    r"""The email identity."""  
    request_body: PutEmailIdentityDkimSigningAttributesRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class PutEmailIdentityDkimSigningAttributesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    bad_request_exception: Optional[Any] = dataclasses.field(default=None)
    r"""BadRequestException"""  
    not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""NotFoundException"""  
    put_email_identity_dkim_signing_attributes_response: Optional[shared_putemailidentitydkimsigningattributesresponse.PutEmailIdentityDkimSigningAttributesResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    too_many_requests_exception: Optional[Any] = dataclasses.field(default=None)
    r"""TooManyRequestsException"""  
    