"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import episode as shared_episode
from ..shared import error as shared_error
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetAPIV2BroadcastservicesSecurity:
    
    cd_oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetAPIV2BroadcastservicesOrderByIDEnum(str, Enum):
    r"""The sort order of the list of broadcast services, based on broadcast service ID. If unspecified, the broadcast services are returned in random order. If using paging to iterate through the results, sort order should be specified."""
    ASC = 'asc'
    DESC = 'desc'


@dataclasses.dataclass
class GetAPIV2BroadcastservicesRequest:
    
    order_by_id: Optional[GetAPIV2BroadcastservicesOrderByIDEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'orderById', 'style': 'form', 'explode': True }})
    r"""The sort order of the list of broadcast services, based on broadcast service ID. If unspecified, the broadcast services are returned in random order. If using paging to iterate through the results, sort order should be specified."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""The number of items to return. Must be between 0 and 500, inclusive."""  
    page_start: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageStart', 'style': 'form', 'explode': True }})
    r"""The start page of the results to return. The first item is indexed at 0."""  
    

@dataclasses.dataclass
class GetAPIV2BroadcastservicesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    episodes: Optional[list[shared_episode.Episode]] = dataclasses.field(default=None)
    r"""The matching broadcast services."""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""The request is missing required data or invalid."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    