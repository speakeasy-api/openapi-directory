"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class BankAccounts:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_bank_account(self, request: operations.GetBankAccountRequest, security: operations.GetBankAccountSecurity) -> operations.GetBankAccountResponse:
        r"""GetBankAccount
        Returns details of a [BankAccount](https://developer.squareup.com/reference/square_2021-08-18/objects/BankAccount)
        linked to a Square account.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetBankAccountRequest, base_url, '/v2/bank-accounts/{bank_account_id}', request)
        
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetBankAccountResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GetBankAccountResponse])
                res.get_bank_account_response = out

        return res

    def get_bank_account_by_v1_id(self, request: operations.GetBankAccountByV1IDRequest, security: operations.GetBankAccountByV1IDSecurity) -> operations.GetBankAccountByV1IDResponse:
        r"""GetBankAccountByV1Id
        Returns details of a [BankAccount](https://developer.squareup.com/reference/square_2021-08-18/objects/BankAccount) identified by V1 bank account ID.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetBankAccountByV1IDRequest, base_url, '/v2/bank-accounts/by-v1-id/{v1_bank_account_id}', request)
        
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetBankAccountByV1IDResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.GetBankAccountByV1IDResponse])
                res.get_bank_account_by_v1_id_response = out

        return res

    def list_bank_accounts(self, request: operations.ListBankAccountsRequest, security: operations.ListBankAccountsSecurity) -> operations.ListBankAccountsResponse:
        r"""ListBankAccounts
        Returns a list of [BankAccount](https://developer.squareup.com/reference/square_2021-08-18/objects/BankAccount) objects linked to a Square account.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/v2/bank-accounts'
        
        query_params = utils.get_query_params(operations.ListBankAccountsRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.ListBankAccountsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.ListBankAccountsResponse])
                res.list_bank_accounts_response = out

        return res

    