// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateSoftwareTokenXAmzTargetEnum
type AssociateSoftwareTokenXAmzTargetEnum string

const (
	AssociateSoftwareTokenXAmzTargetEnumAwsCognitoIdentityProviderServiceAssociateSoftwareToken AssociateSoftwareTokenXAmzTargetEnum = "AWSCognitoIdentityProviderService.AssociateSoftwareToken"
)

func (e AssociateSoftwareTokenXAmzTargetEnum) ToPointer() *AssociateSoftwareTokenXAmzTargetEnum {
	return &e
}

func (e *AssociateSoftwareTokenXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSCognitoIdentityProviderService.AssociateSoftwareToken":
		*e = AssociateSoftwareTokenXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateSoftwareTokenXAmzTargetEnum: %v", v)
	}
}

type AssociateSoftwareTokenRequest struct {
	AssociateSoftwareTokenRequest shared.AssociateSoftwareTokenRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    AssociateSoftwareTokenXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateSoftwareTokenResponse struct {
	// Success
	AssociateSoftwareTokenResponse *shared.AssociateSoftwareTokenResponse
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// ForbiddenException
	ForbiddenException interface{}
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// SoftwareTokenMFANotFoundException
	SoftwareTokenMFANotFoundException interface{}
	StatusCode                        int
	RawResponse                       *http.Response
}
