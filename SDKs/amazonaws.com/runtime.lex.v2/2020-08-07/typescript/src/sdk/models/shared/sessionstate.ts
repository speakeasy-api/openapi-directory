/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActiveContext } from "./activecontext";
import { DialogAction } from "./dialogaction";
import { Intent } from "./intent";
import { RuntimeHints } from "./runtimehints";
import { Expose, Type } from "class-transformer";

/**
 * The state of the user's session with Amazon Lex V2.
 */
export class SessionState extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ActiveContext })
  @Expose({ name: "activeContexts" })
  @Type(() => ActiveContext)
  activeContexts?: ActiveContext[];

  @SpeakeasyMetadata()
  @Expose({ name: "dialogAction" })
  @Type(() => DialogAction)
  dialogAction?: DialogAction;

  @SpeakeasyMetadata()
  @Expose({ name: "intent" })
  @Type(() => Intent)
  intent?: Intent;

  @SpeakeasyMetadata()
  @Expose({ name: "originatingRequestId" })
  originatingRequestId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "runtimeHints" })
  @Type(() => RuntimeHints)
  runtimeHints?: RuntimeHints;

  @SpeakeasyMetadata()
  @Expose({ name: "sessionAttributes" })
  sessionAttributes?: Record<string, string>;
}
