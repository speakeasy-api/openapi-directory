// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeSynonymOptionsActionEnum
type GETDescribeSynonymOptionsActionEnum string

const (
	GETDescribeSynonymOptionsActionEnumDescribeSynonymOptions GETDescribeSynonymOptionsActionEnum = "DescribeSynonymOptions"
)

func (e GETDescribeSynonymOptionsActionEnum) ToPointer() *GETDescribeSynonymOptionsActionEnum {
	return &e
}

func (e *GETDescribeSynonymOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeSynonymOptions":
		*e = GETDescribeSynonymOptionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeSynonymOptionsActionEnum: %v", v)
	}
}

// GETDescribeSynonymOptionsVersionEnum
type GETDescribeSynonymOptionsVersionEnum string

const (
	GETDescribeSynonymOptionsVersionEnumTwoThousandAndEleven0201 GETDescribeSynonymOptionsVersionEnum = "2011-02-01"
)

func (e GETDescribeSynonymOptionsVersionEnum) ToPointer() *GETDescribeSynonymOptionsVersionEnum {
	return &e
}

func (e *GETDescribeSynonymOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-02-01":
		*e = GETDescribeSynonymOptionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeSynonymOptionsVersionEnum: %v", v)
	}
}

type GETDescribeSynonymOptionsRequest struct {
	Action            GETDescribeSynonymOptionsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DomainName        string                               `queryParam:"style=form,explode=true,name=DomainName"`
	Version           GETDescribeSynonymOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeSynonymOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
