// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProjectStatusRequestColorEnum - The color associated with the status update.
type ProjectStatusRequestColorEnum string

const (
	ProjectStatusRequestColorEnumGreen  ProjectStatusRequestColorEnum = "green"
	ProjectStatusRequestColorEnumYellow ProjectStatusRequestColorEnum = "yellow"
	ProjectStatusRequestColorEnumRed    ProjectStatusRequestColorEnum = "red"
	ProjectStatusRequestColorEnumBlue   ProjectStatusRequestColorEnum = "blue"
)

func (e ProjectStatusRequestColorEnum) ToPointer() *ProjectStatusRequestColorEnum {
	return &e
}

func (e *ProjectStatusRequestColorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "green":
		fallthrough
	case "yellow":
		fallthrough
	case "red":
		fallthrough
	case "blue":
		*e = ProjectStatusRequestColorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectStatusRequestColorEnum: %v", v)
	}
}

// ProjectStatusRequestInput - *Deprecated: new integrations should prefer the `status_update` resource.*
// A *project status* is an update on the progress of a particular project, and is sent out to all project followers when created. These updates include both text describing the update and a color code intended to represent the overall state of the project: "green" for projects that are on track, "yellow" for projects at risk, and "red" for projects that are behind.
type ProjectStatusRequestInput struct {
	// The color associated with the status update.
	Color ProjectStatusRequestColorEnum `json:"color"`
	// [Opt In](/docs/input-output-options). The text content of the status update with formatting as HTML.
	HTMLText *string `json:"html_text,omitempty"`
	// The text content of the status update.
	Text string `json:"text"`
	// The title of the project status update.
	Title *string `json:"title,omitempty"`
}
