/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InitialStateConfig - Initial State for shielded instance, these are public keys which are safe to store in public
 */
public class InitialStateConfig {
    /**
     * The Key Database (db).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dbs")
    public FileContentBuffer[] dbs;

    public InitialStateConfig withDbs(FileContentBuffer[] dbs) {
        this.dbs = dbs;
        return this;
    }
    
    /**
     * The forbidden key database (dbx).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dbxs")
    public FileContentBuffer[] dbxs;

    public InitialStateConfig withDbxs(FileContentBuffer[] dbxs) {
        this.dbxs = dbxs;
        return this;
    }
    
    /**
     * The Key Exchange Key (KEK).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keks")
    public FileContentBuffer[] keks;

    public InitialStateConfig withKeks(FileContentBuffer[] keks) {
        this.keks = keks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pk")
    public FileContentBuffer pk;

    public InitialStateConfig withPk(FileContentBuffer pk) {
        this.pk = pk;
        return this;
    }
    
    public InitialStateConfig(){}
}
