/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EksContainer - EKS container properties are used in job definitions for Amazon EKS based job definitions to describe the properties for a container node in the pod that's launched as part of a job. This can't be specified for Amazon ECS based job definitions.
 */
public class EksContainer {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("args")
    public String[] args;

    public EksContainer withArgs(String[] args) {
        this.args = args;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("command")
    public String[] command;

    public EksContainer withCommand(String[] command) {
        this.command = command;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("env")
    public EksContainerEnvironmentVariable[] env;

    public EksContainer withEnv(EksContainerEnvironmentVariable[] env) {
        this.env = env;
        return this;
    }
    
    @JsonProperty("image")
    public String image;

    public EksContainer withImage(String image) {
        this.image = image;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imagePullPolicy")
    public String imagePullPolicy;

    public EksContainer withImagePullPolicy(String imagePullPolicy) {
        this.imagePullPolicy = imagePullPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public EksContainer withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resources")
    public EksContainerResourceRequirements resources;

    public EksContainer withResources(EksContainerResourceRequirements resources) {
        this.resources = resources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityContext")
    public EksContainerSecurityContext securityContext;

    public EksContainer withSecurityContext(EksContainerSecurityContext securityContext) {
        this.securityContext = securityContext;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumeMounts")
    public EksContainerVolumeMount[] volumeMounts;

    public EksContainer withVolumeMounts(EksContainerVolumeMount[] volumeMounts) {
        this.volumeMounts = volumeMounts;
        return this;
    }
    
    public EksContainer(@JsonProperty("image") String image) {
        this.image = image;
  }
}
