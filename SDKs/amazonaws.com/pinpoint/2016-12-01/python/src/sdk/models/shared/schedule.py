"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import campaigneventfilter as shared_campaigneventfilter
from ..shared import frequency_enum as shared_frequency_enum
from ..shared import quiettime as shared_quiettime
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Schedule:
    r"""Specifies the schedule settings for a campaign."""
    
    start_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartTime') }})  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndTime'), 'exclude': lambda f: f is None }})  
    event_filter: Optional[shared_campaigneventfilter.CampaignEventFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EventFilter'), 'exclude': lambda f: f is None }})  
    frequency: Optional[shared_frequency_enum.FrequencyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Frequency'), 'exclude': lambda f: f is None }})  
    is_local_time: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsLocalTime'), 'exclude': lambda f: f is None }})  
    quiet_time: Optional[shared_quiettime.QuietTime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QuietTime'), 'exclude': lambda f: f is None }})  
    timezone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Timezone'), 'exclude': lambda f: f is None }})  
    