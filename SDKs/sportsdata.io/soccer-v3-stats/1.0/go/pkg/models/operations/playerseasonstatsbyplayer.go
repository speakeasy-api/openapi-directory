// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PlayerSeasonStatsByPlayerFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PlayerSeasonStatsByPlayerFormatEnum string

const (
	PlayerSeasonStatsByPlayerFormatEnumXML  PlayerSeasonStatsByPlayerFormatEnum = "xml"
	PlayerSeasonStatsByPlayerFormatEnumJSON PlayerSeasonStatsByPlayerFormatEnum = "json"
)

func (e PlayerSeasonStatsByPlayerFormatEnum) ToPointer() *PlayerSeasonStatsByPlayerFormatEnum {
	return &e
}

func (e *PlayerSeasonStatsByPlayerFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xml":
		fallthrough
	case "json":
		*e = PlayerSeasonStatsByPlayerFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerSeasonStatsByPlayerFormatEnum: %v", v)
	}
}

type PlayerSeasonStatsByPlayerRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PlayerSeasonStatsByPlayerFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Player ID.
	// Example:<code>90026231</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
	// Unique FantasyData Round ID. RoundIDs can be found in the Competition Hierarchy (League Hierarchy).
	// Examples: <code>1</code>, <code>2</code>, <code>3</code>, etc
	Roundid string `pathParam:"style=simple,explode=false,name=roundid"`
}

type PlayerSeasonStatsByPlayerResponse struct {
	ContentType   string
	PlayerSeasons []shared.PlayerSeason
	StatusCode    int
	RawResponse   *http.Response
}
