/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostPortfolioAnalysisFactorsExposuresRequestBodyFactors extends SpeakeasyBase {
  /**
   * factorReturns[t] is the return of the factor at the time t; all the factorReturns arrays must have the same length, equal to the common length of the portfolioReturns arrays
   */
  @SpeakeasyMetadata()
  @Expose({ name: "factorReturns" })
  factorReturns: number[];
}

export class PostPortfolioAnalysisFactorsExposuresRequestBodyPortfolios extends SpeakeasyBase {
  /**
   * portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the common length of the factorReturns arrays
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioReturns" })
  portfolioReturns: number[];
}

export class PostPortfolioAnalysisFactorsExposuresRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: PostPortfolioAnalysisFactorsExposuresRequestBodyFactors,
  })
  @Expose({ name: "factors" })
  @Type(() => PostPortfolioAnalysisFactorsExposuresRequestBodyFactors)
  factors?: PostPortfolioAnalysisFactorsExposuresRequestBodyFactors[];

  @SpeakeasyMetadata({
    elemType: PostPortfolioAnalysisFactorsExposuresRequestBodyPortfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(() => PostPortfolioAnalysisFactorsExposuresRequestBodyPortfolios)
  portfolios: PostPortfolioAnalysisFactorsExposuresRequestBodyPortfolios[];
}

export class PostPortfolioAnalysisFactorsExposures200ApplicationJSONPortfolios extends SpeakeasyBase {
  /**
   * The portfolio alpha, which correponds to the portion of the portfolio returns that cannot be explained by the portfolio factor exposures
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioAlpha" })
  portfolioAlpha: number;

  /**
   * The portfolio betas, which correspond to the portfolio factor exposures
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioBetas" })
  portfolioBetas: number[];

  /**
   * The portfolio R^2, which indicates how much of the variability in the portfolio returns can be explained by the portfolio factor exposures; generally, the higher the R^2 the better the portfolio factor exposures explain the portfolio returns
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioRSquared" })
  portfolioRSquared: number;
}

/**
 * OK
 */
export class PostPortfolioAnalysisFactorsExposures200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: PostPortfolioAnalysisFactorsExposures200ApplicationJSONPortfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(() => PostPortfolioAnalysisFactorsExposures200ApplicationJSONPortfolios)
  portfolios: PostPortfolioAnalysisFactorsExposures200ApplicationJSONPortfolios[];
}

export class PostPortfolioAnalysisFactorsExposuresResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postPortfolioAnalysisFactorsExposures200ApplicationJSONObject?: PostPortfolioAnalysisFactorsExposures200ApplicationJSON;
}
