/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstancePatchStateFilter - &lt;p&gt;Defines a filter used in &lt;a&gt;DescribeInstancePatchStatesForPatchGroup&lt;/a&gt; to scope down the information returned by the API.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Example&lt;/b&gt;: To filter for all managed nodes in a patch group having more than three patches with a &lt;code&gt;FailedCount&lt;/code&gt; status, use the following for the filter:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Value for &lt;code&gt;Key&lt;/code&gt;: &lt;code&gt;FailedCount&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Value for &lt;code&gt;Type&lt;/code&gt;: &lt;code&gt;GreaterThan&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Value for &lt;code&gt;Values&lt;/code&gt;: &lt;code&gt;3&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
public class InstancePatchStateFilter {
    @JsonProperty("Key")
    public String key;

    public InstancePatchStateFilter withKey(String key) {
        this.key = key;
        return this;
    }
    
    @JsonProperty("Type")
    public InstancePatchStateOperatorTypeEnum type;

    public InstancePatchStateFilter withType(InstancePatchStateOperatorTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonProperty("Values")
    public String[] values;

    public InstancePatchStateFilter withValues(String[] values) {
        this.values = values;
        return this;
    }
    
    public InstancePatchStateFilter(@JsonProperty("Key") String key, @JsonProperty("Type") InstancePatchStateOperatorTypeEnum type, @JsonProperty("Values") String[] values) {
        this.key = key;
        this.type = type;
        this.values = values;
  }
}
