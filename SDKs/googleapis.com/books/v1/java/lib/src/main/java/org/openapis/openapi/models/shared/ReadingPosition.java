/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReadingPosition - Successful response
 */
public class ReadingPosition {
    /**
     * Position in an EPUB as a CFI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("epubCfiPosition")
    public String epubCfiPosition;
    public ReadingPosition withEpubCfiPosition(String epubCfiPosition) {
        this.epubCfiPosition = epubCfiPosition;
        return this;
    }
    
    /**
     * Position in a volume for image-based content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gbImagePosition")
    public String gbImagePosition;
    public ReadingPosition withGbImagePosition(String gbImagePosition) {
        this.gbImagePosition = gbImagePosition;
        return this;
    }
    
    /**
     * Position in a volume for text-based content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gbTextPosition")
    public String gbTextPosition;
    public ReadingPosition withGbTextPosition(String gbTextPosition) {
        this.gbTextPosition = gbTextPosition;
        return this;
    }
    
    /**
     * Resource type for a reading position.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public ReadingPosition withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Position in a PDF file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pdfPosition")
    public String pdfPosition;
    public ReadingPosition withPdfPosition(String pdfPosition) {
        this.pdfPosition = pdfPosition;
        return this;
    }
    
    /**
     * Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated")
    public String updated;
    public ReadingPosition withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    /**
     * Volume id associated with this reading position.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumeId")
    public String volumeId;
    public ReadingPosition withVolumeId(String volumeId) {
        this.volumeId = volumeId;
        return this;
    }
    
}
