"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import batch as shared_batch
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateBatchRequestBodyOperationEnum(str, Enum):
    WHOIS = 'whois'
    CHECK = 'check'

class CreateBatchRequestBodyOptionsFormatEnum(str, Enum):
    RAW = 'raw'
    FORMATTED = 'formatted'
    JSON = 'json'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchRequestBodyOptions:
    
    format: Optional[CreateBatchRequestBodyOptionsFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateBatchRequestBody:
    
    domains: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domains') }})  
    operation: CreateBatchRequestBodyOperationEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operation') }})  
    options: Optional[CreateBatchRequestBodyOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class CreateBatchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    batch: Optional[shared_batch.Batch] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    