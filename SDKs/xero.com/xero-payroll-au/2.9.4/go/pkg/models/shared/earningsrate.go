// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type EarningsRate struct {
	// See Accounts
	AccountCode *string `json:"AccountCode,omitempty"`
	// Indicates that this earnings rate should accrue leave. Only applicable if RateType is MULTIPLE
	AccrueLeave   *bool              `json:"AccrueLeave,omitempty"`
	AllowanceType *AllowanceTypeEnum `json:"AllowanceType,omitempty"`
	// Optional Amount for FIXEDAMOUNT RateType EarningsRate
	Amount *float64 `json:"Amount,omitempty"`
	// Is the current record
	CurrentRecord *bool `json:"CurrentRecord,omitempty"`
	// Xero identifier
	EarningsRateID                   *string                               `json:"EarningsRateID,omitempty"`
	EarningsType                     *EarningsTypeEnum                     `json:"EarningsType,omitempty"`
	EmploymentTerminationPaymentType *EmploymentTerminationPaymentTypeEnum `json:"EmploymentTerminationPaymentType,omitempty"`
	// See the ATO website for details of which payments are exempt from SGC
	IsExemptFromSuper *bool `json:"IsExemptFromSuper,omitempty"`
	// Most payments are subject to tax, so you should only set this value if you are sure that a payment is exempt from PAYG withholding
	IsExemptFromTax *bool `json:"IsExemptFromTax,omitempty"`
	// Boolean to determine if the earnings rate is reportable or exempt from W1
	IsReportableAsW1 *bool `json:"IsReportableAsW1,omitempty"`
	// This is the multiplier used to calculate the rate per unit, based on the employee’s ordinary earnings rate. For example, for time and a half enter 1.5. Only applicable if RateType is MULTIPLE
	Multiplier *float64 `json:"Multiplier,omitempty"`
	// Name of the earnings rate (max length = 100)
	Name *string `json:"Name,omitempty"`
	// Default rate per unit (optional). Only applicable if RateType is RATEPERUNIT.
	RatePerUnit *string       `json:"RatePerUnit,omitempty"`
	RateType    *RateTypeEnum `json:"RateType,omitempty"`
	// Type of units used to record earnings (max length = 50). Only When RateType is RATEPERUNIT
	TypeOfUnits *string `json:"TypeOfUnits,omitempty"`
	// Last modified timestamp
	UpdatedDateUTC *string `json:"UpdatedDateUTC,omitempty"`
}

type EarningsRateInput struct {
	// See Accounts
	AccountCode *string `json:"AccountCode,omitempty"`
	// Indicates that this earnings rate should accrue leave. Only applicable if RateType is MULTIPLE
	AccrueLeave   *bool              `json:"AccrueLeave,omitempty"`
	AllowanceType *AllowanceTypeEnum `json:"AllowanceType,omitempty"`
	// Optional Amount for FIXEDAMOUNT RateType EarningsRate
	Amount *float64 `json:"Amount,omitempty"`
	// Is the current record
	CurrentRecord *bool `json:"CurrentRecord,omitempty"`
	// Xero identifier
	EarningsRateID                   *string                               `json:"EarningsRateID,omitempty"`
	EarningsType                     *EarningsTypeEnum                     `json:"EarningsType,omitempty"`
	EmploymentTerminationPaymentType *EmploymentTerminationPaymentTypeEnum `json:"EmploymentTerminationPaymentType,omitempty"`
	// See the ATO website for details of which payments are exempt from SGC
	IsExemptFromSuper *bool `json:"IsExemptFromSuper,omitempty"`
	// Most payments are subject to tax, so you should only set this value if you are sure that a payment is exempt from PAYG withholding
	IsExemptFromTax *bool `json:"IsExemptFromTax,omitempty"`
	// Boolean to determine if the earnings rate is reportable or exempt from W1
	IsReportableAsW1 *bool `json:"IsReportableAsW1,omitempty"`
	// This is the multiplier used to calculate the rate per unit, based on the employee’s ordinary earnings rate. For example, for time and a half enter 1.5. Only applicable if RateType is MULTIPLE
	Multiplier *float64 `json:"Multiplier,omitempty"`
	// Name of the earnings rate (max length = 100)
	Name *string `json:"Name,omitempty"`
	// Default rate per unit (optional). Only applicable if RateType is RATEPERUNIT.
	RatePerUnit *string       `json:"RatePerUnit,omitempty"`
	RateType    *RateTypeEnum `json:"RateType,omitempty"`
	// Type of units used to record earnings (max length = 50). Only When RateType is RATEPERUNIT
	TypeOfUnits *string `json:"TypeOfUnits,omitempty"`
}
