// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PlatformDifferenceEnum string

const (
	PlatformDifferenceEnumHypervisor                PlatformDifferenceEnum = "Hypervisor"
	PlatformDifferenceEnumNetworkInterface          PlatformDifferenceEnum = "NetworkInterface"
	PlatformDifferenceEnumStorageInterface          PlatformDifferenceEnum = "StorageInterface"
	PlatformDifferenceEnumInstanceStoreAvailability PlatformDifferenceEnum = "InstanceStoreAvailability"
	PlatformDifferenceEnumVirtualizationType        PlatformDifferenceEnum = "VirtualizationType"
	PlatformDifferenceEnumArchitecture              PlatformDifferenceEnum = "Architecture"
)

func (e *PlatformDifferenceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Hypervisor":
		fallthrough
	case "NetworkInterface":
		fallthrough
	case "StorageInterface":
		fallthrough
	case "InstanceStoreAvailability":
		fallthrough
	case "VirtualizationType":
		fallthrough
	case "Architecture":
		*e = PlatformDifferenceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlatformDifferenceEnum: %s", s)
	}
}
