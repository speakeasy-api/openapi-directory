/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * BatchLoadTaskDescription - Details about a batch load task.
 */
public class BatchLoadTaskDescription {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public BatchLoadTaskDescription withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataModelConfiguration")
    public DataModelConfiguration dataModelConfiguration;
    public BatchLoadTaskDescription withDataModelConfiguration(DataModelConfiguration dataModelConfiguration) {
        this.dataModelConfiguration = dataModelConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataSourceConfiguration")
    public DataSourceConfiguration dataSourceConfiguration;
    public BatchLoadTaskDescription withDataSourceConfiguration(DataSourceConfiguration dataSourceConfiguration) {
        this.dataSourceConfiguration = dataSourceConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorMessage")
    public String errorMessage;
    public BatchLoadTaskDescription withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedTime")
    public OffsetDateTime lastUpdatedTime;
    public BatchLoadTaskDescription withLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProgressReport")
    public BatchLoadProgressReport progressReport;
    public BatchLoadTaskDescription withProgressReport(BatchLoadProgressReport progressReport) {
        this.progressReport = progressReport;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecordVersion")
    public Long recordVersion;
    public BatchLoadTaskDescription withRecordVersion(Long recordVersion) {
        this.recordVersion = recordVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReportConfiguration")
    public ReportConfiguration reportConfiguration;
    public BatchLoadTaskDescription withReportConfiguration(ReportConfiguration reportConfiguration) {
        this.reportConfiguration = reportConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ResumableUntil")
    public OffsetDateTime resumableUntil;
    public BatchLoadTaskDescription withResumableUntil(OffsetDateTime resumableUntil) {
        this.resumableUntil = resumableUntil;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetDatabaseName")
    public String targetDatabaseName;
    public BatchLoadTaskDescription withTargetDatabaseName(String targetDatabaseName) {
        this.targetDatabaseName = targetDatabaseName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetTableName")
    public String targetTableName;
    public BatchLoadTaskDescription withTargetTableName(String targetTableName) {
        this.targetTableName = targetTableName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaskId")
    public String taskId;
    public BatchLoadTaskDescription withTaskId(String taskId) {
        this.taskId = taskId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaskStatus")
    public BatchLoadStatusEnum taskStatus;
    public BatchLoadTaskDescription withTaskStatus(BatchLoadStatusEnum taskStatus) {
        this.taskStatus = taskStatus;
        return this;
    }
    
}
