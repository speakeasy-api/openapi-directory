<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NetworkAddress - A network.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NetworkAddress
{
    /**
     * IP address to be assigned to the server.
     * 
     * @var ?string $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address = null;
    
    /**
     * Name of the existing network to use. Will be of the format at--vlan for pre-intake UI networks like for eg, at-123456-vlan001 or any user-defined name like for eg, my-network-name for networks provisioned using intake UI. The field is exclusively filled only in case of an already existing network. Mutually exclusive with network_id.
     * 
     * @var ?string $existingNetworkId
     */
	#[\JMS\Serializer\Annotation\SerializedName('existingNetworkId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $existingNetworkId = null;
    
    /**
     * Name of the network to use, within the same ProvisioningConfig request. This represents a new network being provisioned in the same request. Can have any user-defined name like for eg, my-network-name. Mutually exclusive with existing_network_id.
     * 
     * @var ?string $networkId
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkId = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->existingNetworkId = null;
		$this->networkId = null;
	}
}
