/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePlayDeveloperReportingV1beta1FreshnessInfoFreshness } from "./googleplaydeveloperreportingv1beta1freshnessinfofreshness";
import { Expose, Type } from "class-transformer";

/**
 * Represents the latest available time that can be requested in a TimelineSpec. Different aggregation periods have different freshness. For example, `DAILY` aggregation may lag behind `HOURLY` in cases where such aggregation is computed only once at the end of the day.
 */
export class GooglePlayDeveloperReportingV1beta1FreshnessInfo extends SpeakeasyBase {
  /**
   * Information about data freshness for every supported aggregation period. This field has set semantics, keyed by the `aggregation_period` field.
   */
  @SpeakeasyMetadata({
    elemType: GooglePlayDeveloperReportingV1beta1FreshnessInfoFreshness,
  })
  @Expose({ name: "freshnesses" })
  @Type(() => GooglePlayDeveloperReportingV1beta1FreshnessInfoFreshness)
  freshnesses?: GooglePlayDeveloperReportingV1beta1FreshnessInfoFreshness[];
}
