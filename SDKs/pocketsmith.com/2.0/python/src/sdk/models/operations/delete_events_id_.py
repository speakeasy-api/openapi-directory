"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from enum import Enum
from typing import Optional

class DeleteEventsIDBehaviourEnum(str, Enum):
    r"""Whether the delete applies only to this event, to all events within the series from this event or to all events within the series."""
    ONE = 'one'
    FORWARD = 'forward'
    ALL = 'all'


@dataclasses.dataclass
class DeleteEventsIDRequest:
    
    behaviour: DeleteEventsIDBehaviourEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'behaviour', 'style': 'form', 'explode': True }})
    r"""Whether the delete applies only to this event, to all events within the series from this event or to all events within the series."""  
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the event."""  
    

@dataclasses.dataclass
class DeleteEventsIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Bad Request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    