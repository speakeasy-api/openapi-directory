/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Accelerator - An accelerator is a complex type that includes one or more listeners that process inbound connections and then direct traffic to one or more endpoint groups, each of which includes endpoints, such as load balancers.
 */
public class Accelerator {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AcceleratorArn")
    public String acceleratorArn;
    public Accelerator withAcceleratorArn(String acceleratorArn) {
        this.acceleratorArn = acceleratorArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedTime")
    public OffsetDateTime createdTime;
    public Accelerator withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DnsName")
    public String dnsName;
    public Accelerator withDnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DualStackDnsName")
    public String dualStackDnsName;
    public Accelerator withDualStackDnsName(String dualStackDnsName) {
        this.dualStackDnsName = dualStackDnsName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Enabled")
    public Boolean enabled;
    public Accelerator withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Events")
    public AcceleratorEvent[] events;
    public Accelerator withEvents(AcceleratorEvent[] events) {
        this.events = events;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IpAddressType")
    public IpAddressTypeEnum ipAddressType;
    public Accelerator withIpAddressType(IpAddressTypeEnum ipAddressType) {
        this.ipAddressType = ipAddressType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IpSets")
    public IpSet[] ipSets;
    public Accelerator withIpSets(IpSet[] ipSets) {
        this.ipSets = ipSets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;
    public Accelerator withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public Accelerator withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public AcceleratorStatusEnum status;
    public Accelerator withStatus(AcceleratorStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
