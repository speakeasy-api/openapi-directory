// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var CreatePlayerStreamerServerList = []string{
	"https://media.twilio.com",
}

type CreatePlayerStreamerSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum - The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
type CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum string

const (
	CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnumHead   CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum = "HEAD"
	CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnumGet    CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum = "GET"
	CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnumPost   CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum = "POST"
	CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnumPatch  CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum = "PATCH"
	CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnumPut    CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum = "PUT"
	CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnumDelete CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum = "DELETE"
)

func (e *CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum: %s", s)
	}
}

type CreatePlayerStreamerCreatePlayerStreamerRequest struct {
	// The maximum time, in seconds, that the PlayerStreamer is active (`created` or `started`) before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the PlayerStreamer, regardless of whether media is still streaming.
	MaxDuration *int64 `form:"name=MaxDuration"`
	// The URL to which Twilio will send asynchronous webhook requests for every PlayerStreamer event. See [Status Callbacks](/docs/live/status-callbacks) for more details.
	StatusCallback *string `form:"name=StatusCallback"`
	// The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
	StatusCallbackMethod *CreatePlayerStreamerCreatePlayerStreamerRequestStatusCallbackMethodEnum `form:"name=StatusCallbackMethod"`
	// Specifies whether the PlayerStreamer is configured to stream video. Defaults to `true`.
	Video *bool `form:"name=Video"`
}

type CreatePlayerStreamerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	MediaV1PlayerStreamer *shared.MediaV1PlayerStreamer
}
