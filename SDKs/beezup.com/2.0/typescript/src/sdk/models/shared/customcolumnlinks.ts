/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LinksCatalogChangeCustomColumnExpressionLink } from "./linkscatalogchangecustomcolumnexpressionlink";
import { LinksCatalogChangeCustomColumnUserNameLink } from "./linkscatalogchangecustomcolumnusernamelink";
import { LinksCatalogDeleteCustomColumnLink } from "./linkscatalogdeletecustomcolumnlink";
import { LinksCatalogGetCustomColumnExpressionLink } from "./linkscataloggetcustomcolumnexpressionlink";
import { LinksCatalogSaveCustomColumnLink } from "./linkscatalogsavecustomcolumnlink";
import { Expose, Type } from "class-transformer";

export class CustomColumnLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "delete" })
  @Type(() => LinksCatalogDeleteCustomColumnLink)
  delete: LinksCatalogDeleteCustomColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "expression" })
  @Type(() => LinksCatalogGetCustomColumnExpressionLink)
  expression: LinksCatalogGetCustomColumnExpressionLink;

  @SpeakeasyMetadata()
  @Expose({ name: "rename" })
  @Type(() => LinksCatalogChangeCustomColumnUserNameLink)
  rename: LinksCatalogChangeCustomColumnUserNameLink;

  @SpeakeasyMetadata()
  @Expose({ name: "save" })
  @Type(() => LinksCatalogSaveCustomColumnLink)
  save: LinksCatalogSaveCustomColumnLink;

  @SpeakeasyMetadata()
  @Expose({ name: "saveExpression" })
  @Type(() => LinksCatalogChangeCustomColumnExpressionLink)
  saveExpression: LinksCatalogChangeCustomColumnExpressionLink;
}
