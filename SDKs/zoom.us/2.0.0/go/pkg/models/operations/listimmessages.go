// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListimmessagesSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type ListimmessagesPathParams struct {
	// The user ID or email address.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type ListimmessagesQueryParams struct {
	// IM Channel's ID.
	Channel *string `queryParam:"style=form,explode=true,name=channel"`
	// Chat user's ID or email address.
	ChatUser *string `queryParam:"style=form,explode=true,name=chat_user"`
	// IM message's query date time, format as yyyy-MM-dd.
	Date *string `queryParam:"style=form,explode=true,name=date"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

type ListimmessagesRequest struct {
	PathParams  ListimmessagesPathParams
	QueryParams ListimmessagesQueryParams
	Security    ListimmessagesSecurity
}

type Listimmessages200ApplicationXMLMessages struct {
	// IM message send time.
	DateTime *time.Time
	// IM message UUID.
	ID *string
	// IM message content.
	Message *string
	// IM message sender.
	Sender *string
	// IM message send timestamp.
	Timstamp *int64
}

// Listimmessages200ApplicationXML - **HTTP Status Code:** `200`<br>
// User's IM messages returned.
type Listimmessages200ApplicationXML struct {
	// Query date time, format as yyyy-mm-dd.
	Date *time.Time
	// Array of im messages.
	Messages []Listimmessages200ApplicationXMLMessages
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// The number of records returned within a single API call.
	PageSize *int64
}

type Listimmessages200ApplicationJSONMessages struct {
	// IM message send time.
	DateTime *time.Time `json:"date_time,omitempty"`
	// IM message UUID.
	ID *string `json:"id,omitempty"`
	// IM message content.
	Message *string `json:"message,omitempty"`
	// IM message sender.
	Sender *string `json:"sender,omitempty"`
	// IM message send timestamp.
	Timstamp *int64 `json:"timstamp,omitempty"`
}

// Listimmessages200ApplicationJSON - **HTTP Status Code:** `200`<br>
// User's IM messages returned.
type Listimmessages200ApplicationJSON struct {
	// Query date time, format as yyyy-mm-dd.
	Date *time.Time `json:"date,omitempty"`
	// Array of im messages.
	Messages []Listimmessages200ApplicationJSONMessages `json:"messages,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of records returned within a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
}

type ListimmessagesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// User's IM messages returned.
	Listimmessages200ApplicationJSONObject *Listimmessages200ApplicationJSON
}
