// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeFlywheelXAmzTargetEnum
type DescribeFlywheelXAmzTargetEnum string

const (
	DescribeFlywheelXAmzTargetEnumComprehend20171127DescribeFlywheel DescribeFlywheelXAmzTargetEnum = "Comprehend_20171127.DescribeFlywheel"
)

func (e *DescribeFlywheelXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Comprehend_20171127.DescribeFlywheel":
		*e = DescribeFlywheelXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFlywheelXAmzTargetEnum: %s", s)
	}
}

type DescribeFlywheelRequest struct {
	DescribeFlywheelRequest shared.DescribeFlywheelRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              DescribeFlywheelXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeFlywheelResponse struct {
	ContentType string
	// Success
	DescribeFlywheelResponse *shared.DescribeFlywheelResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
