"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import auditprimarycategorypage as shared_auditprimarycategorypage
from typing import Optional


@dataclasses.dataclass
class GetAuditPrimaryCategoryRequest:
    
    api_key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""API key for https://api.data.gov. Get one at https://api.data.gov/signup."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""For paginating through results, starting at page 1"""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""The number of results returned per page. Defaults to 20."""  
    primary_category_id: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'primary_category_id', 'style': 'form', 'explode': True }})
    r"""Audit category ID (table PK)"""  
    primary_category_name: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'primary_category_name', 'style': 'form', 'explode': True }})
    r"""Primary Audit Category
        - No Findings or Issues/Not a Committee
        - Net Outstanding Campaign/Convention Expenditures/Obligations
        - Payments/Disgorgements
        - Allocation Issues
        - Prohibited Contributions
        - Disclosure
        - Recordkeeping
        - Repayment to US Treasury
        - Other
        - Misstatement of Financial Activity
        - Excessive Contributions
        - Failure to File Reports/Schedules/Notices
        - Loans
        - Referred Findings Not Listed
    """  
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Provide a field to sort by. Use `-` for descending order."""  
    sort_hide_null: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_hide_null', 'style': 'form', 'explode': True }})
    r"""Hide null values on sorted column(s)."""  
    sort_null_only: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_null_only', 'style': 'form', 'explode': True }})
    r"""Toggle that filters out all rows having sort column that is non-null"""  
    sort_nulls_last: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_nulls_last', 'style': 'form', 'explode': True }})
    r"""Toggle that sorts null values last"""  
    

@dataclasses.dataclass
class GetAuditPrimaryCategoryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    audit_primary_category_page: Optional[shared_auditprimarycategorypage.AuditPrimaryCategoryPage] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    