/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ResourceServerRepresentation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowRemoteResourceManagement")
    public Boolean allowRemoteResourceManagement;
    public ResourceServerRepresentation withAllowRemoteResourceManagement(Boolean allowRemoteResourceManagement) {
        this.allowRemoteResourceManagement = allowRemoteResourceManagement;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;
    public ResourceServerRepresentation withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("decisionStrategy")
    public ResourceServerRepresentationDecisionStrategyEnum decisionStrategy;
    public ResourceServerRepresentation withDecisionStrategy(ResourceServerRepresentationDecisionStrategyEnum decisionStrategy) {
        this.decisionStrategy = decisionStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ResourceServerRepresentation withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ResourceServerRepresentation withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policies")
    public PolicyRepresentation[] policies;
    public ResourceServerRepresentation withPolicies(PolicyRepresentation[] policies) {
        this.policies = policies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyEnforcementMode")
    public ResourceServerRepresentationPolicyEnforcementModeEnum policyEnforcementMode;
    public ResourceServerRepresentation withPolicyEnforcementMode(ResourceServerRepresentationPolicyEnforcementModeEnum policyEnforcementMode) {
        this.policyEnforcementMode = policyEnforcementMode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resources")
    public ResourceRepresentation[] resources;
    public ResourceServerRepresentation withResources(ResourceRepresentation[] resources) {
        this.resources = resources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopes")
    public ScopeRepresentation[] scopes;
    public ResourceServerRepresentation withScopes(ScopeRepresentation[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
}
