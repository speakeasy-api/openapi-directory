"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatacatalogv1cloudsqlbigqueryconnectionspec as shared_googleclouddatacatalogv1cloudsqlbigqueryconnectionspec
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionTypeEnum(str, Enum):
    r"""The type of the BigQuery connection."""
    CONNECTION_TYPE_UNSPECIFIED = 'CONNECTION_TYPE_UNSPECIFIED'
    CLOUD_SQL = 'CLOUD_SQL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1BigQueryConnectionSpec:
    r"""Specification for the BigQuery connection."""
    
    cloud_sql: Optional[shared_googleclouddatacatalogv1cloudsqlbigqueryconnectionspec.GoogleCloudDatacatalogV1CloudSQLBigQueryConnectionSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudSql'), 'exclude': lambda f: f is None }})
    r"""Specification for the BigQuery connection to a Cloud SQL instance."""  
    connection_type: Optional[GoogleCloudDatacatalogV1BigQueryConnectionSpecConnectionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectionType'), 'exclude': lambda f: f is None }})
    r"""The type of the BigQuery connection."""  
    has_credential: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hasCredential'), 'exclude': lambda f: f is None }})
    r"""True if there are credentials attached to the BigQuery connection; false otherwise."""  
    