<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateArtifactVersionRequest
{
    /**
     * The content of the artifact version being created. This is often, but not always, JSON data
     * 
     * representing one of the supported artifact types:
     * 
     * * Avro (`AVRO`)
     * * Protobuf (`PROTOBUF`)
     * * Protobuf File Descriptor (`PROTOBUF_FD`)
     * * JSON Schema (`JSON`)
     * * Kafka Connect (`KCONNECT`)
     * * OpenAPI (`OPENAPI`)
     * * AsyncAPI (`ASYNCAPI`)
     * * GraphQL (`GRAPHQL`)
     * * Web Services Description Language (`WSDL`)
     * * XML Schema (`XSD`)
     * 
     * 
     * @var string $requestBody
     */
	#[SpeakeasyMetadata('request:mediaType=*/*')]
    public string $requestBody;
    
    /**
     * This header parameter can be used to indicate the type of the artifact being added. Possible values include: 
     * 
     * * Avro (`AVRO`)   
     * * Protobuf (`PROTOBUF`)  
     * * Protobuf File Descriptor (`PROTOBUF_FD`)   
     * * JSON Schema (`JSON`)   
     * * Kafka Connect (`KCONNECT`)   
     * * OpenAPI (`OPENAPI`)   
     * * AsyncAPI (`ASYNCAPI`)  
     * * GraphQL (`GRAPHQL`)   
     * * Web Services Description Language (`WSDL`)   
     * * XML Schema (`XSD`)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateArtifactVersionXRegistryArtifactTypeEnum $xRegistryArtifactType
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Registry-ArtifactType')]
    public ?CreateArtifactVersionXRegistryArtifactTypeEnum $xRegistryArtifactType = null;
    
    /**
     * The artifact ID.  Can be a string (client-provided) or integer (server-generated) representing the unique artifact identifier.
     * 
     * @var string $artifactId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=artifactId')]
    public string $artifactId;
    
	public function __construct()
	{
		$this->requestBody = "";
		$this->xRegistryArtifactType = null;
		$this->artifactId = "";
	}
}
