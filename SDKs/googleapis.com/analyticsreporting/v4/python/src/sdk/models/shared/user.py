"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UserTypeEnum(str, Enum):
    r"""Type of the user in the request. The field `userId` is associated with this type."""
    USER_ID_TYPE_UNSPECIFIED = 'USER_ID_TYPE_UNSPECIFIED'
    USER_ID = 'USER_ID'
    CLIENT_ID = 'CLIENT_ID'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class User:
    r"""Contains information to identify a particular user uniquely."""
    
    type: Optional[UserTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the user in the request. The field `userId` is associated with this type."""  
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userId'), 'exclude': lambda f: f is None }})
    r"""Unique Id of the user for which the data is being requested."""  
    