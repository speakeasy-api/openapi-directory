// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RequiresRecreationEnum string

const (
	RequiresRecreationEnumNever         RequiresRecreationEnum = "NEVER"
	RequiresRecreationEnumConditionally RequiresRecreationEnum = "CONDITIONALLY"
	RequiresRecreationEnumAlways        RequiresRecreationEnum = "ALWAYS"
)

func (e *RequiresRecreationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NEVER":
		fallthrough
	case "CONDITIONALLY":
		fallthrough
	case "ALWAYS":
		*e = RequiresRecreationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequiresRecreationEnum: %s", s)
	}
}
