"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timeslicedelpnetmetrics as shared_timeslicedelpnetmetrics
from ..shared import timeslicedmetrics as shared_timeslicedmetrics
from ..shared import timeslicednetmetrics as shared_timeslicednetmetrics
from ..shared import timeslicedtcbnetmetrics as shared_timeslicedtcbnetmetrics
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderMetric:
    r"""The set of order metrics for an order action."""
    
    charge_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargeNumber'), 'exclude': lambda f: f is None }})  
    elp: Optional[list[shared_timeslicedelpnetmetrics.TimeSlicedElpNetMetrics]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('elp'), 'exclude': lambda f: f is None }})
    r"""The extended list price which is calculated by the original product catalog list price multiplied by the delta quantity.
    
    The `elp` nested field is only available to existing Orders customers who already have access to the field.
    
    **Note:** The following Order Metrics have been deprecated. Any new customers who onboard on [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) or [Orders Harmonization](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Orders_Harmonization/Orders_Harmonization) will not get these metrics.
    * The Order ELP and Order Item objects 
    * The \"Generated Reason\" and \"Order Item ID\" fields in the Order MRR, Order TCB, Order TCV, and Order Quantity objects
    
    Existing Orders customers who have these metrics will continue to be supported.
    """  
    mrr: Optional[list[shared_timeslicednetmetrics.TimeSlicedNetMetrics]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mrr'), 'exclude': lambda f: f is None }})  
    origin_rate_plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originRatePlanId'), 'exclude': lambda f: f is None }})  
    product_rate_plan_charge_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productRatePlanChargeId'), 'exclude': lambda f: f is None }})  
    product_rate_plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productRatePlanId'), 'exclude': lambda f: f is None }})  
    quantity: Optional[list[shared_timeslicedmetrics.TimeSlicedMetrics]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity'), 'exclude': lambda f: f is None }})  
    tcb: Optional[list[shared_timeslicedtcbnetmetrics.TimeSlicedTcbNetMetrics]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tcb'), 'exclude': lambda f: f is None }})
    r"""Total contracted billing which is the forecast value for the total invoice amount."""  
    tcv: Optional[list[shared_timeslicednetmetrics.TimeSlicedNetMetrics]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tcv'), 'exclude': lambda f: f is None }})
    r"""Total contracted value."""  
    