"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import alarmconfiguration as shared_alarmconfiguration
from ..shared import autorollbackconfiguration as shared_autorollbackconfiguration
from ..shared import fileexistsbehavior_enum as shared_fileexistsbehavior_enum
from ..shared import revisionlocation as shared_revisionlocation
from ..shared import targetinstances as shared_targetinstances
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateDeploymentInput:
    r"""Represents the input of a <code>CreateDeployment</code> operation."""
    
    application_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationName') }})  
    auto_rollback_configuration: Optional[shared_autorollbackconfiguration.AutoRollbackConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoRollbackConfiguration'), 'exclude': lambda f: f is None }})  
    deployment_config_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deploymentConfigName'), 'exclude': lambda f: f is None }})  
    deployment_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deploymentGroupName'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    file_exists_behavior: Optional[shared_fileexistsbehavior_enum.FileExistsBehaviorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileExistsBehavior'), 'exclude': lambda f: f is None }})  
    ignore_application_stop_failures: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ignoreApplicationStopFailures'), 'exclude': lambda f: f is None }})  
    override_alarm_configuration: Optional[shared_alarmconfiguration.AlarmConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('overrideAlarmConfiguration'), 'exclude': lambda f: f is None }})  
    revision: Optional[shared_revisionlocation.RevisionLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revision'), 'exclude': lambda f: f is None }})  
    target_instances: Optional[shared_targetinstances.TargetInstances] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetInstances'), 'exclude': lambda f: f is None }})  
    update_outdated_instances_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateOutdatedInstancesOnly'), 'exclude': lambda f: f is None }})  
    