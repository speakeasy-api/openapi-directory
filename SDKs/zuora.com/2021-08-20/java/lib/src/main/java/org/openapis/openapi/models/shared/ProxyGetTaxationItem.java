/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyGetTaxationItem - Container for custom fields of a Taxation Item object.
 * 
 */
public class ProxyGetTaxationItem {
    /**
     *  The Chart of Accounts 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountingCode")
    public String accountingCode;
    public ProxyGetTaxationItem withAccountingCode(String accountingCode) {
        this.accountingCode = accountingCode;
        return this;
    }
    
    /**
     *  The ID of the user who created the taxation item.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public ProxyGetTaxationItem withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     *  The date when the payment was created in the Zuora system.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public ProxyGetTaxationItem withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     *  The calculated tax amount excluded due to the exemption.
     * **Character limit**: 16 **Values**: a decimal value 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExemptAmount")
    public Double exemptAmount;
    public ProxyGetTaxationItem withExemptAmount(Double exemptAmount) {
        this.exemptAmount = exemptAmount;
        return this;
    }
    
    /**
     * Object identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ProxyGetTaxationItem withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     *  The ID of the specific invoice item that the taxation information applies to.
     * **Character limit**: 32 **Values**: a valid invoice item ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceItemId")
    public String invoiceItemId;
    public ProxyGetTaxationItem withInvoiceItemId(String invoiceItemId) {
        this.invoiceItemId = invoiceItemId;
        return this;
    }
    
    /**
     *  The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.
     * **Character limit**: 32 **Values**: a string of 32 characterrs or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Jurisdiction")
    public String jurisdiction;
    public ProxyGetTaxationItem withJurisdiction(String jurisdiction) {
        this.jurisdiction = jurisdiction;
        return this;
    }
    
    /**
     *  The identifier for the location based on the value of the `TaxCode` field.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LocationCode")
    public String locationCode;
    public ProxyGetTaxationItem withLocationCode(String locationCode) {
        this.locationCode = locationCode;
        return this;
    }
    
    /**
     *  The name of the tax rate, such as sales tax or GST. This name is displayed on invoices.
     * **Character limit**: 128 **Values**: a string of 128 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ProxyGetTaxationItem withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     *  The amount of the tax applied to the charge.
     * **Character limit**: 16 **Values**: a decimal value 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxAmount")
    public Double taxAmount;
    public ProxyGetTaxationItem withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     *  The tax code identifies which tax rules and tax rates to apply to a specific charge.
     * **Character limit**: 32 **Values**: a string of 32 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxCode")
    public String taxCode;
    public ProxyGetTaxationItem withTaxCode(String taxCode) {
        this.taxCode = taxCode;
        return this;
    }
    
    /**
     *  The description for the tax code.
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxCodeDescription")
    public String taxCodeDescription;
    public ProxyGetTaxationItem withTaxCodeDescription(String taxCodeDescription) {
        this.taxCodeDescription = taxCodeDescription;
        return this;
    }
    
    /**
     *  The date that the tax is applied to the charge, in `yyyy-mm-dd` format.
     * **Character limit**: 29 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("TaxDate")
    public LocalDate taxDate;
    public ProxyGetTaxationItem withTaxDate(LocalDate taxDate) {
        this.taxDate = taxDate;
        return this;
    }
    
    /**
     *  The tax rate applied to the charge.
     * **Character limit**: 16 **Values**: a valid decimal value 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxRate")
    public Double taxRate;
    public ProxyGetTaxationItem withTaxRate(Double taxRate) {
        this.taxRate = taxRate;
        return this;
    }
    
    /**
     *  The description of the tax rate.
     * **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxRateDescription")
    public String taxRateDescription;
    public ProxyGetTaxationItem withTaxRateDescription(String taxRateDescription) {
        this.taxRateDescription = taxRateDescription;
        return this;
    }
    
    /**
     *  The type of the tax rate applied to the charge.
     * **Character limit**: 10 **Values**: `Percentage`, `FlatFee` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxRateType")
    public String taxRateType;
    public ProxyGetTaxationItem withTaxRateType(String taxRateType) {
        this.taxRateType = taxRateType;
        return this;
    }
    
    /**
     *  The ID of the user who last updated the taxation item.
     * **Character limit**: **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public ProxyGetTaxationItem withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * The date when the taxation item was last updated. **Character limit**: **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public ProxyGetTaxationItem withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
