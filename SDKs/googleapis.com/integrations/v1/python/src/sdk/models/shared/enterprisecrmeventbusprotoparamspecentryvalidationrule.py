"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmeventbusprotoparamspecentryvalidationruledoublerange as shared_enterprisecrmeventbusprotoparamspecentryvalidationruledoublerange
from ..shared import enterprisecrmeventbusprotoparamspecentryvalidationruleintrange as shared_enterprisecrmeventbusprotoparamspecentryvalidationruleintrange
from ..shared import enterprisecrmeventbusprotoparamspecentryvalidationrulestringregex as shared_enterprisecrmeventbusprotoparamspecentryvalidationrulestringregex
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmEventbusProtoParamSpecEntryValidationRule:
    
    double_range: Optional[shared_enterprisecrmeventbusprotoparamspecentryvalidationruledoublerange.EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doubleRange'), 'exclude': lambda f: f is None }})
    r"""Range used to validate doubles and floats."""  
    int_range: Optional[shared_enterprisecrmeventbusprotoparamspecentryvalidationruleintrange.EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intRange'), 'exclude': lambda f: f is None }})
    r"""Range used to validate longs and ints."""  
    string_regex: Optional[shared_enterprisecrmeventbusprotoparamspecentryvalidationrulestringregex.EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringRegex'), 'exclude': lambda f: f is None }})
    r"""Rule used to validate strings."""  
    