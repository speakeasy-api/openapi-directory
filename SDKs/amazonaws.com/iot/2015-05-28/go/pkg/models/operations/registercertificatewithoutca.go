// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RegisterCertificateWithoutCAHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// RegisterCertificateWithoutCARequestBodyStatusEnum - The status of the register certificate request.
type RegisterCertificateWithoutCARequestBodyStatusEnum string

const (
	RegisterCertificateWithoutCARequestBodyStatusEnumActive            RegisterCertificateWithoutCARequestBodyStatusEnum = "ACTIVE"
	RegisterCertificateWithoutCARequestBodyStatusEnumInactive          RegisterCertificateWithoutCARequestBodyStatusEnum = "INACTIVE"
	RegisterCertificateWithoutCARequestBodyStatusEnumRevoked           RegisterCertificateWithoutCARequestBodyStatusEnum = "REVOKED"
	RegisterCertificateWithoutCARequestBodyStatusEnumPendingTransfer   RegisterCertificateWithoutCARequestBodyStatusEnum = "PENDING_TRANSFER"
	RegisterCertificateWithoutCARequestBodyStatusEnumRegisterInactive  RegisterCertificateWithoutCARequestBodyStatusEnum = "REGISTER_INACTIVE"
	RegisterCertificateWithoutCARequestBodyStatusEnumPendingActivation RegisterCertificateWithoutCARequestBodyStatusEnum = "PENDING_ACTIVATION"
)

func (e *RegisterCertificateWithoutCARequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "REVOKED":
		fallthrough
	case "PENDING_TRANSFER":
		fallthrough
	case "REGISTER_INACTIVE":
		fallthrough
	case "PENDING_ACTIVATION":
		*e = RegisterCertificateWithoutCARequestBodyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterCertificateWithoutCARequestBodyStatusEnum: %s", s)
	}
}

type RegisterCertificateWithoutCARequestBody struct {
	// The PEM of a certificate.
	CertificatePem string `json:"certificatePem"`
	// The status of the register certificate request.
	Status *RegisterCertificateWithoutCARequestBodyStatusEnum `json:"status,omitempty"`
}

type RegisterCertificateWithoutCARequest struct {
	Headers RegisterCertificateWithoutCAHeaders
	Request RegisterCertificateWithoutCARequestBody `request:"mediaType=application/json"`
}

type RegisterCertificateWithoutCAResponse struct {
	// CertificateStateException
	CertificateStateException interface{}
	// CertificateValidationException
	CertificateValidationException interface{}
	ContentType                    string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	RegisterCertificateWithoutCAResponse *shared.RegisterCertificateWithoutCAResponse
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
