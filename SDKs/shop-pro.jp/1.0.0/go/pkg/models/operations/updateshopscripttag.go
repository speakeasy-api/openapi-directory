// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateShopScriptTagSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum - スクリプトを出力するページ
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
type UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum string

const (
	UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnumShop       UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum = "shop"
	UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnumThanksPage UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum = "thanks_page"
)

func (e UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum) ToPointer() *UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum {
	return &e
}

func (e *UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shop":
		fallthrough
	case "thanks_page":
		*e = UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum: %v", v)
	}
}

type UpdateShopScriptTagRequestBodyScriptTag struct {
	// スクリプトを出力するページ
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	//
	DisplayScope *UpdateShopScriptTagRequestBodyScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトのハッシュ値をBase64エンコードした値を設定します。この値はスクリプトタグのIntegrity属性値として利用されます。
	// 詳しくは [サブリソース完全性 - Web セキュリティ | MDN](https://developer.mozilla.org/ja/docs/Web/Security/Subresource_Integrity) (外部サイト) をご覧ください。
	// ※この値が正しく設定されない場合はブラウザがスクリプトの読み込みをブロックします。この場合、一般的なWebブラウザ(e.g. Google Chrome, Firefox)の開発者ツールのコンソールでエラーを確認できます。
	//
	Integrity *string `json:"integrity,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
}

// UpdateShopScriptTagRequestBody - 作成するスクリプトタグの情報
type UpdateShopScriptTagRequestBody struct {
	ScriptTag *UpdateShopScriptTagRequestBodyScriptTag `json:"script_tag,omitempty"`
}

type UpdateShopScriptTagRequest struct {
	// 作成するスクリプトタグの情報
	RequestBody *UpdateShopScriptTagRequestBody `request:"mediaType=application/json"`
	// スクリプトタグID
	ScriptTagID int64 `pathParam:"style=simple,explode=false,name=scriptTagId"`
}

// UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum - スクリプトを出力するページ
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
type UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum string

const (
	UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnumShop       UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "shop"
	UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnumThanksPage UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "thanks_page"
)

func (e UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) ToPointer() *UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum {
	return &e
}

func (e *UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shop":
		fallthrough
	case "thanks_page":
		*e = UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum: %v", v)
	}
}

type UpdateShopScriptTag200ApplicationJSONScriptTag struct {
	// アカウントID
	AccountID *string `json:"account_id,omitempty"`
	// スクリプトを出力するページ
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	//
	DisplayScope *UpdateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトタグID
	ID *int64 `json:"id,omitempty"`
	// スクリプトファイルのハッシュ値（script tagのintegrity属性）
	Integrity *string `json:"integrity,omitempty"`
	// 作成日時
	MakeDate *int64 `json:"make_date,omitempty"`
	// OAuthアプリケーションID
	OauthApplicationID *int64 `json:"oauth_application_id,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
	// 更新日時
	UpdateDate *int64 `json:"update_date,omitempty"`
}

type UpdateShopScriptTag200ApplicationJSON struct {
	ScriptTag *UpdateShopScriptTag200ApplicationJSONScriptTag `json:"script_tag,omitempty"`
}

type UpdateShopScriptTagResponse struct {
	ContentType                                 string
	StatusCode                                  int
	RawResponse                                 *http.Response
	UpdateShopScriptTag200ApplicationJSONObject *UpdateShopScriptTag200ApplicationJSON
}
