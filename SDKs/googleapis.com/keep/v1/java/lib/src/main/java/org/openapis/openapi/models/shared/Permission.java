/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Permission - A single permission on the note. Associates a `member` with a `role`.
 */
public class Permission {
    /**
     * Output only. Whether this member has been deleted. If the member is recovered, this value is set to false and the recovered member retains the role on the note.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public Permission withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * The email associated with the member. If set on create, the `email` field in the `User` or `Group` message must either be empty or match this field. On read, may be unset if the member does not have an associated email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public Permission withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Describes a single Google Family.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("family")
    public java.util.Map<String, Object> family;

    public Permission withFamily(java.util.Map<String, Object> family) {
        this.family = family;
        return this;
    }
    
    /**
     * Describes a single Group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group")
    public Group group;

    public Permission withGroup(Group group) {
        this.group = group;
        return this;
    }
    
    /**
     * Output only. The resource name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Permission withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The role granted by this permission. The role determines the entity\u2019s ability to read, write, and share notes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public PermissionRoleEnum role;

    public Permission withRole(PermissionRoleEnum role) {
        this.role = role;
        return this;
    }
    
    /**
     * Describes a single user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public User user;

    public Permission withUser(User user) {
        this.user = user;
        return this;
    }
    
    public Permission(){}
}
