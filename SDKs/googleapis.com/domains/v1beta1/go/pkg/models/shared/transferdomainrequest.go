// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TransferDomainRequestContactNoticesEnum string

const (
	TransferDomainRequestContactNoticesEnumContactNoticeUnspecified         TransferDomainRequestContactNoticesEnum = "CONTACT_NOTICE_UNSPECIFIED"
	TransferDomainRequestContactNoticesEnumPublicContactDataAcknowledgement TransferDomainRequestContactNoticesEnum = "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT"
)

func (e *TransferDomainRequestContactNoticesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CONTACT_NOTICE_UNSPECIFIED":
		fallthrough
	case "PUBLIC_CONTACT_DATA_ACKNOWLEDGEMENT":
		*e = TransferDomainRequestContactNoticesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferDomainRequestContactNoticesEnum: %s", s)
	}
}

// TransferDomainRequestInput - Request for the `TransferDomain` method.
type TransferDomainRequestInput struct {
	// Defines an authorization code.
	AuthorizationCode *AuthorizationCode `json:"authorizationCode,omitempty"`
	// The list of contact notices that you acknowledge. The notices needed here depend on the values specified in `registration.contact_settings`.
	ContactNotices []TransferDomainRequestContactNoticesEnum `json:"contactNotices,omitempty"`
	// The `Registration` resource facilitates managing and configuring domain name registrations. There are several ways to create a new `Registration` resource: To create a new `Registration` resource, find a suitable domain name by calling the `SearchDomains` method with a query to see available domain name options. After choosing a name, call `RetrieveRegisterParameters` to ensure availability and obtain information like pricing, which is needed to build a call to `RegisterDomain`. Another way to create a new `Registration` is to transfer an existing domain from another registrar. First, go to the current registrar to unlock the domain for transfer and retrieve the domain's transfer authorization code. Then call `RetrieveTransferParameters` to confirm that the domain is unlocked and to get values needed to build a call to `TransferDomain`. Finally, you can create a new `Registration` by importing an existing domain managed with [Google Domains](https://domains.google/). First, call `RetrieveImportableDomains` to list domains to which the calling user has sufficient access. Then call `ImportDomain` on any domain names you want to use with Cloud Domains.
	Registration *RegistrationInput `json:"registration,omitempty"`
	// Validate the request without actually transferring the domain.
	ValidateOnly *bool `json:"validateOnly,omitempty"`
	// Represents an amount of money with its currency type.
	YearlyPrice *Money `json:"yearlyPrice,omitempty"`
}
