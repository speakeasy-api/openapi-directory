/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GrpcRouteFaultInjectionPolicyAbort } from "./grpcroutefaultinjectionpolicyabort";
import { GrpcRouteFaultInjectionPolicyDelay } from "./grpcroutefaultinjectionpolicydelay";
import { Expose, Type } from "class-transformer";

/**
 * The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced on a percentage of requests before sending those requests to the destination service. Similarly requests from clients can be aborted by for a percentage of requests.
 */
export class GrpcRouteFaultInjectionPolicy extends SpeakeasyBase {
  /**
   * Specification of how client requests are aborted as part of fault injection before being sent to a destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "abort" })
  @Type(() => GrpcRouteFaultInjectionPolicyAbort)
  abort?: GrpcRouteFaultInjectionPolicyAbort;

  /**
   * Specification of how client requests are delayed as part of fault injection before being sent to a destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delay" })
  @Type(() => GrpcRouteFaultInjectionPolicyDelay)
  delay?: GrpcRouteFaultInjectionPolicyDelay;
}
