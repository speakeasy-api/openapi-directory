"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import device as shared_device
from ..shared import tmpfs as shared_tmpfs
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LinuxParameters:
    r"""Linux-specific modifications that are applied to the container, such as details for device mappings."""
    
    devices: Optional[list[shared_device.Device]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devices'), 'exclude': lambda f: f is None }})  
    init_process_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initProcessEnabled'), 'exclude': lambda f: f is None }})  
    max_swap: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxSwap'), 'exclude': lambda f: f is None }})  
    shared_memory_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sharedMemorySize'), 'exclude': lambda f: f is None }})  
    swappiness: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('swappiness'), 'exclude': lambda f: f is None }})  
    tmpfs: Optional[list[shared_tmpfs.Tmpfs]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tmpfs'), 'exclude': lambda f: f is None }})  
    