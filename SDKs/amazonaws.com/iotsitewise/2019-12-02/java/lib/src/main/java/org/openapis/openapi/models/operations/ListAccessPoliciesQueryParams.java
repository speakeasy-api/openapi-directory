/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListAccessPoliciesQueryParams {
    /**
     * The ARN of the IAM user. For more information, see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_identifiers.html"&gt;IAM ARNs&lt;/a&gt; in the &lt;i&gt;IAM User Guide&lt;/i&gt;. This parameter is required if you specify &lt;code&gt;IAM&lt;/code&gt; for &lt;code&gt;identityType&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=iamArn")
    public String iamArn;
    public ListAccessPoliciesQueryParams withIamArn(String iamArn) {
        this.iamArn = iamArn;
        return this;
    }
    
    /**
     * The ID of the identity. This parameter is required if you specify &lt;code&gt;USER&lt;/code&gt; or &lt;code&gt;GROUP&lt;/code&gt; for &lt;code&gt;identityType&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=identityId")
    public String identityId;
    public ListAccessPoliciesQueryParams withIdentityId(String identityId) {
        this.identityId = identityId;
        return this;
    }
    
    /**
     * The type of identity (IAM Identity Center user, IAM Identity Center group, or IAM user). This parameter is required if you specify &lt;code&gt;identityId&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=identityType")
    public ListAccessPoliciesIdentityTypeEnum identityType;
    public ListAccessPoliciesQueryParams withIdentityType(ListAccessPoliciesIdentityTypeEnum identityType) {
        this.identityType = identityType;
        return this;
    }
    
    /**
     * &lt;p&gt;The maximum number of results to return for each paginated request.&lt;/p&gt; &lt;p&gt;Default: 50&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public ListAccessPoliciesQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * The token to be used for the next set of paginated results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListAccessPoliciesQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * The ID of the resource. This parameter is required if you specify &lt;code&gt;resourceType&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=resourceId")
    public String resourceId;
    public ListAccessPoliciesQueryParams withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }
    
    /**
     * The type of resource (portal or project). This parameter is required if you specify &lt;code&gt;resourceId&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=resourceType")
    public ListAccessPoliciesResourceTypeEnum resourceType;
    public ListAccessPoliciesQueryParams withResourceType(ListAccessPoliciesResourceTypeEnum resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
}
