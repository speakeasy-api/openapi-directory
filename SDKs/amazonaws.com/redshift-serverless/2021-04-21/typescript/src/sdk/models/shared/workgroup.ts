/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigParameter } from "./configparameter";
import { Endpoint } from "./endpoint";
import { WorkgroupStatusEnum } from "./workgroupstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The collection of computing resources from which an endpoint is created.
 */
export class Workgroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "baseCapacity" })
  baseCapacity?: number;

  @SpeakeasyMetadata({ elemType: ConfigParameter })
  @Expose({ name: "configParameters" })
  @Type(() => ConfigParameter)
  configParameters?: ConfigParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "endpoint" })
  @Type(() => Endpoint)
  endpoint?: Endpoint;

  @SpeakeasyMetadata()
  @Expose({ name: "enhancedVpcRouting" })
  enhancedVpcRouting?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "namespaceName" })
  namespaceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "port" })
  port?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "publiclyAccessible" })
  publiclyAccessible?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "securityGroupIds" })
  securityGroupIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: WorkgroupStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "subnetIds" })
  subnetIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "workgroupArn" })
  workgroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workgroupId" })
  workgroupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workgroupName" })
  workgroupName?: string;
}
