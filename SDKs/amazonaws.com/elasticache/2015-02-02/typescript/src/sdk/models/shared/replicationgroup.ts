/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutomaticFailoverStatusEnum } from "./automaticfailoverstatusenum";
import { DataTieringStatusEnum } from "./datatieringstatusenum";
import { Endpoint } from "./endpoint";
import { GlobalReplicationGroupInfo } from "./globalreplicationgroupinfo";
import { IpDiscoveryEnum } from "./ipdiscoveryenum";
import { LogDeliveryConfigurationList } from "./logdeliveryconfigurationlist";
import { MultiAZStatusEnum } from "./multiazstatusenum";
import { NetworkTypeEnum } from "./networktypeenum";
import { NodeGroupList } from "./nodegrouplist";
import { ReplicationGroupPendingModifiedValues } from "./replicationgrouppendingmodifiedvalues";
import { TransitEncryptionModeEnum } from "./transitencryptionmodeenum";

/**
 * Contains all of the attributes of a specific Redis replication group.
 */
export class ReplicationGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  atRestEncryptionEnabled?: boolean;

  @SpeakeasyMetadata()
  authTokenEnabled?: boolean;

  @SpeakeasyMetadata()
  authTokenLastModifiedDate?: Date;

  @SpeakeasyMetadata()
  autoMinorVersionUpgrade?: boolean;

  @SpeakeasyMetadata()
  automaticFailover?: AutomaticFailoverStatusEnum;

  @SpeakeasyMetadata()
  cacheNodeType?: string;

  @SpeakeasyMetadata()
  clusterEnabled?: boolean;

  @SpeakeasyMetadata()
  configurationEndpoint?: Endpoint;

  @SpeakeasyMetadata()
  dataTiering?: DataTieringStatusEnum;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  globalReplicationGroupInfo?: GlobalReplicationGroupInfo;

  @SpeakeasyMetadata()
  ipDiscovery?: IpDiscoveryEnum;

  @SpeakeasyMetadata()
  kmsKeyId?: string;

  @SpeakeasyMetadata({ elemType: LogDeliveryConfigurationList })
  logDeliveryConfigurations?: LogDeliveryConfigurationList[];

  @SpeakeasyMetadata()
  memberClusters?: string[];

  @SpeakeasyMetadata()
  memberClustersOutpostArns?: string[];

  @SpeakeasyMetadata()
  multiAZ?: MultiAZStatusEnum;

  @SpeakeasyMetadata()
  networkType?: NetworkTypeEnum;

  @SpeakeasyMetadata({ elemType: NodeGroupList })
  nodeGroups?: NodeGroupList[];

  @SpeakeasyMetadata()
  pendingModifiedValues?: ReplicationGroupPendingModifiedValues;

  @SpeakeasyMetadata()
  replicationGroupCreateTime?: Date;

  @SpeakeasyMetadata()
  replicationGroupId?: string;

  @SpeakeasyMetadata()
  snapshotRetentionLimit?: number;

  @SpeakeasyMetadata()
  snapshotWindow?: string;

  @SpeakeasyMetadata()
  snapshottingClusterId?: string;

  @SpeakeasyMetadata()
  status?: string;

  @SpeakeasyMetadata()
  transitEncryptionEnabled?: boolean;

  @SpeakeasyMetadata()
  transitEncryptionMode?: TransitEncryptionModeEnum;

  @SpeakeasyMetadata()
  userGroupIds?: string[];
}
