"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import devicedefenderindexingmode_enum as shared_devicedefenderindexingmode_enum
from ..shared import field as shared_field
from ..shared import indexingfilter as shared_indexingfilter
from ..shared import namedshadowindexingmode_enum as shared_namedshadowindexingmode_enum
from ..shared import thingconnectivityindexingmode_enum as shared_thingconnectivityindexingmode_enum
from ..shared import thingindexingmode_enum as shared_thingindexingmode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ThingIndexingConfiguration:
    r"""The thing indexing configuration. For more information, see <a href=\\"https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html\\">Managing Thing Indexing</a>."""
    
    thing_indexing_mode: shared_thingindexingmode_enum.ThingIndexingModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingIndexingMode') }})  
    custom_fields: Optional[list[shared_field.Field]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFields'), 'exclude': lambda f: f is None }})  
    device_defender_indexing_mode: Optional[shared_devicedefenderindexingmode_enum.DeviceDefenderIndexingModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceDefenderIndexingMode'), 'exclude': lambda f: f is None }})  
    filter: Optional[shared_indexingfilter.IndexingFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter'), 'exclude': lambda f: f is None }})  
    managed_fields: Optional[list[shared_field.Field]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('managedFields'), 'exclude': lambda f: f is None }})  
    named_shadow_indexing_mode: Optional[shared_namedshadowindexingmode_enum.NamedShadowIndexingModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namedShadowIndexingMode'), 'exclude': lambda f: f is None }})  
    thing_connectivity_indexing_mode: Optional[shared_thingconnectivityindexingmode_enum.ThingConnectivityIndexingModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingConnectivityIndexingMode'), 'exclude': lambda f: f is None }})  
    