"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowcxv3fulfillmentconditionalcasescasecasecontent as shared_googleclouddialogflowcxv3fulfillmentconditionalcasescasecasecontent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase:
    r"""Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively."""
    
    case_content: Optional[list[shared_googleclouddialogflowcxv3fulfillmentconditionalcasescasecasecontent.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caseContent'), 'exclude': lambda f: f is None }})
    r"""A list of case content."""  
    condition: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition)."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseInput:
    r"""Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively."""
    
    case_content: Optional[list[shared_googleclouddialogflowcxv3fulfillmentconditionalcasescasecasecontent.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContentInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caseContent'), 'exclude': lambda f: f is None }})
    r"""A list of case content."""  
    condition: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition)."""  
    