/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GETUserContentUrlJsonSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=api-key",
  })
  apiKey: string;
}

export class GETUserContentUrlJsonRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=url" })
  url?: string;
}

export class GETUserContentUrlJson200ApplicationJSONDebug extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}

export class GETUserContentUrlJson200ApplicationJSONResultsComments extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "approveDate" })
  approveDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentBody" })
  commentBody?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentID" })
  commentID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "commentSequence" })
  commentSequence?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "commentTitle" })
  commentTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentType" })
  commentType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createDate" })
  createDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "depth" })
  depth?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "editorsSelection" })
  editorsSelection?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "parentID" })
  parentID?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "parentUserDisplayName" })
  parentUserDisplayName?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "permID" })
  permID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "picURL" })
  picURL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendations" })
  recommendations?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendedFlag" })
  recommendedFlag?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "replies" })
  replies?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "replyCount" })
  replyCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reportAbuseFlag" })
  reportAbuseFlag?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "sharing" })
  sharing?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timespeople" })
  timespeople?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "trusted" })
  trusted?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updateDate" })
  updateDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userDisplayName" })
  userDisplayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userID" })
  userID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "userLocation" })
  userLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userTitle" })
  userTitle?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "userURL" })
  userURL?: any;
}

export class GETUserContentUrlJson200ApplicationJSONResults extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "api_timestamp" })
  apiTimestamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "callerID" })
  callerID?: any;

  @SpeakeasyMetadata({
    elemType: GETUserContentUrlJson200ApplicationJSONResultsComments,
  })
  @Expose({ name: "comments" })
  @Type(() => GETUserContentUrlJson200ApplicationJSONResultsComments)
  comments?: GETUserContentUrlJson200ApplicationJSONResultsComments[];

  @SpeakeasyMetadata()
  @Expose({ name: "depthLimit" })
  depthLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  filter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "replyLimit" })
  replyLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sort" })
  sort?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalCommentsFound" })
  totalCommentsFound?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalCommentsReturned" })
  totalCommentsReturned?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalEditorsSelectionFound" })
  totalEditorsSelectionFound?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalEditorsSelectionReturned" })
  totalEditorsSelectionReturned?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalParentCommentsFound" })
  totalParentCommentsFound?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalParentCommentsReturned" })
  totalParentCommentsReturned?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalRecommendationsFound" })
  totalRecommendationsFound?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalRecommendationsReturned" })
  totalRecommendationsReturned?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalReplyCommentsFound" })
  totalReplyCommentsFound?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalReplyCommentsReturned" })
  totalReplyCommentsReturned?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalReporterReplyCommentsFound" })
  totalReporterReplyCommentsFound?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalReporterReplyCommentsReturned" })
  totalReporterReplyCommentsReturned?: number;
}

export class GETUserContentUrlJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "debug" })
  @Type(() => GETUserContentUrlJson200ApplicationJSONDebug)
  debug?: GETUserContentUrlJson200ApplicationJSONDebug;

  @SpeakeasyMetadata()
  @Expose({ name: "results" })
  @Type(() => GETUserContentUrlJson200ApplicationJSONResults)
  results?: GETUserContentUrlJson200ApplicationJSONResults;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class GETUserContentUrlJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  getUserContentUrlJSON200ApplicationJSONObject?: GETUserContentUrlJson200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
