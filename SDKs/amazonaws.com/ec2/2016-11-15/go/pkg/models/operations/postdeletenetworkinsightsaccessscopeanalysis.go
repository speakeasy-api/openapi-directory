// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteNetworkInsightsAccessScopeAnalysisActionEnum
type POSTDeleteNetworkInsightsAccessScopeAnalysisActionEnum string

const (
	POSTDeleteNetworkInsightsAccessScopeAnalysisActionEnumDeleteNetworkInsightsAccessScopeAnalysis POSTDeleteNetworkInsightsAccessScopeAnalysisActionEnum = "DeleteNetworkInsightsAccessScopeAnalysis"
)

func (e *POSTDeleteNetworkInsightsAccessScopeAnalysisActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteNetworkInsightsAccessScopeAnalysis":
		*e = POSTDeleteNetworkInsightsAccessScopeAnalysisActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteNetworkInsightsAccessScopeAnalysisActionEnum: %s", s)
	}
}

// POSTDeleteNetworkInsightsAccessScopeAnalysisVersionEnum
type POSTDeleteNetworkInsightsAccessScopeAnalysisVersionEnum string

const (
	POSTDeleteNetworkInsightsAccessScopeAnalysisVersionEnumTwoThousandAndSixteen1115 POSTDeleteNetworkInsightsAccessScopeAnalysisVersionEnum = "2016-11-15"
)

func (e *POSTDeleteNetworkInsightsAccessScopeAnalysisVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDeleteNetworkInsightsAccessScopeAnalysisVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteNetworkInsightsAccessScopeAnalysisVersionEnum: %s", s)
	}
}

type POSTDeleteNetworkInsightsAccessScopeAnalysisQueryParams struct {
	Action  POSTDeleteNetworkInsightsAccessScopeAnalysisActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDeleteNetworkInsightsAccessScopeAnalysisVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDeleteNetworkInsightsAccessScopeAnalysisHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteNetworkInsightsAccessScopeAnalysisRequest struct {
	QueryParams POSTDeleteNetworkInsightsAccessScopeAnalysisQueryParams
	Headers     POSTDeleteNetworkInsightsAccessScopeAnalysisHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDeleteNetworkInsightsAccessScopeAnalysisResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
