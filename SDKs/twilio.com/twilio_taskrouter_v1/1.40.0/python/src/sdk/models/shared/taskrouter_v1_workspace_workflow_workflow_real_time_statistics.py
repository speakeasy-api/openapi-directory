"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskrouterV1WorkspaceWorkflowWorkflowRealTimeStatistics:
    r"""OK"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource."""  
    longest_task_waiting_age: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longest_task_waiting_age'), 'exclude': lambda f: f is None }})
    r"""The age of the longest waiting Task."""  
    longest_task_waiting_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longest_task_waiting_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the longest waiting Task."""  
    tasks_by_priority: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tasks_by_priority'), 'exclude': lambda f: f is None }})
    r"""The number of Tasks by priority. For example: `{\\"0\\": \\"10\\", \\"99\\": \\"5\\"}` shows 10 Tasks at priority 0 and 5 at priority 99."""  
    tasks_by_status: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tasks_by_status'), 'exclude': lambda f: f is None }})
    r"""The number of Tasks by their current status. For example: `{\\"pending\\": \\"1\\", \\"reserved\\": \\"3\\", \\"assigned\\": \\"2\\", \\"completed\\": \\"5\\"}`."""  
    total_tasks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_tasks'), 'exclude': lambda f: f is None }})
    r"""The total number of Tasks."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The absolute URL of the Workflow statistics resource."""  
    workflow_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflow_sid'), 'exclude': lambda f: f is None }})
    r"""Returns the list of Tasks that are being controlled by the Workflow with the specified SID value."""  
    workspace_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workspace_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Workspace that contains the Workflow."""  
    