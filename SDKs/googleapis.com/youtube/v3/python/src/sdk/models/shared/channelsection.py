"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import channelsectioncontentdetails as shared_channelsectioncontentdetails
from ..shared import channelsectionlocalization as shared_channelsectionlocalization
from ..shared import channelsectionsnippet as shared_channelsectionsnippet
from ..shared import channelsectiontargeting as shared_channelsectiontargeting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelSection:
    r"""Successful response"""
    
    content_details: Optional[shared_channelsectioncontentdetails.ChannelSectionContentDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentDetails'), 'exclude': lambda f: f is None }})
    r"""Details about a channelsection, including playlists and channels."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Etag of this resource."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID that YouTube uses to uniquely identify the channel section."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"youtube#channelSection\\"."""  
    localizations: Optional[dict[str, shared_channelsectionlocalization.ChannelSectionLocalization]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localizations'), 'exclude': lambda f: f is None }})
    r"""Localizations for different languages"""  
    snippet: Optional[shared_channelsectionsnippet.ChannelSectionSnippet] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snippet'), 'exclude': lambda f: f is None }})
    r"""Basic details about a channel section, including title, style and position."""  
    targeting: Optional[shared_channelsectiontargeting.ChannelSectionTargeting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targeting'), 'exclude': lambda f: f is None }})
    r"""ChannelSection targeting setting."""  
    