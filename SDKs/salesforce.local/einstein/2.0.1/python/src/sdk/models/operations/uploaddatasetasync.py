"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import dataset as shared_dataset
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class UploadDatasetAsyncSecurity:
    
    bearer_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class UploadDatasetAsyncRequestBodyTypeEnum(str, Enum):
    r"""Type of dataset data."""
    TEXT_INTENT = 'text-intent'
    TEXT_SENTIMENT = 'text-sentiment'


@dataclasses.dataclass
class UploadDatasetAsyncRequestBody:
    
    data: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'data' }})
    r"""Path to the .csv, .tsv, or .json file on the local drive (FilePart)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'name' }})
    r"""Name of the dataset. Optional. If this parameter is omitted, the dataset name is derived from the file name."""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'path' }})
    r"""URL of the .csv, .tsv, or .json file."""  
    type: Optional[UploadDatasetAsyncRequestBodyTypeEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'type' }})
    r"""Type of dataset data."""  
    

@dataclasses.dataclass
class UploadDatasetAsyncResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    dataset: Optional[shared_dataset.Dataset] = dataclasses.field(default=None)
    r"""Upload initiated"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    