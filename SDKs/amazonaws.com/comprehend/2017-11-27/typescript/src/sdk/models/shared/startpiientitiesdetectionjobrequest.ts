/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InputDataConfig } from "./inputdataconfig";
import { LanguageCodeEnum } from "./languagecodeenum";
import { OutputDataConfig } from "./outputdataconfig";
import { PiiEntitiesDetectionModeEnum } from "./piientitiesdetectionmodeenum";
import { RedactionConfig } from "./redactionconfig";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class StartPiiEntitiesDetectionJobRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataAccessRoleArn" })
  dataAccessRoleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataConfig" })
  @Type(() => InputDataConfig)
  inputDataConfig: InputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "JobName" })
  jobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LanguageCode" })
  languageCode: LanguageCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Mode" })
  mode: PiiEntitiesDetectionModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputDataConfig" })
  @Type(() => OutputDataConfig)
  outputDataConfig: OutputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "RedactionConfig" })
  @Type(() => RedactionConfig)
  redactionConfig?: RedactionConfig;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
