<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AllocationSpecificSKUAllocationReservedInstanceProperties - Properties of the SKU instances being reserved. Next ID: 9
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AllocationSpecificSKUAllocationReservedInstanceProperties
{
    /**
     * Specifies accelerator type and count.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AcceleratorConfig> $guestAccelerators
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestAccelerators')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AcceleratorConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $guestAccelerators = null;
    
    /**
     * Specifies amount of local ssd to reserve with each instance. The type of disk is local-ssd.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk> $localSsds
     */
	#[\JMS\Serializer\Annotation\SerializedName('localSsds')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $localSsds = null;
    
    /**
     * An opaque location hint used to place the allocation close to other resources. This field is for use by internal tools that use the public API.
     * 
     * @var ?string $locationHint
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationHint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationHint = null;
    
    /**
     * Specifies type of machine (name only) which has fixed number of vCPUs and fixed amount of memory. This also includes specifying custom machine type following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.
     * 
     * @var ?string $machineType
     */
	#[\JMS\Serializer\Annotation\SerializedName('machineType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $machineType = null;
    
    /**
     * Specifies the number of hours after reservation creation where instances using the reservation won't be scheduled for maintenance.
     * 
     * @var ?int $maintenanceFreezeDurationHours
     */
	#[\JMS\Serializer\Annotation\SerializedName('maintenanceFreezeDurationHours')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maintenanceFreezeDurationHours = null;
    
    /**
     * Specifies the frequency of planned maintenance events. The accepted values are: `PERIODIC`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalEnum $maintenanceInterval
     */
	#[\JMS\Serializer\Annotation\SerializedName('maintenanceInterval')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AllocationSpecificSKUAllocationReservedInstancePropertiesMaintenanceIntervalEnum $maintenanceInterval = null;
    
    /**
     * Minimum cpu platform the reservation.
     * 
     * @var ?string $minCpuPlatform
     */
	#[\JMS\Serializer\Annotation\SerializedName('minCpuPlatform')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minCpuPlatform = null;
    
	public function __construct()
	{
		$this->guestAccelerators = null;
		$this->localSsds = null;
		$this->locationHint = null;
		$this->machineType = null;
		$this->maintenanceFreezeDurationHours = null;
		$this->maintenanceInterval = null;
		$this->minCpuPlatform = null;
	}
}
