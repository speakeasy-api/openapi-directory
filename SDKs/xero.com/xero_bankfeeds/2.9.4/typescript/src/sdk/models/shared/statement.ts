/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EndBalance } from "./endbalance";
import { ErrorT } from "./error";
import { StartBalance } from "./startbalance";
import { StatementLine } from "./statementline";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Current status of statements
 */
export enum StatementStatusEnum {
  Pending = "PENDING",
  Rejected = "REJECTED",
  Delivered = "DELIVERED",
}

/**
 * search results matching id for single statement
 */
export class Statement extends SpeakeasyBase {
  /**
   * The StartBalance plus all the Statement Line Amounts should be equal to the EndBalance Amount.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endBalance" })
  @Type(() => EndBalance)
  endBalance?: EndBalance;

  /**
   * Closing balance date ISO-8601 YYYY-MM-DD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate?: Date;

  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feedConnectionId" })
  feedConnectionId?: string;

  /**
   * GUID used to identify the Statement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The starting balance of the statement
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startBalance" })
  @Type(() => StartBalance)
  startBalance?: StartBalance;

  /**
   * Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "statementLineCount" })
  statementLineCount?: number;

  @SpeakeasyMetadata({ elemType: StatementLine })
  @Expose({ name: "statementLines" })
  @Type(() => StatementLine)
  statementLines?: StatementLine[];

  /**
   * Current status of statements
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: StatementStatusEnum;
}
