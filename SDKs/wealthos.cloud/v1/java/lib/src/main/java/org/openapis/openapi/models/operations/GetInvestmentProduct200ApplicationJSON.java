/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetInvestmentProduct200ApplicationJSON - success
 */
public class GetInvestmentProduct200ApplicationJSON {
    /**
     * Supplies additional custom information of an investment product
     */
    @JsonProperty("additional_provider_details")
    public java.util.Map<String, Object> additionalProviderDetails;
    public GetInvestmentProduct200ApplicationJSON withAdditionalProviderDetails(java.util.Map<String, Object> additionalProviderDetails) {
        this.additionalProviderDetails = additionalProviderDetails;
        return this;
    }
    
    /**
     * Financial products this investment product is applicable for
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicable_financial_products")
    public GetInvestmentProduct200ApplicationJSONApplicableFinancialProductsEnum[] applicableFinancialProducts;
    public GetInvestmentProduct200ApplicationJSON withApplicableFinancialProducts(GetInvestmentProduct200ApplicationJSONApplicableFinancialProductsEnum[] applicableFinancialProducts) {
        this.applicableFinancialProducts = applicableFinancialProducts;
        return this;
    }
    
    /**
     * Sub-category of the investment product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("asset_sub_type")
    public String assetSubType;
    public GetInvestmentProduct200ApplicationJSON withAssetSubType(String assetSubType) {
        this.assetSubType = assetSubType;
        return this;
    }
    
    /**
     * Category of the investment product
     */
    @JsonProperty("asset_type")
    public GetInvestmentProduct200ApplicationJSONAssetTypeEnum assetType;
    public GetInvestmentProduct200ApplicationJSON withAssetType(GetInvestmentProduct200ApplicationJSONAssetTypeEnum assetType) {
        this.assetType = assetType;
        return this;
    }
    
    /**
     * The final price for the day of the investment product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("close_price")
    public String closePrice;
    public GetInvestmentProduct200ApplicationJSON withClosePrice(String closePrice) {
        this.closePrice = closePrice;
        return this;
    }
    
    /**
     * Exact day the close_price was recorded for the investment product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("close_price_on_date")
    public String closePriceOnDate;
    public GetInvestmentProduct200ApplicationJSON withClosePriceOnDate(String closePriceOnDate) {
        this.closePriceOnDate = closePriceOnDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public GetInvestmentProduct200ApplicationJSON withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * currency of the investment product in ISO 4217 format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public GetInvestmentProduct200ApplicationJSON withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Sub-type of investment product. Relevant for investment products of type fund only
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fund_asset_type")
    public String fundAssetType;
    public GetInvestmentProduct200ApplicationJSON withFundAssetType(String fundAssetType) {
        this.fundAssetType = fundAssetType;
        return this;
    }
    
    /**
     * Fund code identifier. Relevant for investment products of type fund
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fund_code")
    public String fundCode;
    public GetInvestmentProduct200ApplicationJSON withFundCode(String fundCode) {
        this.fundCode = fundCode;
        return this;
    }
    
    /**
     * The type of id that is populated as investment_product_id
     */
    @JsonProperty("id_type")
    public GetInvestmentProduct200ApplicationJSONIdTypeEnum idType;
    public GetInvestmentProduct200ApplicationJSON withIdType(GetInvestmentProduct200ApplicationJSONIdTypeEnum idType) {
        this.idType = idType;
        return this;
    }
    
    /**
     * Unique identifier of an investment product
     */
    @JsonProperty("investment_product_id")
    public String investmentProductId;
    public GetInvestmentProduct200ApplicationJSON withInvestmentProductId(String investmentProductId) {
        this.investmentProductId = investmentProductId;
        return this;
    }
    
    /**
     * Investment product name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GetInvestmentProduct200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Method used to calculate the investment product price
     */
    @JsonProperty("pricing_method")
    public String pricingMethod;
    public GetInvestmentProduct200ApplicationJSON withPricingMethod(String pricingMethod) {
        this.pricingMethod = pricingMethod;
        return this;
    }
    
    /**
     * settlement date offset of investment product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settlement_date_offset")
    public Double settlementDateOffset;
    public GetInvestmentProduct200ApplicationJSON withSettlementDateOffset(Double settlementDateOffset) {
        this.settlementDateOffset = settlementDateOffset;
        return this;
    }
    
    /**
     * Status of the investment product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GetInvestmentProduct200ApplicationJSONStatusEnum status;
    public GetInvestmentProduct200ApplicationJSON withStatus(GetInvestmentProduct200ApplicationJSONStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public GetInvestmentProduct200ApplicationJSON withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
