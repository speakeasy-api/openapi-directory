// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RobotDeploymentStepEnum string

const (
	RobotDeploymentStepEnumValidating                 RobotDeploymentStepEnum = "Validating"
	RobotDeploymentStepEnumDownloadingExtracting      RobotDeploymentStepEnum = "DownloadingExtracting"
	RobotDeploymentStepEnumExecutingDownloadCondition RobotDeploymentStepEnum = "ExecutingDownloadCondition"
	RobotDeploymentStepEnumExecutingPreLaunch         RobotDeploymentStepEnum = "ExecutingPreLaunch"
	RobotDeploymentStepEnumLaunching                  RobotDeploymentStepEnum = "Launching"
	RobotDeploymentStepEnumExecutingPostLaunch        RobotDeploymentStepEnum = "ExecutingPostLaunch"
	RobotDeploymentStepEnumFinished                   RobotDeploymentStepEnum = "Finished"
)

func (e RobotDeploymentStepEnum) ToPointer() *RobotDeploymentStepEnum {
	return &e
}

func (e *RobotDeploymentStepEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Validating":
		fallthrough
	case "DownloadingExtracting":
		fallthrough
	case "ExecutingDownloadCondition":
		fallthrough
	case "ExecutingPreLaunch":
		fallthrough
	case "Launching":
		fallthrough
	case "ExecutingPostLaunch":
		fallthrough
	case "Finished":
		*e = RobotDeploymentStepEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RobotDeploymentStepEnum: %v", v)
	}
}
