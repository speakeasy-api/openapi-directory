// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlacementPolicyTypeEnum - The type of placement.
type PlacementPolicyTypeEnum string

const (
	PlacementPolicyTypeEnumTypeUnspecified PlacementPolicyTypeEnum = "TYPE_UNSPECIFIED"
	PlacementPolicyTypeEnumCompact         PlacementPolicyTypeEnum = "COMPACT"
)

func (e PlacementPolicyTypeEnum) ToPointer() *PlacementPolicyTypeEnum {
	return &e
}

func (e *PlacementPolicyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "COMPACT":
		*e = PlacementPolicyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlacementPolicyTypeEnum: %v", v)
	}
}

// PlacementPolicy - PlacementPolicy defines the placement policy used by the node pool.
type PlacementPolicy struct {
	// The type of placement.
	Type *PlacementPolicyTypeEnum `json:"type,omitempty"`
}
