// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// CategoryMetadataConnectionsChannels - Information about the channels related to this category.
type CategoryMetadataConnectionsChannels struct {
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The total number of channels on this connection.
	Total float64 `json:"total"`
	// The API URI that resolves to the connection data.
	URI string `json:"uri"`
}

// CategoryMetadataConnectionsGroups - Information about the groups related to this category.
type CategoryMetadataConnectionsGroups struct {
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The total number of groups on this connection.
	Total float64 `json:"total"`
	// The API URI that resolves to the connection data.
	URI string `json:"uri"`
}

// CategoryMetadataConnectionsUsers - Information about the users related to this category.
type CategoryMetadataConnectionsUsers struct {
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The total number of users on this connection.
	Total float64 `json:"total"`
	// The API URI that resolves to the connection data.
	URI string `json:"uri"`
}

// CategoryMetadataConnectionsVideos - Information about the videos related to this category.
type CategoryMetadataConnectionsVideos struct {
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The total number of videos on this connection.
	Total float64 `json:"total"`
	// The API URI that resolves to the connection data.
	URI string `json:"uri"`
}

// CategoryMetadataConnections - A collection of information that is connected to this resource.
type CategoryMetadataConnections struct {
	// Information about the channels related to this category.
	Channels CategoryMetadataConnectionsChannels `json:"channels"`
	// Information about the groups related to this category.
	Groups CategoryMetadataConnectionsGroups `json:"groups"`
	// Information about the users related to this category.
	Users CategoryMetadataConnectionsUsers `json:"users"`
	// Information about the videos related to this category.
	Videos CategoryMetadataConnectionsVideos `json:"videos"`
}

// CategoryMetadataInteractionsFollow - An action indicating if the authenticated user has followed this category.
type CategoryMetadataInteractionsFollow struct {
	// Whether the authenticated user has followed this category.
	Added bool `json:"added"`
	// The time in ISO 8601 format that the user followed this category, or the null value if the user hasn't followed this category.
	AddedTime string `json:"added_time"`
	// The URI for following or unfollowing this category: PUT to this URI to follow the category, or DELETE to this URI to unfollow the category.
	URI string `json:"uri"`
}

// CategoryMetadataInteractions - The permissible actions related to the category.
type CategoryMetadataInteractions struct {
	// An action indicating if the authenticated user has followed this category.
	Follow CategoryMetadataInteractionsFollow `json:"follow"`
}

// CategoryMetadata - Metadata about the category.
type CategoryMetadata struct {
	// A collection of information that is connected to this resource.
	Connections CategoryMetadataConnections `json:"connections"`
	// The permissible actions related to the category.
	Interactions CategoryMetadataInteractions `json:"interactions"`
}

// CategoryParent - The container of this category's parent category, if the current category is a subcategory.
type CategoryParent struct {
	// The URL to access the parent category in a browser.
	Link string `json:"link"`
	// The display name that identifies the parent category.
	Name string `json:"name"`
	// The unique identifier to access the parent of this category resource.
	URI string `json:"uri"`
}

type CategorySubcategories struct {
	// The URL to access the subcategory in a browser.
	Link string `json:"link"`
	// The display name that identifies the subcategory.
	Name string `json:"name"`
	// The unique identifier to access the subcategory resource.
	URI string `json:"uri"`
}

// Category - The category was returned.
type Category struct {
	// The active icon for the category.
	Icon *Picture `json:"icon,omitempty"`
	// The last time, in ISO 8601 format, that a video was featured.
	LastVideoFeaturedTime string `json:"last_video_featured_time"`
	// The URL to access the category in a browser.
	Link string `json:"link"`
	// Metadata about the category.
	Metadata CategoryMetadata `json:"metadata"`
	// The display name that identifies the category.
	Name string `json:"name"`
	// The container of this category's parent category, if the current category is a subcategory.
	Parent CategoryParent `json:"parent"`
	// The active picture for this category; defaults to vertical color bars.
	Pictures Picture `json:"pictures"`
	// The resource key of the category.
	ResourceKey string `json:"resource_key"`
	// All the subcategories that belong to this category, if the current category is a top-level parent.
	Subcategories []CategorySubcategories `json:"subcategories,omitempty"`
	// Whether the category isn't a subcategory of another category.
	TopLevel bool `json:"top_level"`
	// The unique identifier to access the category resource.
	URI string `json:"uri"`
}
