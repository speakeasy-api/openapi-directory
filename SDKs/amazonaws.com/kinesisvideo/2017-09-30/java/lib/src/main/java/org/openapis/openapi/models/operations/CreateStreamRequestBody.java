/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateStreamRequestBody {
    /**
     * &lt;p&gt;The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.&lt;/p&gt; &lt;p&gt;The default value is 0, indicating that the stream does not persist data.&lt;/p&gt; &lt;p&gt;When the &lt;code&gt;DataRetentionInHours&lt;/code&gt; value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataRetentionInHours")
    public Long dataRetentionInHours;

    public CreateStreamRequestBody withDataRetentionInHours(Long dataRetentionInHours) {
        this.dataRetentionInHours = dataRetentionInHours;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the device that is writing to the stream. &lt;/p&gt; &lt;note&gt; &lt;p&gt;In the current implementation, Kinesis Video Streams does not use this name.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeviceName")
    public String deviceName;

    public CreateStreamRequestBody withDeviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }
    
    /**
     * &lt;p&gt;The ID of the Key Management Service (KMS) key that you want Kinesis Video Streams to use to encrypt stream data.&lt;/p&gt; &lt;p&gt;If no key ID is specified, the default, Kinesis Video-managed key (&lt;code&gt;aws/kinesisvideo&lt;/code&gt;) is used.&lt;/p&gt; &lt;p&gt; For more information, see &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters"&gt;DescribeKey&lt;/a&gt;. &lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KmsKeyId")
    public String kmsKeyId;

    public CreateStreamRequestBody withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    /**
     * &lt;p&gt;The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see &lt;a href="http://www.iana.org/assignments/media-types/media-types.xhtml"&gt;Media Types&lt;/a&gt;. If you choose to specify the &lt;code&gt;MediaType&lt;/code&gt;, see &lt;a href="https://tools.ietf.org/html/rfc6838#section-4.2"&gt;Naming Requirements&lt;/a&gt; for guidelines.&lt;/p&gt; &lt;p&gt;Example valid values include "video/h264" and "video/h264,audio/aac".&lt;/p&gt; &lt;p&gt;This parameter is optional; the default value is &lt;code&gt;null&lt;/code&gt; (or empty in JSON).&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MediaType")
    public String mediaType;

    public CreateStreamRequestBody withMediaType(String mediaType) {
        this.mediaType = mediaType;
        return this;
    }
    
    /**
     * &lt;p&gt;A name for the stream that you are creating.&lt;/p&gt; &lt;p&gt;The stream name is an identifier for the stream, and must be unique for each account and region.&lt;/p&gt;
     */
    @JsonProperty("StreamName")
    public String streamName;

    public CreateStreamRequestBody withStreamName(String streamName) {
        this.streamName = streamName;
        return this;
    }
    
    /**
     * A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;

    public CreateStreamRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateStreamRequestBody(@JsonProperty("StreamName") String streamName) {
        this.streamName = streamName;
  }
}
