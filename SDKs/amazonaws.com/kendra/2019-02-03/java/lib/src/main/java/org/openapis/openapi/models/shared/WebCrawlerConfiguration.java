/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WebCrawlerConfiguration - Provides the configuration information required for Amazon Kendra Web Crawler.
 */
public class WebCrawlerConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthenticationConfiguration")
    public AuthenticationConfiguration authenticationConfiguration;
    public WebCrawlerConfiguration withAuthenticationConfiguration(AuthenticationConfiguration authenticationConfiguration) {
        this.authenticationConfiguration = authenticationConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CrawlDepth")
    public Long crawlDepth;
    public WebCrawlerConfiguration withCrawlDepth(Long crawlDepth) {
        this.crawlDepth = crawlDepth;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxContentSizePerPageInMegaBytes")
    public Float maxContentSizePerPageInMegaBytes;
    public WebCrawlerConfiguration withMaxContentSizePerPageInMegaBytes(Float maxContentSizePerPageInMegaBytes) {
        this.maxContentSizePerPageInMegaBytes = maxContentSizePerPageInMegaBytes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxLinksPerPage")
    public Long maxLinksPerPage;
    public WebCrawlerConfiguration withMaxLinksPerPage(Long maxLinksPerPage) {
        this.maxLinksPerPage = maxLinksPerPage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxUrlsPerMinuteCrawlRate")
    public Long maxUrlsPerMinuteCrawlRate;
    public WebCrawlerConfiguration withMaxUrlsPerMinuteCrawlRate(Long maxUrlsPerMinuteCrawlRate) {
        this.maxUrlsPerMinuteCrawlRate = maxUrlsPerMinuteCrawlRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProxyConfiguration")
    public ProxyConfiguration proxyConfiguration;
    public WebCrawlerConfiguration withProxyConfiguration(ProxyConfiguration proxyConfiguration) {
        this.proxyConfiguration = proxyConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UrlExclusionPatterns")
    public String[] urlExclusionPatterns;
    public WebCrawlerConfiguration withUrlExclusionPatterns(String[] urlExclusionPatterns) {
        this.urlExclusionPatterns = urlExclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UrlInclusionPatterns")
    public String[] urlInclusionPatterns;
    public WebCrawlerConfiguration withUrlInclusionPatterns(String[] urlInclusionPatterns) {
        this.urlInclusionPatterns = urlInclusionPatterns;
        return this;
    }
    
    @JsonProperty("Urls")
    public Urls urls;
    public WebCrawlerConfiguration withUrls(Urls urls) {
        this.urls = urls;
        return this;
    }
    
}
