"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudpaymentsresellersubscriptionv1extension as shared_googlecloudpaymentsresellersubscriptionv1extension
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest:
    r"""Request message for extending a Subscription resource. A new recurrence will be made based on the subscription schedule defined by the original product."""
    
    extension: Optional[shared_googlecloudpaymentsresellersubscriptionv1extension.GoogleCloudPaymentsResellerSubscriptionV1Extension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension'), 'exclude': lambda f: f is None }})
    r"""Describes the details of an extension request."""  
    request_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId'), 'exclude': lambda f: f is None }})
    r"""Required. Restricted to 36 ASCII characters. A random UUID is recommended. The idempotency key for the request. The ID generation logic is controlled by the partner. request_id should be the same as on retries of the same request. A different request_id must be used for a extension of a different cycle. A random UUID is recommended."""  
    