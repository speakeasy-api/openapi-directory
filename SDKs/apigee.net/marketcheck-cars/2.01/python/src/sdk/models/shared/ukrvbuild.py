"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UKRVBuild:
    r"""Describes the RV specification"""
    
    area: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('area'), 'exclude': lambda f: f is None }})
    r"""Area of the RV"""  
    berths: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('berths'), 'exclude': lambda f: f is None }})
    r"""berths of RV"""  
    category: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})
    r"""category of the RV"""  
    chassis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chassis'), 'exclude': lambda f: f is None }})
    r"""chassis of RV"""  
    drive_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drive_type'), 'exclude': lambda f: f is None }})
    r"""drive_type of RV"""  
    drivetrain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drivetrain'), 'exclude': lambda f: f is None }})
    r"""Drivetrain of the RV"""  
    engine: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine'), 'exclude': lambda f: f is None }})
    r"""Engine of the RV"""  
    engine_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engine_size'), 'exclude': lambda f: f is None }})
    r"""engine_size of RV"""  
    exterior_length: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exterior_length'), 'exclude': lambda f: f is None }})
    r"""exterior_length of RV"""  
    floorplan: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('floorplan'), 'exclude': lambda f: f is None }})
    r"""floorplan of RV"""  
    floorplan_layout: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('floorplan_layout'), 'exclude': lambda f: f is None }})
    r"""floorplan_layout of RV"""  
    fuel_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fuel_type'), 'exclude': lambda f: f is None }})
    r"""Fuel type of the RV"""  
    gvwr: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gvwr'), 'exclude': lambda f: f is None }})
    r"""Gross Vehicle Weight Ratio of RV"""  
    interior_length: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interior_length'), 'exclude': lambda f: f is None }})
    r"""interior_length of RV"""  
    inventory_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inventory_type'), 'exclude': lambda f: f is None }})
    r"""Inventory type of the RV"""  
    make: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('make'), 'exclude': lambda f: f is None }})
    r"""RV Make"""  
    model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model'), 'exclude': lambda f: f is None }})
    r"""RV model"""  
    mtplm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mtplm'), 'exclude': lambda f: f is None }})
    r"""mtplm of RV"""  
    slideouts: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slideouts'), 'exclude': lambda f: f is None }})
    r"""Slideouts of the RV"""  
    steering: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('steering'), 'exclude': lambda f: f is None }})
    r"""steering of RV"""  
    sub_category: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sub_category'), 'exclude': lambda f: f is None }})
    r"""sub_category of the RV"""  
    transmission: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transmission'), 'exclude': lambda f: f is None }})
    r"""Transmission of the RV"""  
    width: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width'), 'exclude': lambda f: f is None }})
    r"""width of RV"""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year'), 'exclude': lambda f: f is None }})
    r"""Year of the RV"""  
    