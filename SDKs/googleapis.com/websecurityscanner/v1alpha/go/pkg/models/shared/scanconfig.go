// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScanConfigTargetPlatformsEnum string

const (
	ScanConfigTargetPlatformsEnumTargetPlatformUnspecified ScanConfigTargetPlatformsEnum = "TARGET_PLATFORM_UNSPECIFIED"
	ScanConfigTargetPlatformsEnumAppEngine                 ScanConfigTargetPlatformsEnum = "APP_ENGINE"
	ScanConfigTargetPlatformsEnumCompute                   ScanConfigTargetPlatformsEnum = "COMPUTE"
	ScanConfigTargetPlatformsEnumCloudRun                  ScanConfigTargetPlatformsEnum = "CLOUD_RUN"
	ScanConfigTargetPlatformsEnumCloudFunctions            ScanConfigTargetPlatformsEnum = "CLOUD_FUNCTIONS"
)

func (e *ScanConfigTargetPlatformsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TARGET_PLATFORM_UNSPECIFIED":
		fallthrough
	case "APP_ENGINE":
		fallthrough
	case "COMPUTE":
		fallthrough
	case "CLOUD_RUN":
		fallthrough
	case "CLOUD_FUNCTIONS":
		*e = ScanConfigTargetPlatformsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanConfigTargetPlatformsEnum: %s", s)
	}
}

// ScanConfigUserAgentEnum - The user agent used during scanning.
type ScanConfigUserAgentEnum string

const (
	ScanConfigUserAgentEnumUserAgentUnspecified ScanConfigUserAgentEnum = "USER_AGENT_UNSPECIFIED"
	ScanConfigUserAgentEnumChromeLinux          ScanConfigUserAgentEnum = "CHROME_LINUX"
	ScanConfigUserAgentEnumChromeAndroid        ScanConfigUserAgentEnum = "CHROME_ANDROID"
	ScanConfigUserAgentEnumSafariIphone         ScanConfigUserAgentEnum = "SAFARI_IPHONE"
)

func (e *ScanConfigUserAgentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USER_AGENT_UNSPECIFIED":
		fallthrough
	case "CHROME_LINUX":
		fallthrough
	case "CHROME_ANDROID":
		fallthrough
	case "SAFARI_IPHONE":
		*e = ScanConfigUserAgentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanConfigUserAgentEnum: %s", s)
	}
}

// ScanConfig - A ScanConfig resource contains the configurations to launch a scan. next id: 12
type ScanConfig struct {
	// Scan authentication configuration.
	Authentication *Authentication `json:"authentication,omitempty"`
	// The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
	BlacklistPatterns []string `json:"blacklistPatterns,omitempty"`
	// Required. The user provided display name of the ScanConfig.
	DisplayName *string `json:"displayName,omitempty"`
	// A ScanRun is a output-only resource representing an actual run of the scan.
	LatestRun *ScanRun `json:"latestRun,omitempty"`
	// The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
	MaxQPS *int `json:"maxQps,omitempty"`
	// The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system.
	Name *string `json:"name,omitempty"`
	// Scan schedule configuration.
	Schedule *Schedule `json:"schedule,omitempty"`
	// Required. The starting URLs from which the scanner finds site pages.
	StartingUrls []string `json:"startingUrls,omitempty"`
	// Set of Google Cloud platforms targeted by the scan. If empty, APP_ENGINE will be used as a default.
	TargetPlatforms []ScanConfigTargetPlatformsEnum `json:"targetPlatforms,omitempty"`
	// The user agent used during scanning.
	UserAgent *ScanConfigUserAgentEnum `json:"userAgent,omitempty"`
}
