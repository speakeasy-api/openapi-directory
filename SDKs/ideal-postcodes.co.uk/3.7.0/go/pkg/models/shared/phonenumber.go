// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PhoneNumberValidEnum string

const (
	PhoneNumberValidEnumTrue PhoneNumberValidEnum = "true"
)

func (e *PhoneNumberValidEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "true":
		*e = PhoneNumberValidEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneNumberValidEnum: %s", s)
	}
}

type PhoneNumber struct {
	// Full country name
	Country        string  `json:"country"`
	CurrentCarrier Carrier `json:"current_carrier"`
	// Phone number formatted to international standard
	InternationalFormat string `json:"international_format"`
	// Country code in 3 letter ISO format
	IsoCountry string `json:"iso_country"`
	// Country code in 2 letter ISO format
	IsoCountry2 string `json:"iso_country_2"`
	// Phone number formatted to local standard
	NationalFormat  string               `json:"national_format"`
	OriginalCarrier Carrier              `json:"original_carrier"`
	Valid           PhoneNumberValidEnum `json:"valid"`
}
