"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import columnentity as shared_columnentity
from ..shared import constraintentity as shared_constraintentity
from ..shared import indexentity as shared_indexentity
from ..shared import triggerentity as shared_triggerentity
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TableEntity:
    r"""Table's parent is a schema."""
    
    columns: Optional[list[shared_columnentity.ColumnEntity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columns'), 'exclude': lambda f: f is None }})
    r"""Table columns."""  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""Comment associated with the table."""  
    constraints: Optional[list[shared_constraintentity.ConstraintEntity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('constraints'), 'exclude': lambda f: f is None }})
    r"""Table constraints."""  
    custom_features: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFeatures'), 'exclude': lambda f: f is None }})
    r"""Custom engine specific features."""  
    indices: Optional[list[shared_indexentity.IndexEntity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indices'), 'exclude': lambda f: f is None }})
    r"""Table indices."""  
    triggers: Optional[list[shared_triggerentity.TriggerEntity]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggers'), 'exclude': lambda f: f is None }})
    r"""Table triggers."""  
    