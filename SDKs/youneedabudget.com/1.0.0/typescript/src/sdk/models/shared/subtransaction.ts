/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class SubTransaction extends SpeakeasyBase {
  /**
   * The subtransaction amount in milliunits format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "category_id" })
  categoryId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "category_name" })
  categoryName?: string;

  /**
   * Whether or not the subtransaction has been deleted.  Deleted subtransactions will only be included in delta requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo" })
  memo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_id" })
  payeeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_name" })
  payeeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;

  /**
   * If a transfer, the account_id which the subtransaction transfers to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transfer_account_id" })
  transferAccountId?: string;

  /**
   * If a transfer, the id of transaction on the other side of the transfer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transfer_transaction_id" })
  transferTransactionId?: string;
}
