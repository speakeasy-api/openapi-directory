<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Registrant
{
    /**
     * Address of the registrant.
     * 
     * @var ?string $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address = null;
    
    /**
     * City of the registrant.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * Company name of the registrant.<br />
     * 
     * The registrant is a company if not empty, otherwise the registrant is an individual when validating extra fields.
     * 
     * @var ?string $companyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('company_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
    /**
     * Country code of the registrant.
     * 
     * Syntax: 'BE', 'NL, 'FR', ...
     * 
     * @var ?string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('country_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryCode = null;
    
    /**
     * Email of the registrant.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Enterprise number of the registrant.<br />
     * 
     * Syntax: 'BE0123456789'
     * 
     * @var ?string $enterpriseNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('enterprise_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $enterpriseNumber = null;
    
    /**
     * Fax of the registrant.
     * 
     * Syntax: '+32.123456789'
     * 
     * @var ?string $fax
     */
	#[\JMS\Serializer\Annotation\SerializedName('fax')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fax = null;
    
    /**
     * First name of the registrant.
     * 
     * @var ?string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
    /**
     * Language code of the registrant.
     * 
     * Syntax: 'nl', 'fr', 'en', 'de', ...
     * 
     * @var ?string $languageCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('language_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $languageCode = null;
    
    /**
     * Last name of the registrant.
     * 
     * @var ?string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastName = null;
    
    /**
     * Phone of the registrant.<br />
     * 
     * Syntax: '+32.123456789'
     * 
     * @var ?string $phone
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phone = null;
    
    /**
     * Postal code of the registrant.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postal_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->city = null;
		$this->companyName = null;
		$this->countryCode = null;
		$this->email = null;
		$this->enterpriseNumber = null;
		$this->fax = null;
		$this->firstName = null;
		$this->languageCode = null;
		$this->lastName = null;
		$this->phone = null;
		$this->postalCode = null;
	}
}
