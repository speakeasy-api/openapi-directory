/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetPhoneRecordings200ApplicationJSONRecordings {
    /**
     * The contact name of the callee.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callee_name")
    public String calleeName;
    public GetPhoneRecordings200ApplicationJSONRecordings withCalleeName(String calleeName) {
        this.calleeName = calleeName;
        return this;
    }
    
    /**
     * The phone number of the callee.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callee_number")
    public String calleeNumber;
    public GetPhoneRecordings200ApplicationJSONRecordings withCalleeNumber(String calleeNumber) {
        this.calleeNumber = calleeNumber;
        return this;
    }
    
    /**
     * Specifies the callee' number type.&lt;br&gt;
     * `1` - internal&lt;br&gt;
     * `2` - external&lt;br&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callee_number_type")
    public GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum calleeNumberType;
    public GetPhoneRecordings200ApplicationJSONRecordings withCalleeNumberType(GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum calleeNumberType) {
        this.calleeNumberType = calleeNumberType;
        return this;
    }
    
    /**
     * The contact name of the caller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caller_name")
    public String callerName;
    public GetPhoneRecordings200ApplicationJSONRecordings withCallerName(String callerName) {
        this.callerName = callerName;
        return this;
    }
    
    /**
     * The phone number associated to the caller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caller_number")
    public String callerNumber;
    public GetPhoneRecordings200ApplicationJSONRecordings withCallerNumber(String callerNumber) {
        this.callerNumber = callerNumber;
        return this;
    }
    
    /**
     * Specifies the type of the caller number.&lt;br&gt;
     * 
     * `1` - internal&lt;br&gt;
     * `2` - external&lt;br&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caller_number_type")
    public GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum callerNumberType;
    public GetPhoneRecordings200ApplicationJSONRecordings withCallerNumberType(GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum callerNumberType) {
        this.callerNumberType = callerNumberType;
        return this;
    }
    
    /**
     * The date and time when the recording was received.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_time")
    public OffsetDateTime dateTime;
    public GetPhoneRecordings200ApplicationJSONRecordings withDateTime(OffsetDateTime dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    /**
     * The direction of the call. Values: `inbound` or `outbound`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum direction;
    public GetPhoneRecordings200ApplicationJSONRecordings withDirection(GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * The download URL for the recording.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("download_url")
    public String downloadUrl;
    public GetPhoneRecordings200ApplicationJSONRecordings withDownloadUrl(String downloadUrl) {
        this.downloadUrl = downloadUrl;
        return this;
    }
    
    /**
     * The duration of the recording.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;
    public GetPhoneRecordings200ApplicationJSONRecordings withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Unique identifier of the recording.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GetPhoneRecordings200ApplicationJSONRecordings withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The owner of the recording.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public GetPhoneRecordings200ApplicationJSONRecordingsOwner owner;
    public GetPhoneRecordings200ApplicationJSONRecordings withOwner(GetPhoneRecordings200ApplicationJSONRecordingsOwner owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * The recording type. The allowed values are `OnDemand` or `Automatic`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_type")
    public String recordingType;
    public GetPhoneRecordings200ApplicationJSONRecordings withRecordingType(String recordingType) {
        this.recordingType = recordingType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("site")
    public GetPhoneRecordings200ApplicationJSONRecordingsSite site;
    public GetPhoneRecordings200ApplicationJSONRecordings withSite(GetPhoneRecordings200ApplicationJSONRecordingsSite site) {
        this.site = site;
        return this;
    }
    
}
