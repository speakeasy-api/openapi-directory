"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import quaternion as shared_quaternion
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PresentationParamsColorSpaceEnum(str, Enum):
    r"""The materials' diffuse/albedo color. This does not apply to vertex colors or texture maps."""
    UNKNOWN = 'UNKNOWN'
    LINEAR = 'LINEAR'
    GAMMA = 'GAMMA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PresentationParams:
    r"""Hints for displaying the asset, based on information available when the asset was uploaded."""
    
    background_color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('backgroundColor'), 'exclude': lambda f: f is None }})
    r"""A background color which could be used for displaying the 3D asset in a 'thumbnail' or 'palette' style view. Authors have the option to set this background color when publishing or editing their asset. This is represented as a six-digit hexademical triplet specifying the RGB components of the background color, e.g. #FF0000 for Red."""  
    color_space: Optional[PresentationParamsColorSpaceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('colorSpace'), 'exclude': lambda f: f is None }})
    r"""The materials' diffuse/albedo color. This does not apply to vertex colors or texture maps."""  
    orienting_rotation: Optional[shared_quaternion.Quaternion] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orientingRotation'), 'exclude': lambda f: f is None }})
    r"""A [Quaternion](//en.wikipedia.org/wiki/Quaternion). Please note: if in the response you see \\"w: 1\\" and nothing else this is the default value of [0, 0, 0, 1] where x,y, and z are 0."""  
    