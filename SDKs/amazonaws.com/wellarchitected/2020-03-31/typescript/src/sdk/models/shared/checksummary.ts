/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CheckProviderEnum } from "./checkproviderenum";
import { CheckStatusEnum } from "./checkstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Trusted Advisor check summary.
 */
export class CheckSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccountSummary" })
  accountSummary?: Record<string, number>;

  /**
   * The ID of a choice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChoiceId" })
  choiceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LensArn" })
  lensArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * <p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PillarId" })
  pillarId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Provider" })
  provider?: CheckProviderEnum;

  /**
   * The ID of the question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "QuestionId" })
  questionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: CheckStatusEnum;

  /**
   * The date and time recorded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
