"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import offer as shared_offer
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Sku2:
    
    ean_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EanId') }})
    r"""EAN's unique identifier number"""  
    is_active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsActive') }})
    r"""Whether the SKU is active in the sales channel (true), or not (false)."""  
    main_image: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MainImage') }})
    r"""Main image's information."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})
    r"""Summarized name of the SKU"""  
    name_complete: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NameComplete') }})
    r"""Complete name of the SKU"""  
    offers: list[shared_offer.Offer] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Offers') }})
    r"""Array with offers"""  
    ref_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RefId') }})
    r"""SKU's Reference ID"""  
    sku_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SkuId') }})
    r"""SKU's unique identifier number"""  
    