"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ancillary_service_endorsement_enum as shared_ancillary_service_endorsement_enum
from ..shared import ups_invoice as shared_ups_invoice
from ..shared import ups_pickup_type_enum as shared_ups_pickup_type_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateUpsSettingsRequestBody:
    r"""UPS account settings"""
    
    account_postal_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_postal_code'), 'exclude': lambda f: f is None }})
    r"""account postal code"""  
    invoice: Optional[shared_ups_invoice.UpsInvoice] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invoice'), 'exclude': lambda f: f is None }})
    r"""The invoice"""  
    is_primary_account: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_primary_account'), 'exclude': lambda f: f is None }})
    r"""Indicates if this is the primary UPS account"""  
    mail_innovations_cost_center: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mail_innovations_cost_center'), 'exclude': lambda f: f is None }})
    r"""mail innovations cost center"""  
    mail_innovations_endorsement: Optional[shared_ancillary_service_endorsement_enum.AncillaryServiceEndorsementEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mail_innovations_endorsement'), 'exclude': lambda f: f is None }})  
    nickname: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nickname'), 'exclude': lambda f: f is None }})
    r"""nickname"""  
    pickup_type: Optional[shared_ups_pickup_type_enum.UpsPickupTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickup_type'), 'exclude': lambda f: f is None }})  
    use_carbon_neutral_shipping_program: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('use_carbon_neutral_shipping_program'), 'exclude': lambda f: f is None }})
    r"""The use carbon neutral shipping program"""  
    use_consolidation_services: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('use_consolidation_services'), 'exclude': lambda f: f is None }})
    r"""The use consolidation services"""  
    use_ground_freight_pricing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('use_ground_freight_pricing'), 'exclude': lambda f: f is None }})
    r"""The use ground freight pricing"""  
    use_negotiated_rates: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('use_negotiated_rates'), 'exclude': lambda f: f is None }})
    r"""The use negotiated rates"""  
    use_order_number_on_mail_innovations_labels: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('use_order_number_on_mail_innovations_labels'), 'exclude': lambda f: f is None }})
    r"""The use order number on mail innovations labels"""  
    