// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExclusionRuleExcludeDeliveryEnum string

const (
	ExclusionRuleExcludeDeliveryEnumStream              ExclusionRuleExcludeDeliveryEnum = "Stream"
	ExclusionRuleExcludeDeliveryEnumDownload            ExclusionRuleExcludeDeliveryEnum = "Download"
	ExclusionRuleExcludeDeliveryEnumStreamOrDownload    ExclusionRuleExcludeDeliveryEnum = "StreamOrDownload"
	ExclusionRuleExcludeDeliveryEnumProgressiveDownload ExclusionRuleExcludeDeliveryEnum = "ProgressiveDownload"
	ExclusionRuleExcludeDeliveryEnumNone                ExclusionRuleExcludeDeliveryEnum = "None"
)

func (e ExclusionRuleExcludeDeliveryEnum) ToPointer() *ExclusionRuleExcludeDeliveryEnum {
	return &e
}

func (e *ExclusionRuleExcludeDeliveryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Stream":
		fallthrough
	case "Download":
		fallthrough
	case "StreamOrDownload":
		fallthrough
	case "ProgressiveDownload":
		fallthrough
	case "None":
		*e = ExclusionRuleExcludeDeliveryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExclusionRuleExcludeDeliveryEnum: %v", v)
	}
}

type ExclusionRuleExcludeMinResolutionEnum string

const (
	ExclusionRuleExcludeMinResolutionEnumSd       ExclusionRuleExcludeMinResolutionEnum = "SD"
	ExclusionRuleExcludeMinResolutionEnumHd720    ExclusionRuleExcludeMinResolutionEnum = "HD-720"
	ExclusionRuleExcludeMinResolutionEnumHd1080   ExclusionRuleExcludeMinResolutionEnum = "HD-1080"
	ExclusionRuleExcludeMinResolutionEnumHd4K     ExclusionRuleExcludeMinResolutionEnum = "HD-4K"
	ExclusionRuleExcludeMinResolutionEnumExternal ExclusionRuleExcludeMinResolutionEnum = "External"
	ExclusionRuleExcludeMinResolutionEnumUnknown  ExclusionRuleExcludeMinResolutionEnum = "Unknown"
)

func (e ExclusionRuleExcludeMinResolutionEnum) ToPointer() *ExclusionRuleExcludeMinResolutionEnum {
	return &e
}

func (e *ExclusionRuleExcludeMinResolutionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SD":
		fallthrough
	case "HD-720":
		fallthrough
	case "HD-1080":
		fallthrough
	case "HD-4K":
		fallthrough
	case "External":
		fallthrough
	case "Unknown":
		*e = ExclusionRuleExcludeMinResolutionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExclusionRuleExcludeMinResolutionEnum: %v", v)
	}
}

// ExclusionRule - Defines playback exclusion rules for an Offer or Entitlement.
type ExclusionRule struct {
	Description *string `json:"description,omitempty"`
	// The device type that the exclusion rules apply to.
	Device *string `json:"device,omitempty"`
	// Prevent airplay from an apple device.
	ExcludeAirplay *bool `json:"excludeAirplay,omitempty"`
	// Prevent chromecasting.
	ExcludeChromecast    *bool                                  `json:"excludeChromecast,omitempty"`
	ExcludeDelivery      *ExclusionRuleExcludeDeliveryEnum      `json:"excludeDelivery,omitempty"`
	ExcludeMinResolution *ExclusionRuleExcludeMinResolutionEnum `json:"excludeMinResolution,omitempty"`
}
