/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LicenseImage - Data required to license an image
 */
public class LicenseImage {
    /**
     * Cookie object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_cookie")
    public Cookie authCookie;

    public LicenseImage withAuthCookie(Cookie authCookie) {
        this.authCookie = authCookie;
        return this;
    }
    
    /**
     * A custom height or a custom width to resize the image to, but not both (experimental)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_dimensions")
    public CustomSizeDimensions customDimensions;

    public LicenseImage withCustomDimensions(CustomSizeDimensions customDimensions) {
        this.customDimensions = customDimensions;
        return this;
    }
    
    /**
     * Set to true to acknowledge the editorial agreement
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("editorial_acknowledgement")
    public Boolean editorialAcknowledgement;

    public LicenseImage withEditorialAcknowledgement(Boolean editorialAcknowledgement) {
        this.editorialAcknowledgement = editorialAcknowledgement;
        return this;
    }
    
    /**
     * (Deprecated) Image format to download
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("format")
    public LicenseImageFormatEnum format;

    public LicenseImage withFormat(LicenseImageFormatEnum format) {
        this.format = format;
        return this;
    }
    
    /**
     * Image ID
     */
    @JsonProperty("image_id")
    public String imageId;

    public LicenseImage withImageId(String imageId) {
        this.imageId = imageId;
        return this;
    }
    
    /**
     * Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, Object> metadata;

    public LicenseImage withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * For revenue-sharing transactions, the final cost to the end customer as a floating-point number in the transaction currency, such as 12.34
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;

    public LicenseImage withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * ID of the search that led to this licensing transaction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("search_id")
    public String searchId;

    public LicenseImage withSearchId(String searchId) {
        this.searchId = searchId;
        return this;
    }
    
    /**
     * (Deprecated)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("show_modal")
    public Boolean showModal;

    public LicenseImage withShowModal(Boolean showModal) {
        this.showModal = showModal;
        return this;
    }
    
    /**
     * Image size to download
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public LicenseImageSizeEnum size;

    public LicenseImage withSize(LicenseImageSizeEnum size) {
        this.size = size;
        return this;
    }
    
    /**
     * ID of the subscription to use for the download.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription_id")
    public String subscriptionId;

    public LicenseImage withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * (Deprecated)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verification_code")
    public String verificationCode;

    public LicenseImage withVerificationCode(String verificationCode) {
        this.verificationCode = verificationCode;
        return this;
    }
    
    public LicenseImage(@JsonProperty("image_id") String imageId) {
        this.imageId = imageId;
  }
}
