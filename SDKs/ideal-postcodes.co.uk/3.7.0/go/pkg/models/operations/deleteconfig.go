// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteConfigRequest struct {
	Config    string  `pathParam:"style=simple,explode=false,name=config"`
	Key       string  `pathParam:"style=simple,explode=false,name=key"`
	UserToken *string `queryParam:"style=form,explode=false,name=user_token"`
}

type DeleteConfigConfigDeleteResponseCodeEnum string

const (
	DeleteConfigConfigDeleteResponseCodeEnumTwoThousand DeleteConfigConfigDeleteResponseCodeEnum = "2000"
)

func (e *DeleteConfigConfigDeleteResponseCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2000":
		*e = DeleteConfigConfigDeleteResponseCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteConfigConfigDeleteResponseCodeEnum: %s", s)
	}
}

type DeleteConfigConfigDeleteResponseMessageEnum string

const (
	DeleteConfigConfigDeleteResponseMessageEnumSuccess DeleteConfigConfigDeleteResponseMessageEnum = "Success"
)

func (e *DeleteConfigConfigDeleteResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Success":
		*e = DeleteConfigConfigDeleteResponseMessageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteConfigConfigDeleteResponseMessageEnum: %s", s)
	}
}

type DeleteConfigConfigDeleteResponseResult struct {
	Deleted float64 `json:"deleted"`
}

// DeleteConfigConfigDeleteResponse - Success
type DeleteConfigConfigDeleteResponse struct {
	Code    DeleteConfigConfigDeleteResponseCodeEnum    `json:"code"`
	Message DeleteConfigConfigDeleteResponseMessageEnum `json:"message"`
	Result  DeleteConfigConfigDeleteResponseResult      `json:"result"`
}

type DeleteConfigResponse struct {
	// Bad Request
	BadRequestResponse *shared.BadRequestResponse
	// Success
	ConfigDeleteResponse *DeleteConfigConfigDeleteResponse
	ContentType          string
	// Not Found
	NotFoundResponse *shared.NotFoundResponse
	StatusCode       int
	RawResponse      *http.Response
	// Unauthorized Request
	UnauthorizedResponse *shared.UnauthorizedResponse
}
