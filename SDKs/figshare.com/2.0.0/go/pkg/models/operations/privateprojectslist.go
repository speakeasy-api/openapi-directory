// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PrivateProjectsListSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// PrivateProjectsListOrderEnum - The field by which to order.
type PrivateProjectsListOrderEnum string

const (
	PrivateProjectsListOrderEnumPublishedDate PrivateProjectsListOrderEnum = "published_date"
	PrivateProjectsListOrderEnumModifiedDate  PrivateProjectsListOrderEnum = "modified_date"
	PrivateProjectsListOrderEnumViews         PrivateProjectsListOrderEnum = "views"
)

func (e *PrivateProjectsListOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "published_date":
		fallthrough
	case "modified_date":
		fallthrough
	case "views":
		*e = PrivateProjectsListOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateProjectsListOrderEnum: %s", s)
	}
}

// PrivateProjectsListOrderDirectionEnum
type PrivateProjectsListOrderDirectionEnum string

const (
	PrivateProjectsListOrderDirectionEnumAsc  PrivateProjectsListOrderDirectionEnum = "asc"
	PrivateProjectsListOrderDirectionEnumDesc PrivateProjectsListOrderDirectionEnum = "desc"
)

func (e *PrivateProjectsListOrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = PrivateProjectsListOrderDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateProjectsListOrderDirectionEnum: %s", s)
	}
}

// PrivateProjectsListStorageEnum - only return collections from this institution
type PrivateProjectsListStorageEnum string

const (
	PrivateProjectsListStorageEnumGroup      PrivateProjectsListStorageEnum = "group"
	PrivateProjectsListStorageEnumIndividual PrivateProjectsListStorageEnum = "individual"
)

func (e *PrivateProjectsListStorageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "group":
		fallthrough
	case "individual":
		*e = PrivateProjectsListStorageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateProjectsListStorageEnum: %s", s)
	}
}

type PrivateProjectsListRequest struct {
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// The field by which to order.
	Order          *PrivateProjectsListOrderEnum          `queryParam:"style=form,explode=true,name=order"`
	OrderDirection *PrivateProjectsListOrderDirectionEnum `queryParam:"style=form,explode=true,name=order_direction"`
	// Page number. Used for pagination with page_size
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Any combination of owner, collaborator, viewer separated by comma. Examples: "owner" or "owner,collaborator".
	Roles *string `queryParam:"style=form,explode=true,name=roles"`
	// only return collections from this institution
	Storage *PrivateProjectsListStorageEnum `queryParam:"style=form,explode=true,name=storage"`
}

type PrivateProjectsListResponse struct {
	ContentType string
	// Forbidden
	ErrorMessage *shared.ErrorMessage
	// OK. An array of projects
	ProjectPrivates []shared.ProjectPrivate
	StatusCode      int
	RawResponse     *http.Response
}
