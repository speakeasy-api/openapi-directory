// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeDBSubnetGroupsActionEnum
type POSTDescribeDBSubnetGroupsActionEnum string

const (
	POSTDescribeDBSubnetGroupsActionEnumDescribeDbSubnetGroups POSTDescribeDBSubnetGroupsActionEnum = "DescribeDBSubnetGroups"
)

func (e *POSTDescribeDBSubnetGroupsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeDBSubnetGroups":
		*e = POSTDescribeDBSubnetGroupsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeDBSubnetGroupsActionEnum: %s", s)
	}
}

// POSTDescribeDBSubnetGroupsVersionEnum
type POSTDescribeDBSubnetGroupsVersionEnum string

const (
	POSTDescribeDBSubnetGroupsVersionEnumTwoThousandAndThirteen0212 POSTDescribeDBSubnetGroupsVersionEnum = "2013-02-12"
)

func (e *POSTDescribeDBSubnetGroupsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-02-12":
		*e = POSTDescribeDBSubnetGroupsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeDBSubnetGroupsVersionEnum: %s", s)
	}
}

type POSTDescribeDBSubnetGroupsRequest struct {
	Action POSTDescribeDBSubnetGroupsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords        *string                               `queryParam:"style=form,explode=true,name=MaxRecords"`
	RequestBody       []byte                                `request:"mediaType=text/xml"`
	Version           POSTDescribeDBSubnetGroupsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeDBSubnetGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
