/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TargetingValueCreativeSize } from "./targetingvaluecreativesize";
import { TargetingValueDayPartTargeting } from "./targetingvaluedayparttargeting";
import { TargetingValueDemogAgeCriteria } from "./targetingvaluedemogagecriteria";
import { TargetingValueDemogGenderCriteria } from "./targetingvaluedemoggendercriteria";
import { TargetingValueRequestPlatformTargeting } from "./targetingvaluerequestplatformtargeting";
import { Expose, Type } from "class-transformer";

export class TargetingValue extends SpeakeasyBase {
  /**
   * Next Id: 7
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creativeSizeValue" })
  @Type(() => TargetingValueCreativeSize)
  creativeSizeValue?: TargetingValueCreativeSize;

  @SpeakeasyMetadata()
  @Expose({ name: "dayPartTargetingValue" })
  @Type(() => TargetingValueDayPartTargeting)
  dayPartTargetingValue?: TargetingValueDayPartTargeting;

  @SpeakeasyMetadata()
  @Expose({ name: "demogAgeCriteriaValue" })
  @Type(() => TargetingValueDemogAgeCriteria)
  demogAgeCriteriaValue?: TargetingValueDemogAgeCriteria;

  @SpeakeasyMetadata()
  @Expose({ name: "demogGenderCriteriaValue" })
  @Type(() => TargetingValueDemogGenderCriteria)
  demogGenderCriteriaValue?: TargetingValueDemogGenderCriteria;

  /**
   * The long value to exclude/include.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longValue" })
  longValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestPlatformTargetingValue" })
  @Type(() => TargetingValueRequestPlatformTargeting)
  requestPlatformTargetingValue?: TargetingValueRequestPlatformTargeting;

  /**
   * The string value to exclude/include.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;
}
