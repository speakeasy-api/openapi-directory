/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Relevance - Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.
 */
public class Relevance {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Duration")
    public String duration;
    public Relevance withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Freshness")
    public Boolean freshness;
    public Relevance withFreshness(Boolean freshness) {
        this.freshness = freshness;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Importance")
    public Long importance;
    public Relevance withImportance(Long importance) {
        this.importance = importance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RankOrder")
    public OrderEnum rankOrder;
    public Relevance withRankOrder(OrderEnum rankOrder) {
        this.rankOrder = rankOrder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ValueImportanceMap")
    public java.util.Map<String, Long> valueImportanceMap;
    public Relevance withValueImportanceMap(java.util.Map<String, Long> valueImportanceMap) {
        this.valueImportanceMap = valueImportanceMap;
        return this;
    }
    
}
