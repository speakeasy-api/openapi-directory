"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lambdacontainerparams as shared_lambdacontainerparams
from ..shared import lambdaisolationmode_enum as shared_lambdaisolationmode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LambdaLinuxProcessParams:
    r"""Contains parameters for a Linux process that contains an Lambda function."""
    
    container_params: Optional[shared_lambdacontainerparams.LambdaContainerParams] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerParams'), 'exclude': lambda f: f is None }})  
    isolation_mode: Optional[shared_lambdaisolationmode_enum.LambdaIsolationModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isolationMode'), 'exclude': lambda f: f is None }})  
    