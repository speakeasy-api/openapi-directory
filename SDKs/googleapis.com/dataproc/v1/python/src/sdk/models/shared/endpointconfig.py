"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EndpointConfigInput:
    r"""Endpoint config for this cluster"""
    
    enable_http_port_access: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableHttpPortAccess'), 'exclude': lambda f: f is None }})
    r"""Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EndpointConfig:
    r"""Endpoint config for this cluster"""
    
    enable_http_port_access: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableHttpPortAccess'), 'exclude': lambda f: f is None }})
    r"""Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false."""  
    http_ports: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('httpPorts'), 'exclude': lambda f: f is None }})
    r"""Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true."""  
    