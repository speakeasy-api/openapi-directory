"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DeviceCreateSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class DeviceCreateTheH323SIPDeviceObjectEncryptionEnum(str, Enum):
    r"""Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."""
    AUTO = 'auto'
    YES = 'yes'
    NO = 'no'

class DeviceCreateTheH323SIPDeviceObjectProtocolEnum(str, Enum):
    r"""Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."""
    H_323 = 'H.323'
    SIP = 'SIP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceCreateTheH323SIPDeviceObject:
    r"""The H.323/SIP device object."""
    
    encryption: DeviceCreateTheH323SIPDeviceObjectEncryptionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryption') }, 'multipart_form': { 'field_name': 'encryption' }})
    r"""Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."""  
    ip: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip') }, 'multipart_form': { 'field_name': 'ip' }})
    r"""Device IP."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }, 'multipart_form': { 'field_name': 'name' }})
    r"""Device name."""  
    protocol: DeviceCreateTheH323SIPDeviceObjectProtocolEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol') }, 'multipart_form': { 'field_name': 'protocol' }})
    r"""Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceCreateTheH323SIPDeviceObject1:
    r"""The H.323/SIP device object."""
    
    encryption: DeviceCreateTheH323SIPDeviceObjectEncryptionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryption') }})
    r"""Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."""  
    ip: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip') }})
    r"""Device IP."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Device name."""  
    protocol: DeviceCreateTheH323SIPDeviceObjectProtocolEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol') }})
    r"""Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Device ID."""  
    

@dataclasses.dataclass
class DeviceCreateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    the_h_323_sip_device_object: Optional[DeviceCreateTheH323SIPDeviceObject1] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `201`<br>
    H.323/SIP device created.
    """  
    