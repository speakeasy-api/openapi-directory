/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApiDimensionFilter } from "./apidimensionfilter";
import { Expose, Type } from "class-transformer";

export enum ApiDimensionFilterGroupGroupTypeEnum {
  And = "AND",
}

/**
 * A set of dimension value filters to test against each row. Only rows that pass all filter groups will be returned. All results within a filter group are either AND'ed or OR'ed together, depending on the group type selected. All filter groups are AND'ed together.
 */
export class ApiDimensionFilterGroup extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ApiDimensionFilter })
  @Expose({ name: "filters" })
  @Type(() => ApiDimensionFilter)
  filters?: ApiDimensionFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "groupType" })
  groupType?: ApiDimensionFilterGroupGroupTypeEnum;
}
