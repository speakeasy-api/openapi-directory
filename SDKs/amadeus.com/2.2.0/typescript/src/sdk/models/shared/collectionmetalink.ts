/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class CollectionMetaLinkCollectionLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first" })
  first?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last" })
  last?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  self?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "up" })
  up?: string;
}

export class CollectionMetaLink extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => CollectionMetaLinkCollectionLinks)
  links?: CollectionMetaLinkCollectionLinks;
}
