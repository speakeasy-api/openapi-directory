"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GroupMembers:
    
    display_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName') }})
    r"""The display name associated with the member"""  
    value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""The local unique identifier for the member"""  
    
class GroupSchemasEnum(str, Enum):
    URN_IETF_PARAMS_SCIM_SCHEMAS_CORE_2_0_GROUP = 'urn:ietf:params:scim:schemas:core:2.0:Group'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Group:
    
    display_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName') }})
    r"""A human-readable name for a security group."""  
    external_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalId') }})
    r"""A unique identifier for the resource as defined by the provisioning client."""  
    members: list[GroupMembers] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('members') }})
    r"""The group members."""  
    schemas: list[GroupSchemasEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemas') }})
    r"""The URIs that are used to indicate the namespaces of the SCIM schemas."""  
    