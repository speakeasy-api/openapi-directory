"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import batchenvironmentvariable as shared_batchenvironmentvariable
from ..shared import batchresourcerequirement as shared_batchresourcerequirement
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchContainerOverrides:
    r"""The overrides that are sent to a container."""
    
    command: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Command'), 'exclude': lambda f: f is None }})  
    environment: Optional[list[shared_batchenvironmentvariable.BatchEnvironmentVariable]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Environment'), 'exclude': lambda f: f is None }})  
    instance_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceType'), 'exclude': lambda f: f is None }})  
    resource_requirements: Optional[list[shared_batchresourcerequirement.BatchResourceRequirement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceRequirements'), 'exclude': lambda f: f is None }})  
    