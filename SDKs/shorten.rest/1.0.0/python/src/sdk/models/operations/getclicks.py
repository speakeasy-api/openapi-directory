"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getclicksmodel as shared_getclicksmodel
from typing import Optional


@dataclasses.dataclass
class GetClicksSecurity:
    
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-api-key' }})  
    

@dataclasses.dataclass
class GetClicksRequest:
    
    continue_from: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'continueFrom', 'style': 'form', 'explode': True }})
    r"""An ID returned by a previous query to continue clicks retrieval (see lastId in response)"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Number of results to return per request"""  
    

@dataclasses.dataclass
class GetClicksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_clicks_model: Optional[shared_getclicksmodel.GetClicksModel] = dataclasses.field(default=None)
    r"""returns Array of Click models, also returns lastId"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    