// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/types"
	"time"
)

type DashboardCRCSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type DashboardCRCRequest struct {
	// Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
	From types.Date `queryParam:"style=form,explode=true,name=from"`
	// End date.
	To types.Date `queryParam:"style=form,explode=true,name=to"`
}

type DashboardCRC200ApplicationXMLCRCPortsUsageCRCPortsHourUsage struct {
	// Hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23.
	Hour *string
	// The maximum number of concurrent ports that are being used in that hour.
	MaxUsage *int64
	// The total number of H.323/SIP connections in that hour.
	TotalUsage *int64
}

type DashboardCRC200ApplicationXMLCRCPortsUsage struct {
	CrcPortsHourUsage []DashboardCRC200ApplicationXMLCRCPortsUsageCRCPortsHourUsage
	// The date and time of the port usage.
	DateTime *time.Time
}

// DashboardCRC200ApplicationXML - **HTTP Status Code:** `200`<br>
// CRC usage returned.<br>
// Only available for paid accounts that have enabled the Dashboard feature.
type DashboardCRC200ApplicationXML struct {
	CrcPortsUsage []DashboardCRC200ApplicationXMLCRCPortsUsage
	// Start date for this report.
	From *types.Date
	// End date for this report.
	To *types.Date
}

type DashboardCRC200ApplicationJSONCRCPortsUsageCRCPortsHourUsage struct {
	// Hour in the day, during which the CRC was used. For example if the CRC was used at 11 pm, the value of this field will be 23.
	Hour *string `json:"hour,omitempty"`
	// The maximum number of concurrent ports that are being used in that hour.
	MaxUsage *int64 `json:"max_usage,omitempty"`
	// The total number of H.323/SIP connections in that hour.
	TotalUsage *int64 `json:"total_usage,omitempty"`
}

type DashboardCRC200ApplicationJSONCRCPortsUsage struct {
	CrcPortsHourUsage []DashboardCRC200ApplicationJSONCRCPortsUsageCRCPortsHourUsage `json:"crc_ports_hour_usage,omitempty"`
	// The date and time of the port usage.
	DateTime *time.Time `json:"date_time,omitempty"`
}

// DashboardCRC200ApplicationJSON - **HTTP Status Code:** `200`<br>
// CRC usage returned.<br>
// Only available for paid accounts that have enabled the Dashboard feature.
type DashboardCRC200ApplicationJSON struct {
	CrcPortsUsage []DashboardCRC200ApplicationJSONCRCPortsUsage `json:"crc_ports_usage,omitempty"`
	// Start date for this report.
	From *types.Date `json:"from,omitempty"`
	// End date for this report.
	To *types.Date `json:"to,omitempty"`
}

type DashboardCRCResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// CRC usage returned.<br>
	// Only available for paid accounts that have enabled the Dashboard feature.
	DashboardCRC200ApplicationJSONObject *DashboardCRC200ApplicationJSON
}
