/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * OK - the request has succeeded.
 */
export class NotifyShopperResult extends SpeakeasyBase {
  /**
   * Reference of Pre-debit notification that is displayed to the shopper
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayedReference" })
  displayedReference?: string;

  /**
   * A simple description of the `resultCode`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * The unique reference that is associated with the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pspReference" })
  pspReference?: string;

  /**
   * Reference of Pre-debit notification sent in my the merchant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * The code indicating the status of notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultCode" })
  resultCode?: string;

  /**
   * The unique reference for the request sent downstream.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperNotificationReference" })
  shopperNotificationReference?: string;

  /**
   * This is the recurringDetailReference returned in the response when token was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storedPaymentMethodId" })
  storedPaymentMethodId?: string;
}
