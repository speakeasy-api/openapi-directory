/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class KeyRetrieveRequest extends SpeakeasyBase {
  /**
   * Public Signing Key - Authentiq ID (43 chars)
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=PK" })
  pk: string;
}

/**
 * Successfully retrieved
 */
export class KeyRetrieveJWT extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "since" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  since?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * base64safe encoded public signing key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sub" })
  sub?: string;
}

export class KeyRetrieveResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unknown key `unknown-key`
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Successfully retrieved
   */
  @SpeakeasyMetadata()
  jwt?: KeyRetrieveJWT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
