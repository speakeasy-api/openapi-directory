"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lambdadevicemount as shared_lambdadevicemount
from ..shared import lambdavolumemount as shared_lambdavolumemount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LambdaContainerParams:
    r"""Contains information about a container in which Lambda functions run on Greengrass core devices."""
    
    devices: Optional[list[shared_lambdadevicemount.LambdaDeviceMount]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devices'), 'exclude': lambda f: f is None }})  
    memory_size_in_kb: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memorySizeInKB'), 'exclude': lambda f: f is None }})  
    mount_ro_sysfs: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mountROSysfs'), 'exclude': lambda f: f is None }})  
    volumes: Optional[list[shared_lambdavolumemount.LambdaVolumeMount]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumes'), 'exclude': lambda f: f is None }})  
    