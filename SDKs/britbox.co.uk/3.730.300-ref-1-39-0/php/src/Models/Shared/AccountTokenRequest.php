<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AccountTokenRequest - The account credentials with requested token scope.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AccountTokenRequest
{
    /**
     * If you specify a cookie type then a content filter cookie will be returned
     * 
     * along with the token(s). This is only intended for web based clients which
     * need to pass the cookies to a server to render a page based on the user's
     * content filters e.g subscription code.
     * 
     * If type `Session` the cookie will be session based.
     * If type `Persistent` the cookie will have a medium term lifespan.
     * If undefined no cookies will be set.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AccountTokenRequestCookieTypeEnum $cookieType
     */
	#[\JMS\Serializer\Annotation\SerializedName('cookieType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AccountTokenRequestCookieTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountTokenRequestCookieTypeEnum $cookieType = null;
    
    /**
     * The email associated with the account.
     * 
     * @var string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $email;
    
    /**
     * The password associated with the account.
     * 
     * @var string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $password;
    
    /**
     * The scope(s) of the tokens required.
     * 
     * For each scope listed an Account and Profile token of that scope will be returned
     * 
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\AccountTokenRequestScopesEnum> $scopes
     */
	#[\JMS\Serializer\Annotation\SerializedName('scopes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\AccountTokenRequestScopesEnum>>')]
    public array $scopes;
    
	public function __construct()
	{
		$this->cookieType = null;
		$this->email = "";
		$this->password = "";
		$this->scopes = [];
	}
}
