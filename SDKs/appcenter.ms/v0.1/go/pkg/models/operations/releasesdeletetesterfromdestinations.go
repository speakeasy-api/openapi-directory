// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReleasesDeleteTesterFromDestinationsSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type ReleasesDeleteTesterFromDestinationsPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The id of the tester
	TesterID string `pathParam:"style=simple,explode=false,name=tester_id"`
}

type ReleasesDeleteTesterFromDestinationsRequest struct {
	PathParams ReleasesDeleteTesterFromDestinationsPathParams
	Security   ReleasesDeleteTesterFromDestinationsSecurity
}

type ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum string

const (
	ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnumBadRequest          ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum = "BadRequest"
	ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnumConflict            ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum = "Conflict"
	ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnumNotAcceptable       ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum = "NotAcceptable"
	ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnumNotFound            ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum = "NotFound"
	ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnumInternalServerError ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum = "InternalServerError"
	ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnumUnauthorized        ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum = "Unauthorized"
	ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnumTooManyRequests     ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e *ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum: %s", s)
	}
}

// ReleasesDeleteTesterFromDestinations404ApplicationJSON - Tester can't be found
type ReleasesDeleteTesterFromDestinations404ApplicationJSON struct {
	Code    ReleasesDeleteTesterFromDestinations404ApplicationJSONCodeEnum `json:"code"`
	Message string                                                         `json:"message"`
}

type ReleasesDeleteTesterFromDestinationsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Tester can't be found
	//
	ReleasesDeleteTesterFromDestinations404ApplicationJSONObject *ReleasesDeleteTesterFromDestinations404ApplicationJSON
}
