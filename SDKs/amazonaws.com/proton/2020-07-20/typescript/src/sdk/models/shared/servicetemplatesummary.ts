/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProvisioningEnum } from "./provisioningenum";
import { Expose, Transform } from "class-transformer";

/**
 * Summary data of an Proton service template resource.
 */
export class ServiceTemplateSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pipelineProvisioning" })
  pipelineProvisioning?: ProvisioningEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendedVersion" })
  recommendedVersion?: string;
}
