/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VoiceOfMerchantState - Response message for VoiceOfMerchant.GetVoiceOfMerchantState.
 */
public class VoiceOfMerchantState {
    /**
     * Indicates that the location fails to comply with our [guidelines](https://support.google.com/business/answer/3038177).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complyWithGuidelines")
    public ComplyWithGuidelines complyWithGuidelines;

    public VoiceOfMerchantState withComplyWithGuidelines(ComplyWithGuidelines complyWithGuidelines) {
        this.complyWithGuidelines = complyWithGuidelines;
        return this;
    }
    
    /**
     * Indicates whether the location has the authority (ownership) over the business on Google. If true, another location cannot take over and become the dominant listing on Maps. However, edits will not become live unless Voice of Merchant is gained (i.e. has_voice_of_merchant is true).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasBusinessAuthority")
    public Boolean hasBusinessAuthority;

    public VoiceOfMerchantState withHasBusinessAuthority(Boolean hasBusinessAuthority) {
        this.hasBusinessAuthority = hasBusinessAuthority;
        return this;
    }
    
    /**
     * Indicates whether the location is in good standing and has control over the business on Google. Any edits made to the location will propagate to Maps after passing the review phase.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasVoiceOfMerchant")
    public Boolean hasVoiceOfMerchant;

    public VoiceOfMerchantState withHasVoiceOfMerchant(Boolean hasVoiceOfMerchant) {
        this.hasVoiceOfMerchant = hasVoiceOfMerchant;
        return this;
    }
    
    /**
     * Indicates that the location duplicates another location that is in good standing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolveOwnershipConflict")
    public java.util.Map<String, Object> resolveOwnershipConflict;

    public VoiceOfMerchantState withResolveOwnershipConflict(java.util.Map<String, Object> resolveOwnershipConflict) {
        this.resolveOwnershipConflict = resolveOwnershipConflict;
        return this;
    }
    
    /**
     * Indicates that the location requires verification. Contains information about the current verification actions performed on the location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verify")
    public Verify verify;

    public VoiceOfMerchantState withVerify(Verify verify) {
        this.verify = verify;
        return this;
    }
    
    /**
     * Indicates that the location will gain voice of merchant after passing review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waitForVoiceOfMerchant")
    public java.util.Map<String, Object> waitForVoiceOfMerchant;

    public VoiceOfMerchantState withWaitForVoiceOfMerchant(java.util.Map<String, Object> waitForVoiceOfMerchant) {
        this.waitForVoiceOfMerchant = waitForVoiceOfMerchant;
        return this;
    }
    
    public VoiceOfMerchantState(){}
}
