"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import graphicsstatsbucket as shared_graphicsstatsbucket
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GraphicsStats:
    r"""Graphics statistics for the App. The information is collected from 'adb shell dumpsys graphicsstats'. For more info see: https://developer.android.com/training/testing/performance.html Statistics will only be present for API 23+."""
    
    buckets: Optional[list[shared_graphicsstatsbucket.GraphicsStatsBucket]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buckets'), 'exclude': lambda f: f is None }})
    r"""Histogram of frame render times. There should be 154 buckets ranging from [5ms, 6ms) to [4950ms, infinity)"""  
    high_input_latency_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('highInputLatencyCount'), 'exclude': lambda f: f is None }})
    r"""Total \\"high input latency\\" events."""  
    janky_frames: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jankyFrames'), 'exclude': lambda f: f is None }})
    r"""Total frames with slow render time. Should be <= total_frames."""  
    missed_vsync_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('missedVsyncCount'), 'exclude': lambda f: f is None }})
    r"""Total \\"missed vsync\\" events."""  
    p50_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p50Millis'), 'exclude': lambda f: f is None }})
    r"""50th percentile frame render time in milliseconds."""  
    p90_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p90Millis'), 'exclude': lambda f: f is None }})
    r"""90th percentile frame render time in milliseconds."""  
    p95_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p95Millis'), 'exclude': lambda f: f is None }})
    r"""95th percentile frame render time in milliseconds."""  
    p99_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('p99Millis'), 'exclude': lambda f: f is None }})
    r"""99th percentile frame render time in milliseconds."""  
    slow_bitmap_upload_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slowBitmapUploadCount'), 'exclude': lambda f: f is None }})
    r"""Total \\"slow bitmap upload\\" events."""  
    slow_draw_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slowDrawCount'), 'exclude': lambda f: f is None }})
    r"""Total \\"slow draw\\" events."""  
    slow_ui_thread_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slowUiThreadCount'), 'exclude': lambda f: f is None }})
    r"""Total \\"slow UI thread\\" events."""  
    total_frames: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalFrames'), 'exclude': lambda f: f is None }})
    r"""Total frames rendered by package."""  
    