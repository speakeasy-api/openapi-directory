/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline - A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.
 */
public class InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline {
    /**
     * The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
     */
    @JsonProperty("amount")
    public Long amount;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
     */
    @JsonProperty("currency")
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum currency;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withCurrency(InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.
     */
    @JsonProperty("digital_wallet_token_id")
    public String digitalWalletTokenId;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withDigitalWalletTokenId(String digitalWalletTokenId) {
        this.digitalWalletTokenId = digitalWalletTokenId;
        return this;
    }
    
    /**
     * The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.
     */
    @JsonProperty("merchant_acceptor_id")
    public String merchantAcceptorId;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withMerchantAcceptorId(String merchantAcceptorId) {
        this.merchantAcceptorId = merchantAcceptorId;
        return this;
    }
    
    /**
     * The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.
     */
    @JsonProperty("merchant_category_code")
    public String merchantCategoryCode;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withMerchantCategoryCode(String merchantCategoryCode) {
        this.merchantCategoryCode = merchantCategoryCode;
        return this;
    }
    
    /**
     * The city the merchant resides in.
     */
    @JsonProperty("merchant_city")
    public String merchantCity;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withMerchantCity(String merchantCity) {
        this.merchantCity = merchantCity;
        return this;
    }
    
    /**
     * The country the merchant resides in.
     */
    @JsonProperty("merchant_country")
    public String merchantCountry;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withMerchantCountry(String merchantCountry) {
        this.merchantCountry = merchantCountry;
        return this;
    }
    
    /**
     * The merchant descriptor of the merchant the card is transacting with.
     */
    @JsonProperty("merchant_descriptor")
    public String merchantDescriptor;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withMerchantDescriptor(String merchantDescriptor) {
        this.merchantDescriptor = merchantDescriptor;
        return this;
    }
    
    /**
     * The state the merchant resides in.
     */
    @JsonProperty("merchant_state")
    public String merchantState;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withMerchantState(String merchantState) {
        this.merchantState = merchantState;
        return this;
    }
    
    /**
     * The payment network used to process this card authorization
     */
    @JsonProperty("network")
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum network;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withNetwork(InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum network) {
        this.network = network;
        return this;
    }
    
    /**
     * Fields specific to the `network`
     */
    @JsonProperty("network_details")
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails networkDetails;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withNetworkDetails(InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails networkDetails) {
        this.networkDetails = networkDetails;
        return this;
    }
    
    /**
     * The identifier of the Real-Time Decision sent to approve or decline this transaction.
     */
    @JsonProperty("real_time_decision_id")
    public String realTimeDecisionId;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withRealTimeDecisionId(String realTimeDecisionId) {
        this.realTimeDecisionId = realTimeDecisionId;
        return this;
    }
    
    /**
     * Why the transaction was declined.
     */
    @JsonProperty("reason")
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum reason;
    public InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline withReason(InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum reason) {
        this.reason = reason;
        return this;
    }
    
}
