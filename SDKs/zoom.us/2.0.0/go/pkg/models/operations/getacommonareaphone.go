// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetACommonAreaPhoneSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type GetACommonAreaPhoneRequest struct {
	// Unique Identifier of the Common Area Phone. Use the unique identifier or the Mac address of the common area phone. The Mac address can be hyphenated (00-04-f2-5e-ec-3c) or not hyphenated (0004f25eec3c). You can retrieved this from the [List Common Area Phones API](https://marketplace.zoom.us/docs/api-reference/zoom-api/common-area-phones/listcommonareaphones).
	CommonAreaPhoneID string `pathParam:"style=simple,explode=false,name=commonAreaPhoneId"`
}

type GetACommonAreaPhone200ApplicationXMLProvisionSipAccounts struct {
	// Authorization ID of the SIP account provided in the provisioning process.
	AuthorizationID *string
	// Outbound proxy provided in the provisioning process.
	OutboundProxy *string
	// Password entered during the  provisioning process.
	Password *string
	// SIP Domain provided in the provisioning process.<br>
	//
	SipDomain *string
	// User name of the SIP account provided in the provisioning process.
	UserName *string
}

// GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum - [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
//
// * `ztp` : Zero touch provisioning.
// * `assisted`: Assisted provisioning.
// * `manual`: Manual provisioning.
type GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum string

const (
	GetACommonAreaPhone200ApplicationXMLProvisionTypeEnumAssisted GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum = "assisted"
	GetACommonAreaPhone200ApplicationXMLProvisionTypeEnumZtp      GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum = "ztp"
	GetACommonAreaPhone200ApplicationXMLProvisionTypeEnumManual   GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum = "manual"
)

func (e *GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "assisted":
		fallthrough
	case "ztp":
		fallthrough
	case "manual":
		*e = GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum: %s", s)
	}
}

// GetACommonAreaPhone200ApplicationXMLProvision - Provisioning information of the common area phone.
type GetACommonAreaPhone200ApplicationXMLProvision struct {
	// SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.
	SipAccounts []GetACommonAreaPhone200ApplicationXMLProvisionSipAccounts
	// [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
	//
	// * `ztp` : Zero touch provisioning.
	// * `assisted`: Assisted provisioning.
	// * `manual`: Manual provisioning.
	//
	//
	Type *GetACommonAreaPhone200ApplicationXMLProvisionTypeEnum
	// Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.
	URL *string
}

type GetACommonAreaPhone200ApplicationXMLSite struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.
	ID *string
	// Name of the site.
	Name *string
}

// GetACommonAreaPhone200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// Common Area Phone details returned successfully.
type GetACommonAreaPhone200ApplicationXML struct {
	// Type of device (manufacturer name + model name).
	DeviceType *string
	// Unique Identifier of the common area phone.
	ID *string
	//  Mac address or serial number.
	MacAddress *string
	// Display name of the common area phone.
	Name *string
	// Provisioning information of the common area phone.
	Provision *GetACommonAreaPhone200ApplicationXMLProvision
	Site      *GetACommonAreaPhone200ApplicationXMLSite
	// Status of the common area phone. It can be either `online` or `offline`.
	Status *string
}

type GetACommonAreaPhone200ApplicationJSONProvisionSipAccounts struct {
	// Authorization ID of the SIP account provided in the provisioning process.
	AuthorizationID *string `json:"authorization_id,omitempty"`
	// Outbound proxy provided in the provisioning process.
	OutboundProxy *string `json:"outbound_proxy,omitempty"`
	// Password entered during the  provisioning process.
	Password *string `json:"password,omitempty"`
	// SIP Domain provided in the provisioning process.<br>
	//
	SipDomain *string `json:"sip_domain,omitempty"`
	// User name of the SIP account provided in the provisioning process.
	UserName *string `json:"user_name,omitempty"`
}

// GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum - [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
//
// * `ztp` : Zero touch provisioning.
// * `assisted`: Assisted provisioning.
// * `manual`: Manual provisioning.
type GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum string

const (
	GetACommonAreaPhone200ApplicationJSONProvisionTypeEnumAssisted GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum = "assisted"
	GetACommonAreaPhone200ApplicationJSONProvisionTypeEnumZtp      GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum = "ztp"
	GetACommonAreaPhone200ApplicationJSONProvisionTypeEnumManual   GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum = "manual"
)

func (e *GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "assisted":
		fallthrough
	case "ztp":
		fallthrough
	case "manual":
		*e = GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum: %s", s)
	}
}

// GetACommonAreaPhone200ApplicationJSONProvision - Provisioning information of the common area phone.
type GetACommonAreaPhone200ApplicationJSONProvision struct {
	// SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.
	SipAccounts []GetACommonAreaPhone200ApplicationJSONProvisionSipAccounts `json:"sip_accounts,omitempty"`
	// [Provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:
	//
	// * `ztp` : Zero touch provisioning.
	// * `assisted`: Assisted provisioning.
	// * `manual`: Manual provisioning.
	//
	//
	Type *GetACommonAreaPhone200ApplicationJSONProvisionTypeEnum `json:"type,omitempty"`
	// Provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.
	URL *string `json:"url,omitempty"`
}

type GetACommonAreaPhone200ApplicationJSONSite struct {
	// Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.
	ID *string `json:"id,omitempty"`
	// Name of the site.
	Name *string `json:"name,omitempty"`
}

// GetACommonAreaPhone200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// Common Area Phone details returned successfully.
type GetACommonAreaPhone200ApplicationJSON struct {
	// Type of device (manufacturer name + model name).
	DeviceType *string `json:"device_type,omitempty"`
	// Unique Identifier of the common area phone.
	ID *string `json:"id,omitempty"`
	//  Mac address or serial number.
	MacAddress *string `json:"mac_address,omitempty"`
	// Display name of the common area phone.
	Name *string `json:"name,omitempty"`
	// Provisioning information of the common area phone.
	Provision *GetACommonAreaPhone200ApplicationJSONProvision `json:"provision,omitempty"`
	Site      *GetACommonAreaPhone200ApplicationJSONSite      `json:"site,omitempty"`
	// Status of the common area phone. It can be either `online` or `offline`.
	Status *string `json:"status,omitempty"`
}

type GetACommonAreaPhoneResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// Common Area Phone details returned successfully.
	GetACommonAreaPhone200ApplicationJSONObject *GetACommonAreaPhone200ApplicationJSON
}
