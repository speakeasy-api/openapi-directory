// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListUsers200ApplicationJSONActionEnum - The id of the action
type ListUsers200ApplicationJSONActionEnum string

const (
	ListUsers200ApplicationJSONActionEnumListUsers ListUsers200ApplicationJSONActionEnum = "listUsers"
)

func (e *ListUsers200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "listUsers":
		*e = ListUsers200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListUsers200ApplicationJSONActionEnum: %s", s)
	}
}

// ListUsers200ApplicationJSONResultEnum - Result of the request
type ListUsers200ApplicationJSONResultEnum string

const (
	ListUsers200ApplicationJSONResultEnumSuccess ListUsers200ApplicationJSONResultEnum = "success"
	ListUsers200ApplicationJSONResultEnumError   ListUsers200ApplicationJSONResultEnum = "error"
)

func (e *ListUsers200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ListUsers200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListUsers200ApplicationJSONResultEnum: %s", s)
	}
}

// ListUsers200ApplicationJSON - List users
type ListUsers200ApplicationJSON struct {
	// The id of the action
	Action ListUsers200ApplicationJSONActionEnum `json:"action"`
	Data   []shared.ValidatedUser                `json:"data"`
	// Result of the request
	Result ListUsers200ApplicationJSONResultEnum `json:"result"`
}

type ListUsersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// List users
	ListUsers200ApplicationJSONObject *ListUsers200ApplicationJSON
}
