// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ImportModelXAmzTargetEnum
type ImportModelXAmzTargetEnum string

const (
	ImportModelXAmzTargetEnumComprehend20171127ImportModel ImportModelXAmzTargetEnum = "Comprehend_20171127.ImportModel"
)

func (e *ImportModelXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Comprehend_20171127.ImportModel":
		*e = ImportModelXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ImportModelXAmzTargetEnum: %s", s)
	}
}

type ImportModelHeaders struct {
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ImportModelXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ImportModelRequest struct {
	Headers ImportModelHeaders
	Request shared.ImportModelRequest `request:"mediaType=application/json"`
}

type ImportModelResponse struct {
	ContentType string
	// Success
	ImportModelResponse *shared.ImportModelResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// KmsKeyValidationException
	KmsKeyValidationException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ResourceUnavailableException
	ResourceUnavailableException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// TooManyTagsException
	TooManyTagsException interface{}
}
