// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeregisterWebhookWithThirdPartyXAmzTargetEnum
type DeregisterWebhookWithThirdPartyXAmzTargetEnum string

const (
	DeregisterWebhookWithThirdPartyXAmzTargetEnumCodePipeline20150709DeregisterWebhookWithThirdParty DeregisterWebhookWithThirdPartyXAmzTargetEnum = "CodePipeline_20150709.DeregisterWebhookWithThirdParty"
)

func (e DeregisterWebhookWithThirdPartyXAmzTargetEnum) ToPointer() *DeregisterWebhookWithThirdPartyXAmzTargetEnum {
	return &e
}

func (e *DeregisterWebhookWithThirdPartyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodePipeline_20150709.DeregisterWebhookWithThirdParty":
		*e = DeregisterWebhookWithThirdPartyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeregisterWebhookWithThirdPartyXAmzTargetEnum: %v", v)
	}
}

type DeregisterWebhookWithThirdPartyRequest struct {
	DeregisterWebhookWithThirdPartyInput shared.DeregisterWebhookWithThirdPartyInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           DeregisterWebhookWithThirdPartyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeregisterWebhookWithThirdPartyResponse struct {
	ContentType string
	// Success
	DeregisterWebhookWithThirdPartyOutput map[string]interface{}
	StatusCode                            int
	RawResponse                           *http.Response
	// ValidationException
	ValidationException interface{}
	// WebhookNotFoundException
	WebhookNotFoundException interface{}
}
