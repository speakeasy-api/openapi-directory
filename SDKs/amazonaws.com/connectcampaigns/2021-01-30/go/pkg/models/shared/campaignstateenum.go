// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CampaignStateEnum - State of a campaign
type CampaignStateEnum string

const (
	CampaignStateEnumInitialized CampaignStateEnum = "Initialized"
	CampaignStateEnumRunning     CampaignStateEnum = "Running"
	CampaignStateEnumPaused      CampaignStateEnum = "Paused"
	CampaignStateEnumStopped     CampaignStateEnum = "Stopped"
	CampaignStateEnumFailed      CampaignStateEnum = "Failed"
)

func (e CampaignStateEnum) ToPointer() *CampaignStateEnum {
	return &e
}

func (e *CampaignStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Initialized":
		fallthrough
	case "Running":
		fallthrough
	case "Paused":
		fallthrough
	case "Stopped":
		fallthrough
	case "Failed":
		*e = CampaignStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CampaignStateEnum: %v", v)
	}
}
