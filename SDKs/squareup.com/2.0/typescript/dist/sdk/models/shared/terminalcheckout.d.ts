import { SpeakeasyBase } from "../../../internal/utils";
import { DeviceCheckoutOptions } from "./devicecheckoutoptions";
import { Money } from "./money";
export declare class TerminalCheckout extends SpeakeasyBase {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     *
     * @remarks
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    amountMoney: Money;
    /**
     * The ID of the application that created the checkout.
     */
    appId?: string;
    /**
     * Present if the status is `CANCELED`.
     */
    cancelReason?: string;
    /**
     * The time when the `TerminalCheckout` was created, as an RFC 3339 timestamp.
     */
    createdAt?: string;
    /**
     * An RFC 3339 duration, after which the checkout is automatically canceled.
     *
     * @remarks
     * A `TerminalCheckout` that is `PENDING` is automatically `CANCELED` and has a cancellation reason
     * of `TIMED_OUT`.
     *
     * Default: 5 minutes from creation
     *
     * Maximum: 5 minutes
     */
    deadlineDuration?: string;
    deviceOptions: DeviceCheckoutOptions;
    /**
     * A unique ID for this `TerminalCheckout`.
     */
    id?: string;
    /**
     * The location of the device where the `TerminalCheckout` was directed.
     */
    locationId?: string;
    /**
     * An optional note to associate with the checkout, as well as with any payments used to complete the checkout.
     */
    note?: string;
    /**
     * A list of IDs for payments created by this `TerminalCheckout`.
     */
    paymentIds?: string[];
    /**
     * The type of payment the terminal should attempt to capture from. Defaults to `CARD_PRESENT`.
     */
    paymentType?: string;
    /**
     * An optional user-defined reference ID that can be used to associate
     *
     * @remarks
     * this `TerminalCheckout` to another entity in an external system. For example, an order
     * ID generated by a third-party shopping cart. The ID is also associated with any payments
     * used to complete the checkout.
     */
    referenceId?: string;
    /**
     * The status of the `TerminalCheckout`.
     *
     * @remarks
     * Options: `PENDING`, `IN_PROGRESS`, `CANCEL_REQUESTED`, `CANCELED`, `COMPLETED`
     */
    status?: string;
    /**
     * The time when the `TerminalCheckout` was last updated, as an RFC 3339 timestamp.
     */
    updatedAt?: string;
}
