/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalysisStatusUnion } from "./analysisstatusunion";
import { AnalysisTypeEnum } from "./analysistypeenum";
import { AntipatternReportResult } from "./antipatternreportresult";
import { Expose, Type } from "class-transformer";

/**
 * The error in server analysis.
 */
export class Result extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "analysisStatus" })
  @Type(() => AnalysisStatusUnion)
  analysisStatus?: AnalysisStatusUnion;

  @SpeakeasyMetadata()
  @Expose({ name: "analysisType" })
  analysisType?: AnalysisTypeEnum;

  @SpeakeasyMetadata({ elemType: AntipatternReportResult })
  @Expose({ name: "antipatternReportResultList" })
  @Type(() => AntipatternReportResult)
  antipatternReportResultList?: AntipatternReportResult[];

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;
}
