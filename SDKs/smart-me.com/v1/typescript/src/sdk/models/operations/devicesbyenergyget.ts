/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum DevicesByEnergyGetMeterEnergyTypeEnum {
  MeterTypeUnknown = "MeterTypeUnknown",
  MeterTypeElectricity = "MeterTypeElectricity",
  MeterTypeWater = "MeterTypeWater",
  MeterTypeGas = "MeterTypeGas",
  MeterTypeHeat = "MeterTypeHeat",
  MeterTypeHCA = "MeterTypeHCA",
  MeterTypeAllMeters = "MeterTypeAllMeters",
  MeterTypeTemperature = "MeterTypeTemperature",
  MeterTypeMBusGateway = "MeterTypeMBusGateway",
  MeterTypeRs485Gateway = "MeterTypeRS485Gateway",
  MeterTypeCustomDevice = "MeterTypeCustomDevice",
  MeterTypeCompressedAir = "MeterTypeCompressedAir",
  MeterTypeSolarLog = "MeterTypeSolarLog",
  MeterTypeVirtualMeter = "MeterTypeVirtualMeter",
  MeterTypeWMBusGateway = "MeterTypeWMBusGateway",
}

export class DevicesByEnergyGetRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=meterEnergyType",
  })
  meterEnergyType: DevicesByEnergyGetMeterEnergyTypeEnum;
}

export class DevicesByEnergyGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.Device })
  devices?: shared.Device[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
