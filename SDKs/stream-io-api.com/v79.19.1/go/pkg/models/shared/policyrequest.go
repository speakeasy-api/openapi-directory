// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PolicyRequestActionEnum string

const (
	PolicyRequestActionEnumDeny  PolicyRequestActionEnum = "Deny"
	PolicyRequestActionEnumAllow PolicyRequestActionEnum = "Allow"
)

func (e *PolicyRequestActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Deny":
		fallthrough
	case "Allow":
		*e = PolicyRequestActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PolicyRequestActionEnum: %s", s)
	}
}

type PolicyRequest struct {
	Action *PolicyRequestActionEnum `json:"action,omitempty"`
	// User-friendly policy name
	Name string `json:"name"`
	// Whether policy applies to resource owner or not
	Owner *bool `json:"owner,omitempty"`
	// Policy priority
	Priority float64 `json:"priority"`
	// List of resources to apply policy to
	Resources []string `json:"resources,omitempty"`
	// List of roles to apply policy to
	Roles []string `json:"roles,omitempty"`
}
