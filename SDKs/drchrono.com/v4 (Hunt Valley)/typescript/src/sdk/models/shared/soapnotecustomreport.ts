/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Array of field objects
 */
export class SoapNoteCustomReportClinicalNoteField extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowed_values" })
  allowedValues?: string[];

  /**
   * Indicates that the field has been soft-deleted by the doctor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "clinical_note_template" })
  clinicalNoteTemplate?: number;

  /**
   * One of `""`, `"Checkbox"`, `"NullCheckbox"`, `"String"`, `"TwoStrings"`, `"FreeDraw"`, `"Photo"`, `"Header"`, `"Subheader"`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data_type" })
  dataType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Indicates that a note should not be locked unless a value is provided for this field
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;
}

/**
 * Order of templates
 */
export class SoapNoteCustomReportSoapNoteCustomReport extends SpeakeasyBase {
  /**
   * Order of the template on complete notes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "on_complete_note" })
  onCompleteNote?: number;

  /**
   * Order of the template on iPad
   */
  @SpeakeasyMetadata()
  @Expose({ name: "on_ipad" })
  onIpad?: number;
}

/**
 * OK
 */
export class SoapNoteCustomReport extends SpeakeasyBase {
  /**
   * Indicates that the doctor has soft-deleted this template, and will not use it for future appointments
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  /**
   * clinical note fields
   */
  @SpeakeasyMetadata({ elemType: SoapNoteCustomReportClinicalNoteField })
  @Expose({ name: "clinical_note_fields" })
  @Type(() => SoapNoteCustomReportClinicalNoteField)
  clinicalNoteFields?: SoapNoteCustomReportClinicalNoteField[];

  @SpeakeasyMetadata()
  @Expose({ name: "doctor" })
  doctor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_onpatient" })
  isOnpatient?: boolean;

  /**
   * If this is true, this report will be the same across all notes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_persistent" })
  isPersistent?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Order of templates
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  @Type(() => SoapNoteCustomReportSoapNoteCustomReport)
  order?: SoapNoteCustomReportSoapNoteCustomReport;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}
