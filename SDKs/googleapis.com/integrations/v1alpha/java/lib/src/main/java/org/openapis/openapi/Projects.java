/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Projects {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Projects(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Creates an Apps Script project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsCreateResponse integrationsProjectsLocationsAppsScriptProjectsCreate(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsCreateRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsCreateRequest.class, baseUrl, "/v1alpha/{parent}/appsScriptProjects", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsCreateResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse.class);
                res.googleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse = out;
            }
        }

        return res;
    }

    /**
     * Links a existing Apps Script project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsLinkResponse integrationsProjectsLocationsAppsScriptProjectsLink(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsLinkRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsLinkSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsLinkRequest.class, baseUrl, "/v1alpha/{parent}/appsScriptProjects:link", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsLinkRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsLinkResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsAppsScriptProjectsLinkResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse.class);
                res.googleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists Connections in a given project and location.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsListResponse integrationsProjectsLocationsConnectionsList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsListRequest.class, baseUrl, "/v1alpha/{parent}/connections", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListConnectionsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListConnectionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListConnectionsResponse.class);
                res.googleCloudIntegrationsV1alphaListConnectionsResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists the JSON schemas for the inputs and outputs of actions, filtered by action name.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeActionSchemasListResponse integrationsProjectsLocationsConnectionsRuntimeActionSchemasList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeActionSchemasListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeActionSchemasListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeActionSchemasListRequest.class, baseUrl, "/v1alpha/{parent}/runtimeActionSchemas", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeActionSchemasListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeActionSchemasListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeActionSchemasListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse.class);
                res.googleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists the JSON schemas for the properties of runtime entities, filtered by entity name.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeEntitySchemasListResponse integrationsProjectsLocationsConnectionsRuntimeEntitySchemasList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeEntitySchemasListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeEntitySchemasListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeEntitySchemasListRequest.class, baseUrl, "/v1alpha/{parent}/runtimeEntitySchemas", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeEntitySchemasListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeEntitySchemasListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsConnectionsRuntimeEntitySchemasListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse.class);
                res.googleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an auth config record. Fetch corresponding credentials for specific auth types, e.g. access token for OAuth 2.0, JWT token for JWT. Encrypt the auth config with Cloud KMS and store the encrypted credentials in Spanner. Returns the encrypted auth config.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsCreateResponse integrationsProjectsLocationsProductsAuthConfigsCreate(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsCreateRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsCreateRequest.class, baseUrl, "/v1alpha/{parent}/authConfigs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaAuthConfigInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsCreateResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaAuthConfig = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaAuthConfig out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaAuthConfig.class);
                res.googleCloudIntegrationsV1alphaAuthConfig = out;
            }
        }

        return res;
    }

    /**
     * Lists all auth configs that match the filter. Restrict to auth configs belong to the current client only.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsListResponse integrationsProjectsLocationsProductsAuthConfigsList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsListRequest.class, baseUrl, "/v1alpha/{parent}/authConfigs", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsAuthConfigsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListAuthConfigsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListAuthConfigsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListAuthConfigsResponse.class);
                res.googleCloudIntegrationsV1alphaListAuthConfigsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates a new certificate. The certificate will be registered to the trawler service and will be encrypted using cloud KMS and stored in Spanner Returns the certificate.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesCreateResponse integrationsProjectsLocationsProductsCertificatesCreate(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesCreateRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesCreateRequest.class, baseUrl, "/v1alpha/{parent}/certificates", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaCertificateInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesCreateResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaCertificate = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaCertificate out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaCertificate.class);
                res.googleCloudIntegrationsV1alphaCertificate = out;
            }
        }

        return res;
    }

    /**
     * List all the certificates that match the filter. Restrict to certificate of current client only.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesListResponse integrationsProjectsLocationsProductsCertificatesList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesListRequest.class, baseUrl, "/v1alpha/{parent}/certificates", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsCertificatesListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListCertificatesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListCertificatesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListCertificatesResponse.class);
                res.googleCloudIntegrationsV1alphaListCertificatesResponse = out;
            }
        }

        return res;
    }

    /**
     * Executes integrations synchronously by passing the trigger id in the request body. The request is not returned until the requested executions are either fulfilled or experienced an error. If the integration name is not specified (passing `-`), all of the associated integration under the given trigger_id will be executed. Otherwise only the specified integration for the given `trigger_id` is executed. This is helpful for execution the integration from UI.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecuteResponse integrationsProjectsLocationsProductsIntegrationsExecute(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecuteRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecuteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecuteRequest.class, baseUrl, "/v1alpha/{name}:execute", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaExecuteIntegrationsRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecuteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecuteResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecuteResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaExecuteIntegrationsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse.class);
                res.googleCloudIntegrationsV1alphaExecuteIntegrationsResponse = out;
            }
        }

        return res;
    }

    /**
     * Cancellation of an execution
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsCancelResponse integrationsProjectsLocationsProductsIntegrationsExecutionsCancel(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsCancelRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsCancelSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsCancelRequest.class, baseUrl, "/v1alpha/{name}:cancel", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsCancelRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsCancelResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsCancelResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaCancelExecutionResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaCancelExecutionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaCancelExecutionResponse.class);
                res.googleCloudIntegrationsV1alphaCancelExecutionResponse = out;
            }
        }

        return res;
    }

    /**
     * Lists the results of all the integration executions. The response includes the same information as the [execution log](https://cloud.google.com/application-integration/docs/viewing-logs) in the Integration UI.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsListResponse integrationsProjectsLocationsProductsIntegrationsExecutionsList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsListRequest.class, baseUrl, "/v1alpha/{parent}/executions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListExecutionsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListExecutionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListExecutionsResponse.class);
                res.googleCloudIntegrationsV1alphaListExecutionsResponse = out;
            }
        }

        return res;
    }

    /**
     * * Lifts suspension for advanced suspension task. Fetch corresponding suspension with provided suspension Id, resolve suspension, and set up suspension result for the Suspension Task.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsLiftResponse integrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsLift(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsLiftRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsLiftSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsLiftRequest.class, baseUrl, "/v1alpha/{name}:lift", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaLiftSuspensionRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsLiftRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsLiftResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsLiftResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaLiftSuspensionResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaLiftSuspensionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaLiftSuspensionResponse.class);
                res.googleCloudIntegrationsV1alphaLiftSuspensionResponse = out;
            }
        }

        return res;
    }

    /**
     * * Lists suspensions associated with a specific execution. Only those with permissions to resolve the relevant suspensions will be able to view them.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsListResponse integrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsListRequest.class, baseUrl, "/v1alpha/{parent}/suspensions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListSuspensionsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListSuspensionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListSuspensionsResponse.class);
                res.googleCloudIntegrationsV1alphaListSuspensionsResponse = out;
            }
        }

        return res;
    }

    /**
     * * Resolves (lifts/rejects) any number of suspensions. If the integration is already running, only the status of the suspension is updated. Otherwise, the suspended integration will begin execution again.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolveResponse integrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolve(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolveRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolveSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolveRequest.class, baseUrl, "/v1alpha/{name}:resolve", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaResolveSuspensionRequestInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolveRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolveResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolveResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaResolveSuspensionResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleCloudIntegrationsV1alphaResolveSuspensionResponse = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all integrations in the specified project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsListResponse integrationsProjectsLocationsProductsIntegrationsList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsListRequest.class, baseUrl, "/v1alpha/{parent}/integrations", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListIntegrationsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListIntegrationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListIntegrationsResponse.class);
                res.googleCloudIntegrationsV1alphaListIntegrationsResponse = out;
            }
        }

        return res;
    }

    /**
     * Schedules an integration for execution by passing the trigger id and the scheduled time in the request body.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsScheduleResponse integrationsProjectsLocationsProductsIntegrationsSchedule(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsScheduleRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsScheduleSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsScheduleRequest.class, baseUrl, "/v1alpha/{name}:schedule", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaScheduleIntegrationsRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsScheduleRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsScheduleResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsScheduleResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaScheduleIntegrationsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse.class);
                res.googleCloudIntegrationsV1alphaScheduleIntegrationsResponse = out;
            }
        }

        return res;
    }

    /**
     * Downloads an integration. Retrieves the `IntegrationVersion` for a given `integration_id` and returns the response as a string.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsDownloadResponse integrationsProjectsLocationsProductsIntegrationsVersionsDownload(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsDownloadRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsDownloadSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsDownloadRequest.class, baseUrl, "/v1alpha/{name}:download", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsDownloadRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsDownloadResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsDownloadResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse.class);
                res.googleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse = out;
            }
        }

        return res;
    }

    /**
     * This RPC throws an exception if the integration is in ARCHIVED or ACTIVE state. This RPC throws an exception if the version being published is DRAFT, and if the `locked_by` user is not the same as the user performing the Publish. Audit fields updated include last_published_timestamp, last_published_by, last_modified_timestamp, last_modified_by. Any existing lock is on this integration is released.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsPublishResponse integrationsProjectsLocationsProductsIntegrationsVersionsPublish(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsPublishRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsPublishSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsPublishRequest.class, baseUrl, "/v1alpha/{name}:publish", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsPublishRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsPublishResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsPublishResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaPublishIntegrationVersionResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleCloudIntegrationsV1alphaPublishIntegrationVersionResponse = out;
            }
        }

        return res;
    }

    /**
     * Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this integration. It then performs the same action as the CreateDraftIntegrationVersion (i.e., copies the DRAFT version of the integration as a SNAPSHOT and then creates a new DRAFT version with the `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set to the current timestamp). Both the `locked_by` and `user_taking_over` are notified via email about the takeover. This RPC throws an exception if the integration is not in DRAFT status or if the `locked_by` and `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated the same as an edit of the integration, and hence shares ACLs with edit. Audit fields updated include last_modified_timestamp, last_modified_by.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsTakeoverEditLockResponse integrationsProjectsLocationsProductsIntegrationsVersionsTakeoverEditLock(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsTakeoverEditLockRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsTakeoverEditLockSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsTakeoverEditLockRequest.class, baseUrl, "/v1alpha/{integrationVersion}:takeoverEditLock", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsTakeoverEditLockRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsTakeoverEditLockResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsTakeoverEditLockResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaTakeoverEditLockResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse.class);
                res.googleCloudIntegrationsV1alphaTakeoverEditLockResponse = out;
            }
        }

        return res;
    }

    /**
     * Sets the status of the ACTIVE integration to SNAPSHOT with a new tag "PREVIOUSLY_PUBLISHED" after validating it. The "HEAD" and "PUBLISH_REQUESTED" tags do not change. This RPC throws an exception if the version being snapshot is not ACTIVE. Audit fields added include action, action_by, action_timestamp.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUnpublishResponse integrationsProjectsLocationsProductsIntegrationsVersionsUnpublish(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUnpublishRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUnpublishSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUnpublishRequest.class, baseUrl, "/v1alpha/{name}:unpublish", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "requestBody", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUnpublishRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUnpublishResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUnpublishResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Uploads an integration. The content can be a previously downloaded integration. Performs the same function as CreateDraftIntegrationVersion, but accepts input in a string format, which holds the complete representation of the IntegrationVersion content.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUploadResponse integrationsProjectsLocationsProductsIntegrationsVersionsUpload(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUploadRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUploadSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUploadRequest.class, baseUrl, "/v1alpha/{parent}/versions:upload", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaUploadIntegrationVersionRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUploadRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUploadResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationsVersionsUploadResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaUploadIntegrationVersionResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse.class);
                res.googleCloudIntegrationsV1alphaUploadIntegrationVersionResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an IntegrationTemplateVersion.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsCreateResponse integrationsProjectsLocationsProductsIntegrationtemplatesVersionsCreate(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsCreateRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsCreateRequest.class, baseUrl, "/v1alpha/{parent}/versions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaIntegrationTemplateVersionInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsCreateResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaIntegrationTemplateVersion = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion.class);
                res.googleCloudIntegrationsV1alphaIntegrationTemplateVersion = out;
            }
        }

        return res;
    }

    /**
     * Returns the list of all IntegrationTemplateVersions in the specified project.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsListResponse integrationsProjectsLocationsProductsIntegrationtemplatesVersionsList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsListRequest.class, baseUrl, "/v1alpha/{parent}/versions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsProductsIntegrationtemplatesVersionsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse.class);
                res.googleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns the sfdc instance.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesCreateResponse integrationsProjectsLocationsSfdcInstancesCreate(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesCreateRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesCreateRequest.class, baseUrl, "/v1alpha/{parent}/sfdcInstances", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaSfdcInstanceInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesCreateResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaSfdcInstance = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcInstance out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcInstance.class);
                res.googleCloudIntegrationsV1alphaSfdcInstance = out;
            }
        }

        return res;
    }

    /**
     * Lists all sfdc instances that match the filter. Restrict to sfdc instances belonging to the current client only.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesListResponse integrationsProjectsLocationsSfdcInstancesList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesListRequest.class, baseUrl, "/v1alpha/{parent}/sfdcInstances", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListSfdcInstancesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse.class);
                res.googleCloudIntegrationsV1alphaListSfdcInstancesResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns the sfdc channel.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsCreateResponse integrationsProjectsLocationsSfdcInstancesSfdcChannelsCreate(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsCreateRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsCreateRequest.class, baseUrl, "/v1alpha/{parent}/sfdcChannels", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaSfdcChannelInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsCreateResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsCreateResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaSfdcChannel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcChannel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
                res.googleCloudIntegrationsV1alphaSfdcChannel = out;
            }
        }

        return res;
    }

    /**
     * Deletes an sfdc channel.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsDeleteResponse integrationsProjectsLocationsSfdcInstancesSfdcChannelsDelete(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsDeleteRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsDeleteRequest.class, baseUrl, "/v1alpha/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsDeleteResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsDeleteResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception will be thrown.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsGetResponse integrationsProjectsLocationsSfdcInstancesSfdcChannelsGet(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsGetRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsGetRequest.class, baseUrl, "/v1alpha/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsGetResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsGetResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaSfdcChannel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcChannel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
                res.googleCloudIntegrationsV1alphaSfdcChannel = out;
            }
        }

        return res;
    }

    /**
     * Lists all sfdc channels that match the filter. Restrict to sfdc channels belonging to the current client only.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsListResponse integrationsProjectsLocationsSfdcInstancesSfdcChannelsList(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsListRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsListRequest.class, baseUrl, "/v1alpha/{parent}/sfdcChannels", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsListResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaListSfdcChannelsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse.class);
                res.googleCloudIntegrationsV1alphaListSfdcChannelsResponse = out;
            }
        }

        return res;
    }

    /**
     * Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the sfdc channel.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchResponse integrationsProjectsLocationsSfdcInstancesSfdcChannelsPatch(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest request, org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest.class, baseUrl, "/v1alpha/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudIntegrationsV1alphaSfdcChannelInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchResponse res = new org.openapis.openapi.models.operations.IntegrationsProjectsLocationsSfdcInstancesSfdcChannelsPatchResponse(contentType, httpRes.statusCode()) {{
            googleCloudIntegrationsV1alphaSfdcChannel = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcChannel out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudIntegrationsV1alphaSfdcChannel.class);
                res.googleCloudIntegrationsV1alphaSfdcChannel = out;
            }
        }

        return res;
    }
}