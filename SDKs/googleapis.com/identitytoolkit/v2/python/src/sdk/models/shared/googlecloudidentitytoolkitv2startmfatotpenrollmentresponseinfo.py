"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIdentitytoolkitV2StartMfaTotpEnrollmentResponseInfo:
    r"""Mfa response info specific to TOTP auth for StartMfa."""
    
    finalize_enrollment_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finalizeEnrollmentTime'), 'exclude': lambda f: f is None }})
    r"""The time by which the enrollment must finish."""  
    hashing_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hashingAlgorithm'), 'exclude': lambda f: f is None }})
    r"""The hashing algorithm used to generate the verification code."""  
    period_sec: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('periodSec'), 'exclude': lambda f: f is None }})
    r"""Duration in seconds at which the verification code will change."""  
    session_info: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sessionInfo'), 'exclude': lambda f: f is None }})
    r"""An encoded string that represents the enrollment session."""  
    shared_secret_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sharedSecretKey'), 'exclude': lambda f: f is None }})
    r"""A base 32 encoded string that represents the shared TOTP secret. The base 32 encoding is the one specified by [RFC4648#section-6](https://datatracker.ietf.org/doc/html/rfc4648#section-6). (This is the same as the base 32 encoding from [RFC3548#section-5](https://datatracker.ietf.org/doc/html/rfc3548#section-5).)"""  
    verification_code_length: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verificationCodeLength'), 'exclude': lambda f: f is None }})
    r"""The length of the verification code that needs to be generated."""  
    