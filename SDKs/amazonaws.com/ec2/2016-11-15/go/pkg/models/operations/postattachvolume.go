// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTAttachVolumeActionEnum
type POSTAttachVolumeActionEnum string

const (
	POSTAttachVolumeActionEnumAttachVolume POSTAttachVolumeActionEnum = "AttachVolume"
)

func (e POSTAttachVolumeActionEnum) ToPointer() *POSTAttachVolumeActionEnum {
	return &e
}

func (e *POSTAttachVolumeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AttachVolume":
		*e = POSTAttachVolumeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAttachVolumeActionEnum: %v", v)
	}
}

// POSTAttachVolumeVersionEnum
type POSTAttachVolumeVersionEnum string

const (
	POSTAttachVolumeVersionEnumTwoThousandAndSixteen1115 POSTAttachVolumeVersionEnum = "2016-11-15"
)

func (e POSTAttachVolumeVersionEnum) ToPointer() *POSTAttachVolumeVersionEnum {
	return &e
}

func (e *POSTAttachVolumeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTAttachVolumeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAttachVolumeVersionEnum: %v", v)
	}
}

type POSTAttachVolumeRequest struct {
	Action            POSTAttachVolumeActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                      `request:"mediaType=text/xml"`
	Version           POSTAttachVolumeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTAttachVolumeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
