// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CalculateSLACalculateSLARequestItem3Dimension struct {
	Height int `json:"height"`
	Length int `json:"length"`
	Weight int `json:"weight"`
	Width  int `json:"width"`
}

type CalculateSLACalculateSLARequestItem3KitItemDimension struct {
	Height int `json:"height"`
	Length int `json:"length"`
	Weight int `json:"weight"`
	Width  int `json:"width"`
}

type CalculateSLACalculateSLARequestItem3KitItem struct {
	AdditionalHandlingTime string                                               `json:"additionalHandlingTime"`
	Dimension              CalculateSLACalculateSLARequestItem3KitItemDimension `json:"dimension"`
	GroupItemID            string                                               `json:"groupItemId"`
	ID                     string                                               `json:"id"`
	KitItem                []string                                             `json:"kitItem"`
	Price                  int                                                  `json:"price"`
	Quantity               int                                                  `json:"quantity"`
}

type CalculateSLACalculateSLARequestItem3 struct {
	AdditionalHandlingTime string                                        `json:"additionalHandlingTime"`
	Dimension              CalculateSLACalculateSLARequestItem3Dimension `json:"dimension"`
	GroupItemID            string                                        `json:"groupItemId"`
	ID                     string                                        `json:"id"`
	KitItem                []CalculateSLACalculateSLARequestItem3KitItem `json:"kitItem"`
	Price                  int                                           `json:"price"`
	Quantity               int                                           `json:"quantity"`
}

type CalculateSLACalculateSLARequestLocation3 struct {
	Country string    `json:"country"`
	Point   []float64 `json:"point"`
	ZipCode string    `json:"zipCode"`
}

type CalculateSLACalculateSLARequest struct {
	Items        []CalculateSLACalculateSLARequestItem3   `json:"items"`
	Location     CalculateSLACalculateSLARequestLocation3 `json:"location"`
	SalesChannel string                                   `json:"salesChannel"`
}

type CalculateSLARequest struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent.
	ContentType string                            `header:"style=simple,explode=false,name=Content-Type"`
	RequestBody []CalculateSLACalculateSLARequest `request:"mediaType=application/json"`
}

type CalculateSLA200ApplicationJSONDeliveryWindow struct {
	EndDateUtc   *string  `json:"endDateUtc,omitempty"`
	ListPrice    *float64 `json:"listPrice,omitempty"`
	StartDateUtc *string  `json:"startDateUtc,omitempty"`
}

type CalculateSLA200ApplicationJSONLocation1InStore1 struct {
	IsCheckedIn bool   `json:"IsCheckedIn"`
	StoreID     string `json:"StoreId"`
}

type CalculateSLA200ApplicationJSONLocation1 struct {
	Country         string                                          `json:"country"`
	DeliveryPointID string                                          `json:"deliveryPointId"`
	InStore         CalculateSLA200ApplicationJSONLocation1InStore1 `json:"inStore"`
	Point           string                                          `json:"point"`
	ZipCode         string                                          `json:"zipCode"`
}

type CalculateSLA200ApplicationJSON struct {
	AditionalTimeBlockedDays string                                         `json:"aditionalTimeBlockedDays"`
	AvailabilityQuantity     int                                            `json:"availabilityQuantity"`
	CarrierSchedule          []string                                       `json:"carrierSchedule"`
	Coordinates              string                                         `json:"coordinates"`
	DeliveryOnWeekends       bool                                           `json:"deliveryOnWeekends"`
	DeliveryWindows          []CalculateSLA200ApplicationJSONDeliveryWindow `json:"deliveryWindows"`
	DockID                   string                                         `json:"dockId"`
	DockTime                 string                                         `json:"dockTime"`
	FreightTableID           string                                         `json:"freightTableId"`
	FreightTableName         string                                         `json:"freightTableName"`
	ItemID                   string                                         `json:"itemId"`
	ListPrice                float64                                        `json:"listPrice"`
	Location                 CalculateSLA200ApplicationJSONLocation1        `json:"location"`
	PickupStoreInfo          string                                         `json:"pickupStoreInfo"`
	Quantity                 int                                            `json:"quantity"`
	RestrictedFreight        string                                         `json:"restrictedFreight"`
	SalesChannel             string                                         `json:"salesChannel"`
	SLAType                  string                                         `json:"slaType"`
	SLATypeName              string                                         `json:"slaTypeName"`
	TimeToDockPlusDockTime   string                                         `json:"timeToDockPlusDockTime"`
	TotalTime                string                                         `json:"totalTime"`
	TransitTime              string                                         `json:"transitTime"`
	WareHouseID              string                                         `json:"wareHouseId"`
}

type CalculateSLAResponse struct {
	CalculateSLA200ApplicationJSONArrays [][]CalculateSLA200ApplicationJSON
	ContentType                          string
	Headers                              map[string][]string
	StatusCode                           int
	RawResponse                          *http.Response
}
