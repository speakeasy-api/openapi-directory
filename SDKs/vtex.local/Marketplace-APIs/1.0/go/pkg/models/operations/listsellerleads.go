// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListSellerLeadsQueryParams struct {
	// Name of the VTEX account that belongs to the marketplace. All data extracted, and changes added will be posted into this account.
	AccountName string `queryParam:"style=form,explode=true,name=accountName"`
	// Environment to use. Used as part of the URL.
	Environment string `queryParam:"style=form,explode=true,name=environment"`
	// Query param that enables results to be filter by whether the seller lead is already connected to the marketplace or not.
	IsConnected string `queryParam:"style=form,explode=true,name=isConnected"`
	// This field determines the limit used to retrieve the list of sellers. The response includes objects until the value inputted here.
	Limit int `queryParam:"style=form,explode=true,name=limit"`
	// This field determines the limit used to retrieve the list of sellers. The response includes objects starting `from` the value inputted here.
	Offset int `queryParam:"style=form,explode=true,name=offset"`
	// Query param determining how data will be ordered in the response, ordering by name or ID in descending our ascending order. Includes the following values:
	//
	// `namesort` = desc/asc
	//
	// `idsort` = desc/asc
	OrderBy string `queryParam:"style=form,explode=true,name=orderBy"`
	// Custom search field, that filters sellers invited by specific marketplace operator's  email.
	Search string `queryParam:"style=form,explode=true,name=search"`
	// Seller Lead's status. Includes `accepted`, `connected` or `invited`.
	Status string `queryParam:"style=form,explode=true,name=status"`
}

type ListSellerLeadsHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Describes the type of the content being sent.
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type ListSellerLeadsRequest struct {
	QueryParams ListSellerLeadsQueryParams
	Headers     ListSellerLeadsHeaders
}

type ListSellerLeadsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
