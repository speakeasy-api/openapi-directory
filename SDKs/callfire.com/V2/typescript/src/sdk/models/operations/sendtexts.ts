/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SendTextsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class SendTextsRequest extends SpeakeasyBase {
  /**
   * List of TextRecipient objects. By recipient we mean either phone number or contact with user-defined attributes added to action. Text messaging supports media files, provide a list of ids of media files for recipient to attach media to the message.
   */
  @SpeakeasyMetadata({
    data: "request, media_type=application/json",
    elemType: shared.TextRecipient,
  })
  requestBody?: shared.TextRecipient[];

  /**
   * Specifies a campaignId to send texts through a previously created campaign
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=campaignId",
  })
  campaignId?: number;

  /**
   * Text message can be overridden by TextRecipient.message field. If multiple recipients have the same text message to a different recipients it is better to specify a single default message and do not duplicate it in each recipient.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=defaultMessage",
  })
  defaultMessage?: string;

  /**
   * Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * Turns on strict validation for recipients
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=strictValidation",
  })
  strictValidation?: boolean;
}

export class SendTextsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad request
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * successful operation
   */
  @SpeakeasyMetadata()
  textList?: shared.TextList;
}
