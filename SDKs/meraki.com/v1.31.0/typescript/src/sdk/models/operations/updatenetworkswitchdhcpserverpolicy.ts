/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Email alert settings for DHCP servers
 */
export class UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail extends SpeakeasyBase {
  /**
   * When enabled, send an email if a new DHCP server is seen. Default value is false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * Alert settings for DHCP servers
 */
export class UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts extends SpeakeasyBase {
  /**
   * Email alert settings for DHCP servers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  @Type(() => UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail)
  email?: UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail;
}

/**
 * Dynamic ARP Inspection settings
 */
export class UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection extends SpeakeasyBase {
  /**
   * Enable or disable Dynamic ARP Inspection on the network. Default value is false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * 'allow' or 'block' new DHCP servers. Default value is 'allow'.
 */
export enum UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum {
  Allow = "allow",
  Block = "block",
}

export class UpdateNetworkSwitchDhcpServerPolicyRequestBody extends SpeakeasyBase {
  /**
   * Alert settings for DHCP servers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alerts" })
  @Type(() => UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts)
  alerts?: UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts;

  /**
   * List the MAC addresses of DHCP servers to permit on the network when defaultPolicy is set to block. An empty array will clear the entries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedServers" })
  allowedServers?: string[];

  /**
   * Dynamic ARP Inspection settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "arpInspection" })
  @Type(() => UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection)
  arpInspection?: UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection;

  /**
   * List the MAC addresses of DHCP servers to block on the network when defaultPolicy is set to allow. An empty array will clear the entries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockedServers" })
  blockedServers?: string[];

  /**
   * 'allow' or 'block' new DHCP servers. Default value is 'allow'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultPolicy" })
  defaultPolicy?: UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum;
}

export class UpdateNetworkSwitchDhcpServerPolicyRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkSwitchDhcpServerPolicyRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class UpdateNetworkSwitchDhcpServerPolicyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkSwitchDhcpServerPolicy200ApplicationJSONObject?: Record<
    string,
    any
  >;
}
