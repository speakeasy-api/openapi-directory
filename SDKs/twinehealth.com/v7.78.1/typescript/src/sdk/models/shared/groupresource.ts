/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class GroupResourceAttributes extends SpeakeasyBase {
  /**
   * A description of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bio" })
  bio?: string;

  /**
   * The name of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class GroupResourceLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  self: string;
}

export enum GroupResourceTypeEnum {
  Group = "group",
}

export class GroupResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => GroupResourceAttributes)
  attributes: GroupResourceAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => GroupResourceLinks)
  links?: GroupResourceLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GroupResourceTypeEnum;
}

export class GroupResourceInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => GroupResourceAttributes)
  attributes: GroupResourceAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GroupResourceTypeEnum;
}
