"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import jdbcconnectiontype_enum as shared_jdbcconnectiontype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DirectJDBCSource:
    r"""Specifies the direct JDBC source connection."""
    
    connection_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectionName') }})  
    connection_type: shared_jdbcconnectiontype_enum.JDBCConnectionTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectionType') }})  
    database: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Database') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    table: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Table') }})  
    redshift_tmp_dir: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RedshiftTmpDir'), 'exclude': lambda f: f is None }})  
    