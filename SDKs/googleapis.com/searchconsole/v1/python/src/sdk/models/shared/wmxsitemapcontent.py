"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class WmxSitemapContentTypeEnum(str, Enum):
    r"""The specific type of content in this sitemap. For example: `web`."""
    WEB = 'WEB'
    IMAGE = 'IMAGE'
    VIDEO = 'VIDEO'
    NEWS = 'NEWS'
    MOBILE = 'MOBILE'
    ANDROID_APP = 'ANDROID_APP'
    PATTERN = 'PATTERN'
    IOS_APP = 'IOS_APP'
    DATA_FEED_ELEMENT = 'DATA_FEED_ELEMENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WmxSitemapContent:
    r"""Information about the various content types in the sitemap."""
    
    indexed: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indexed'), 'exclude': lambda f: f is None }})
    r"""*Deprecated; do not use.*"""  
    submitted: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('submitted'), 'exclude': lambda f: f is None }})
    r"""The number of URLs in the sitemap (of the content type)."""  
    type: Optional[WmxSitemapContentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The specific type of content in this sitemap. For example: `web`."""  
    