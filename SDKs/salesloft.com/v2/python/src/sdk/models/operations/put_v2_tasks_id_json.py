"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PutV2TasksIDJSONRequestBody:
    
    current_state: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'current_state' }})
    r"""Current state of the task, valid options are: completed"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'description' }})
    r"""A description of the task recorded for person at completion time"""  
    due_date: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'due_date' }})
    r"""Date of when the Task is due, ISO-8601 date format required"""  
    is_logged: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'is_logged' }})
    r"""A flag to indicate that the task should only be logged"""  
    remind_at: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'remind_at' }})
    r"""Datetime of when the user will be reminded of the task, ISO-8601 datetime format required"""  
    subject: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'subject' }})
    r"""Subject line of the task"""  
    

@dataclasses.dataclass
class PutV2TasksIDJSONRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Task ID"""  
    request_body: Optional[PutV2TasksIDJSONRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class PutV2TasksIDJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    