/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSearchVersionNumberNearbySearchExtRequest extends SpeakeasyBase {
  /**
   * Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=btmRight",
  })
  btmRight?: string;

  /**
   * Comma separated string of country codes. This will limit the search to the specified countries.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=countrySet",
  })
  countrySet?: string;

  /**
   * Expected response format.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=ext" })
  ext: shared.ExtEnum;

  /**
   * Indexes for which extended postal codes should be included in the results. Available indexes are:
   *
   * @remarks
   *   - <b>Addr</b> = Address ranges
   *   - <b>Geo</b> = Geographies
   *   - <b>PAD</b> = Point Addresses
   *   - <b>POI</b> = Points of Interest
   *   - <b>Str</b> = Streets
   *   - <b>XStr</b> = Cross Streets (intersections)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=extendedPostalCodesFor",
  })
  extendedPostalCodesFor?: string;

  /**
   * A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
   *
   * @remarks
   *   - <b>Addr</b> = Address range interpolation (when there is no PAD)
   *   - <b>Geo</b> = Geographies
   *   - <b>PAD</b> = Point Addresses
   *   - <b>POI</b> = Points of interest
   *   - <b>Str</b> = Streets
   *   - <b>Xstr</b> = Cross Streets (intersections)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=idxSet",
  })
  idxSet?: string;

  /**
   * Language in which search results should be returned. Should be one of <a href="/search-api/search-api-documentation/supported-languages">supported IETF language tags</a>, case insensitive.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language",
  })
  language?: string;

  /**
   * Latitude where results should be biased.
   *
   * @remarks
   * NOTE: supplying a lat/lon without a radius will return search results biased to that point.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lat" })
  lat: number;

  /**
   * Maximum number of search results that will be returned.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Longitude where results should be biased
   *
   * @remarks
   * NOTE: supplying a lat/lon without a radius will return search results biased to that point.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lon" })
  lon: number;

  /**
   * Maximum fuzziness level to be used.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxFuzzyLevel",
  })
  maxFuzzyLevel?: number;

  /**
   * Minimum fuzziness level to be used.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minFuzzyLevel",
  })
  minFuzzyLevel?: number;

  /**
   * Starting offset of the returned results within the full result set.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ofs" })
  ofs?: number;

  /**
   * If radius and position are set, the results will be constrained to the defined area. The radius parameter is specified in meters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=radius",
  })
  radius?: number;

  /**
   * Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=topLeft",
  })
  topLeft?: string;

  /**
   * Service version number. The current value is 2.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=versionNumber",
  })
  versionNumber: shared.VersionNumberEnum;

  /**
   * Geopolitical View.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=view" })
  view?: shared.ViewEnum;
}

export class GetSearchVersionNumberNearbySearchExtResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
