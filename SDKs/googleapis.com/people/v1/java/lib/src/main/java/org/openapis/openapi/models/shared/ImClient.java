/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ImClient - A person's instant messaging client.
 */
public class ImClient {
    /**
     * Output only. The protocol of the IM client formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formattedProtocol")
    public String formattedProtocol;

    public ImClient withFormattedProtocol(String formattedProtocol) {
        this.formattedProtocol = formattedProtocol;
        return this;
    }
    
    /**
     * Output only. The type of the IM client translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formattedType")
    public String formattedType;

    public ImClient withFormattedType(String formattedType) {
        this.formattedType = formattedType;
        return this;
    }
    
    /**
     * Metadata about a field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public FieldMetadata metadata;

    public ImClient withMetadata(FieldMetadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The protocol of the IM client. The protocol can be custom or one of these predefined values: * `aim` * `msn` * `yahoo` * `skype` * `qq` * `googleTalk` * `icq` * `jabber` * `netMeeting`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public String protocol;

    public ImClient withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * The type of the IM client. The type can be custom or one of these predefined values: * `home` * `work` * `other`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public ImClient withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * The user name used in the IM client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public ImClient withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public ImClient(){}
}
