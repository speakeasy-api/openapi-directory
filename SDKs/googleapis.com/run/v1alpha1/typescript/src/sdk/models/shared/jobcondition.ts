/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * JobCondition defines a readiness condition for a Revision.
 */
export class JobCondition extends SpeakeasyBase {
  /**
   * Optional. Last time the condition transitioned from one status to another.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastTransitionTime" })
  lastTransitionTime?: string;

  /**
   * Optional. Human readable message indicating details about the current status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * Optional. One-word CamelCase reason for the condition's last transition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * Optional. How to interpret failures of this condition, one of Error, Warning, Info
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: string;

  /**
   * Required. Status of the condition, one of True, False, Unknown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Required. Type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types include: * "Completed": True when the Job has successfully completed. * "Started": True when the Job has successfully started running. * "ResourcesAvailable": True when underlying resources have been provisioned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
