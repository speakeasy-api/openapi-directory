"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetDeviceEnergyUsageBasisEnum(str, Enum):
    r"""Subdivision of the period for which you wish to retrieve energy usage data."""
    MONTHLY = 'MONTHLY'
    DAILY = 'DAILY'
    HOURLY = 'HOURLY'

class GetDeviceEnergyUsageRollPeriodEnum(str, Enum):
    r"""The period for which you wish to retrieve energy usage data."""
    ONE_DAY = 'ONE_DAY'
    ONE_WEEK = 'ONE_WEEK'
    ONE_MONTH = 'ONE_MONTH'
    SIX_MONTHS = 'SIX_MONTHS'
    ONE_YEAR = 'ONE_YEAR'


@dataclasses.dataclass
class GetDeviceEnergyUsageRequest:
    
    device_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'deviceId', 'style': 'simple', 'explode': False }})
    r"""The ID of the device."""  
    basis: Optional[GetDeviceEnergyUsageBasisEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'basis', 'style': 'form', 'explode': True }})
    r"""Subdivision of the period for which you wish to retrieve energy usage data."""  
    roll_period: Optional[GetDeviceEnergyUsageRollPeriodEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'rollPeriod', 'style': 'form', 'explode': True }})
    r"""The period for which you wish to retrieve energy usage data."""  
    

@dataclasses.dataclass
class GetDeviceEnergyUsageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    