// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDisassociateInstanceEventWindowActionEnum
type POSTDisassociateInstanceEventWindowActionEnum string

const (
	POSTDisassociateInstanceEventWindowActionEnumDisassociateInstanceEventWindow POSTDisassociateInstanceEventWindowActionEnum = "DisassociateInstanceEventWindow"
)

func (e *POSTDisassociateInstanceEventWindowActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DisassociateInstanceEventWindow":
		*e = POSTDisassociateInstanceEventWindowActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDisassociateInstanceEventWindowActionEnum: %s", s)
	}
}

// POSTDisassociateInstanceEventWindowVersionEnum
type POSTDisassociateInstanceEventWindowVersionEnum string

const (
	POSTDisassociateInstanceEventWindowVersionEnumTwoThousandAndSixteen1115 POSTDisassociateInstanceEventWindowVersionEnum = "2016-11-15"
)

func (e *POSTDisassociateInstanceEventWindowVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTDisassociateInstanceEventWindowVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDisassociateInstanceEventWindowVersionEnum: %s", s)
	}
}

type POSTDisassociateInstanceEventWindowQueryParams struct {
	Action  POSTDisassociateInstanceEventWindowActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDisassociateInstanceEventWindowVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDisassociateInstanceEventWindowHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDisassociateInstanceEventWindowRequest struct {
	QueryParams POSTDisassociateInstanceEventWindowQueryParams
	Headers     POSTDisassociateInstanceEventWindowHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDisassociateInstanceEventWindowResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
