// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// OauthV1OpenidDiscovery - OK
type OauthV1OpenidDiscovery struct {
	// The endpoint that validates all authorization requests.
	AuthorizationEndpoint *string `json:"authorization_endpoint,omitempty"`
	// A collection of claims supported by authorization server for identity token
	ClaimsSupported []string `json:"claims_supported,omitempty"`
	// The endpoint that validates all device code related authorization requests.
	DeviceAuthorizationEndpoint *string `json:"device_authorization_endpoint,omitempty"`
	// A collection of JWS signing algorithms supported by authorization server to sign identity token.
	IDTokenSigningAlgValuesSupported []string `json:"id_token_signing_alg_values_supported,omitempty"`
	// The URL of the party that will create the token and sign it with its private key.
	Issuer *string `json:"issuer,omitempty"`
	// The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.
	JwkURI *string `json:"jwk_uri,omitempty"`
	// A collection of response type supported by authorization server.
	ResponseTypeSupported []string `json:"response_type_supported,omitempty"`
	// The endpoint used to revoke access or refresh tokens issued by the authorization server.
	RevocationEndpoint *string `json:"revocation_endpoint,omitempty"`
	// A collection of scopes supported by authorization server for identity token
	ScopesSupported []string `json:"scopes_supported,omitempty"`
	// A collection of subject by authorization server.
	SubjectTypeSupported []string `json:"subject_type_supported,omitempty"`
	// The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.
	TokenEndpoint *string `json:"token_endpoint,omitempty"`
	URL           *string `json:"url,omitempty"`
	// The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.
	UserinfoEndpoint *string `json:"userinfo_endpoint,omitempty"`
}
