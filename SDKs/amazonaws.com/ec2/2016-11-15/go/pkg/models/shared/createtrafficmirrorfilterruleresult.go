// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleDestinationPortRange - The destination port range assigned to the Traffic Mirror rule.
type CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleDestinationPortRange struct {
	FromPort *int64
	ToPort   *int64
}

// CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum - The action assigned to the Traffic Mirror rule.
type CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum string

const (
	CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnumAccept CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum = "accept"
	CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnumReject CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum = "reject"
)

func (e CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum) ToPointer() *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum {
	return &e
}

func (e *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "accept":
		fallthrough
	case "reject":
		*e = CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum: %v", v)
	}
}

// CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleSourcePortRange - The source port range assigned to the Traffic Mirror rule.
type CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleSourcePortRange struct {
	FromPort *int64
	ToPort   *int64
}

// CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum - The traffic direction assigned to the Traffic Mirror rule.
type CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum string

const (
	CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnumIngress CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum = "ingress"
	CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnumEgress  CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum = "egress"
)

func (e CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum) ToPointer() *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum {
	return &e
}

func (e *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ingress":
		fallthrough
	case "egress":
		*e = CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum: %v", v)
	}
}

// CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRule - The Traffic Mirror rule.
type CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRule struct {
	Description               *string
	DestinationCidrBlock      *string
	DestinationPortRange      *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleDestinationPortRange
	Protocol                  *int64
	RuleAction                *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum
	RuleNumber                *int64
	SourceCidrBlock           *string
	SourcePortRange           *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleSourcePortRange
	TrafficDirection          *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum
	TrafficMirrorFilterID     *string
	TrafficMirrorFilterRuleID *string
}

// CreateTrafficMirrorFilterRuleResult - Success
type CreateTrafficMirrorFilterRuleResult struct {
	ClientToken             *string
	TrafficMirrorFilterRule *CreateTrafficMirrorFilterRuleResultTrafficMirrorFilterRule
}
