"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VideoAgeGatingVideoGameRatingEnum(str, Enum):
    r"""Video game rating, if any."""
    ANYONE = 'anyone'
    M15_PLUS = 'm15Plus'
    M16_PLUS = 'm16Plus'
    M17_PLUS = 'm17Plus'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VideoAgeGating:
    
    alcohol_content: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alcoholContent'), 'exclude': lambda f: f is None }})
    r"""Indicates whether or not the video has alcoholic beverage content. Only users of legal purchasing age in a particular country, as identified by ICAP, can view the content."""  
    restricted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restricted'), 'exclude': lambda f: f is None }})
    r"""Age-restricted trailers. For redband trailers and adult-rated video-games. Only users aged 18+ can view the content. The the field is true the content is restricted to viewers aged 18+. Otherwise The field won't be present."""  
    video_game_rating: Optional[VideoAgeGatingVideoGameRatingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoGameRating'), 'exclude': lambda f: f is None }})
    r"""Video game rating, if any."""  
    