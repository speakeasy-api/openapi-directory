// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetVideosAlt1DirectionEnum - The sort direction of the results.
type GetVideosAlt1DirectionEnum string

const (
	GetVideosAlt1DirectionEnumAsc  GetVideosAlt1DirectionEnum = "asc"
	GetVideosAlt1DirectionEnumDesc GetVideosAlt1DirectionEnum = "desc"
)

func (e *GetVideosAlt1DirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetVideosAlt1DirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVideosAlt1DirectionEnum: %s", s)
	}
}

// GetVideosAlt1FilterEnum - The attribute by which to filter the results.
type GetVideosAlt1FilterEnum string

const (
	GetVideosAlt1FilterEnumAppOnly    GetVideosAlt1FilterEnum = "app_only"
	GetVideosAlt1FilterEnumEmbeddable GetVideosAlt1FilterEnum = "embeddable"
	GetVideosAlt1FilterEnumFeatured   GetVideosAlt1FilterEnum = "featured"
	GetVideosAlt1FilterEnumPlayable   GetVideosAlt1FilterEnum = "playable"
)

func (e *GetVideosAlt1FilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "app_only":
		fallthrough
	case "embeddable":
		fallthrough
	case "featured":
		fallthrough
	case "playable":
		*e = GetVideosAlt1FilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVideosAlt1FilterEnum: %s", s)
	}
}

// GetVideosAlt1SortEnum - The way to sort the results.
type GetVideosAlt1SortEnum string

const (
	GetVideosAlt1SortEnumAlphabetical            GetVideosAlt1SortEnum = "alphabetical"
	GetVideosAlt1SortEnumComments                GetVideosAlt1SortEnum = "comments"
	GetVideosAlt1SortEnumDate                    GetVideosAlt1SortEnum = "date"
	GetVideosAlt1SortEnumDefault                 GetVideosAlt1SortEnum = "default"
	GetVideosAlt1SortEnumDuration                GetVideosAlt1SortEnum = "duration"
	GetVideosAlt1SortEnumLastUserActionEventDate GetVideosAlt1SortEnum = "last_user_action_event_date"
	GetVideosAlt1SortEnumLikes                   GetVideosAlt1SortEnum = "likes"
	GetVideosAlt1SortEnumModifiedTime            GetVideosAlt1SortEnum = "modified_time"
	GetVideosAlt1SortEnumPlays                   GetVideosAlt1SortEnum = "plays"
)

func (e *GetVideosAlt1SortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "comments":
		fallthrough
	case "date":
		fallthrough
	case "default":
		fallthrough
	case "duration":
		fallthrough
	case "last_user_action_event_date":
		fallthrough
	case "likes":
		fallthrough
	case "modified_time":
		fallthrough
	case "plays":
		*e = GetVideosAlt1SortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVideosAlt1SortEnum: %s", s)
	}
}

type GetVideosAlt1Request struct {
	// The page that contains the video URI. Only available when not paired with `query`.
	ContainingURI *string `queryParam:"style=form,explode=true,name=containing_uri"`
	// The sort direction of the results.
	Direction *GetVideosAlt1DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetVideosAlt1FilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
	FilterEmbeddable *bool `queryParam:"style=form,explode=true,name=filter_embeddable"`
	// Whether to filter by all playable videos or by all videos that are not  playable.
	FilterPlayable *bool `queryParam:"style=form,explode=true,name=filter_playable"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetVideosAlt1SortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetVideosAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The videos were returned.
	Videos []shared.Video
}
