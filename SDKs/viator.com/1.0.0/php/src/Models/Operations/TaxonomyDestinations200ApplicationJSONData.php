<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class TaxonomyDestinations200ApplicationJSONData
{
    /**
     * **currency code** for the currency in which pricing is displayed
     * 
     * @var ?string $defaultCurrencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultCurrencyCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultCurrencyCode = null;
    
    /**
     * **unique numeric identifier** of the destination
     * 
     * - use this value as the `destId` input field for other Viator API services
     * 
     * 
     * @var ?int $destinationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $destinationId = null;
    
    /**
     * **natural-language name** of the destination
     * 
     * @var ?string $destinationName
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationName = null;
    
    /**
     * **destination type specifier**
     * 
     * - `"COUNTRY"`: destination is a country
     * - `"REGION"`: destination is a recognized region of a country, such as a state, island within a country, stretch of coastline, etc.
     * - `"CITY"`: destination is a city
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinationTypeEnum $destinationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DestinationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\OpenAPI\OpenAPI\Models\Shared\DestinationTypeEnum $destinationType = null;
    
    /**
     * ignore - (Viator only)
     * 
     * @var ?string $destinationUrlName
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationUrlName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationUrlName = null;
    
    /**
     * **IATA airport code** for the destination
     * 
     * - a three-letter code defined by the International Air Transport Association (IATA) used to identify many airports around the world
     * - the IATA code is also known as an 'IATA location identifier', 'IATA station code' or simply a 'location identifier'
     * - the IATA code is &lt;u&gt;not available&lt;/u&gt; for destinations with a destination type of `'COUNTRY'` or `'REGION'`, as there could be more than one airport within a destination
     * 
     * 
     * @var ?string $iataCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('iataCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iataCode = null;
    
    /**
     * **latitude component** of the destination's geolocation
     * 
     * @var ?float $latitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('latitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $latitude = null;
    
    /**
     * **longitude component** of the destination's geolocation
     * 
     * @var ?float $longitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('longitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $longitude = null;
    
    /**
     * **hierarchy location specifier** for the destination that is a concatenation of all `parentId` and `destinationId` codes
     * 
     * - e.g. `'8.77.673'` for Chicago
     * - format: [top level `parentId`].[any additional `parentId`].[`destinationId`]
     * 
     * 
     * @var ?string $lookupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('lookupId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lookupId = null;
    
    /**
     * **unique numeric identifier** of the destination's parent destination
     * 
     * @var ?int $parentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $parentId = null;
    
    /**
     * ignore - (Viator only)
     * 
     * @var ?bool $selectable
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $selectable = null;
    
    /**
     * **sort order** for this response
     * 
     * @var ?int $sortOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('sortOrder')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sortOrder = null;
    
    /**
     * **time zone** of the destination
     * 
     * @var ?string $timeZone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeZone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timeZone = null;
    
	public function __construct()
	{
		$this->defaultCurrencyCode = null;
		$this->destinationId = null;
		$this->destinationName = null;
		$this->destinationType = null;
		$this->destinationUrlName = null;
		$this->iataCode = null;
		$this->latitude = null;
		$this->longitude = null;
		$this->lookupId = null;
		$this->parentId = null;
		$this->selectable = null;
		$this->sortOrder = null;
		$this->timeZone = null;
	}
}
