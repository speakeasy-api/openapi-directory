"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import associationsetdetails as shared_associationsetdetails
from ..shared import propagatingvgwsetdetails as shared_propagatingvgwsetdetails
from ..shared import routesetdetails as shared_routesetdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsEc2RouteTableDetails:
    r"""Provides details about a route table for the specified VPC."""
    
    association_set: Optional[list[shared_associationsetdetails.AssociationSetDetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AssociationSet'), 'exclude': lambda f: f is None }})  
    owner_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OwnerId'), 'exclude': lambda f: f is None }})  
    propagating_vgw_set: Optional[list[shared_propagatingvgwsetdetails.PropagatingVgwSetDetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PropagatingVgwSet'), 'exclude': lambda f: f is None }})  
    route_set: Optional[list[shared_routesetdetails.RouteSetDetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RouteSet'), 'exclude': lambda f: f is None }})  
    route_table_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RouteTableId'), 'exclude': lambda f: f is None }})  
    vpc_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcId'), 'exclude': lambda f: f is None }})  
    