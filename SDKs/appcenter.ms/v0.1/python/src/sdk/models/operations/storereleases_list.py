"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class StoreReleasesListSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class StoreReleasesListRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    store_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'store_name', 'style': 'simple', 'explode': False }})
    r"""The name of the store"""  
    
class StoreReleasesListDefaultApplicationJSONCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StoreReleasesListDefaultApplicationJSON:
    r"""Error"""
    
    code: StoreReleasesListDefaultApplicationJSONCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    
class StoreReleasesList200ApplicationJSONDestinationTypeEnum(str, Enum):
    r"""Destination for this release."""
    GROUP = 'group'
    STORE = 'store'
    TESTER = 'tester'

class StoreReleasesList200ApplicationJSONDistributionStoresTypeEnum(str, Enum):
    r"""A type identifying the type of distribution store."""
    GOOGLEPLAY = 'googleplay'
    INTUNE = 'intune'
    APPLE = 'apple'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StoreReleasesList200ApplicationJSONDistributionStores:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID identifying a unique distribution store."""  
    is_latest: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_latest'), 'exclude': lambda f: f is None }})
    r"""Is the containing release the latest one in this distribution store."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""A name identifying a unique distribution store."""  
    publishing_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publishing_status'), 'exclude': lambda f: f is None }})
    r"""A status identifying the status of release in the distribution store."""  
    type: Optional[StoreReleasesList200ApplicationJSONDistributionStoresTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""A type identifying the type of distribution store."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StoreReleasesList200ApplicationJSON:
    r"""Basic information on a release"""
    
    destination_type: Optional[StoreReleasesList200ApplicationJSONDestinationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destination_type'), 'exclude': lambda f: f is None }})
    r"""Destination for this release."""  
    distribution_stores: Optional[list[StoreReleasesList200ApplicationJSONDistributionStores]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distribution_stores'), 'exclude': lambda f: f is None }})
    r"""a list of distribution stores that are associated with this release."""  
    id: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID identifying this unique release."""  
    short_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('short_version'), 'exclude': lambda f: f is None }})
    r"""The release's short version.
    For iOS: CFBundleShortVersionString from info.plist.
    For Android: android:versionName from AppManifest.xml.
    """  
    uploaded_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uploaded_at'), 'exclude': lambda f: f is None }})
    r"""UTC time in ISO 8601 format of the uploaded time."""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""The release's version.
    For iOS: CFBundleVersion from info.plist.
    For Android: android:versionCode from AppManifest.xml.
    """  
    

@dataclasses.dataclass
class StoreReleasesListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    store_releases_list_200_application_json_objects: Optional[list[StoreReleasesList200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Success"""  
    store_releases_list_default_application_json_object: Optional[StoreReleasesListDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    