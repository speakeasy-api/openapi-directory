<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PutTransactionsIdRequestBody
{
    /**
     * A new amount for the transaction.
     * 
     * @var ?float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
    /**
     * The unique identifier of a new category for the transaction.
     * 
     * @var ?int $categoryId
     */
	#[\JMS\Serializer\Annotation\SerializedName('category_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $categoryId = null;
    
    /**
     * A new cheque number for the transaction.
     * 
     * @var ?string $chequeNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('cheque_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chequeNumber = null;
    
    /**
     * A new date for the transaction.
     * 
     * @var ?string $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $date = null;
    
    /**
     * Whether the transaction is a transfer or not.
     * 
     * @var ?bool $isTransfer
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_transfer')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isTransfer = null;
    
    /**
     * A new comma-separated set of labels for the transaction.
     * 
     * @var ?string $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $labels = null;
    
    /**
     * A new memo for the transaction.
     * 
     * @var ?string $memo
     */
	#[\JMS\Serializer\Annotation\SerializedName('memo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $memo = null;
    
    /**
     * Whether the transaction needs to be reviewed or not.
     * 
     * @var ?bool $needsReview
     */
	#[\JMS\Serializer\Annotation\SerializedName('needs_review')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $needsReview = null;
    
    /**
     * A new note for the transaction.
     * 
     * @var ?string $note
     */
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * A new payee for the transaction.
     * 
     * @var ?string $payee
     */
	#[\JMS\Serializer\Annotation\SerializedName('payee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payee = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->categoryId = null;
		$this->chequeNumber = null;
		$this->date = null;
		$this->isTransfer = null;
		$this->labels = null;
		$this->memo = null;
		$this->needsReview = null;
		$this->note = null;
		$this->payee = null;
	}
}
