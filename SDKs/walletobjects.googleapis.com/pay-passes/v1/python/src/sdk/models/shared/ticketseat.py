"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import localizedstring as shared_localizedstring
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TicketSeatFareClassEnum(str, Enum):
    r"""The fare class of the ticketed seat."""
    FARE_CLASS_UNSPECIFIED = 'FARE_CLASS_UNSPECIFIED'
    ECONOMY_UPPER = 'ECONOMY'
    ECONOMY_LOWER = 'economy'
    FIRST_UPPER = 'FIRST'
    FIRST_LOWER = 'first'
    BUSINESS_UPPER = 'BUSINESS'
    BUSINESS_LOWER = 'business'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TicketSeat:
    
    coach: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('coach'), 'exclude': lambda f: f is None }})
    r"""The identifier of the train car or coach in which the ticketed seat is located. Eg. \\"10\\" """  
    custom_fare_class: Optional[shared_localizedstring.LocalizedString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFareClass'), 'exclude': lambda f: f is None }})  
    fare_class: Optional[TicketSeatFareClassEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fareClass'), 'exclude': lambda f: f is None }})
    r"""The fare class of the ticketed seat."""  
    seat: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seat'), 'exclude': lambda f: f is None }})
    r"""The identifier of where the ticketed seat is located. Eg. \\"42\\". If there is no specific identifier, use `seatAssigment` instead."""  
    seat_assignment: Optional[shared_localizedstring.LocalizedString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seatAssignment'), 'exclude': lambda f: f is None }})  
    