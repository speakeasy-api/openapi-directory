// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum - State to which the execution snapshot status will be set if the task succeeds.
type GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum string

const (
	GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnumFinalStateUnspecified GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum = "FINAL_STATE_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnumSucceeded             GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum = "SUCCEEDED"
	GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnumSuspended             GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum = "SUSPENDED"
)

func (e GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum) ToPointer() *GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum {
	return &e
}

func (e *GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FINAL_STATE_UNSPECIFIED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "SUSPENDED":
		*e = GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum: %v", v)
	}
}

// GoogleCloudIntegrationsV1alphaSuccessPolicy - Policy that dictates the behavior for the task after it completes successfully.
type GoogleCloudIntegrationsV1alphaSuccessPolicy struct {
	// State to which the execution snapshot status will be set if the task succeeds.
	FinalState *GoogleCloudIntegrationsV1alphaSuccessPolicyFinalStateEnum `json:"finalState,omitempty"`
}
