/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDatacatalogLineageV1EntityReference } from "./googleclouddatacataloglineagev1entityreference";
import { Expose, Type } from "class-transformer";

/**
 * Links represent the data flow between **source** (upstream) and **target** (downstream) assets in transformation pipelines. Links are created when LineageEvents record data transformation between related assets.
 */
export class GoogleCloudDatacatalogLineageV1Link extends SpeakeasyBase {
  /**
   * The end of the last event establishing this link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * Output only. Immutable. The name of the link. Format: `projects/{project}/locations/{location}/links/{link}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The soft reference to everything you can attach a lineage event to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => GoogleCloudDatacatalogLineageV1EntityReference)
  source?: GoogleCloudDatacatalogLineageV1EntityReference;

  /**
   * The start of the first event establishing this link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;

  /**
   * The soft reference to everything you can attach a lineage event to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target" })
  @Type(() => GoogleCloudDatacatalogLineageV1EntityReference)
  target?: GoogleCloudDatacatalogLineageV1EntityReference;
}
