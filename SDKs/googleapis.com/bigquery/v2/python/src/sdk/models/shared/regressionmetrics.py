"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RegressionMetrics:
    r"""Evaluation metrics for regression and explicit feedback type matrix factorization models."""
    
    mean_absolute_error: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meanAbsoluteError'), 'exclude': lambda f: f is None }})
    r"""Mean absolute error."""  
    mean_squared_error: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meanSquaredError'), 'exclude': lambda f: f is None }})
    r"""Mean squared error."""  
    mean_squared_log_error: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meanSquaredLogError'), 'exclude': lambda f: f is None }})
    r"""Mean squared log error."""  
    median_absolute_error: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('medianAbsoluteError'), 'exclude': lambda f: f is None }})
    r"""Median absolute error."""  
    r_squared: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rSquared'), 'exclude': lambda f: f is None }})
    r"""R^2 score. This corresponds to r2_score in ML.EVALUATE."""  
    