"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PermissionRoleEnum(str, Enum):
    r"""The role granted by this permission."""
    ROLE_UNSPECIFIED = 'ROLE_UNSPECIFIED'
    OWNER_UPPER = 'OWNER'
    OWNER_LOWER = 'owner'
    READER_UPPER = 'READER'
    READER_LOWER = 'reader'
    WRITER_UPPER = 'WRITER'
    WRITER_LOWER = 'writer'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Permission:
    
    email_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailAddress'), 'exclude': lambda f: f is None }})
    r"""The email address of the user, group, or service account to which this permission refers to."""  
    role: Optional[PermissionRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""The role granted by this permission."""  
    