/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDeleteDBInstanceRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDeleteDBInstanceActionEnum action;
    public GETDeleteDBInstanceRequest withAction(GETDeleteDBInstanceActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;The DB instance identifier for the DB instance to be deleted. This parameter isn't case-sensitive.&lt;/p&gt; &lt;p&gt;Constraints:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must match the name of an existing DB instance.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DBInstanceIdentifier")
    public String dbInstanceIdentifier;
    public GETDeleteDBInstanceRequest withDBInstanceIdentifier(String dbInstanceIdentifier) {
        this.dbInstanceIdentifier = dbInstanceIdentifier;
        return this;
    }
    
    /**
     * A value that indicates whether to remove automated backups immediately after the DB instance is deleted. This parameter isn't case-sensitive. The default is to remove automated backups immediately after the DB instance is deleted.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DeleteAutomatedBackups")
    public Boolean deleteAutomatedBackups;
    public GETDeleteDBInstanceRequest withDeleteAutomatedBackups(Boolean deleteAutomatedBackups) {
        this.deleteAutomatedBackups = deleteAutomatedBackups;
        return this;
    }
    
    /**
     * &lt;p&gt;The &lt;code&gt;DBSnapshotIdentifier&lt;/code&gt; of the new &lt;code&gt;DBSnapshot&lt;/code&gt; created when the &lt;code&gt;SkipFinalSnapshot&lt;/code&gt; parameter is disabled.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If you enable this parameter and also enable SkipFinalShapshot, the command results in an error.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;This setting doesn't apply to RDS Custom.&lt;/p&gt; &lt;p&gt;Constraints:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must be 1 to 255 letters or numbers.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;First character must be a letter.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Can't end with a hyphen or contain two consecutive hyphens.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Can't be specified when deleting a read replica.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=FinalDBSnapshotIdentifier")
    public String finalDBSnapshotIdentifier;
    public GETDeleteDBInstanceRequest withFinalDBSnapshotIdentifier(String finalDBSnapshotIdentifier) {
        this.finalDBSnapshotIdentifier = finalDBSnapshotIdentifier;
        return this;
    }
    
    /**
     * &lt;p&gt;A value that indicates whether to skip the creation of a final DB snapshot before deleting the instance. If you enable this parameter, RDS doesn't create a DB snapshot. If you don't enable this parameter, RDS creates a DB snapshot before the DB instance is deleted. By default, skip isn't enabled, and the DB snapshot is created.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If you don't enable this parameter, you must specify the &lt;code&gt;FinalDBSnapshotIdentifier&lt;/code&gt; parameter.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;When a DB instance is in a failure state and has a status of &lt;code&gt;failed&lt;/code&gt;, &lt;code&gt;incompatible-restore&lt;/code&gt;, or &lt;code&gt;incompatible-network&lt;/code&gt;, RDS can delete the instance only if you enable this parameter.&lt;/p&gt; &lt;p&gt;If you delete a read replica or an RDS Custom instance, you must enable this setting.&lt;/p&gt; &lt;p&gt;This setting is required for RDS Custom.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SkipFinalSnapshot")
    public Boolean skipFinalSnapshot;
    public GETDeleteDBInstanceRequest withSkipFinalSnapshot(Boolean skipFinalSnapshot) {
        this.skipFinalSnapshot = skipFinalSnapshot;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDeleteDBInstanceVersionEnum version;
    public GETDeleteDBInstanceRequest withVersion(GETDeleteDBInstanceVersionEnum version) {
        this.version = version;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public GETDeleteDBInstanceRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public GETDeleteDBInstanceRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public GETDeleteDBInstanceRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public GETDeleteDBInstanceRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public GETDeleteDBInstanceRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public GETDeleteDBInstanceRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public GETDeleteDBInstanceRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
}
