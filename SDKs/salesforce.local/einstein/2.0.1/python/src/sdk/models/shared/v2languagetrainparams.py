"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V2LanguageTrainParams:
    r"""JSON that contains parameters that specify how the model is created"""
    
    train_split_ratio: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trainSplitRatio'), 'exclude': lambda f: f is None }})
    r"""Lets you specify the ratio of data used to train the dataset and the data used to test the model."""  
    with_feedback: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('withFeedback'), 'exclude': lambda f: f is None }})
    r"""Lets you specify that feedback examples are included in the data to be trained to create the model."""  
    with_global_dataset_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('withGlobalDatasetId'), 'exclude': lambda f: f is None }})
    r"""Lets you specify that a global dataset is used in addition to the specified dataset to create the model."""  
    