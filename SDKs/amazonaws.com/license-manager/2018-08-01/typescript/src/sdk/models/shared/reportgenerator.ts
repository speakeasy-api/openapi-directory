/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReportContext } from "./reportcontext";
import { ReportFrequency } from "./reportfrequency";
import { ReportTypeEnum } from "./reporttypeenum";
import { S3Location } from "./s3location";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * Describe the details of a report generator.
 */
export class ReportGenerator extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreateTime" })
  createTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastReportGenerationTime" })
  lastReportGenerationTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastRunFailureReason" })
  lastRunFailureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastRunStatus" })
  lastRunStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseManagerReportGeneratorArn" })
  licenseManagerReportGeneratorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReportContext" })
  @Type(() => ReportContext)
  reportContext?: ReportContext;

  @SpeakeasyMetadata()
  @Expose({ name: "ReportCreatorAccount" })
  reportCreatorAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReportFrequency" })
  @Type(() => ReportFrequency)
  reportFrequency?: ReportFrequency;

  @SpeakeasyMetadata()
  @Expose({ name: "ReportGeneratorName" })
  reportGeneratorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReportType" })
  reportType?: ReportTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "S3Location" })
  @Type(() => S3Location)
  s3Location?: S3Location;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
