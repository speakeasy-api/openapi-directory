"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RealmEventsConfigRepresentation:
    r"""success"""
    
    admin_events_details_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adminEventsDetailsEnabled'), 'exclude': lambda f: f is None }})  
    admin_events_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adminEventsEnabled'), 'exclude': lambda f: f is None }})  
    enabled_event_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabledEventTypes'), 'exclude': lambda f: f is None }})  
    events_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventsEnabled'), 'exclude': lambda f: f is None }})  
    events_expiration: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventsExpiration'), 'exclude': lambda f: f is None }})  
    events_listeners: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventsListeners'), 'exclude': lambda f: f is None }})  
    