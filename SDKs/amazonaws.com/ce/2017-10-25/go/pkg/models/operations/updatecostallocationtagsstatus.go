// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateCostAllocationTagsStatusXAmzTargetEnum
type UpdateCostAllocationTagsStatusXAmzTargetEnum string

const (
	UpdateCostAllocationTagsStatusXAmzTargetEnumAwsInsightsIndexServiceUpdateCostAllocationTagsStatus UpdateCostAllocationTagsStatusXAmzTargetEnum = "AWSInsightsIndexService.UpdateCostAllocationTagsStatus"
)

func (e UpdateCostAllocationTagsStatusXAmzTargetEnum) ToPointer() *UpdateCostAllocationTagsStatusXAmzTargetEnum {
	return &e
}

func (e *UpdateCostAllocationTagsStatusXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSInsightsIndexService.UpdateCostAllocationTagsStatus":
		*e = UpdateCostAllocationTagsStatusXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCostAllocationTagsStatusXAmzTargetEnum: %v", v)
	}
}

type UpdateCostAllocationTagsStatusRequest struct {
	UpdateCostAllocationTagsStatusRequest shared.UpdateCostAllocationTagsStatusRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            UpdateCostAllocationTagsStatusXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateCostAllocationTagsStatusResponse struct {
	ContentType string
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// Success
	UpdateCostAllocationTagsStatusResponse *shared.UpdateCostAllocationTagsStatusResponse
}
