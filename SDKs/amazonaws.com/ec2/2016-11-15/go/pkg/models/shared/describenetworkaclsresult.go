// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeNetworkAclsResultNetworkAclsAssociations - Describes an association between a network ACL and a subnet.
type DescribeNetworkAclsResultNetworkAclsAssociations struct {
	NetworkACLAssociationID *string
	NetworkACLID            *string
	SubnetID                *string
}

// DescribeNetworkAclsResultNetworkAclsEntriesIcmpTypeCode - ICMP protocol: The ICMP type and code.
type DescribeNetworkAclsResultNetworkAclsEntriesIcmpTypeCode struct {
	Code *int64
	Type *int64
}

// DescribeNetworkAclsResultNetworkAclsEntriesPortRange - TCP or UDP protocols: The range of ports the rule applies to.
type DescribeNetworkAclsResultNetworkAclsEntriesPortRange struct {
	From *int64
	To   *int64
}

// DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum - Indicates whether to allow or deny the traffic that matches the rule.
type DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum string

const (
	DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnumAllow DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum = "allow"
	DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnumDeny  DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum = "deny"
)

func (e DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum) ToPointer() *DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum {
	return &e
}

func (e *DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allow":
		fallthrough
	case "deny":
		*e = DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum: %v", v)
	}
}

// DescribeNetworkAclsResultNetworkAclsEntries - Describes an entry in a network ACL.
type DescribeNetworkAclsResultNetworkAclsEntries struct {
	CidrBlock     *string
	Egress        *bool
	IcmpTypeCode  *DescribeNetworkAclsResultNetworkAclsEntriesIcmpTypeCode
	Ipv6CidrBlock *string
	PortRange     *DescribeNetworkAclsResultNetworkAclsEntriesPortRange
	Protocol      *string
	RuleAction    *DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum
	RuleNumber    *int64
}

// DescribeNetworkAclsResultNetworkAclsTags - Describes a tag.
type DescribeNetworkAclsResultNetworkAclsTags struct {
	Key   *string
	Value *string
}

// DescribeNetworkAclsResultNetworkAcls - Describes a network ACL.
type DescribeNetworkAclsResultNetworkAcls struct {
	Associations []DescribeNetworkAclsResultNetworkAclsAssociations
	Entries      []DescribeNetworkAclsResultNetworkAclsEntries
	IsDefault    *bool
	NetworkACLID *string
	OwnerID      *string
	Tags         []DescribeNetworkAclsResultNetworkAclsTags
	VpcID        *string
}

// DescribeNetworkAclsResult - Success
type DescribeNetworkAclsResult struct {
	NetworkAcls []DescribeNetworkAclsResultNetworkAcls
	NextToken   *string
}
