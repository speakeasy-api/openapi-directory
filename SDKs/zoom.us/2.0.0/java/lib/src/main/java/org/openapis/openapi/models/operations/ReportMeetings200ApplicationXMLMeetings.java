/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;

public class ReportMeetings200ApplicationXMLMeetings {
    /**
     * Custom keys and values assigned to the meeting.
     */
    
    public ReportMeetings200ApplicationXMLMeetingsCustomKeys[] customKeys;
    public ReportMeetings200ApplicationXMLMeetings withCustomKeys(ReportMeetings200ApplicationXMLMeetingsCustomKeys[] customKeys) {
        this.customKeys = customKeys;
        return this;
    }
    
    /**
     * Meeting duration.
     */
    
    public Long duration;
    public ReportMeetings200ApplicationXMLMeetings withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Meeting end time.
     */
    
    public OffsetDateTime endTime;
    public ReportMeetings200ApplicationXMLMeetings withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-):            Unique identifier of the meeting in "**long**" format(represented as int64
     * data type in JSON), also known as the meeting number.
     * 
     */
    
    public Long id;
    public ReportMeetings200ApplicationXMLMeetings withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Number of meeting participants.
     */
    
    public Long participantsCount;
    public ReportMeetings200ApplicationXMLMeetings withParticipantsCount(Long participantsCount) {
        this.participantsCount = participantsCount;
        return this;
    }
    
    /**
     * Indicates whether the meeting was created directly through Zoom or through an API request.
     */
    
    public String source;
    public ReportMeetings200ApplicationXMLMeetings withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * Meeting start time.
     */
    
    public OffsetDateTime startTime;
    public ReportMeetings200ApplicationXMLMeetings withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Meeting topic.
     */
    
    public String topic;
    public ReportMeetings200ApplicationXMLMeetings withTopic(String topic) {
        this.topic = topic;
        return this;
    }
    
    /**
     * Sum of meeting minutes from all participants in the meeting.
     */
    
    public Long totalMinutes;
    public ReportMeetings200ApplicationXMLMeetings withTotalMinutes(Long totalMinutes) {
        this.totalMinutes = totalMinutes;
        return this;
    }
    
    /**
     * Meeting Type:&lt;br&gt; `1` - Instant Meeting&lt;br&gt; `2` - Scheduled Meeting&lt;br&gt; `3` - Recurring Meeting with no fixed time.&lt;br&gt;
     * `4` - This value is returned if the meeting was started using a Personal Meeting ID. &lt;br&gt;
     * `8` - Recurring Meeting with a fixed time. 
     */
    
    public Long type;
    public ReportMeetings200ApplicationXMLMeetings withType(Long type) {
        this.type = type;
        return this;
    }
    
    /**
     * User email.
     */
    
    public String userEmail;
    public ReportMeetings200ApplicationXMLMeetings withUserEmail(String userEmail) {
        this.userEmail = userEmail;
        return this;
    }
    
    /**
     * User display name.
     */
    
    public String userName;
    public ReportMeetings200ApplicationXMLMeetings withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    /**
     * Meeting UUID. Each meeting instance will generate its own UUID(i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/' or contains '//' in it.
     */
    
    public String uuid;
    public ReportMeetings200ApplicationXMLMeetings withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
}
