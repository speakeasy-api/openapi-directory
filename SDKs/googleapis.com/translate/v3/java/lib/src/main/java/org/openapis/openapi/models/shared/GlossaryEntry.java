/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GlossaryEntry - Represents a single entry in a glossary.
 */
public class GlossaryEntry {
    /**
     * Describes the glossary entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public GlossaryEntry withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Required. The resource name of the entry. Format: "projects/* /locations/* /glossaries/* /glossaryEntries/*"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GlossaryEntry withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Represents a single entry for an unidirectional glossary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("termsPair")
    public GlossaryTermsPair termsPair;

    public GlossaryEntry withTermsPair(GlossaryTermsPair termsPair) {
        this.termsPair = termsPair;
        return this;
    }
    
    /**
     * Represents a single entry for an equivalent term set glossary. This is used for equivalent term sets where each term can be replaced by the other terms in the set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("termsSet")
    public GlossaryTermsSet termsSet;

    public GlossaryEntry withTermsSet(GlossaryTermsSet termsSet) {
        this.termsSet = termsSet;
        return this;
    }
    
    public GlossaryEntry(){}
}
