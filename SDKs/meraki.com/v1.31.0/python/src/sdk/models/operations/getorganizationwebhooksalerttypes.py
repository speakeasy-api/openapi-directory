"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Any, Optional

class GetOrganizationWebhooksAlertTypesProductTypeEnum(str, Enum):
    r"""Filter sample alerts to a specific product type"""
    APPLIANCE = 'appliance'
    CAMERA = 'camera'
    CELLULAR_GATEWAY = 'cellularGateway'
    HEALTH = 'health'
    PLATFORM = 'platform'
    SENSOR = 'sensor'
    SM = 'sm'
    SWITCH = 'switch'
    WIRELESS = 'wireless'


@dataclasses.dataclass
class GetOrganizationWebhooksAlertTypesRequest:
    
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})  
    product_type: Optional[GetOrganizationWebhooksAlertTypesProductTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'productType', 'style': 'form', 'explode': True }})
    r"""Filter sample alerts to a specific product type"""  
    

@dataclasses.dataclass
class GetOrganizationWebhooksAlertTypesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_organization_webhooks_alert_types_200_application_json_objects: Optional[list[dict[str, Any]]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    