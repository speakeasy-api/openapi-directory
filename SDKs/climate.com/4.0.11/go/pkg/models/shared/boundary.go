// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BoundaryTypeEnum string

const (
	BoundaryTypeEnumFeature BoundaryTypeEnum = "Feature"
)

func (e BoundaryTypeEnum) ToPointer() *BoundaryTypeEnum {
	return &e
}

func (e *BoundaryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Feature":
		*e = BoundaryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BoundaryTypeEnum: %v", v)
	}
}

// Boundary - Arbitrary boundary.  GeoJSON Feature.
type Boundary struct {
	// GeoJSON
	Geometry Geometry `json:"geometry"`
	ID       string   `json:"id"`
	// Properties map.
	Properties BoundaryProperties `json:"properties"`
	Type       BoundaryTypeEnum   `json:"type"`
}
