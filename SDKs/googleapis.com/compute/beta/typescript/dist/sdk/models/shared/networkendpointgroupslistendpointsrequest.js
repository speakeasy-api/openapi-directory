"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NetworkEndpointGroupsListEndpointsRequest = exports.NetworkEndpointGroupsListEndpointsRequestHealthStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var networkendpointgroupslistendpointsrequestnetworkendpointfilter_1 = require("./networkendpointgroupslistendpointsrequestnetworkendpointfilter");
var class_transformer_1 = require("class-transformer");
/**
 * Optional query parameter for showing the health status of each network endpoint. Valid options are SKIP or SHOW. If you don't specify this parameter, the health status of network endpoints will not be provided.
 */
var NetworkEndpointGroupsListEndpointsRequestHealthStatusEnum;
(function (NetworkEndpointGroupsListEndpointsRequestHealthStatusEnum) {
    NetworkEndpointGroupsListEndpointsRequestHealthStatusEnum["Show"] = "SHOW";
    NetworkEndpointGroupsListEndpointsRequestHealthStatusEnum["Skip"] = "SKIP";
})(NetworkEndpointGroupsListEndpointsRequestHealthStatusEnum = exports.NetworkEndpointGroupsListEndpointsRequestHealthStatusEnum || (exports.NetworkEndpointGroupsListEndpointsRequestHealthStatusEnum = {}));
var NetworkEndpointGroupsListEndpointsRequest = /** @class */ (function (_super) {
    __extends(NetworkEndpointGroupsListEndpointsRequest, _super);
    function NetworkEndpointGroupsListEndpointsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: networkendpointgroupslistendpointsrequestnetworkendpointfilter_1.NetworkEndpointGroupsListEndpointsRequestNetworkEndpointFilter,
        }),
        (0, class_transformer_1.Expose)({ name: "endpointFilters" }),
        (0, class_transformer_1.Type)(function () { return networkendpointgroupslistendpointsrequestnetworkendpointfilter_1.NetworkEndpointGroupsListEndpointsRequestNetworkEndpointFilter; }),
        __metadata("design:type", Array)
    ], NetworkEndpointGroupsListEndpointsRequest.prototype, "endpointFilters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthStatus" }),
        __metadata("design:type", String)
    ], NetworkEndpointGroupsListEndpointsRequest.prototype, "healthStatus", void 0);
    return NetworkEndpointGroupsListEndpointsRequest;
}(utils_1.SpeakeasyBase));
exports.NetworkEndpointGroupsListEndpointsRequest = NetworkEndpointGroupsListEndpointsRequest;
