"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Gzip:
    r"""Configuration for gzip of service responses"""
    
    black_list: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blackList') }})
    r"""Blacklisted mime types. Wildcard supported"""  
    buffer_size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bufferSize') }})
    r"""Size of the GZip buffer"""  
    chunked_threshold: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chunkedThreshold') }})
    r"""Threshold for chunking data"""  
    compression_level: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compressionLevel') }})
    r"""Compression level. From 0 to 9"""  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Whether gzip compression is enabled or not"""  
    excluded_patterns: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('excludedPatterns') }})
    r"""Patterns that are excluded from gzipping"""  
    white_list: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('whiteList') }})
    r"""Whitelisted mime types. Wildcard supported"""  
    