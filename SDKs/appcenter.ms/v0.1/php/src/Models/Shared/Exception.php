<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Exception - a exception
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Exception
{
    /**
     * frames of the excetpion
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\ExceptionFrames> $frames
     */
	#[\JMS\Serializer\Annotation\SerializedName('frames')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ExceptionFrames>')]
    public array $frames;
    
    /**
     * $innerExceptions
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Exception> $innerExceptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('inner_exceptions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Exception>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $innerExceptions = null;
    
    /**
     * SDK/Platform this thread is beeing generated from
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExceptionPlatformEnum $platform
     */
	#[\JMS\Serializer\Annotation\SerializedName('platform')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ExceptionPlatformEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExceptionPlatformEnum $platform = null;
    
    /**
     * Reason of the exception
     * 
     * @var ?string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
    /**
     * relevant exception (crashed)
     * 
     * @var ?bool $relevant
     */
	#[\JMS\Serializer\Annotation\SerializedName('relevant')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $relevant = null;
    
    /**
     * Type of the exception (NSSomethingException, NullPointerException)
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->frames = [];
		$this->innerExceptions = null;
		$this->platform = null;
		$this->reason = null;
		$this->relevant = null;
		$this->type = null;
	}
}
