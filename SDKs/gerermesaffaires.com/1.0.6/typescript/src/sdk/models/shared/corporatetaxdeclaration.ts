/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum CorporateTaxDeclarationOrderEnum {
  OnestAdvance = "1st advance",
  TwondAdvance = "2nd advance",
  ThreerdAdvance = "3rd advance",
  FourthAdvance = "4th advance",
  Regularization = "regularization",
}

export class CorporateTaxDeclaration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Author" })
  author?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Class" })
  class?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  date?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeclarationDate" })
  declarationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Extension" })
  extension?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FolderDate" })
  folderDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Order" })
  order?: CorporateTaxDeclarationOrderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Rate" })
  rate?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TaxBase" })
  taxBase?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;
}
