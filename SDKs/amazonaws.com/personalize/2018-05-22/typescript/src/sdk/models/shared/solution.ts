/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoMLResult } from "./automlresult";
import { SolutionConfig } from "./solutionconfig";
import { SolutionVersionSummary } from "./solutionversionsummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An object that provides information about a solution. A solution is a trained model that can be deployed as a campaign.
 */
export class Solution extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "autoMLResult" })
  @Type(() => AutoMLResult)
  autoMLResult?: AutoMLResult;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "datasetGroupArn" })
  datasetGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventType" })
  eventType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "latestSolutionVersion" })
  @Type(() => SolutionVersionSummary)
  latestSolutionVersion?: SolutionVersionSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "performAutoML" })
  performAutoML?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "performHPO" })
  performHPO?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "recipeArn" })
  recipeArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "solutionArn" })
  solutionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "solutionConfig" })
  @Type(() => SolutionConfig)
  solutionConfig?: SolutionConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
