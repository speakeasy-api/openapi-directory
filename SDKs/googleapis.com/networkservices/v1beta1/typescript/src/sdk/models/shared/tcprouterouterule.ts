/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TcpRouteRouteAction } from "./tcprouterouteaction";
import { TcpRouteRouteMatch } from "./tcprouteroutematch";
import { Expose, Type } from "class-transformer";

/**
 * Specifies how to match traffic and how to route traffic when traffic is matched.
 */
export class TcpRouteRouteRule extends SpeakeasyBase {
  /**
   * The specifications for routing traffic and applying associated policies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  @Type(() => TcpRouteRouteAction)
  action?: TcpRouteRouteAction;

  /**
   * Optional. RouteMatch defines the predicate used to match requests to a given action. Multiple match types are "OR"ed for evaluation. If no routeMatch field is specified, this rule will unconditionally match traffic.
   */
  @SpeakeasyMetadata({ elemType: TcpRouteRouteMatch })
  @Expose({ name: "matches" })
  @Type(() => TcpRouteRouteMatch)
  matches?: TcpRouteRouteMatch[];
}
