"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GenerateRandomBytesRequestProtectionLevelEnum(str, Enum):
    r"""The ProtectionLevel to use when generating the random data. Currently, only HSM protection level is supported."""
    PROTECTION_LEVEL_UNSPECIFIED = 'PROTECTION_LEVEL_UNSPECIFIED'
    SOFTWARE = 'SOFTWARE'
    HSM = 'HSM'
    EXTERNAL = 'EXTERNAL'
    EXTERNAL_VPC = 'EXTERNAL_VPC'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GenerateRandomBytesRequest:
    r"""Request message for KeyManagementService.GenerateRandomBytes."""
    
    length_bytes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lengthBytes'), 'exclude': lambda f: f is None }})
    r"""The length in bytes of the amount of randomness to retrieve. Minimum 8 bytes, maximum 1024 bytes."""  
    protection_level: Optional[GenerateRandomBytesRequestProtectionLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protectionLevel'), 'exclude': lambda f: f is None }})
    r"""The ProtectionLevel to use when generating the random data. Currently, only HSM protection level is supported."""  
    