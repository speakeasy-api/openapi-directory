/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ConfirmationStateEnum } from "./confirmationstateenum";
import { IntentStateEnum } from "./intentstateenum";
import { Slot } from "./slot";
import { Expose, Transform } from "class-transformer";

/**
 * The current intent that Amazon Lex V2 is attempting to fulfill.
 */
export class Intent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "confirmationState" })
  confirmationState?: ConfirmationStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: Slot })
  @Expose({ name: "slots" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Slot> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], Slot);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  slots?: Record<string, Slot>;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: IntentStateEnum;
}
