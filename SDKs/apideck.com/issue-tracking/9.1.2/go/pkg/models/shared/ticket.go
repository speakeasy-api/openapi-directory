// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// TicketPriorityEnum - Priority of the ticket
type TicketPriorityEnum string

const (
	TicketPriorityEnumLow    TicketPriorityEnum = "low"
	TicketPriorityEnumNormal TicketPriorityEnum = "normal"
	TicketPriorityEnumHigh   TicketPriorityEnum = "high"
	TicketPriorityEnumUrgent TicketPriorityEnum = "urgent"
)

func (e *TicketPriorityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "low":
		fallthrough
	case "normal":
		fallthrough
	case "high":
		fallthrough
	case "urgent":
		*e = TicketPriorityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TicketPriorityEnum: %s", s)
	}
}

type TicketInput struct {
	Assignees []AssigneeInput `json:"assignees,omitempty"`
	// The ticket's description. HTML version of description is mapped if supported by the third-party platform
	Description *string `json:"description,omitempty"`
	// Due date of the ticket
	DueDate *time.Time `json:"due_date,omitempty"`
	// The ticket's parent ID
	ParentID *string `json:"parent_id,omitempty"`
	// Priority of the ticket
	Priority *TicketPriorityEnum `json:"priority,omitempty"`
	// The current status of the ticket. Possible values include: open, in_progress, closed, or - in cases where there is no clear mapping - the original value passed through.
	Status *string `json:"status,omitempty"`
	// Subject of the ticket
	Subject *string              `json:"subject,omitempty"`
	Tags    []CollectionTagInput `json:"tags,omitempty"`
	// The ticket's type
	Type *string `json:"type,omitempty"`
}

type Ticket struct {
	Assignees []Assignee `json:"assignees,omitempty"`
	// The ticket's collection ID
	CollectionID *string `json:"collection_id,omitempty"`
	// When the ticket was completed
	CompletedAt *time.Time `json:"completed_at,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// The ticket's description. HTML version of description is mapped if supported by the third-party platform
	Description *string `json:"description,omitempty"`
	// Due date of the ticket
	DueDate *time.Time `json:"due_date,omitempty"`
	// A unique identifier for an object.
	ID string `json:"id"`
	// The ticket's parent ID
	ParentID *string `json:"parent_id,omitempty"`
	// Priority of the ticket
	Priority *TicketPriorityEnum `json:"priority,omitempty"`
	// The current status of the ticket. Possible values include: open, in_progress, closed, or - in cases where there is no clear mapping - the original value passed through.
	Status *string `json:"status,omitempty"`
	// Subject of the ticket
	Subject *string         `json:"subject,omitempty"`
	Tags    []CollectionTag `json:"tags,omitempty"`
	// The ticket's type
	Type *string `json:"type,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}
