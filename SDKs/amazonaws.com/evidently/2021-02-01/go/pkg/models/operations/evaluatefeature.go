// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type EvaluateFeaturePathParams struct {
	// The name of the feature being evaluated.
	Feature string `pathParam:"style=simple,explode=false,name=feature"`
	// The name or ARN of the project that contains this feature.
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

type EvaluateFeatureHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type EvaluateFeatureRequestBody struct {
	// An internal ID that represents a unique user of the application. This <code>entityID</code> is checked against any override rules assigned for this feature.
	EntityID string `json:"entityId"`
	// <p>A JSON object of attributes that you can optionally pass in as part of the evaluation event sent to Evidently from the user session. Evidently can use this value to match user sessions with defined audience segments. For more information, see <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-Evidently-segments.html">Use segments to focus your audience</a>.</p> <p>If you include this parameter, the value must be a JSON object. A JSON array is not supported.</p>
	EvaluationContext *string `json:"evaluationContext,omitempty"`
}

type EvaluateFeatureRequest struct {
	PathParams EvaluateFeaturePathParams
	Headers    EvaluateFeatureHeaders
	Request    EvaluateFeatureRequestBody `request:"mediaType=application/json"`
}

type EvaluateFeatureResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	EvaluateFeatureResponse *shared.EvaluateFeatureResponse
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
