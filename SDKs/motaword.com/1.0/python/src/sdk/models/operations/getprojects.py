"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listordertype_enum as shared_listordertype_enum
from ..shared import projectlist as shared_projectlist
from ..shared import projectstatus_enum as shared_projectstatus_enum
from enum import Enum
from typing import Optional

class GetProjectsOrderByEnum(str, Enum):
    ID = 'id'
    STATUS = 'status'
    DELIVERY = 'delivery'
    PRICE = 'price'

class GetProjectsWithEnum(str, Enum):
    CLIENT = 'client'
    VENDOR = 'vendor'


@dataclasses.dataclass
class GetProjectsRequest:
    
    order_by: Optional[GetProjectsOrderByEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order_by', 'style': 'form', 'explode': True }})  
    order_type: Optional[shared_listordertype_enum.ListOrderTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order_type', 'style': 'form', 'explode': True }})  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})  
    status: Optional[list[shared_projectstatus_enum.ProjectStatusEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status[]', 'style': 'form', 'explode': True }})
    r"""Filter projects by status. Accepts multiple statuses. Possible values 'pending', 'started', 'completed'"""  
    with_completed: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with_completed', 'style': 'form', 'explode': True }})
    r"""deprecated. use `status[]` param."""  
    with_pending: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with_pending', 'style': 'form', 'explode': True }})
    r"""deprecated. use `status[]` param."""  
    with_started: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with_started', 'style': 'form', 'explode': True }})
    r"""deprecated. use `status[]` param."""  
    with_: Optional[list[GetProjectsWithEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with[]', 'style': 'form', 'explode': True }})
    r"""Include detailed information. Possible values 'client', 'vendor'"""  
    

@dataclasses.dataclass
class GetProjectsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    project_list: Optional[shared_projectlist.ProjectList] = dataclasses.field(default=None)
    r"""Project list"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    