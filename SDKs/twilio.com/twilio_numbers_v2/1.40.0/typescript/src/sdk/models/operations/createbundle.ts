/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateBundleServerList = ["https://numbers.twilio.com"] as const;

export class CreateBundleSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateBundleCreateBundleRequest extends SpeakeasyBase {
  /**
   * The email address that will receive updates when the Bundle resource changes status.
   */
  @SpeakeasyMetadata({ data: "form, name=Email" })
  email: string;

  @SpeakeasyMetadata({ data: "form, name=EndUserType" })
  endUserType?: shared.BundleEnumEndUserTypeEnum;

  /**
   * The string that you assigned to describe the resource.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName: string;

  /**
   * The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle's phone number country ownership request.
   */
  @SpeakeasyMetadata({ data: "form, name=IsoCountry" })
  isoCountry?: string;

  /**
   * The type of phone number of the Bundle's ownership request. Can be `local`, `mobile`, `national`, or `toll free`.
   */
  @SpeakeasyMetadata({ data: "form, name=NumberType" })
  numberType?: string;

  /**
   * The unique string of a regulation that is associated to the Bundle resource.
   */
  @SpeakeasyMetadata({ data: "form, name=RegulationSid" })
  regulationSid?: string;

  /**
   * The URL we call to inform your application of status changes.
   */
  @SpeakeasyMetadata({ data: "form, name=StatusCallback" })
  statusCallback?: string;
}

export class CreateBundleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  numbersV2RegulatoryComplianceBundle?: shared.NumbersV2RegulatoryComplianceBundle;
}
