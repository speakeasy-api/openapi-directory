/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETPublicNotificationDefinitionResponse - OK
 */
public class GETPublicNotificationDefinitionResponse {
    /**
     * The status of the notification definition. The default value is true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public GETPublicNotificationDefinitionResponse withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callout")
    public GETPublicNotificationDefinitionResponseCallout callout;
    public GETPublicNotificationDefinitionResponse withCallout(GETPublicNotificationDefinitionResponseCallout callout) {
        this.callout = callout;
        return this;
    }
    
    /**
     * The status of the callout action. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("calloutActive")
    public Boolean calloutActive;
    public GETPublicNotificationDefinitionResponse withCalloutActive(Boolean calloutActive) {
        this.calloutActive = calloutActive;
        return this;
    }
    
    /**
     * The profile that the notification definition belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("communicationProfileId")
    public String communicationProfileId;
    public GETPublicNotificationDefinitionResponse withCommunicationProfileId(String communicationProfileId) {
        this.communicationProfileId = communicationProfileId;
        return this;
    }
    
    /**
     * The ID of the user who created the notification definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public String createdBy;
    public GETPublicNotificationDefinitionResponse withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * The time when the notification definition was created. Specified in the UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g. 1997-07-16T19:20:30.45+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdOn")
    public OffsetDateTime createdOn;
    public GETPublicNotificationDefinitionResponse withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }
    
    /**
     * Description of the notification definition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GETPublicNotificationDefinitionResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The status of the email action. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailActive")
    public Boolean emailActive;
    public GETPublicNotificationDefinitionResponse withEmailActive(Boolean emailActive) {
        this.emailActive = emailActive;
        return this;
    }
    
    /**
     * The ID of the email template. In the request, there should be at least one email template or callout.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailTemplateId")
    public String emailTemplateId;
    public GETPublicNotificationDefinitionResponse withEmailTemplateId(String emailTemplateId) {
        this.emailTemplateId = emailTemplateId;
        return this;
    }
    
    /**
     * The name of the event type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTypeName")
    public String eventTypeName;
    public GETPublicNotificationDefinitionResponse withEventTypeName(String eventTypeName) {
        this.eventTypeName = eventTypeName;
        return this;
    }
    
    /**
     * The namespace of the `eventTypeName` field. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTypeNamespace")
    public String eventTypeNamespace;
    public GETPublicNotificationDefinitionResponse withEventTypeNamespace(String eventTypeNamespace) {
        this.eventTypeNamespace = eventTypeNamespace;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filterRule")
    public GETPublicNotificationDefinitionResponseFilterRule filterRule;
    public GETPublicNotificationDefinitionResponse withFilterRule(GETPublicNotificationDefinitionResponseFilterRule filterRule) {
        this.filterRule = filterRule;
        return this;
    }
    
    /**
     * The parameter values used to configure the filter rule.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filterRuleParams")
    public java.util.Map<String, String> filterRuleParams;
    public GETPublicNotificationDefinitionResponse withFilterRuleParams(java.util.Map<String, String> filterRuleParams) {
        this.filterRuleParams = filterRuleParams;
        return this;
    }
    
    /**
     * The filter rule associated with this notification definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETPublicNotificationDefinitionResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The name of the notification definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GETPublicNotificationDefinitionResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ID of the user who updated the notification definition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public String updatedBy;
    public GETPublicNotificationDefinitionResponse withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
    /**
     * The time when the notification was updated. Specified in the UTC timezone in the ISO860 format (YYYY-MM-DDThh:mm:ss.sTZD). E.g. 1997-07-16T19:20:30.45+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedOn")
    public OffsetDateTime updatedOn;
    public GETPublicNotificationDefinitionResponse withUpdatedOn(OffsetDateTime updatedOn) {
        this.updatedOn = updatedOn;
        return this;
    }
    
}
