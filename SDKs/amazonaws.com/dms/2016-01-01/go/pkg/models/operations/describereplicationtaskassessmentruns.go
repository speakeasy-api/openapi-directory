// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeReplicationTaskAssessmentRunsXAmzTargetEnum
type DescribeReplicationTaskAssessmentRunsXAmzTargetEnum string

const (
	DescribeReplicationTaskAssessmentRunsXAmzTargetEnumAmazonDmSv20160101DescribeReplicationTaskAssessmentRuns DescribeReplicationTaskAssessmentRunsXAmzTargetEnum = "AmazonDMSv20160101.DescribeReplicationTaskAssessmentRuns"
)

func (e DescribeReplicationTaskAssessmentRunsXAmzTargetEnum) ToPointer() *DescribeReplicationTaskAssessmentRunsXAmzTargetEnum {
	return &e
}

func (e *DescribeReplicationTaskAssessmentRunsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonDMSv20160101.DescribeReplicationTaskAssessmentRuns":
		*e = DescribeReplicationTaskAssessmentRunsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeReplicationTaskAssessmentRunsXAmzTargetEnum: %v", v)
	}
}

type DescribeReplicationTaskAssessmentRunsRequest struct {
	DescribeReplicationTaskAssessmentRunsMessage shared.DescribeReplicationTaskAssessmentRunsMessage `request:"mediaType=application/json"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords        *string                                             `queryParam:"style=form,explode=true,name=MaxRecords"`
	XAmzAlgorithm     *string                                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeReplicationTaskAssessmentRunsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeReplicationTaskAssessmentRunsResponse struct {
	ContentType string
	// Success
	DescribeReplicationTaskAssessmentRunsResponse *shared.DescribeReplicationTaskAssessmentRunsResponse
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
	StatusCode            int
	RawResponse           *http.Response
}
