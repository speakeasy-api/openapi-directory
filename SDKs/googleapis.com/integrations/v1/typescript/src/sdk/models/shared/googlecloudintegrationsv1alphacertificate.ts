/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudIntegrationsV1alphaClientCertificate } from "./googlecloudintegrationsv1alphaclientcertificate";
import { Expose, Type } from "class-transformer";

/**
 * Status of the certificate
 */
export enum GoogleCloudIntegrationsV1alphaCertificateCertificateStatusEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Active = "ACTIVE",
  Expired = "EXPIRED",
}

/**
 * The certificate definition
 */
export class GoogleCloudIntegrationsV1alphaCertificate extends SpeakeasyBase {
  /**
   * Status of the certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificateStatus" })
  certificateStatus?: GoogleCloudIntegrationsV1alphaCertificateCertificateStatusEnum;

  /**
   * Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credentialId" })
  credentialId?: string;

  /**
   * Description of the certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Name of the certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Output only. Auto generated primary key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Contains client certificate information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawCertificate" })
  @Type(() => GoogleCloudIntegrationsV1alphaClientCertificate)
  rawCertificate?: GoogleCloudIntegrationsV1alphaClientCertificate;

  /**
   * Immutable. Requestor ID to be used to register certificate with trawler
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestorId" })
  requestorId?: string;

  /**
   * Output only. The timestamp after which certificate will expire
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validEndTime" })
  validEndTime?: string;

  /**
   * Output only. The timestamp after which certificate will be valid
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validStartTime" })
  validStartTime?: string;
}

/**
 * The certificate definition
 */
export class GoogleCloudIntegrationsV1alphaCertificateInput extends SpeakeasyBase {
  /**
   * Status of the certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificateStatus" })
  certificateStatus?: GoogleCloudIntegrationsV1alphaCertificateCertificateStatusEnum;

  /**
   * Immutable. Credential id that will be used to register with trawler INTERNAL_ONLY
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credentialId" })
  credentialId?: string;

  /**
   * Description of the certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Name of the certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Contains client certificate information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawCertificate" })
  @Type(() => GoogleCloudIntegrationsV1alphaClientCertificate)
  rawCertificate?: GoogleCloudIntegrationsV1alphaClientCertificate;

  /**
   * Immutable. Requestor ID to be used to register certificate with trawler
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestorId" })
  requestorId?: string;
}
