// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateResolverEndpointXAmzTargetEnum
type UpdateResolverEndpointXAmzTargetEnum string

const (
	UpdateResolverEndpointXAmzTargetEnumRoute53ResolverUpdateResolverEndpoint UpdateResolverEndpointXAmzTargetEnum = "Route53Resolver.UpdateResolverEndpoint"
)

func (e *UpdateResolverEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Route53Resolver.UpdateResolverEndpoint":
		*e = UpdateResolverEndpointXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateResolverEndpointXAmzTargetEnum: %s", s)
	}
}

type UpdateResolverEndpointHeaders struct {
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateResolverEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateResolverEndpointRequest struct {
	Headers UpdateResolverEndpointHeaders
	Request shared.UpdateResolverEndpointRequest `request:"mediaType=application/json"`
}

type UpdateResolverEndpointResponse struct {
	ContentType string
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateResolverEndpointResponse *shared.UpdateResolverEndpointResponse
}
