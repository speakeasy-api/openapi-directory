/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateOrganizationInsightMonitoredMediaServerRequestBody extends SpeakeasyBase {
  /**
   * The IP address (IPv4 only) or hostname of the media server to monitor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address: string;

  /**
   * Indicates that if the media server doesn't respond to ICMP pings, the nearest hop will be used in its stead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bestEffortMonitoringEnabled" })
  bestEffortMonitoringEnabled?: boolean;

  /**
   * The name of the VoIP provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class CreateOrganizationInsightMonitoredMediaServerRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateOrganizationInsightMonitoredMediaServerRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;
}

export class CreateOrganizationInsightMonitoredMediaServerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createOrganizationInsightMonitoredMediaServer201ApplicationJSONObject?: Record<
    string,
    any
  >;
}
