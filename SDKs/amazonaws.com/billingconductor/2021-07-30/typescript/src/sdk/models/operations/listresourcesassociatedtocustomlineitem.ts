/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 *  A filter that specifies the type of resource associations that should be retrieved for a custom line item.
 */
export class ListResourcesAssociatedToCustomLineItemRequestBodyFilters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Relationship" })
  relationship?: shared.CustomLineItemRelationshipEnum;
}

export class ListResourcesAssociatedToCustomLineItemRequestBody extends SpeakeasyBase {
  /**
   *  The ARN of the custom line item for which the resource associations will be listed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn: string;

  /**
   *  The billing period for which the resource associations will be listed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BillingPeriod" })
  billingPeriod?: string;

  /**
   *  A filter that specifies the type of resource associations that should be retrieved for a custom line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Filters" })
  @Type(() => ListResourcesAssociatedToCustomLineItemRequestBodyFilters)
  filters?: ListResourcesAssociatedToCustomLineItemRequestBodyFilters;

  /**
   *  (Optional) The maximum number of resource associations to be retrieved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  /**
   *  (Optional) The pagination token that's returned by a previous request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;
}

export class ListResourcesAssociatedToCustomLineItemRequest extends SpeakeasyBase {
  /**
   * Pagination limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxResults",
  })
  maxResults?: string;

  /**
   * Pagination token
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NextToken",
  })
  nextToken?: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ListResourcesAssociatedToCustomLineItemRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class ListResourcesAssociatedToCustomLineItemResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listResourcesAssociatedToCustomLineItemOutput?: shared.ListResourcesAssociatedToCustomLineItemOutput;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
