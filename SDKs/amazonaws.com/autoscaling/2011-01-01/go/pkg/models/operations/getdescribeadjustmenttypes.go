// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeAdjustmentTypesActionEnum
type GETDescribeAdjustmentTypesActionEnum string

const (
	GETDescribeAdjustmentTypesActionEnumDescribeAdjustmentTypes GETDescribeAdjustmentTypesActionEnum = "DescribeAdjustmentTypes"
)

func (e *GETDescribeAdjustmentTypesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeAdjustmentTypes":
		*e = GETDescribeAdjustmentTypesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeAdjustmentTypesActionEnum: %s", s)
	}
}

// GETDescribeAdjustmentTypesVersionEnum
type GETDescribeAdjustmentTypesVersionEnum string

const (
	GETDescribeAdjustmentTypesVersionEnumTwoThousandAndEleven0101 GETDescribeAdjustmentTypesVersionEnum = "2011-01-01"
)

func (e *GETDescribeAdjustmentTypesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETDescribeAdjustmentTypesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeAdjustmentTypesVersionEnum: %s", s)
	}
}

type GETDescribeAdjustmentTypesQueryParams struct {
	Action  GETDescribeAdjustmentTypesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version GETDescribeAdjustmentTypesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeAdjustmentTypesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeAdjustmentTypesRequest struct {
	QueryParams GETDescribeAdjustmentTypesQueryParams
	Headers     GETDescribeAdjustmentTypesHeaders
}

type GETDescribeAdjustmentTypesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
