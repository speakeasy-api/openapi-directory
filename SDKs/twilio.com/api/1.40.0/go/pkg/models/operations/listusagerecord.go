// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

var ListUsageRecordServerList = []string{
	"https://api.twilio.com",
}

type ListUsageRecordSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type ListUsageRecordPathParams struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the UsageRecord resources to read.
	AccountSid string `pathParam:"style=simple,explode=false,name=AccountSid"`
}

type ListUsageRecordQueryParams struct {
	// The [usage category](https://www.twilio.com/docs/usage/api/usage-record#usage-categories) of the UsageRecord resources to read. Only UsageRecord resources in the specified category are retrieved.
	Category *shared.UsageRecordEnumCategoryEnum `queryParam:"style=form,explode=true,name=Category"`
	// Only include usage that occurred on or before this date. Specify the date in GMT and format as `YYYY-MM-DD`.  You can also specify offsets from the current date, such as: `+30days`, which will set the end date to 30 days from the current date.
	EndDate *types.Date `queryParam:"style=form,explode=true,name=EndDate"`
	// Whether to include usage from the master account and all its subaccounts. Can be: `true` (the default) to include usage from the master account and all subaccounts or `false` to retrieve usage from only the specified account.
	IncludeSubaccounts *bool `queryParam:"style=form,explode=true,name=IncludeSubaccounts"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// Only include usage that has occurred on or after this date. Specify the date in GMT and format as `YYYY-MM-DD`. You can also specify offsets from the current date, such as: `-30days`, which will set the start date to be 30 days before the current date.
	StartDate *types.Date `queryParam:"style=form,explode=true,name=StartDate"`
}

type ListUsageRecordRequest struct {
	PathParams  ListUsageRecordPathParams
	QueryParams ListUsageRecordQueryParams
	Security    ListUsageRecordSecurity
	ServerURL   *string
}

// ListUsageRecordListUsageRecordResponse - OK
type ListUsageRecordListUsageRecordResponse struct {
	End             *int64                                   `json:"end,omitempty"`
	FirstPageURI    *string                                  `json:"first_page_uri,omitempty"`
	NextPageURI     *string                                  `json:"next_page_uri,omitempty"`
	Page            *int64                                   `json:"page,omitempty"`
	PageSize        *int64                                   `json:"page_size,omitempty"`
	PreviousPageURI *string                                  `json:"previous_page_uri,omitempty"`
	Start           *int64                                   `json:"start,omitempty"`
	URI             *string                                  `json:"uri,omitempty"`
	UsageRecords    []shared.APIV2010AccountUsageUsageRecord `json:"usage_records,omitempty"`
}

type ListUsageRecordResponse struct {
	ContentType string
	// OK
	ListUsageRecordResponse *ListUsageRecordListUsageRecordResponse
	StatusCode              int
	RawResponse             *http.Response
}
