/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TranscriptFilter - &lt;p&gt;Flag the presence or absence of specific words or phrases detected in your Call Analytics transcription output.&lt;/p&gt; &lt;p&gt;Rules using &lt;code&gt;TranscriptFilter&lt;/code&gt; are designed to match:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Custom words or phrases spoken by the agent, the customer, or both&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Custom words or phrases &lt;b&gt;not&lt;/b&gt; spoken by the agent, the customer, or either&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Custom words or phrases that occur at a specific time frame&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;See &lt;a href="https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-batch.html#tca-rules-batch"&gt;Rule criteria for post-call categories&lt;/a&gt; and &lt;a href="https://docs.aws.amazon.com/transcribe/latest/dg/tca-categories-stream.html#tca-rules-stream"&gt;Rule criteria for streaming categories&lt;/a&gt; for usage examples.&lt;/p&gt;
 */
public class TranscriptFilter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AbsoluteTimeRange")
    public AbsoluteTimeRange absoluteTimeRange;
    public TranscriptFilter withAbsoluteTimeRange(AbsoluteTimeRange absoluteTimeRange) {
        this.absoluteTimeRange = absoluteTimeRange;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Negate")
    public Boolean negate;
    public TranscriptFilter withNegate(Boolean negate) {
        this.negate = negate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ParticipantRole")
    public ParticipantRoleEnum participantRole;
    public TranscriptFilter withParticipantRole(ParticipantRoleEnum participantRole) {
        this.participantRole = participantRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RelativeTimeRange")
    public RelativeTimeRange relativeTimeRange;
    public TranscriptFilter withRelativeTimeRange(RelativeTimeRange relativeTimeRange) {
        this.relativeTimeRange = relativeTimeRange;
        return this;
    }
    
    @JsonProperty("Targets")
    public String[] targets;
    public TranscriptFilter withTargets(String[] targets) {
        this.targets = targets;
        return this;
    }
    
    @JsonProperty("TranscriptFilterType")
    public TranscriptFilterTypeEnum transcriptFilterType;
    public TranscriptFilter withTranscriptFilterType(TranscriptFilterTypeEnum transcriptFilterType) {
        this.transcriptFilterType = transcriptFilterType;
        return this;
    }
    
}
