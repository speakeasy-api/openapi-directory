// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SELocalAccountIdentificationTypeEnum - **seLocal**
type SELocalAccountIdentificationTypeEnum string

const (
	SELocalAccountIdentificationTypeEnumSeLocal SELocalAccountIdentificationTypeEnum = "seLocal"
)

func (e *SELocalAccountIdentificationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "seLocal":
		*e = SELocalAccountIdentificationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SELocalAccountIdentificationTypeEnum: %s", s)
	}
}

// SELocalAccountIdentification - Bank account identification.
type SELocalAccountIdentification struct {
	// The 7- to 10-digit bank account number ([Bankkontonummer](https://sv.wikipedia.org/wiki/Bankkonto)), without the clearing number, separators, or whitespace.
	AccountNumber string `json:"accountNumber"`
	// The 4- to 5-digit clearing number ([Clearingnummer](https://sv.wikipedia.org/wiki/Clearingnummer)), without separators or whitespace.
	ClearingNumber string `json:"clearingNumber"`
	// **seLocal**
	Type SELocalAccountIdentificationTypeEnum `json:"type"`
}
