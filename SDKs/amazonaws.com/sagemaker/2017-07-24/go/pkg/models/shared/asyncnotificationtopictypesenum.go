// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AsyncNotificationTopicTypesEnum string

const (
	AsyncNotificationTopicTypesEnumSuccessNotificationTopic AsyncNotificationTopicTypesEnum = "SUCCESS_NOTIFICATION_TOPIC"
	AsyncNotificationTopicTypesEnumErrorNotificationTopic   AsyncNotificationTopicTypesEnum = "ERROR_NOTIFICATION_TOPIC"
)

func (e AsyncNotificationTopicTypesEnum) ToPointer() *AsyncNotificationTopicTypesEnum {
	return &e
}

func (e *AsyncNotificationTopicTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS_NOTIFICATION_TOPIC":
		fallthrough
	case "ERROR_NOTIFICATION_TOPIC":
		*e = AsyncNotificationTopicTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AsyncNotificationTopicTypesEnum: %v", v)
	}
}
