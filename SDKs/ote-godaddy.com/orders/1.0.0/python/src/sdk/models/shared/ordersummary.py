"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lineitemsummary as shared_lineitemsummary
from ..shared import ordersummarypricing as shared_ordersummarypricing
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderSummary:
    
    created_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt') }})
    r"""Date and time when the current order was created"""  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})
    r"""Currency in which the order was placed"""  
    items: list[shared_lineitemsummary.LineItemSummary] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items') }})
    r"""Sets of two or more line items in current order"""  
    order_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderId') }})
    r"""Unique identifier of the current order"""  
    pricing: shared_ordersummarypricing.OrderSummaryPricing = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pricing') }})  
    parent_order_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentOrderId'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the parent order. All refund/chargeback orders are tied to the original order.
    The orginal order's `orderId` is the `parentOrderId` of refund/chargeback orders
    """  
    