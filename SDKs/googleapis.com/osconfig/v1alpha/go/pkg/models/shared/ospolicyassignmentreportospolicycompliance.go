// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum - The compliance state of the OS policy.
type OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum string

const (
	OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnumUnknown      OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum = "UNKNOWN"
	OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnumCompliant    OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum = "COMPLIANT"
	OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnumNonCompliant OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum = "NON_COMPLIANT"
)

func (e *OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "COMPLIANT":
		fallthrough
	case "NON_COMPLIANT":
		*e = OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum: %s", s)
	}
}

// OSPolicyAssignmentReportOSPolicyCompliance - Compliance data for an OS policy
type OSPolicyAssignmentReportOSPolicyCompliance struct {
	// The compliance state of the OS policy.
	ComplianceState *OSPolicyAssignmentReportOSPolicyComplianceComplianceStateEnum `json:"complianceState,omitempty"`
	// The reason for the OS policy to be in an unknown compliance state. This field is always populated when `compliance_state` is `UNKNOWN`. If populated, the field can contain one of the following values: * `vm-not-running`: The VM was not running. * `os-policies-not-supported-by-agent`: The version of the OS Config agent running on the VM does not support running OS policies. * `no-agent-detected`: The OS Config agent is not detected for the VM. * `resource-execution-errors`: The OS Config agent encountered errors while executing one or more resources in the policy. See `os_policy_resource_compliances` for details. * `task-timeout`: The task sent to the agent to apply the policy timed out. * `unexpected-agent-state`: The OS Config agent did not report the final status of the task that attempted to apply the policy. Instead, the agent unexpectedly started working on a different task. This mostly happens when the agent or VM unexpectedly restarts while applying OS policies. * `internal-service-errors`: Internal service errors were encountered while attempting to apply the policy.
	ComplianceStateReason *string `json:"complianceStateReason,omitempty"`
	// The OS policy id
	OsPolicyID *string `json:"osPolicyId,omitempty"`
	// Compliance data for each resource within the policy that is applied to the VM.
	OsPolicyResourceCompliances []OSPolicyAssignmentReportOSPolicyComplianceOSPolicyResourceCompliance `json:"osPolicyResourceCompliances,omitempty"`
}
