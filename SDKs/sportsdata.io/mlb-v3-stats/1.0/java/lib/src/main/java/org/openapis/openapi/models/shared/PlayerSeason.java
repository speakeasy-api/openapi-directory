/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlayerSeason {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AtBats")
    public Double atBats;
    public PlayerSeason withAtBats(Double atBats) {
        this.atBats = atBats;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuctionValue")
    public Long auctionValue;
    public PlayerSeason withAuctionValue(Long auctionValue) {
        this.auctionValue = auctionValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AverageDraftPosition")
    public Double averageDraftPosition;
    public PlayerSeason withAverageDraftPosition(Double averageDraftPosition) {
        this.averageDraftPosition = averageDraftPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BallsInPlay")
    public Double ballsInPlay;
    public PlayerSeason withBallsInPlay(Double ballsInPlay) {
        this.ballsInPlay = ballsInPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BattingAverage")
    public Double battingAverage;
    public PlayerSeason withBattingAverage(Double battingAverage) {
        this.battingAverage = battingAverage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BattingAverageOnBallsInPlay")
    public Double battingAverageOnBallsInPlay;
    public PlayerSeason withBattingAverageOnBallsInPlay(Double battingAverageOnBallsInPlay) {
        this.battingAverageOnBallsInPlay = battingAverageOnBallsInPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BattingOrder")
    public Long battingOrder;
    public PlayerSeason withBattingOrder(Long battingOrder) {
        this.battingOrder = battingOrder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BattingOrderConfirmed")
    public Boolean battingOrderConfirmed;
    public PlayerSeason withBattingOrderConfirmed(Boolean battingOrderConfirmed) {
        this.battingOrderConfirmed = battingOrderConfirmed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CaughtStealing")
    public Double caughtStealing;
    public PlayerSeason withCaughtStealing(Double caughtStealing) {
        this.caughtStealing = caughtStealing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DoublePlays")
    public Double doublePlays;
    public PlayerSeason withDoublePlays(Double doublePlays) {
        this.doublePlays = doublePlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Doubles")
    public Double doubles;
    public PlayerSeason withDoubles(Double doubles) {
        this.doubles = doubles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EarnedRunAverage")
    public Double earnedRunAverage;
    public PlayerSeason withEarnedRunAverage(Double earnedRunAverage) {
        this.earnedRunAverage = earnedRunAverage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Errors")
    public Double errors;
    public PlayerSeason withErrors(Double errors) {
        this.errors = errors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;
    public PlayerSeason withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsBatting")
    public Double fantasyPointsBatting;
    public PlayerSeason withFantasyPointsBatting(Double fantasyPointsBatting) {
        this.fantasyPointsBatting = fantasyPointsBatting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;
    public PlayerSeason withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;
    public PlayerSeason withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFantasyDraft")
    public Double fantasyPointsFantasyDraft;
    public PlayerSeason withFantasyPointsFantasyDraft(Double fantasyPointsFantasyDraft) {
        this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsPitching")
    public Double fantasyPointsPitching;
    public PlayerSeason withFantasyPointsPitching(Double fantasyPointsPitching) {
        this.fantasyPointsPitching = fantasyPointsPitching;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;
    public PlayerSeason withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldingIndependentPitching")
    public Double fieldingIndependentPitching;
    public PlayerSeason withFieldingIndependentPitching(Double fieldingIndependentPitching) {
        this.fieldingIndependentPitching = fieldingIndependentPitching;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FlyOuts")
    public Double flyOuts;
    public PlayerSeason withFlyOuts(Double flyOuts) {
        this.flyOuts = flyOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;
    public PlayerSeason withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamID")
    public Long globalTeamID;
    public PlayerSeason withGlobalTeamID(Long globalTeamID) {
        this.globalTeamID = globalTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GrandSlams")
    public Double grandSlams;
    public PlayerSeason withGrandSlams(Double grandSlams) {
        this.grandSlams = grandSlams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GroundIntoDoublePlay")
    public Double groundIntoDoublePlay;
    public PlayerSeason withGroundIntoDoublePlay(Double groundIntoDoublePlay) {
        this.groundIntoDoublePlay = groundIntoDoublePlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GroundOuts")
    public Double groundOuts;
    public PlayerSeason withGroundOuts(Double groundOuts) {
        this.groundOuts = groundOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HitByPitch")
    public Double hitByPitch;
    public PlayerSeason withHitByPitch(Double hitByPitch) {
        this.hitByPitch = hitByPitch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Hits")
    public Double hits;
    public PlayerSeason withHits(Double hits) {
        this.hits = hits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeRuns")
    public Double homeRuns;
    public PlayerSeason withHomeRuns(Double homeRuns) {
        this.homeRuns = homeRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InningsPitchedDecimal")
    public Double inningsPitchedDecimal;
    public PlayerSeason withInningsPitchedDecimal(Double inningsPitchedDecimal) {
        this.inningsPitchedDecimal = inningsPitchedDecimal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InningsPitchedFull")
    public Double inningsPitchedFull;
    public PlayerSeason withInningsPitchedFull(Double inningsPitchedFull) {
        this.inningsPitchedFull = inningsPitchedFull;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InningsPitchedOuts")
    public Double inningsPitchedOuts;
    public PlayerSeason withInningsPitchedOuts(Double inningsPitchedOuts) {
        this.inningsPitchedOuts = inningsPitchedOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntentionalWalks")
    public Double intentionalWalks;
    public PlayerSeason withIntentionalWalks(Double intentionalWalks) {
        this.intentionalWalks = intentionalWalks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsolatedPower")
    public Double isolatedPower;
    public PlayerSeason withIsolatedPower(Double isolatedPower) {
        this.isolatedPower = isolatedPower;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LeftOnBase")
    public Double leftOnBase;
    public PlayerSeason withLeftOnBase(Double leftOnBase) {
        this.leftOnBase = leftOnBase;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LineOuts")
    public Double lineOuts;
    public PlayerSeason withLineOuts(Double lineOuts) {
        this.lineOuts = lineOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Losses")
    public Double losses;
    public PlayerSeason withLosses(Double losses) {
        this.losses = losses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public PlayerSeason withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OnBasePercentage")
    public Double onBasePercentage;
    public PlayerSeason withOnBasePercentage(Double onBasePercentage) {
        this.onBasePercentage = onBasePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OnBasePlusSlugging")
    public Double onBasePlusSlugging;
    public PlayerSeason withOnBasePlusSlugging(Double onBasePlusSlugging) {
        this.onBasePlusSlugging = onBasePlusSlugging;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Outs")
    public Double outs;
    public PlayerSeason withOuts(Double outs) {
        this.outs = outs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchesSeen")
    public Double pitchesSeen;
    public PlayerSeason withPitchesSeen(Double pitchesSeen) {
        this.pitchesSeen = pitchesSeen;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchesThrown")
    public Double pitchesThrown;
    public PlayerSeason withPitchesThrown(Double pitchesThrown) {
        this.pitchesThrown = pitchesThrown;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchesThrownStrikes")
    public Double pitchesThrownStrikes;
    public PlayerSeason withPitchesThrownStrikes(Double pitchesThrownStrikes) {
        this.pitchesThrownStrikes = pitchesThrownStrikes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingBallsInPlay")
    public Double pitchingBallsInPlay;
    public PlayerSeason withPitchingBallsInPlay(Double pitchingBallsInPlay) {
        this.pitchingBallsInPlay = pitchingBallsInPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingBattingAverageAgainst")
    public Double pitchingBattingAverageAgainst;
    public PlayerSeason withPitchingBattingAverageAgainst(Double pitchingBattingAverageAgainst) {
        this.pitchingBattingAverageAgainst = pitchingBattingAverageAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingBattingAverageOnBallsInPlay")
    public Double pitchingBattingAverageOnBallsInPlay;
    public PlayerSeason withPitchingBattingAverageOnBallsInPlay(Double pitchingBattingAverageOnBallsInPlay) {
        this.pitchingBattingAverageOnBallsInPlay = pitchingBattingAverageOnBallsInPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingBlownSaves")
    public Double pitchingBlownSaves;
    public PlayerSeason withPitchingBlownSaves(Double pitchingBlownSaves) {
        this.pitchingBlownSaves = pitchingBlownSaves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingCatchersInterference")
    public Double pitchingCatchersInterference;
    public PlayerSeason withPitchingCatchersInterference(Double pitchingCatchersInterference) {
        this.pitchingCatchersInterference = pitchingCatchersInterference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingCompleteGames")
    public Double pitchingCompleteGames;
    public PlayerSeason withPitchingCompleteGames(Double pitchingCompleteGames) {
        this.pitchingCompleteGames = pitchingCompleteGames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingDoublePlays")
    public Double pitchingDoublePlays;
    public PlayerSeason withPitchingDoublePlays(Double pitchingDoublePlays) {
        this.pitchingDoublePlays = pitchingDoublePlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingDoubles")
    public Double pitchingDoubles;
    public PlayerSeason withPitchingDoubles(Double pitchingDoubles) {
        this.pitchingDoubles = pitchingDoubles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingEarnedRuns")
    public Double pitchingEarnedRuns;
    public PlayerSeason withPitchingEarnedRuns(Double pitchingEarnedRuns) {
        this.pitchingEarnedRuns = pitchingEarnedRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingFlyOuts")
    public Double pitchingFlyOuts;
    public PlayerSeason withPitchingFlyOuts(Double pitchingFlyOuts) {
        this.pitchingFlyOuts = pitchingFlyOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingGrandSlams")
    public Double pitchingGrandSlams;
    public PlayerSeason withPitchingGrandSlams(Double pitchingGrandSlams) {
        this.pitchingGrandSlams = pitchingGrandSlams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingGroundIntoDoublePlay")
    public Double pitchingGroundIntoDoublePlay;
    public PlayerSeason withPitchingGroundIntoDoublePlay(Double pitchingGroundIntoDoublePlay) {
        this.pitchingGroundIntoDoublePlay = pitchingGroundIntoDoublePlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingGroundOuts")
    public Double pitchingGroundOuts;
    public PlayerSeason withPitchingGroundOuts(Double pitchingGroundOuts) {
        this.pitchingGroundOuts = pitchingGroundOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingHitByPitch")
    public Double pitchingHitByPitch;
    public PlayerSeason withPitchingHitByPitch(Double pitchingHitByPitch) {
        this.pitchingHitByPitch = pitchingHitByPitch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingHits")
    public Double pitchingHits;
    public PlayerSeason withPitchingHits(Double pitchingHits) {
        this.pitchingHits = pitchingHits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingHolds")
    public Double pitchingHolds;
    public PlayerSeason withPitchingHolds(Double pitchingHolds) {
        this.pitchingHolds = pitchingHolds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingHomeRuns")
    public Double pitchingHomeRuns;
    public PlayerSeason withPitchingHomeRuns(Double pitchingHomeRuns) {
        this.pitchingHomeRuns = pitchingHomeRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingInningStarted")
    public Long pitchingInningStarted;
    public PlayerSeason withPitchingInningStarted(Long pitchingInningStarted) {
        this.pitchingInningStarted = pitchingInningStarted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingIntentionalWalks")
    public Double pitchingIntentionalWalks;
    public PlayerSeason withPitchingIntentionalWalks(Double pitchingIntentionalWalks) {
        this.pitchingIntentionalWalks = pitchingIntentionalWalks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingLineOuts")
    public Double pitchingLineOuts;
    public PlayerSeason withPitchingLineOuts(Double pitchingLineOuts) {
        this.pitchingLineOuts = pitchingLineOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingNoHitters")
    public Double pitchingNoHitters;
    public PlayerSeason withPitchingNoHitters(Double pitchingNoHitters) {
        this.pitchingNoHitters = pitchingNoHitters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingOnBasePercentage")
    public Double pitchingOnBasePercentage;
    public PlayerSeason withPitchingOnBasePercentage(Double pitchingOnBasePercentage) {
        this.pitchingOnBasePercentage = pitchingOnBasePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingOnBasePlusSlugging")
    public Double pitchingOnBasePlusSlugging;
    public PlayerSeason withPitchingOnBasePlusSlugging(Double pitchingOnBasePlusSlugging) {
        this.pitchingOnBasePlusSlugging = pitchingOnBasePlusSlugging;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingPerfectGames")
    public Double pitchingPerfectGames;
    public PlayerSeason withPitchingPerfectGames(Double pitchingPerfectGames) {
        this.pitchingPerfectGames = pitchingPerfectGames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingPlateAppearances")
    public Double pitchingPlateAppearances;
    public PlayerSeason withPitchingPlateAppearances(Double pitchingPlateAppearances) {
        this.pitchingPlateAppearances = pitchingPlateAppearances;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingPopOuts")
    public Double pitchingPopOuts;
    public PlayerSeason withPitchingPopOuts(Double pitchingPopOuts) {
        this.pitchingPopOuts = pitchingPopOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingQualityStarts")
    public Double pitchingQualityStarts;
    public PlayerSeason withPitchingQualityStarts(Double pitchingQualityStarts) {
        this.pitchingQualityStarts = pitchingQualityStarts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingReachedOnError")
    public Double pitchingReachedOnError;
    public PlayerSeason withPitchingReachedOnError(Double pitchingReachedOnError) {
        this.pitchingReachedOnError = pitchingReachedOnError;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingRuns")
    public Double pitchingRuns;
    public PlayerSeason withPitchingRuns(Double pitchingRuns) {
        this.pitchingRuns = pitchingRuns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingSacrificeFlies")
    public Double pitchingSacrificeFlies;
    public PlayerSeason withPitchingSacrificeFlies(Double pitchingSacrificeFlies) {
        this.pitchingSacrificeFlies = pitchingSacrificeFlies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingSacrifices")
    public Double pitchingSacrifices;
    public PlayerSeason withPitchingSacrifices(Double pitchingSacrifices) {
        this.pitchingSacrifices = pitchingSacrifices;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingShutOuts")
    public Double pitchingShutOuts;
    public PlayerSeason withPitchingShutOuts(Double pitchingShutOuts) {
        this.pitchingShutOuts = pitchingShutOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingSingles")
    public Double pitchingSingles;
    public PlayerSeason withPitchingSingles(Double pitchingSingles) {
        this.pitchingSingles = pitchingSingles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingSluggingPercentage")
    public Double pitchingSluggingPercentage;
    public PlayerSeason withPitchingSluggingPercentage(Double pitchingSluggingPercentage) {
        this.pitchingSluggingPercentage = pitchingSluggingPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingStrikeouts")
    public Double pitchingStrikeouts;
    public PlayerSeason withPitchingStrikeouts(Double pitchingStrikeouts) {
        this.pitchingStrikeouts = pitchingStrikeouts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingStrikeoutsPerNineInnings")
    public Double pitchingStrikeoutsPerNineInnings;
    public PlayerSeason withPitchingStrikeoutsPerNineInnings(Double pitchingStrikeoutsPerNineInnings) {
        this.pitchingStrikeoutsPerNineInnings = pitchingStrikeoutsPerNineInnings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingTotalBases")
    public Double pitchingTotalBases;
    public PlayerSeason withPitchingTotalBases(Double pitchingTotalBases) {
        this.pitchingTotalBases = pitchingTotalBases;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingTriples")
    public Double pitchingTriples;
    public PlayerSeason withPitchingTriples(Double pitchingTriples) {
        this.pitchingTriples = pitchingTriples;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingWalks")
    public Double pitchingWalks;
    public PlayerSeason withPitchingWalks(Double pitchingWalks) {
        this.pitchingWalks = pitchingWalks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingWalksPerNineInnings")
    public Double pitchingWalksPerNineInnings;
    public PlayerSeason withPitchingWalksPerNineInnings(Double pitchingWalksPerNineInnings) {
        this.pitchingWalksPerNineInnings = pitchingWalksPerNineInnings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PitchingWeightedOnBasePercentage")
    public Double pitchingWeightedOnBasePercentage;
    public PlayerSeason withPitchingWeightedOnBasePercentage(Double pitchingWeightedOnBasePercentage) {
        this.pitchingWeightedOnBasePercentage = pitchingWeightedOnBasePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlateAppearances")
    public Double plateAppearances;
    public PlayerSeason withPlateAppearances(Double plateAppearances) {
        this.plateAppearances = plateAppearances;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;
    public PlayerSeason withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PopOuts")
    public Double popOuts;
    public PlayerSeason withPopOuts(Double popOuts) {
        this.popOuts = popOuts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Position")
    public String position;
    public PlayerSeason withPosition(String position) {
        this.position = position;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PositionCategory")
    public String positionCategory;
    public PlayerSeason withPositionCategory(String positionCategory) {
        this.positionCategory = positionCategory;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReachedOnError")
    public Double reachedOnError;
    public PlayerSeason withReachedOnError(Double reachedOnError) {
        this.reachedOnError = reachedOnError;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Runs")
    public Double runs;
    public PlayerSeason withRuns(Double runs) {
        this.runs = runs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RunsBattedIn")
    public Double runsBattedIn;
    public PlayerSeason withRunsBattedIn(Double runsBattedIn) {
        this.runsBattedIn = runsBattedIn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SacrificeFlies")
    public Double sacrificeFlies;
    public PlayerSeason withSacrificeFlies(Double sacrificeFlies) {
        this.sacrificeFlies = sacrificeFlies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sacrifices")
    public Double sacrifices;
    public PlayerSeason withSacrifices(Double sacrifices) {
        this.sacrifices = sacrifices;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Saves")
    public Double saves;
    public PlayerSeason withSaves(Double saves) {
        this.saves = saves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;
    public PlayerSeason withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;
    public PlayerSeason withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Singles")
    public Double singles;
    public PlayerSeason withSingles(Double singles) {
        this.singles = singles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SluggingPercentage")
    public Double sluggingPercentage;
    public PlayerSeason withSluggingPercentage(Double sluggingPercentage) {
        this.sluggingPercentage = sluggingPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Started")
    public Long started;
    public PlayerSeason withStarted(Long started) {
        this.started = started;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatID")
    public Long statID;
    public PlayerSeason withStatID(Long statID) {
        this.statID = statID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StolenBases")
    public Double stolenBases;
    public PlayerSeason withStolenBases(Double stolenBases) {
        this.stolenBases = stolenBases;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Strikeouts")
    public Double strikeouts;
    public PlayerSeason withStrikeouts(Double strikeouts) {
        this.strikeouts = strikeouts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubstituteBattingOrder")
    public Long substituteBattingOrder;
    public PlayerSeason withSubstituteBattingOrder(Long substituteBattingOrder) {
        this.substituteBattingOrder = substituteBattingOrder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubstituteBattingOrderSequence")
    public Long substituteBattingOrderSequence;
    public PlayerSeason withSubstituteBattingOrderSequence(Long substituteBattingOrderSequence) {
        this.substituteBattingOrderSequence = substituteBattingOrderSequence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;
    public PlayerSeason withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;
    public PlayerSeason withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalBases")
    public Double totalBases;
    public PlayerSeason withTotalBases(Double totalBases) {
        this.totalBases = totalBases;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalOutsPitched")
    public Double totalOutsPitched;
    public PlayerSeason withTotalOutsPitched(Double totalOutsPitched) {
        this.totalOutsPitched = totalOutsPitched;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Triples")
    public Double triples;
    public PlayerSeason withTriples(Double triples) {
        this.triples = triples;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;
    public PlayerSeason withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Walks")
    public Double walks;
    public PlayerSeason withWalks(Double walks) {
        this.walks = walks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WalksHitsPerInningsPitched")
    public Double walksHitsPerInningsPitched;
    public PlayerSeason withWalksHitsPerInningsPitched(Double walksHitsPerInningsPitched) {
        this.walksHitsPerInningsPitched = walksHitsPerInningsPitched;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WeightedOnBasePercentage")
    public Double weightedOnBasePercentage;
    public PlayerSeason withWeightedOnBasePercentage(Double weightedOnBasePercentage) {
        this.weightedOnBasePercentage = weightedOnBasePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Wins")
    public Double wins;
    public PlayerSeason withWins(Double wins) {
        this.wins = wins;
        return this;
    }
    
}
