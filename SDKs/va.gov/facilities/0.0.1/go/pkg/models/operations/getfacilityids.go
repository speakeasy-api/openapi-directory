// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFacilityIdsSecurity struct {
	Apikey string `security:"scheme,type=apiKey,subtype=header,name=apikey"`
}

// GetFacilityIdsTypeEnum - Optional facility type search filter
type GetFacilityIdsTypeEnum string

const (
	GetFacilityIdsTypeEnumHealth    GetFacilityIdsTypeEnum = "health"
	GetFacilityIdsTypeEnumCemetery  GetFacilityIdsTypeEnum = "cemetery"
	GetFacilityIdsTypeEnumBenefits  GetFacilityIdsTypeEnum = "benefits"
	GetFacilityIdsTypeEnumVetCenter GetFacilityIdsTypeEnum = "vet_center"
)

func (e *GetFacilityIdsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "health":
		fallthrough
	case "cemetery":
		fallthrough
	case "benefits":
		fallthrough
	case "vet_center":
		*e = GetFacilityIdsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFacilityIdsTypeEnum: %s", s)
	}
}

type GetFacilityIdsRequest struct {
	// Optional facility type search filter
	Type *GetFacilityIdsTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type GetFacilityIdsResponse struct {
	// Requested format unacceptable
	APIError    *shared.APIError
	ContentType string
	// Success
	FacilitiesIdsResponse *shared.FacilitiesIdsResponse
	// Missing API token
	GenericError *shared.GenericError
	StatusCode   int
	RawResponse  *http.Response
}
