// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScheduleStatusEnum string

const (
	ScheduleStatusEnumPending   ScheduleStatusEnum = "Pending"
	ScheduleStatusEnumFailed    ScheduleStatusEnum = "Failed"
	ScheduleStatusEnumScheduled ScheduleStatusEnum = "Scheduled"
	ScheduleStatusEnumStopped   ScheduleStatusEnum = "Stopped"
)

func (e ScheduleStatusEnum) ToPointer() *ScheduleStatusEnum {
	return &e
}

func (e *ScheduleStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "Failed":
		fallthrough
	case "Scheduled":
		fallthrough
	case "Stopped":
		*e = ScheduleStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScheduleStatusEnum: %v", v)
	}
}
