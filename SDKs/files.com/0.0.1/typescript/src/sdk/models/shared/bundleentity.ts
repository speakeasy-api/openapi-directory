/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FormFieldSetEntity } from "./formfieldsetentity";
import { ImageEntity } from "./imageentity";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Permissions that apply to Folders in this Share Link.
 */
export enum BundleEntityPermissionsEnum {
  Read = "read",
  Write = "write",
  ReadWrite = "read_write",
  Full = "full",
  None = "none",
  PreviewOnly = "preview_only",
}

/**
 * Create Bundle
 */
export class BundleEntity extends SpeakeasyBase {
  /**
   * Legal text that must be agreed to prior to accessing Bundle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clickwrap_body" })
  clickwrapBody?: string;

  /**
   * ID of the clickwrap to use with this bundle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clickwrap_id" })
  clickwrapId?: number;

  /**
   * Bundle code.  This code forms the end part of the Public URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Bundle created at date/time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * Public description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Do not create subfolders for files uploaded to this share. Note: there are subtle security pitfalls with allowing anonymous uploads from multiple users to live in the same folder. We strongly discourage use of this option unless absolutely required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dont_separate_submissions_by_folder" })
  dontSeparateSubmissionsByFolder?: boolean;

  /**
   * Bundle expiration date/time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresAt?: Date;

  /**
   * List Form Field Sets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "form_field_set" })
  @Type(() => FormFieldSetEntity)
  formFieldSet?: FormFieldSetEntity;

  /**
   * Does this bundle have an associated inbox?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_inbox" })
  hasInbox?: boolean;

  /**
   * Bundle ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * ID of the associated inbox, if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbox_id" })
  inboxId?: number;

  /**
   * Maximum number of times bundle can be accessed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_uses" })
  maxUses?: number;

  /**
   * Bundle internal note
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  /**
   * Is this bundle password protected?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password_protected" })
  passwordProtected?: boolean;

  /**
   * Template for creating submission subfolders. Can use the uploader's name, email address, ip, company, and any custom form data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path_template" })
  pathTemplate?: string;

  /**
   * A list of paths in this bundle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paths" })
  paths?: string[];

  /**
   * Permissions that apply to Folders in this Share Link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: BundleEntityPermissionsEnum;

  /**
   * Restrict users to previewing files only?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preview_only" })
  previewOnly?: boolean;

  /**
   * Show a registration page that captures the downloader's name and email address?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "require_registration" })
  requireRegistration?: boolean;

  /**
   * Only allow access to recipients who have explicitly received the share via an email sent through the Files.com UI?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "require_share_recipient" })
  requireShareRecipient?: boolean;

  /**
   * Send delivery receipt to the uploader. Note: For writable share only
   */
  @SpeakeasyMetadata()
  @Expose({ name: "send_email_receipt_to_uploader" })
  sendEmailReceiptToUploader?: boolean;

  /**
   * BundleRegistrations can be saved without providing company?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skip_company" })
  skipCompany?: boolean;

  /**
   * BundleRegistrations can be saved without providing email?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skip_email" })
  skipEmail?: boolean;

  /**
   * BundleRegistrations can be saved without providing name?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skip_name" })
  skipName?: boolean;

  /**
   * Public URL of Share Link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * Bundle creator user ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: number;

  /**
   * Bundle creator username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "watermark_attachment" })
  @Type(() => ImageEntity)
  watermarkAttachment?: ImageEntity;

  /**
   * Preview watermark settings applied to all bundle items. Uses the same keys as Behavior.value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "watermark_value" })
  watermarkValue?: Record<string, any>;
}
