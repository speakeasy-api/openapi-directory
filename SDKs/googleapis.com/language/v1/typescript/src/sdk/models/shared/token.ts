/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DependencyEdge } from "./dependencyedge";
import { PartOfSpeech } from "./partofspeech";
import { TextSpan } from "./textspan";
import { Expose, Type } from "class-transformer";

/**
 * Represents the smallest syntactic building block of the text.
 */
export class Token extends SpeakeasyBase {
  /**
   * Represents dependency parse tree information for a token. (For more information on dependency labels, see http://www.aclweb.org/anthology/P13-2017
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dependencyEdge" })
  @Type(() => DependencyEdge)
  dependencyEdge?: DependencyEdge;

  /**
   * [Lemma](https://en.wikipedia.org/wiki/Lemma_%28morphology%29) of the token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lemma" })
  lemma?: string;

  /**
   * Represents part of speech information for a token. Parts of speech are as defined in http://www.lrec-conf.org/proceedings/lrec2012/pdf/274_Paper.pdf
   */
  @SpeakeasyMetadata()
  @Expose({ name: "partOfSpeech" })
  @Type(() => PartOfSpeech)
  partOfSpeech?: PartOfSpeech;

  /**
   * Represents an output piece of text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  @Type(() => TextSpan)
  text?: TextSpan;
}
