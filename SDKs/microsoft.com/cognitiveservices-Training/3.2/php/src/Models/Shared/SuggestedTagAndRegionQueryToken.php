<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
/**
 * SuggestedTagAndRegionQueryToken - Contains properties we need to fetch suggested tags for. For the first call, Session and continuation set to null.
 * 
 * Then on subsequent calls, uses the session/continuation from the previous SuggestedTagAndRegionQuery result to fetch additional results.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SuggestedTagAndRegionQueryToken
{
    /**
     * Continuation Id for database pagination. Initially null but later used to paginate.
     * 
     * @var ?string $continuation
     */
	#[\JMS\Serializer\Annotation\SerializedName('continuation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=continuation')]
    public ?string $continuation = null;
    
    /**
     * Maximum number of results you want to be returned in the response.
     * 
     * @var ?int $maxCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=maxCount')]
    public ?int $maxCount = null;
    
    /**
     * SessionId for database query. Initially set to null but later used to paginate.
     * 
     * @var ?string $session
     */
	#[\JMS\Serializer\Annotation\SerializedName('session')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=session')]
    public ?string $session = null;
    
    /**
     * OrderBy. Ordering mechanism for your results.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SuggestedTagAndRegionQueryTokenSortByEnum $sortBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('sortBy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SuggestedTagAndRegionQueryTokenSortByEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=sortBy')]
    public ?SuggestedTagAndRegionQueryTokenSortByEnum $sortBy = null;
    
    /**
     * Existing TagIds in project to filter suggested tags on.
     * 
     * @var ?array<string> $tagIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('tagIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=tagIds')]
    public ?array $tagIds = null;
    
    /**
     * Confidence threshold to filter suggested tags on.
     * 
     * @var ?float $threshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('threshold')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=threshold')]
    public ?float $threshold = null;
    
	public function __construct()
	{
		$this->continuation = null;
		$this->maxCount = null;
		$this->session = null;
		$this->sortBy = null;
		$this->tagIds = null;
		$this->threshold = null;
	}
}
