"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GETPaymentRunDataTransactionElementResponseStatusEnum(str, Enum):
    r"""The status of the newly generated payment.
    
    **Note:** This field is only available if `type` is `Payment`.
    """
    PROCESSED = 'Processed'
    PROCESSING = 'Processing'
    ERROR = 'Error'

class GETPaymentRunDataTransactionElementResponseTypeEnum(str, Enum):
    r"""The type of the current transaction."""
    PAYMENT = 'Payment'
    CREDIT_MEMO = 'CreditMemo'
    UNAPPLIED_PAYMENT = 'UnappliedPayment'
    CREDIT_BALANCE_ADJUSTMENT = 'CreditBalanceAdjustment'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETPaymentRunDataTransactionElementResponse:
    
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The total amount of the newly generated payment.
    
    **Note:** This field is only available if `type` is `Payment`.
    """  
    applied_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appliedAmount'), 'exclude': lambda f: f is None }})
    r"""The amount applied to the record."""  
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCode'), 'exclude': lambda f: f is None }})
    r"""The error code of the response.
    
    **Note:** This field is only available if `type` is `Payment`.
    """  
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorMessage'), 'exclude': lambda f: f is None }})
    r"""The detailed information of the error response.
    
    **Note:** This field is only available if `type` is `Payment`.
    """  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the current transaction."""  
    status: Optional[GETPaymentRunDataTransactionElementResponseStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the newly generated payment.
    
    **Note:** This field is only available if `type` is `Payment`.
    """  
    type: Optional[GETPaymentRunDataTransactionElementResponseTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the current transaction."""  
    