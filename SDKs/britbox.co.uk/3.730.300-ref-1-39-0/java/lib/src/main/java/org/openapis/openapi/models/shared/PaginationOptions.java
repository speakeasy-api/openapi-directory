/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PaginationOptions {
    /**
     * Items filtered by whether they've been fully watched or not.
     * 
     * Only available on the `/account/profile/watched/list` endpoint currently.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completed")
    public Boolean completed;

    public PaginationOptions withCompleted(Boolean completed) {
        this.completed = completed;
        return this;
    }
    
    /**
     * Specific item type filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemType")
    public PaginationOptionsItemTypeEnum itemType;

    public PaginationOptions withItemType(PaginationOptionsItemTypeEnum itemType) {
        this.itemType = itemType;
        return this;
    }
    
    /**
     * The maximum rating (inclusive) of items returned, e.g. 'AUOFLC-PG'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxRating")
    public String maxRating;

    public PaginationOptions withMaxRating(String maxRating) {
        this.maxRating = maxRating;
        return this;
    }
    
    /**
     * The applied sort order if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order")
    public PaginationOptionsOrderEnum order;

    public PaginationOptions withOrder(PaginationOptionsOrderEnum order) {
        this.order = order;
        return this;
    }
    
    /**
     * The applied sort ordering property if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderBy")
    public PaginationOptionsOrderByEnum orderBy;

    public PaginationOptions withOrderBy(PaginationOptionsOrderByEnum orderBy) {
        this.orderBy = orderBy;
        return this;
    }
    
    /**
     * The number of items to return in a list page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageSize")
    public Integer pageSize;

    public PaginationOptions withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    public PaginationOptions(){}
}
