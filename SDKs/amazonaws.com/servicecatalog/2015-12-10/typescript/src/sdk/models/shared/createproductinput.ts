/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProductTypeEnum } from "./producttypeenum";
import { ProvisioningArtifactProperties } from "./provisioningartifactproperties";
import { SourceConnection } from "./sourceconnection";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateProductInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AcceptLanguage" })
  acceptLanguage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Distributor" })
  distributor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdempotencyToken" })
  idempotencyToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Owner" })
  owner: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductType" })
  productType: ProductTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisioningArtifactParameters" })
  @Type(() => ProvisioningArtifactProperties)
  provisioningArtifactParameters?: ProvisioningArtifactProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceConnection" })
  @Type(() => SourceConnection)
  sourceConnection?: SourceConnection;

  @SpeakeasyMetadata()
  @Expose({ name: "SupportDescription" })
  supportDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SupportEmail" })
  supportEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SupportUrl" })
  supportUrl?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
