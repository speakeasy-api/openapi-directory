/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDialogflowCxV3beta1SecuritySettings - Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect.
 */
public class GoogleCloudDialogflowCxV3beta1SecuritySettings {
    /**
     * Settings for exporting audio.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audioExportSettings")
    public GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings audioExportSettings;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withAudioExportSettings(GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings audioExportSettings) {
        this.audioExportSettings = audioExportSettings;
        return this;
    }
    
    /**
     * [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The `DLP De-identify Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, Dialogflow replaces sensitive info with `[redacted]` text. The template name will have one of the following formats: `projects//locations//deidentifyTemplates/` OR `organizations//locations//deidentifyTemplates/` Note: `deidentify_template` must be located in the same region as the `SecuritySettings`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deidentifyTemplate")
    public String deidentifyTemplate;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withDeidentifyTemplate(String deidentifyTemplate) {
        this.deidentifyTemplate = deidentifyTemplate;
        return this;
    }
    
    /**
     * Required. The human-readable name of the security settings, unique within the location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insightsExportSettings")
    public GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings insightsExportSettings;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withInsightsExportSettings(GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings insightsExportSettings) {
        this.insightsExportSettings = insightsExportSettings;
        return this;
    }
    
    /**
     * [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The `DLP Inspect Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects//locations//inspectTemplates/` OR `organizations//locations//inspectTemplates/` Note: `inspect_template` must be located in the same region as the `SecuritySettings`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inspectTemplate")
    public String inspectTemplate;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withInspectTemplate(String inspectTemplate) {
        this.inspectTemplate = inspectTemplate;
        return this;
    }
    
    /**
     * Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * List of types of data to remove when retention settings triggers purge.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purgeDataTypes")
    public GoogleCloudDialogflowCxV3beta1SecuritySettingsPurgeDataTypesEnum[] purgeDataTypes;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withPurgeDataTypes(GoogleCloudDialogflowCxV3beta1SecuritySettingsPurgeDataTypesEnum[] purgeDataTypes) {
        this.purgeDataTypes = purgeDataTypes;
        return this;
    }
    
    /**
     * Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to \u2013 for example, Cloud logging.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redactionScope")
    public GoogleCloudDialogflowCxV3beta1SecuritySettingsRedactionScopeEnum redactionScope;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withRedactionScope(GoogleCloudDialogflowCxV3beta1SecuritySettingsRedactionScopeEnum redactionScope) {
        this.redactionScope = redactionScope;
        return this;
    }
    
    /**
     * Strategy that defines how we do redaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redactionStrategy")
    public GoogleCloudDialogflowCxV3beta1SecuritySettingsRedactionStrategyEnum redactionStrategy;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withRedactionStrategy(GoogleCloudDialogflowCxV3beta1SecuritySettingsRedactionStrategyEnum redactionStrategy) {
        this.redactionStrategy = redactionStrategy;
        return this;
    }
    
    /**
     * Retains data in interaction logging for the specified number of days. This does not apply to Cloud logging, which is owned by the user - not Dialogflow. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retentionWindowDays")
    public Integer retentionWindowDays;
    public GoogleCloudDialogflowCxV3beta1SecuritySettings withRetentionWindowDays(Integer retentionWindowDays) {
        this.retentionWindowDays = retentionWindowDays;
        return this;
    }
    
}
