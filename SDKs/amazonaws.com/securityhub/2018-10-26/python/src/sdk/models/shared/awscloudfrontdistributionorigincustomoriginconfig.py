"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awscloudfrontdistributionoriginsslprotocols as shared_awscloudfrontdistributionoriginsslprotocols
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsCloudFrontDistributionOriginCustomOriginConfig:
    r"""A custom origin. A custom origin is any origin that is not an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is <a href=\\"https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\\">configured with static website hosting</a> is a custom origin."""
    
    http_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpPort'), 'exclude': lambda f: f is None }})  
    https_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpsPort'), 'exclude': lambda f: f is None }})  
    origin_keepalive_timeout: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OriginKeepaliveTimeout'), 'exclude': lambda f: f is None }})  
    origin_protocol_policy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OriginProtocolPolicy'), 'exclude': lambda f: f is None }})  
    origin_read_timeout: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OriginReadTimeout'), 'exclude': lambda f: f is None }})  
    origin_ssl_protocols: Optional[shared_awscloudfrontdistributionoriginsslprotocols.AwsCloudFrontDistributionOriginSslProtocols] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OriginSslProtocols'), 'exclude': lambda f: f is None }})  
    