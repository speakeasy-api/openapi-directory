/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class GoalEventDetailsEventConditions extends SpeakeasyBase {
  /**
   * Type of comparison. Possible values are LESS_THAN, GREATER_THAN or EQUAL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonType" })
  comparisonType?: string;

  /**
   * Value used for this comparison.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonValue" })
  comparisonValue?: string;

  /**
   * Expression used for this match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expression" })
  expression?: string;

  /**
   * Type of the match to be performed. Possible values are REGEXP, BEGINS_WITH, or EXACT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "matchType" })
  matchType?: string;

  /**
   * Type of this event condition. Possible values are CATEGORY, ACTION, LABEL, or VALUE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Details for the goal of the type EVENT.
 */
export class GoalEventDetails extends SpeakeasyBase {
  /**
   * List of event conditions.
   */
  @SpeakeasyMetadata({ elemType: GoalEventDetailsEventConditions })
  @Expose({ name: "eventConditions" })
  @Type(() => GoalEventDetailsEventConditions)
  eventConditions?: GoalEventDetailsEventConditions[];

  /**
   * Determines if the event value should be used as the value for this goal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useEventValue" })
  useEventValue?: boolean;
}

/**
 * Parent link for a goal. Points to the view (profile) to which this goal belongs.
 */
export class GoalParentLink extends SpeakeasyBase {
  /**
   * Link to the view (profile) to which this goal belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * Value is "analytics#profile".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class GoalUrlDestinationDetailsSteps extends SpeakeasyBase {
  /**
   * Step name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Step number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: number;

  /**
   * URL for this step.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Details for the goal of the type URL_DESTINATION.
 */
export class GoalUrlDestinationDetails extends SpeakeasyBase {
  /**
   * Determines if the goal URL must exactly match the capitalization of visited URLs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caseSensitive" })
  caseSensitive?: boolean;

  /**
   * Determines if the first step in this goal is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstStepRequired" })
  firstStepRequired?: boolean;

  /**
   * Match type for the goal URL. Possible values are HEAD, EXACT, or REGEX.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "matchType" })
  matchType?: string;

  /**
   * List of steps configured for this goal funnel.
   */
  @SpeakeasyMetadata({ elemType: GoalUrlDestinationDetailsSteps })
  @Expose({ name: "steps" })
  @Type(() => GoalUrlDestinationDetailsSteps)
  steps?: GoalUrlDestinationDetailsSteps[];

  /**
   * URL for this goal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Details for the goal of the type VISIT_NUM_PAGES.
 */
export class GoalVisitNumPagesDetails extends SpeakeasyBase {
  /**
   * Type of comparison. Possible values are LESS_THAN, GREATER_THAN, or EQUAL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonType" })
  comparisonType?: string;

  /**
   * Value used for this comparison.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonValue" })
  comparisonValue?: string;
}

/**
 * Details for the goal of the type VISIT_TIME_ON_SITE.
 */
export class GoalVisitTimeOnSiteDetails extends SpeakeasyBase {
  /**
   * Type of comparison. Possible values are LESS_THAN or GREATER_THAN.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonType" })
  comparisonType?: string;

  /**
   * Value used for this comparison.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonValue" })
  comparisonValue?: string;
}

/**
 * JSON template for Analytics goal resource.
 */
export class Goal extends SpeakeasyBase {
  /**
   * Account ID to which this goal belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Determines whether this goal is active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Time this goal was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Details for the goal of the type EVENT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventDetails" })
  @Type(() => GoalEventDetails)
  eventDetails?: GoalEventDetails;

  /**
   * Goal ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Internal ID for the web property to which this goal belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "internalWebPropertyId" })
  internalWebPropertyId?: string;

  /**
   * Resource type for an Analytics goal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Goal name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Parent link for a goal. Points to the view (profile) to which this goal belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentLink" })
  @Type(() => GoalParentLink)
  parentLink?: GoalParentLink;

  /**
   * View (Profile) ID to which this goal belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileId" })
  profileId?: string;

  /**
   * Link for this goal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Goal type. Possible values are URL_DESTINATION, VISIT_TIME_ON_SITE, VISIT_NUM_PAGES, AND EVENT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Time this goal was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;

  /**
   * Details for the goal of the type URL_DESTINATION.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "urlDestinationDetails" })
  @Type(() => GoalUrlDestinationDetails)
  urlDestinationDetails?: GoalUrlDestinationDetails;

  /**
   * Goal value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;

  /**
   * Details for the goal of the type VISIT_NUM_PAGES.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visitNumPagesDetails" })
  @Type(() => GoalVisitNumPagesDetails)
  visitNumPagesDetails?: GoalVisitNumPagesDetails;

  /**
   * Details for the goal of the type VISIT_TIME_ON_SITE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visitTimeOnSiteDetails" })
  @Type(() => GoalVisitTimeOnSiteDetails)
  visitTimeOnSiteDetails?: GoalVisitTimeOnSiteDetails;

  /**
   * Web property ID to which this goal belongs. The web property ID is of the form UA-XXXXX-YY.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webPropertyId" })
  webPropertyId?: string;
}
