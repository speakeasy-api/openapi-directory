// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListRepositorySyncDefinitionsQueryParams struct {
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

// ListRepositorySyncDefinitionsXAmzTargetEnum
type ListRepositorySyncDefinitionsXAmzTargetEnum string

const (
	ListRepositorySyncDefinitionsXAmzTargetEnumAwsProton20200720ListRepositorySyncDefinitions ListRepositorySyncDefinitionsXAmzTargetEnum = "AwsProton20200720.ListRepositorySyncDefinitions"
)

func (e *ListRepositorySyncDefinitionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AwsProton20200720.ListRepositorySyncDefinitions":
		*e = ListRepositorySyncDefinitionsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRepositorySyncDefinitionsXAmzTargetEnum: %s", s)
	}
}

type ListRepositorySyncDefinitionsHeaders struct {
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListRepositorySyncDefinitionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListRepositorySyncDefinitionsRequest struct {
	QueryParams ListRepositorySyncDefinitionsQueryParams
	Headers     ListRepositorySyncDefinitionsHeaders
	Request     shared.ListRepositorySyncDefinitionsInput `request:"mediaType=application/json"`
}

type ListRepositorySyncDefinitionsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListRepositorySyncDefinitionsOutput *shared.ListRepositorySyncDefinitionsOutput
	StatusCode                          int
	RawResponse                         *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
