// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ModelCardProcessingStatusEnum string

const (
	ModelCardProcessingStatusEnumDeleteInProgress  ModelCardProcessingStatusEnum = "DeleteInProgress"
	ModelCardProcessingStatusEnumDeletePending     ModelCardProcessingStatusEnum = "DeletePending"
	ModelCardProcessingStatusEnumContentDeleted    ModelCardProcessingStatusEnum = "ContentDeleted"
	ModelCardProcessingStatusEnumExportJobsDeleted ModelCardProcessingStatusEnum = "ExportJobsDeleted"
	ModelCardProcessingStatusEnumDeleteCompleted   ModelCardProcessingStatusEnum = "DeleteCompleted"
	ModelCardProcessingStatusEnumDeleteFailed      ModelCardProcessingStatusEnum = "DeleteFailed"
)

func (e ModelCardProcessingStatusEnum) ToPointer() *ModelCardProcessingStatusEnum {
	return &e
}

func (e *ModelCardProcessingStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteInProgress":
		fallthrough
	case "DeletePending":
		fallthrough
	case "ContentDeleted":
		fallthrough
	case "ExportJobsDeleted":
		fallthrough
	case "DeleteCompleted":
		fallthrough
	case "DeleteFailed":
		*e = ModelCardProcessingStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelCardProcessingStatusEnum: %v", v)
	}
}
