/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The states of the listed Reserved Instances.
 */
export enum CancelReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum {
  Available = "available",
  Sold = "sold",
  Cancelled = "cancelled",
  Pending = "pending",
}

/**
 * Describes a Reserved Instance listing state.
 */
export class CancelReservedInstancesListingResultReservedInstancesListingsInstanceCounts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instanceCount?: number;

  @SpeakeasyMetadata()
  state?: CancelReservedInstancesListingResultReservedInstancesListingsInstanceCountsStateEnum;
}

/**
 * The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.
 */
export enum CancelReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum {
  Usd = "USD",
}

/**
 * Describes the price for a Reserved Instance.
 */
export class CancelReservedInstancesListingResultReservedInstancesListingsPriceSchedules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  active?: boolean;

  @SpeakeasyMetadata()
  currencyCode?: CancelReservedInstancesListingResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum;

  @SpeakeasyMetadata()
  price?: number;

  @SpeakeasyMetadata()
  term?: number;
}

/**
 * The status of the Reserved Instance listing.
 */
export enum CancelReservedInstancesListingResultReservedInstancesListingsStatusEnum {
  Active = "active",
  Pending = "pending",
  Cancelled = "cancelled",
  Closed = "closed",
}

/**
 * Describes a tag.
 */
export class CancelReservedInstancesListingResultReservedInstancesListingsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a Reserved Instance listing.
 */
export class CancelReservedInstancesListingResultReservedInstancesListings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  clientToken?: string;

  @SpeakeasyMetadata()
  createDate?: Date;

  @SpeakeasyMetadata({
    elemType:
      CancelReservedInstancesListingResultReservedInstancesListingsInstanceCounts,
  })
  instanceCounts?: CancelReservedInstancesListingResultReservedInstancesListingsInstanceCounts[];

  @SpeakeasyMetadata({
    elemType:
      CancelReservedInstancesListingResultReservedInstancesListingsPriceSchedules,
  })
  priceSchedules?: CancelReservedInstancesListingResultReservedInstancesListingsPriceSchedules[];

  @SpeakeasyMetadata()
  reservedInstancesId?: string;

  @SpeakeasyMetadata()
  reservedInstancesListingId?: string;

  @SpeakeasyMetadata()
  status?: CancelReservedInstancesListingResultReservedInstancesListingsStatusEnum;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata({
    elemType: CancelReservedInstancesListingResultReservedInstancesListingsTags,
  })
  tags?: CancelReservedInstancesListingResultReservedInstancesListingsTags[];

  @SpeakeasyMetadata()
  updateDate?: Date;
}

/**
 * Contains the output of CancelReservedInstancesListing.
 */
export class CancelReservedInstancesListingResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: CancelReservedInstancesListingResultReservedInstancesListings,
  })
  reservedInstancesListings?: CancelReservedInstancesListingResultReservedInstancesListings[];
}
