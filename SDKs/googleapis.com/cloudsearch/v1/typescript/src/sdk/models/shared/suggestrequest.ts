/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataSourceRestriction } from "./datasourcerestriction";
import { RequestOptions } from "./requestoptions";
import { Expose, Type } from "class-transformer";

/**
 * Request of suggest API.
 */
export class SuggestRequest extends SpeakeasyBase {
  /**
   * The sources to use for suggestions. If not specified, the data sources are taken from the current search application. NOTE: Suggestions are only supported for the following sources: * Third-party data sources * PredefinedSource.PERSON * PredefinedSource.GOOGLE_DRIVE
   */
  @SpeakeasyMetadata({ elemType: DataSourceRestriction })
  @Expose({ name: "dataSourceRestrictions" })
  @Type(() => DataSourceRestriction)
  dataSourceRestrictions?: DataSourceRestriction[];

  /**
   * Partial query for which autocomplete suggestions will be shown. For example, if the query is "sea", then the server might return "season", "search", "seagull" and so on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  query?: string;

  /**
   * Shared request options for all RPC methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestOptions" })
  @Type(() => RequestOptions)
  requestOptions?: RequestOptions;
}
