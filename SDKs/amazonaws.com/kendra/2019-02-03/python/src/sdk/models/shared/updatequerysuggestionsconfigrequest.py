"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import mode_enum as shared_mode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateQuerySuggestionsConfigRequest:
    
    index_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IndexId') }})  
    include_queries_without_user_information: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IncludeQueriesWithoutUserInformation'), 'exclude': lambda f: f is None }})  
    minimum_number_of_querying_users: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinimumNumberOfQueryingUsers'), 'exclude': lambda f: f is None }})  
    minimum_query_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinimumQueryCount'), 'exclude': lambda f: f is None }})  
    mode: Optional[shared_mode_enum.ModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Mode'), 'exclude': lambda f: f is None }})  
    query_log_look_back_window_in_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryLogLookBackWindowInDays'), 'exclude': lambda f: f is None }})  
    