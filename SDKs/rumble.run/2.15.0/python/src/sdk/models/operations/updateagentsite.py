"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import agent as shared_agent
from ..shared import agentsiteid as shared_agentsiteid
from typing import Optional


@dataclasses.dataclass
class UpdateAgentSiteSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class UpdateAgentSiteRequest:
    
    agent_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'agent_id', 'style': 'simple', 'explode': False }})
    r"""UUID of the agent to update"""  
    agent_site_id: shared_agentsiteid.AgentSiteID = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""site_id to associate with the agent"""  
    

@dataclasses.dataclass
class UpdateAgentSiteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    agent: Optional[shared_agent.Agent] = dataclasses.field(default=None)
    r"""agent details"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    