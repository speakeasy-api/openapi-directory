/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDeleteIdentityPolicyRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDeleteIdentityPolicyActionEnum action;

    public GETDeleteIdentityPolicyRequest withAction(GETDeleteIdentityPolicyActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;The identity that is associated with the policy that you want to delete. You can specify the identity by using its name or by using its Amazon Resource Name (ARN). Examples: &lt;code&gt;user@example.com&lt;/code&gt;, &lt;code&gt;example.com&lt;/code&gt;, &lt;code&gt;arn:aws:ses:us-east-1:123456789012:identity/example.com&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To successfully call this API, you must own the identity.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Identity")
    public String identity;

    public GETDeleteIdentityPolicyRequest withIdentity(String identity) {
        this.identity = identity;
        return this;
    }
    
    /**
     * The name of the policy to be deleted.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PolicyName")
    public String policyName;

    public GETDeleteIdentityPolicyRequest withPolicyName(String policyName) {
        this.policyName = policyName;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDeleteIdentityPolicyVersionEnum version;

    public GETDeleteIdentityPolicyRequest withVersion(GETDeleteIdentityPolicyVersionEnum version) {
        this.version = version;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;

    public GETDeleteIdentityPolicyRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;

    public GETDeleteIdentityPolicyRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;

    public GETDeleteIdentityPolicyRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;

    public GETDeleteIdentityPolicyRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;

    public GETDeleteIdentityPolicyRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;

    public GETDeleteIdentityPolicyRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;

    public GETDeleteIdentityPolicyRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    public GETDeleteIdentityPolicyRequest(@JsonProperty("Action") GETDeleteIdentityPolicyActionEnum action, @JsonProperty("Identity") String identity, @JsonProperty("PolicyName") String policyName, @JsonProperty("Version") GETDeleteIdentityPolicyVersionEnum version) {
        this.action = action;
        this.identity = identity;
        this.policyName = policyName;
        this.version = version;
  }
}
