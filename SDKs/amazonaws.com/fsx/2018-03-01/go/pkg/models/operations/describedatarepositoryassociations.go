// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeDataRepositoryAssociationsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// DescribeDataRepositoryAssociationsXAmzTargetEnum
type DescribeDataRepositoryAssociationsXAmzTargetEnum string

const (
	DescribeDataRepositoryAssociationsXAmzTargetEnumAwsSimbaAPIServiceV20180301DescribeDataRepositoryAssociations DescribeDataRepositoryAssociationsXAmzTargetEnum = "AWSSimbaAPIService_v20180301.DescribeDataRepositoryAssociations"
)

func (e *DescribeDataRepositoryAssociationsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSSimbaAPIService_v20180301.DescribeDataRepositoryAssociations":
		*e = DescribeDataRepositoryAssociationsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeDataRepositoryAssociationsXAmzTargetEnum: %s", s)
	}
}

type DescribeDataRepositoryAssociationsHeaders struct {
	XAmzAlgorithm     *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeDataRepositoryAssociationsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeDataRepositoryAssociationsRequest struct {
	QueryParams DescribeDataRepositoryAssociationsQueryParams
	Headers     DescribeDataRepositoryAssociationsHeaders
	Request     shared.DescribeDataRepositoryAssociationsRequest `request:"mediaType=application/json"`
}

type DescribeDataRepositoryAssociationsResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// DataRepositoryAssociationNotFound
	DataRepositoryAssociationNotFound interface{}
	// Success
	DescribeDataRepositoryAssociationsResponse *shared.DescribeDataRepositoryAssociationsResponse
	// FileSystemNotFound
	FileSystemNotFound interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidDataRepositoryType
	InvalidDataRepositoryType interface{}
	StatusCode                int
	RawResponse               *http.Response
}
