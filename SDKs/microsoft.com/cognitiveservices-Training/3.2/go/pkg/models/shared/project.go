// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ProjectStatusEnum - Gets the status of the project.
type ProjectStatusEnum string

const (
	ProjectStatusEnumSucceeded ProjectStatusEnum = "Succeeded"
	ProjectStatusEnumImporting ProjectStatusEnum = "Importing"
	ProjectStatusEnumFailed    ProjectStatusEnum = "Failed"
)

func (e ProjectStatusEnum) ToPointer() *ProjectStatusEnum {
	return &e
}

func (e *ProjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Succeeded":
		fallthrough
	case "Importing":
		fallthrough
	case "Failed":
		*e = ProjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectStatusEnum: %v", v)
	}
}

// ProjectInput - Represents a project.
type ProjectInput struct {
	// Gets or sets the description of the project.
	Description string `json:"description" form:"name=description"`
	// Gets or sets the name of the project.
	Name string `json:"name" form:"name=name"`
	// Represents settings associated with a project.
	Settings ProjectSettingsInput `json:"settings" form:"name=settings,json"`
	// Gets the status of the project.
	Status *ProjectStatusEnum `json:"status,omitempty" form:"name=status"`
}

// Project - Represents a project.
type Project struct {
	// Gets the date this project was created.
	Created *time.Time `json:"created,omitempty"`
	// Gets or sets the description of the project.
	Description string `json:"description"`
	// Gets if the Disaster Recovery (DR) mode is on, indicating the project is temporarily read-only.
	DrModeEnabled *bool `json:"drModeEnabled,omitempty"`
	// Gets the project id.
	ID *string `json:"id,omitempty"`
	// Gets the date this project was last modified.
	LastModified *time.Time `json:"lastModified,omitempty"`
	// Gets or sets the name of the project.
	Name string `json:"name"`
	// Represents settings associated with a project.
	Settings ProjectSettings `json:"settings"`
	// Gets the status of the project.
	Status *ProjectStatusEnum `json:"status,omitempty"`
	// Gets the thumbnail url representing the image.
	ThumbnailURI *string `json:"thumbnailUri,omitempty"`
}
