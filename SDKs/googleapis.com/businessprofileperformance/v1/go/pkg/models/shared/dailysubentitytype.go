// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DailySubEntityTypeDayOfWeekEnum - Represents the day of the week. Eg: MONDAY.
type DailySubEntityTypeDayOfWeekEnum string

const (
	DailySubEntityTypeDayOfWeekEnumDayOfWeekUnspecified DailySubEntityTypeDayOfWeekEnum = "DAY_OF_WEEK_UNSPECIFIED"
	DailySubEntityTypeDayOfWeekEnumMonday               DailySubEntityTypeDayOfWeekEnum = "MONDAY"
	DailySubEntityTypeDayOfWeekEnumTuesday              DailySubEntityTypeDayOfWeekEnum = "TUESDAY"
	DailySubEntityTypeDayOfWeekEnumWednesday            DailySubEntityTypeDayOfWeekEnum = "WEDNESDAY"
	DailySubEntityTypeDayOfWeekEnumThursday             DailySubEntityTypeDayOfWeekEnum = "THURSDAY"
	DailySubEntityTypeDayOfWeekEnumFriday               DailySubEntityTypeDayOfWeekEnum = "FRIDAY"
	DailySubEntityTypeDayOfWeekEnumSaturday             DailySubEntityTypeDayOfWeekEnum = "SATURDAY"
	DailySubEntityTypeDayOfWeekEnumSunday               DailySubEntityTypeDayOfWeekEnum = "SUNDAY"
)

func (e *DailySubEntityTypeDayOfWeekEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DAY_OF_WEEK_UNSPECIFIED":
		fallthrough
	case "MONDAY":
		fallthrough
	case "TUESDAY":
		fallthrough
	case "WEDNESDAY":
		fallthrough
	case "THURSDAY":
		fallthrough
	case "FRIDAY":
		fallthrough
	case "SATURDAY":
		fallthrough
	case "SUNDAY":
		*e = DailySubEntityTypeDayOfWeekEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DailySubEntityTypeDayOfWeekEnum: %s", s)
	}
}

// DailySubEntityType - Represents all possible subentity types that are associated with DailyMetrics.
type DailySubEntityType struct {
	// Represents the day of the week. Eg: MONDAY.
	DayOfWeek *DailySubEntityTypeDayOfWeekEnum `json:"dayOfWeek,omitempty"`
	// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
	TimeOfDay *TimeOfDay `json:"timeOfDay,omitempty"`
}
