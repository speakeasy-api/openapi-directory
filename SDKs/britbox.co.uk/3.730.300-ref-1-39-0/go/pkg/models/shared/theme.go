// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ThemeTypeEnum - The type of theme.
type ThemeTypeEnum string

const (
	ThemeTypeEnumBackground ThemeTypeEnum = "Background"
	ThemeTypeEnumText       ThemeTypeEnum = "Text"
	ThemeTypeEnumCustom     ThemeTypeEnum = "Custom"
)

func (e ThemeTypeEnum) ToPointer() *ThemeTypeEnum {
	return &e
}

func (e *ThemeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Background":
		fallthrough
	case "Text":
		fallthrough
	case "Custom":
		*e = ThemeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThemeTypeEnum: %v", v)
	}
}

type Theme struct {
	// The list of colors defined for the theme.
	Colors []ThemeColor `json:"colors"`
	// The type of theme.
	Type ThemeTypeEnum `json:"type"`
}
