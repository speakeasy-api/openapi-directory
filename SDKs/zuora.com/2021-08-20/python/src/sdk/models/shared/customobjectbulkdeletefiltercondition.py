"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any

class CustomObjectBulkDeleteFilterConditionOperatorEnum(str, Enum):
    EQ = 'EQ'
    GT = 'GT'
    LT = 'LT'
    GE = 'GE'
    LE = 'LE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomObjectBulkDeleteFilterCondition:
    r"""Condition evaluated on a single object field"""
    
    field: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field') }})
    r"""The object field that is evaluated. Only filterable fields can be evaluated in the filter."""  
    operator: CustomObjectBulkDeleteFilterConditionOperatorEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operator') }})  
    value: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""The value that the filterable `field` is evaluated against in the filter. The data type of `value` is consistent with that of the `field`."""  
    