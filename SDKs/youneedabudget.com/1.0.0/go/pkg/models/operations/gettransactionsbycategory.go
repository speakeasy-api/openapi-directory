// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

// GetTransactionsByCategoryTypeEnum - If specified, only transactions of the specified type will be included. "uncategorized" and "unapproved" are currently supported.
type GetTransactionsByCategoryTypeEnum string

const (
	GetTransactionsByCategoryTypeEnumUncategorized GetTransactionsByCategoryTypeEnum = "uncategorized"
	GetTransactionsByCategoryTypeEnumUnapproved    GetTransactionsByCategoryTypeEnum = "unapproved"
)

func (e *GetTransactionsByCategoryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "uncategorized":
		fallthrough
	case "unapproved":
		*e = GetTransactionsByCategoryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransactionsByCategoryTypeEnum: %s", s)
	}
}

type GetTransactionsByCategoryRequest struct {
	// The id of the budget. "last-used" can be used to specify the last used budget and "default" can be used if default budget selection is enabled (see: https://api.youneedabudget.com/#oauth-default-budget).
	BudgetID string `pathParam:"style=simple,explode=false,name=budget_id"`
	// The id of the category
	CategoryID string `pathParam:"style=simple,explode=false,name=category_id"`
	// The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included.
	LastKnowledgeOfServer *int64 `queryParam:"style=form,explode=true,name=last_knowledge_of_server"`
	// If specified, only transactions on or after this date will be included.  The date should be ISO formatted (e.g. 2016-12-30).
	SinceDate *types.Date `queryParam:"style=form,explode=true,name=since_date"`
	// If specified, only transactions of the specified type will be included. "uncategorized" and "unapproved" are currently supported.
	Type *GetTransactionsByCategoryTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type GetTransactionsByCategoryResponse struct {
	ContentType string
	// No transactions were found
	ErrorResponse *shared.ErrorResponse
	// The list of requested transactions
	HybridTransactionsResponse *shared.HybridTransactionsResponse
	StatusCode                 int
	RawResponse                *http.Response
}
