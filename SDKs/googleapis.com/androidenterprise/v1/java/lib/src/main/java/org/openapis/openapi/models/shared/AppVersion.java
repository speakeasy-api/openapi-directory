/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AppVersion - This represents a single version of the app.
 */
public class AppVersion {
    /**
     * True if this version is a production APK.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isProduction")
    public Boolean isProduction;
    public AppVersion withIsProduction(Boolean isProduction) {
        this.isProduction = isProduction;
        return this;
    }
    
    /**
     * Deprecated, use trackId instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("track")
    public AppVersionTrackEnum track;
    public AppVersion withTrack(AppVersionTrackEnum track) {
        this.track = track;
        return this;
    }
    
    /**
     * Track ids that the app version is published in. Replaces the track field (deprecated), but doesn't include the production track (see isProduction instead).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackId")
    public String[] trackId;
    public AppVersion withTrackId(String[] trackId) {
        this.trackId = trackId;
        return this;
    }
    
    /**
     * Unique increasing identifier for the app version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionCode")
    public Integer versionCode;
    public AppVersion withVersionCode(Integer versionCode) {
        this.versionCode = versionCode;
        return this;
    }
    
    /**
     * The string used in the Play store by the app developer to identify the version. The string is not necessarily unique or localized (for example, the string could be "1.4").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionString")
    public String versionString;
    public AppVersion withVersionString(String versionString) {
        this.versionString = versionString;
        return this;
    }
    
}
