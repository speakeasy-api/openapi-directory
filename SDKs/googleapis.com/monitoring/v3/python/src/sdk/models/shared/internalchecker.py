"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InternalCheckerStateEnum(str, Enum):
    r"""The current operational state of the internal checker."""
    UNSPECIFIED = 'UNSPECIFIED'
    CREATING = 'CREATING'
    RUNNING = 'RUNNING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InternalChecker:
    r"""An internal checker allows Uptime checks to run on private/internal GCP resources."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The checker's human-readable name. The display name should be unique within a Cloud Monitoring Metrics Scope in order to make it easier to identify; however, uniqueness is not enforced."""  
    gcp_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcpZone'), 'exclude': lambda f: f is None }})
    r"""The GCP zone the Uptime check should egress from. Only respected for internal Uptime checks, where internal_network is specified."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""A unique resource name for this InternalChecker. The format is: projects/[PROJECT_ID_OR_NUMBER]/internalCheckers/[INTERNAL_CHECKER_ID] [PROJECT_ID_OR_NUMBER] is the Cloud Monitoring Metrics Scope project for the Uptime check config associated with the internal checker."""  
    network: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network'), 'exclude': lambda f: f is None }})
    r"""The GCP VPC network (https://cloud.google.com/vpc/docs/vpc) where the internal resource lives (ex: \\"default\\")."""  
    peer_project_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('peerProjectId'), 'exclude': lambda f: f is None }})
    r"""The GCP project ID where the internal checker lives. Not necessary the same as the Metrics Scope project."""  
    state: Optional[InternalCheckerStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The current operational state of the internal checker."""  
    