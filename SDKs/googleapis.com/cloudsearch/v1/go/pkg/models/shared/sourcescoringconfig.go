// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SourceScoringConfigSourceImportanceEnum - Importance of the source.
type SourceScoringConfigSourceImportanceEnum string

const (
	SourceScoringConfigSourceImportanceEnumDefault SourceScoringConfigSourceImportanceEnum = "DEFAULT"
	SourceScoringConfigSourceImportanceEnumLow     SourceScoringConfigSourceImportanceEnum = "LOW"
	SourceScoringConfigSourceImportanceEnumHigh    SourceScoringConfigSourceImportanceEnum = "HIGH"
)

func (e *SourceScoringConfigSourceImportanceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEFAULT":
		fallthrough
	case "LOW":
		fallthrough
	case "HIGH":
		*e = SourceScoringConfigSourceImportanceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceScoringConfigSourceImportanceEnum: %s", s)
	}
}

// SourceScoringConfig - Set the scoring configuration. This allows modifying the ranking of results for a source.
type SourceScoringConfig struct {
	// Importance of the source.
	SourceImportance *SourceScoringConfigSourceImportanceEnum `json:"sourceImportance,omitempty"`
}
