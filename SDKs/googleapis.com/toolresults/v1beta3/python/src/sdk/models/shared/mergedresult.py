"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import outcome as shared_outcome
from ..shared import testsuiteoverview as shared_testsuiteoverview
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MergedResultStateEnum(str, Enum):
    r"""State of the resource"""
    UNKNOWN_STATE = 'unknownState'
    PENDING = 'pending'
    IN_PROGRESS = 'inProgress'
    COMPLETE = 'complete'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MergedResult:
    r"""Merged test result for environment. If the environment has only one step (no reruns or shards), then the merged result is the same as the step result. If the environment has multiple shards and/or reruns, then the results of shards and reruns that belong to the same environment are merged into one environment result."""
    
    outcome: Optional[shared_outcome.Outcome] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outcome'), 'exclude': lambda f: f is None }})
    r"""Interprets a result so that humans and machines can act on it."""  
    state: Optional[MergedResultStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""State of the resource"""  
    test_suite_overviews: Optional[list[shared_testsuiteoverview.TestSuiteOverview]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testSuiteOverviews'), 'exclude': lambda f: f is None }})
    r"""The combined and rolled-up result of each test suite that was run as part of this environment. Combining: When the test cases from a suite are run in different steps (sharding), the results are added back together in one overview. (e.g., if shard1 has 2 failures and shard2 has 1 failure than the overview failure_count = 3). Rollup: When test cases from the same suite are run multiple times (flaky), the results are combined (e.g., if testcase1.run1 fails, testcase1.run2 passes, and both testcase2.run1 and testcase2.run2 fail then the overview flaky_count = 1 and failure_count = 1)."""  
    