<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleChromeManagementV1BatteryInfo - Information about the battery. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDevicePowerStatus](https://chromeenterprise.google/policies/#ReportDevicePowerStatus) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleChromeManagementV1BatteryInfo
{
    /**
     * Output only. Design capacity (mAmpere-hours).
     * 
     * @var ?string $designCapacity
     */
	#[\JMS\Serializer\Annotation\SerializedName('designCapacity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $designCapacity = null;
    
    /**
     * Output only. Designed minimum output voltage (mV)
     * 
     * @var ?int $designMinVoltage
     */
	#[\JMS\Serializer\Annotation\SerializedName('designMinVoltage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $designMinVoltage = null;
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleTypeDate $manufactureDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('manufactureDate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleTypeDate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleTypeDate $manufactureDate = null;
    
    /**
     * Output only. Battery manufacturer.
     * 
     * @var ?string $manufacturer
     */
	#[\JMS\Serializer\Annotation\SerializedName('manufacturer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $manufacturer = null;
    
    /**
     * Output only. Battery serial number.
     * 
     * @var ?string $serialNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('serialNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serialNumber = null;
    
    /**
     * Output only. Technology of the battery. Example: Li-ion
     * 
     * @var ?string $technology
     */
	#[\JMS\Serializer\Annotation\SerializedName('technology')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $technology = null;
    
	public function __construct()
	{
		$this->designCapacity = null;
		$this->designMinVoltage = null;
		$this->manufactureDate = null;
		$this->manufacturer = null;
		$this->serialNumber = null;
		$this->technology = null;
	}
}
