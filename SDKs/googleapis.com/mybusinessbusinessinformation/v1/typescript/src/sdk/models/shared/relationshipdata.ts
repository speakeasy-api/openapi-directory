/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RelevantLocation } from "./relevantlocation";
import { Expose, Type } from "class-transformer";

/**
 * Information of all parent and children locations related to this one.
 */
export class RelationshipData extends SpeakeasyBase {
  /**
   * The list of children locations that this location has relations with.
   */
  @SpeakeasyMetadata({ elemType: RelevantLocation })
  @Expose({ name: "childrenLocations" })
  @Type(() => RelevantLocation)
  childrenLocations?: RelevantLocation[];

  /**
   * The resource name of the Chain that this location is member of. How to find Chain ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentChain" })
  parentChain?: string;

  /**
   * Information about another location that is related to current one. The relation can be any one of DEPARTMENT_OF or INDEPENDENT_ESTABLISHMENT_OF, and the location specified here can be on either side (parent/child) of the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentLocation" })
  @Type(() => RelevantLocation)
  parentLocation?: RelevantLocation;
}
