// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AnnotationTypeEnum - The type of this annotation.
type AnnotationTypeEnum string

const (
	AnnotationTypeEnumAnnotationTypeUnspecified AnnotationTypeEnum = "ANNOTATION_TYPE_UNSPECIFIED"
	AnnotationTypeEnumUserMention               AnnotationTypeEnum = "USER_MENTION"
	AnnotationTypeEnumSlashCommand              AnnotationTypeEnum = "SLASH_COMMAND"
)

func (e AnnotationTypeEnum) ToPointer() *AnnotationTypeEnum {
	return &e
}

func (e *AnnotationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANNOTATION_TYPE_UNSPECIFIED":
		fallthrough
	case "USER_MENTION":
		fallthrough
	case "SLASH_COMMAND":
		*e = AnnotationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnnotationTypeEnum: %v", v)
	}
}

// Annotation - Annotations associated with the plain-text body of the message. Example plain-text message body: ``` Hello @FooBot how are you!" ``` The corresponding annotations metadata: ``` "annotations":[{ "type":"USER_MENTION", "startIndex":6, "length":7, "userMention": { "user": { "name":"users/{user}", "displayName":"FooBot", "avatarUrl":"https://goo.gl/aeDtrS", "type":"BOT" }, "type":"MENTION" } }] ```
type Annotation struct {
	// Length of the substring in the plain-text message body this annotation corresponds to.
	Length *int `json:"length,omitempty"`
	// Annotation metadata for slash commands (/).
	SlashCommand *SlashCommandMetadata `json:"slashCommand,omitempty"`
	// Start index (0-based, inclusive) in the plain-text message body this annotation corresponds to.
	StartIndex *int `json:"startIndex,omitempty"`
	// The type of this annotation.
	Type *AnnotationTypeEnum `json:"type,omitempty"`
	// Annotation metadata for user mentions (@).
	UserMention *UserMentionMetadata `json:"userMention,omitempty"`
}
