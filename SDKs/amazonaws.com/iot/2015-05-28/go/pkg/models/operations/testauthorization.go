// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type TestAuthorizationQueryParams struct {
	// The MQTT client ID.
	ClientID *string `queryParam:"style=form,explode=true,name=clientId"`
}

type TestAuthorizationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type TestAuthorizationRequestBody struct {
	// A list of authorization info objects. Simulating authorization will create a response for each <code>authInfo</code> object in the list.
	AuthInfos []shared.AuthInfo `json:"authInfos"`
	// The Cognito identity pool ID.
	CognitoIdentityPoolID *string `json:"cognitoIdentityPoolId,omitempty"`
	// When testing custom authorization, the policies specified here are treated as if they are attached to the principal being authorized.
	PolicyNamesToAdd []string `json:"policyNamesToAdd,omitempty"`
	// When testing custom authorization, the policies specified here are treated as if they are not attached to the principal being authorized.
	PolicyNamesToSkip []string `json:"policyNamesToSkip,omitempty"`
	// The principal. Valid principals are CertificateArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:cert/<i>certificateId</i>), thingGroupArn (arn:aws:iot:<i>region</i>:<i>accountId</i>:thinggroup/<i>groupName</i>) and CognitoId (<i>region</i>:<i>id</i>).
	Principal *string `json:"principal,omitempty"`
}

type TestAuthorizationRequest struct {
	QueryParams TestAuthorizationQueryParams
	Headers     TestAuthorizationHeaders
	Request     TestAuthorizationRequestBody `request:"mediaType=application/json"`
}

type TestAuthorizationResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// Success
	TestAuthorizationResponse *shared.TestAuthorizationResponse
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
