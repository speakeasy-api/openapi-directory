"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import histogrambucket as shared_histogrambucket
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Float64Stats:
    r"""The data statistics of a series of FLOAT64 values."""
    
    histogram_buckets: Optional[list[shared_histogrambucket.HistogramBucket]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('histogramBuckets'), 'exclude': lambda f: f is None }})
    r"""Histogram buckets of the data series. Sorted by the min value of the bucket, ascendingly, and the number of the buckets is dynamically generated. The buckets are non-overlapping and completely cover whole FLOAT64 range with min of first bucket being `\\"-Infinity\\"`, and max of the last one being `\\"Infinity\\"`."""  
    mean: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mean'), 'exclude': lambda f: f is None }})
    r"""The mean of the series."""  
    quantiles: Optional[list[float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantiles'), 'exclude': lambda f: f is None }})
    r"""Ordered from 0 to k k-quantile values of the data series of n values. The value at index i is, approximately, the i*n/k-th smallest value in the series; for i = 0 and i = k these are, respectively, the min and max values."""  
    standard_deviation: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('standardDeviation'), 'exclude': lambda f: f is None }})
    r"""The standard deviation of the series."""  
    