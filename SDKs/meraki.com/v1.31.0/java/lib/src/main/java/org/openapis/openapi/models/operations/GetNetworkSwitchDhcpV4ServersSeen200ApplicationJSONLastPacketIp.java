/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp - Additional IP attributes of the packet.
 */
public class GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp {
    /**
     * DSCP attributes of the packet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dscp")
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIpDscp dscp;
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp withDscp(GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIpDscp dscp) {
        this.dscp = dscp;
        return this;
    }
    
    /**
     * IP header length of the packet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headerLength")
    public Long headerLength;
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp withHeaderLength(Long headerLength) {
        this.headerLength = headerLength;
        return this;
    }
    
    /**
     * IP ID of the packet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * IP length of the packet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("length")
    public Long length;
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp withLength(Long length) {
        this.length = length;
        return this;
    }
    
    /**
     * IP protocol number of the packet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public Long protocol;
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp withProtocol(Long protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * Time to live of the packet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ttl")
    public Long ttl;
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp withTtl(Long ttl) {
        this.ttl = ttl;
        return this;
    }
    
    /**
     * IP version of the packet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIpVersionEnum version;
    public GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIp withVersion(GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacketIpVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
