"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TerminalOrdersCompanyLevel = void 0;
var utils = __importStar(require("../internal/utils"));
var operations = __importStar(require("./models/operations"));
var shared = __importStar(require("./models/shared"));
var TerminalOrdersCompanyLevel = /** @class */ (function () {
    function TerminalOrdersCompanyLevel(defaultClient, securityClient, serverURL, language, sdkVersion, genVersion) {
        this._defaultClient = defaultClient;
        this._securityClient = securityClient;
        this._serverURL = serverURL;
        this._language = language;
        this._sdkVersion = sdkVersion;
        this._genVersion = genVersion;
    }
    /**
     * Get a list of billing entities
     *
     * @remarks
     * Returns the billing entities of the company identified in the path and all merchant accounts belonging to the company.
     * A billing entity is a legal entity where we charge orders to. An order for terminal products must contain the ID of a billing entity.
     *
     * To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.getCompaniesCompanyIdBillingEntities = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.GetCompaniesCompanyIdBillingEntitiesRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/billingEntities", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security = new operations.GetCompaniesCompanyIdBillingEntitiesSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var queryParams = utils.serializeQueryParams(req);
        var r = client.request(__assign({ url: url + queryParams, method: "get" }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetCompaniesCompanyIdBillingEntitiesResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.billingEntitiesResponse = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.BillingEntitiesResponse);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Get a list of shipping locations
     *
     * @remarks
     * Returns the shipping locations for the company identified in the path and all merchant accounts belonging to the company.
     * A shipping location includes the address where orders can be delivered, and an ID which you need to specify when ordering terminal products.
     *
     * To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.getCompaniesCompanyIdShippingLocations = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.GetCompaniesCompanyIdShippingLocationsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/shippingLocations", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security = new operations.GetCompaniesCompanyIdShippingLocationsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var queryParams = utils.serializeQueryParams(req);
        var r = client.request(__assign({ url: url + queryParams, method: "get" }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetCompaniesCompanyIdShippingLocationsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.shippingLocationsResponse = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.ShippingLocationsResponse);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Get a list of terminal models
     *
     * @remarks
     * Returns a list of payment terminal models that the company identified in the path has access to.
     * The response includes the terminal model ID, which can be used as a query parameter when getting a list of terminals or a list of products for ordering.
     *
     * To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.getCompaniesCompanyIdTerminalModels = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.GetCompaniesCompanyIdTerminalModelsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/terminalModels", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security = new operations.GetCompaniesCompanyIdTerminalModelsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var r = client.request(__assign({ url: url, method: "get" }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetCompaniesCompanyIdTerminalModelsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.terminalModelsResponse = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.TerminalModelsResponse);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Get a list of orders
     *
     * @remarks
     * Returns a lists of terminal products orders for the company identified in the path.
     * To filter the list, use one or more of the query parameters.
     *
     * To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.getCompaniesCompanyIdTerminalOrders = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.GetCompaniesCompanyIdTerminalOrdersRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/terminalOrders", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security = new operations.GetCompaniesCompanyIdTerminalOrdersSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var queryParams = utils.serializeQueryParams(req);
        var r = client.request(__assign({ url: url + queryParams, method: "get" }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetCompaniesCompanyIdTerminalOrdersResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.terminalOrdersResponse = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.TerminalOrdersResponse);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Get an order
     *
     * @remarks
     * Returns the details of the terminal products order identified in the path.
     *
     * To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.getCompaniesCompanyIdTerminalOrdersOrderId = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.GetCompaniesCompanyIdTerminalOrdersOrderIdRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/terminalOrders/{orderId}", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.GetCompaniesCompanyIdTerminalOrdersOrderIdSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var r = client.request(__assign({ url: url, method: "get" }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetCompaniesCompanyIdTerminalOrdersOrderIdResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.terminalOrder = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.TerminalOrder);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Get a list of terminal products
     *
     * @remarks
     * Returns a country-specific list of payment terminal packages and parts that the company identified in the path has access to.
     *
     * To make this request, your API credential must have one of the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.getCompaniesCompanyIdTerminalProducts = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.GetCompaniesCompanyIdTerminalProductsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/terminalProducts", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security = new operations.GetCompaniesCompanyIdTerminalProductsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var queryParams = utils.serializeQueryParams(req);
        var r = client.request(__assign({ url: url + queryParams, method: "get" }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetCompaniesCompanyIdTerminalProductsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.terminalProductsResponse = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.TerminalProductsResponse);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Update an order
     *
     * @remarks
     * Updates the terminal products order identified in the path.
     * Updating is only possible while the order has the status **Placed**.
     *
     * The request body only needs to contain what you want to change.
     * However, to update the products in the `items` array, you must provide the entire array. For example, if the array has three items:
     *  To remove one item, the array must include the remaining two items. Or to add one item, the array must include all four items.
     *
     * To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.patchCompaniesCompanyIdTerminalOrdersOrderId = function (req, security, config) {
        var _a;
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.PatchCompaniesCompanyIdTerminalOrdersOrderIdRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/terminalOrders/{orderId}", req);
        var _b = [{}, {}], reqBodyHeaders = _b[0], reqBody = _b[1];
        try {
            _a = utils.serializeRequestBody(req, "terminalOrderRequest", "json"), reqBodyHeaders = _a[0], reqBody = _a[1];
        }
        catch (e) {
            if (e instanceof Error) {
                throw new Error("Error serializing request body, cause: ".concat(e.message));
            }
        }
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.PatchCompaniesCompanyIdTerminalOrdersOrderIdSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, reqBodyHeaders), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "patch", headers: headers, data: reqBody }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.PatchCompaniesCompanyIdTerminalOrdersOrderIdResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.terminalOrder = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.TerminalOrder);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Create a shipping location
     *
     * @remarks
     * Creates a shipping location for the company identified in the path. A shipping location defines an address where orders can be delivered.
     *
     * To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.postCompaniesCompanyIdShippingLocations = function (req, security, config) {
        var _a;
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.PostCompaniesCompanyIdShippingLocationsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/shippingLocations", req);
        var _b = [{}, {}], reqBodyHeaders = _b[0], reqBody = _b[1];
        try {
            _a = utils.serializeRequestBody(req, "shippingLocation", "json"), reqBodyHeaders = _a[0], reqBody = _a[1];
        }
        catch (e) {
            if (e instanceof Error) {
                throw new Error("Error serializing request body, cause: ".concat(e.message));
            }
        }
        if (!(security instanceof utils.SpeakeasyBase)) {
            security = new operations.PostCompaniesCompanyIdShippingLocationsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, reqBodyHeaders), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "post", headers: headers, data: reqBody }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.PostCompaniesCompanyIdShippingLocationsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.shippingLocation = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.ShippingLocation);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Create an order
     *
     * @remarks
     * Creates an order for payment terminal products for the company identified in the path.
     *
     * To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.postCompaniesCompanyIdTerminalOrders = function (req, security, config) {
        var _a;
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.PostCompaniesCompanyIdTerminalOrdersRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/terminalOrders", req);
        var _b = [{}, {}], reqBodyHeaders = _b[0], reqBody = _b[1];
        try {
            _a = utils.serializeRequestBody(req, "terminalOrderRequest", "json"), reqBodyHeaders = _a[0], reqBody = _a[1];
        }
        catch (e) {
            if (e instanceof Error) {
                throw new Error("Error serializing request body, cause: ".concat(e.message));
            }
        }
        if (!(security instanceof utils.SpeakeasyBase)) {
            security = new operations.PostCompaniesCompanyIdTerminalOrdersSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, reqBodyHeaders), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "post", headers: headers, data: reqBody }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.PostCompaniesCompanyIdTerminalOrdersResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.terminalOrder = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.TerminalOrder);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Cancel an order
     *
     * @remarks
     * Cancels the terminal products order identified in the path.
     * Cancelling is only possible while the order has the status **Placed**.
     * To cancel an order, make a POST call without a request body. The response returns the full order details, but with the status changed to **Cancelled**.
     *
     * To make this request, your API credential must have the following [role](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Terminal ordering read and write
     */
    TerminalOrdersCompanyLevel.prototype.postCompaniesCompanyIdTerminalOrdersOrderIdCancel = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req =
                new operations.PostCompaniesCompanyIdTerminalOrdersOrderIdCancelRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/companies/{companyId}/terminalOrders/{orderId}/cancel", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.PostCompaniesCompanyIdTerminalOrdersOrderIdCancelSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var r = client.request(__assign({ url: url, method: "post" }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.PostCompaniesCompanyIdTerminalOrdersOrderIdCancelResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.terminalOrder = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.TerminalOrder);
                    }
                    break;
                case [400, 401, 403, 422, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.restServiceError = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.RestServiceError);
                    }
                    break;
            }
            return res;
        });
    };
    return TerminalOrdersCompanyLevel;
}());
exports.TerminalOrdersCompanyLevel = TerminalOrdersCompanyLevel;
