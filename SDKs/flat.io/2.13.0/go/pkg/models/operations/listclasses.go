// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListClassesSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// ListClassesStateEnum - Filter the classes by state
type ListClassesStateEnum string

const (
	ListClassesStateEnumActive   ListClassesStateEnum = "active"
	ListClassesStateEnumInactive ListClassesStateEnum = "inactive"
	ListClassesStateEnumArchived ListClassesStateEnum = "archived"
)

func (e *ListClassesStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "archived":
		*e = ListClassesStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListClassesStateEnum: %s", s)
	}
}

type ListClassesRequest struct {
	// Filter the classes by state
	State *ListClassesStateEnum `queryParam:"style=form,explode=true,name=state"`
}

type ListClassesResponse struct {
	// The list of classes
	ClassDetails []shared.ClassDetails
	ContentType  string
	// Error
	FlatErrorResponse *shared.FlatErrorResponse
	StatusCode        int
	RawResponse       *http.Response
}
