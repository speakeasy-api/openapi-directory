"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CallParameters = exports.CallParametersMachineDetectionEnum = exports.CallParametersAsyncAmdStatusCallbackMethodEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * HTTP method to be used when answering machine detection is completed (an Eqivo extension)
 */
var CallParametersAsyncAmdStatusCallbackMethodEnum;
(function (CallParametersAsyncAmdStatusCallbackMethodEnum) {
    CallParametersAsyncAmdStatusCallbackMethodEnum["Post"] = "POST";
    CallParametersAsyncAmdStatusCallbackMethodEnum["Get"] = "GET";
})(CallParametersAsyncAmdStatusCallbackMethodEnum = exports.CallParametersAsyncAmdStatusCallbackMethodEnum || (exports.CallParametersAsyncAmdStatusCallbackMethodEnum = {}));
/**
 * Enables answering machine detection; optionally, it waits until the greeting message has been played back (an Eqivo extension)
 */
var CallParametersMachineDetectionEnum;
(function (CallParametersMachineDetectionEnum) {
    CallParametersMachineDetectionEnum["Enable"] = "Enable";
    CallParametersMachineDetectionEnum["DetectMessageEnd"] = "DetectMessageEnd";
})(CallParametersMachineDetectionEnum = exports.CallParametersMachineDetectionEnum || (exports.CallParametersMachineDetectionEnum = {}));
/**
 * POST parameters
 */
var CallParameters = /** @class */ (function (_super) {
    __extends(CallParameters, _super);
    function CallParameters() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=AnswerUrl" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "answerUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=AsyncAMD" }),
        __metadata("design:type", Boolean)
    ], CallParameters.prototype, "asyncAMD", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=AsyncAmdStatusCallback" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "asyncAmdStatusCallback", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=AsyncAmdStatusCallbackMethod" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "asyncAmdStatusCallbackMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=CallerName" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "callerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=CoreUUID" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "coreUUID", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=ExtraDialString" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "extraDialString", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=From" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=GatewayCodecs" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "gatewayCodecs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=GatewayRetries" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "gatewayRetries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=GatewayTimeouts" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "gatewayTimeouts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=Gateways" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "gateways", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=HangupOnRing" }),
        __metadata("design:type", Number)
    ], CallParameters.prototype, "hangupOnRing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=HangupUrl" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "hangupUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=MachineDetection" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "machineDetection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=MachineDetectionSilenceTimeout" }),
        __metadata("design:type", Number)
    ], CallParameters.prototype, "machineDetectionSilenceTimeout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=MachineDetectionSpeechEndThreshold" }),
        __metadata("design:type", Number)
    ], CallParameters.prototype, "machineDetectionSpeechEndThreshold", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=MachineDetectionSpeechThreshold" }),
        __metadata("design:type", Number)
    ], CallParameters.prototype, "machineDetectionSpeechThreshold", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=MachineDetectionTimeout" }),
        __metadata("design:type", Number)
    ], CallParameters.prototype, "machineDetectionTimeout", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=RingUrl" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "ringUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=SendDigits" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "sendDigits", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=SendOnPreanswer" }),
        __metadata("design:type", Boolean)
    ], CallParameters.prototype, "sendOnPreanswer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=TimeLimit" }),
        __metadata("design:type", Number)
    ], CallParameters.prototype, "timeLimit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "form, name=To" }),
        __metadata("design:type", String)
    ], CallParameters.prototype, "to", void 0);
    return CallParameters;
}(utils_1.SpeakeasyBase));
exports.CallParameters = CallParameters;
