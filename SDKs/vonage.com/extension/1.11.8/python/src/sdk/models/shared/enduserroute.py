"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import basicuser as shared_basicuser
from ..shared import did as shared_did
from ..shared import line as shared_line
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EndUserRoute:
    
    block_caller_id: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('block_caller_id'), 'exclude': lambda f: f is None }})
    r"""Block Caller ID status of the extension"""  
    caller_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caller_id'), 'exclude': lambda f: f is None }})
    r"""Caller ID of the extension"""  
    dids: Optional[list[shared_did.Did]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dids'), 'exclude': lambda f: f is None }})
    r"""Collection of phone numbers assigned to the extension"""  
    dnd_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnd_enabled'), 'exclude': lambda f: f is None }})
    r"""Do Not Disturb status of the extension"""  
    extension_handsets: Optional[list[shared_line.Line]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_handsets'), 'exclude': lambda f: f is None }})
    r"""Collection of handsets assigned to the extension"""  
    extension_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Extension number"""  
    location_id: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the assigned location"""  
    user: Optional[shared_basicuser.BasicUser] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})  
    vtt_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vtt_enabled'), 'exclude': lambda f: f is None }})
    r"""Voicemail transcription status of the location"""  
    