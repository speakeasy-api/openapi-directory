/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Amount } from "./amount";
import { Expose, Type } from "class-transformer";

/**
 * The result of the payment. Possible values:
 *
 * @remarks
 *
 * * **Success** – The operation has been completed successfully.
 * * **Refused** – The operation was refused. The reason is given in the `refusalReason` field.
 * * **Error** – There was an error when the operation was processed. The reason is given in the `refusalReason` field.
 * * **NotEnoughBalance** – The amount on the payment method is lower than the amount given in the request. Only applicable to balance checks.
 *
 */
export enum StoredValueBalanceMergeResponseResultCodeEnum {
  Success = "Success",
  Refused = "Refused",
  Error = "Error",
  NotEnoughBalance = "NotEnoughBalance",
}

/**
 * OK - the request has succeeded.
 */
export class StoredValueBalanceMergeResponse extends SpeakeasyBase {
  /**
   * Authorisation code:
   *
   * @remarks
   * * When the payment is authorised, this field holds the authorisation code for the payment.
   * * When the payment is not authorised, this field is empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authCode" })
  authCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "currentBalance" })
  @Type(() => Amount)
  currentBalance?: Amount;

  /**
   * Adyen's 16-character string reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pspReference" })
  pspReference?: string;

  /**
   * If the transaction is refused or an error occurs, this field holds Adyen's mapped reason for the refusal or a description of the error.
   *
   * @remarks
   *
   * When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refusalReason" })
  refusalReason?: string;

  /**
   * The result of the payment. Possible values:
   *
   * @remarks
   *
   * * **Success** – The operation has been completed successfully.
   * * **Refused** – The operation was refused. The reason is given in the `refusalReason` field.
   * * **Error** – There was an error when the operation was processed. The reason is given in the `refusalReason` field.
   * * **NotEnoughBalance** – The amount on the payment method is lower than the amount given in the request. Only applicable to balance checks.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultCode" })
  resultCode?: StoredValueBalanceMergeResponseResultCodeEnum;

  /**
   * Raw refusal reason received from the third party, where available
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thirdPartyRefusalReason" })
  thirdPartyRefusalReason?: string;
}
