/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Execution - Execution represents the configuration of a single execution. An execution is an immutable resource that references a container image which is run to completion.
 */
public class Execution {
    /**
     * Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiVersion")
    public String apiVersion;

    public Execution withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }
    
    /**
     * Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Execution withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public ObjectMeta metadata;

    public Execution withMetadata(ObjectMeta metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * ExecutionSpec describes how the execution will look.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spec")
    public ExecutionSpec spec;

    public Execution withSpec(ExecutionSpec spec) {
        this.spec = spec;
        return this;
    }
    
    /**
     * ExecutionStatus represents the current state of an Execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ExecutionStatus status;

    public Execution withStatus(ExecutionStatus status) {
        this.status = status;
        return this;
    }
    
    public Execution(){}
}
