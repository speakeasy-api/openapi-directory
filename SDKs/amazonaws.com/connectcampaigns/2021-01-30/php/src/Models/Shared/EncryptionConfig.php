<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EncryptionConfig - Encryption config for Connect Instance. Note that sensitive data will always be encrypted. If disabled, service will perform encryption with its own key. If enabled, a KMS key id needs to be provided and KMS charges will apply. KMS is only type supported
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EncryptionConfig
{
    /**
     * Boolean to indicate if custom encryption has been enabled.
     * 
     * @var bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $enabled;
    
    /**
     * Server-side encryption type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EncryptionTypeEnum $encryptionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptionType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EncryptionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EncryptionTypeEnum $encryptionType = null;
    
    /**
     * KMS key id/arn for encryption config.
     * 
     * @var ?string $keyArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keyArn = null;
    
	public function __construct()
	{
		$this->enabled = false;
		$this->encryptionType = null;
		$this->keyArn = null;
	}
}
