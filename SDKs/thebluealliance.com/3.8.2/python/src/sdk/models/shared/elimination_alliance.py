"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import wlt_record as shared_wlt_record
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EliminationAllianceBackup:
    r"""Backup team called in, may be null."""
    
    in_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('in'), 'exclude': lambda f: f is None }})
    r"""Team key that was called in as the backup."""  
    out: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('out'), 'exclude': lambda f: f is None }})
    r"""Team key that was replaced by the backup team."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EliminationAllianceStatus:
    
    current_level_record: Optional[shared_wlt_record.WLTRecord] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('current_level_record'), 'exclude': lambda f: f is None }})
    r"""A Win-Loss-Tie record for a team, or an alliance."""  
    level: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('level'), 'exclude': lambda f: f is None }})  
    playoff_average: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('playoff_average'), 'exclude': lambda f: f is None }})  
    record: Optional[shared_wlt_record.WLTRecord] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('record'), 'exclude': lambda f: f is None }})
    r"""A Win-Loss-Tie record for a team, or an alliance."""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EliminationAlliance:
    
    picks: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('picks') }})
    r"""List of team keys picked for the alliance. First pick is captain."""  
    backup: Optional[EliminationAllianceBackup] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('backup'), 'exclude': lambda f: f is None }})
    r"""Backup team called in, may be null."""  
    declines: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('declines'), 'exclude': lambda f: f is None }})
    r"""List of teams that declined the alliance."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Alliance name, may be null."""  
    status: Optional[EliminationAllianceStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    