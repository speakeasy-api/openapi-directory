<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetUsersRequest
{
    /**
     * Used for pagination.  When a list request has more records available, cursors are provided in the response headers `X-Files-Cursor-Next` and `X-Files-Cursor-Prev`.  Send one of those cursor value here to resume an existing list from the next available record.  Note: many of our SDKs have iterator methods that will automatically handle cursor-based pagination.
     * 
     * @var ?string $cursor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=cursor')]
    public ?string $cursor = null;
    
    /**
     * If set, return records where the specified field is equal to the supplied value. Valid fields are `username`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ not_site_admin, username ]`.
     * 
     * @var ?array<string, mixed> $filter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter')]
    public ?array $filter = null;
    
    /**
     * If set, return records where the specified field is greater than the supplied value. Valid fields are `username`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ not_site_admin, username ]`.
     * 
     * @var ?array<string, mixed> $filterGt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter_gt')]
    public ?array $filterGt = null;
    
    /**
     * If set, return records where the specified field is greater than or equal to the supplied value. Valid fields are `username`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ not_site_admin, username ]`.
     * 
     * @var ?array<string, mixed> $filterGteq
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter_gteq')]
    public ?array $filterGteq = null;
    
    /**
     * If set, return records where the specified field is equal to the supplied value. Valid fields are `username`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ not_site_admin, username ]`.
     * 
     * @var ?array<string, mixed> $filterLike
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter_like')]
    public ?array $filterLike = null;
    
    /**
     * If set, return records where the specified field is less than the supplied value. Valid fields are `username`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ not_site_admin, username ]`.
     * 
     * @var ?array<string, mixed> $filterLt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter_lt')]
    public ?array $filterLt = null;
    
    /**
     * If set, return records where the specified field is less than or equal to the supplied value. Valid fields are `username`, `email`, `company`, `site_admin`, `password_validity_days`, `ssl_required`, `last_login_at`, `authenticate_until` or `not_site_admin`. Valid field combinations are `[ not_site_admin, username ]`.
     * 
     * @var ?array<string, mixed> $filterLteq
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter_lteq')]
    public ?array $filterLteq = null;
    
    /**
     * comma-separated list of User IDs
     * 
     * @var ?string $ids
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ids')]
    public ?string $ids = null;
    
    /**
     * Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * If `true`, list only admin users.
     * 
     * @var ?string $qAdmin
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q[admin]')]
    public ?string $qAdmin = null;
    
    /**
     * If set, list only users with overridden allowed IP setting.
     * 
     * @var ?string $qAllowedIps
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q[allowed_ips]')]
    public ?string $qAllowedIps = null;
    
    /**
     * List users matching email.
     * 
     * @var ?string $qEmail
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q[email]')]
    public ?string $qEmail = null;
    
    /**
     * List users matching notes field.
     * 
     * @var ?string $qNotes
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q[notes]')]
    public ?string $qNotes = null;
    
    /**
     * If set, list only users with overridden password validity days setting.
     * 
     * @var ?string $qPasswordValidityDays
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q[password_validity_days]')]
    public ?string $qPasswordValidityDays = null;
    
    /**
     * If set, list only users with overridden SSL required setting.
     * 
     * @var ?string $qSslRequired
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q[ssl_required]')]
    public ?string $qSslRequired = null;
    
    /**
     * List users matching username.
     * 
     * @var ?string $qUsername
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q[username]')]
    public ?string $qUsername = null;
    
    /**
     * Searches for partial matches of name, username, or email.
     * 
     * @var ?string $search
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=search')]
    public ?string $search = null;
    
    /**
     * If set, sort records by the specified field in either `asc` or `desc` direction (e.g. `sort_by[authenticate_until]=desc`). Valid fields are `authenticate_until`, `active`, `email`, `last_desktop_login_at`, `last_login_at`, `username`, `company`, `name`, `site_admin`, `receive_admin_alerts`, `password_validity_days`, `ssl_required` or `not_site_admin`.
     * 
     * @var ?array<string, mixed> $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?array $sortBy = null;
    
	public function __construct()
	{
		$this->cursor = null;
		$this->filter = null;
		$this->filterGt = null;
		$this->filterGteq = null;
		$this->filterLike = null;
		$this->filterLt = null;
		$this->filterLteq = null;
		$this->ids = null;
		$this->perPage = null;
		$this->qAdmin = null;
		$this->qAllowedIps = null;
		$this->qEmail = null;
		$this->qNotes = null;
		$this->qPasswordValidityDays = null;
		$this->qSslRequired = null;
		$this->qUsername = null;
		$this->search = null;
		$this->sortBy = null;
	}
}
