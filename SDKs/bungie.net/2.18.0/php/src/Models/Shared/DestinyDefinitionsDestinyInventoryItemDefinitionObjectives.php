<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DestinyDefinitionsDestinyInventoryItemDefinitionObjectives - An item can have objectives on it. In practice, these are the exclusive purview of "Quest Step" items: DestinyInventoryItemDefinitions that represent a specific step in a Quest.
 * 
 * Quest steps have 1:M objectives that we end up processing and returning in live data as DestinyQuestStatus data, and other useful information.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DestinyDefinitionsDestinyInventoryItemDefinitionObjectives
{
    /**
     * For every entry in objectiveHashes, there is a corresponding entry in this array at the same index. If the objective is meant to be associated with a specific DestinyActivityDefinition, there will be a valid hash at that index. Otherwise, it will be invalid (0).
     * 
     * Rendered somewhat obsolete by perObjectiveDisplayProperties, which currently has much the same information but may end up with more info in the future.
     * 
     * @var ?array<int> $displayActivityHashes
     */
	
    public ?array $displayActivityHashes = null;
    
	
    public ?bool $displayAsStatTracker = null;
    
    /**
     * The localized string for narrative text related to this quest step, if any.
     * 
     * @var ?string $narrative
     */
	
    public ?string $narrative = null;
    
    /**
     * The hashes to Objectives (DestinyObjectiveDefinition) that are part of this Quest Step, in the order that they should be rendered.
     * 
     * @var ?array<int> $objectiveHashes
     */
	
    public ?array $objectiveHashes = null;
    
    /**
     * The localized string describing an action to be performed associated with the objectives, if any.
     * 
     * @var ?string $objectiveVerbName
     */
	
    public ?string $objectiveVerbName = null;
    
    /**
     * One entry per Objective on the item, it will have related display information.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DestinyDefinitionsDestinyObjectiveDisplayProperties> $perObjectiveDisplayProperties
     */
	
    public ?array $perObjectiveDisplayProperties = null;
    
    /**
     * A hashed value for the questTypeIdentifier, because apparently I like to be redundant.
     * 
     * @var ?int $questTypeHash
     */
	
    public ?int $questTypeHash = null;
    
    /**
     * The identifier for the type of quest being performed, if any. Not associated with any fixed definition, yet.
     * 
     * @var ?string $questTypeIdentifier
     */
	
    public ?string $questTypeIdentifier = null;
    
    /**
     * The hash for the DestinyInventoryItemDefinition representing the Quest to which this Quest Step belongs.
     * 
     * @var ?int $questlineItemHash
     */
	
    public ?int $questlineItemHash = null;
    
    /**
     * If True, all objectives must be completed for the step to be completed. If False, any one objective can be completed for the step to be completed.
     * 
     * @var ?bool $requireFullObjectiveCompletion
     */
	
    public ?bool $requireFullObjectiveCompletion = null;
    
	public function __construct()
	{
		$this->displayActivityHashes = null;
		$this->displayAsStatTracker = null;
		$this->narrative = null;
		$this->objectiveHashes = null;
		$this->objectiveVerbName = null;
		$this->perObjectiveDisplayProperties = null;
		$this->questTypeHash = null;
		$this->questTypeIdentifier = null;
		$this->questlineItemHash = null;
		$this->requireFullObjectiveCompletion = null;
	}
}
