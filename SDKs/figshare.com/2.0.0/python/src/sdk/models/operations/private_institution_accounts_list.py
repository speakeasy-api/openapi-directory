"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errormessage as shared_errormessage
from ..shared import shortaccount as shared_shortaccount
from typing import Optional


@dataclasses.dataclass
class PrivateInstitutionAccountsListSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PrivateInstitutionAccountsListRequest:
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    r"""Filter by email"""  
    id_gte: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id_gte', 'style': 'form', 'explode': True }})
    r"""Retrieve accounts with an ID greater or equal to the specified value"""  
    id_lte: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id_lte', 'style': 'form', 'explode': True }})
    r"""Retrieve accounts with an ID lower or equal to the specified value"""  
    institution_user_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'institution_user_id', 'style': 'form', 'explode': True }})
    r"""Filter by institution_user_id"""  
    is_active: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'is_active', 'style': 'form', 'explode': True }})
    r"""Filter by active status"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Number of results included on a page. Used for pagination with query"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Where to start the listing(the offset of the first result). Used for pagination with limit"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number. Used for pagination with page_size"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of results included on a page. Used for pagination with page"""  
    

@dataclasses.dataclass
class PrivateInstitutionAccountsListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_message: Optional[shared_errormessage.ErrorMessage] = dataclasses.field(default=None)
    r"""Forbidden"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    short_accounts: Optional[list[shared_shortaccount.ShortAccount]] = dataclasses.field(default=None)
    r"""OK. An array of Accounts"""  
    