/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Macro - Represents a Google Tag Manager Macro.
 */
public class Macro {
    /**
     * GTM Account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public Macro withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * GTM Container ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerId")
    public String containerId;

    public Macro withContainerId(String containerId) {
        this.containerId = containerId;
        return this;
    }
    
    /**
     * For mobile containers only: A list of rule IDs for disabling conditional macros; the macro is enabled if one of the enabling rules is true while all the disabling rules are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disablingRuleId")
    public String[] disablingRuleId;

    public Macro withDisablingRuleId(String[] disablingRuleId) {
        this.disablingRuleId = disablingRuleId;
        return this;
    }
    
    /**
     * For mobile containers only: A list of rule IDs for enabling conditional macros; the macro is enabled if one of the enabling rules is true while all the disabling rules are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enablingRuleId")
    public String[] enablingRuleId;

    public Macro withEnablingRuleId(String[] enablingRuleId) {
        this.enablingRuleId = enablingRuleId;
        return this;
    }
    
    /**
     * The fingerprint of the GTM Macro as computed at storage time. This value is recomputed whenever the macro is modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;

    public Macro withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * The Macro ID uniquely identifies the GTM Macro.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("macroId")
    public String macroId;

    public Macro withMacroId(String macroId) {
        this.macroId = macroId;
        return this;
    }
    
    /**
     * Macro display name. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Macro withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes on how to apply this macro in the container. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public Macro withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The macro's parameters. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameter")
    public Parameter[] parameter;

    public Macro withParameter(Parameter[] parameter) {
        this.parameter = parameter;
        return this;
    }
    
    /**
     * Parent folder id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentFolderId")
    public String parentFolderId;

    public Macro withParentFolderId(String parentFolderId) {
        this.parentFolderId = parentFolderId;
        return this;
    }
    
    /**
     * The end timestamp in milliseconds to schedule a macro. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduleEndMs")
    public String scheduleEndMs;

    public Macro withScheduleEndMs(String scheduleEndMs) {
        this.scheduleEndMs = scheduleEndMs;
        return this;
    }
    
    /**
     * The start timestamp in milliseconds to schedule a macro. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduleStartMs")
    public String scheduleStartMs;

    public Macro withScheduleStartMs(String scheduleStartMs) {
        this.scheduleStartMs = scheduleStartMs;
        return this;
    }
    
    /**
     * GTM Macro Type. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public Macro withType(String type) {
        this.type = type;
        return this;
    }
    
    public Macro(){}
}
