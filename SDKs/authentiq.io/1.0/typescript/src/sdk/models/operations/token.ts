/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class TokenRequestBody extends SpeakeasyBase {
  /**
   * The registered client ID.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "form, name=client_id" })
  clientId: string;

  /**
   * The registered client ID secret.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "form, name=client_secret" })
  clientSecret: string;

  /**
   * The authorization code previously obtained from the Authentication endpoint.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "form, name=code" })
  code: string;

  /**
   * The authorization grant type, must be `authorization_code`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "form, name=grant_type" })
  grantType: string;

  /**
   * The redirect URL that was used previously with the Authentication endpoint.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "form, name=redirect_uri" })
  redirectUri: string;
}

export class TokenRequest extends SpeakeasyBase {
  /**
   * HTTP Basic authorization header.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Authorization",
  })
  authorization?: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody: TokenRequestBody;
}

export class TokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OAuth 2.0 error response
   */
  @SpeakeasyMetadata()
  oAuth2Error?: shared.OAuth2Error;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Token response
   */
  @SpeakeasyMetadata()
  token?: shared.Token;
}
