/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AppInvitationsList200ApplicationJSON - Success
 */
public class AppInvitationsList200ApplicationJSON {
    @JsonProperty("app")
    public AppInvitationsList200ApplicationJSONApp app;
    public AppInvitationsList200ApplicationJSON withApp(AppInvitationsList200ApplicationJSONApp app) {
        this.app = app;
        return this;
    }
    
    /**
     * The number of apps in the group
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("app_count")
    public Double appCount;
    public AppInvitationsList200ApplicationJSON withAppCount(Double appCount) {
        this.appCount = appCount;
        return this;
    }
    
    /**
     * The organization that owns the distribution group, if it exists
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distribution_group")
    public AppInvitationsList200ApplicationJSONDistributionGroup distributionGroup;
    public AppInvitationsList200ApplicationJSON withDistributionGroup(AppInvitationsList200ApplicationJSONDistributionGroup distributionGroup) {
        this.distributionGroup = distributionGroup;
        return this;
    }
    
    /**
     * The email address of the invited user
     */
    @JsonProperty("email")
    public String email;
    public AppInvitationsList200ApplicationJSON withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The unique ID (UUID) of the invitation
     */
    @JsonProperty("id")
    public String id;
    public AppInvitationsList200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The invitation type
     */
    @JsonProperty("invite_type")
    public AppInvitationsList200ApplicationJSONInviteTypeEnum inviteType;
    public AppInvitationsList200ApplicationJSON withInviteType(AppInvitationsList200ApplicationJSONInviteTypeEnum inviteType) {
        this.inviteType = inviteType;
        return this;
    }
    
    @JsonProperty("invited_by")
    public AppInvitationsList200ApplicationJSONInvitedBy invitedBy;
    public AppInvitationsList200ApplicationJSON withInvitedBy(AppInvitationsList200ApplicationJSONInvitedBy invitedBy) {
        this.invitedBy = invitedBy;
        return this;
    }
    
    /**
     * Indicates whether the invited user already exists
     */
    @JsonProperty("is_existing_user")
    public Boolean isExistingUser;
    public AppInvitationsList200ApplicationJSON withIsExistingUser(Boolean isExistingUser) {
        this.isExistingUser = isExistingUser;
        return this;
    }
    
    /**
     * The permissions the user has for the app
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public AppInvitationsList200ApplicationJSONPermissionsEnum[] permissions;
    public AppInvitationsList200ApplicationJSON withPermissions(AppInvitationsList200ApplicationJSONPermissionsEnum[] permissions) {
        this.permissions = permissions;
        return this;
    }
    
}
