"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import currentperformanceriskratings as shared_currentperformanceriskratings
from ..shared import recommendationsourcetype_enum as shared_recommendationsourcetype_enum
from ..shared import savingsopportunity as shared_savingsopportunity
from ..shared import summary as shared_summary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecommendationSummary:
    r"""A summary of a recommendation."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})  
    current_performance_risk_ratings: Optional[shared_currentperformanceriskratings.CurrentPerformanceRiskRatings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentPerformanceRiskRatings'), 'exclude': lambda f: f is None }})  
    recommendation_resource_type: Optional[shared_recommendationsourcetype_enum.RecommendationSourceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recommendationResourceType'), 'exclude': lambda f: f is None }})  
    savings_opportunity: Optional[shared_savingsopportunity.SavingsOpportunity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('savingsOpportunity'), 'exclude': lambda f: f is None }})  
    summaries: Optional[list[shared_summary.Summary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('summaries'), 'exclude': lambda f: f is None }})  
    