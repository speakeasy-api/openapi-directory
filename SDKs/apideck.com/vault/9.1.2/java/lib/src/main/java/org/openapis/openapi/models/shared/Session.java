/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Session - Additional redirect uri and/or consumer metadata
 */
public class Session {
    /**
     * The metadata of the consumer. This is used to display the consumer in the sidebar. This is optional, but recommended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumer_metadata")
    public ConsumerMetadata consumerMetadata;
    public Session withConsumerMetadata(ConsumerMetadata consumerMetadata) {
        this.consumerMetadata = consumerMetadata;
        return this;
    }
    
    /**
     * Custom consumer settings that are passed as part of the session.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_consumer_settings")
    public java.util.Map<String, Object> customConsumerSettings;
    public Session withCustomConsumerSettings(java.util.Map<String, Object> customConsumerSettings) {
        this.customConsumerSettings = customConsumerSettings;
        return this;
    }
    
    /**
     * The URL to redirect the user to after the session has been configured.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirect_uri")
    public String redirectUri;
    public Session withRedirectUri(String redirectUri) {
        this.redirectUri = redirectUri;
        return this;
    }
    
    /**
     * Settings to change the way the Vault is displayed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    public SessionSettings settings;
    public Session withSettings(SessionSettings settings) {
        this.settings = settings;
        return this;
    }
    
    /**
     * Theming options to change the look and feel of Vault.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("theme")
    public SessionTheme theme;
    public Session withTheme(SessionTheme theme) {
        this.theme = theme;
        return this;
    }
    
}
