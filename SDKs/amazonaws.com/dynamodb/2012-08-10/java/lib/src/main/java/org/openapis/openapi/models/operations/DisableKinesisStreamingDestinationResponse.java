/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class DisableKinesisStreamingDestinationResponse {
    
    public String contentType;
    public DisableKinesisStreamingDestinationResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;
    public DisableKinesisStreamingDestinationResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.KinesisStreamingDestinationOutput kinesisStreamingDestinationOutput;
    public DisableKinesisStreamingDestinationResponse withKinesisStreamingDestinationOutput(org.openapis.openapi.models.shared.KinesisStreamingDestinationOutput kinesisStreamingDestinationOutput) {
        this.kinesisStreamingDestinationOutput = kinesisStreamingDestinationOutput;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;
    public DisableKinesisStreamingDestinationResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    
    public Integer statusCode;
    public DisableKinesisStreamingDestinationResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public DisableKinesisStreamingDestinationResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceInUseException
     */
    
    public Object resourceInUseException;
    public DisableKinesisStreamingDestinationResponse withResourceInUseException(Object resourceInUseException) {
        this.resourceInUseException = resourceInUseException;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;
    public DisableKinesisStreamingDestinationResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
}
