<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GrpcRouteMethodMatch - Specifies a match against a method.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GrpcRouteMethodMatch
{
    /**
     * Optional. Specifies that matches are case sensitive. The default value is true. case_sensitive must not be used with a type of REGULAR_EXPRESSION.
     * 
     * @var ?bool $caseSensitive
     */
	#[\JMS\Serializer\Annotation\SerializedName('caseSensitive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $caseSensitive = null;
    
    /**
     * Required. Name of the method to match against. If unspecified, will match all methods.
     * 
     * @var ?string $grpcMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('grpcMethod')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $grpcMethod = null;
    
    /**
     * Required. Name of the service to match against. If unspecified, will match all services.
     * 
     * @var ?string $grpcService
     */
	#[\JMS\Serializer\Annotation\SerializedName('grpcService')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $grpcService = null;
    
    /**
     * Optional. Specifies how to match against the name. If not specified, a default value of "EXACT" is used.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GrpcRouteMethodMatchTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GrpcRouteMethodMatchTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GrpcRouteMethodMatchTypeEnum $type = null;
    
	public function __construct()
	{
		$this->caseSensitive = null;
		$this->grpcMethod = null;
		$this->grpcService = null;
		$this->type = null;
	}
}
