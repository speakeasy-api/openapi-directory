// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SongAPIGetByIDPathParams struct {
	// Song Id (required).
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// SongAPIGetByIDFieldsEnum - List of optional fields (optional).
//
//	Possible values are Albums, Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
type SongAPIGetByIDFieldsEnum string

const (
	SongAPIGetByIDFieldsEnumNone            SongAPIGetByIDFieldsEnum = "None"
	SongAPIGetByIDFieldsEnumAdditionalNames SongAPIGetByIDFieldsEnum = "AdditionalNames"
	SongAPIGetByIDFieldsEnumAlbums          SongAPIGetByIDFieldsEnum = "Albums"
	SongAPIGetByIDFieldsEnumArtists         SongAPIGetByIDFieldsEnum = "Artists"
	SongAPIGetByIDFieldsEnumLyrics          SongAPIGetByIDFieldsEnum = "Lyrics"
	SongAPIGetByIDFieldsEnumMainPicture     SongAPIGetByIDFieldsEnum = "MainPicture"
	SongAPIGetByIDFieldsEnumNames           SongAPIGetByIDFieldsEnum = "Names"
	SongAPIGetByIDFieldsEnumPVs             SongAPIGetByIDFieldsEnum = "PVs"
	SongAPIGetByIDFieldsEnumReleaseEvent    SongAPIGetByIDFieldsEnum = "ReleaseEvent"
	SongAPIGetByIDFieldsEnumTags            SongAPIGetByIDFieldsEnum = "Tags"
	SongAPIGetByIDFieldsEnumThumbURL        SongAPIGetByIDFieldsEnum = "ThumbUrl"
	SongAPIGetByIDFieldsEnumWebLinks        SongAPIGetByIDFieldsEnum = "WebLinks"
)

func (e *SongAPIGetByIDFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Albums":
		fallthrough
	case "Artists":
		fallthrough
	case "Lyrics":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "Tags":
		fallthrough
	case "ThumbUrl":
		fallthrough
	case "WebLinks":
		*e = SongAPIGetByIDFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetByIDFieldsEnum: %s", s)
	}
}

// SongAPIGetByIDLangEnum - Content language preference (optional).
type SongAPIGetByIDLangEnum string

const (
	SongAPIGetByIDLangEnumDefault  SongAPIGetByIDLangEnum = "Default"
	SongAPIGetByIDLangEnumJapanese SongAPIGetByIDLangEnum = "Japanese"
	SongAPIGetByIDLangEnumRomaji   SongAPIGetByIDLangEnum = "Romaji"
	SongAPIGetByIDLangEnumEnglish  SongAPIGetByIDLangEnum = "English"
)

func (e *SongAPIGetByIDLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = SongAPIGetByIDLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetByIDLangEnum: %s", s)
	}
}

type SongAPIGetByIDQueryParams struct {
	// List of optional fields (optional).
	//             Possible values are Albums, Artists, Names, PVs, Tags, ThumbUrl, WebLinks.
	Fields *SongAPIGetByIDFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Content language preference (optional).
	Lang *SongAPIGetByIDLangEnum `queryParam:"style=form,explode=true,name=lang"`
}

type SongAPIGetByIDRequest struct {
	PathParams  SongAPIGetByIDPathParams
	QueryParams SongAPIGetByIDQueryParams
}

type SongAPIGetByIDResponse struct {
	Body        []byte
	ContentType string
	// OK
	SongForAPIContract *shared.SongForAPIContract
	StatusCode         int
	RawResponse        *http.Response
}
