// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum - The platform type reported.
type GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum string

const (
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumPlatformTypeUnspecified GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "PLATFORM_TYPE_UNSPECIFIED"
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumWindows                 GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "WINDOWS"
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumLinux                   GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "LINUX"
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumAndroid                 GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "ANDROID"
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumOsx                     GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "OSX"
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumIos                     GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "IOS"
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumAnyPlatform             GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "ANY_PLATFORM"
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumAllPlatforms            GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "ALL_PLATFORMS"
	GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnumChrome                  GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum = "CHROME"
)

func (e *GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PLATFORM_TYPE_UNSPECIFIED":
		fallthrough
	case "WINDOWS":
		fallthrough
	case "LINUX":
		fallthrough
	case "ANDROID":
		fallthrough
	case "OSX":
		fallthrough
	case "IOS":
		fallthrough
	case "ANY_PLATFORM":
		fallthrough
	case "ALL_PLATFORMS":
		fallthrough
	case "CHROME":
		*e = GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum: %s", s)
	}
}

// GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum - The threat type reported.
type GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum string

const (
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumThreatTypeUnspecified         GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "THREAT_TYPE_UNSPECIFIED"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumMalware                       GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "MALWARE"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumSocialEngineering             GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "SOCIAL_ENGINEERING"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumUnwantedSoftware              GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "UNWANTED_SOFTWARE"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumPotentiallyHarmfulApplication GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "POTENTIALLY_HARMFUL_APPLICATION"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumSocialEngineeringInternal     GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "SOCIAL_ENGINEERING_INTERNAL"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumAPIAbuse                      GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "API_ABUSE"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumMaliciousBinary               GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "MALICIOUS_BINARY"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumCsdWhitelist                  GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "CSD_WHITELIST"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumCsdDownloadWhitelist          GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "CSD_DOWNLOAD_WHITELIST"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumClientIncident                GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "CLIENT_INCIDENT"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumClientIncidentWhitelist       GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "CLIENT_INCIDENT_WHITELIST"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumApkMalwareOffline             GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "APK_MALWARE_OFFLINE"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumSubresourceFilter             GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "SUBRESOURCE_FILTER"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumSuspicious                    GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "SUSPICIOUS"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumTrickToBill                   GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "TRICK_TO_BILL"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumHighConfidenceAllowlist       GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "HIGH_CONFIDENCE_ALLOWLIST"
	GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnumAccuracyTips                  GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum = "ACCURACY_TIPS"
)

func (e *GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "THREAT_TYPE_UNSPECIFIED":
		fallthrough
	case "MALWARE":
		fallthrough
	case "SOCIAL_ENGINEERING":
		fallthrough
	case "UNWANTED_SOFTWARE":
		fallthrough
	case "POTENTIALLY_HARMFUL_APPLICATION":
		fallthrough
	case "SOCIAL_ENGINEERING_INTERNAL":
		fallthrough
	case "API_ABUSE":
		fallthrough
	case "MALICIOUS_BINARY":
		fallthrough
	case "CSD_WHITELIST":
		fallthrough
	case "CSD_DOWNLOAD_WHITELIST":
		fallthrough
	case "CLIENT_INCIDENT":
		fallthrough
	case "CLIENT_INCIDENT_WHITELIST":
		fallthrough
	case "APK_MALWARE_OFFLINE":
		fallthrough
	case "SUBRESOURCE_FILTER":
		fallthrough
	case "SUSPICIOUS":
		fallthrough
	case "TRICK_TO_BILL":
		fallthrough
	case "HIGH_CONFIDENCE_ALLOWLIST":
		fallthrough
	case "ACCURACY_TIPS":
		*e = GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum: %s", s)
	}
}

type GoogleSecuritySafebrowsingV4ThreatHit struct {
	// The client metadata associated with Safe Browsing API requests.
	ClientInfo *GoogleSecuritySafebrowsingV4ClientInfo `json:"clientInfo,omitempty"`
	// An individual threat; for example, a malicious URL or its hash representation. Only one of these fields should be set.
	Entry *GoogleSecuritySafebrowsingV4ThreatEntry `json:"entry,omitempty"`
	// The platform type reported.
	PlatformType *GoogleSecuritySafebrowsingV4ThreatHitPlatformTypeEnum `json:"platformType,omitempty"`
	// The resources related to the threat hit.
	Resources []GoogleSecuritySafebrowsingV4ThreatHitThreatSource `json:"resources,omitempty"`
	// The threat type reported.
	ThreatType *GoogleSecuritySafebrowsingV4ThreatHitThreatTypeEnum `json:"threatType,omitempty"`
	// Details about the user that encountered the threat.
	UserInfo *GoogleSecuritySafebrowsingV4ThreatHitUserInfo `json:"userInfo,omitempty"`
}
