"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import sequencefeature as shared_sequencefeature
from typing import Optional


@dataclasses.dataclass
class GetFeaturesWithinResourceRequest:
    
    begin: str = dataclasses.field(metadata={'path_param': { 'field_name': 'begin', 'style': 'simple', 'explode': False }})  
    build: str = dataclasses.field(metadata={'path_param': { 'field_name': 'build', 'style': 'simple', 'explode': False }})  
    end: str = dataclasses.field(metadata={'path_param': { 'field_name': 'end', 'style': 'simple', 'explode': False }})  
    reference: str = dataclasses.field(metadata={'path_param': { 'field_name': 'reference', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GetFeaturesWithinResourceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    sequence_features: Optional[list[shared_sequencefeature.SequenceFeature]] = dataclasses.field(default=None)
    r"""Success"""  
    