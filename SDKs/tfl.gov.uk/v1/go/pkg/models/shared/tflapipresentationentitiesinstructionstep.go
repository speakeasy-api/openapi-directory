// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum string

const (
	TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnumNorth     TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum = "North"
	TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnumNorthEast TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum = "NorthEast"
	TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnumEast      TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum = "East"
	TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnumSouthEast TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum = "SouthEast"
	TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnumSouth     TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum = "South"
	TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnumSouthWest TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum = "SouthWest"
	TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnumWest      TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum = "West"
	TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnumNorthWest TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum = "NorthWest"
)

func (e TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum) ToPointer() *TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum {
	return &e
}

func (e *TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "North":
		fallthrough
	case "NorthEast":
		fallthrough
	case "East":
		fallthrough
	case "SouthEast":
		fallthrough
	case "South":
		fallthrough
	case "SouthWest":
		fallthrough
	case "West":
		fallthrough
	case "NorthWest":
		*e = TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum: %v", v)
	}
}

type TflAPIPresentationEntitiesInstructionStepTrackTypeEnum string

const (
	TflAPIPresentationEntitiesInstructionStepTrackTypeEnumCycleSuperHighway    TflAPIPresentationEntitiesInstructionStepTrackTypeEnum = "CycleSuperHighway"
	TflAPIPresentationEntitiesInstructionStepTrackTypeEnumCanalTowpath         TflAPIPresentationEntitiesInstructionStepTrackTypeEnum = "CanalTowpath"
	TflAPIPresentationEntitiesInstructionStepTrackTypeEnumQuietRoad            TflAPIPresentationEntitiesInstructionStepTrackTypeEnum = "QuietRoad"
	TflAPIPresentationEntitiesInstructionStepTrackTypeEnumProvisionForCyclists TflAPIPresentationEntitiesInstructionStepTrackTypeEnum = "ProvisionForCyclists"
	TflAPIPresentationEntitiesInstructionStepTrackTypeEnumBusyRoads            TflAPIPresentationEntitiesInstructionStepTrackTypeEnum = "BusyRoads"
	TflAPIPresentationEntitiesInstructionStepTrackTypeEnumNone                 TflAPIPresentationEntitiesInstructionStepTrackTypeEnum = "None"
	TflAPIPresentationEntitiesInstructionStepTrackTypeEnumPushBike             TflAPIPresentationEntitiesInstructionStepTrackTypeEnum = "PushBike"
	TflAPIPresentationEntitiesInstructionStepTrackTypeEnumQuietway             TflAPIPresentationEntitiesInstructionStepTrackTypeEnum = "Quietway"
)

func (e TflAPIPresentationEntitiesInstructionStepTrackTypeEnum) ToPointer() *TflAPIPresentationEntitiesInstructionStepTrackTypeEnum {
	return &e
}

func (e *TflAPIPresentationEntitiesInstructionStepTrackTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CycleSuperHighway":
		fallthrough
	case "CanalTowpath":
		fallthrough
	case "QuietRoad":
		fallthrough
	case "ProvisionForCyclists":
		fallthrough
	case "BusyRoads":
		fallthrough
	case "None":
		fallthrough
	case "PushBike":
		fallthrough
	case "Quietway":
		*e = TflAPIPresentationEntitiesInstructionStepTrackTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TflAPIPresentationEntitiesInstructionStepTrackTypeEnum: %v", v)
	}
}

type TflAPIPresentationEntitiesInstructionStep struct {
	CumulativeDistance      *int                                                                  `json:"cumulativeDistance,omitempty"`
	CumulativeTravelTime    *int                                                                  `json:"cumulativeTravelTime,omitempty"`
	Description             *string                                                               `json:"description,omitempty"`
	DescriptionHeading      *string                                                               `json:"descriptionHeading,omitempty"`
	Distance                *int                                                                  `json:"distance,omitempty"`
	Latitude                *float64                                                              `json:"latitude,omitempty"`
	Longitude               *float64                                                              `json:"longitude,omitempty"`
	PathAttribute           *TflAPIPresentationEntitiesPathAttribute                              `json:"pathAttribute,omitempty"`
	SkyDirection            *int                                                                  `json:"skyDirection,omitempty"`
	SkyDirectionDescription *TflAPIPresentationEntitiesInstructionStepSkyDirectionDescriptionEnum `json:"skyDirectionDescription,omitempty"`
	StreetName              *string                                                               `json:"streetName,omitempty"`
	TrackType               *TflAPIPresentationEntitiesInstructionStepTrackTypeEnum               `json:"trackType,omitempty"`
	TurnDirection           *string                                                               `json:"turnDirection,omitempty"`
}
