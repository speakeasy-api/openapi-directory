// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LanguageCodeEnum string

const (
	LanguageCodeEnumAfZa LanguageCodeEnum = "af-ZA"
	LanguageCodeEnumArAe LanguageCodeEnum = "ar-AE"
	LanguageCodeEnumArSa LanguageCodeEnum = "ar-SA"
	LanguageCodeEnumDaDk LanguageCodeEnum = "da-DK"
	LanguageCodeEnumDeCh LanguageCodeEnum = "de-CH"
	LanguageCodeEnumDeDe LanguageCodeEnum = "de-DE"
	LanguageCodeEnumEnAb LanguageCodeEnum = "en-AB"
	LanguageCodeEnumEnAu LanguageCodeEnum = "en-AU"
	LanguageCodeEnumEnGb LanguageCodeEnum = "en-GB"
	LanguageCodeEnumEnIe LanguageCodeEnum = "en-IE"
	LanguageCodeEnumEnIn LanguageCodeEnum = "en-IN"
	LanguageCodeEnumEnUs LanguageCodeEnum = "en-US"
	LanguageCodeEnumEnWl LanguageCodeEnum = "en-WL"
	LanguageCodeEnumEsEs LanguageCodeEnum = "es-ES"
	LanguageCodeEnumEsUs LanguageCodeEnum = "es-US"
	LanguageCodeEnumFaIr LanguageCodeEnum = "fa-IR"
	LanguageCodeEnumFrCa LanguageCodeEnum = "fr-CA"
	LanguageCodeEnumFrFr LanguageCodeEnum = "fr-FR"
	LanguageCodeEnumHeIl LanguageCodeEnum = "he-IL"
	LanguageCodeEnumHiIn LanguageCodeEnum = "hi-IN"
	LanguageCodeEnumIDID LanguageCodeEnum = "id-ID"
	LanguageCodeEnumItIt LanguageCodeEnum = "it-IT"
	LanguageCodeEnumJaJp LanguageCodeEnum = "ja-JP"
	LanguageCodeEnumKoKr LanguageCodeEnum = "ko-KR"
	LanguageCodeEnumMsMy LanguageCodeEnum = "ms-MY"
	LanguageCodeEnumNlNl LanguageCodeEnum = "nl-NL"
	LanguageCodeEnumPtBr LanguageCodeEnum = "pt-BR"
	LanguageCodeEnumPtPt LanguageCodeEnum = "pt-PT"
	LanguageCodeEnumRuRu LanguageCodeEnum = "ru-RU"
	LanguageCodeEnumTaIn LanguageCodeEnum = "ta-IN"
	LanguageCodeEnumTeIn LanguageCodeEnum = "te-IN"
	LanguageCodeEnumTrTr LanguageCodeEnum = "tr-TR"
	LanguageCodeEnumZhCn LanguageCodeEnum = "zh-CN"
	LanguageCodeEnumZhTw LanguageCodeEnum = "zh-TW"
	LanguageCodeEnumThTh LanguageCodeEnum = "th-TH"
	LanguageCodeEnumEnZa LanguageCodeEnum = "en-ZA"
	LanguageCodeEnumEnNz LanguageCodeEnum = "en-NZ"
	LanguageCodeEnumViVn LanguageCodeEnum = "vi-VN"
	LanguageCodeEnumSvSe LanguageCodeEnum = "sv-SE"
)

func (e LanguageCodeEnum) ToPointer() *LanguageCodeEnum {
	return &e
}

func (e *LanguageCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "af-ZA":
		fallthrough
	case "ar-AE":
		fallthrough
	case "ar-SA":
		fallthrough
	case "da-DK":
		fallthrough
	case "de-CH":
		fallthrough
	case "de-DE":
		fallthrough
	case "en-AB":
		fallthrough
	case "en-AU":
		fallthrough
	case "en-GB":
		fallthrough
	case "en-IE":
		fallthrough
	case "en-IN":
		fallthrough
	case "en-US":
		fallthrough
	case "en-WL":
		fallthrough
	case "es-ES":
		fallthrough
	case "es-US":
		fallthrough
	case "fa-IR":
		fallthrough
	case "fr-CA":
		fallthrough
	case "fr-FR":
		fallthrough
	case "he-IL":
		fallthrough
	case "hi-IN":
		fallthrough
	case "id-ID":
		fallthrough
	case "it-IT":
		fallthrough
	case "ja-JP":
		fallthrough
	case "ko-KR":
		fallthrough
	case "ms-MY":
		fallthrough
	case "nl-NL":
		fallthrough
	case "pt-BR":
		fallthrough
	case "pt-PT":
		fallthrough
	case "ru-RU":
		fallthrough
	case "ta-IN":
		fallthrough
	case "te-IN":
		fallthrough
	case "tr-TR":
		fallthrough
	case "zh-CN":
		fallthrough
	case "zh-TW":
		fallthrough
	case "th-TH":
		fallthrough
	case "en-ZA":
		fallthrough
	case "en-NZ":
		fallthrough
	case "vi-VN":
		fallthrough
	case "sv-SE":
		*e = LanguageCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LanguageCodeEnum: %v", v)
	}
}
