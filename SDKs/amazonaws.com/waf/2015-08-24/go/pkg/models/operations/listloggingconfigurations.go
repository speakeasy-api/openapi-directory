// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListLoggingConfigurationsXAmzTargetEnum
type ListLoggingConfigurationsXAmzTargetEnum string

const (
	ListLoggingConfigurationsXAmzTargetEnumAwswaf20150824ListLoggingConfigurations ListLoggingConfigurationsXAmzTargetEnum = "AWSWAF_20150824.ListLoggingConfigurations"
)

func (e ListLoggingConfigurationsXAmzTargetEnum) ToPointer() *ListLoggingConfigurationsXAmzTargetEnum {
	return &e
}

func (e *ListLoggingConfigurationsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_20150824.ListLoggingConfigurations":
		*e = ListLoggingConfigurationsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListLoggingConfigurationsXAmzTargetEnum: %v", v)
	}
}

type ListLoggingConfigurationsRequest struct {
	ListLoggingConfigurationsRequest shared.ListLoggingConfigurationsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       ListLoggingConfigurationsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListLoggingConfigurationsResponse struct {
	ContentType string
	// Success
	ListLoggingConfigurationsResponse *shared.ListLoggingConfigurationsResponse
	StatusCode                        int
	RawResponse                       *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
}
