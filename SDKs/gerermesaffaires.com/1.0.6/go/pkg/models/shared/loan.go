// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoanCategoryEnum string

const (
	LoanCategoryEnumDebtSpreading      LoanCategoryEnum = "debt spreading"
	LoanCategoryEnumBankLoan           LoanCategoryEnum = "bank loan"
	LoanCategoryEnumCurrentAccount     LoanCategoryEnum = "current account"
	LoanCategoryEnumOverdraftAgreement LoanCategoryEnum = "overdraft agreement"
	LoanCategoryEnumLeasing            LoanCategoryEnum = "leasing"
	LoanCategoryEnumObligation         LoanCategoryEnum = "obligation"
)

func (e LoanCategoryEnum) ToPointer() *LoanCategoryEnum {
	return &e
}

func (e *LoanCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "debt spreading":
		fallthrough
	case "bank loan":
		fallthrough
	case "current account":
		fallthrough
	case "overdraft agreement":
		fallthrough
	case "leasing":
		fallthrough
	case "obligation":
		*e = LoanCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoanCategoryEnum: %v", v)
	}
}

type LoanLevelEnum string

const (
	LoanLevelEnumConfidential LoanLevelEnum = "confidential"
	LoanLevelEnumRegular      LoanLevelEnum = "regular"
	LoanLevelEnumPublic       LoanLevelEnum = "public"
)

func (e LoanLevelEnum) ToPointer() *LoanLevelEnum {
	return &e
}

func (e *LoanLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = LoanLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoanLevelEnum: %v", v)
	}
}

// Loan - A loan folder
type Loan struct {
	About            *string           `json:"About,omitempty"`
	Amount           *float32          `json:"Amount,omitempty"`
	ArchivalDate     *string           `json:"ArchivalDate,omitempty"`
	Category         *LoanCategoryEnum `json:"Category,omitempty"`
	Class            *string           `json:"Class,omitempty"`
	Comment          *string           `json:"Comment,omitempty"`
	Designation      *string           `json:"Designation,omitempty"`
	DueAmount        *float32          `json:"DueAmount,omitempty"`
	End              *string           `json:"End,omitempty"`
	Home             *bool             `json:"Home,omitempty"`
	ID               *string           `json:"Id,omitempty"`
	Keywords         []string          `json:"Keywords,omitempty"`
	Level            *LoanLevelEnum    `json:"Level,omitempty"`
	ModificationDate *string           `json:"ModificationDate,omitempty"`
	MonthsNumber     *float64          `json:"MonthsNumber,omitempty"`
	Name             *string           `json:"Name,omitempty"`
	Parent           *string           `json:"Parent,omitempty"`
	Rate             *float32          `json:"Rate,omitempty"`
	Start            *string           `json:"Start,omitempty"`
	TotalCost        *float32          `json:"TotalCost,omitempty"`
}
