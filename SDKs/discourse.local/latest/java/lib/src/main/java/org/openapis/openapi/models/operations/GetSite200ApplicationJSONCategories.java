/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetSite200ApplicationJSONCategories {
    @JsonProperty("allow_global_tags")
    public Boolean allowGlobalTags;
    public GetSite200ApplicationJSONCategories withAllowGlobalTags(Boolean allowGlobalTags) {
        this.allowGlobalTags = allowGlobalTags;
        return this;
    }
    
    @JsonProperty("allowed_tag_groups")
    public Object[] allowedTagGroups;
    public GetSite200ApplicationJSONCategories withAllowedTagGroups(Object[] allowedTagGroups) {
        this.allowedTagGroups = allowedTagGroups;
        return this;
    }
    
    @JsonProperty("allowed_tags")
    public Object[] allowedTags;
    public GetSite200ApplicationJSONCategories withAllowedTags(Object[] allowedTags) {
        this.allowedTags = allowedTags;
        return this;
    }
    
    @JsonProperty("can_edit")
    public Boolean canEdit;
    public GetSite200ApplicationJSONCategories withCanEdit(Boolean canEdit) {
        this.canEdit = canEdit;
        return this;
    }
    
    @JsonProperty("color")
    public String color;
    public GetSite200ApplicationJSONCategories withColor(String color) {
        this.color = color;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_fields")
    public java.util.Map<String, Object> customFields;
    public GetSite200ApplicationJSONCategories withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    @JsonProperty("default_list_filter")
    public String defaultListFilter;
    public GetSite200ApplicationJSONCategories withDefaultListFilter(String defaultListFilter) {
        this.defaultListFilter = defaultListFilter;
        return this;
    }
    
    @JsonProperty("default_top_period")
    public String defaultTopPeriod;
    public GetSite200ApplicationJSONCategories withDefaultTopPeriod(String defaultTopPeriod) {
        this.defaultTopPeriod = defaultTopPeriod;
        return this;
    }
    
    @JsonProperty("default_view")
    public String defaultView;
    public GetSite200ApplicationJSONCategories withDefaultView(String defaultView) {
        this.defaultView = defaultView;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GetSite200ApplicationJSONCategories withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description_excerpt")
    public String descriptionExcerpt;
    public GetSite200ApplicationJSONCategories withDescriptionExcerpt(String descriptionExcerpt) {
        this.descriptionExcerpt = descriptionExcerpt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description_text")
    public String descriptionText;
    public GetSite200ApplicationJSONCategories withDescriptionText(String descriptionText) {
        this.descriptionText = descriptionText;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form_template_ids")
    public Object[] formTemplateIds;
    public GetSite200ApplicationJSONCategories withFormTemplateIds(Object[] formTemplateIds) {
        this.formTemplateIds = formTemplateIds;
        return this;
    }
    
    @JsonProperty("has_children")
    public Boolean hasChildren;
    public GetSite200ApplicationJSONCategories withHasChildren(Boolean hasChildren) {
        this.hasChildren = hasChildren;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;
    public GetSite200ApplicationJSONCategories withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("minimum_required_tags")
    public Long minimumRequiredTags;
    public GetSite200ApplicationJSONCategories withMinimumRequiredTags(Long minimumRequiredTags) {
        this.minimumRequiredTags = minimumRequiredTags;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public GetSite200ApplicationJSONCategories withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("navigate_to_first_post_after_read")
    public Boolean navigateToFirstPostAfterRead;
    public GetSite200ApplicationJSONCategories withNavigateToFirstPostAfterRead(Boolean navigateToFirstPostAfterRead) {
        this.navigateToFirstPostAfterRead = navigateToFirstPostAfterRead;
        return this;
    }
    
    @JsonProperty("notification_level")
    public Long notificationLevel;
    public GetSite200ApplicationJSONCategories withNotificationLevel(Long notificationLevel) {
        this.notificationLevel = notificationLevel;
        return this;
    }
    
    @JsonProperty("num_featured_topics")
    public Long numFeaturedTopics;
    public GetSite200ApplicationJSONCategories withNumFeaturedTopics(Long numFeaturedTopics) {
        this.numFeaturedTopics = numFeaturedTopics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent_category_id")
    public Long parentCategoryId;
    public GetSite200ApplicationJSONCategories withParentCategoryId(Long parentCategoryId) {
        this.parentCategoryId = parentCategoryId;
        return this;
    }
    
    @JsonProperty("permission")
    public Long permission;
    public GetSite200ApplicationJSONCategories withPermission(Long permission) {
        this.permission = permission;
        return this;
    }
    
    @JsonProperty("position")
    public Long position;
    public GetSite200ApplicationJSONCategories withPosition(Long position) {
        this.position = position;
        return this;
    }
    
    @JsonProperty("post_count")
    public Long postCount;
    public GetSite200ApplicationJSONCategories withPostCount(Long postCount) {
        this.postCount = postCount;
        return this;
    }
    
    @JsonProperty("read_only_banner")
    public String readOnlyBanner;
    public GetSite200ApplicationJSONCategories withReadOnlyBanner(String readOnlyBanner) {
        this.readOnlyBanner = readOnlyBanner;
        return this;
    }
    
    @JsonProperty("read_restricted")
    public Boolean readRestricted;
    public GetSite200ApplicationJSONCategories withReadRestricted(Boolean readRestricted) {
        this.readRestricted = readRestricted;
        return this;
    }
    
    @JsonProperty("required_tag_groups")
    public GetSite200ApplicationJSONCategoriesRequiredTagGroups[] requiredTagGroups;
    public GetSite200ApplicationJSONCategories withRequiredTagGroups(GetSite200ApplicationJSONCategoriesRequiredTagGroups[] requiredTagGroups) {
        this.requiredTagGroups = requiredTagGroups;
        return this;
    }
    
    @JsonProperty("show_subcategory_list")
    public Boolean showSubcategoryList;
    public GetSite200ApplicationJSONCategories withShowSubcategoryList(Boolean showSubcategoryList) {
        this.showSubcategoryList = showSubcategoryList;
        return this;
    }
    
    @JsonProperty("slug")
    public String slug;
    public GetSite200ApplicationJSONCategories withSlug(String slug) {
        this.slug = slug;
        return this;
    }
    
    @JsonProperty("sort_ascending")
    public String sortAscending;
    public GetSite200ApplicationJSONCategories withSortAscending(String sortAscending) {
        this.sortAscending = sortAscending;
        return this;
    }
    
    @JsonProperty("sort_order")
    public String sortOrder;
    public GetSite200ApplicationJSONCategories withSortOrder(String sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    @JsonProperty("subcategory_list_style")
    public String subcategoryListStyle;
    public GetSite200ApplicationJSONCategories withSubcategoryListStyle(String subcategoryListStyle) {
        this.subcategoryListStyle = subcategoryListStyle;
        return this;
    }
    
    @JsonProperty("text_color")
    public String textColor;
    public GetSite200ApplicationJSONCategories withTextColor(String textColor) {
        this.textColor = textColor;
        return this;
    }
    
    @JsonProperty("topic_count")
    public Long topicCount;
    public GetSite200ApplicationJSONCategories withTopicCount(Long topicCount) {
        this.topicCount = topicCount;
        return this;
    }
    
    @JsonProperty("topic_template")
    public String topicTemplate;
    public GetSite200ApplicationJSONCategories withTopicTemplate(String topicTemplate) {
        this.topicTemplate = topicTemplate;
        return this;
    }
    
    @JsonProperty("topic_url")
    public String topicUrl;
    public GetSite200ApplicationJSONCategories withTopicUrl(String topicUrl) {
        this.topicUrl = topicUrl;
        return this;
    }
    
    @JsonProperty("uploaded_background")
    public String uploadedBackground;
    public GetSite200ApplicationJSONCategories withUploadedBackground(String uploadedBackground) {
        this.uploadedBackground = uploadedBackground;
        return this;
    }
    
    @JsonProperty("uploaded_logo")
    public String uploadedLogo;
    public GetSite200ApplicationJSONCategories withUploadedLogo(String uploadedLogo) {
        this.uploadedLogo = uploadedLogo;
        return this;
    }
    
    @JsonProperty("uploaded_logo_dark")
    public String uploadedLogoDark;
    public GetSite200ApplicationJSONCategories withUploadedLogoDark(String uploadedLogoDark) {
        this.uploadedLogoDark = uploadedLogoDark;
        return this;
    }
    
}
