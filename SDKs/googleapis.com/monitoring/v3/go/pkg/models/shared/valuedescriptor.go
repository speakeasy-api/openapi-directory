// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValueDescriptorMetricKindEnum - The value stream kind.
type ValueDescriptorMetricKindEnum string

const (
	ValueDescriptorMetricKindEnumMetricKindUnspecified ValueDescriptorMetricKindEnum = "METRIC_KIND_UNSPECIFIED"
	ValueDescriptorMetricKindEnumGauge                 ValueDescriptorMetricKindEnum = "GAUGE"
	ValueDescriptorMetricKindEnumDelta                 ValueDescriptorMetricKindEnum = "DELTA"
	ValueDescriptorMetricKindEnumCumulative            ValueDescriptorMetricKindEnum = "CUMULATIVE"
)

func (e ValueDescriptorMetricKindEnum) ToPointer() *ValueDescriptorMetricKindEnum {
	return &e
}

func (e *ValueDescriptorMetricKindEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "METRIC_KIND_UNSPECIFIED":
		fallthrough
	case "GAUGE":
		fallthrough
	case "DELTA":
		fallthrough
	case "CUMULATIVE":
		*e = ValueDescriptorMetricKindEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValueDescriptorMetricKindEnum: %v", v)
	}
}

// ValueDescriptorValueTypeEnum - The value type.
type ValueDescriptorValueTypeEnum string

const (
	ValueDescriptorValueTypeEnumValueTypeUnspecified ValueDescriptorValueTypeEnum = "VALUE_TYPE_UNSPECIFIED"
	ValueDescriptorValueTypeEnumBool                 ValueDescriptorValueTypeEnum = "BOOL"
	ValueDescriptorValueTypeEnumInt64                ValueDescriptorValueTypeEnum = "INT64"
	ValueDescriptorValueTypeEnumDouble               ValueDescriptorValueTypeEnum = "DOUBLE"
	ValueDescriptorValueTypeEnumString               ValueDescriptorValueTypeEnum = "STRING"
	ValueDescriptorValueTypeEnumDistribution         ValueDescriptorValueTypeEnum = "DISTRIBUTION"
	ValueDescriptorValueTypeEnumMoney                ValueDescriptorValueTypeEnum = "MONEY"
)

func (e ValueDescriptorValueTypeEnum) ToPointer() *ValueDescriptorValueTypeEnum {
	return &e
}

func (e *ValueDescriptorValueTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VALUE_TYPE_UNSPECIFIED":
		fallthrough
	case "BOOL":
		fallthrough
	case "INT64":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "STRING":
		fallthrough
	case "DISTRIBUTION":
		fallthrough
	case "MONEY":
		*e = ValueDescriptorValueTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValueDescriptorValueTypeEnum: %v", v)
	}
}

// ValueDescriptor - A descriptor for the value columns in a data point.
type ValueDescriptor struct {
	// The value key.
	Key *string `json:"key,omitempty"`
	// The value stream kind.
	MetricKind *ValueDescriptorMetricKindEnum `json:"metricKind,omitempty"`
	// The unit in which time_series point values are reported. unit follows the UCUM format for units as seen in https://unitsofmeasure.org/ucum.html. unit is only valid if value_type is INTEGER, DOUBLE, DISTRIBUTION.
	Unit *string `json:"unit,omitempty"`
	// The value type.
	ValueType *ValueDescriptorValueTypeEnum `json:"valueType,omitempty"`
}
