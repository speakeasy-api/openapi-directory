"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregateconformancepackcompliancesummaryfilters as shared_aggregateconformancepackcompliancesummaryfilters
from ..shared import aggregateconformancepackcompliancesummarygroupkey_enum as shared_aggregateconformancepackcompliancesummarygroupkey_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAggregateConformancePackComplianceSummaryRequest:
    
    configuration_aggregator_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationAggregatorName') }})  
    filters: Optional[shared_aggregateconformancepackcompliancesummaryfilters.AggregateConformancePackComplianceSummaryFilters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Filters'), 'exclude': lambda f: f is None }})  
    group_by_key: Optional[shared_aggregateconformancepackcompliancesummarygroupkey_enum.AggregateConformancePackComplianceSummaryGroupKeyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GroupByKey'), 'exclude': lambda f: f is None }})  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Limit'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    