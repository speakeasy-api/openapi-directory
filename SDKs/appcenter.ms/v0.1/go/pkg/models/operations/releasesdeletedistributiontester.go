// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ReleasesDeleteDistributionTesterSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type ReleasesDeleteDistributionTesterRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the release
	ReleaseID int64 `pathParam:"style=simple,explode=false,name=release_id"`
	// The id of the tester
	TesterID string `pathParam:"style=simple,explode=false,name=tester_id"`
}

type ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum string

const (
	ReleasesDeleteDistributionTester404ApplicationJSONCodeEnumBadRequest          ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum = "BadRequest"
	ReleasesDeleteDistributionTester404ApplicationJSONCodeEnumConflict            ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum = "Conflict"
	ReleasesDeleteDistributionTester404ApplicationJSONCodeEnumNotAcceptable       ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum = "NotAcceptable"
	ReleasesDeleteDistributionTester404ApplicationJSONCodeEnumNotFound            ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum = "NotFound"
	ReleasesDeleteDistributionTester404ApplicationJSONCodeEnumInternalServerError ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum = "InternalServerError"
	ReleasesDeleteDistributionTester404ApplicationJSONCodeEnumUnauthorized        ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum = "Unauthorized"
	ReleasesDeleteDistributionTester404ApplicationJSONCodeEnumTooManyRequests     ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum) ToPointer() *ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum {
	return &e
}

func (e *ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum: %v", v)
	}
}

// ReleasesDeleteDistributionTester404ApplicationJSON - Tester can't be found
type ReleasesDeleteDistributionTester404ApplicationJSON struct {
	Code    ReleasesDeleteDistributionTester404ApplicationJSONCodeEnum `json:"code"`
	Message string                                                     `json:"message"`
}

type ReleasesDeleteDistributionTesterResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Tester can't be found
	//
	ReleasesDeleteDistributionTester404ApplicationJSONObject *ReleasesDeleteDistributionTester404ApplicationJSON
}
