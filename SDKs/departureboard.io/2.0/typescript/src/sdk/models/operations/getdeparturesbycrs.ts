/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetDeparturesByCRSRequest extends SpeakeasyBase {
  /**
   * The CRS (Computer Reservation System) for the station you wish to get departure information for, e.g. KGX for London Kings Cross.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=CRS" })
  crs: string;

  /**
   * The National Rail OpenLDBWS API Key to use for looking up service information. You must register with National Rail to obtain this key and whitelist it with us. See https://api.departureboard.io/docs/registration for more information.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=apiKey",
  })
  apiKey: string;

  /**
   * The CRS (Computer Reservation System) code to filter the results by. For example, performing a lookup for PAD (London Paddington) and setting filterStation to RED (Reading), will only show services departing from Paddington that stop at Reading.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filterStation",
  })
  filterStation?: string;

  /**
   * The number of departing services to return. This is a maximum value, less may be returned if there is not a sufficient amount of services running from the selected station within the time window specified.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=numServices",
  })
  numServices?: number;

  /**
   * Should the response contain information on the calling points for each service? If set to false, calling points will not be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=serviceDetails",
  })
  serviceDetails?: boolean;

  /**
   * The time window in minutes to offset the departure information by. For example, a value of 20 will not show services departing within the next 20 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=timeOffset",
  })
  timeOffset?: number;

  /**
   * The time window to show services for in minutes. For example, a value of 60 will show services departing the station in the next 60 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=timeWindow",
  })
  timeWindow?: number;
}

export class GetDeparturesByCRSResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
