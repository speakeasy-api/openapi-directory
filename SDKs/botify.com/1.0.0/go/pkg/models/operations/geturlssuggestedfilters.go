// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetUrlsSuggestedFiltersPathParams struct {
	// Analysis' identifier
	AnalysisSlug string `pathParam:"style=simple,explode=false,name=analysis_slug"`
	// Project's identifier
	ProjectSlug string `pathParam:"style=simple,explode=false,name=project_slug"`
	// User's identifier
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

// GetUrlsSuggestedFiltersAreaEnum
type GetUrlsSuggestedFiltersAreaEnum string

const (
	GetUrlsSuggestedFiltersAreaEnumCurrent GetUrlsSuggestedFiltersAreaEnum = "current"
	GetUrlsSuggestedFiltersAreaEnumNew     GetUrlsSuggestedFiltersAreaEnum = "new"
)

func (e *GetUrlsSuggestedFiltersAreaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "current":
		fallthrough
	case "new":
		*e = GetUrlsSuggestedFiltersAreaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUrlsSuggestedFiltersAreaEnum: %s", s)
	}
}

type GetUrlsSuggestedFiltersQueryParams struct {
	Area *GetUrlsSuggestedFiltersAreaEnum `queryParam:"style=form,explode=true,name=area"`
}

type GetUrlsSuggestedFiltersRequest struct {
	PathParams  GetUrlsSuggestedFiltersPathParams
	QueryParams GetUrlsSuggestedFiltersQueryParams
	Request     *shared.UrlsAggsQuery `request:"mediaType=application/json"`
}

type GetUrlsSuggestedFiltersResponse struct {
	ContentType string
	// error payload
	DefaultPayload *shared.DefaultPayload
	StatusCode     int
	RawResponse    *http.Response
	// Successful operation
	UrlsAggsQuery *shared.UrlsAggsQuery
}
