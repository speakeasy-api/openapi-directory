"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import vcdatacenter as shared_vcdatacenter
from typing import Optional


@dataclasses.dataclass
class GetDatacenterSecurity:
    
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetDatacenterRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""entity id"""  
    time: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'time', 'style': 'form', 'explode': True }})
    r"""time in epoch seconds"""  
    

@dataclasses.dataclass
class GetDatacenterResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Bad Request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    vc_datacenter: Optional[shared_vcdatacenter.VCDatacenter] = dataclasses.field(default=None)
    r"""OK"""  
    