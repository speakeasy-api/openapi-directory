// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ModifyCertificateBasedAuthPropertiesXAmzTargetEnum
type ModifyCertificateBasedAuthPropertiesXAmzTargetEnum string

const (
	ModifyCertificateBasedAuthPropertiesXAmzTargetEnumWorkspacesServiceModifyCertificateBasedAuthProperties ModifyCertificateBasedAuthPropertiesXAmzTargetEnum = "WorkspacesService.ModifyCertificateBasedAuthProperties"
)

func (e ModifyCertificateBasedAuthPropertiesXAmzTargetEnum) ToPointer() *ModifyCertificateBasedAuthPropertiesXAmzTargetEnum {
	return &e
}

func (e *ModifyCertificateBasedAuthPropertiesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkspacesService.ModifyCertificateBasedAuthProperties":
		*e = ModifyCertificateBasedAuthPropertiesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyCertificateBasedAuthPropertiesXAmzTargetEnum: %v", v)
	}
}

type ModifyCertificateBasedAuthPropertiesRequest struct {
	ModifyCertificateBasedAuthPropertiesRequest shared.ModifyCertificateBasedAuthPropertiesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                               *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                           *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                              *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                    *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                           *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                               *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                           *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                  ModifyCertificateBasedAuthPropertiesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ModifyCertificateBasedAuthPropertiesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// Success
	ModifyCertificateBasedAuthPropertiesResult map[string]interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
