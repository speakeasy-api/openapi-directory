// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type IssuesAddLabelsPathParams struct {
	// The number that identifies the issue.
	IssueNumber int64 `pathParam:"style=simple,explode=false,name=issue_number"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type IssuesAddLabelsRequestBody4 struct {
	Name string `json:"name"`
}

type IssuesAddLabelsRequestBody3Labels struct {
	Name string `json:"name"`
}

type IssuesAddLabelsRequestBody3 struct {
	Labels []IssuesAddLabelsRequestBody3Labels `json:"labels,omitempty"`
}

type IssuesAddLabelsRequestBody1 struct {
	// The names of the labels to add to the issue's existing labels. You can pass an empty array to remove all labels. Alternatively, you can pass a single label as a `string` or an `array` of labels directly, but GitHub recommends passing an object with the `labels` key. You can also replace all of the labels for an issue. For more information, see "[Set labels for an issue](https://docs.github.com/enterprise-server@3.7/rest/reference/issues#set-labels-for-an-issue)."
	Labels []string `json:"labels,omitempty"`
}

type IssuesAddLabelsRequest struct {
	PathParams IssuesAddLabelsPathParams
	Request    interface{} `request:"mediaType=application/json"`
}

type IssuesAddLabelsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Moved permanently
	BasicError *shared.BasicError
	// Response
	Labels []shared.Label
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
