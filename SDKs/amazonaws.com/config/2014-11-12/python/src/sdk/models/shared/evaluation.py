"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import compliancetype_enum as shared_compliancetype_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Evaluation:
    r"""Identifies an Amazon Web Services resource and indicates whether it complies with the Config rule that it was evaluated against."""
    
    compliance_resource_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComplianceResourceId') }})  
    compliance_resource_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComplianceResourceType') }})  
    compliance_type: shared_compliancetype_enum.ComplianceTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ComplianceType') }})  
    ordering_timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrderingTimestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    annotation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Annotation'), 'exclude': lambda f: f is None }})  
    