<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class IPInfoResponse
{
    /**
     * Name of the city (if detectable)
     * 
     * @var string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $city;
    
    /**
     * ISO 2-letter continent code
     * 
     * @var string $continentCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('continent-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $continentCode;
    
    /**
     * Full country name
     * 
     * @var string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $country;
    
    /**
     * ISO 2-letter country code
     * 
     * @var string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('country-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $countryCode;
    
    /**
     * ISO 3-letter country code
     * 
     * @var string $countryCode3
     */
	#[\JMS\Serializer\Annotation\SerializedName('country-code3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $countryCode3;
    
    /**
     * ISO 4217 currency code associated with the country
     * 
     * @var string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currencyCode;
    
    /**
     * The IPs host domain (only set if reverse-lookup has been used)
     * 
     * @var string $hostDomain
     */
	#[\JMS\Serializer\Annotation\SerializedName('host-domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $hostDomain;
    
    /**
     * The IPs full hostname (only set if reverse-lookup has been used)
     * 
     * @var string $hostname
     */
	#[\JMS\Serializer\Annotation\SerializedName('hostname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $hostname;
    
    /**
     * The IP address
     * 
     * @var string $ip
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ip;
    
    /**
     * True if this is a bogon IP address such as a private network, local network or reserved address
     * 
     * @var bool $isBogon
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-bogon')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isBogon;
    
    /**
     * True if this is a <a href="https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses">IPv4 mapped IPv6 address</a>
     * 
     * @var bool $isV4Mapped
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-v4-mapped')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isV4Mapped;
    
    /**
     * True if this is a IPv6 address. False if IPv4
     * 
     * @var bool $isV6
     */
	#[\JMS\Serializer\Annotation\SerializedName('is-v6')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isV6;
    
    /**
     * Location latitude
     * 
     * @var float $latitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('latitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $latitude;
    
    /**
     * Location longitude
     * 
     * @var float $longitude
     */
	#[\JMS\Serializer\Annotation\SerializedName('longitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $longitude;
    
    /**
     * Name of the region (if detectable)
     * 
     * @var string $region
     */
	#[\JMS\Serializer\Annotation\SerializedName('region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $region;
    
    /**
     * ISO 3166-2 region code (if detectable)
     * 
     * @var string $regionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('region-code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $regionCode;
    
    /**
     * Map containing timezone details
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Timezone $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Timezone')]
    public Timezone $timezone;
    
    /**
     * True if this is a valid IPv4 or IPv6 address
     * 
     * @var bool $valid
     */
	#[\JMS\Serializer\Annotation\SerializedName('valid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $valid;
    
	public function __construct()
	{
		$this->city = "";
		$this->continentCode = "";
		$this->country = "";
		$this->countryCode = "";
		$this->countryCode3 = "";
		$this->currencyCode = "";
		$this->hostDomain = "";
		$this->hostname = "";
		$this->ip = "";
		$this->isBogon = false;
		$this->isV4Mapped = false;
		$this->isV6 = false;
		$this->latitude = 0;
		$this->longitude = 0;
		$this->region = "";
		$this->regionCode = "";
		$this->timezone = new \OpenAPI\OpenAPI\Models\Shared\Timezone();
		$this->valid = false;
	}
}
