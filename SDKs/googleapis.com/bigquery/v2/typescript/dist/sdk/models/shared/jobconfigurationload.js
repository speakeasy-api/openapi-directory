"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JobConfigurationLoad = void 0;
var utils_1 = require("../../../internal/utils");
var clustering_1 = require("./clustering");
var connectionproperty_1 = require("./connectionproperty");
var destinationtableproperties_1 = require("./destinationtableproperties");
var encryptionconfiguration_1 = require("./encryptionconfiguration");
var hivepartitioningoptions_1 = require("./hivepartitioningoptions");
var parquetoptions_1 = require("./parquetoptions");
var rangepartitioning_1 = require("./rangepartitioning");
var tablereference_1 = require("./tablereference");
var tableschema_1 = require("./tableschema");
var timepartitioning_1 = require("./timepartitioning");
var class_transformer_1 = require("class-transformer");
var JobConfigurationLoad = /** @class */ (function (_super) {
    __extends(JobConfigurationLoad, _super);
    function JobConfigurationLoad() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowJaggedRows" }),
        __metadata("design:type", Boolean)
    ], JobConfigurationLoad.prototype, "allowJaggedRows", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowQuotedNewlines" }),
        __metadata("design:type", Boolean)
    ], JobConfigurationLoad.prototype, "allowQuotedNewlines", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autodetect" }),
        __metadata("design:type", Boolean)
    ], JobConfigurationLoad.prototype, "autodetect", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clustering" }),
        (0, class_transformer_1.Type)(function () { return clustering_1.Clustering; }),
        __metadata("design:type", clustering_1.Clustering)
    ], JobConfigurationLoad.prototype, "clustering", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: connectionproperty_1.ConnectionProperty }),
        (0, class_transformer_1.Expose)({ name: "connectionProperties" }),
        (0, class_transformer_1.Type)(function () { return connectionproperty_1.ConnectionProperty; }),
        __metadata("design:type", Array)
    ], JobConfigurationLoad.prototype, "connectionProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createDisposition" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "createDisposition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createSession" }),
        __metadata("design:type", Boolean)
    ], JobConfigurationLoad.prototype, "createSession", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "decimalTargetTypes" }),
        __metadata("design:type", Array)
    ], JobConfigurationLoad.prototype, "decimalTargetTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destinationEncryptionConfiguration" }),
        (0, class_transformer_1.Type)(function () { return encryptionconfiguration_1.EncryptionConfiguration; }),
        __metadata("design:type", encryptionconfiguration_1.EncryptionConfiguration)
    ], JobConfigurationLoad.prototype, "destinationEncryptionConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destinationTable" }),
        (0, class_transformer_1.Type)(function () { return tablereference_1.TableReference; }),
        __metadata("design:type", tablereference_1.TableReference)
    ], JobConfigurationLoad.prototype, "destinationTable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "destinationTableProperties" }),
        (0, class_transformer_1.Type)(function () { return destinationtableproperties_1.DestinationTableProperties; }),
        __metadata("design:type", destinationtableproperties_1.DestinationTableProperties)
    ], JobConfigurationLoad.prototype, "destinationTableProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encoding" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "encoding", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fieldDelimiter" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "fieldDelimiter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hivePartitioningOptions" }),
        (0, class_transformer_1.Type)(function () { return hivepartitioningoptions_1.HivePartitioningOptions; }),
        __metadata("design:type", hivepartitioningoptions_1.HivePartitioningOptions)
    ], JobConfigurationLoad.prototype, "hivePartitioningOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ignoreUnknownValues" }),
        __metadata("design:type", Boolean)
    ], JobConfigurationLoad.prototype, "ignoreUnknownValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "jsonExtension" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "jsonExtension", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxBadRecords" }),
        __metadata("design:type", Number)
    ], JobConfigurationLoad.prototype, "maxBadRecords", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nullMarker" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "nullMarker", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parquetOptions" }),
        (0, class_transformer_1.Type)(function () { return parquetoptions_1.ParquetOptions; }),
        __metadata("design:type", parquetoptions_1.ParquetOptions)
    ], JobConfigurationLoad.prototype, "parquetOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "preserveAsciiControlCharacters" }),
        __metadata("design:type", Boolean)
    ], JobConfigurationLoad.prototype, "preserveAsciiControlCharacters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "projectionFields" }),
        __metadata("design:type", Array)
    ], JobConfigurationLoad.prototype, "projectionFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quote" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "quote", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rangePartitioning" }),
        (0, class_transformer_1.Type)(function () { return rangepartitioning_1.RangePartitioning; }),
        __metadata("design:type", rangepartitioning_1.RangePartitioning)
    ], JobConfigurationLoad.prototype, "rangePartitioning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referenceFileSchemaUri" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "referenceFileSchemaUri", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schema" }),
        (0, class_transformer_1.Type)(function () { return tableschema_1.TableSchema; }),
        __metadata("design:type", tableschema_1.TableSchema)
    ], JobConfigurationLoad.prototype, "schema", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schemaInline" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "schemaInline", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schemaInlineFormat" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "schemaInlineFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schemaUpdateOptions" }),
        __metadata("design:type", Array)
    ], JobConfigurationLoad.prototype, "schemaUpdateOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "skipLeadingRows" }),
        __metadata("design:type", Number)
    ], JobConfigurationLoad.prototype, "skipLeadingRows", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceFormat" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "sourceFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceUris" }),
        __metadata("design:type", Array)
    ], JobConfigurationLoad.prototype, "sourceUris", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timePartitioning" }),
        (0, class_transformer_1.Type)(function () { return timepartitioning_1.TimePartitioning; }),
        __metadata("design:type", timepartitioning_1.TimePartitioning)
    ], JobConfigurationLoad.prototype, "timePartitioning", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "useAvroLogicalTypes" }),
        __metadata("design:type", Boolean)
    ], JobConfigurationLoad.prototype, "useAvroLogicalTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "writeDisposition" }),
        __metadata("design:type", String)
    ], JobConfigurationLoad.prototype, "writeDisposition", void 0);
    return JobConfigurationLoad;
}(utils_1.SpeakeasyBase));
exports.JobConfigurationLoad = JobConfigurationLoad;
