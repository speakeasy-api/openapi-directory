"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventOPRs:
    r"""OPR, DPR, and CCWM for teams at the event."""
    
    ccwms: Optional[dict[str, float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ccwms'), 'exclude': lambda f: f is None }})
    r"""A key-value pair with team key (eg `frc254`) as key and CCWM as value."""  
    dprs: Optional[dict[str, float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dprs'), 'exclude': lambda f: f is None }})
    r"""A key-value pair with team key (eg `frc254`) as key and DPR as value."""  
    oprs: Optional[dict[str, float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oprs'), 'exclude': lambda f: f is None }})
    r"""A key-value pair with team key (eg `frc254`) as key and OPR as value."""  
    