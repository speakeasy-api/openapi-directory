// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectsListOrderEnum - The field by which to order. Default varies by endpoint/resource.
type ProjectsListOrderEnum string

const (
	ProjectsListOrderEnumPublishedDate ProjectsListOrderEnum = "published_date"
	ProjectsListOrderEnumModifiedDate  ProjectsListOrderEnum = "modified_date"
	ProjectsListOrderEnumViews         ProjectsListOrderEnum = "views"
)

func (e ProjectsListOrderEnum) ToPointer() *ProjectsListOrderEnum {
	return &e
}

func (e *ProjectsListOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "published_date":
		fallthrough
	case "modified_date":
		fallthrough
	case "views":
		*e = ProjectsListOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsListOrderEnum: %v", v)
	}
}

// ProjectsListOrderDirectionEnum
type ProjectsListOrderDirectionEnum string

const (
	ProjectsListOrderDirectionEnumAsc  ProjectsListOrderDirectionEnum = "asc"
	ProjectsListOrderDirectionEnumDesc ProjectsListOrderDirectionEnum = "desc"
)

func (e ProjectsListOrderDirectionEnum) ToPointer() *ProjectsListOrderDirectionEnum {
	return &e
}

func (e *ProjectsListOrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = ProjectsListOrderDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsListOrderDirectionEnum: %v", v)
	}
}

type ProjectsListRequest struct {
	// Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected.
	XCursor *string `header:"style=simple,explode=false,name=X-Cursor"`
	// only return collections from this group
	Group *int64 `queryParam:"style=form,explode=true,name=group"`
	// only return collections from this institution
	Institution *int64 `queryParam:"style=form,explode=true,name=institution"`
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// The field by which to order. Default varies by endpoint/resource.
	Order          *ProjectsListOrderEnum          `queryParam:"style=form,explode=true,name=order"`
	OrderDirection *ProjectsListOrderDirectionEnum `queryParam:"style=form,explode=true,name=order_direction"`
	// Page number. Used for pagination with page_size
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	PublishedSince *string `queryParam:"style=form,explode=true,name=published_since"`
}

type ProjectsListResponse struct {
	ContentType string
	Headers     map[string][]string
	// OK. An array of projects
	Projects    []shared.Project
	StatusCode  int
	RawResponse *http.Response
}
