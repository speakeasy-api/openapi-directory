/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OracleSourceConfig - Oracle data source configuration
 */
public class OracleSourceConfig {
    /**
     * Configuration to drop large object values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dropLargeObjects")
    public java.util.Map<String, Object> dropLargeObjects;

    public OracleSourceConfig withDropLargeObjects(java.util.Map<String, Object> dropLargeObjects) {
        this.dropLargeObjects = dropLargeObjects;
        return this;
    }
    
    /**
     * Oracle database structure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludeObjects")
    public OracleRdbms excludeObjects;

    public OracleSourceConfig withExcludeObjects(OracleRdbms excludeObjects) {
        this.excludeObjects = excludeObjects;
        return this;
    }
    
    /**
     * Oracle database structure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeObjects")
    public OracleRdbms includeObjects;

    public OracleSourceConfig withIncludeObjects(OracleRdbms includeObjects) {
        this.includeObjects = includeObjects;
        return this;
    }
    
    /**
     * Maximum number of concurrent backfill tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxConcurrentBackfillTasks")
    public Integer maxConcurrentBackfillTasks;

    public OracleSourceConfig withMaxConcurrentBackfillTasks(Integer maxConcurrentBackfillTasks) {
        this.maxConcurrentBackfillTasks = maxConcurrentBackfillTasks;
        return this;
    }
    
    /**
     * Maximum number of concurrent CDC tasks. The number should be non-negative. If not set (or set to 0), the system's default value is used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxConcurrentCdcTasks")
    public Integer maxConcurrentCdcTasks;

    public OracleSourceConfig withMaxConcurrentCdcTasks(Integer maxConcurrentCdcTasks) {
        this.maxConcurrentCdcTasks = maxConcurrentCdcTasks;
        return this;
    }
    
    /**
     * Configuration to stream large object values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamLargeObjects")
    public java.util.Map<String, Object> streamLargeObjects;

    public OracleSourceConfig withStreamLargeObjects(java.util.Map<String, Object> streamLargeObjects) {
        this.streamLargeObjects = streamLargeObjects;
        return this;
    }
    
    public OracleSourceConfig(){}
}
