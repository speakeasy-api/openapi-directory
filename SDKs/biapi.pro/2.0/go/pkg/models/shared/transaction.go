// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
	"time"
)

// Transaction - Successful DELETE on Transaction resource
type Transaction struct {
	// If false, PFM services will ignore this transaction
	Active bool `json:"active"`
	// Date considered by PFM services. It is used to change the month of a transaction, for example.
	ApplicationDate *types.Date `json:"application_date,omitempty"`
	// Date used by the bank for the transaction
	Bdate *types.Date `json:"bdate,omitempty"`
	// Datetime used by the bank
	Bdatetime *time.Time `json:"bdatetime,omitempty"`
	// Card number associated to the transaction
	Card *string `json:"card,omitempty"`
	// If true, this transaction hasn't been yet debited
	Coming bool `json:"coming"`
	// User comment
	Comment *string `json:"comment,omitempty"`
	// Commission taken on the transaction
	Commission *float32 `json:"commission,omitempty"`
	// Commission currency
	CommissionCurrency map[string]interface{} `json:"commission_currency,omitempty"`
	// Counterparty
	Counterparty *string `json:"counterparty,omitempty"`
	// Original country
	Country *string `json:"country,omitempty"`
	// Debit date
	Date types.Date `json:"date"`
	// Date when the transaction has been seen
	DateScraped time.Time `json:"date_scraped"`
	// Datetime of the debit of the transaction
	Datetime *time.Time `json:"datetime,omitempty"`
	// If set, this transaction has been removed from the bank
	Deleted *time.Time `json:"deleted,omitempty"`
	// Gross value of the transaction
	GrossValue *float32 `json:"gross_value,omitempty"`
	// ID of the transaction
	ID int64 `json:"id"`
	// ID of the related account
	IDAccount int64 `json:"id_account"`
	// ID of the related category
	IDCategory *int64 `json:"id_category,omitempty"`
	// If the transaction is part of a cluster
	IDCluster *int64 `json:"id_cluster,omitempty"`
	// Last update of the transaction
	LastUpdate *time.Time `json:"last_update,omitempty"`
	// Type of transaction
	Nature string `json:"nature"`
	// Original currency
	OriginalCurrency map[string]interface{} `json:"original_currency,omitempty"`
	// Gross value in the original currency
	OriginalGrossValue *float32 `json:"original_gross_value,omitempty"`
	// Value in the original currency
	OriginalValue *float32 `json:"original_value,omitempty"`
	// Full label of the transaction
	OriginalWording string `json:"original_wording"`
	// Realization of the transaction
	Rdate types.Date `json:"rdate"`
	// Datetime of the realization of the transaction
	Rdatetime *time.Time `json:"rdatetime,omitempty"`
	// Simplified label of the transaction
	SimplifiedWording string `json:"simplified_wording"`
	// Internal state of the transaction
	State string `json:"state"`
	// Do not use it
	StemmedWording string `json:"stemmed_wording"`
	// Value of the transaction
	Value *float32 `json:"value,omitempty"`
	// Value date of the transaction
	Vdate *types.Date `json:"vdate,omitempty"`
	// Datetime of the Value of the transaction
	Vdatetime *time.Time `json:"vdatetime,omitempty"`
	// Webid of the transaction
	Webid *string `json:"webid,omitempty"`
	// Label set by the user
	Wording *string `json:"wording,omitempty"`
}
