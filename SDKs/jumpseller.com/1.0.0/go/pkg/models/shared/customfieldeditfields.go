// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomFieldEditFieldsTypeEnum - Type of the Custom Field
type CustomFieldEditFieldsTypeEnum string

const (
	CustomFieldEditFieldsTypeEnumText      CustomFieldEditFieldsTypeEnum = "text"
	CustomFieldEditFieldsTypeEnumSelection CustomFieldEditFieldsTypeEnum = "selection"
	CustomFieldEditFieldsTypeEnumInput     CustomFieldEditFieldsTypeEnum = "input"
)

func (e *CustomFieldEditFieldsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "text":
		fallthrough
	case "selection":
		fallthrough
	case "input":
		*e = CustomFieldEditFieldsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomFieldEditFieldsTypeEnum: %s", s)
	}
}

type CustomFieldEditFields struct {
	// Label given to the Custom Field
	Label *string `json:"label,omitempty"`
	// Type of the Custom Field
	Type *CustomFieldEditFieldsTypeEnum `json:"type,omitempty"`
	// All the possible Values of the Custom Field (for type 'selection')
	Values []string `json:"values,omitempty"`
}
