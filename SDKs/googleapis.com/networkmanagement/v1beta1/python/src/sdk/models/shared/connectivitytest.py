"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import endpoint as shared_endpoint
from ..shared import probingdetails as shared_probingdetails
from ..shared import reachabilitydetails as shared_reachabilitydetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectivityTestInput:
    r"""A Connectivity Test for a network reachability analysis."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The user-supplied description of the Connectivity Test. Maximum of 512 characters."""  
    destination: Optional[shared_endpoint.EndpointInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destination'), 'exclude': lambda f: f is None }})
    r"""Source or destination of the Connectivity Test."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Resource labels to represent user-provided metadata."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. Unique name of the resource using the form: `projects/{project_id}/locations/global/connectivityTests/{test}`"""  
    probing_details: Optional[shared_probingdetails.ProbingDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('probingDetails'), 'exclude': lambda f: f is None }})
    r"""Results of active probing from the last run of the test."""  
    protocol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol'), 'exclude': lambda f: f is None }})
    r"""IP Protocol of the test. When not provided, \\"TCP\\" is assumed."""  
    reachability_details: Optional[shared_reachabilitydetails.ReachabilityDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reachabilityDetails'), 'exclude': lambda f: f is None }})
    r"""Results of the configuration analysis from the last run of the test."""  
    related_projects: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedProjects'), 'exclude': lambda f: f is None }})
    r"""Other projects that may be relevant for reachability analysis. This is applicable to scenarios where a test can cross project boundaries."""  
    source: Optional[shared_endpoint.EndpointInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""Source or destination of the Connectivity Test."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectivityTest:
    r"""A Connectivity Test for a network reachability analysis."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time the test was created."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The user-supplied description of the Connectivity Test. Maximum of 512 characters."""  
    destination: Optional[shared_endpoint.Endpoint] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destination'), 'exclude': lambda f: f is None }})
    r"""Source or destination of the Connectivity Test."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Output only. The display name of a Connectivity Test."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Resource labels to represent user-provided metadata."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. Unique name of the resource using the form: `projects/{project_id}/locations/global/connectivityTests/{test}`"""  
    probing_details: Optional[shared_probingdetails.ProbingDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('probingDetails'), 'exclude': lambda f: f is None }})
    r"""Results of active probing from the last run of the test."""  
    protocol: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol'), 'exclude': lambda f: f is None }})
    r"""IP Protocol of the test. When not provided, \\"TCP\\" is assumed."""  
    reachability_details: Optional[shared_reachabilitydetails.ReachabilityDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reachabilityDetails'), 'exclude': lambda f: f is None }})
    r"""Results of the configuration analysis from the last run of the test."""  
    related_projects: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedProjects'), 'exclude': lambda f: f is None }})
    r"""Other projects that may be relevant for reachability analysis. This is applicable to scenarios where a test can cross project boundaries."""  
    source: Optional[shared_endpoint.Endpoint] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""Source or destination of the Connectivity Test."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time the test's configuration was updated."""  
    