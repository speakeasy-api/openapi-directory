"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import teamelorating as shared_teamelorating
from typing import Optional


@dataclasses.dataclass
class GetEloRatingsRequest:
    
    conference: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'conference', 'style': 'form', 'explode': True }})
    r"""Conference filter"""  
    team: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'team', 'style': 'form', 'explode': True }})
    r"""Team filter"""  
    week: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'week', 'style': 'form', 'explode': True }})
    r"""Maximum week filter"""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'year', 'style': 'form', 'explode': True }})
    r"""Season filter"""  
    

@dataclasses.dataclass
class GetEloRatingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    team_elo_ratings: Optional[list[shared_teamelorating.TeamEloRating]] = dataclasses.field(default=None)
    r"""successful operation"""  
    