"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class AvatarsGetQRSecurity:
    
    jwt: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Appwrite-JWT' }})  
    project: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Appwrite-Project' }})  
    

@dataclasses.dataclass
class AvatarsGetQRRequest:
    
    text: str = dataclasses.field(metadata={'query_param': { 'field_name': 'text', 'style': 'form', 'explode': True }})
    r"""Plain text to be converted to QR code image."""  
    download: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'download', 'style': 'form', 'explode': True }})
    r"""Return resulting image with 'Content-Disposition: attachment ' headers for the browser to start downloading it. Pass 0 for no header, or 1 for otherwise. Default value is set to 0."""  
    margin: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'margin', 'style': 'form', 'explode': True }})
    r"""Margin from edge. Pass an integer between 0 to 10. Defaults to 1."""  
    size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'size', 'style': 'form', 'explode': True }})
    r"""QR code size. Pass an integer between 0 to 1000. Defaults to 400."""  
    

@dataclasses.dataclass
class AvatarsGetQRResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    