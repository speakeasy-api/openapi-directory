<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GETJournalEntryDetailType - Container for custom fields of a Journal Entry object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GETJournalEntryDetailType
{
    /**
     * Name of the accounting period that the journal entry belongs to.
     * 
     * 
     * 
     * @var ?string $accountingPeriodName
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountingPeriodName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountingPeriodName = null;
    
    /**
     * Returns true if the journal entry is aggregating currencies. That is, if the journal entry was created when the `Aggregate transactions with different currencies during a Journal Run` setting was configured to `Yes`. Otherwise, returns `false`.
     * 
     * 
     * 
     * @var ?bool $aggregateCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('aggregateCurrency')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $aggregateCurrency = null;
    
    /**
     * Currency used.
     * 
     * 
     * 
     * @var ?string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
    /**
     * Home currency used.
     * 
     * 
     * 
     * @var ?string $homeCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('homeCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $homeCurrency = null;
    
    /**
     * Date of the journal entry.
     * 
     * 
     * 
     * @var ?\DateTime $journalEntryDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('journalEntryDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $journalEntryDate = null;
    
    /**
     * Key name that represents the list of journal entry items.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GETJournalEntryItemType> $journalEntryItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('journalEntryItems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GETJournalEntryItemType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $journalEntryItems = null;
    
    /**
     * 
     * Additional information about this record.
     * Character limit: 2,000
     * 
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * Journal entry number in the format JE-00000001.
     * 
     * 
     * 
     * @var ?string $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $number = null;
    
    /**
     * List of segments that apply to the summary journal entry.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GETJournalEntrySegmentType> $segments
     */
	#[\JMS\Serializer\Annotation\SerializedName('segments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GETJournalEntrySegmentType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $segments = null;
    
    /**
     * Status of journal entry.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETJournalEntryDetailTypeStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETJournalEntryDetailTypeStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETJournalEntryDetailTypeStatusEnum $status = null;
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     * 
     * 
     * @var ?bool $success
     */
	#[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $success = null;
    
    /**
     * End date of time period included in the journal entry.
     * 
     * 
     * 
     * @var ?\DateTime $timePeriodEnd
     */
	#[\JMS\Serializer\Annotation\SerializedName('timePeriodEnd')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $timePeriodEnd = null;
    
    /**
     * Start date of time period included in the journal entry.
     * 
     * 
     * 
     * @var ?\DateTime $timePeriodStart
     */
	#[\JMS\Serializer\Annotation\SerializedName('timePeriodStart')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $timePeriodStart = null;
    
    /**
     * Transaction type of the transactions included in the summary journal entry.
     * 
     * 
     * 
     * @var ?string $transactionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionType = null;
    
    /**
     * Date and time that transferredToAccounting was changed to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.
     * 
     * 
     * 
     * @var ?\DateTime $transferDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $transferDateTime = null;
    
    /**
     * User ID of the person who changed transferredToAccounting to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.
     * 
     * 
     * 
     * @var ?string $transferredBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferredBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transferredBy = null;
    
    /**
     * Status shows whether the journal entry has been transferred to an accounting system. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GETJournalEntryDetailTypeTransferredToAccountingEnum $transferredToAccounting
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferredToAccounting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GETJournalEntryDetailTypeTransferredToAccountingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GETJournalEntryDetailTypeTransferredToAccountingEnum $transferredToAccounting = null;
    
	public function __construct()
	{
		$this->accountingPeriodName = null;
		$this->aggregateCurrency = null;
		$this->currency = null;
		$this->homeCurrency = null;
		$this->journalEntryDate = null;
		$this->journalEntryItems = null;
		$this->notes = null;
		$this->number = null;
		$this->segments = null;
		$this->status = null;
		$this->success = null;
		$this->timePeriodEnd = null;
		$this->timePeriodStart = null;
		$this->transactionType = null;
		$this->transferDateTime = null;
		$this->transferredBy = null;
		$this->transferredToAccounting = null;
	}
}
