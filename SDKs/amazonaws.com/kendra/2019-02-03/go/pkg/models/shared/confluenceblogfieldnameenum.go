// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConfluenceBlogFieldNameEnum string

const (
	ConfluenceBlogFieldNameEnumAuthor      ConfluenceBlogFieldNameEnum = "AUTHOR"
	ConfluenceBlogFieldNameEnumDisplayURL  ConfluenceBlogFieldNameEnum = "DISPLAY_URL"
	ConfluenceBlogFieldNameEnumItemType    ConfluenceBlogFieldNameEnum = "ITEM_TYPE"
	ConfluenceBlogFieldNameEnumLabels      ConfluenceBlogFieldNameEnum = "LABELS"
	ConfluenceBlogFieldNameEnumPublishDate ConfluenceBlogFieldNameEnum = "PUBLISH_DATE"
	ConfluenceBlogFieldNameEnumSpaceKey    ConfluenceBlogFieldNameEnum = "SPACE_KEY"
	ConfluenceBlogFieldNameEnumSpaceName   ConfluenceBlogFieldNameEnum = "SPACE_NAME"
	ConfluenceBlogFieldNameEnumURL         ConfluenceBlogFieldNameEnum = "URL"
	ConfluenceBlogFieldNameEnumVersion     ConfluenceBlogFieldNameEnum = "VERSION"
)

func (e ConfluenceBlogFieldNameEnum) ToPointer() *ConfluenceBlogFieldNameEnum {
	return &e
}

func (e *ConfluenceBlogFieldNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTHOR":
		fallthrough
	case "DISPLAY_URL":
		fallthrough
	case "ITEM_TYPE":
		fallthrough
	case "LABELS":
		fallthrough
	case "PUBLISH_DATE":
		fallthrough
	case "SPACE_KEY":
		fallthrough
	case "SPACE_NAME":
		fallthrough
	case "URL":
		fallthrough
	case "VERSION":
		*e = ConfluenceBlogFieldNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfluenceBlogFieldNameEnum: %v", v)
	}
}
