<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FleetCapacity - <p>Current resource capacity settings in a specified fleet or location. The location value might refer to a fleet's remote location or its home Region. </p> <p> <b>Related actions</b> </p> <p> <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_DescribeFleetCapacity.html">DescribeFleetCapacity</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_DescribeFleetLocationCapacity.html">DescribeFleetLocationCapacity</a> | <a href="https://docs.aws.amazon.com/gamelift/latest/apireference/API_UpdateFleetCapacity.html">UpdateFleetCapacity</a> </p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FleetCapacity
{
	#[\JMS\Serializer\Annotation\SerializedName('FleetArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fleetArn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('FleetId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fleetId = null;
    
    /**
     * Resource capacity settings. Fleet capacity is measured in Amazon EC2 instances. Pending and terminating counts are non-zero when the fleet capacity is adjusting to a scaling event or if access to resources is temporarily affected.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Ec2InstanceCounts $instanceCounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('InstanceCounts')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Ec2InstanceCounts')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Ec2InstanceCounts $instanceCounts = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('InstanceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\Ec2InstanceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Ec2InstanceTypeEnum $instanceType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
	public function __construct()
	{
		$this->fleetArn = null;
		$this->fleetId = null;
		$this->instanceCounts = null;
		$this->instanceType = null;
		$this->location = null;
	}
}
