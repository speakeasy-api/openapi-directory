/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Asset - Represents and describes an asset in the Poly library. An asset is a 3D model or scene created using [Tilt Brush](//www.tiltbrush.com), [Blocks](//vr.google.com/blocks/), or any 3D program that produces a file that can be upload to Poly.
 */
public class Asset {
    /**
     * The author's publicly visible name. Use this name when giving credit to the author. For more information, see [Licensing](/poly/discover/licensing).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorName")
    public String authorName;
    public Asset withAuthorName(String authorName) {
        this.authorName = authorName;
        return this;
    }
    
    /**
     * For published assets, the time when the asset was published. For unpublished assets, the time when the asset was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public Asset withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The human-readable description, set by the asset's author.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Asset withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The human-readable name, set by the asset's author.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public Asset withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A list of Formats where each format describes one representation of the asset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formats")
    public Format[] formats;
    public Asset withFormats(Format[] formats) {
        this.formats = formats;
        return this;
    }
    
    /**
     * Whether this asset has been curated by the Poly team.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCurated")
    public Boolean isCurated;
    public Asset withIsCurated(Boolean isCurated) {
        this.isCurated = isCurated;
        return this;
    }
    
    /**
     * The license under which the author has made the asset available for use, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("license")
    public AssetLicenseEnum license;
    public Asset withLicense(AssetLicenseEnum license) {
        this.license = license;
        return this;
    }
    
    /**
     * Application-defined opaque metadata for this asset. This field is only returned when querying for the signed-in user's own assets, not for public assets. This string is limited to 1K chars. It is up to the creator of the asset to define the format for this string (for example, JSON).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public String metadata;
    public Asset withMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The unique identifier for the asset in the form: `assets/{ASSET_ID}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Asset withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Hints for displaying the asset, based on information available when the asset was uploaded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("presentationParams")
    public PresentationParams presentationParams;
    public Asset withPresentationParams(PresentationParams presentationParams) {
        this.presentationParams = presentationParams;
        return this;
    }
    
    /**
     * Info about the sources of this asset (i.e. assets that were remixed to create this asset).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remixInfo")
    public RemixInfo remixInfo;
    public Asset withRemixInfo(RemixInfo remixInfo) {
        this.remixInfo = remixInfo;
        return this;
    }
    
    /**
     * Represents a file in Poly, which can be a root, resource, or thumbnail file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnail")
    public File thumbnail;
    public Asset withThumbnail(File thumbnail) {
        this.thumbnail = thumbnail;
        return this;
    }
    
    /**
     * The time when the asset was last modified. For published assets, whose contents are immutable, the update time changes only when metadata properties, such as visibility, are updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public Asset withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * The visibility of the asset and who can access it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visibility")
    public AssetVisibilityEnum visibility;
    public Asset withVisibility(AssetVisibilityEnum visibility) {
        this.visibility = visibility;
        return this;
    }
    
}
