/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Action } from "./action";
import { EventSource } from "./eventsource";
import { ParametersT } from "./parameters";
import { PolicyTypeValuesEnum } from "./policytypevaluesenum";
import { ResourceLocationValuesEnum } from "./resourcelocationvaluesenum";
import { ResourceTypeValuesEnum } from "./resourcetypevaluesenum";
import { Schedule } from "./schedule";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 *  <b>[All policy types]</b> Specifies the configuration of a lifecycle policy.
 */
export class PolicyDetails extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Action })
  @Expose({ name: "Actions" })
  @Type(() => Action)
  actions?: Action[];

  @SpeakeasyMetadata()
  @Expose({ name: "EventSource" })
  @Type(() => EventSource)
  eventSource?: EventSource;

  @SpeakeasyMetadata()
  @Expose({ name: "Parameters" })
  @Type(() => ParametersT)
  parameters?: ParametersT;

  @SpeakeasyMetadata()
  @Expose({ name: "PolicyType" })
  policyType?: PolicyTypeValuesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceLocations" })
  resourceLocations?: ResourceLocationValuesEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceTypes" })
  resourceTypes?: ResourceTypeValuesEnum[];

  @SpeakeasyMetadata({ elemType: Schedule })
  @Expose({ name: "Schedules" })
  @Type(() => Schedule)
  schedules?: Schedule[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "TargetTags" })
  @Type(() => Tag)
  targetTags?: Tag[];
}
