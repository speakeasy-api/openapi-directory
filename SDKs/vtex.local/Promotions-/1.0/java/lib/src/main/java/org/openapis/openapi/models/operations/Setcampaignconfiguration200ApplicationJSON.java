/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Setcampaignconfiguration200ApplicationJSON - OK
 */
public class Setcampaignconfiguration200ApplicationJSON {
    /**
     * Start date of the campaign audience in UTC format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beginDateUtc")
    public String beginDateUtc;

    public Setcampaignconfiguration200ApplicationJSON withBeginDateUtc(String beginDateUtc) {
        this.beginDateUtc = beginDateUtc;
        return this;
    }
    
    /**
     * End date of the campaign audience in UTC format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endDateUtc")
    public String endDateUtc;

    public Setcampaignconfiguration200ApplicationJSON withEndDateUtc(String endDateUtc) {
        this.endDateUtc = endDateUtc;
        return this;
    }
    
    /**
     * Campaign audience ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Setcampaignconfiguration200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Defines if the campaign audience is active (`true`) or not (`false`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isActive")
    public Boolean isActive;

    public Setcampaignconfiguration200ApplicationJSON withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAndOperator")
    public Boolean isAndOperator;

    public Setcampaignconfiguration200ApplicationJSON withIsAndOperator(Boolean isAndOperator) {
        this.isAndOperator = isAndOperator;
        return this;
    }
    
    /**
     * Defines if the campaign audience is archived (`true`) or not (`false`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isArchived")
    public Boolean isArchived;

    public Setcampaignconfiguration200ApplicationJSON withIsArchived(Boolean isArchived) {
        this.isArchived = isArchived;
        return this;
    }
    
    /**
     * Object with information about the most recent update of the campaign audience.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModified")
    public Setcampaignconfiguration200ApplicationJSONLastModified lastModified;

    public Setcampaignconfiguration200ApplicationJSON withLastModified(Setcampaignconfiguration200ApplicationJSONLastModified lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * Campaign audience name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Setcampaignconfiguration200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Array that contains all target audience that the campaign audience will be valid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetConfigurations")
    public Setcampaignconfiguration200ApplicationJSONTargetConfigurations[] targetConfigurations;

    public Setcampaignconfiguration200ApplicationJSON withTargetConfigurations(Setcampaignconfiguration200ApplicationJSONTargetConfigurations[] targetConfigurations) {
        this.targetConfigurations = targetConfigurations;
        return this;
    }
    
    public Setcampaignconfiguration200ApplicationJSON(){}
}
