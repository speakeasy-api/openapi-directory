/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InputConfig } from "./inputconfig";
import { NeoVpcConfig } from "./neovpcconfig";
import { OutputConfig } from "./outputconfig";
import { StoppingCondition } from "./stoppingcondition";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateCompilationJobRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CompilationJobName" })
  compilationJobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InputConfig" })
  @Type(() => InputConfig)
  inputConfig?: InputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageVersionArn" })
  modelPackageVersionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputConfig" })
  @Type(() => OutputConfig)
  outputConfig: OutputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StoppingCondition" })
  @Type(() => StoppingCondition)
  stoppingCondition: StoppingCondition;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfig" })
  @Type(() => NeoVpcConfig)
  vpcConfig?: NeoVpcConfig;
}
