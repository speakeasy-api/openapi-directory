// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InvoiceSubmissionActionEvidenceTransmissionResultEnum - The result of this transmission.
type InvoiceSubmissionActionEvidenceTransmissionResultEnum string

const (
	InvoiceSubmissionActionEvidenceTransmissionResultEnumUnknown       InvoiceSubmissionActionEvidenceTransmissionResultEnum = "unknown"
	InvoiceSubmissionActionEvidenceTransmissionResultEnumAccepted      InvoiceSubmissionActionEvidenceTransmissionResultEnum = "accepted"
	InvoiceSubmissionActionEvidenceTransmissionResultEnumRejected      InvoiceSubmissionActionEvidenceTransmissionResultEnum = "rejected"
	InvoiceSubmissionActionEvidenceTransmissionResultEnumSendError     InvoiceSubmissionActionEvidenceTransmissionResultEnum = "send_error"
	InvoiceSubmissionActionEvidenceTransmissionResultEnumInternalError InvoiceSubmissionActionEvidenceTransmissionResultEnum = "internal_error"
)

func (e *InvoiceSubmissionActionEvidenceTransmissionResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "unknown":
		fallthrough
	case "accepted":
		fallthrough
	case "rejected":
		fallthrough
	case "send_error":
		fallthrough
	case "internal_error":
		*e = InvoiceSubmissionActionEvidenceTransmissionResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceSubmissionActionEvidenceTransmissionResultEnum: %s", s)
	}
}

// InvoiceSubmissionActionEvidenceTransmissionTypeEnum - How the document was transmitted.
type InvoiceSubmissionActionEvidenceTransmissionTypeEnum string

const (
	InvoiceSubmissionActionEvidenceTransmissionTypeEnumEmail   InvoiceSubmissionActionEvidenceTransmissionTypeEnum = "email"
	InvoiceSubmissionActionEvidenceTransmissionTypeEnumEdi     InvoiceSubmissionActionEvidenceTransmissionTypeEnum = "edi"
	InvoiceSubmissionActionEvidenceTransmissionTypeEnumAs2     InvoiceSubmissionActionEvidenceTransmissionTypeEnum = "as2"
	InvoiceSubmissionActionEvidenceTransmissionTypeEnumPeppol  InvoiceSubmissionActionEvidenceTransmissionTypeEnum = "peppol"
	InvoiceSubmissionActionEvidenceTransmissionTypeEnumSandbox InvoiceSubmissionActionEvidenceTransmissionTypeEnum = "sandbox"
)

func (e *InvoiceSubmissionActionEvidenceTransmissionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "email":
		fallthrough
	case "edi":
		fallthrough
	case "as2":
		fallthrough
	case "peppol":
		fallthrough
	case "sandbox":
		*e = InvoiceSubmissionActionEvidenceTransmissionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceSubmissionActionEvidenceTransmissionTypeEnum: %s", s)
	}
}

type InvoiceSubmissionActionEvidence struct {
	// The response the receiver sent.
	ReceiverResponse *string `json:"receiver_response,omitempty"`
	// The DateTime of the transmission, as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z.
	TransmissionDatetime *string `json:"transmission_datetime,omitempty"`
	// The result of this transmission.
	TransmissionResult *InvoiceSubmissionActionEvidenceTransmissionResultEnum `json:"transmission_result,omitempty"`
	// How the document was transmitted.
	TransmissionType *InvoiceSubmissionActionEvidenceTransmissionTypeEnum `json:"transmission_type,omitempty"`
	// The document that was transmitted.
	TransmittedDocument *string `json:"transmitted_document,omitempty"`
}
