/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserInfo - User information
 */
public class UserInfo {
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Avatar UUID
     */
    @JsonProperty("avatarUuid")
    public String avatarUuid;
    public UserInfo withAvatarUuid(String avatarUuid) {
        this.avatarUuid = avatarUuid;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Display name
     * 
     * use other fields from `UserInfo` instead to combine a display name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public UserInfo withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Email 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public UserInfo withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * User first name (mandatory if `userType` is `internal`)
     */
    @JsonProperty("firstName")
    public String firstName;
    public UserInfo withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Unique identifier for the user
     */
    @JsonProperty("id")
    public Long id;
    public UserInfo withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * User last name (mandatory if `userType` is `internal`)
     */
    @JsonProperty("lastName")
    public String lastName;
    public UserInfo withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.18.0
     * 
     * Job title
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public UserInfo withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.13.0
     * 
     * Username (only returned for `internal` users)
     */
    @JsonProperty("userName")
    public String userName;
    public UserInfo withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * User type:
     * 
     * * `internal` - ordinary DRACOON user
     * 
     * * `external` - external user without DRACOON account
     * 
     * * `system` - system user (non human &amp;#128125;)
     * 
     * * `deleted` - deleted DRACOON user
     */
    @JsonProperty("userType")
    public UserInfoUserTypeEnum userType;
    public UserInfo withUserType(UserInfoUserTypeEnum userType) {
        this.userType = userType;
        return this;
    }
    
}
