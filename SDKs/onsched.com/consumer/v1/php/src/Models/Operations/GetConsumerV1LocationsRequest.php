<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetConsumerV1LocationsRequest
{
    /**
     * Frienldy Id of location
     * 
     * @var ?string $friendlyId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=friendlyId')]
    public ?string $friendlyId = null;
    
    /**
     * Don't include the Primary Location
     * 
     * @var ?bool $ignorePrimary
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ignorePrimary')]
    public ?bool $ignorePrimary = null;
    
    /**
     * Page limit, default 20, max 100
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Location name (full or partial)
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * Search by distance nearest Geocoords, City, Postal/Zip Code
     * 
     * @var ?string $nearestTo
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=nearestTo')]
    public ?string $nearestTo = null;
    
    /**
     * Starting row of page, default 0
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Maximum distance to display
     * 
     * @var ?int $proximity
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=proximity')]
    public ?int $proximity = null;
    
    /**
     * Locations within a specific region
     * 
     * @var ?string $regionId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=regionId')]
    public ?string $regionId = null;
    
    /**
     * Locations that offer this service
     * 
     * @var ?string $serviceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=serviceId')]
    public ?string $serviceId = null;
    
    /**
     * Distance either imperial(miles), metric(kilometers)
     * 
     * @var ?string $units
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=units')]
    public ?string $units = null;
    
	public function __construct()
	{
		$this->friendlyId = null;
		$this->ignorePrimary = null;
		$this->limit = null;
		$this->name = null;
		$this->nearestTo = null;
		$this->offset = null;
		$this->proximity = null;
		$this->regionId = null;
		$this->serviceId = null;
		$this->units = null;
	}
}
