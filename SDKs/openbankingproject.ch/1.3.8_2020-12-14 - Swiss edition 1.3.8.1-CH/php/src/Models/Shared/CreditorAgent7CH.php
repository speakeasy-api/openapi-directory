<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreditorAgent7CH - Reference to an creditorAgent by either
 * 
 *   * BIC, of the creditor bank, or
 *   * IID, of the creditor bank, or
 *   * IID and optional name and address of the creditor bank or
 *   * Name and address of the creditor bank
 * adapted from ISO pain.001.001.03.ch.02 FinancialInstitutionIdentification7-CH
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreditorAgent7CH
{
    /**
     * as in ISO pain.001.001.03.ch.02 PostalAddress6
     * 
     * If possible structured. Simultaneous use of the structured elements <StrtNm>/ <BldgNb>/<PstCd>/<TwnNm> and the unstructured element <AdrLine> is not permitted.
     * as in ISO pain.001.001.03.ch.02 PostalAddress6-CH
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PostalAddress6CH $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PostalAddress6CH')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostalAddress6CH $address = null;
    
    /**
     * BICFI
     * 
     * 
     * 
     * @var ?string $bic
     */
	#[\JMS\Serializer\Annotation\SerializedName('bic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bic = null;
    
    /**
     * Institiutional identification of a bank (Clearing System Member ID)
     * 
     * adapted from ISO pain.001.001.03.ch.02 ClearingSystemMemberIdentification2
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InstitutionalIdentification2 $iid
     */
	#[\JMS\Serializer\Annotation\SerializedName('iid')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InstitutionalIdentification2')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstitutionalIdentification2 $iid = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->bic = null;
		$this->iid = null;
		$this->name = null;
	}
}
