/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WalletTransactionListRequest - WalletTransactionListRequest defines the request schema for `/wallet/transaction/list`
 */
public class WalletTransactionListRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public WalletTransactionListRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * The number of transactions to fetch
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Long count;

    public WalletTransactionListRequest withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * A base64 value representing the latest transaction that has already been requested. Set this to `next_cursor` received from the previous `/wallet/transaction/list` request. If provided, the response will only contain transactions created before that transaction. If omitted, the response will contain transactions starting from the most recent, and in descending order by the `created_at` time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cursor")
    public String cursor;

    public WalletTransactionListRequest withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * Additional wallet transaction options
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public WalletTransactionListRequestOptions options;

    public WalletTransactionListRequest withOptions(WalletTransactionListRequestOptions options) {
        this.options = options;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;

    public WalletTransactionListRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * The ID of the e-wallet to fetch transactions from
     */
    @JsonProperty("wallet_id")
    public String walletId;

    public WalletTransactionListRequest withWalletId(String walletId) {
        this.walletId = walletId;
        return this;
    }
    
    public WalletTransactionListRequest(@JsonProperty("wallet_id") String walletId) {
        this.walletId = walletId;
  }
}
