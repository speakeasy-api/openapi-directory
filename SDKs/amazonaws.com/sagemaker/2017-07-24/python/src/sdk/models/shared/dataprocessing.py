"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import joinsource_enum as shared_joinsource_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataProcessing:
    r"""The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see <a href=\\"https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html\\">Associate Prediction Results with their Corresponding Input Records</a>."""
    
    input_filter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputFilter'), 'exclude': lambda f: f is None }})  
    join_source: Optional[shared_joinsource_enum.JoinSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JoinSource'), 'exclude': lambda f: f is None }})  
    output_filter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputFilter'), 'exclude': lambda f: f is None }})  
    