/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDataplexV1DataQualityRule - A rule captures data quality intent about a data source.
 */
public class GoogleCloudDataplexV1DataQualityRule {
    /**
     * Optional. The unnested column which this rule is evaluated against.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("column")
    public String column;

    public GoogleCloudDataplexV1DataQualityRule withColumn(String column) {
        this.column = column;
        return this;
    }
    
    /**
     * Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimension")
    public String dimension;

    public GoogleCloudDataplexV1DataQualityRule withDimension(String dimension) {
        this.dimension = dimension;
        return this;
    }
    
    /**
     * Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ignoreNull")
    public Boolean ignoreNull;

    public GoogleCloudDataplexV1DataQualityRule withIgnoreNull(Boolean ignoreNull) {
        this.ignoreNull = ignoreNull;
        return this;
    }
    
    /**
     * Evaluates whether each column value is null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonNullExpectation")
    public java.util.Map<String, Object> nonNullExpectation;

    public GoogleCloudDataplexV1DataQualityRule withNonNullExpectation(java.util.Map<String, Object> nonNullExpectation) {
        this.nonNullExpectation = nonNullExpectation;
        return this;
    }
    
    /**
     * Evaluates whether each column value lies between a specified range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rangeExpectation")
    public GoogleCloudDataplexV1DataQualityRuleRangeExpectation rangeExpectation;

    public GoogleCloudDataplexV1DataQualityRule withRangeExpectation(GoogleCloudDataplexV1DataQualityRuleRangeExpectation rangeExpectation) {
        this.rangeExpectation = rangeExpectation;
        return this;
    }
    
    /**
     * Evaluates whether each column value matches a specified regex.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regexExpectation")
    public GoogleCloudDataplexV1DataQualityRuleRegexExpectation regexExpectation;

    public GoogleCloudDataplexV1DataQualityRule withRegexExpectation(GoogleCloudDataplexV1DataQualityRuleRegexExpectation regexExpectation) {
        this.regexExpectation = regexExpectation;
        return this;
    }
    
    /**
     * Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 &gt;= 0 AND col2 &lt; 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rowConditionExpectation")
    public GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation rowConditionExpectation;

    public GoogleCloudDataplexV1DataQualityRule withRowConditionExpectation(GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation rowConditionExpectation) {
        this.rowConditionExpectation = rowConditionExpectation;
        return this;
    }
    
    /**
     * Evaluates whether each column value is contained by a specified set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("setExpectation")
    public GoogleCloudDataplexV1DataQualityRuleSetExpectation setExpectation;

    public GoogleCloudDataplexV1DataQualityRule withSetExpectation(GoogleCloudDataplexV1DataQualityRuleSetExpectation setExpectation) {
        this.setExpectation = setExpectation;
        return this;
    }
    
    /**
     * Evaluates whether the column aggregate statistic lies between a specified range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statisticRangeExpectation")
    public GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation statisticRangeExpectation;

    public GoogleCloudDataplexV1DataQualityRule withStatisticRangeExpectation(GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation statisticRangeExpectation) {
        this.statisticRangeExpectation = statisticRangeExpectation;
        return this;
    }
    
    /**
     * Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) &gt;= 0
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableConditionExpectation")
    public GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation tableConditionExpectation;

    public GoogleCloudDataplexV1DataQualityRule withTableConditionExpectation(GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation tableConditionExpectation) {
        this.tableConditionExpectation = tableConditionExpectation;
        return this;
    }
    
    /**
     * Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("threshold")
    public Double threshold;

    public GoogleCloudDataplexV1DataQualityRule withThreshold(Double threshold) {
        this.threshold = threshold;
        return this;
    }
    
    /**
     * Evaluates whether the column has duplicates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uniquenessExpectation")
    public java.util.Map<String, Object> uniquenessExpectation;

    public GoogleCloudDataplexV1DataQualityRule withUniquenessExpectation(java.util.Map<String, Object> uniquenessExpectation) {
        this.uniquenessExpectation = uniquenessExpectation;
        return this;
    }
    
    public GoogleCloudDataplexV1DataQualityRule(){}
}
