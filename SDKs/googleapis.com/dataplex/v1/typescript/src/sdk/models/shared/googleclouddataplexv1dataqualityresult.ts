/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDataplexV1DataQualityDimensionResult } from "./googleclouddataplexv1dataqualitydimensionresult";
import { GoogleCloudDataplexV1DataQualityRuleResult } from "./googleclouddataplexv1dataqualityruleresult";
import { GoogleCloudDataplexV1ScannedData } from "./googleclouddataplexv1scanneddata";
import { Expose, Type } from "class-transformer";

/**
 * The output of a DataQualityScan.
 */
export class GoogleCloudDataplexV1DataQualityResult extends SpeakeasyBase {
  /**
   * A list of results at the dimension level.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDataplexV1DataQualityDimensionResult,
  })
  @Expose({ name: "dimensions" })
  @Type(() => GoogleCloudDataplexV1DataQualityDimensionResult)
  dimensions?: GoogleCloudDataplexV1DataQualityDimensionResult[];

  /**
   * Overall data quality result -- true if all rules passed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passed" })
  passed?: boolean;

  /**
   * The count of rows processed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rowCount" })
  rowCount?: string;

  /**
   * A list of all the rules in a job, and their results.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDataplexV1DataQualityRuleResult })
  @Expose({ name: "rules" })
  @Type(() => GoogleCloudDataplexV1DataQualityRuleResult)
  rules?: GoogleCloudDataplexV1DataQualityRuleResult[];

  /**
   * The data scanned during processing (e.g. in incremental DataScan)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scannedData" })
  @Type(() => GoogleCloudDataplexV1ScannedData)
  scannedData?: GoogleCloudDataplexV1ScannedData;
}
