/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * An enumeration.
 */
export enum SourcesGetV2SourcesGetOrderBySourcesOrderEnum {
  SourceName = "sourceName",
  FirstUpdated = "firstUpdated",
  LastUpdated = "lastUpdated",
}

/**
 * An enumeration.
 */
export enum SourcesGetV2SourcesGetSortSortEnum {
  Asc = "asc",
  Desc = "desc",
}

export class SourcesGetV2SourcesGetRequest extends SpeakeasyBase {
  /**
   * Change the number of results returned.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_by",
  })
  orderBy?: SourcesGetV2SourcesGetOrderBySourcesOrderEnum;

  /**
   * Paginate through results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Define sort order.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: SourcesGetV2SourcesGetSortSortEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sourceId",
  })
  sourceId?: number[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sourceName",
  })
  sourceName?: string[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sourceSlug",
  })
  sourceSlug?: string[];
}

export class SourcesGetV2SourcesGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata()
  openAQResult?: shared.OpenAQResult;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
