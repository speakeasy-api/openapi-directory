// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostOauthTokenRequestBody struct {
	// Client ID, obtained during app registration
	ClientID string
	// Client secret, obtained during app registration
	ClientSecret string
	// A user authorization code, obtained via /oauth/authorize
	Code *string
	// Set equal to authorization_code if code is provided in order to gain user-level access. Otherwise, set equal to client_credentials to obtain app-level access only.
	GrantType string
	// Set a URI to redirect the user to. If this parameter is set to urn:ietf:wg:oauth:2.0:oob then the token will be shown instead. Must match one of the redirect URIs declared during app registration.
	RedirectURI string
	// List of requested OAuth scopes, separated by spaces. Must be a subset of scopes declared during app registration. If not provided, defaults to read.
	Scopes *string
}

type PostOauthTokenRequest struct {
	Request []byte `request:"mediaType=application/form-data"`
}

// PostOauthToken200ApplicationJSON - Store this access_token for later use with auth-required methods. The token should be passed as an HTTP Authorization header when making API calls, with the value Bearer access_token
type PostOauthToken200ApplicationJSON struct {
	AccessToken *string `json:"access_token,omitempty"`
	// UNIX timestamp
	CreatedAt *int64  `json:"created_at,omitempty"`
	Scope     *string `json:"scope,omitempty"`
	TokenType *string `json:"token_type,omitempty"`
}

type PostOauthTokenResponse struct {
	ContentType string
	// If you try to request a scope that was not included when registering the app, the request will fail.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
	// Store this access_token for later use with auth-required methods. The token should be passed as an HTTP Authorization header when making API calls, with the value Bearer access_token
	PostOauthToken200ApplicationJSONObject *PostOauthToken200ApplicationJSON
}
