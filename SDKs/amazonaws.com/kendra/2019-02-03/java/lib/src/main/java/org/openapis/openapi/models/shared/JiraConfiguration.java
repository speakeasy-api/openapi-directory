/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JiraConfiguration - Provides the configuration information to connect to Jira as your data source.
 */
public class JiraConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AttachmentFieldMappings")
    public DataSourceToIndexFieldMapping[] attachmentFieldMappings;

    public JiraConfiguration withAttachmentFieldMappings(DataSourceToIndexFieldMapping[] attachmentFieldMappings) {
        this.attachmentFieldMappings = attachmentFieldMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CommentFieldMappings")
    public DataSourceToIndexFieldMapping[] commentFieldMappings;

    public JiraConfiguration withCommentFieldMappings(DataSourceToIndexFieldMapping[] commentFieldMappings) {
        this.commentFieldMappings = commentFieldMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExclusionPatterns")
    public String[] exclusionPatterns;

    public JiraConfiguration withExclusionPatterns(String[] exclusionPatterns) {
        this.exclusionPatterns = exclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InclusionPatterns")
    public String[] inclusionPatterns;

    public JiraConfiguration withInclusionPatterns(String[] inclusionPatterns) {
        this.inclusionPatterns = inclusionPatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IssueFieldMappings")
    public DataSourceToIndexFieldMapping[] issueFieldMappings;

    public JiraConfiguration withIssueFieldMappings(DataSourceToIndexFieldMapping[] issueFieldMappings) {
        this.issueFieldMappings = issueFieldMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IssueSubEntityFilter")
    public IssueSubEntityEnum[] issueSubEntityFilter;

    public JiraConfiguration withIssueSubEntityFilter(IssueSubEntityEnum[] issueSubEntityFilter) {
        this.issueSubEntityFilter = issueSubEntityFilter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IssueType")
    public String[] issueType;

    public JiraConfiguration withIssueType(String[] issueType) {
        this.issueType = issueType;
        return this;
    }
    
    @JsonProperty("JiraAccountUrl")
    public String jiraAccountUrl;

    public JiraConfiguration withJiraAccountUrl(String jiraAccountUrl) {
        this.jiraAccountUrl = jiraAccountUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Project")
    public String[] project;

    public JiraConfiguration withProject(String[] project) {
        this.project = project;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProjectFieldMappings")
    public DataSourceToIndexFieldMapping[] projectFieldMappings;

    public JiraConfiguration withProjectFieldMappings(DataSourceToIndexFieldMapping[] projectFieldMappings) {
        this.projectFieldMappings = projectFieldMappings;
        return this;
    }
    
    @JsonProperty("SecretArn")
    public String secretArn;

    public JiraConfiguration withSecretArn(String secretArn) {
        this.secretArn = secretArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String[] status;

    public JiraConfiguration withStatus(String[] status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UseChangeLog")
    public Boolean useChangeLog;

    public JiraConfiguration withUseChangeLog(Boolean useChangeLog) {
        this.useChangeLog = useChangeLog;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcConfiguration")
    public DataSourceVpcConfiguration vpcConfiguration;

    public JiraConfiguration withVpcConfiguration(DataSourceVpcConfiguration vpcConfiguration) {
        this.vpcConfiguration = vpcConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkLogFieldMappings")
    public DataSourceToIndexFieldMapping[] workLogFieldMappings;

    public JiraConfiguration withWorkLogFieldMappings(DataSourceToIndexFieldMapping[] workLogFieldMappings) {
        this.workLogFieldMappings = workLogFieldMappings;
        return this;
    }
    
    public JiraConfiguration(@JsonProperty("JiraAccountUrl") String jiraAccountUrl, @JsonProperty("SecretArn") String secretArn) {
        this.jiraAccountUrl = jiraAccountUrl;
        this.secretArn = secretArn;
  }
}
