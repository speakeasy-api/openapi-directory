"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasourcerestriction as shared_datasourcerestriction
from ..shared import requestoptions as shared_requestoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuggestRequest:
    r"""Request of suggest API."""
    
    data_source_restrictions: Optional[list[shared_datasourcerestriction.DataSourceRestriction]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSourceRestrictions'), 'exclude': lambda f: f is None }})
    r"""The sources to use for suggestions. If not specified, the data sources are taken from the current search application. NOTE: Suggestions are only supported for the following sources: * Third-party data sources * PredefinedSource.PERSON * PredefinedSource.GOOGLE_DRIVE"""  
    query: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""Partial query for which autocomplete suggestions will be shown. For example, if the query is \\"sea\\", then the server might return \\"season\\", \\"search\\", \\"seagull\\" and so on."""  
    request_options: Optional[shared_requestoptions.RequestOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestOptions'), 'exclude': lambda f: f is None }})
    r"""Shared request options for all RPC methods."""  
    