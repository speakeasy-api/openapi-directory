/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class RepoTrackedTimesQueryParams {
    /**
     * Only show times updated before the given time. This is a timestamp in RFC 3339 format
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before")
    public OffsetDateTime before;
    public RepoTrackedTimesQueryParams withBefore(OffsetDateTime before) {
        this.before = before;
        return this;
    }
    
    /**
     * page size of results
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public RepoTrackedTimesQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * page number of results to return (1-based)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public RepoTrackedTimesQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * Only show times updated after the given time. This is a timestamp in RFC 3339 format
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=since")
    public OffsetDateTime since;
    public RepoTrackedTimesQueryParams withSince(OffsetDateTime since) {
        this.since = since;
        return this;
    }
    
    /**
     * optional filter by user (available for issue managers)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=user")
    public String user;
    public RepoTrackedTimesQueryParams withUser(String user) {
        this.user = user;
        return this;
    }
    
}
