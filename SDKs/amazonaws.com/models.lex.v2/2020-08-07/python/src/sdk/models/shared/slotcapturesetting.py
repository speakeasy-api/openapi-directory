"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import conditionalspecification as shared_conditionalspecification
from ..shared import dialogcodehookinvocationsetting as shared_dialogcodehookinvocationsetting
from ..shared import dialogstate as shared_dialogstate
from ..shared import elicitationcodehookinvocationsetting as shared_elicitationcodehookinvocationsetting
from ..shared import responsespecification as shared_responsespecification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SlotCaptureSetting:
    r"""Settings used when Amazon Lex successfully captures a slot value from a user."""
    
    capture_conditional: Optional[shared_conditionalspecification.ConditionalSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('captureConditional'), 'exclude': lambda f: f is None }})  
    capture_next_step: Optional[shared_dialogstate.DialogState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('captureNextStep'), 'exclude': lambda f: f is None }})  
    capture_response: Optional[shared_responsespecification.ResponseSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('captureResponse'), 'exclude': lambda f: f is None }})
    r"""Specifies a list of message groups that Amazon Lex uses to respond the user input."""  
    code_hook: Optional[shared_dialogcodehookinvocationsetting.DialogCodeHookInvocationSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codeHook'), 'exclude': lambda f: f is None }})  
    elicitation_code_hook: Optional[shared_elicitationcodehookinvocationsetting.ElicitationCodeHookInvocationSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('elicitationCodeHook'), 'exclude': lambda f: f is None }})  
    failure_conditional: Optional[shared_conditionalspecification.ConditionalSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureConditional'), 'exclude': lambda f: f is None }})  
    failure_next_step: Optional[shared_dialogstate.DialogState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureNextStep'), 'exclude': lambda f: f is None }})  
    failure_response: Optional[shared_responsespecification.ResponseSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureResponse'), 'exclude': lambda f: f is None }})
    r"""Specifies a list of message groups that Amazon Lex uses to respond the user input."""  
    