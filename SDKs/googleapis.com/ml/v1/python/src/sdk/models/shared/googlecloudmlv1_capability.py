"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudMlV1CapabilityAvailableAcceleratorsEnum(str, Enum):
    ACCELERATOR_TYPE_UNSPECIFIED = 'ACCELERATOR_TYPE_UNSPECIFIED'
    NVIDIA_TESLA_K80 = 'NVIDIA_TESLA_K80'
    NVIDIA_TESLA_P100 = 'NVIDIA_TESLA_P100'
    NVIDIA_TESLA_V100 = 'NVIDIA_TESLA_V100'
    NVIDIA_TESLA_P4 = 'NVIDIA_TESLA_P4'
    NVIDIA_TESLA_T4 = 'NVIDIA_TESLA_T4'
    NVIDIA_TESLA_A100 = 'NVIDIA_TESLA_A100'
    TPU_V2 = 'TPU_V2'
    TPU_V3 = 'TPU_V3'
    TPU_V4 = 'TPU_V4'
    TPU_V2_POD = 'TPU_V2_POD'
    TPU_V3_POD = 'TPU_V3_POD'

class GoogleCloudMlV1CapabilityTypeEnum(str, Enum):
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    TRAINING = 'TRAINING'
    BATCH_PREDICTION = 'BATCH_PREDICTION'
    ONLINE_PREDICTION = 'ONLINE_PREDICTION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMlV1Capability:
    
    available_accelerators: Optional[list[GoogleCloudMlV1CapabilityAvailableAcceleratorsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availableAccelerators'), 'exclude': lambda f: f is None }})
    r"""Available accelerators for the capability."""  
    type: Optional[GoogleCloudMlV1CapabilityTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    