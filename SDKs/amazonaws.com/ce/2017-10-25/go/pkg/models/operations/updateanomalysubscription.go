// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateAnomalySubscriptionXAmzTargetEnum
type UpdateAnomalySubscriptionXAmzTargetEnum string

const (
	UpdateAnomalySubscriptionXAmzTargetEnumAwsInsightsIndexServiceUpdateAnomalySubscription UpdateAnomalySubscriptionXAmzTargetEnum = "AWSInsightsIndexService.UpdateAnomalySubscription"
)

func (e *UpdateAnomalySubscriptionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSInsightsIndexService.UpdateAnomalySubscription":
		*e = UpdateAnomalySubscriptionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAnomalySubscriptionXAmzTargetEnum: %s", s)
	}
}

type UpdateAnomalySubscriptionHeaders struct {
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateAnomalySubscriptionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateAnomalySubscriptionRequest struct {
	Headers UpdateAnomalySubscriptionHeaders
	Request shared.UpdateAnomalySubscriptionRequest `request:"mediaType=application/json"`
}

type UpdateAnomalySubscriptionResponse struct {
	ContentType string
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// UnknownMonitorException
	UnknownMonitorException interface{}
	// UnknownSubscriptionException
	UnknownSubscriptionException interface{}
	// Success
	UpdateAnomalySubscriptionResponse *shared.UpdateAnomalySubscriptionResponse
}
