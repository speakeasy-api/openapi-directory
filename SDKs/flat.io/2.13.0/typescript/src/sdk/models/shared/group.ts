/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GroupTypeEnum } from "./grouptypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * A group of users
 */
export class Group extends SpeakeasyBase {
  /**
   * The creation date of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  /**
   * The unique identifier of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The display name of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * If the group is related to an organization, this field will contain
   *
   * @remarks
   * the unique identifier of the organization
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization?: string;

  /**
   * `True` if the group is set in read-only
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readOnly" })
  readOnly?: boolean;

  /**
   * The type of the group:
   *
   * @remarks
   * * `generic`: A group created by a Flat user
   * * `classTeachers`: A group created automaticaly by Flat that contains
   *   the teachers of a class
   * * `classStudents`: A group created automaticaly by Flat that contains
   *   the studnets of a class
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GroupTypeEnum;

  /**
   * The number of users in this group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usersCount" })
  usersCount?: number;
}
