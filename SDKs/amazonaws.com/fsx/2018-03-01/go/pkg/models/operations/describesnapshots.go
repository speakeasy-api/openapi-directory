// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeSnapshotsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// DescribeSnapshotsXAmzTargetEnum
type DescribeSnapshotsXAmzTargetEnum string

const (
	DescribeSnapshotsXAmzTargetEnumAwsSimbaAPIServiceV20180301DescribeSnapshots DescribeSnapshotsXAmzTargetEnum = "AWSSimbaAPIService_v20180301.DescribeSnapshots"
)

func (e *DescribeSnapshotsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSSimbaAPIService_v20180301.DescribeSnapshots":
		*e = DescribeSnapshotsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeSnapshotsXAmzTargetEnum: %s", s)
	}
}

type DescribeSnapshotsHeaders struct {
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeSnapshotsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeSnapshotsRequest struct {
	QueryParams DescribeSnapshotsQueryParams
	Headers     DescribeSnapshotsHeaders
	Request     shared.DescribeSnapshotsRequest `request:"mediaType=application/json"`
}

type DescribeSnapshotsResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// Success
	DescribeSnapshotsResponse *shared.DescribeSnapshotsResponse
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
	// SnapshotNotFound
	SnapshotNotFound interface{}
}
