/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class SearchCompanyContactsRequest extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records to be returned with a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Set `query_presence_status` to `true` in order to include the presence status of a contact in the response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=query_presence_status",
  })
  queryPresenceStatus?: string;

  /**
   * Provide the keyword - either first name, last name or email of the contact whom you have to search for.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search_key",
  })
  searchKey: string;
}

/**
 * Presence status of the contact in Zoom Client. The value of this field can be one of the following:
 *
 * @remarks
 * `Do_Not_Disturb`<br> `away`<br> `Available`<br> `Offline`
 */
export enum SearchCompanyContacts200ApplicationXMLContactsPresenceStatusEnum {
  DoNotDisturb = "Do_Not_Disturb",
  Away = "Away",
  Available = "Available",
  Offline = "Offline",
}

export class SearchCompanyContacts200ApplicationXMLContacts extends SpeakeasyBase {
  /**
   * Department of the contact as provided in the user's Zoom profile.
   */
  @SpeakeasyMetadata()
  dept?: string;

  /**
   * Direct Number(s) of a user who has Zoom Phone license assigned.
   */
  @SpeakeasyMetadata()
  directNumbers?: string[];

  /**
   * Email address of the contact.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Extension Number of a user who has Zoom Phone license assigned.
   */
  @SpeakeasyMetadata()
  extensionNumber?: string;

  /**
   * First name of the contact.
   */
  @SpeakeasyMetadata()
  firstName?: string;

  /**
   * User ID of the contact.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Unique Identifier of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients.
   */
  @SpeakeasyMetadata()
  imGroupId?: string;

  /**
   * Name of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients.
   */
  @SpeakeasyMetadata()
  imGroupName?: string;

  /**
   * Department of the user as provided in the user's Zoom profile.
   */
  @SpeakeasyMetadata()
  jobTitle?: string;

  /**
   * Last name of the contact.
   */
  @SpeakeasyMetadata()
  lastName?: string;

  /**
   * Location of the user as provided in the user's Zoom profile.
   */
  @SpeakeasyMetadata()
  location?: string;

  /**
   * Phone number of the user.
   */
  @SpeakeasyMetadata()
  phoneNumber?: string;

  /**
   * Presence status of the contact in Zoom Client. The value of this field can be one of the following:
   *
   * @remarks
   * `Do_Not_Disturb`<br> `away`<br> `Available`<br> `Offline`
   */
  @SpeakeasyMetadata()
  presenceStatus?: SearchCompanyContacts200ApplicationXMLContactsPresenceStatusEnum;

  /**
   * SIP Phone number of the user. Returned only if user has SIP phone enabled.
   */
  @SpeakeasyMetadata()
  sipPhoneNumber?: string;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Contact returned successfully.
 */
export class SearchCompanyContacts200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: SearchCompanyContacts200ApplicationXMLContacts,
  })
  contacts?: SearchCompanyContacts200ApplicationXMLContacts[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned with a single API call. Default value is `1`.
   */
  @SpeakeasyMetadata()
  pageSize?: number;
}

/**
 * Presence status of the contact in Zoom Client. The value of this field can be one of the following:
 *
 * @remarks
 * `Do_Not_Disturb`<br> `away`<br> `Available`<br> `Offline`
 */
export enum SearchCompanyContacts200ApplicationJSONContactsPresenceStatusEnum {
  DoNotDisturb = "Do_Not_Disturb",
  Away = "Away",
  Available = "Available",
  Offline = "Offline",
}

export class SearchCompanyContacts200ApplicationJSONContacts extends SpeakeasyBase {
  /**
   * Department of the contact as provided in the user's Zoom profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dept" })
  dept?: string;

  /**
   * Direct Number(s) of a user who has Zoom Phone license assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direct_numbers" })
  directNumbers?: string[];

  /**
   * Email address of the contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Extension Number of a user who has Zoom Phone license assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  /**
   * First name of the contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * User ID of the contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Unique Identifier of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "im_group_id" })
  imGroupId?: string;

  /**
   * Name of the [IM directory group](https://support.zoom.us/hc/en-us/articles/203749815-IM-Management) in which the user has been added. An IM Directory group is not the same as a channel. IM Directory allows administrators to assign users in their account to groups that display within the Contacts list on Zoom clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "im_group_name" })
  imGroupName?: string;

  /**
   * Department of the user as provided in the user's Zoom profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_title" })
  jobTitle?: string;

  /**
   * Last name of the contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Location of the user as provided in the user's Zoom profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * Phone number of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * Presence status of the contact in Zoom Client. The value of this field can be one of the following:
   *
   * @remarks
   * `Do_Not_Disturb`<br> `away`<br> `Available`<br> `Offline`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "presence_status" })
  presenceStatus?: SearchCompanyContacts200ApplicationJSONContactsPresenceStatusEnum;

  /**
   * SIP Phone number of the user. Returned only if user has SIP phone enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sip_phone_number" })
  sipPhoneNumber?: string;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Contact returned successfully.
 */
export class SearchCompanyContacts200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: SearchCompanyContacts200ApplicationJSONContacts,
  })
  @Expose({ name: "contacts" })
  @Type(() => SearchCompanyContacts200ApplicationJSONContacts)
  contacts?: SearchCompanyContacts200ApplicationJSONContacts[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned with a single API call. Default value is `1`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;
}

export class SearchCompanyContactsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Contact returned successfully.
   */
  @SpeakeasyMetadata()
  searchCompanyContacts200ApplicationJSONObject?: SearchCompanyContacts200ApplicationJSON;
}
