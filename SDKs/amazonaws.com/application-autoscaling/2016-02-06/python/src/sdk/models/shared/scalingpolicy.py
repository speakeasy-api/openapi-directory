"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import alarm as shared_alarm
from ..shared import policytype_enum as shared_policytype_enum
from ..shared import scalabledimension_enum as shared_scalabledimension_enum
from ..shared import servicenamespace_enum as shared_servicenamespace_enum
from ..shared import stepscalingpolicyconfiguration as shared_stepscalingpolicyconfiguration
from ..shared import targettrackingscalingpolicyconfiguration as shared_targettrackingscalingpolicyconfiguration
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScalingPolicy:
    r"""<p>Represents a scaling policy to use with Application Auto Scaling.</p> <p>For more information about configuring scaling policies for a specific service, see <a href=\\"https://docs.aws.amazon.com/autoscaling/application/userguide/integrated-services-list.html\\">Amazon Web Services services that you can use with Application Auto Scaling</a> in the <i>Application Auto Scaling User Guide</i>.</p>"""
    
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    policy_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyARN') }})  
    policy_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyName') }})  
    policy_type: shared_policytype_enum.PolicyTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyType') }})  
    resource_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceId') }})  
    scalable_dimension: shared_scalabledimension_enum.ScalableDimensionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ScalableDimension') }})  
    service_namespace: shared_servicenamespace_enum.ServiceNamespaceEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceNamespace') }})  
    alarms: Optional[list[shared_alarm.Alarm]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Alarms'), 'exclude': lambda f: f is None }})  
    step_scaling_policy_configuration: Optional[shared_stepscalingpolicyconfiguration.StepScalingPolicyConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StepScalingPolicyConfiguration'), 'exclude': lambda f: f is None }})  
    target_tracking_scaling_policy_configuration: Optional[shared_targettrackingscalingpolicyconfiguration.TargetTrackingScalingPolicyConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetTrackingScalingPolicyConfiguration'), 'exclude': lambda f: f is None }})  
    