/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UsersPreprintsListPreprintRelationships - URLs to other entities or entity collections that have a relationship to the preprint entity.
 */
public class UsersPreprintsListPreprintRelationships {
    /**
     * A relationship to the bibliographic contributors that are listed as contributing to this preprint.
     */
    
    public String bibliographicContributors;

    public UsersPreprintsListPreprintRelationships withBibliographicContributors(String bibliographicContributors) {
        this.bibliographicContributors = bibliographicContributors;
        return this;
    }
    
    /**
     * A relationship to the citation of the preprint.
     */
    
    public String citation;

    public UsersPreprintsListPreprintRelationships withCitation(String citation) {
        this.citation = citation;
        return this;
    }
    
    /**
     * A relationship to the identifiers associated with the preprint.
     */
    
    public String identifiers;

    public UsersPreprintsListPreprintRelationships withIdentifiers(String identifiers) {
        this.identifiers = identifiers;
        return this;
    }
    
    /**
     * A relationship to the license that has been applied to the preprint.
     */
    
    public String license;

    public UsersPreprintsListPreprintRelationships withLicense(String license) {
        this.license = license;
        return this;
    }
    
    /**
     * A relationship to the node that was created for the preprint, or from which the preprint was created.
     */
    
    public String node;

    public UsersPreprintsListPreprintRelationships withNode(String node) {
        this.node = node;
        return this;
    }
    
    /**
     * A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
     */
    
    public String primaryFile;

    public UsersPreprintsListPreprintRelationships withPrimaryFile(String primaryFile) {
        this.primaryFile = primaryFile;
        return this;
    }
    
    /**
     * A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
     */
    
    public String provider;

    public UsersPreprintsListPreprintRelationships withProvider(String provider) {
        this.provider = provider;
        return this;
    }
    
    public UsersPreprintsListPreprintRelationships(@JsonProperty("node") String node, @JsonProperty("primary_file") String primaryFile, @JsonProperty("provider") String provider) {
        this.node = node;
        this.primaryFile = primaryFile;
        this.provider = provider;
  }
}
