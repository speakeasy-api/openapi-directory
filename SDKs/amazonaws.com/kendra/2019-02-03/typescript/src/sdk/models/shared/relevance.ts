/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderEnum } from "./orderenum";
import { Expose } from "class-transformer";

/**
 * Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.
 */
export class Relevance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Duration" })
  duration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Freshness" })
  freshness?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Importance" })
  importance?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RankOrder" })
  rankOrder?: OrderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ValueImportanceMap" })
  valueImportanceMap?: Record<string, number>;
}
