"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PatchSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidRequestBodyStatusEnum(str, Enum):
    WAITING = 'waiting'
    ENDED = 'ended'
    VALIDATED = 'validated'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidRequestBody:
    r"""Status to modify"""
    
    status: Optional[PatchSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidRequestBodyStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PatchSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder exchange or followup"""  
    request_body: PatchSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Status to modify"""  
    requireddocumentid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'requireddocumentid', 'style': 'simple', 'explode': False }})
    r"""Id of the requireddocument"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    

@dataclasses.dataclass
class PatchSpacesSpaceIDFoldersIDRequiredDocumentsRequireddocumentidResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    