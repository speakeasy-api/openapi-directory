// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveAnEventSubscriptionPathParams struct {
	EventSubscriptionID string `pathParam:"style=simple,explode=false,name=event_subscription_id"`
}

type RetrieveAnEventSubscriptionRequest struct {
	PathParams RetrieveAnEventSubscriptionPathParams
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON13StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveAnEventSubscriptionDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON13TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveAnEventSubscriptionDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON13 struct {
	Detail     string                                                        `json:"detail"`
	RetryAfter *int64                                                        `json:"retry_after,omitempty"`
	Status     RetrieveAnEventSubscriptionDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                        `json:"title"`
	Type       RetrieveAnEventSubscriptionDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON12StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveAnEventSubscriptionDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON12TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveAnEventSubscriptionDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON12 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON11StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveAnEventSubscriptionDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON11TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveAnEventSubscriptionDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON11 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON10StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON10StatusEnumFourHundred RetrieveAnEventSubscriptionDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON10TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveAnEventSubscriptionDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON10 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON9StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON9StatusEnumFourHundred RetrieveAnEventSubscriptionDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON9TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveAnEventSubscriptionDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                     `json:"errors,omitempty"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON8StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveAnEventSubscriptionDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON8TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveAnEventSubscriptionDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON8 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON7StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveAnEventSubscriptionDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON7TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveAnEventSubscriptionDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON7 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON6StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON6StatusEnumFiveHundred RetrieveAnEventSubscriptionDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON6TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON6TypeEnumInternalServerError RetrieveAnEventSubscriptionDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON6 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON5StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveAnEventSubscriptionDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON5TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveAnEventSubscriptionDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON5 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON4StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveAnEventSubscriptionDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON4TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveAnEventSubscriptionDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON4 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON3StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveAnEventSubscriptionDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON3TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveAnEventSubscriptionDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON3 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON2StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveAnEventSubscriptionDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON2TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveAnEventSubscriptionDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON2 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON1StatusEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveAnEventSubscriptionDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON1TypeEnum string

const (
	RetrieveAnEventSubscriptionDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveAnEventSubscriptionDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RetrieveAnEventSubscriptionDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RetrieveAnEventSubscriptionDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAnEventSubscriptionDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RetrieveAnEventSubscriptionDefaultApplicationJSON1 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAnEventSubscriptionDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAnEventSubscriptionDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveAnEventSubscriptionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Event Subscription
	EventSubscription *shared.EventSubscription
}
