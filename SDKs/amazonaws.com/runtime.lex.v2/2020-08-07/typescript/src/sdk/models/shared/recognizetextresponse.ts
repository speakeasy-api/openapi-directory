/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Interpretation } from "./interpretation";
import { Message } from "./message";
import { RecognizedBotMember } from "./recognizedbotmember";
import { SessionState } from "./sessionstate";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class RecognizeTextResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Interpretation })
  @Expose({ name: "interpretations" })
  @Type(() => Interpretation)
  interpretations?: Interpretation[];

  @SpeakeasyMetadata({ elemType: Message })
  @Expose({ name: "messages" })
  @Type(() => Message)
  messages?: Message[];

  @SpeakeasyMetadata()
  @Expose({ name: "recognizedBotMember" })
  @Type(() => RecognizedBotMember)
  recognizedBotMember?: RecognizedBotMember;

  @SpeakeasyMetadata()
  @Expose({ name: "requestAttributes" })
  requestAttributes?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "sessionId" })
  sessionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sessionState" })
  @Type(() => SessionState)
  sessionState?: SessionState;
}
