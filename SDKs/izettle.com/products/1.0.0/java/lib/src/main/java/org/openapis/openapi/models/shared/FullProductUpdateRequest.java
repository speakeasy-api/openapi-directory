/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class FullProductUpdateRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories")
    public String[] categories;

    public FullProductUpdateRequest withCategories(String[] categories) {
        this.categories = categories;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")
    public CategoryDTO category;

    public FullProductUpdateRequest withCategory(CategoryDTO category) {
        this.category = category;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public FullProductUpdateRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalReference")
    public String externalReference;

    public FullProductUpdateRequest withExternalReference(String externalReference) {
        this.externalReference = externalReference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageLookupKeys")
    public String[] imageLookupKeys;

    public FullProductUpdateRequest withImageLookupKeys(String[] imageLookupKeys) {
        this.imageLookupKeys = imageLookupKeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public MetadataDTO metadata;

    public FullProductUpdateRequest withMetadata(MetadataDTO metadata) {
        this.metadata = metadata;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public FullProductUpdateRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("online")
    public OnlineProperties online;

    public FullProductUpdateRequest withOnline(OnlineProperties online) {
        this.online = online;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("presentation")
    public PresentationDTO presentation;

    public FullProductUpdateRequest withPresentation(PresentationDTO presentation) {
        this.presentation = presentation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxCode")
    public String taxCode;

    public FullProductUpdateRequest withTaxCode(String taxCode) {
        this.taxCode = taxCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxExempt")
    public Boolean taxExempt;

    public FullProductUpdateRequest withTaxExempt(Boolean taxExempt) {
        this.taxExempt = taxExempt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxRates")
    public String[] taxRates;

    public FullProductUpdateRequest withTaxRates(String[] taxRates) {
        this.taxRates = taxRates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitName")
    public String unitName;

    public FullProductUpdateRequest withUnitName(String unitName) {
        this.unitName = unitName;
        return this;
    }
    
    @JsonProperty("uuid")
    public String uuid;

    public FullProductUpdateRequest withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variantOptionDefinitions")
    public VariantOptionDefinitions variantOptionDefinitions;

    public FullProductUpdateRequest withVariantOptionDefinitions(VariantOptionDefinitions variantOptionDefinitions) {
        this.variantOptionDefinitions = variantOptionDefinitions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variants")
    public VariantDTO[] variants;

    public FullProductUpdateRequest withVariants(VariantDTO[] variants) {
        this.variants = variants;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatPercentage")
    public Double vatPercentage;

    public FullProductUpdateRequest withVatPercentage(Double vatPercentage) {
        this.vatPercentage = vatPercentage;
        return this;
    }
    
    public FullProductUpdateRequest(@JsonProperty("name") String name, @JsonProperty("uuid") String uuid) {
        this.name = name;
        this.uuid = uuid;
  }
}
