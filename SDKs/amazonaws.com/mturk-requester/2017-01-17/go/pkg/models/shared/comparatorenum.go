// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComparatorEnum string

const (
	ComparatorEnumLessThan             ComparatorEnum = "LessThan"
	ComparatorEnumLessThanOrEqualTo    ComparatorEnum = "LessThanOrEqualTo"
	ComparatorEnumGreaterThan          ComparatorEnum = "GreaterThan"
	ComparatorEnumGreaterThanOrEqualTo ComparatorEnum = "GreaterThanOrEqualTo"
	ComparatorEnumEqualTo              ComparatorEnum = "EqualTo"
	ComparatorEnumNotEqualTo           ComparatorEnum = "NotEqualTo"
	ComparatorEnumExists               ComparatorEnum = "Exists"
	ComparatorEnumDoesNotExist         ComparatorEnum = "DoesNotExist"
	ComparatorEnumIn                   ComparatorEnum = "In"
	ComparatorEnumNotIn                ComparatorEnum = "NotIn"
)

func (e *ComparatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LessThan":
		fallthrough
	case "LessThanOrEqualTo":
		fallthrough
	case "GreaterThan":
		fallthrough
	case "GreaterThanOrEqualTo":
		fallthrough
	case "EqualTo":
		fallthrough
	case "NotEqualTo":
		fallthrough
	case "Exists":
		fallthrough
	case "DoesNotExist":
		fallthrough
	case "In":
		fallthrough
	case "NotIn":
		*e = ComparatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ComparatorEnum: %s", s)
	}
}
