// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeCacheParametersActionEnum
type GETDescribeCacheParametersActionEnum string

const (
	GETDescribeCacheParametersActionEnumDescribeCacheParameters GETDescribeCacheParametersActionEnum = "DescribeCacheParameters"
)

func (e *GETDescribeCacheParametersActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeCacheParameters":
		*e = GETDescribeCacheParametersActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeCacheParametersActionEnum: %s", s)
	}
}

// GETDescribeCacheParametersVersionEnum
type GETDescribeCacheParametersVersionEnum string

const (
	GETDescribeCacheParametersVersionEnumTwoThousandAndFifteen0202 GETDescribeCacheParametersVersionEnum = "2015-02-02"
)

func (e *GETDescribeCacheParametersVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = GETDescribeCacheParametersVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeCacheParametersVersionEnum: %s", s)
	}
}

type GETDescribeCacheParametersQueryParams struct {
	Action GETDescribeCacheParametersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of a specific cache parameter group to return details for.
	CacheParameterGroupName string `queryParam:"style=form,explode=true,name=CacheParameterGroupName"`
	// An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// <p>The parameter types to return.</p> <p>Valid values: <code>user</code> | <code>system</code> | <code>engine-default</code> </p>
	Source  *string                               `queryParam:"style=form,explode=true,name=Source"`
	Version GETDescribeCacheParametersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeCacheParametersHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeCacheParametersRequest struct {
	QueryParams GETDescribeCacheParametersQueryParams
	Headers     GETDescribeCacheParametersHeaders
}

type GETDescribeCacheParametersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
