"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum(str, Enum):
    SETUP_ERROR_UNSPECIFIED = 'SETUP_ERROR_UNSPECIFIED'
    ERROR_INVALID_BASE_SETUP = 'ERROR_INVALID_BASE_SETUP'
    ERROR_MISSING_EXTERNAL_SIGNING_KEY = 'ERROR_MISSING_EXTERNAL_SIGNING_KEY'
    ERROR_NOT_ALL_SERVICES_ENROLLED = 'ERROR_NOT_ALL_SERVICES_ENROLLED'
    ERROR_SETUP_CHECK_FAILED = 'ERROR_SETUP_CHECK_FAILED'

class GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum(str, Enum):
    r"""Indicates SAA enrollment status of a given workload."""
    SETUP_STATE_UNSPECIFIED = 'SETUP_STATE_UNSPECIFIED'
    STATUS_PENDING = 'STATUS_PENDING'
    STATUS_COMPLETE = 'STATUS_COMPLETE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponse:
    r"""Signed Access Approvals (SAA) enrollment response."""
    
    setup_errors: Optional[list[GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupErrorsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setupErrors'), 'exclude': lambda f: f is None }})
    r"""Indicates SAA enrollment setup error if any."""  
    setup_status: Optional[GoogleCloudAssuredworkloadsV1WorkloadSaaEnrollmentResponseSetupStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setupStatus'), 'exclude': lambda f: f is None }})
    r"""Indicates SAA enrollment status of a given workload."""  
    