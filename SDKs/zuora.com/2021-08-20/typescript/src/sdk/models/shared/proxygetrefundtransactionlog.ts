/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ProxyGetRefundTransactionLog extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BatchId" })
  batchId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Gateway" })
  gateway?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GatewayReasonCode" })
  gatewayReasonCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GatewayReasonCodeDescription" })
  gatewayReasonCodeDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GatewayState" })
  gatewayState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GatewayTransactionType" })
  gatewayTransactionType?: string;

  /**
   * Object identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RefundId" })
  refundId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestString" })
  requestString?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResponseString" })
  responseString?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TransactionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  transactionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TransactionId" })
  transactionId?: string;
}
