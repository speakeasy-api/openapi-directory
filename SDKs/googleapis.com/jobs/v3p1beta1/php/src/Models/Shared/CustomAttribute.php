<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CustomAttribute - Custom attribute values that are either filterable or non-filterable.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CustomAttribute
{
    /**
     * Optional. If the `filterable` flag is true, the custom field values may be used for custom attribute filters JobQuery.custom_attribute_filter. If false, these values may not be used for custom attribute filters. Default is false.
     * 
     * @var ?bool $filterable
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $filterable = null;
    
    /**
     * Optional but exactly one of string_values or long_values must be specified. This field is used to perform number range search. (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. Currently at most 1 long_values is supported.
     * 
     * @var ?array<string> $longValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('longValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $longValues = null;
    
    /**
     * Optional but exactly one of string_values or long_values must be specified. This field is used to perform a string match (`CASE_SENSITIVE_MATCH` or `CASE_INSENSITIVE_MATCH`) search. For filterable `string_value`s, a maximum total number of 200 values is allowed, with each `string_value` has a byte size of no more than 500B. For unfilterable `string_values`, the maximum total byte size of unfilterable `string_values` is 50KB. Empty string is not allowed.
     * 
     * @var ?array<string> $stringValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('stringValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $stringValues = null;
    
	public function __construct()
	{
		$this->filterable = null;
		$this->longValues = null;
		$this->stringValues = null;
	}
}
