/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChallengeV3 } from "./challengev3";
import { CompanyV3 } from "./companyv3";
import { IndividualV3Input } from "./individualv3";
import { PayeeAddressV3 } from "./payeeaddressv3";
import { PayeeTypeEnumEnum } from "./payeetypeenumenum";
import { Expose, Type } from "class-transformer";

/**
 * Request to update payee details
 */
export class UpdatePayeeDetailsRequestV3Input extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => PayeeAddressV3)
  address?: PayeeAddressV3;

  @SpeakeasyMetadata()
  @Expose({ name: "challenge" })
  @Type(() => ChallengeV3)
  challenge?: ChallengeV3;

  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  @Type(() => CompanyV3)
  company?: CompanyV3;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "individual" })
  @Type(() => IndividualV3Input)
  individual?: IndividualV3Input;

  /**
   * An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>
   *
   * @remarks
   * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * The type of the payee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payeeType" })
  payeeType?: PayeeTypeEnumEnum;
}
