/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TeamSimple - Groups of organization members that gives permissions on specified repositories.
 */
public class TeamSimple {
    /**
     * Description of the team
     */
    @JsonProperty("description")
    public String description;

    public TeamSimple withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;

    public TeamSimple withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    /**
     * Unique identifier of the team
     */
    @JsonProperty("id")
    public Long id;

    public TeamSimple withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Distinguished Name (DN) that team maps to within LDAP environment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ldap_dn")
    public String ldapDn;

    public TeamSimple withLdapDn(String ldapDn) {
        this.ldapDn = ldapDn;
        return this;
    }
    
    @JsonProperty("members_url")
    public String membersUrl;

    public TeamSimple withMembersUrl(String membersUrl) {
        this.membersUrl = membersUrl;
        return this;
    }
    
    /**
     * Name of the team
     */
    @JsonProperty("name")
    public String name;

    public TeamSimple withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;

    public TeamSimple withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * Permission that the team will have for its repositories
     */
    @JsonProperty("permission")
    public String permission;

    public TeamSimple withPermission(String permission) {
        this.permission = permission;
        return this;
    }
    
    /**
     * The level of privacy this team should have
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privacy")
    public String privacy;

    public TeamSimple withPrivacy(String privacy) {
        this.privacy = privacy;
        return this;
    }
    
    @JsonProperty("repositories_url")
    public String repositoriesUrl;

    public TeamSimple withRepositoriesUrl(String repositoriesUrl) {
        this.repositoriesUrl = repositoriesUrl;
        return this;
    }
    
    @JsonProperty("slug")
    public String slug;

    public TeamSimple withSlug(String slug) {
        this.slug = slug;
        return this;
    }
    
    /**
     * URL for the team
     */
    @JsonProperty("url")
    public String url;

    public TeamSimple withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public TeamSimple(@JsonProperty("description") String description, @JsonProperty("html_url") String htmlUrl, @JsonProperty("id") Long id, @JsonProperty("members_url") String membersUrl, @JsonProperty("name") String name, @JsonProperty("node_id") String nodeId, @JsonProperty("permission") String permission, @JsonProperty("repositories_url") String repositoriesUrl, @JsonProperty("slug") String slug, @JsonProperty("url") String url) {
        this.description = description;
        this.htmlUrl = htmlUrl;
        this.id = id;
        this.membersUrl = membersUrl;
        this.name = name;
        this.nodeId = nodeId;
        this.permission = permission;
        this.repositoriesUrl = repositoriesUrl;
        this.slug = slug;
        this.url = url;
  }
}
