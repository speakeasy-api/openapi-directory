// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetSQLInjectionMatchSetXAmzTargetEnum
type GetSQLInjectionMatchSetXAmzTargetEnum string

const (
	GetSQLInjectionMatchSetXAmzTargetEnumAwswafRegional20161128GetSQLInjectionMatchSet GetSQLInjectionMatchSetXAmzTargetEnum = "AWSWAF_Regional_20161128.GetSqlInjectionMatchSet"
)

func (e *GetSQLInjectionMatchSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSWAF_Regional_20161128.GetSqlInjectionMatchSet":
		*e = GetSQLInjectionMatchSetXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSQLInjectionMatchSetXAmzTargetEnum: %s", s)
	}
}

type GetSQLInjectionMatchSetRequest struct {
	GetSQLInjectionMatchSetRequest shared.GetSQLInjectionMatchSetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     GetSQLInjectionMatchSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetSQLInjectionMatchSetResponse struct {
	ContentType string
	// Success
	GetSQLInjectionMatchSetResponse *shared.GetSQLInjectionMatchSetResponse
	StatusCode                      int
	RawResponse                     *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
}
