/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillbeeInterfacesBillbeeAPIModelShipmentAddressAPIModelInput } from "./billbeeinterfacesbillbeeapimodelshipmentaddressapimodel";
import { BillbeeInterfacesShippingShipmentDataDimensions } from "./billbeeinterfacesshippingshipmentdatadimensions";
import { Expose, Transform, Type } from "class-transformer";

export enum BillbeeInterfacesBillbeeAPIModelCreateShipmentAPIModelShippingCarrierEnum {
  Zero = "0",
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
  Six = "6",
  Seven = "7",
  Eight = "8",
  Nine = "9",
  Ten = "10",
  Eleven = "11",
  Twelve = "12",
  Thirteen = "13",
  Fourteen = "14",
  Fifteen = "15",
  Sixteen = "16",
  Seventeen = "17",
  Eighteen = "18",
}

/**
 * Data to specify shipment parameters
 */
export class BillbeeInterfacesBillbeeAPIModelCreateShipmentAPIModelInput extends SpeakeasyBase {
  /**
   * Optional specify a text to be included on the label. Not possible with all carriers
   */
  @SpeakeasyMetadata({ data: "form, name=ClientReference" })
  @Expose({ name: "ClientReference" })
  clientReference?: string;

  /**
   * Optional specify a text describing the content of the shipment. Used for export shipments
   */
  @SpeakeasyMetadata({ data: "form, name=Content" })
  @Expose({ name: "Content" })
  content?: string;

  /**
   * Not used anymore
   */
  @SpeakeasyMetadata({ data: "form, name=CustomerNumber" })
  @Expose({ name: "CustomerNumber" })
  customerNumber?: string;

  @SpeakeasyMetadata({ data: "form, name=Dimension;json=true" })
  @Expose({ name: "Dimension" })
  @Type(() => BillbeeInterfacesShippingShipmentDataDimensions)
  dimension?: BillbeeInterfacesShippingShipmentDataDimensions;

  /**
   * The Currency if the ordersum
   */
  @SpeakeasyMetadata({ data: "form, name=OrderCurrencyCode" })
  @Expose({ name: "OrderCurrencyCode" })
  orderCurrencyCode?: string;

  /**
   * The value of the shipments content
   */
  @SpeakeasyMetadata({ data: "form, name=OrderSum" })
  @Expose({ name: "OrderSum" })
  orderSum?: number;

  /**
   * The id of a connected Cloudprinter to sent the export docs to
   */
  @SpeakeasyMetadata({ data: "form, name=PrinterIdForExportDocs" })
  @Expose({ name: "PrinterIdForExportDocs" })
  printerIdForExportDocs?: number;

  /**
   * The name of a connected Cloudprinter to sent the label to
   */
  @SpeakeasyMetadata({ data: "form, name=PrinterName" })
  @Expose({ name: "PrinterName" })
  printerName?: string;

  /**
   * The productcode to be used when creating the shipment. Values depends on the carrier used
   */
  @SpeakeasyMetadata({ data: "form, name=ProductCode" })
  @Expose({ name: "ProductCode" })
  productCode?: string;

  /**
   * The name of the provider as specified in the billbee account
   */
  @SpeakeasyMetadata({ data: "form, name=ProviderName" })
  @Expose({ name: "ProviderName" })
  providerName?: string;

  @SpeakeasyMetadata({ data: "form, name=ReceiverAddress;json=true" })
  @Expose({ name: "ReceiverAddress" })
  @Type(() => BillbeeInterfacesBillbeeAPIModelShipmentAddressAPIModelInput)
  receiverAddress?: BillbeeInterfacesBillbeeAPIModelShipmentAddressAPIModelInput;

  /**
   * Optional overwrite the shipdate to be transferred to the carrier
   */
  @SpeakeasyMetadata({
    data: "form, name=ShipDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "ShipDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  shipDate?: Date;

  /**
   * The value of the shipments content (net)
   */
  @SpeakeasyMetadata({ data: "form, name=TotalNet" })
  @Expose({ name: "TotalNet" })
  totalNet?: number;

  /**
   * Optional specify the weight in gram of the shipment
   */
  @SpeakeasyMetadata({ data: "form, name=WeightInGram" })
  @Expose({ name: "WeightInGram" })
  weightInGram?: number;

  @SpeakeasyMetadata({ data: "form, name=shippingCarrier" })
  @Expose({ name: "shippingCarrier" })
  shippingCarrier?: BillbeeInterfacesBillbeeAPIModelCreateShipmentAPIModelShippingCarrierEnum;
}
