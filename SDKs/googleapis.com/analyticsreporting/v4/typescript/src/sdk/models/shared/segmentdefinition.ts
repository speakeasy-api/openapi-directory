/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SegmentFilter } from "./segmentfilter";
import { Expose, Type } from "class-transformer";

/**
 * SegmentDefinition defines the segment to be a set of SegmentFilters which are combined together with a logical `AND` operation.
 */
export class SegmentDefinition extends SpeakeasyBase {
  /**
   * A segment is defined by a set of segment filters which are combined together with a logical `AND` operation.
   */
  @SpeakeasyMetadata({ elemType: SegmentFilter })
  @Expose({ name: "segmentFilters" })
  @Type(() => SegmentFilter)
  segmentFilters?: SegmentFilter[];
}
