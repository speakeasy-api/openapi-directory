// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateRuleRequest struct {
	Request *shared.RuleNew `request:"mediaType=application/json"`
}

// CreateRule200ApplicationJSONActionEnum - The id of the action
type CreateRule200ApplicationJSONActionEnum string

const (
	CreateRule200ApplicationJSONActionEnumCreateRule CreateRule200ApplicationJSONActionEnum = "createRule"
)

func (e *CreateRule200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "createRule":
		*e = CreateRule200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRule200ApplicationJSONActionEnum: %s", s)
	}
}

type CreateRule200ApplicationJSONData struct {
	Rules []shared.Rule `json:"rules"`
}

// CreateRule200ApplicationJSONResultEnum - Result of the request
type CreateRule200ApplicationJSONResultEnum string

const (
	CreateRule200ApplicationJSONResultEnumSuccess CreateRule200ApplicationJSONResultEnum = "success"
	CreateRule200ApplicationJSONResultEnumError   CreateRule200ApplicationJSONResultEnum = "error"
)

func (e *CreateRule200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = CreateRule200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRule200ApplicationJSONResultEnum: %s", s)
	}
}

// CreateRule200ApplicationJSON - Rules information
type CreateRule200ApplicationJSON struct {
	// The id of the action
	Action CreateRule200ApplicationJSONActionEnum `json:"action"`
	Data   CreateRule200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result CreateRule200ApplicationJSONResultEnum `json:"result"`
}

type CreateRuleResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Rules information
	CreateRule200ApplicationJSONObject *CreateRule200ApplicationJSON
}
