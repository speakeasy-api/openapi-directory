/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Anonymization of a source.
 */
export class APIKeyOut extends SpeakeasyBase {
  /**
   * The API Key has admin role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "admin" })
  admin?: boolean;

  /**
   * The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "anonymized" })
  anonymized?: boolean;

  /**
   * The user API Key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apiKey" })
  apiKey?: string;

  /**
   * The API Key has role corporate (ex SWIFT payments instead of Stripe payments).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corporate" })
  corporate?: boolean;

  /**
   * The API Key is temporarily or permanently disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  /**
   * The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "learnable" })
  learnable?: boolean;

  /**
   * The API Key has partner role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "partner" })
  partner?: boolean;

  /**
   * The API Key is associated to a valid Stripe account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "striped" })
  striped?: boolean;

  /**
   * The user identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;

  /**
   * The API Key is vetted (assumed truthful) for machine learning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vetted" })
  vetted?: boolean;
}
