<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
/**
 * RegisterRealtimeApiData - Container class for the register realtime API API
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RegisterRealtimeApiData
{
    /**
     * The URL of your endpoint. To this endpoint all the values are send to.
     * 
     * @var ?string $apiUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('ApiUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=ApiUrl')]
    public ?string $apiUrl = null;
    
    /**
     * The Password (basic auth) of your endpoint. Leave empty of none.
     * 
     * @var ?string $basicAuthPassword
     */
	#[\JMS\Serializer\Annotation\SerializedName('BasicAuthPassword')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=BasicAuthPassword')]
    public ?string $basicAuthPassword = null;
    
    /**
     * The Username (basic auth) of your endpoint. Leave empty of none.
     * 
     * @var ?string $basicAuthUsername
     */
	#[\JMS\Serializer\Annotation\SerializedName('BasicAuthUsername')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=BasicAuthUsername')]
    public ?string $basicAuthUsername = null;
    
    /**
     * The ID of the registration
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=Id')]
    public ?string $id = null;
    
    /**
     * The ID of the Meter. Just used if the RegistrationType is "SingleMeterRegistration".
     * 
     * @var ?string $meterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('MeterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=MeterId')]
    public ?string $meterId = null;
    
    /**
     * The Type of this registration (per meter, per user, ...)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RegisterRealtimeApiDataRegistrationTypeEnum $registrationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('RegistrationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RegisterRealtimeApiDataRegistrationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=RegistrationType')]
    public ?RegisterRealtimeApiDataRegistrationTypeEnum $registrationType = null;
    
    /**
     * The serial number of the Meter. Just used if the RegistrationType is "SingleMeterRegistration" and the MeterId is null. 
     * 
     *             Example: 1 SME 01 63000000 or 6300000
     * 
     * @var ?string $serialNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('SerialNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('form:name=SerialNumber')]
    public ?string $serialNumber = null;
    
	public function __construct()
	{
		$this->apiUrl = null;
		$this->basicAuthPassword = null;
		$this->basicAuthUsername = null;
		$this->id = null;
		$this->meterId = null;
		$this->registrationType = null;
		$this->serialNumber = null;
	}
}
