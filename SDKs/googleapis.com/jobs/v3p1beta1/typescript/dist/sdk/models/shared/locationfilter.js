"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationFilter = exports.LocationFilterTelecommutePreferenceEnum = void 0;
var utils_1 = require("../../../internal/utils");
var latlng_1 = require("./latlng");
var class_transformer_1 = require("class-transformer");
/**
 * Optional. Allows the client to return jobs without a set location, specifically, telecommuting jobs (telecommuting is considered by the service as a special location). Job.posting_region indicates if a job permits telecommuting. If this field is set to TelecommutePreference.TELECOMMUTE_ALLOWED, telecommuting jobs are searched, and address and lat_lng are ignored. If not set or set to TelecommutePreference.TELECOMMUTE_EXCLUDED, the telecommute status of the jobs is ignored. Jobs that have PostingRegion.TELECOMMUTE and have additional Job.addresses may still be matched based on other location filters using address or latlng. This filter can be used by itself to search exclusively for telecommuting jobs, or it can be combined with another location filter to search for a combination of job locations, such as "Mountain View" or "telecommuting" jobs. However, when used in combination with other location filters, telecommuting jobs can be treated as less relevant than other jobs in the search response.
 */
var LocationFilterTelecommutePreferenceEnum;
(function (LocationFilterTelecommutePreferenceEnum) {
    LocationFilterTelecommutePreferenceEnum["TelecommutePreferenceUnspecified"] = "TELECOMMUTE_PREFERENCE_UNSPECIFIED";
    LocationFilterTelecommutePreferenceEnum["TelecommuteExcluded"] = "TELECOMMUTE_EXCLUDED";
    LocationFilterTelecommutePreferenceEnum["TelecommuteAllowed"] = "TELECOMMUTE_ALLOWED";
    LocationFilterTelecommutePreferenceEnum["TelecommuteJobsExcluded"] = "TELECOMMUTE_JOBS_EXCLUDED";
})(LocationFilterTelecommutePreferenceEnum = exports.LocationFilterTelecommutePreferenceEnum || (exports.LocationFilterTelecommutePreferenceEnum = {}));
/**
 * Input only. Geographic region of the search.
 */
var LocationFilter = /** @class */ (function (_super) {
    __extends(LocationFilter, _super);
    function LocationFilter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address" }),
        __metadata("design:type", String)
    ], LocationFilter.prototype, "address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "distanceInMiles" }),
        __metadata("design:type", Number)
    ], LocationFilter.prototype, "distanceInMiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "latLng" }),
        (0, class_transformer_1.Type)(function () { return latlng_1.LatLng; }),
        __metadata("design:type", latlng_1.LatLng)
    ], LocationFilter.prototype, "latLng", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "regionCode" }),
        __metadata("design:type", String)
    ], LocationFilter.prototype, "regionCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "telecommutePreference" }),
        __metadata("design:type", String)
    ], LocationFilter.prototype, "telecommutePreference", void 0);
    return LocationFilter;
}(utils_1.SpeakeasyBase));
exports.LocationFilter = LocationFilter;
