// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeauthorizeConnectionXAmzTargetEnum
type DeauthorizeConnectionXAmzTargetEnum string

const (
	DeauthorizeConnectionXAmzTargetEnumAwsEventsDeauthorizeConnection DeauthorizeConnectionXAmzTargetEnum = "AWSEvents.DeauthorizeConnection"
)

func (e DeauthorizeConnectionXAmzTargetEnum) ToPointer() *DeauthorizeConnectionXAmzTargetEnum {
	return &e
}

func (e *DeauthorizeConnectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSEvents.DeauthorizeConnection":
		*e = DeauthorizeConnectionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeauthorizeConnectionXAmzTargetEnum: %v", v)
	}
}

type DeauthorizeConnectionRequest struct {
	DeauthorizeConnectionRequest shared.DeauthorizeConnectionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeauthorizeConnectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeauthorizeConnectionResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	DeauthorizeConnectionResponse *shared.DeauthorizeConnectionResponse
	// InternalException
	InternalException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
