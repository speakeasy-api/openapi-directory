/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Peering - Represents a Managed Service for Microsoft Active Directory Peering.
 */
public class Peering {
    /**
     * Required. The full names of the Google Compute Engine [networks](/compute/docs/networks-and-firewalls#networks) to which the instance is connected. Caller needs to make sure that CIDR subnets do not overlap between networks, else peering creation will fail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizedNetwork")
    public String authorizedNetwork;

    public Peering withAuthorizedNetwork(String authorizedNetwork) {
        this.authorizedNetwork = authorizedNetwork;
        return this;
    }
    
    /**
     * Output only. The time the instance was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Peering withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Required. Full domain resource path for the Managed AD Domain involved in peering. The resource path should be in the form: `projects/{project_id}/locations/global/domains/{domain_name}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainResource")
    public String domainResource;

    public Peering withDomainResource(String domainResource) {
        this.domainResource = domainResource;
        return this;
    }
    
    /**
     * Optional. Resource labels to represent user-provided metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Peering withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. Unique name of the peering in this scope including projects and location using the form: `projects/{project_id}/locations/global/peerings/{peering_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Peering withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The current state of this Peering.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public PeeringStateEnum state;

    public Peering withState(PeeringStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. Additional information about the current status of this peering, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusMessage")
    public String statusMessage;

    public Peering withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    /**
     * Output only. Last update time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Peering withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Peering(){}
}
