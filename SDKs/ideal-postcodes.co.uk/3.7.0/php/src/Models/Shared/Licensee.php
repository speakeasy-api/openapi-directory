<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Licensee - Licensee object which can be defined by user
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Licensee
{
    /**
     * Licensee's first, second and third line address as well as post town concatenated by commas
     * 
     * @var string $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $address;
    
    /**
     * Timestamp for when the licensee was created
     * 
     * @var string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('daily')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LicenseeDaily')]
    public LicenseeDaily $daily;
    
    /**
     * An immutable ID provided for every licensee. Primarily used for paginated list requests.
     * 
     * 
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Uniquely identifies a licensee for a key. 
     * 
     * 
     * Required to perform paid lookups for a specific licensee. Typically begins `sk_`.
     * 
     * 
     * @var string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $key;
    
    /**
     * Licensee individual or organisation name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Licensee's postcode
     * 
     * @var string $postcode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postcode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $postcode;
    
    /**
     * A list of allowed URLs. An empty list means that whitelisting is disabled
     * 
     * @var array<string> $whitelist
     */
	#[\JMS\Serializer\Annotation\SerializedName('whitelist')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $whitelist;
    
	public function __construct()
	{
		$this->address = "";
		$this->createdAt = "";
		$this->daily = new \OpenAPI\OpenAPI\Models\Shared\LicenseeDaily();
		$this->id = "";
		$this->key = "";
		$this->name = "";
		$this->postcode = "";
		$this->whitelist = [];
	}
}
