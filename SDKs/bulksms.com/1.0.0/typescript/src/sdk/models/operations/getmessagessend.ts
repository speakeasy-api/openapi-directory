/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetMessagesSendSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class GetMessagesSendRequest extends SpeakeasyBase {
  /**
   * The text you want to send.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=body" })
  body: string;

  /**
   * Refer to the `deduplication-id` parameter.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=deduplication-id",
  })
  deduplicationId?: number;

  /**
   * The phone number of the recipient.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=to" })
  to: string;
}

export class GetMessagesSendResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Request. The content or structure of your submission, or a parameter, was found to be invalid.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * An array of messages
   */
  @SpeakeasyMetadata({ elemType: shared.Message })
  messages?: shared.Message[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
