"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class Systemapks:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def androidpublisher_systemapks_variants_create(self, request: operations.AndroidpublisherSystemapksVariantsCreateRequest, security: operations.AndroidpublisherSystemapksVariantsCreateSecurity) -> operations.AndroidpublisherSystemapksVariantsCreateResponse:
        r"""Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.AndroidpublisherSystemapksVariantsCreateRequest, base_url, '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants', request)
        
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "variant_input", 'json')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        query_params = utils.get_query_params(operations.AndroidpublisherSystemapksVariantsCreateRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('POST', url, params=query_params, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.AndroidpublisherSystemapksVariantsCreateResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Variant])
                res.variant = out

        return res

    def androidpublisher_systemapks_variants_download(self, request: operations.AndroidpublisherSystemapksVariantsDownloadRequest, security: operations.AndroidpublisherSystemapksVariantsDownloadSecurity) -> operations.AndroidpublisherSystemapksVariantsDownloadResponse:
        r"""Downloads a previously created system APK which is suitable for inclusion in a system image."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.AndroidpublisherSystemapksVariantsDownloadRequest, base_url, '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download', request)
        
        query_params = utils.get_query_params(operations.AndroidpublisherSystemapksVariantsDownloadRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.AndroidpublisherSystemapksVariantsDownloadResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def androidpublisher_systemapks_variants_get(self, request: operations.AndroidpublisherSystemapksVariantsGetRequest, security: operations.AndroidpublisherSystemapksVariantsGetSecurity) -> operations.AndroidpublisherSystemapksVariantsGetResponse:
        r"""Returns a previously created system APK variant."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.AndroidpublisherSystemapksVariantsGetRequest, base_url, '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}', request)
        
        query_params = utils.get_query_params(operations.AndroidpublisherSystemapksVariantsGetRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.AndroidpublisherSystemapksVariantsGetResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Variant])
                res.variant = out

        return res

    def androidpublisher_systemapks_variants_list(self, request: operations.AndroidpublisherSystemapksVariantsListRequest, security: operations.AndroidpublisherSystemapksVariantsListSecurity) -> operations.AndroidpublisherSystemapksVariantsListResponse:
        r"""Returns the list of previously created system APK variants."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.AndroidpublisherSystemapksVariantsListRequest, base_url, '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants', request)
        
        query_params = utils.get_query_params(operations.AndroidpublisherSystemapksVariantsListRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.AndroidpublisherSystemapksVariantsListResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.SystemApksListResponse])
                res.system_apks_list_response = out

        return res

    