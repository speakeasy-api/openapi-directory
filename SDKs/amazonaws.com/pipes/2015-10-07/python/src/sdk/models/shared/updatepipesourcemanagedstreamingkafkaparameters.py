"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import mskaccesscredentials as shared_mskaccesscredentials
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdatePipeSourceManagedStreamingKafkaParameters:
    r"""The parameters for using an MSK stream as a source."""
    
    batch_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BatchSize'), 'exclude': lambda f: f is None }})  
    credentials: Optional[shared_mskaccesscredentials.MSKAccessCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Credentials'), 'exclude': lambda f: f is None }})  
    maximum_batching_window_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumBatchingWindowInSeconds'), 'exclude': lambda f: f is None }})  
    