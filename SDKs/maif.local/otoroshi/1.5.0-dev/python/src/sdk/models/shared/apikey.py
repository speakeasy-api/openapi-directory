"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIKey:
    r"""An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services."""
    
    authorized_entities: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizedEntities') }})
    r"""The group/service ids (prefixed by group_ or service_ on which the key is authorized"""  
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientId') }})
    r"""The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything"""  
    client_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientName') }})
    r"""The name of the api key, for humans ;-)"""  
    client_secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientSecret') }})
    r"""The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything"""  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Whether or not the key is enabled. If disabled, resources won't be available to calls using this key"""  
    daily_quota: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dailyQuota'), 'exclude': lambda f: f is None }})
    r"""Authorized number of calls per day"""  
    metadata: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Bunch of metadata for the key"""  
    monthly_quota: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monthlyQuota'), 'exclude': lambda f: f is None }})
    r"""Authorized number of calls per month"""  
    throttling_quota: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('throttlingQuota'), 'exclude': lambda f: f is None }})
    r"""Authorized number of calls per second, measured on 10 seconds"""  
    