"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkClientPolicyRequestBody:
    
    device_policy: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devicePolicy') }})
    r"""The policy to assign. Can be 'Whitelisted', 'Blocked', 'Normal' or 'Group policy'. Required."""  
    group_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupPolicyId'), 'exclude': lambda f: f is None }})
    r"""[optional] If 'devicePolicy' is set to 'Group policy' this param is used to specify the group policy ID."""  
    

@dataclasses.dataclass
class UpdateNetworkClientPolicyRequest:
    
    client_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'clientId', 'style': 'simple', 'explode': False }})  
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: UpdateNetworkClientPolicyRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkClientPolicyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_client_policy_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    