/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Customize how deployment manager will validate the resource against schema errors.
 */
export enum ValidationOptionsSchemaValidationEnum {
  Unknown = "UNKNOWN",
  Ignore = "IGNORE",
  IgnoreWithWarnings = "IGNORE_WITH_WARNINGS",
  Fail = "FAIL",
}

/**
 * Specify what to do with extra properties when executing a request.
 */
export enum ValidationOptionsUndeclaredPropertiesEnum {
  Unknown = "UNKNOWN",
  Include = "INCLUDE",
  Ignore = "IGNORE",
  IncludeWithWarnings = "INCLUDE_WITH_WARNINGS",
  IgnoreWithWarnings = "IGNORE_WITH_WARNINGS",
  Fail = "FAIL",
}

/**
 * Options for how to validate and process properties on a resource.
 */
export class ValidationOptions extends SpeakeasyBase {
  /**
   * Customize how deployment manager will validate the resource against schema errors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemaValidation" })
  schemaValidation?: ValidationOptionsSchemaValidationEnum;

  /**
   * Specify what to do with extra properties when executing a request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "undeclaredProperties" })
  undeclaredProperties?: ValidationOptionsUndeclaredPropertiesEnum;
}
