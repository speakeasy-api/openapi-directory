<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CodeScanningListAlertsForOrgRequest
{
    /**
     * A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.5/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for results after this cursor.
     * 
     * @var ?string $after
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=after')]
    public ?string $after = null;
    
    /**
     * A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.5/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for results before this cursor.
     * 
     * @var ?string $before
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=before')]
    public ?string $before = null;
    
    /**
     * The direction to sort the results by.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DirectionEnum $direction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=direction')]
    public ?\OpenAPI\OpenAPI\Models\Shared\DirectionEnum $direction = null;
    
    /**
     * The organization name. The name is not case sensitive.
     * 
     * @var string $org
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=org')]
    public string $org;
    
    /**
     * Page number of the results to fetch.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results per page (max 100).
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * The property by which to sort the results.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CodeScanningListAlertsForOrgSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?CodeScanningListAlertsForOrgSortEnum $sort = null;
    
    /**
     * If specified, only code scanning alerts with this state will be returned.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertStateEnum $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?\OpenAPI\OpenAPI\Models\Shared\CodeScanningAlertStateEnum $state = null;
    
    /**
     * The GUID of a code scanning tool. Only results by this tool will be listed. Note that some code scanning tools may not include a GUID in their analysis data. You can specify the tool by using either `tool_guid` or `tool_name`, but not both.
     * 
     * @var ?string $toolGuid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=tool_guid')]
    public ?string $toolGuid = null;
    
    /**
     * The name of a code scanning tool. Only results by this tool will be listed. You can specify the tool by using either `tool_name` or `tool_guid`, but not both.
     * 
     * @var ?string $toolName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=tool_name')]
    public ?string $toolName = null;
    
	public function __construct()
	{
		$this->after = null;
		$this->before = null;
		$this->direction = null;
		$this->org = "";
		$this->page = null;
		$this->perPage = null;
		$this->sort = null;
		$this->state = null;
		$this->toolGuid = null;
		$this->toolName = null;
	}
}
