// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeClusterParametersActionEnum
type GETDescribeClusterParametersActionEnum string

const (
	GETDescribeClusterParametersActionEnumDescribeClusterParameters GETDescribeClusterParametersActionEnum = "DescribeClusterParameters"
)

func (e GETDescribeClusterParametersActionEnum) ToPointer() *GETDescribeClusterParametersActionEnum {
	return &e
}

func (e *GETDescribeClusterParametersActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeClusterParameters":
		*e = GETDescribeClusterParametersActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeClusterParametersActionEnum: %v", v)
	}
}

// GETDescribeClusterParametersVersionEnum
type GETDescribeClusterParametersVersionEnum string

const (
	GETDescribeClusterParametersVersionEnumTwoThousandAndTwelve1201 GETDescribeClusterParametersVersionEnum = "2012-12-01"
)

func (e GETDescribeClusterParametersVersionEnum) ToPointer() *GETDescribeClusterParametersVersionEnum {
	return &e
}

func (e *GETDescribeClusterParametersVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETDescribeClusterParametersVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeClusterParametersVersionEnum: %v", v)
	}
}

type GETDescribeClusterParametersRequest struct {
	Action GETDescribeClusterParametersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeClusterParameters</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// The name of a cluster parameter group for which to return details.
	ParameterGroupName string `queryParam:"style=form,explode=true,name=ParameterGroupName"`
	// <p>The parameter types to return. Specify <code>user</code> to show parameters that are different form the default. Similarly, specify <code>engine-default</code> to show parameters that are the same as the default parameter group. </p> <p>Default: All parameter types returned.</p> <p>Valid Values: <code>user</code> | <code>engine-default</code> </p>
	Source            *string                                 `queryParam:"style=form,explode=true,name=Source"`
	Version           GETDescribeClusterParametersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeClusterParametersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
