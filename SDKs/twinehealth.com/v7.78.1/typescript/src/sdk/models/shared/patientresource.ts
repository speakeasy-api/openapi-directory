/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { ArchiveHistory } from "./archivehistory";
import { PatientIdentifier } from "./patientidentifier";
import { PhoneNumber } from "./phonenumber";
import { Expose, Transform, Type } from "class-transformer";

export enum PatientResourceAttributesGenderEnum {
  Male = "male",
  Female = "female",
  Other = "other",
}

export class PatientResourceAttributesInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Address })
  @Expose({ name: "addresses" })
  @Type(() => Address)
  addresses?: Address[];

  @SpeakeasyMetadata({ elemType: ArchiveHistory })
  @Expose({ name: "archive_history" })
  @Type(() => ArchiveHistory)
  archiveHistory?: ArchiveHistory[];

  @SpeakeasyMetadata()
  @Expose({ name: "birth_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  birthDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "email_address" })
  emailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: PatientResourceAttributesGenderEnum;

  @SpeakeasyMetadata({ elemType: PatientIdentifier })
  @Expose({ name: "identifiers" })
  @Type(() => PatientIdentifier)
  identifiers?: PatientIdentifier[];

  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Coach's note about the patient. Not visible to the patient.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  @SpeakeasyMetadata({ elemType: PhoneNumber })
  @Expose({ name: "phone_numbers" })
  @Type(() => PhoneNumber)
  phoneNumbers?: PhoneNumber[];
}

export class PatientResourceRelationshipsCoachesDataMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  primary?: boolean;
}

export enum PatientResourceRelationshipsCoachesDataTypeEnum {
  Coach = "coach",
}

export class PatientResourceRelationshipsCoachesData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => PatientResourceRelationshipsCoachesDataMeta)
  meta?: PatientResourceRelationshipsCoachesDataMeta;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: PatientResourceRelationshipsCoachesDataTypeEnum;
}

export class PatientResourceRelationshipsCoachesInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PatientResourceRelationshipsCoachesData })
  @Expose({ name: "data" })
  @Type(() => PatientResourceRelationshipsCoachesData)
  data: PatientResourceRelationshipsCoachesData[];
}

export enum PatientResourceRelationshipsGroupsDataTypeEnum {
  Group = "group",
}

export class PatientResourceRelationshipsGroupsData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: PatientResourceRelationshipsGroupsDataTypeEnum;
}

export class PatientResourceRelationshipsGroups extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PatientResourceRelationshipsGroupsData })
  @Expose({ name: "data" })
  @Type(() => PatientResourceRelationshipsGroupsData)
  data: PatientResourceRelationshipsGroupsData[];
}

export class PatientResourceRelationshipsInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "coaches" })
  @Type(() => PatientResourceRelationshipsCoachesInput)
  coaches?: PatientResourceRelationshipsCoachesInput;

  @SpeakeasyMetadata()
  @Expose({ name: "groups" })
  @Type(() => PatientResourceRelationshipsGroups)
  groups: PatientResourceRelationshipsGroups;
}

export enum PatientResourceTypeEnum {
  Patient = "patient",
}

export class PatientResourceInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => PatientResourceAttributesInput)
  attributes: PatientResourceAttributesInput;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => PatientResourceRelationshipsInput)
  relationships?: PatientResourceRelationshipsInput;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: PatientResourceTypeEnum;
}

/**
 * A patient's motivation statement.
 */
export class PatientResourceAttributesStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class PatientResourceAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Address })
  @Expose({ name: "addresses" })
  @Type(() => Address)
  addresses?: Address[];

  @SpeakeasyMetadata({ elemType: ArchiveHistory })
  @Expose({ name: "archive_history" })
  @Type(() => ArchiveHistory)
  archiveHistory?: ArchiveHistory[];

  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "birth_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  birthDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "email_address" })
  emailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enrolled_at" })
  enrolledAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "first_access_at" })
  firstAccessAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: PatientResourceAttributesGenderEnum;

  @SpeakeasyMetadata({ elemType: PatientIdentifier })
  @Expose({ name: "identifiers" })
  @Type(() => PatientIdentifier)
  identifiers?: PatientIdentifier[];

  @SpeakeasyMetadata()
  @Expose({ name: "invited_at" })
  invitedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_access_at" })
  lastAccessAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Coach's note about the patient. Not visible to the patient.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  @SpeakeasyMetadata({ elemType: PhoneNumber })
  @Expose({ name: "phone_numbers" })
  @Type(() => PhoneNumber)
  phoneNumbers?: PhoneNumber[];

  /**
   * A patient's motivation statement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statement" })
  @Type(() => PatientResourceAttributesStatement)
  statement?: PatientResourceAttributesStatement;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}

export class PatientResourceLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  self?: string;

  /**
   * A link to the patient record in the Fitbit Plus web application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "twine_web_app" })
  twineWebApp?: string;
}

export class PatientResourceRelationshipsCoachesLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "related" })
  related?: string;
}

export class PatientResourceRelationshipsCoaches extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PatientResourceRelationshipsCoachesData })
  @Expose({ name: "data" })
  @Type(() => PatientResourceRelationshipsCoachesData)
  data: PatientResourceRelationshipsCoachesData[];

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => PatientResourceRelationshipsCoachesLinks)
  links?: PatientResourceRelationshipsCoachesLinks;
}

export class PatientResourceRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "coaches" })
  @Type(() => PatientResourceRelationshipsCoaches)
  coaches?: PatientResourceRelationshipsCoaches;

  @SpeakeasyMetadata()
  @Expose({ name: "groups" })
  @Type(() => PatientResourceRelationshipsGroups)
  groups: PatientResourceRelationshipsGroups;
}

export class PatientResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => PatientResourceAttributes)
  attributes: PatientResourceAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => PatientResourceLinks)
  links?: PatientResourceLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => PatientResourceRelationships)
  relationships?: PatientResourceRelationships;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: PatientResourceTypeEnum;
}
