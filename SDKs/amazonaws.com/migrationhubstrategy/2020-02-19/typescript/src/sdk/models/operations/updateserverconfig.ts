/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 *  Information about all the available strategy options for migrating and modernizing an application component.
 */
export class UpdateServerConfigRequestBodyStrategyOption extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "isPreferred" })
  isPreferred?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "strategy" })
  strategy?: shared.StrategyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "targetDestination" })
  targetDestination?: shared.TargetDestinationEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "toolName" })
  toolName?: shared.TransformationToolNameEnum;
}

export class UpdateServerConfigRequestBody extends SpeakeasyBase {
  /**
   *  The ID of the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serverId" })
  serverId: string;

  /**
   *  Information about all the available strategy options for migrating and modernizing an application component.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "strategyOption" })
  @Type(() => UpdateServerConfigRequestBodyStrategyOption)
  strategyOption?: UpdateServerConfigRequestBodyStrategyOption;
}

export class UpdateServerConfigRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateServerConfigRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateServerConfigResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateServerConfigResponse?: Record<string, any>;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
