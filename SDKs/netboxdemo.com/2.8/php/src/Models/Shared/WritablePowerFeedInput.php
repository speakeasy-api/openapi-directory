<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class WritablePowerFeedInput
{
	#[\JMS\Serializer\Annotation\SerializedName('amperage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $amperage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('comments')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comments = null;
    
    /**
     * $customFields
     * 
     * @var ?array<string, mixed> $customFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_fields')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFields = null;
    
    /**
     * Maximum permissible draw (percentage)
     * 
     * @var ?int $maxUtilization
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_utilization')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxUtilization = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('phase')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WritablePowerFeedPhaseEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WritablePowerFeedPhaseEnum $phase = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('power_panel')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $powerPanel;
    
	#[\JMS\Serializer\Annotation\SerializedName('rack')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $rack = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WritablePowerFeedStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WritablePowerFeedStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('supply')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WritablePowerFeedSupplyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WritablePowerFeedSupplyEnum $supply = null;
    
    /**
     * $tags
     * 
     * @var ?array<string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WritablePowerFeedTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WritablePowerFeedTypeEnum $type = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('voltage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $voltage = null;
    
	public function __construct()
	{
		$this->amperage = null;
		$this->comments = null;
		$this->customFields = null;
		$this->maxUtilization = null;
		$this->name = "";
		$this->phase = null;
		$this->powerPanel = 0;
		$this->rack = null;
		$this->status = null;
		$this->supply = null;
		$this->tags = null;
		$this->type = null;
		$this->voltage = null;
	}
}
