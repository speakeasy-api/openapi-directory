"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import digitalsignaturemethod_enum as shared_digitalsignaturemethod_enum
from ..shared import entitlementdata as shared_entitlementdata
from ..shared import metadata as shared_metadata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CheckoutBorrowLicenseRequest:
    
    client_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientToken') }})  
    digital_signature_method: shared_digitalsignaturemethod_enum.DigitalSignatureMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DigitalSignatureMethod') }})  
    entitlements: list[shared_entitlementdata.EntitlementData] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Entitlements') }})  
    license_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LicenseArn') }})  
    checkout_metadata: Optional[list[shared_metadata.Metadata]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CheckoutMetadata'), 'exclude': lambda f: f is None }})  
    node_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NodeId'), 'exclude': lambda f: f is None }})  
    