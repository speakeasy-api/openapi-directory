"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricsvalue as shared_metricsvalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Metrics:
    r"""Resource containing usage stats for a given script, based on the supplied filter and mask present in the request."""
    
    active_users: Optional[list[shared_metricsvalue.MetricsValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activeUsers'), 'exclude': lambda f: f is None }})
    r"""Number of active users."""  
    failed_executions: Optional[list[shared_metricsvalue.MetricsValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failedExecutions'), 'exclude': lambda f: f is None }})
    r"""Number of failed executions."""  
    total_executions: Optional[list[shared_metricsvalue.MetricsValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalExecutions'), 'exclude': lambda f: f is None }})
    r"""Number of total executions."""  
    