"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CardHeaderImageStyleEnum(str, Enum):
    r"""The image's type (e.g. square border or circular border)."""
    IMAGE_STYLE_UNSPECIFIED = 'IMAGE_STYLE_UNSPECIFIED'
    IMAGE = 'IMAGE'
    AVATAR = 'AVATAR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CardHeader:
    
    image_style: Optional[CardHeaderImageStyleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageStyle'), 'exclude': lambda f: f is None }})
    r"""The image's type (e.g. square border or circular border)."""  
    image_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageUrl'), 'exclude': lambda f: f is None }})
    r"""The URL of the image in the card header."""  
    subtitle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subtitle'), 'exclude': lambda f: f is None }})
    r"""The subtitle of the card header."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The title must be specified. The header has a fixed height: if both a title and subtitle is specified, each will take up 1 line. If only the title is specified, it will take up both lines."""  
    