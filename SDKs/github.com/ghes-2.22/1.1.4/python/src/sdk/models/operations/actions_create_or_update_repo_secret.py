"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsCreateOrUpdateRepoSecretRequestBody:
    
    encrypted_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encrypted_value'), 'exclude': lambda f: f is None }})
    r"""Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/enterprise-server@2.22/rest/reference/actions#get-a-repository-public-key) endpoint."""  
    key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key_id'), 'exclude': lambda f: f is None }})
    r"""ID of the key you used to encrypt the secret."""  
    

@dataclasses.dataclass
class ActionsCreateOrUpdateRepoSecretRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})  
    request_body: ActionsCreateOrUpdateRepoSecretRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    secret_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'secret_name', 'style': 'simple', 'explode': False }})
    r"""secret_name parameter"""  
    

@dataclasses.dataclass
class ActionsCreateOrUpdateRepoSecretResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    actions_create_or_update_repo_secret_201_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Response when creating a secret"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    