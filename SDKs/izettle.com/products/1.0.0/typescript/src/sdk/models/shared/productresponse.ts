/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CategoryDTO } from "./categorydto";
import { MetadataDTO } from "./metadatadto";
import { OnlineProperties } from "./onlineproperties";
import { PresentationDTO } from "./presentationdto";
import { VariantDTO } from "./variantdto";
import { VariantOptionDefinitions } from "./variantoptiondefinitions";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Product created. It will include the Product in the response only if 'returnEntity' is true
 */
export class ProductResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "categories" })
  categories?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  @Type(() => CategoryDTO)
  category?: CategoryDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag: string;

  @SpeakeasyMetadata()
  @Expose({ name: "externalReference" })
  externalReference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imageLookupKeys" })
  imageLookupKeys?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => MetadataDTO)
  metadata?: MetadataDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "online" })
  @Type(() => OnlineProperties)
  online?: OnlineProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "presentation" })
  @Type(() => PresentationDTO)
  presentation?: PresentationDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "taxCode" })
  taxCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taxExempt" })
  taxExempt?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "taxRates" })
  taxRates?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "unitName" })
  unitName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedBy" })
  updatedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid: string;

  @SpeakeasyMetadata()
  @Expose({ name: "variantOptionDefinitions" })
  @Type(() => VariantOptionDefinitions)
  variantOptionDefinitions?: VariantOptionDefinitions;

  @SpeakeasyMetadata({ elemType: VariantDTO })
  @Expose({ name: "variants" })
  @Type(() => VariantDTO)
  variants: VariantDTO[];

  @SpeakeasyMetadata()
  @Expose({ name: "vatPercentage" })
  vatPercentage?: number;
}
