// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopCrawlerXAmzTargetEnum
type StopCrawlerXAmzTargetEnum string

const (
	StopCrawlerXAmzTargetEnumAwsGlueStopCrawler StopCrawlerXAmzTargetEnum = "AWSGlue.StopCrawler"
)

func (e *StopCrawlerXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.StopCrawler":
		*e = StopCrawlerXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopCrawlerXAmzTargetEnum: %s", s)
	}
}

type StopCrawlerRequest struct {
	StopCrawlerRequest shared.StopCrawlerRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         StopCrawlerXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopCrawlerResponse struct {
	ContentType string
	// CrawlerNotRunningException
	CrawlerNotRunningException interface{}
	// CrawlerStoppingException
	CrawlerStoppingException interface{}
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	StopCrawlerResponse map[string]interface{}
}
