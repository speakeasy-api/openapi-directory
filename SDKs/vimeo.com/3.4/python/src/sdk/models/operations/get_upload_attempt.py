"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import upload_attempt as shared_upload_attempt
from typing import Optional


@dataclasses.dataclass
class GetUploadAttemptSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetUploadAttemptRequest:
    
    upload: float = dataclasses.field(metadata={'path_param': { 'field_name': 'upload', 'style': 'simple', 'explode': False }})
    r"""The ID of the upload attempt."""  
    user_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'user_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the user."""  
    

@dataclasses.dataclass
class GetUploadAttemptResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    upload_attempt: Optional[shared_upload_attempt.UploadAttempt] = dataclasses.field(default=None)
    r"""The upload attempt was returned."""  
    