/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DistibutionReleasesInstallAnalyticsRequestBodyReleases extends SpeakeasyBase {
  /**
   * distribution group id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distribution_group_id" })
  distributionGroupId: string;

  /**
   * release id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "release_id" })
  releaseId: number;

  /**
   * user id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId: string;
}

/**
 * The install analytics request payload
 */
export class DistibutionReleasesInstallAnalyticsRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DistibutionReleasesInstallAnalyticsRequestBodyReleases,
  })
  @Expose({ name: "releases" })
  @Type(() => DistibutionReleasesInstallAnalyticsRequestBodyReleases)
  releases?: DistibutionReleasesInstallAnalyticsRequestBodyReleases[];
}

export class DistibutionReleasesInstallAnalyticsRequest extends SpeakeasyBase {
  /**
   * The install analytics request payload
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: DistibutionReleasesInstallAnalyticsRequestBody;

  /**
   * The name of the app
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the app owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export class DistibutionReleasesInstallAnalyticsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
