"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FilterValue:
    r"""A filter to select resources based on an exact field value. For any given
    value, the value can only be in one property. Depending on the field, either
    all properties can be set or only a subset will be available.
    
    Refer to the documentation of the field.
    """
    
    all: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('all'), 'exclude': lambda f: f is None }})
    r"""A list of terms that must be present on the field of the resource."""  
    any: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('any'), 'exclude': lambda f: f is None }})
    r"""A list of terms where at least one of them must be present on the
    field of the resource.
    """  
    none: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('none'), 'exclude': lambda f: f is None }})
    r"""A list of terms that must not be present on the field the resource"""  
    