/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApiV2010AccountRecording - OK
 */
public class ApiV2010AccountRecording {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public ApiV2010AccountRecording withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The API version used during the recording.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_version")
    public String apiVersion;
    public ApiV2010AccountRecording withApiVersion(String apiVersion) {
        this.apiVersion = apiVersion;
        return this;
    }
    
    /**
     * The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Recording resource is associated with. This will always refer to the parent leg of a two-leg call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_sid")
    public String callSid;
    public ApiV2010AccountRecording withCallSid(String callSid) {
        this.callSid = callSid;
        return this;
    }
    
    /**
     * The number of channels in the final recording file. Can be: `1` or `2`. You can split a call with two legs into two separate recording channels if you record using [TwiML Dial](https://www.twilio.com/docs/voice/twiml/dial#record) or the [Outbound Rest API](https://www.twilio.com/docs/voice/make-calls#manage-your-outbound-call).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channels")
    public Long channels;
    public ApiV2010AccountRecording withChannels(Long channels) {
        this.channels = channels;
        return this;
    }
    
    /**
     * The Conference SID that identifies the conference associated with the recording, if a conference recording.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conference_sid")
    public String conferenceSid;
    public ApiV2010AccountRecording withConferenceSid(String conferenceSid) {
        this.conferenceSid = conferenceSid;
        return this;
    }
    
    /**
     * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_created")
    public String dateCreated;
    public ApiV2010AccountRecording withDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_updated")
    public String dateUpdated;
    public ApiV2010AccountRecording withDateUpdated(String dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The length of the recording in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public String duration;
    public ApiV2010AccountRecording withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * How to decrypt the recording if it was encrypted using [Call Recording Encryption](https://www.twilio.com/docs/voice/tutorials/voice-recording-encryption) feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryption_details")
    public Object encryptionDetails;
    public ApiV2010AccountRecording withEncryptionDetails(Object encryptionDetails) {
        this.encryptionDetails = encryptionDetails;
        return this;
    }
    
    /**
     * The error code that describes why the recording is `absent`. The error code is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors). This value is null if the recording `status` is not `absent`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error_code")
    public Long errorCode;
    public ApiV2010AccountRecording withErrorCode(Long errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    /**
     * The URL of the media file associated with this recording resource. When stored externally, this is the full URL location of the media file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media_url")
    public String mediaUrl;
    public ApiV2010AccountRecording withMediaUrl(String mediaUrl) {
        this.mediaUrl = mediaUrl;
        return this;
    }
    
    /**
     * The one-time cost of creating the recording in the `price_unit` currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public String price;
    public ApiV2010AccountRecording withPrice(String price) {
        this.price = price;
        return this;
    }
    
    /**
     * The currency used in the `price` property. Example: `USD`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price_unit")
    public String priceUnit;
    public ApiV2010AccountRecording withPriceUnit(String priceUnit) {
        this.priceUnit = priceUnit;
        return this;
    }
    
    /**
     * The unique string that that we created to identify the Recording resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;
    public ApiV2010AccountRecording withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public RecordingEnumSourceEnum source;
    public ApiV2010AccountRecording withSource(RecordingEnumSourceEnum source) {
        this.source = source;
        return this;
    }
    
    /**
     * The start time of the recording in GMT and in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start_time")
    public String startTime;
    public ApiV2010AccountRecording withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public RecordingEnumStatusEnum status;
    public ApiV2010AccountRecording withStatus(RecordingEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * A list of related resources identified by their relative URIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subresource_uris")
    public java.util.Map<String, Object> subresourceUris;
    public ApiV2010AccountRecording withSubresourceUris(java.util.Map<String, Object> subresourceUris) {
        this.subresourceUris = subresourceUris;
        return this;
    }
    
    /**
     * The URI of the resource, relative to `https://api.twilio.com`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;
    public ApiV2010AccountRecording withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
}
