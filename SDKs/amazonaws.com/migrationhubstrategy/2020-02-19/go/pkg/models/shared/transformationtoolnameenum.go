// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TransformationToolNameEnum string

const (
	TransformationToolNameEnumApp2Container                           TransformationToolNameEnum = "App2Container"
	TransformationToolNameEnumPortingAssistantForNet                  TransformationToolNameEnum = "Porting Assistant For .NET"
	TransformationToolNameEnumEndOfSupportMigration                   TransformationToolNameEnum = "End of Support Migration"
	TransformationToolNameEnumWindowsWebApplicationMigrationAssistant TransformationToolNameEnum = "Windows Web Application Migration Assistant"
	TransformationToolNameEnumApplicationMigrationService             TransformationToolNameEnum = "Application Migration Service"
	TransformationToolNameEnumStrategyRecommendationSupport           TransformationToolNameEnum = "Strategy Recommendation Support"
	TransformationToolNameEnumInPlaceOperatingSystemUpgrade           TransformationToolNameEnum = "In Place Operating System Upgrade"
	TransformationToolNameEnumSchemaConversionTool                    TransformationToolNameEnum = "Schema Conversion Tool"
	TransformationToolNameEnumDatabaseMigrationService                TransformationToolNameEnum = "Database Migration Service"
	TransformationToolNameEnumNativeSQLServerBackupRestore            TransformationToolNameEnum = "Native SQL Server Backup/Restore"
)

func (e *TransformationToolNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "App2Container":
		fallthrough
	case "Porting Assistant For .NET":
		fallthrough
	case "End of Support Migration":
		fallthrough
	case "Windows Web Application Migration Assistant":
		fallthrough
	case "Application Migration Service":
		fallthrough
	case "Strategy Recommendation Support":
		fallthrough
	case "In Place Operating System Upgrade":
		fallthrough
	case "Schema Conversion Tool":
		fallthrough
	case "Database Migration Service":
		fallthrough
	case "Native SQL Server Backup/Restore":
		*e = TransformationToolNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransformationToolNameEnum: %s", s)
	}
}
