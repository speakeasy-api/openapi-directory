// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResolverEndpointTypeEnum string

const (
	ResolverEndpointTypeEnumIpv6      ResolverEndpointTypeEnum = "IPV6"
	ResolverEndpointTypeEnumIpv4      ResolverEndpointTypeEnum = "IPV4"
	ResolverEndpointTypeEnumDualstack ResolverEndpointTypeEnum = "DUALSTACK"
)

func (e ResolverEndpointTypeEnum) ToPointer() *ResolverEndpointTypeEnum {
	return &e
}

func (e *ResolverEndpointTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IPV6":
		fallthrough
	case "IPV4":
		fallthrough
	case "DUALSTACK":
		*e = ResolverEndpointTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResolverEndpointTypeEnum: %v", v)
	}
}
