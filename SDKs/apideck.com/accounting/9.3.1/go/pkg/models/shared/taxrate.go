// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type TaxRateComponents struct {
	Compound *bool    `json:"compound,omitempty"`
	ID       *string  `json:"id,omitempty"`
	Name     *string  `json:"name,omitempty"`
	Rate     *float64 `json:"rate,omitempty"`
}

// TaxRateTaxRateStatusEnum - Tax rate status
type TaxRateTaxRateStatusEnum string

const (
	TaxRateTaxRateStatusEnumActive   TaxRateTaxRateStatusEnum = "active"
	TaxRateTaxRateStatusEnumInactive TaxRateTaxRateStatusEnum = "inactive"
	TaxRateTaxRateStatusEnumArchived TaxRateTaxRateStatusEnum = "archived"
)

func (e TaxRateTaxRateStatusEnum) ToPointer() *TaxRateTaxRateStatusEnum {
	return &e
}

func (e *TaxRateTaxRateStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "archived":
		*e = TaxRateTaxRateStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaxRateTaxRateStatusEnum: %v", v)
	}
}

type TaxRateInput struct {
	// Tax code assigned to identify this tax rate.
	Code       *string             `json:"code,omitempty"`
	Components []TaxRateComponents `json:"components,omitempty"`
	// Description of tax rate
	Description *string `json:"description,omitempty"`
	// Effective tax rate
	EffectiveTaxRate *float64 `json:"effective_tax_rate,omitempty"`
	// ID assigned to identify this tax rate.
	ID *string `json:"id,omitempty"`
	// Name assigned to identify this tax rate.
	Name *string `json:"name,omitempty"`
	// ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
	OriginalTaxRateID *string `json:"original_tax_rate_id,omitempty"`
	// Report Tax type to aggregate tax collected or paid for reporting purposes
	ReportTaxType *string `json:"report_tax_type,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// Tax rate status
	Status *TaxRateTaxRateStatusEnum `json:"status,omitempty"`
	// Unique identifier for the account for tax collected.
	TaxPayableAccountID *string `json:"tax_payable_account_id,omitempty"`
	// Unique identifier for the account for tax remitted.
	TaxRemittedAccountID *string `json:"tax_remitted_account_id,omitempty"`
	// Not compounded sum of the components of a tax rate
	TotalTaxRate *float64 `json:"total_tax_rate,omitempty"`
	// Tax type used to indicate the source of tax collected or paid
	Type *string `json:"type,omitempty"`
}

type TaxRate struct {
	// Tax code assigned to identify this tax rate.
	Code       *string             `json:"code,omitempty"`
	Components []TaxRateComponents `json:"components,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// Description of tax rate
	Description *string `json:"description,omitempty"`
	// Effective tax rate
	EffectiveTaxRate *float64 `json:"effective_tax_rate,omitempty"`
	// ID assigned to identify this tax rate.
	ID *string `json:"id,omitempty"`
	// Name assigned to identify this tax rate.
	Name *string `json:"name,omitempty"`
	// ID of the original tax rate from which the new tax rate is derived. Helps to understand the relationship between corresponding tax rate entities.
	OriginalTaxRateID *string `json:"original_tax_rate_id,omitempty"`
	// Report Tax type to aggregate tax collected or paid for reporting purposes
	ReportTaxType *string `json:"report_tax_type,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// Tax rate status
	Status *TaxRateTaxRateStatusEnum `json:"status,omitempty"`
	// Unique identifier for the account for tax collected.
	TaxPayableAccountID *string `json:"tax_payable_account_id,omitempty"`
	// Unique identifier for the account for tax remitted.
	TaxRemittedAccountID *string `json:"tax_remitted_account_id,omitempty"`
	// Not compounded sum of the components of a tax rate
	TotalTaxRate *float64 `json:"total_tax_rate,omitempty"`
	// Tax type used to indicate the source of tax collected or paid
	Type *string `json:"type,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
}
