/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Filter Audit logs by Audit log type.
 */
export enum GetAuditlogsAuditLogTypeEnum {
  ProductCreated = "productCreated",
  ProductChanged = "productChanged",
  ProductOwnershipTransferred = "productOwnershipTransferred",
  ProductDeleted = "productDeleted",
  ProductsReordered = "productsReordered",
  TeamMemberInvited = "teamMemberInvited",
  TeamMemberInvitationRevoked = "teamMemberInvitationRevoked",
  TeamMemberJoined = "teamMemberJoined",
  TeamMemberPermissionGroupChanged = "teamMemberPermissionGroupChanged",
  TeamMemberRemoved = "teamMemberRemoved",
  TeamMemberLeft = "teamMemberLeft",
  TeamMemberInvitationChanged = "teamMemberInvitationChanged",
  TeamMemberInvitationResent = "teamMemberInvitationResent",
  TeamMemberInvitationRejected = "teamMemberInvitationRejected",
  ConfigCreated = "configCreated",
  ConfigChanged = "configChanged",
  ConfigDeleted = "configDeleted",
  ConfigsReordered = "configsReordered",
  EnvironmentCreated = "environmentCreated",
  EnvironmentChanged = "environmentChanged",
  EnvironmentDeleted = "environmentDeleted",
  EnvironmentsReordered = "environmentsReordered",
  SettingCreated = "settingCreated",
  SettingChanged = "settingChanged",
  SettingDeleted = "settingDeleted",
  SettingsReordered = "settingsReordered",
  SettingValueChanged = "settingValueChanged",
  WebHookCreated = "webHookCreated",
  WebHookChanged = "webHookChanged",
  WebHookDeleted = "webHookDeleted",
  SubscriptionChanged = "subscriptionChanged",
  PermissionGroupCreated = "permissionGroupCreated",
  PermissionGroupChanged = "permissionGroupChanged",
  PermissionGroupDeleted = "permissionGroupDeleted",
  PermissionGroupDefault = "permissionGroupDefault",
  ApiKeyAdded = "apiKeyAdded",
  ApiKeyRemoved = "apiKeyRemoved",
  IntegrationAdded = "integrationAdded",
  IntegrationChanged = "integrationChanged",
  IntegrationRemoved = "integrationRemoved",
  ApiKeyConnected = "apiKeyConnected",
  IntegrationLinkAdded = "integrationLinkAdded",
  IntegrationLinkRemoved = "integrationLinkRemoved",
  OrganizationAdded = "organizationAdded",
  OrganizationRemoved = "organizationRemoved",
  OrganizationChanged = "organizationChanged",
  OrganizationSubscriptionTypeChanged = "organizationSubscriptionTypeChanged",
  OrganizationAdminChanged = "organizationAdminChanged",
  OrganizationAdminLeft = "organizationAdminLeft",
  OrganizationAdminDisabled2FA = "organizationAdminDisabled2FA",
  TagAdded = "tagAdded",
  TagChanged = "tagChanged",
  TagRemoved = "tagRemoved",
  SettingTagAdded = "settingTagAdded",
  SettingTagRemoved = "settingTagRemoved",
  PublicApiAccessTokenAdded = "publicApiAccessTokenAdded",
  PublicApiAccessTokenRemoved = "publicApiAccessTokenRemoved",
  DomainAdded = "domainAdded",
  DomainVerified = "domainVerified",
  DomainRemoved = "domainRemoved",
  DomainSamlConfigured = "domainSamlConfigured",
  DomainSamlDeleted = "domainSamlDeleted",
  AutoProvisioningConfigurationChanged = "autoProvisioningConfigurationChanged",
  OrganizationMemberJoined = "organizationMemberJoined",
  OrganizationMemberProductJoinRequested = "organizationMemberProductJoinRequested",
  OrganizationMemberProductJoinRequestRejected = "organizationMemberProductJoinRequestRejected",
  OrganizationMemberProductJoinRequestApproved = "organizationMemberProductJoinRequestApproved",
  CodeReferencesUploaded = "codeReferencesUploaded",
  CodeReferenceDeleted = "codeReferenceDeleted",
  CodeReferenceStaleBranchDeleted = "codeReferenceStaleBranchDeleted",
  SegmentCreated = "segmentCreated",
  SegmentChanged = "segmentChanged",
  SegmentDeleted = "segmentDeleted",
  WebhookSigningKeyDeleted = "webhookSigningKeyDeleted",
  WebhookSigningKeyCreated = "webhookSigningKeyCreated",
}

export class GetAuditlogsRequest extends SpeakeasyBase {
  /**
   * Filter Audit logs by Audit log type.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=auditLogType",
  })
  auditLogType?: GetAuditlogsAuditLogTypeEnum;

  /**
   * The identifier of the Config.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=configId",
  })
  configId?: string;

  /**
   * The identifier of the Environment.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=environmentId",
  })
  environmentId?: string;

  /**
   * Filter Audit logs by starting UTC date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fromUtcDateTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  fromUtcDateTime?: Date;

  /**
   * The identifier of the Product.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=productId",
  })
  productId: string;

  /**
   * Filter Audit logs by ending UTC date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=toUtcDateTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  toUtcDateTime?: Date;
}

export class GetAuditlogsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.AuditLogItemModel })
  auditLogItemModels?: shared.AuditLogItemModel[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
