// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LifecycleErrorCodeEnum string

const (
	LifecycleErrorCodeEnumSuccess             LifecycleErrorCodeEnum = "Success"
	LifecycleErrorCodeEnumScriptMissing       LifecycleErrorCodeEnum = "ScriptMissing"
	LifecycleErrorCodeEnumScriptNotExecutable LifecycleErrorCodeEnum = "ScriptNotExecutable"
	LifecycleErrorCodeEnumScriptTimedOut      LifecycleErrorCodeEnum = "ScriptTimedOut"
	LifecycleErrorCodeEnumScriptFailed        LifecycleErrorCodeEnum = "ScriptFailed"
	LifecycleErrorCodeEnumUnknownError        LifecycleErrorCodeEnum = "UnknownError"
)

func (e LifecycleErrorCodeEnum) ToPointer() *LifecycleErrorCodeEnum {
	return &e
}

func (e *LifecycleErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Success":
		fallthrough
	case "ScriptMissing":
		fallthrough
	case "ScriptNotExecutable":
		fallthrough
	case "ScriptTimedOut":
		fallthrough
	case "ScriptFailed":
		fallthrough
	case "UnknownError":
		*e = LifecycleErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LifecycleErrorCodeEnum: %v", v)
	}
}
