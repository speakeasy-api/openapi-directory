// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTSimulatePrincipalPolicyActionEnum
type POSTSimulatePrincipalPolicyActionEnum string

const (
	POSTSimulatePrincipalPolicyActionEnumSimulatePrincipalPolicy POSTSimulatePrincipalPolicyActionEnum = "SimulatePrincipalPolicy"
)

func (e POSTSimulatePrincipalPolicyActionEnum) ToPointer() *POSTSimulatePrincipalPolicyActionEnum {
	return &e
}

func (e *POSTSimulatePrincipalPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SimulatePrincipalPolicy":
		*e = POSTSimulatePrincipalPolicyActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSimulatePrincipalPolicyActionEnum: %v", v)
	}
}

// POSTSimulatePrincipalPolicyVersionEnum
type POSTSimulatePrincipalPolicyVersionEnum string

const (
	POSTSimulatePrincipalPolicyVersionEnumTwoThousandAndTen0508 POSTSimulatePrincipalPolicyVersionEnum = "2010-05-08"
)

func (e POSTSimulatePrincipalPolicyVersionEnum) ToPointer() *POSTSimulatePrincipalPolicyVersionEnum {
	return &e
}

func (e *POSTSimulatePrincipalPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTSimulatePrincipalPolicyVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSimulatePrincipalPolicyVersionEnum: %v", v)
	}
}

type POSTSimulatePrincipalPolicyRequest struct {
	Action POSTSimulatePrincipalPolicyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                                `queryParam:"style=form,explode=true,name=MaxItems"`
	RequestBody       []byte                                 `request:"mediaType=text/xml"`
	Version           POSTSimulatePrincipalPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTSimulatePrincipalPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
