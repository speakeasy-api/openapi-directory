/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodes {
    /**
     * Quantity of an item that is available to be allocated to orders
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availToSellQty")
    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodesAvailToSellQty availToSellQty;

    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodes withAvailToSellQty(GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodesAvailToSellQty availToSellQty) {
        this.availToSellQty = availToSellQty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errors")
    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodesErrors[] errors;

    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodes withErrors(GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodesErrors[] errors) {
        this.errors = errors;
        return this;
    }
    
    /**
     * Quantity of an item that is input by the seller
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputQty")
    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodesInputQty inputQty;

    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodes withInputQty(GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodesInputQty inputQty) {
        this.inputQty = inputQty;
        return this;
    }
    
    /**
     * Quantity that has been ordered by the customers but not yet shipped
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservedQty")
    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodesReservedQty reservedQty;

    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodes withReservedQty(GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodesReservedQty reservedQty) {
        this.reservedQty = reservedQty;
        return this;
    }
    
    /**
     * ShipNode Id of the ship node for which the inventory is requested
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipNode")
    public String shipNode;

    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodes withShipNode(String shipNode) {
        this.shipNode = shipNode;
        return this;
    }
    
    public GetMultiNodeInventoryForSkuAndAllShipnodes200ApplicationJSONNodes(){}
}
