<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GameServer - <p> <b>This data type is used with the GameLift FleetIQ and game server groups.</b> </p> <p>Properties describing a game server that is running on an instance in a game server group. </p> <p>A game server is created by a successful call to <code>RegisterGameServer</code> and deleted by calling <code>DeregisterGameServer</code>. A game server is claimed to host a game session by calling <code>ClaimGameServer</code>. </p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GameServer
{
	#[\JMS\Serializer\Annotation\SerializedName('ClaimStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GameServerClaimStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GameServerClaimStatusEnum $claimStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ConnectionInfo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $connectionInfo = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('GameServerData')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gameServerData = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('GameServerGroupArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gameServerGroupArn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('GameServerGroupName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gameServerGroupName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('GameServerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gameServerId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('InstanceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LastClaimTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastClaimTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LastHealthCheckTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastHealthCheckTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('RegistrationTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $registrationTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('UtilizationStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GameServerUtilizationStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GameServerUtilizationStatusEnum $utilizationStatus = null;
    
	public function __construct()
	{
		$this->claimStatus = null;
		$this->connectionInfo = null;
		$this->gameServerData = null;
		$this->gameServerGroupArn = null;
		$this->gameServerGroupName = null;
		$this->gameServerId = null;
		$this->instanceId = null;
		$this->lastClaimTime = null;
		$this->lastHealthCheckTime = null;
		$this->registrationTime = null;
		$this->utilizationStatus = null;
	}
}
