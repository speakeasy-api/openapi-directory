/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetWorkspacesQueryParams {
    /**
     * Query string to narrow down the response. See
     * [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering) for details.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=q")
    public String q;
    public GetWorkspacesQueryParams withQ(String q) {
        this.q = q;
        return this;
    }
    
    /**
     *             Filters the workspaces based on the authenticated user's role on each workspace.
     * 
     *             * **member**: returns a list of all the workspaces which the caller is a member of
     *                 at least one workspace group or repository
     *             * **collaborator**: returns a list of workspaces which the caller has write access
     *                 to at least one repository in the workspace
     *             * **owner**: returns a list of workspaces which the caller has administrator access
     *             
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=role")
    public GetWorkspacesRoleEnum role;
    public GetWorkspacesQueryParams withRole(GetWorkspacesRoleEnum role) {
        this.role = role;
        return this;
    }
    
    /**
     * Name of a response property to sort results. See
     * [filtering and sorting](/cloud/bitbucket/rest/intro/#sorting-query-results)
     * for details.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GetWorkspacesQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
}
