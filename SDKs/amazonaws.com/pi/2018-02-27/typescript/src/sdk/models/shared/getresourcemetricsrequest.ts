/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MetricQuery } from "./metricquery";
import { PeriodAlignmentEnum } from "./periodalignmentenum";
import { ServiceTypeEnum } from "./servicetypeenum";
import { Expose, Transform, Type } from "class-transformer";

export class GetResourceMetricsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Identifier" })
  identifier: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata({ elemType: MetricQuery })
  @Expose({ name: "MetricQueries" })
  @Type(() => MetricQuery)
  metricQueries: MetricQuery[];

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PeriodAlignment" })
  periodAlignment?: PeriodAlignmentEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PeriodInSeconds" })
  periodInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceType" })
  serviceType: ServiceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;
}
