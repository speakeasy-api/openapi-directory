/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudMlV1ParameterSpec - Represents a single hyperparameter to optimize.
 */
public class GoogleCloudMlV1ParameterSpec {
    /**
     * Required if type is `CATEGORICAL`. The list of possible categories.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoricalValues")
    public String[] categoricalValues;

    public GoogleCloudMlV1ParameterSpec withCategoricalValues(String[] categoricalValues) {
        this.categoricalValues = categoricalValues;
        return this;
    }
    
    /**
     * Required if type is `DISCRETE`. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discreteValues")
    public Double[] discreteValues;

    public GoogleCloudMlV1ParameterSpec withDiscreteValues(Double[] discreteValues) {
        this.discreteValues = discreteValues;
        return this;
    }
    
    /**
     * Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is `INTEGER`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxValue")
    public Double maxValue;

    public GoogleCloudMlV1ParameterSpec withMaxValue(Double maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    /**
     * Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is INTEGER.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minValue")
    public Double minValue;

    public GoogleCloudMlV1ParameterSpec withMinValue(Double minValue) {
        this.minValue = minValue;
        return this;
    }
    
    /**
     * Required. The parameter name must be unique amongst all ParameterConfigs in a HyperparameterSpec message. E.g., "learning_rate".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameterName")
    public String parameterName;

    public GoogleCloudMlV1ParameterSpec withParameterName(String parameterName) {
        this.parameterName = parameterName;
        return this;
    }
    
    /**
     * Optional. How the parameter should be scaled to the hypercube. Leave unset for categorical parameters. Some kind of scaling is strongly recommended for real or integral parameters (e.g., `UNIT_LINEAR_SCALE`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scaleType")
    public GoogleCloudMlV1ParameterSpecScaleTypeEnum scaleType;

    public GoogleCloudMlV1ParameterSpec withScaleType(GoogleCloudMlV1ParameterSpecScaleTypeEnum scaleType) {
        this.scaleType = scaleType;
        return this;
    }
    
    /**
     * Required. The type of the parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public GoogleCloudMlV1ParameterSpecTypeEnum type;

    public GoogleCloudMlV1ParameterSpec withType(GoogleCloudMlV1ParameterSpecTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public GoogleCloudMlV1ParameterSpec(){}
}
