<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ReportResponse - Response message for the Report method.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ReportResponse
{
    /**
     * Partial failures, one for each `Operation` in the request that failed processing. There are three possible combinations of the RPC status: 1. The combination of a successful RPC status and an empty `report_errors` list indicates a complete success where all `Operations` in the request are processed successfully. 2. The combination of a successful RPC status and a non-empty `report_errors` list indicates a partial success where some `Operations` in the request succeeded. Each `Operation` that failed processing has a corresponding item in this list. 3. A failed RPC status indicates a general non-deterministic failure. When this happens, it's impossible to know which of the 'Operations' in the request succeeded or failed.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ReportError> $reportErrors
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportErrors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ReportError>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $reportErrors = null;
    
    /**
     * The actual config id used to process the request.
     * 
     * @var ?string $serviceConfigId
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceConfigId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceConfigId = null;
    
    /**
     * The current service rollout id used to process the request.
     * 
     * @var ?string $serviceRolloutId
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceRolloutId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceRolloutId = null;
    
	public function __construct()
	{
		$this->reportErrors = null;
		$this->serviceConfigId = null;
		$this->serviceRolloutId = null;
	}
}
