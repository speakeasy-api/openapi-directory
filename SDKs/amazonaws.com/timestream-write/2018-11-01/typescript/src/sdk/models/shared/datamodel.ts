/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DimensionMapping } from "./dimensionmapping";
import { MixedMeasureMapping } from "./mixedmeasuremapping";
import { MultiMeasureMappings } from "./multimeasuremappings";
import { TimeUnitEnum } from "./timeunitenum";
import { Expose, Type } from "class-transformer";

/**
 * Data model for a batch load task.
 */
export class DataModel extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DimensionMapping })
  @Expose({ name: "DimensionMappings" })
  @Type(() => DimensionMapping)
  dimensionMappings: DimensionMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "MeasureNameColumn" })
  measureNameColumn?: string;

  @SpeakeasyMetadata({ elemType: MixedMeasureMapping })
  @Expose({ name: "MixedMeasureMappings" })
  @Type(() => MixedMeasureMapping)
  mixedMeasureMappings?: MixedMeasureMapping[];

  @SpeakeasyMetadata()
  @Expose({ name: "MultiMeasureMappings" })
  @Type(() => MultiMeasureMappings)
  multiMeasureMappings?: MultiMeasureMappings;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeColumn" })
  timeColumn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeUnit" })
  timeUnit?: TimeUnitEnum;
}
