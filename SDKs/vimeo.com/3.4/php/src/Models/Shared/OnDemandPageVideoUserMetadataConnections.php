<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OnDemandPageVideoUserMetadataConnections - The list of resource URIs related to the user.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OnDemandPageVideoUserMetadataConnections
{
    /**
     * Information about the albums created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsAlbums $albums
     */
	#[\JMS\Serializer\Annotation\SerializedName('albums')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsAlbums')]
    public OnDemandPageVideoUserMetadataConnectionsAlbums $albums;
    
    /**
     * Information about the appearances of this user in other videos.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsAppearances $appearances
     */
	#[\JMS\Serializer\Annotation\SerializedName('appearances')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsAppearances')]
    public OnDemandPageVideoUserMetadataConnectionsAppearances $appearances;
    
    /**
     * Information on the users that the current user has blocked. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsBlock $block
     */
	#[\JMS\Serializer\Annotation\SerializedName('block')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsBlock')]
    public OnDemandPageVideoUserMetadataConnectionsBlock $block;
    
    /**
     * Information about this user's followed categories.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsCategories $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsCategories')]
    public OnDemandPageVideoUserMetadataConnectionsCategories $categories;
    
    /**
     * Information about this user's subscribed channels.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsChannels $channels
     */
	#[\JMS\Serializer\Annotation\SerializedName('channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsChannels')]
    public OnDemandPageVideoUserMetadataConnectionsChannels $channels;
    
    /**
     * Information about this user's feed.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFeed $feed
     */
	#[\JMS\Serializer\Annotation\SerializedName('feed')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFeed')]
    public OnDemandPageVideoUserMetadataConnectionsFeed $feed;
    
    /**
     * Information about this user's folders.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFolders $folders
     */
	#[\JMS\Serializer\Annotation\SerializedName('folders')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFolders')]
    public OnDemandPageVideoUserMetadataConnectionsFolders $folders;
    
    /**
     * Information about the user's followers.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFollowers $followers
     */
	#[\JMS\Serializer\Annotation\SerializedName('followers')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFollowers')]
    public OnDemandPageVideoUserMetadataConnectionsFollowers $followers;
    
    /**
     * Information about the users that the current user is following.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFollowing $following
     */
	#[\JMS\Serializer\Annotation\SerializedName('following')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFollowing')]
    public OnDemandPageVideoUserMetadataConnectionsFollowing $following;
    
    /**
     * Information about the groups created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsGroups $groups
     */
	#[\JMS\Serializer\Annotation\SerializedName('groups')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsGroups')]
    public OnDemandPageVideoUserMetadataConnectionsGroups $groups;
    
    /**
     * Information about the videos that this user has liked.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsLikes $likes
     */
	#[\JMS\Serializer\Annotation\SerializedName('likes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsLikes')]
    public OnDemandPageVideoUserMetadataConnectionsLikes $likes;
    
    /**
     * Information about the channels that this user moderates.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsModeratedChannels $moderatedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('moderated_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsModeratedChannels')]
    public OnDemandPageVideoUserMetadataConnectionsModeratedChannels $moderatedChannels;
    
    /**
     * Information about this user's portraits.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsPictures $pictures
     */
	#[\JMS\Serializer\Annotation\SerializedName('pictures')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsPictures')]
    public OnDemandPageVideoUserMetadataConnectionsPictures $pictures;
    
    /**
     * Information about this user's portfolios.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsPortfolios $portfolios
     */
	#[\JMS\Serializer\Annotation\SerializedName('portfolios')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsPortfolios')]
    public OnDemandPageVideoUserMetadataConnectionsPortfolios $portfolios;
    
    /**
     * A collection of recommended channels for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsRecommendedChannels $recommendedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsRecommendedChannels')]
    public OnDemandPageVideoUserMetadataConnectionsRecommendedChannels $recommendedChannels;
    
    /**
     * A Collection of recommended users for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsRecommendedUsers $recommendedUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_users')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsRecommendedUsers')]
    public OnDemandPageVideoUserMetadataConnectionsRecommendedUsers $recommendedUsers;
    
    /**
     * Information about the videos that have been shared with this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsShared $shared
     */
	#[\JMS\Serializer\Annotation\SerializedName('shared')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsShared')]
    public OnDemandPageVideoUserMetadataConnectionsShared $shared;
    
    /**
     * Information about the videos uploaded by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsVideos $videos
     */
	#[\JMS\Serializer\Annotation\SerializedName('videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsVideos')]
    public OnDemandPageVideoUserMetadataConnectionsVideos $videos;
    
    /**
     * Information about the videos that this user has watched.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsWatchedVideos $watchedVideos
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched_videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsWatchedVideos')]
    public OnDemandPageVideoUserMetadataConnectionsWatchedVideos $watchedVideos;
    
    /**
     * Information about the videos that this user wants to watch later.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsWatchlater $watchlater
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchlater')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsWatchlater')]
    public OnDemandPageVideoUserMetadataConnectionsWatchlater $watchlater;
    
	public function __construct()
	{
		$this->albums = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsAlbums();
		$this->appearances = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsAppearances();
		$this->block = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsBlock();
		$this->categories = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsCategories();
		$this->channels = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsChannels();
		$this->feed = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFeed();
		$this->folders = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFolders();
		$this->followers = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFollowers();
		$this->following = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsFollowing();
		$this->groups = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsGroups();
		$this->likes = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsLikes();
		$this->moderatedChannels = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsModeratedChannels();
		$this->pictures = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsPictures();
		$this->portfolios = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsPortfolios();
		$this->recommendedChannels = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsRecommendedChannels();
		$this->recommendedUsers = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsRecommendedUsers();
		$this->shared = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsShared();
		$this->videos = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsVideos();
		$this->watchedVideos = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsWatchedVideos();
		$this->watchlater = new \OpenAPI\OpenAPI\Models\Shared\OnDemandPageVideoUserMetadataConnectionsWatchlater();
	}
}
