// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostAnnotateEntitiesRequest struct {
	// The text content to annotate
	Content *string `queryParam:"style=form,explode=true,name=content"`
	// Categories to exclude for annotation
	ExcludeCategory []string `queryParam:"style=form,explode=true,name=exclude_category"`
	// Should abbreviations be included
	IncludeAbbreviation *bool `queryParam:"style=form,explode=true,name=include_abbreviation"`
	// Should acronyms be included
	IncludeAcronym *bool `queryParam:"style=form,explode=true,name=include_acronym"`
	// Categories to include for annotation
	IncludeCategory []string `queryParam:"style=form,explode=true,name=include_category"`
	// Should numbers be included
	IncludeNumbers *bool `queryParam:"style=form,explode=true,name=include_numbers"`
	// Should only the longest entity be returned for an overlapping group
	LongestOnly *bool `queryParam:"style=form,explode=true,name=longest_only"`
	// The minimum number of characters in the annotated entity
	MinLength *string `queryParam:"style=form,explode=true,name=min_length"`
}

type PostAnnotateEntitiesResponse struct {
	ContentType string
	// Success
	EntityAnnotationResult *shared.EntityAnnotationResult
	StatusCode             int
	RawResponse            *http.Response
}
