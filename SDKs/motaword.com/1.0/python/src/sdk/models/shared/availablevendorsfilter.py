"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AvailableVendorsFilterTypesEnum(str, Enum):
    TRANSLATOR = 'translator'
    PROOFREADER = 'proofreader'
    BOTH = 'both'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AvailableVendorsFilter:
    
    corporate_id: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('corporateId'), 'exclude': lambda f: f is None }})
    r"""Corporate account ID to filter for vendor authorization"""  
    manual_work_permission: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manualWorkPermission'), 'exclude': lambda f: f is None }})
    r"""Filter vendors for manual work permission"""  
    source_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceLanguage'), 'exclude': lambda f: f is None }})
    r"""Source language code"""  
    target_languages: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetLanguages'), 'exclude': lambda f: f is None }})
    r"""List of target language codes."""  
    types: Optional[list[AvailableVendorsFilterTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('types'), 'exclude': lambda f: f is None }})
    r"""List of vendor types"""  
    