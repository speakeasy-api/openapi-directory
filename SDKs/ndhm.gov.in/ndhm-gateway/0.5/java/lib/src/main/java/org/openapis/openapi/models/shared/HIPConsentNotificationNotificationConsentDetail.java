/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class HIPConsentNotificationNotificationConsentDetail {
    @JsonProperty("careContexts")
    public HIPConsentNotificationNotificationConsentDetailCareContexts[] careContexts;

    public HIPConsentNotificationNotificationConsentDetail withCareContexts(HIPConsentNotificationNotificationConsentDetailCareContexts[] careContexts) {
        this.careContexts = careContexts;
        return this;
    }
    
    @JsonProperty("consentId")
    public String consentId;

    public HIPConsentNotificationNotificationConsentDetail withConsentId(String consentId) {
        this.consentId = consentId;
        return this;
    }
    
    @JsonProperty("consentManager")
    public HIPConsentNotificationNotificationConsentDetailConsentManager consentManager;

    public HIPConsentNotificationNotificationConsentDetail withConsentManager(HIPConsentNotificationNotificationConsentDetailConsentManager consentManager) {
        this.consentManager = consentManager;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public HIPConsentNotificationNotificationConsentDetail withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("hiTypes")
    public HITypeEnumEnum[] hiTypes;

    public HIPConsentNotificationNotificationConsentDetail withHiTypes(HITypeEnumEnum[] hiTypes) {
        this.hiTypes = hiTypes;
        return this;
    }
    
    @JsonProperty("hip")
    public HIPConsentNotificationNotificationConsentDetailHIP hip;

    public HIPConsentNotificationNotificationConsentDetail withHip(HIPConsentNotificationNotificationConsentDetailHIP hip) {
        this.hip = hip;
        return this;
    }
    
    @JsonProperty("patient")
    public ConsentManagerPatientID patient;

    public HIPConsentNotificationNotificationConsentDetail withPatient(ConsentManagerPatientID patient) {
        this.patient = patient;
        return this;
    }
    
    @JsonProperty("permission")
    public Permission permission;

    public HIPConsentNotificationNotificationConsentDetail withPermission(Permission permission) {
        this.permission = permission;
        return this;
    }
    
    @JsonProperty("purpose")
    public UsePurpose purpose;

    public HIPConsentNotificationNotificationConsentDetail withPurpose(UsePurpose purpose) {
        this.purpose = purpose;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schemaVersion")
    public String schemaVersion;

    public HIPConsentNotificationNotificationConsentDetail withSchemaVersion(String schemaVersion) {
        this.schemaVersion = schemaVersion;
        return this;
    }
    
    public HIPConsentNotificationNotificationConsentDetail(@JsonProperty("careContexts") HIPConsentNotificationNotificationConsentDetailCareContexts[] careContexts, @JsonProperty("consentId") String consentId, @JsonProperty("consentManager") HIPConsentNotificationNotificationConsentDetailConsentManager consentManager, @JsonProperty("createdAt") OffsetDateTime createdAt, @JsonProperty("hiTypes") HITypeEnumEnum[] hiTypes, @JsonProperty("hip") HIPConsentNotificationNotificationConsentDetailHIP hip, @JsonProperty("patient") ConsentManagerPatientID patient, @JsonProperty("permission") Permission permission, @JsonProperty("purpose") UsePurpose purpose) {
        this.careContexts = careContexts;
        this.consentId = consentId;
        this.consentManager = consentManager;
        this.createdAt = createdAt;
        this.hiTypes = hiTypes;
        this.hip = hip;
        this.patient = patient;
        this.permission = permission;
        this.purpose = purpose;
  }
}
