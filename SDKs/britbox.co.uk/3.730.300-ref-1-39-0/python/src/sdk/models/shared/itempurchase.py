"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class ItemPurchaseOwnershipEnum(str, Enum):
    r"""The ownership of the purchased item."""
    SUBSCRIPTION = 'Subscription'
    FREE = 'Free'
    RENT = 'Rent'
    OWN = 'Own'
    NONE = 'None'

class ItemPurchaseResolutionEnum(str, Enum):
    r"""The resolution of the purchased item."""
    SD = 'SD'
    HD_720 = 'HD-720'
    HD_1080 = 'HD-1080'
    HD_4_K = 'HD-4K'
    EXTERNAL = 'External'
    UNKNOWN = 'Unknown'

class ItemPurchaseTypeEnum(str, Enum):
    r"""The type of item purchased."""
    MOVIE = 'movie'
    SHOW = 'show'
    SEASON = 'season'
    EPISODE = 'episode'
    PROGRAM = 'program'
    LINK = 'link'
    TRAILER = 'trailer'
    CHANNEL = 'channel'
    CUSTOM_ASSET = 'customAsset'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ItemPurchase:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The identifier of the purchased item."""  
    ownership: ItemPurchaseOwnershipEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ownership') }})
    r"""The ownership of the purchased item."""  
    resolution: ItemPurchaseResolutionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution') }})
    r"""The resolution of the purchased item."""  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""The title of the purchased item."""  
    type: ItemPurchaseTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of item purchased."""  
    