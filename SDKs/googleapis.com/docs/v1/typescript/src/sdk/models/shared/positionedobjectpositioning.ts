/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Dimension } from "./dimension";
import { Expose, Type } from "class-transformer";

/**
 * The layout of this positioned object.
 */
export enum PositionedObjectPositioningLayoutEnum {
  PositionedObjectLayoutUnspecified = "POSITIONED_OBJECT_LAYOUT_UNSPECIFIED",
  WrapText = "WRAP_TEXT",
  BreakLeft = "BREAK_LEFT",
  BreakRight = "BREAK_RIGHT",
  BreakLeftRight = "BREAK_LEFT_RIGHT",
  InFrontOfText = "IN_FRONT_OF_TEXT",
  BehindText = "BEHIND_TEXT",
}

/**
 * The positioning of a PositionedObject. The positioned object is positioned relative to the beginning of the Paragraph it's tethered to.
 */
export class PositionedObjectPositioning extends SpeakeasyBase {
  /**
   * The layout of this positioned object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layout" })
  layout?: PositionedObjectPositioningLayoutEnum;

  /**
   * A magnitude in a single direction in the specified units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "leftOffset" })
  @Type(() => Dimension)
  leftOffset?: Dimension;

  /**
   * A magnitude in a single direction in the specified units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topOffset" })
  @Type(() => Dimension)
  topOffset?: Dimension;
}
