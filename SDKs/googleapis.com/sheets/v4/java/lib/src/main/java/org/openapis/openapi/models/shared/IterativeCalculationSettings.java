/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IterativeCalculationSettings - Settings to control how circular dependencies are resolved with iterative calculation.
 */
public class IterativeCalculationSettings {
    /**
     * When iterative calculation is enabled and successive results differ by less than this threshold value, the calculation rounds stop.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("convergenceThreshold")
    public Double convergenceThreshold;

    public IterativeCalculationSettings withConvergenceThreshold(Double convergenceThreshold) {
        this.convergenceThreshold = convergenceThreshold;
        return this;
    }
    
    /**
     * When iterative calculation is enabled, the maximum number of calculation rounds to perform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxIterations")
    public Integer maxIterations;

    public IterativeCalculationSettings withMaxIterations(Integer maxIterations) {
        this.maxIterations = maxIterations;
        return this;
    }
    
    public IterativeCalculationSettings(){}
}
