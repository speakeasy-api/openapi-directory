/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum UsersGetUserMetadataDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
}

export class UsersGetUserMetadataDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: UsersGetUserMetadataDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class UsersGetUserMetadataDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => UsersGetUserMetadataDefaultApplicationJSONError)
  error: UsersGetUserMetadataDefaultApplicationJSONError;
}

/**
 * Success
 */
export class UsersGetUserMetadata200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}

export class UsersGetUserMetadataResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  usersGetUserMetadata200ApplicationJSONObject?: UsersGetUserMetadata200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  usersGetUserMetadataDefaultApplicationJSONObject?: UsersGetUserMetadataDefaultApplicationJSON;
}
