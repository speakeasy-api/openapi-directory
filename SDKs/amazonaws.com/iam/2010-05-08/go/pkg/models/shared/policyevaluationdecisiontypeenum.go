// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PolicyEvaluationDecisionTypeEnum string

const (
	PolicyEvaluationDecisionTypeEnumAllowed      PolicyEvaluationDecisionTypeEnum = "allowed"
	PolicyEvaluationDecisionTypeEnumExplicitDeny PolicyEvaluationDecisionTypeEnum = "explicitDeny"
	PolicyEvaluationDecisionTypeEnumImplicitDeny PolicyEvaluationDecisionTypeEnum = "implicitDeny"
)

func (e PolicyEvaluationDecisionTypeEnum) ToPointer() *PolicyEvaluationDecisionTypeEnum {
	return &e
}

func (e *PolicyEvaluationDecisionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "allowed":
		fallthrough
	case "explicitDeny":
		fallthrough
	case "implicitDeny":
		*e = PolicyEvaluationDecisionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PolicyEvaluationDecisionTypeEnum: %v", v)
	}
}
