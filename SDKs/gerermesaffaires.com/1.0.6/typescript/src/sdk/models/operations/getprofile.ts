/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetProfileSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

export class GetProfileRequest extends SpeakeasyBase {
  /**
   * to get a contract (if not signed error 404 + html contract)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Contract",
  })
  contract?: string;
}

export class GetProfile200ApplicationJSONBirth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "City" })
  city?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  date?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ZipCode" })
  zipCode?: string;
}

export enum GetProfile200ApplicationJSONSexEnum {
  Male = "male",
  Female = "female",
}

export enum GetProfile200ApplicationJSONStatusEnum {
  Validated = "validated",
  NotValidated = "not validated",
}

/**
 * the status of the member
 */
export class GetProfile200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Birth" })
  @Type(() => GetProfile200ApplicationJSONBirth)
  birth?: GetProfile200ApplicationJSONBirth;

  @SpeakeasyMetadata()
  @Expose({ name: "BirthName" })
  birthName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FirstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PrivateSpaceId" })
  privateSpaceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Sex" })
  sex?: GetProfile200ApplicationJSONSexEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: GetProfile200ApplicationJSONStatusEnum;
}

export class GetProfileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * the status of the member
   */
  @SpeakeasyMetadata()
  getProfile200ApplicationJSONObject?: GetProfile200ApplicationJSON;
}
