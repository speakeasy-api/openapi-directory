"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Category:
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Category id"""  
    parent_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_id') }})
    r"""Parent category"""  
    path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path') }})
    r"""Path to all ancestor ids"""  
    source_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_id') }})
    r"""ID in original standard taxonomy"""  
    taxonomy_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxonomy_id') }})
    r"""Internal id of taxonomy the category is part of"""  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""Category title"""  
    