<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class IssuesListForRepoRequest
{
    /**
     * Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user.
     * 
     * @var ?string $assignee
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=assignee')]
    public ?string $assignee = null;
    
    /**
     * The user that created the issue.
     * 
     * @var ?string $creator
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=creator')]
    public ?string $creator = null;
    
    /**
     * The direction to sort the results by.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DirectionEnum $direction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=direction')]
    public ?\OpenAPI\OpenAPI\Models\Shared\DirectionEnum $direction = null;
    
    /**
     * A list of comma separated label names. Example: `bug,ui,@high`
     * 
     * @var ?string $labels
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=labels')]
    public ?string $labels = null;
    
    /**
     * A user that's mentioned in the issue.
     * 
     * @var ?string $mentioned
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=mentioned')]
    public ?string $mentioned = null;
    
    /**
     * If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned.
     * 
     * @var ?string $milestone
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=milestone')]
    public ?string $milestone = null;
    
    /**
     * The account owner of the repository. The name is not case sensitive.
     * 
     * @var string $owner
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=owner')]
    public string $owner;
    
    /**
     * Page number of the results to fetch.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results per page (max 100).
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * The name of the repository. The name is not case sensitive.
     * 
     * @var string $repo
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=repo')]
    public string $repo;
    
    /**
     * Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
     * 
     * @var ?\DateTime $since
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=since,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $since = null;
    
    /**
     * What to sort results by.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\IssuesListForRepoSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?IssuesListForRepoSortEnum $sort = null;
    
    /**
     * Indicates the state of the issues to return.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\IssuesListForRepoStateEnum $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?IssuesListForRepoStateEnum $state = null;
    
	public function __construct()
	{
		$this->assignee = null;
		$this->creator = null;
		$this->direction = null;
		$this->labels = null;
		$this->mentioned = null;
		$this->milestone = null;
		$this->owner = "";
		$this->page = null;
		$this->perPage = null;
		$this->repo = "";
		$this->since = null;
		$this->sort = null;
		$this->state = null;
	}
}
