// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ParticipantEnumStatusEnum string

const (
	ParticipantEnumStatusEnumQueued     ParticipantEnumStatusEnum = "queued"
	ParticipantEnumStatusEnumConnecting ParticipantEnumStatusEnum = "connecting"
	ParticipantEnumStatusEnumRinging    ParticipantEnumStatusEnum = "ringing"
	ParticipantEnumStatusEnumConnected  ParticipantEnumStatusEnum = "connected"
	ParticipantEnumStatusEnumComplete   ParticipantEnumStatusEnum = "complete"
	ParticipantEnumStatusEnumFailed     ParticipantEnumStatusEnum = "failed"
)

func (e *ParticipantEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "queued":
		fallthrough
	case "connecting":
		fallthrough
	case "ringing":
		fallthrough
	case "connected":
		fallthrough
	case "complete":
		fallthrough
	case "failed":
		*e = ParticipantEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ParticipantEnumStatusEnum: %s", s)
	}
}
