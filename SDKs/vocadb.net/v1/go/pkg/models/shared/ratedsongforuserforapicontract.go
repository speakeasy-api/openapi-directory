// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type RatedSongForUserForAPIContractRatingEnum string

const (
	RatedSongForUserForAPIContractRatingEnumNothing  RatedSongForUserForAPIContractRatingEnum = "Nothing"
	RatedSongForUserForAPIContractRatingEnumDislike  RatedSongForUserForAPIContractRatingEnum = "Dislike"
	RatedSongForUserForAPIContractRatingEnumLike     RatedSongForUserForAPIContractRatingEnum = "Like"
	RatedSongForUserForAPIContractRatingEnumFavorite RatedSongForUserForAPIContractRatingEnum = "Favorite"
)

func (e *RatedSongForUserForAPIContractRatingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Dislike":
		fallthrough
	case "Like":
		fallthrough
	case "Favorite":
		*e = RatedSongForUserForAPIContractRatingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RatedSongForUserForAPIContractRatingEnum: %s", s)
	}
}

type RatedSongForUserForAPIContract struct {
	Date   *time.Time                                `json:"date,omitempty"`
	Rating *RatedSongForUserForAPIContractRatingEnum `json:"rating,omitempty"`
	Song   *SongForAPIContract                       `json:"song,omitempty"`
	User   *UserForAPIContract                       `json:"user,omitempty"`
}
