/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReportExportConfig } from "./reportexportconfig";
import { ReportGroupStatusTypeEnum } from "./reportgroupstatustypeenum";
import { ReportTypeEnum } from "./reporttypeenum";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A series of reports. Each report contains information about the results from running a series of test cases. You specify the test cases for a report group in the buildspec for a build project using one or more paths to the test case files.
 */
export class ReportGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "exportConfig" })
  @Type(() => ReportExportConfig)
  exportConfig?: ReportExportConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModified?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ReportGroupStatusTypeEnum;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ReportTypeEnum;
}
