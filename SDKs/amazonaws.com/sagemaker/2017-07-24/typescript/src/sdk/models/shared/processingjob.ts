/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppSpecification } from "./appspecification";
import { ExperimentConfig } from "./experimentconfig";
import { NetworkConfig } from "./networkconfig";
import { ProcessingInput } from "./processinginput";
import { ProcessingJobStatusEnum } from "./processingjobstatusenum";
import { ProcessingOutputConfig } from "./processingoutputconfig";
import { ProcessingResources } from "./processingresources";
import { ProcessingStoppingCondition } from "./processingstoppingcondition";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An Amazon SageMaker processing job that is used to analyze data and evaluate models. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/processing-job.html">Process Data and Evaluate Models</a>.
 */
export class ProcessingJob extends SpeakeasyBase {
  /**
   * Configuration to run a processing job in a specified container image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AppSpecification" })
  @Type(() => AppSpecification)
  appSpecification?: AppSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoMLJobArn" })
  autoMLJobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Environment" })
  environment?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "ExitMessage" })
  exitMessage?: string;

  /**
   * <p>Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:</p> <ul> <li> <p> <a>CreateProcessingJob</a> </p> </li> <li> <p> <a>CreateTrainingJob</a> </p> </li> <li> <p> <a>CreateTransformJob</a> </p> </li> </ul>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ExperimentConfig" })
  @Type(() => ExperimentConfig)
  experimentConfig?: ExperimentConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringScheduleArn" })
  monitoringScheduleArn?: string;

  /**
   * Networking options for a job, such as network traffic encryption between containers, whether to allow inbound and outbound network calls to and from containers, and the VPC subnets and security groups to use for VPC-enabled jobs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NetworkConfig" })
  @Type(() => NetworkConfig)
  networkConfig?: NetworkConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  processingEndTime?: Date;

  @SpeakeasyMetadata({ elemType: ProcessingInput })
  @Expose({ name: "ProcessingInputs" })
  @Type(() => ProcessingInput)
  processingInputs?: ProcessingInput[];

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingJobArn" })
  processingJobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingJobName" })
  processingJobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingJobStatus" })
  processingJobStatus?: ProcessingJobStatusEnum;

  /**
   * Configuration for uploading output from the processing container.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingOutputConfig" })
  @Type(() => ProcessingOutputConfig)
  processingOutputConfig?: ProcessingOutputConfig;

  /**
   * Identifies the resources, ML compute instances, and ML storage volumes to deploy for a processing job. In distributed training, you specify more than one instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingResources" })
  @Type(() => ProcessingResources)
  processingResources?: ProcessingResources;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  processingStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  /**
   * Configures conditions under which the processing job should be stopped, such as how long the processing job has been running. After the condition is met, the processing job is stopped.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StoppingCondition" })
  @Type(() => ProcessingStoppingCondition)
  stoppingCondition?: ProcessingStoppingCondition;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingJobArn" })
  trainingJobArn?: string;
}
