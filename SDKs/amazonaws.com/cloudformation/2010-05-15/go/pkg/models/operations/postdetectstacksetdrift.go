// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDetectStackSetDriftActionEnum
type POSTDetectStackSetDriftActionEnum string

const (
	POSTDetectStackSetDriftActionEnumDetectStackSetDrift POSTDetectStackSetDriftActionEnum = "DetectStackSetDrift"
)

func (e POSTDetectStackSetDriftActionEnum) ToPointer() *POSTDetectStackSetDriftActionEnum {
	return &e
}

func (e *POSTDetectStackSetDriftActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DetectStackSetDrift":
		*e = POSTDetectStackSetDriftActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDetectStackSetDriftActionEnum: %v", v)
	}
}

// POSTDetectStackSetDriftVersionEnum
type POSTDetectStackSetDriftVersionEnum string

const (
	POSTDetectStackSetDriftVersionEnumTwoThousandAndTen0515 POSTDetectStackSetDriftVersionEnum = "2010-05-15"
)

func (e POSTDetectStackSetDriftVersionEnum) ToPointer() *POSTDetectStackSetDriftVersionEnum {
	return &e
}

func (e *POSTDetectStackSetDriftVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-15":
		*e = POSTDetectStackSetDriftVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDetectStackSetDriftVersionEnum: %v", v)
	}
}

type POSTDetectStackSetDriftRequest struct {
	Action            POSTDetectStackSetDriftActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                             `request:"mediaType=text/xml"`
	Version           POSTDetectStackSetDriftVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDetectStackSetDriftResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
