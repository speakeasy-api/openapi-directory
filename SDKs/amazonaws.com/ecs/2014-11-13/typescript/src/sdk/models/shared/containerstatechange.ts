/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NetworkBinding } from "./networkbinding";
import { Expose, Type } from "class-transformer";

/**
 * An object that represents a change in state for a container.
 */
export class ContainerStateChange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "containerName" })
  containerName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "exitCode" })
  exitCode?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "imageDigest" })
  imageDigest?: string;

  @SpeakeasyMetadata({ elemType: NetworkBinding })
  @Expose({ name: "networkBindings" })
  @Type(() => NetworkBinding)
  networkBindings?: NetworkBinding[];

  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "runtimeId" })
  runtimeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
