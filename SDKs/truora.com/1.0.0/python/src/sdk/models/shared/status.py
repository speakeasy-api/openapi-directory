"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class StatusDataSetEnum(str, Enum):
    r"""Background check dataset"""
    AFFILIATIONS_AND_INSURANCES = 'affiliations_and_insurances'
    ALERT_IN_MEDIA = 'alert_in_media'
    BEHAVIOR = 'behavior'
    BUSINESS_BACKGROUND = 'business_background'
    CRIMINAL_RECORD = 'criminal_record'
    DRIVING_LICENSES = 'driving_licenses'
    INTERNATIONAL_BACKGROUND = 'international_background'
    LEGAL_BACKGROUND = 'legal_background'
    PERSONAL_IDENTITY = 'personal_identity'
    PROFESSIONAL_BACKGROUND = 'professional_background'
    TRAFFIC_FINES = 'traffic_fines'
    VEHICLE_INFORMATION = 'vehicle_information'
    VEHICLE_PERMITS = 'vehicle_permits'
    TAXES_AND_FINANCES = 'taxes_and_finances'

class StatusStatusEnum(str, Enum):
    r"""Result status of the background check. **Not_started** means the background check is still in queue, since there is a limit of background checks that can be processed simultaneously, **completed** means the search finished successfully, **error** means the search failed, **expired** means the search took too long to finish and therefore failed, **skipped** means the search failed because a wrong number or type of parameters was provided, **delayed** means the search is waiting for an additional requirement to be met and can last up to 3 days"""
    NOT_STARTED = 'not_started'
    COMPLETED = 'completed'
    EXPIRED = 'expired'
    ERROR = 'error'
    DELAYED = 'delayed'
    SKIPPED = 'skipped'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Status:
    r"""Represents the status of databases used to generate background checks"""
    
    data_set: Optional[StatusDataSetEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_set'), 'exclude': lambda f: f is None }})
    r"""Background check dataset"""  
    database_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('database_id'), 'exclude': lambda f: f is None }})
    r"""Database ID. Can be used to verify the database status"""  
    database_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('database_name'), 'exclude': lambda f: f is None }})
    r"""Background check database name. Do not use this field to identify the database as it may change during the check execution. Use database_id instead"""  
    invalid_inputs: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalid_inputs'), 'exclude': lambda f: f is None }})
    r"""List of missing or invalid inputs"""  
    status: Optional[StatusStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Result status of the background check. **Not_started** means the background check is still in queue, since there is a limit of background checks that can be processed simultaneously, **completed** means the search finished successfully, **error** means the search failed, **expired** means the search took too long to finish and therefore failed, **skipped** means the search failed because a wrong number or type of parameters was provided, **delayed** means the search is waiting for an additional requirement to be met and can last up to 3 days"""  
    