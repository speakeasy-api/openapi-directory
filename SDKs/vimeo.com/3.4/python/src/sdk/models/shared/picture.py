"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PictureSizes:
    
    height: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height') }})
    r"""The height of the image."""  
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})
    r"""The direct link to the image."""  
    width: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width') }})
    r"""The width of the image."""  
    link_with_play_button: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link_with_play_button'), 'exclude': lambda f: f is None }})
    r"""The direct link to the image with a play button overlay."""  
    
class PictureTypeEnum(str, Enum):
    r"""The type of the picture:
    
    Option descriptions:
     * `caution` - An image that is appropriate for all ages.
     * `custom` - A custom image for the video.
     * `default` - The default image for the video.
    """
    CAUTION = 'caution'
    CUSTOM = 'custom'
    DEFAULT = 'default'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Picture:
    r"""The thumbnail was created."""
    
    active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active') }})
    r"""Whether this picture is the active picture for its parent resource."""  
    resource_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_key') }})
    r"""The picture's resource key string."""  
    sizes: list[PictureSizes] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sizes') }})
    r"""An array containing reference information about all available image files."""  
    type: PictureTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of the picture:
    
    Option descriptions:
     * `caution` - An image that is appropriate for all ages.
     * `custom` - A custom image for the video.
     * `default` - The default image for the video.
    """  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The picture's URI."""  
    link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link'), 'exclude': lambda f: f is None }})
    r"""The upload URL for the picture. This field appears when you create the picture resource for the first time."""  
    