"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import numericbucketingresult as shared_numericbucketingresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomAttributeHistogramResult:
    r"""Output only. Custom attribute histogram result."""
    
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Stores the key of custom attribute the histogram is performed on."""  
    long_value_histogram_result: Optional[shared_numericbucketingresult.NumericBucketingResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longValueHistogramResult'), 'exclude': lambda f: f is None }})
    r"""Output only. Custom numeric bucketing result."""  
    string_value_histogram_result: Optional[dict[str, int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringValueHistogramResult'), 'exclude': lambda f: f is None }})
    r"""Stores a map from the values of string custom field associated with `key` to the number of jobs with that value in this histogram result."""  
    