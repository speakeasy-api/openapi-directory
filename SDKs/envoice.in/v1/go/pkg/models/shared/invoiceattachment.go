// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InvoiceAttachmentTypeEnum string

const (
	InvoiceAttachmentTypeEnumExternal InvoiceAttachmentTypeEnum = "External"
	InvoiceAttachmentTypeEnumUploaded InvoiceAttachmentTypeEnum = "Uploaded"
)

func (e *InvoiceAttachmentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "External":
		fallthrough
	case "Uploaded":
		*e = InvoiceAttachmentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceAttachmentTypeEnum: %s", s)
	}
}

type InvoiceAttachment struct {
	ID                 *int                       `json:"Id,omitempty"`
	InvoiceID          *int                       `json:"InvoiceId,omitempty"`
	Link               *string                    `json:"Link,omitempty"`
	ObfuscatedFileName *string                    `json:"ObfuscatedFileName,omitempty"`
	OriginalFileName   *string                    `json:"OriginalFileName,omitempty"`
	Size               *int64                     `json:"Size,omitempty"`
	Type               *InvoiceAttachmentTypeEnum `json:"Type,omitempty"`
}
