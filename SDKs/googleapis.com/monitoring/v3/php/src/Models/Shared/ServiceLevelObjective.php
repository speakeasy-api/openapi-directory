<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ServiceLevelObjective - A Service-Level Objective (SLO) describes a level of desired good service. It consists of a service-level indicator (SLI), a performance goal, and a period over which the objective is to be evaluated against that goal. The SLO can use SLIs defined in a number of different manners. Typical SLOs might include "99% of requests in each rolling week have latency below 200 milliseconds" or "99.5% of requests in each calendar month return successfully."
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ServiceLevelObjective
{
    /**
     * A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceLevelObjectiveCalendarPeriodEnum $calendarPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('calendarPeriod')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ServiceLevelObjectiveCalendarPeriodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServiceLevelObjectiveCalendarPeriodEnum $calendarPeriod = null;
    
    /**
     * Name used for UI elements listing this SLO.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * The fraction of service that must be good in order for this objective to be met. 0 < goal <= 0.999.
     * 
     * @var ?float $goal
     */
	#[\JMS\Serializer\Annotation\SerializedName('goal')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $goal = null;
    
    /**
     * Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME] 
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no larger than 30 days.
     * 
     * @var ?string $rollingPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('rollingPeriod')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rollingPeriod = null;
    
    /**
     * A Service-Level Indicator (SLI) describes the "performance" of a service. For some services, the SLI is well-defined. In such cases, the SLI can be described easily by referencing the well-known SLI and providing the needed parameters. Alternatively, a "custom" SLI can be defined with a query to the underlying metric store. An SLI is defined to be good_service / total_service over any queried time interval. The value of performance always falls into the range 0 <= performance <= 1. A custom SLI describes how to compute this ratio, whether this is by dividing values from a pair of time series, cutting a Distribution into good and bad counts, or counting time windows in which the service complies with a criterion. For separation of concerns, a single Service-Level Indicator measures performance for only one aspect of service quality, such as fraction of successful queries or fast-enough queries.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ServiceLevelIndicator $serviceLevelIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceLevelIndicator')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ServiceLevelIndicator')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ServiceLevelIndicator $serviceLevelIndicator = null;
    
    /**
     * Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     * @var ?array<string, string> $userLabels
     */
	#[\JMS\Serializer\Annotation\SerializedName('userLabels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userLabels = null;
    
	public function __construct()
	{
		$this->calendarPeriod = null;
		$this->displayName = null;
		$this->goal = null;
		$this->name = null;
		$this->rollingPeriod = null;
		$this->serviceLevelIndicator = null;
		$this->userLabels = null;
	}
}
