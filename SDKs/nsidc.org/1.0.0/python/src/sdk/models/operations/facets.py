"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from datetime import date
from enum import Enum
from typing import Optional

class FacetsSortKeysEnum(str, Enum):
    r"""Sort the results by most relevant (default), smallest or largest spatial area, shortest or longest temporal duration, or most recently updated; partial implementation of OpenSearch SRU 1.0"""
    SCORE_DESC = 'score,,desc'
    SPATIAL_AREA_ASC = 'spatial_area,,asc'
    SPATIAL_AREA_DESC = 'spatial_area,,desc'
    TEMPORAL_DURATION_ASC = 'temporal_duration,,asc'
    TEMPORAL_DURATION_DESC = 'temporal_duration,,desc'
    UPDATED_DESC = 'updated,,desc'

class FacetsSourceEnum(str, Enum):
    r"""Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC"""
    NSIDC = 'NSIDC'
    ADE = 'ADE'


@dataclasses.dataclass
class FacetsRequest:
    
    count: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})
    r"""The number of search results per page desired by the client; OpenSearch 1.1"""  
    end_date: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endDate', 'style': 'form', 'explode': True }})
    r"""The end date in yyyy-mm-dd format"""  
    facet_filters: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facetFilters', 'style': 'form', 'explode': True }})
    r"""Describes faceted restrictions on the search. A URL-encoded JSON object where the keys are the names of the facet, and the values are arrays of the selected facet values"""  
    search_terms: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'searchTerms', 'style': 'form', 'explode': True }})
    r"""URL-encoded keyword or keywords desired by the client; OpenSearch 1.1"""  
    sort_keys: Optional[FacetsSortKeysEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sortKeys', 'style': 'form', 'explode': True }})
    r"""Sort the results by most relevant (default), smallest or largest spatial area, shortest or longest temporal duration, or most recently updated; partial implementation of OpenSearch SRU 1.0"""  
    source: Optional[FacetsSourceEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'source', 'style': 'form', 'explode': True }})
    r"""Custom parameter for selecting which source to use; the Arctic Data Explorer (ADE) uses data aggregated from many sources, including, but not limited to, NSIDC"""  
    spatial: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'spatial', 'style': 'form', 'explode': True }})
    r"""4 comma separated values - W, S, E, N; OpenSearch-Geo 1.0, \\"box\\" parameter"""  
    start_date: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startDate', 'style': 'form', 'explode': True }})
    r"""The start date in yyyy-mm-dd format"""  
    start_index: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startIndex', 'style': 'form', 'explode': True }})
    r"""First search result desired by the search client; OpenSearch 1.1"""  
    

@dataclasses.dataclass
class FacetsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    facets_200_application_nsidcfacets_plus_xml_string: Optional[str] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    