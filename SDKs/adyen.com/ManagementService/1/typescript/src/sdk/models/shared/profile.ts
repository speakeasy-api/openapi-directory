/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { File } from "./file";
import { Expose, Type } from "class-transformer";

export class Profile extends SpeakeasyBase {
  /**
   * The type of Wi-Fi network. Possible values: **wpa-psk**, **wpa2-psk**, **wpa-eap**, **wpa2-eap**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authType" })
  authType: string;

  /**
   * Indicates whether to automatically select the best authentication method available. Does not work on older terminal models.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoWifi" })
  autoWifi?: boolean;

  /**
   * Use **infra** for infrastructure-based networks. This applies to most networks. Use **adhoc** only if the communication is p2p-based between base stations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bssType" })
  bssType: string;

  /**
   * The channel number of the Wi-Fi network. The recommended setting is **0** for automatic channel selection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel?: number;

  /**
   * Indicates whether this is your preferred wireless network. If **true**, the terminal will try connecting to this network first.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultProfile" })
  defaultProfile?: boolean;

  /**
   * For `authType` **wpa-eap** or **wpa2-eap**. Possible values: **tls**, **peap**, **leap**, **fast**
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eap" })
  eap?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eapCaCert" })
  @Type(() => File)
  eapCaCert?: File;

  @SpeakeasyMetadata()
  @Expose({ name: "eapClientCert" })
  @Type(() => File)
  eapClientCert?: File;

  @SpeakeasyMetadata()
  @Expose({ name: "eapClientKey" })
  @Type(() => File)
  eapClientKey?: File;

  /**
   * For `eap` **tls**. The password of the RSA key file, if that file is password-protected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eapClientPwd" })
  eapClientPwd?: string;

  /**
   * For `authType` **wpa-eap** or **wpa2-eap**. The EAP-PEAP username from your MS-CHAP account. Must match the configuration of your RADIUS server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eapIdentity" })
  eapIdentity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eapIntermediateCert" })
  @Type(() => File)
  eapIntermediateCert?: File;

  /**
   * For `eap` **peap**. The EAP-PEAP password from your MS-CHAP account. Must match the configuration of your RADIUS server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eapPwd" })
  eapPwd?: string;

  /**
   * Indicates if the network doesn't broadcast its SSID. Mandatory for Android terminals, because these terminals rely on this setting to be able to connect to any network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hiddenSsid" })
  hiddenSsid?: boolean;

  /**
   * Your name for the Wi-Fi profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * For `authType` **wpa-psk or **wpa2-psk**. The password to the wireless network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "psk" })
  psk?: string;

  /**
   * The name of the wireless network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ssid" })
  ssid: string;

  /**
   * The type of encryption. Possible values: **auto**, **ccmp** (recommended), **tkip**
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wsec" })
  wsec: string;
}
