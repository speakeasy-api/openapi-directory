// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GameSessionPlacementStateEnum string

const (
	GameSessionPlacementStateEnumPending   GameSessionPlacementStateEnum = "PENDING"
	GameSessionPlacementStateEnumFulfilled GameSessionPlacementStateEnum = "FULFILLED"
	GameSessionPlacementStateEnumCancelled GameSessionPlacementStateEnum = "CANCELLED"
	GameSessionPlacementStateEnumTimedOut  GameSessionPlacementStateEnum = "TIMED_OUT"
	GameSessionPlacementStateEnumFailed    GameSessionPlacementStateEnum = "FAILED"
)

func (e GameSessionPlacementStateEnum) ToPointer() *GameSessionPlacementStateEnum {
	return &e
}

func (e *GameSessionPlacementStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "FULFILLED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "FAILED":
		*e = GameSessionPlacementStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GameSessionPlacementStateEnum: %v", v)
	}
}
