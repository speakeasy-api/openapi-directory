/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Asp - An application-specific password (ASP) is used with applications that do not accept a verification code when logging into the application on certain devices. The ASP access code is used instead of the login and password you commonly use when accessing an application through a browser. For more information about ASPs and how to create one, see the [help center](https://support.google.com/a/answer/2537800#asp).
 */
public class Asp {
    /**
     * The unique ID of the ASP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("codeId")
    public Integer codeId;
    public Asp withCodeId(Integer codeId) {
        this.codeId = codeId;
        return this;
    }
    
    /**
     * The time when the ASP was created. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;
    public Asp withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * ETag of the ASP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Asp withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The type of the API resource. This is always `admin#directory#asp`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Asp withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The time when the ASP was last used. Expressed in [Unix time](https://en.wikipedia.org/wiki/Epoch_time) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastTimeUsed")
    public String lastTimeUsed;
    public Asp withLastTimeUsed(String lastTimeUsed) {
        this.lastTimeUsed = lastTimeUsed;
        return this;
    }
    
    /**
     * The name of the application that the user, represented by their `userId`, entered when the ASP was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Asp withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The unique ID of the user who issued the ASP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userKey")
    public String userKey;
    public Asp withUserKey(String userKey) {
        this.userKey = userKey;
        return this;
    }
    
}
