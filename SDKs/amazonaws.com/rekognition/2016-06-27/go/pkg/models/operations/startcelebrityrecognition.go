// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartCelebrityRecognitionXAmzTargetEnum
type StartCelebrityRecognitionXAmzTargetEnum string

const (
	StartCelebrityRecognitionXAmzTargetEnumRekognitionServiceStartCelebrityRecognition StartCelebrityRecognitionXAmzTargetEnum = "RekognitionService.StartCelebrityRecognition"
)

func (e StartCelebrityRecognitionXAmzTargetEnum) ToPointer() *StartCelebrityRecognitionXAmzTargetEnum {
	return &e
}

func (e *StartCelebrityRecognitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RekognitionService.StartCelebrityRecognition":
		*e = StartCelebrityRecognitionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartCelebrityRecognitionXAmzTargetEnum: %v", v)
	}
}

type StartCelebrityRecognitionRequest struct {
	StartCelebrityRecognitionRequest shared.StartCelebrityRecognitionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       StartCelebrityRecognitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartCelebrityRecognitionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidS3ObjectException
	InvalidS3ObjectException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// Success
	StartCelebrityRecognitionResponse *shared.StartCelebrityRecognitionResponse
	StatusCode                        int
	RawResponse                       *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// VideoTooLargeException
	VideoTooLargeException interface{}
}
