"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import device as shared_device
from enum import Enum
from typing import Optional

class DevicesBySubTypeGetMeterSubTypeEnum(str, Enum):
    METER_SUB_TYPE_UNKNOWN = 'MeterSubTypeUnknown'
    METER_SUB_TYPE_COLD = 'MeterSubTypeCold'
    METER_SUB_TYPE_HEAT = 'MeterSubTypeHeat'
    METER_SUB_TYPE_CHARGING_STATION = 'MeterSubTypeChargingStation'
    METER_SUB_TYPE_ELECTRICITY = 'MeterSubTypeElectricity'
    METER_SUB_TYPE_WATER = 'MeterSubTypeWater'
    METER_SUB_TYPE_GAS = 'MeterSubTypeGas'
    METER_SUB_TYPE_ELECTRICITY_HEAT = 'MeterSubTypeElectricityHeat'
    METER_SUB_TYPE_TEMPERATURE = 'MeterSubTypeTemperature'
    METER_SUB_TYPE_VIRTUAL_BATTERY = 'MeterSubTypeVirtualBattery'


@dataclasses.dataclass
class DevicesBySubTypeGetRequest:
    
    meter_sub_type: DevicesBySubTypeGetMeterSubTypeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'meterSubType', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class DevicesBySubTypeGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    devices: Optional[list[shared_device.Device]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    