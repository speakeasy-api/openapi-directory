<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer - Identity details of the player
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer
{
    /**
     * Details about the player as they are known on BungieNet. This will be undefined if the player has marked their credential private, or does not have a BungieNet account.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayerBungieNetUserInfo $bungieNetUserInfo
     */
	
    public ?DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayerBungieNetUserInfo $bungieNetUserInfo = null;
    
    /**
     * Class of the character if applicable and available.
     * 
     * @var ?string $characterClass
     */
	
    public ?string $characterClass = null;
    
    /**
     * Level of the character if available. Zero if it is not available.
     * 
     * @var ?int $characterLevel
     */
	
    public ?int $characterLevel = null;
    
    /**
     * Current clan name for the player. This value may be null or an empty string if the user does not have a clan.
     * 
     * @var ?string $clanName
     */
	
    public ?string $clanName = null;
    
    /**
     * Current clan tag for the player. This value may be null or an empty string if the user does not have a clan.
     * 
     * @var ?string $clanTag
     */
	
    public ?string $clanTag = null;
    
	
    public ?int $classHash = null;
    
    /**
     * Details about the player as they are known in game (platform display name, Destiny emblem)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayerDestinyUserInfo $destinyUserInfo
     */
	
    public ?DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayerDestinyUserInfo $destinyUserInfo = null;
    
    /**
     * If we know the emblem's hash, this can be used to look up the player's emblem at the time of a match when receiving PGCR data, or otherwise their currently equipped emblem (if we are able to obtain it).
     * 
     * @var ?int $emblemHash
     */
	
    public ?int $emblemHash = null;
    
	
    public ?int $genderHash = null;
    
    /**
     * Light Level of the character if available. Zero if it is not available.
     * 
     * @var ?int $lightLevel
     */
	
    public ?int $lightLevel = null;
    
	
    public ?int $raceHash = null;
    
	public function __construct()
	{
		$this->bungieNetUserInfo = null;
		$this->characterClass = null;
		$this->characterLevel = null;
		$this->clanName = null;
		$this->clanTag = null;
		$this->classHash = null;
		$this->destinyUserInfo = null;
		$this->emblemHash = null;
		$this->genderHash = null;
		$this->lightLevel = null;
		$this->raceHash = null;
	}
}
