/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { Header } from "./header";
import { Metadata } from "./metadata";
import { RecordT } from "./record";
import { Expose, Type } from "class-transformer";

/**
 * The complex type that defines that defines the report.
 */
export class Report extends SpeakeasyBase {
  /**
   * A complex type containing the header of the report and the type of data containted in the rows of the report.
   */
  @SpeakeasyMetadata({ elemType: Metadata })
  @Expose({ name: "dimensionMetadata" })
  @Type(() => Metadata)
  dimensionMetadata?: Metadata[];

  /**
   * The time stamp is formatted as an ISO 8601 string, which is based on the 24-hour Universal Coordinated Time (UTC) clock. If you specify an end date that is beyond the lastUpdatedDate value, eBay returns a report that contains data only up to the lastUpdateDate date. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2018-08-20T07:09:00.000Z
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  endDate?: string;

  /**
   * Type that defines the headers for the dimension keys and metrics returned in the report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "header" })
  @Type(() => Header)
  header?: Header;

  /**
   * The date and time, in ISO 8601 format, that indicates the last time the data returned in the report was updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDate" })
  lastUpdatedDate?: string;

  /**
   * A complex type containing the individual data records for the traffic report.
   */
  @SpeakeasyMetadata({ elemType: RecordT })
  @Expose({ name: "records" })
  @Type(() => RecordT)
  records?: RecordT[];

  /**
   * The start date of the date range used to calculate the report, in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  startDate?: string;

  /**
   * An array of any process errors or warnings that were generated during the processing of the call processing.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "warnings" })
  @Type(() => ErrorT)
  warnings?: ErrorT[];
}
