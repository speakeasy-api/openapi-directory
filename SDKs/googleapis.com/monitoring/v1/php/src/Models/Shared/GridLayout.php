<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GridLayout - A basic layout divides the available space into vertical columns of equal width and arranges a list of widgets using a row-first strategy.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GridLayout
{
    /**
     * The number of columns into which the view's width is divided. If omitted or set to zero, a system default will be used while rendering.
     * 
     * @var ?string $columns
     */
	#[\JMS\Serializer\Annotation\SerializedName('columns')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $columns = null;
    
    /**
     * The informational elements that are arranged into the columns row-first.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Widget> $widgets
     */
	#[\JMS\Serializer\Annotation\SerializedName('widgets')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Widget>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $widgets = null;
    
	public function __construct()
	{
		$this->columns = null;
		$this->widgets = null;
	}
}
