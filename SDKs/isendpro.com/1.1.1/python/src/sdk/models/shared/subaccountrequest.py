"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SubaccountRequestSubAccountEditEnum(str, Enum):
    r"""action à réaliser soit setPrice pour définir un prix ou addCredit pour ajouter du credit ou setRestriction modifier la restriction stop /"""
    SET_PRICE = 'setPrice'
    ADD_CREDIT = 'addCredit'
    SET_RESTRICTION = 'setRestriction'

class SubaccountRequestSubAccountRestrictionStopEnum(str, Enum):
    ZERO = '0'
    ONE = '1'

class SubaccountRequestSubAccountRestrictionTimeEnum(str, Enum):
    ZERO = '0'
    ONE = '1'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubaccountRequest:
    r"""edit sub account request"""
    
    keyid: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keyid') }})
    r"""Clé API"""  
    sub_account_edit: SubaccountRequestSubAccountEditEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subAccountEdit') }})
    r"""action à réaliser soit setPrice pour définir un prix ou addCredit pour ajouter du credit ou setRestriction modifier la restriction stop /"""  
    sub_account_add_credit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subAccountAddCredit'), 'exclude': lambda f: f is None }})
    r"""montant du crédit à ajouter"""  
    sub_account_country_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subAccountCountryCode'), 'exclude': lambda f: f is None }})  
    sub_account_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subAccountKeyId'), 'exclude': lambda f: f is None }})
    r"""keyid du sous-compte"""  
    sub_account_price: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subAccountPrice'), 'exclude': lambda f: f is None }})  
    sub_account_restriction_stop: Optional[SubaccountRequestSubAccountRestrictionStopEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subAccountRestrictionStop'), 'exclude': lambda f: f is None }})  
    sub_account_restriction_time: Optional[SubaccountRequestSubAccountRestrictionTimeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subAccountRestrictionTime'), 'exclude': lambda f: f is None }})  
    