// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ManifestTypeEnum - Required. Type of the manifest, can be "HLS" or "DASH".
type ManifestTypeEnum string

const (
	ManifestTypeEnumManifestTypeUnspecified ManifestTypeEnum = "MANIFEST_TYPE_UNSPECIFIED"
	ManifestTypeEnumHls                     ManifestTypeEnum = "HLS"
	ManifestTypeEnumDash                    ManifestTypeEnum = "DASH"
)

func (e *ManifestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MANIFEST_TYPE_UNSPECIFIED":
		fallthrough
	case "HLS":
		fallthrough
	case "DASH":
		*e = ManifestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ManifestTypeEnum: %s", s)
	}
}

// Manifest - Manifest configuration.
type Manifest struct {
	// The name of the generated file. The default is `"manifest"` with the extension suffix corresponding to the `Manifest.type`.
	FileName *string `json:"fileName,omitempty"`
	// Required. List of user given `MuxStream.key`s that should appear in this manifest. When `Manifest.type` is `HLS`, a media manifest with name `MuxStream.key` and `.m3u8` extension is generated for each element of the `Manifest.mux_streams`.
	MuxStreams []string `json:"muxStreams,omitempty"`
	// Required. Type of the manifest, can be "HLS" or "DASH".
	Type *ManifestTypeEnum `json:"type,omitempty"`
}
