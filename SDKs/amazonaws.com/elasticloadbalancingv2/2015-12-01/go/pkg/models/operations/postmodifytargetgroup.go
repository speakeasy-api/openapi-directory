// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTModifyTargetGroupActionEnum
type POSTModifyTargetGroupActionEnum string

const (
	POSTModifyTargetGroupActionEnumModifyTargetGroup POSTModifyTargetGroupActionEnum = "ModifyTargetGroup"
)

func (e POSTModifyTargetGroupActionEnum) ToPointer() *POSTModifyTargetGroupActionEnum {
	return &e
}

func (e *POSTModifyTargetGroupActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyTargetGroup":
		*e = POSTModifyTargetGroupActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTModifyTargetGroupActionEnum: %v", v)
	}
}

// POSTModifyTargetGroupVersionEnum
type POSTModifyTargetGroupVersionEnum string

const (
	POSTModifyTargetGroupVersionEnumTwoThousandAndFifteen1201 POSTModifyTargetGroupVersionEnum = "2015-12-01"
)

func (e POSTModifyTargetGroupVersionEnum) ToPointer() *POSTModifyTargetGroupVersionEnum {
	return &e
}

func (e *POSTModifyTargetGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-12-01":
		*e = POSTModifyTargetGroupVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTModifyTargetGroupVersionEnum: %v", v)
	}
}

type POSTModifyTargetGroupRequest struct {
	Action            POSTModifyTargetGroupActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                           `request:"mediaType=text/xml"`
	Version           POSTModifyTargetGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTModifyTargetGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
