// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// MediaV1MediaRecordingStatusCallbackMethodEnum - The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
type MediaV1MediaRecordingStatusCallbackMethodEnum string

const (
	MediaV1MediaRecordingStatusCallbackMethodEnumHead   MediaV1MediaRecordingStatusCallbackMethodEnum = "HEAD"
	MediaV1MediaRecordingStatusCallbackMethodEnumGet    MediaV1MediaRecordingStatusCallbackMethodEnum = "GET"
	MediaV1MediaRecordingStatusCallbackMethodEnumPost   MediaV1MediaRecordingStatusCallbackMethodEnum = "POST"
	MediaV1MediaRecordingStatusCallbackMethodEnumPatch  MediaV1MediaRecordingStatusCallbackMethodEnum = "PATCH"
	MediaV1MediaRecordingStatusCallbackMethodEnumPut    MediaV1MediaRecordingStatusCallbackMethodEnum = "PUT"
	MediaV1MediaRecordingStatusCallbackMethodEnumDelete MediaV1MediaRecordingStatusCallbackMethodEnum = "DELETE"
)

func (e MediaV1MediaRecordingStatusCallbackMethodEnum) ToPointer() *MediaV1MediaRecordingStatusCallbackMethodEnum {
	return &e
}

func (e *MediaV1MediaRecordingStatusCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = MediaV1MediaRecordingStatusCallbackMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MediaV1MediaRecordingStatusCallbackMethodEnum: %v", v)
	}
}

// MediaV1MediaRecording - OK
type MediaV1MediaRecording struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the MediaRecording resource.
	AccountSid *string `json:"account_sid,omitempty"`
	// The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	DateCreated *time.Time `json:"date_created,omitempty"`
	// The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	DateUpdated *time.Time `json:"date_updated,omitempty"`
	// The duration of the MediaRecording in seconds.
	Duration *int64                        `json:"duration,omitempty"`
	Format   *MediaRecordingEnumFormatEnum `json:"format,omitempty"`
	// The URLs of related resources.
	Links map[string]interface{} `json:"links,omitempty"`
	// The size of the recording media in bytes.
	MediaSize *int64 `json:"media_size,omitempty"`
	// The SID of the MediaProcessor resource which produced the MediaRecording.
	ProcessorSid *string `json:"processor_sid,omitempty"`
	// The dimensions of the video image in pixels expressed as columns (width) and rows (height).
	Resolution *string `json:"resolution,omitempty"`
	// The unique string generated to identify the MediaRecording resource.
	Sid *string `json:"sid,omitempty"`
	// The SID of the resource that generated the original media track(s) of the MediaRecording.
	SourceSid *string                       `json:"source_sid,omitempty"`
	Status    *MediaRecordingEnumStatusEnum `json:"status,omitempty"`
	// The URL to which Twilio will send asynchronous webhook requests for every MediaRecording event. See [Status Callbacks](/docs/live/status-callbacks) for more details.
	StatusCallback *string `json:"status_callback,omitempty"`
	// The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
	StatusCallbackMethod *MediaV1MediaRecordingStatusCallbackMethodEnum `json:"status_callback_method,omitempty"`
	// The absolute URL of the resource.
	URL *string `json:"url,omitempty"`
}
