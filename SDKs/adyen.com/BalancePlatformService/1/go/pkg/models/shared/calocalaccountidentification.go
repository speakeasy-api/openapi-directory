// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CALocalAccountIdentificationTypeEnum - **caLocal**
type CALocalAccountIdentificationTypeEnum string

const (
	CALocalAccountIdentificationTypeEnumCaLocal CALocalAccountIdentificationTypeEnum = "caLocal"
)

func (e CALocalAccountIdentificationTypeEnum) ToPointer() *CALocalAccountIdentificationTypeEnum {
	return &e
}

func (e *CALocalAccountIdentificationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "caLocal":
		*e = CALocalAccountIdentificationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CALocalAccountIdentificationTypeEnum: %v", v)
	}
}

// CALocalAccountIdentification - Bank account identification.
type CALocalAccountIdentification struct {
	// The 5- to 12-digit bank account number, without separators or whitespace.
	AccountNumber string `json:"accountNumber"`
	// The 3-digit institution number, without separators or whitespace.
	InstitutionNumber string `json:"institutionNumber"`
	// The 5-digit transit number, without separators or whitespace.
	TransitNumber string `json:"transitNumber"`
	// **caLocal**
	Type CALocalAccountIdentificationTypeEnum `json:"type"`
}
