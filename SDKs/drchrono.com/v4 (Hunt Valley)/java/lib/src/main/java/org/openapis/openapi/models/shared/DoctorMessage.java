/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DoctorMessage - Created
 */
public class DoctorMessage {
    /**
     * If true, indicates that the message has been soft-deleted
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archived")
    public Boolean archived;
    public DoctorMessage withArchived(Boolean archived) {
        this.archived = archived;
        return this;
    }
    
    /**
     * Files are passed using `multipart/form-data` encoding, but returned as URLs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attachment")
    public String attachment;
    public DoctorMessage withAttachment(String attachment) {
        this.attachment = attachment;
        return this;
    }
    
    @JsonProperty("doctor")
    public Long doctor;
    public DoctorMessage withDoctor(Long doctor) {
        this.doctor = doctor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public DoctorMessage withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Array of notes attached to the message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_notes")
    public DoctorMessageMessageNote[] messageNotes;
    public DoctorMessage withMessageNotes(DoctorMessageMessageNote[] messageNotes) {
        this.messageNotes = messageNotes;
        return this;
    }
    
    /**
     * ID of `/api/users` who owns the message, who may be the doctor themselves or one of their staff members
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public String owner;
    public DoctorMessage withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * ID of patient that the message concerns, if applicable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patient")
    public Long patient;
    public DoctorMessage withPatient(Long patient) {
        this.patient = patient;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("read")
    public Boolean read;
    public DoctorMessage withRead(Boolean read) {
        this.read = read;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("received_at")
    public String receivedAt;
    public DoctorMessage withReceivedAt(String receivedAt) {
        this.receivedAt = receivedAt;
        return this;
    }
    
    /**
     * ID of `/api/users` who has been assigned to process the message, who may be the doctor themselves or one of their staff members
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responsible_user")
    public String responsibleUser;
    public DoctorMessage withResponsibleUser(String responsibleUser) {
        this.responsibleUser = responsibleUser;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("starred")
    public Boolean starred;
    public DoctorMessage withStarred(Boolean starred) {
        this.starred = starred;
        return this;
    }
    
    @JsonProperty("title")
    public String title;
    public DoctorMessage withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Value | Description
     * ----- | -----------
     * `"GP"` | Generated PDF
     * `"GC"` | Generated CSV
     * `"GZ"` | Generated ZIP
     * `"IF"` | Incoming Fax
     * `"OF"` | Outgoing Fax
     * `"IL"` | Incoming Labs
     * `"IR"` | Inbound Referrals
     * `"OR"` | Outbound Referrals
     * `"IE"` | Incoming eRx
     * `"OA"` | Online Appointments
     * `"PO"` | Patient Onboarding
     * `"PI"` | Patient Incoming Message
     * `"PM"` | Patient Outgoing Message
     * `"OO"` | Demo Meeting Message
     * `"OD"` | Outbound Direct Message
     * `"ID"` | Inbound Direct Message
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public DoctorMessageTypeEnum type;
    public DoctorMessage withType(DoctorMessageTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;
    public DoctorMessage withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * Used by doctors and their staff to keep track of what step of processing the message is in
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflow_step")
    public String workflowStep;
    public DoctorMessage withWorkflowStep(String workflowStep) {
        this.workflowStep = workflowStep;
        return this;
    }
    
}
