// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum - The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
type GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum string

const (
	GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnumVpc                  GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum = "vpc"
	GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnumVpn                  GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum = "vpn"
	GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnumDirectConnectGateway GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum = "direct-connect-gateway"
	GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnumConnect              GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum = "connect"
	GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnumPeering              GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum = "peering"
	GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnumTgwPeering           GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum = "tgw-peering"
)

func (e GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum) ToPointer() *GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum {
	return &e
}

func (e *GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum: %v", v)
	}
}

// GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum - The state of the association.
type GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum string

const (
	GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnumAssociating    GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum = "associating"
	GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnumAssociated     GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum = "associated"
	GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnumDisassociating GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum = "disassociating"
	GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnumDisassociated  GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum = "disassociated"
)

func (e GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum) ToPointer() *GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum {
	return &e
}

func (e *GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		*e = GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum: %v", v)
	}
}

// GetTransitGatewayRouteTableAssociationsResultAssociations - Describes an association between a route table and a resource attachment.
type GetTransitGatewayRouteTableAssociationsResultAssociations struct {
	ResourceID                 *string
	ResourceType               *GetTransitGatewayRouteTableAssociationsResultAssociationsResourceTypeEnum
	State                      *GetTransitGatewayRouteTableAssociationsResultAssociationsStateEnum
	TransitGatewayAttachmentID *string
}

// GetTransitGatewayRouteTableAssociationsResult - Success
type GetTransitGatewayRouteTableAssociationsResult struct {
	Associations []GetTransitGatewayRouteTableAssociationsResultAssociations
	NextToken    *string
}
