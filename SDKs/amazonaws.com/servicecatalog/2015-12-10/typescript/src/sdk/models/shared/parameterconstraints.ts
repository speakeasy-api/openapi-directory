/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The constraints that the administrator has put on the parameter.
 */
export class ParameterConstraints extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowedPattern" })
  allowedPattern?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AllowedValues" })
  allowedValues?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ConstraintDescription" })
  constraintDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxLength" })
  maxLength?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxValue" })
  maxValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MinLength" })
  minLength?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MinValue" })
  minValue?: string;
}
