/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FilesetTemplateDetail - Summary information for the created fileset template.
 */
public class FilesetTemplateDetail {
    /**
     * Include or exclude hidden folders inside locally-mounted remote file systems from backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowBackupHiddenFoldersInNetworkMounts")
    public Boolean allowBackupHiddenFoldersInNetworkMounts;

    public FilesetTemplateDetail withAllowBackupHiddenFoldersInNetworkMounts(Boolean allowBackupHiddenFoldersInNetworkMounts) {
        this.allowBackupHiddenFoldersInNetworkMounts = allowBackupHiddenFoldersInNetworkMounts;
        return this;
    }
    
    /**
     * Include or exclude locally-mounted remote file systems from backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowBackupNetworkMounts")
    public Boolean allowBackupNetworkMounts;

    public FilesetTemplateDetail withAllowBackupNetworkMounts(Boolean allowBackupNetworkMounts) {
        this.allowBackupNetworkMounts = allowBackupNetworkMounts;
        return this;
    }
    
    /**
     * Action taken if script fails. Options are "abort", "continue".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupScriptErrorHandling")
    public String backupScriptErrorHandling;

    public FilesetTemplateDetail withBackupScriptErrorHandling(String backupScriptErrorHandling) {
        this.backupScriptErrorHandling = backupScriptErrorHandling;
        return this;
    }
    
    /**
     * Number of seconds after which the script is killed if it has not completed execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupScriptTimeout")
    public Long backupScriptTimeout;

    public FilesetTemplateDetail withBackupScriptTimeout(Long backupScriptTimeout) {
        this.backupScriptTimeout = backupScriptTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exceptions")
    public String[] exceptions;

    public FilesetTemplateDetail withExceptions(String[] exceptions) {
        this.exceptions = exceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludes")
    public String[] excludes;

    public FilesetTemplateDetail withExcludes(String[] excludes) {
        this.excludes = excludes;
        return this;
    }
    
    /**
     * Number of hosts where this template has been applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostCount")
    public Integer hostCount;

    public FilesetTemplateDetail withHostCount(Integer hostCount) {
        this.hostCount = hostCount;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public FilesetTemplateDetail withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("includes")
    public String[] includes;

    public FilesetTemplateDetail withIncludes(String[] includes) {
        this.includes = includes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isArchived")
    public Boolean isArchived;

    public FilesetTemplateDetail withIsArchived(Boolean isArchived) {
        this.isArchived = isArchived;
        return this;
    }
    
    /**
     * Boolean value that determines whether the fileset is array-enabled. Set to true to indicate that the fileset is array-enabled. Set to false to indicate that the fileset is not array-enabled. When a fileset is array-enabled, the includes must be top-level LVM logical volume mount points.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isArrayEnabled")
    public Boolean isArrayEnabled;

    public FilesetTemplateDetail withIsArrayEnabled(Boolean isArrayEnabled) {
        this.isArrayEnabled = isArrayEnabled;
        return this;
    }
    
    /**
     * Specifies whether this is created by a Kupr Host.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCreatedByKupr")
    public Boolean isCreatedByKupr;

    public FilesetTemplateDetail withIsCreatedByKupr(Boolean isCreatedByKupr) {
        this.isCreatedByKupr = isCreatedByKupr;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public FilesetTemplateDetail withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Operating system type of filesets created by template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatingSystemType")
    public FilesetTemplateDetailOperatingSystemTypeEnum operatingSystemType;

    public FilesetTemplateDetail withOperatingSystemType(FilesetTemplateDetailOperatingSystemTypeEnum operatingSystemType) {
        this.operatingSystemType = operatingSystemType;
        return this;
    }
    
    /**
     * Script to run after backup of this fileset ends.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postBackupScript")
    public String postBackupScript;

    public FilesetTemplateDetail withPostBackupScript(String postBackupScript) {
        this.postBackupScript = postBackupScript;
        return this;
    }
    
    /**
     * Script to run before backup of this fileset starts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preBackupScript")
    public String preBackupScript;

    public FilesetTemplateDetail withPreBackupScript(String preBackupScript) {
        this.preBackupScript = preBackupScript;
        return this;
    }
    
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public FilesetTemplateDetail withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Number of shares where this template has been applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareCount")
    public Integer shareCount;

    public FilesetTemplateDetail withShareCount(Integer shareCount) {
        this.shareCount = shareCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareType")
    public FilesetTemplateDetailShareTypeEnum shareType;

    public FilesetTemplateDetail withShareType(FilesetTemplateDetailShareTypeEnum shareType) {
        this.shareType = shareType;
        return this;
    }
    
    /**
     * Use VSS during Windows backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useWindowsVss")
    public Boolean useWindowsVss;

    public FilesetTemplateDetail withUseWindowsVss(Boolean useWindowsVss) {
        this.useWindowsVss = useWindowsVss;
        return this;
    }
    
    public FilesetTemplateDetail(@JsonProperty("id") String id, @JsonProperty("includes") String[] includes, @JsonProperty("name") String name, @JsonProperty("primaryClusterId") String primaryClusterId) {
        this.id = id;
        this.includes = includes;
        this.name = name;
        this.primaryClusterId = primaryClusterId;
  }
}
