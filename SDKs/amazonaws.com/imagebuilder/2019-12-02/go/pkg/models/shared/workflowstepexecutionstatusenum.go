// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkflowStepExecutionStatusEnum string

const (
	WorkflowStepExecutionStatusEnumPending   WorkflowStepExecutionStatusEnum = "PENDING"
	WorkflowStepExecutionStatusEnumSkipped   WorkflowStepExecutionStatusEnum = "SKIPPED"
	WorkflowStepExecutionStatusEnumRunning   WorkflowStepExecutionStatusEnum = "RUNNING"
	WorkflowStepExecutionStatusEnumCompleted WorkflowStepExecutionStatusEnum = "COMPLETED"
	WorkflowStepExecutionStatusEnumFailed    WorkflowStepExecutionStatusEnum = "FAILED"
)

func (e WorkflowStepExecutionStatusEnum) ToPointer() *WorkflowStepExecutionStatusEnum {
	return &e
}

func (e *WorkflowStepExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "SKIPPED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		*e = WorkflowStepExecutionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowStepExecutionStatusEnum: %v", v)
	}
}
