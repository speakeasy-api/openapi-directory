/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum ModifyReplicationInstanceXAmzTargetEnum {
  AmazonDMSv20160101ModifyReplicationInstance = "AmazonDMSv20160101.ModifyReplicationInstance",
}

export class ModifyReplicationInstanceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  modifyReplicationInstanceMessage: shared.ModifyReplicationInstanceMessage;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Target",
  })
  xAmzTarget: ModifyReplicationInstanceXAmzTargetEnum;
}

export class ModifyReplicationInstanceResponse extends SpeakeasyBase {
  /**
   * AccessDeniedFault
   */
  @SpeakeasyMetadata()
  accessDeniedFault?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InsufficientResourceCapacityFault
   */
  @SpeakeasyMetadata()
  insufficientResourceCapacityFault?: any;

  /**
   * InvalidResourceStateFault
   */
  @SpeakeasyMetadata()
  invalidResourceStateFault?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  modifyReplicationInstanceResponse?: shared.ModifyReplicationInstanceResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceAlreadyExistsFault
   */
  @SpeakeasyMetadata()
  resourceAlreadyExistsFault?: any;

  /**
   * ResourceNotFoundFault
   */
  @SpeakeasyMetadata()
  resourceNotFoundFault?: any;

  /**
   * StorageQuotaExceededFault
   */
  @SpeakeasyMetadata()
  storageQuotaExceededFault?: any;

  /**
   * UpgradeDependencyFailureFault
   */
  @SpeakeasyMetadata()
  upgradeDependencyFailureFault?: any;
}
