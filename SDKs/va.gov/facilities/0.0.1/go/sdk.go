// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdk

import (
	"net/http"
	"openapi/pkg/utils"
	"time"
)

// ServerList contains the list of servers available to the SDK
var ServerList = []string{
	// Sandbox
	"https://sandbox-api.va.gov/services/va_facilities/{version}",
	// Production
	"https://api.va.gov/services/va_facilities/{version}",
}

// HTTPClient provides an interface for suplying the SDK with a custom HTTP client
type HTTPClient interface {
	Do(req *http.Request) (*http.Response, error)
}

// String provides a helper function to return a pointer to a string
func String(s string) *string { return &s }

// SDK - ## Background
//
// This RESTful API provides information about physical VA facilities. Information available includes
// geographic location, address, phone, hours of operation, and available services.
//
// VA operates several different types of facilities, the types represented in this API include:
// - Health Facilities (vha)
// - Benefits Facilities (vba)
// - Cemeteries (nca)
// - Vet Centers (vc)
//
// To read an FAQ on how wait times are calculated, click the "For more information" link on [this page](https://www.accesstocare.va.gov/PWT/SearchWaitTimes).
//
// ## Getting Started
//
// ### Base URLs
//
// The base URLs for the VA Facilities API in the various environments are:
// - Sandbox: `https://sandbox-api.va.gov/services/va_facilities/v0`
// - Production: `https://api.va.gov/services/va_facilities/v0`
//
// ### Authorization
//
// API requests are authorized through a symmetric API token, provided in an HTTP header with name `apikey`.
//
// ### Response Formats
//
// Clients may request several response formats by setting the `Accept` header.
// - `application/json` - The default JSON response format complies with JSON API. This media type is *not* available for bulk requests using the `/facilities/all` endpoint. It will return `406 Not Acceptable`.
// - `application/geo+json` - GeoJSON-compliant format, representing each facility as a feature with a point geometry.
// - `application/vnd.geo+json` - Deprecated. Prefer application/geo+json.
// - `text/csv` - Available for the bulk download operation only. Some structured fields are omitted from the CSV response.
//
// ### Response Elements
//
// Some data elements within the response are only present for facilities of a given type:
//   - The patient satisfaction scores contained in the `satisfaction` element are only applicable
//     to VA health facilities.
//   - The patient wait time values contained in the `wait_times` element are only applicable to
//     VA health facilities.
//   - The list of available services in the `services` element is only applicable to VA health and
//     benefits facilities.
//   - The operational hours special instructions contained in the `operational_hours_special_instructions` element is only applicable to VA health and Vet Center facilities.
//
// ### Facility ID Formats and Constraints
//
// A facility ID has the format `prefix_stationNumber`. The prefix is one of nca, vc, vba, or vha. Cemeteries may be national (VA) or non-national; non-national cemeteries have the station number prefixed with an `s`. There are no other constraints on the format. Examples:
// - Health: `vha_402GA`
// - Benefits: `vba_539GB`
// - National cemetery: `nca_063`
// - Non-national cemetery: `nca_s1082`
// - Vet center: `vc_0872MVC`
//
// ### Mobile Facilities
//
// The mobile health facilities move regularly within a region. If a facility comes back from this API with `"mobile": "true"`, the latitude/longitude and address could be inaccurate. To get the exact current location, please call the number listed.
//
// ## Deprecations
//
// - `active_status` field is deprecated and replaced with `operating_status`.
// - `application/vnd.geo+json` media type is deprecated and replaced by `application/geo+json`
//
// ## Reference
//
// - [Raw VA Facilities Open API Spec](https://api.va.gov/services/va_facilities/docs/v0/api)
// - [GeoJSON Format](https://tools.ietf.org/html/rfc7946)
// - [JSON API Format](https://jsonapi.org/format/)
type SDK struct {
	// Facilities - VA Facilities API
	Facilities *facilities

	// Non-idiomatic field names below are to namespace fields from the fields names above to avoid name conflicts
	_defaultClient  HTTPClient
	_securityClient HTTPClient

	_serverURL  string
	_language   string
	_sdkVersion string
	_genVersion string
}

type SDKOption func(*SDK)

// WithServerURL allows the overriding of the default server URL
func WithServerURL(serverURL string) SDKOption {
	return func(sdk *SDK) {
		sdk._serverURL = serverURL
	}
}

// WithTemplatedServerURL allows the overriding of the default server URL with a templated URL populated with the provided parameters
func WithTemplatedServerURL(serverURL string, params map[string]string) SDKOption {
	return func(sdk *SDK) {
		if params != nil {
			serverURL = utils.ReplaceParameters(serverURL, params)
		}

		sdk._serverURL = serverURL
	}
}

// WithClient allows the overriding of the default HTTP client used by the SDK
func WithClient(client HTTPClient) SDKOption {
	return func(sdk *SDK) {
		sdk._defaultClient = client
	}
}

// New creates a new instance of the SDK with the provided options
func New(opts ...SDKOption) *SDK {
	sdk := &SDK{
		_language:   "go",
		_sdkVersion: "0.0.1",
		_genVersion: "internal",
	}
	for _, opt := range opts {
		opt(sdk)
	}

	// Use WithClient to override the default client if you would like to customize the timeout
	if sdk._defaultClient == nil {
		sdk._defaultClient = &http.Client{Timeout: 60 * time.Second}
	}
	if sdk._securityClient == nil {
		sdk._securityClient = sdk._defaultClient
	}

	if sdk._serverURL == "" {
		sdk._serverURL = ServerList[0]
	}

	sdk.Facilities = newFacilities(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	return sdk
}
