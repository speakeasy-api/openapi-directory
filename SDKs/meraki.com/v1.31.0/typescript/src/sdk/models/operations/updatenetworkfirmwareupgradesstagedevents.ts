/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The Staged Upgrade Group containing the name and ID
 */
export class UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStagesGroup extends SpeakeasyBase {
  /**
   * ID of the Staged Upgrade Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

/**
 * The Staged Upgrade Milestones for the specific stage
 */
export class UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStagesMilestones extends SpeakeasyBase {
  /**
   * The start time of the staged upgrade stage. (In ISO-8601 format, in the time zone of the network.)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduledFor" })
  scheduledFor: string;
}

export class UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStages extends SpeakeasyBase {
  /**
   * The Staged Upgrade Group containing the name and ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStagesGroup)
  group?: UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStagesGroup;

  /**
   * The Staged Upgrade Milestones for the specific stage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "milestones" })
  @Type(
    () => UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStagesMilestones
  )
  milestones?: UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStagesMilestones;
}

export class UpdateNetworkFirmwareUpgradesStagedEventsRequestBody extends SpeakeasyBase {
  /**
   * All firmware upgrade stages in the network with their start time.
   */
  @SpeakeasyMetadata({
    elemType: UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStages,
  })
  @Expose({ name: "stages" })
  @Type(() => UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStages)
  stages: UpdateNetworkFirmwareUpgradesStagedEventsRequestBodyStages[];
}

export class UpdateNetworkFirmwareUpgradesStagedEventsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateNetworkFirmwareUpgradesStagedEventsRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

/**
 * Details of the version the device will upgrade to
 */
export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion extends SpeakeasyBase {
  /**
   * Id of the Version being upgraded to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the next firmware upgrade
 */
export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade extends SpeakeasyBase {
  /**
   * Details of the version the device will upgrade to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion
  )
  toVersion?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion;
}

/**
 * The Switch network to be updated
 */
export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch extends SpeakeasyBase {
  /**
   * Details of the next firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextUpgrade" })
  @Type(
    () =>
      UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade
  )
  nextUpgrade?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade;
}

/**
 * The network devices to be updated
 */
export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts extends SpeakeasyBase {
  /**
   * The Switch network to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "switch" })
  @Type(
    () =>
      UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch
  )
  switch?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch;
}

/**
 * Reason for the rollback
 */
export enum UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum {
  BrokeOldFeatures = "broke old features",
  Other = "other",
  Performance = "performance",
  Stability = "stability",
  Testing = "testing",
  UnifyingNetworksVersions = "unifying networks versions",
}

export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons extends SpeakeasyBase {
  /**
   * Reason for the rollback
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum;

  /**
   * Additional comment about the rollback
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;
}

/**
 * The staged upgrade group
 */
export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup extends SpeakeasyBase {
  /**
   * Description of the Staged Upgrade Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Id of the Staged Upgrade Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the Staged Upgrade Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * The Staged Upgrade Milestones for the stage
 */
export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones extends SpeakeasyBase {
  /**
   * Time that the group was canceled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canceledAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  canceledAt?: Date;

  /**
   * Finish time for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedAt?: Date;

  /**
   * Scheduled start time for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduledFor" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduledFor?: Date;

  /**
   * Start time for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;
}

export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages extends SpeakeasyBase {
  /**
   * The staged upgrade group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(
    () => UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup
  )
  group?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup;

  /**
   * The Staged Upgrade Milestones for the stage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "milestones" })
  @Type(
    () =>
      UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones
  )
  milestones?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones;

  /**
   * Current upgrade status of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

/**
 * Successful operation
 */
export class UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSON extends SpeakeasyBase {
  /**
   * The network devices to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "products" })
  @Type(
    () => UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts
  )
  products?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts;

  /**
   * Reasons for the rollback
   */
  @SpeakeasyMetadata({
    elemType:
      UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons,
  })
  @Expose({ name: "reasons" })
  @Type(
    () => UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons
  )
  reasons?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons[];

  /**
   * The ordered stages in the network
   */
  @SpeakeasyMetadata({
    elemType: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages,
  })
  @Expose({ name: "stages" })
  @Type(() => UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages)
  stages?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages[];
}

export class UpdateNetworkFirmwareUpgradesStagedEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkFirmwareUpgradesStagedEvents200ApplicationJSONObject?: UpdateNetworkFirmwareUpgradesStagedEvents200ApplicationJSON;
}
