/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DescribePredictorBacktestExportJobResponse - Success
 */
public class DescribePredictorBacktestExportJobResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public DescribePredictorBacktestExportJobResponse withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * The destination for an export job. Provide an S3 path, an Identity and Access Management (IAM) role that allows Amazon Forecast to access the location, and an Key Management Service (KMS) key (optional). 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Destination")
    public DataDestination destination;

    public DescribePredictorBacktestExportJobResponse withDestination(DataDestination destination) {
        this.destination = destination;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Format")
    public String format;

    public DescribePredictorBacktestExportJobResponse withFormat(String format) {
        this.format = format;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModificationTime")
    public OffsetDateTime lastModificationTime;

    public DescribePredictorBacktestExportJobResponse withLastModificationTime(OffsetDateTime lastModificationTime) {
        this.lastModificationTime = lastModificationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Message")
    public String message;

    public DescribePredictorBacktestExportJobResponse withMessage(String message) {
        this.message = message;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PredictorArn")
    public String predictorArn;

    public DescribePredictorBacktestExportJobResponse withPredictorArn(String predictorArn) {
        this.predictorArn = predictorArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PredictorBacktestExportJobArn")
    public String predictorBacktestExportJobArn;

    public DescribePredictorBacktestExportJobResponse withPredictorBacktestExportJobArn(String predictorBacktestExportJobArn) {
        this.predictorBacktestExportJobArn = predictorBacktestExportJobArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PredictorBacktestExportJobName")
    public String predictorBacktestExportJobName;

    public DescribePredictorBacktestExportJobResponse withPredictorBacktestExportJobName(String predictorBacktestExportJobName) {
        this.predictorBacktestExportJobName = predictorBacktestExportJobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;

    public DescribePredictorBacktestExportJobResponse withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public DescribePredictorBacktestExportJobResponse(){}
}
