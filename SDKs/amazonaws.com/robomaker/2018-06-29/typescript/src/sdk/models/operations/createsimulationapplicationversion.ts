/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateSimulationApplicationVersionRequestBody extends SpeakeasyBase {
  /**
   * The application information for the simulation application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "application" })
  application: string;

  /**
   * The current revision id for the simulation application. If you provide a value and it matches the latest revision ID, a new version will be created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentRevisionId" })
  currentRevisionId?: string;

  /**
   * The SHA256 digest used to identify the Docker image URI used to created the simulation application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageDigest" })
  imageDigest?: string;

  /**
   * The Amazon S3 eTag identifier for the zip file bundle that you use to create the simulation application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "s3Etags" })
  s3Etags?: string[];
}

export class CreateSimulationApplicationVersionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateSimulationApplicationVersionRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateSimulationApplicationVersionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createSimulationApplicationVersionResponse?: shared.CreateSimulationApplicationVersionResponse;

  /**
   * IdempotentParameterMismatchException
   */
  @SpeakeasyMetadata()
  idempotentParameterMismatchException?: any;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * InvalidParameterException
   */
  @SpeakeasyMetadata()
  invalidParameterException?: any;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
