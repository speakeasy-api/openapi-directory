"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DeviceListSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class DeviceListRequest:
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_number', 'style': 'form', 'explode': True }})
    r"""**Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use \\"next_page_token\\" for pagination instead of this field.
    
    The page number of the current page in the returned records.
    """  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned within a single API call."""  
    
class DeviceListH323SIPDeviceListTheH323SIPDeviceObjectEncryptionEnum(str, Enum):
    r"""Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."""
    AUTO = 'auto'
    YES = 'yes'
    NO = 'no'

class DeviceListH323SIPDeviceListTheH323SIPDeviceObjectProtocolEnum(str, Enum):
    r"""Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."""
    H_323 = 'H.323'
    SIP = 'SIP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceListH323SIPDeviceListTheH323SIPDeviceObject:
    r"""The H.323/SIP device object."""
    
    encryption: DeviceListH323SIPDeviceListTheH323SIPDeviceObjectEncryptionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encryption') }})
    r"""Device encryption:<br>`auto` - auto.<br>`yes` - yes.<br>`no` - no."""  
    ip: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip') }})
    r"""Device IP."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Device name."""  
    protocol: DeviceListH323SIPDeviceListTheH323SIPDeviceObjectProtocolEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protocol') }})
    r"""Device protocol:<br>`H.323` - H.323.<br>`SIP` - SIP."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Device ID."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceListH323SIPDeviceList:
    r"""Pagination Object."""
    
    devices: Optional[list[DeviceListH323SIPDeviceListTheH323SIPDeviceObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devices'), 'exclude': lambda f: f is None }})
    r"""List of H.323/SIP Device objects."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_count'), 'exclude': lambda f: f is None }})
    r"""The number of pages returned for the request made."""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_number'), 'exclude': lambda f: f is None }})
    r"""**Deprecated**: This field has been deprecated. Please use the \\"next_page_token\\" field for pagination instead of this field.
    
    The page number of the current results.
    """  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""The number of records returned with a single API call."""  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""The total number of all the records available across pages."""  
    

@dataclasses.dataclass
class DeviceListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    h_323_sip_device_list: Optional[DeviceListH323SIPDeviceList] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    List of H.323/SIP devices returned.<br>
    **Error Code:** `200`<br>
    No permission.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    