"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddClientProfileRequestBody:
    r"""Customer's profile information."""
    
    document: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document') }})
    r"""Document number informed by the customer."""  
    document_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentType') }})
    r"""Type of the document informed by the customer."""  
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""Customer's email address."""  
    first_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstName') }})
    r"""Customer's first name."""  
    last_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastName') }})
    r"""Customer's last name."""  
    corporate_document: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('corporateDocument'), 'exclude': lambda f: f is None }})
    r"""Corporate document, if the customer is a legal entity."""  
    corporate_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('corporateName'), 'exclude': lambda f: f is None }})
    r"""Company name, if the customer is a legal entity."""  
    corporate_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('corporatePhone'), 'exclude': lambda f: f is None }})
    r"""Corporate phone number, if the customer is a legal entity."""  
    is_corporate: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCorporate'), 'exclude': lambda f: f is None }})
    r"""`true` if the customer is a legal entity."""  
    phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})
    r"""Customer's phone number."""  
    state_inscription: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateInscription'), 'exclude': lambda f: f is None }})
    r"""State inscription, if the customer is a legal entity."""  
    trade_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tradeName'), 'exclude': lambda f: f is None }})
    r"""Trade name, if the customer is a legal entity."""  
    

@dataclasses.dataclass
class AddClientProfileRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent."""  
    order_form_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'orderFormId', 'style': 'simple', 'explode': False }})
    r"""ID of the orderForm that will receive client profile information."""  
    request_body: AddClientProfileRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class AddClientProfileResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    