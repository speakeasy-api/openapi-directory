"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import feedconnections as shared_feedconnections
from typing import Optional


@dataclasses.dataclass
class GetFeedConnectionsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetFeedConnectionsRequest:
    
    xero_tenant_id: str = dataclasses.field(metadata={'header': { 'field_name': 'Xero-Tenant-Id', 'style': 'simple', 'explode': False }})
    r"""Xero identifier for Tenant"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number which specifies the set of records to retrieve. By default the number of the records per set is 10. Example - https://api.xero.com/bankfeeds.xro/1.0/FeedConnections?page=1 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""Page size which specifies how many records per page will be returned (default 10). Example - https://api.xero.com/bankfeeds.xro/1.0/FeedConnections?pageSize=100 to specify page size of 100."""  
    

@dataclasses.dataclass
class GetFeedConnectionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    feed_connections: Optional[shared_feedconnections.FeedConnections] = dataclasses.field(default=None)
    r"""search results matching criteria returned with pagination and items array"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    