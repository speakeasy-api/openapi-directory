"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETCreateTrafficMirrorFilterRuleResponse = exports.GETCreateTrafficMirrorFilterRuleRequest = exports.GETCreateTrafficMirrorFilterRuleVersionEnum = exports.GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum = exports.GETCreateTrafficMirrorFilterRuleSourcePortRange = exports.GETCreateTrafficMirrorFilterRuleRuleActionEnum = exports.GETCreateTrafficMirrorFilterRuleDestinationPortRange = exports.GETCreateTrafficMirrorFilterRuleActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETCreateTrafficMirrorFilterRuleActionEnum;
(function (GETCreateTrafficMirrorFilterRuleActionEnum) {
    GETCreateTrafficMirrorFilterRuleActionEnum["CreateTrafficMirrorFilterRule"] = "CreateTrafficMirrorFilterRule";
})(GETCreateTrafficMirrorFilterRuleActionEnum = exports.GETCreateTrafficMirrorFilterRuleActionEnum || (exports.GETCreateTrafficMirrorFilterRuleActionEnum = {}));
/**
 * Information about the Traffic Mirror filter rule port range.
 */
var GETCreateTrafficMirrorFilterRuleDestinationPortRange = /** @class */ (function (_super) {
    __extends(GETCreateTrafficMirrorFilterRuleDestinationPortRange, _super);
    function GETCreateTrafficMirrorFilterRuleDestinationPortRange() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=FromPort" }),
        __metadata("design:type", Number)
    ], GETCreateTrafficMirrorFilterRuleDestinationPortRange.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=ToPort" }),
        __metadata("design:type", Number)
    ], GETCreateTrafficMirrorFilterRuleDestinationPortRange.prototype, "toPort", void 0);
    return GETCreateTrafficMirrorFilterRuleDestinationPortRange;
}(utils_1.SpeakeasyBase));
exports.GETCreateTrafficMirrorFilterRuleDestinationPortRange = GETCreateTrafficMirrorFilterRuleDestinationPortRange;
/**
 * The action to take on the filtered traffic.
 */
var GETCreateTrafficMirrorFilterRuleRuleActionEnum;
(function (GETCreateTrafficMirrorFilterRuleRuleActionEnum) {
    GETCreateTrafficMirrorFilterRuleRuleActionEnum["Accept"] = "accept";
    GETCreateTrafficMirrorFilterRuleRuleActionEnum["Reject"] = "reject";
})(GETCreateTrafficMirrorFilterRuleRuleActionEnum = exports.GETCreateTrafficMirrorFilterRuleRuleActionEnum || (exports.GETCreateTrafficMirrorFilterRuleRuleActionEnum = {}));
/**
 * Information about the Traffic Mirror filter rule port range.
 */
var GETCreateTrafficMirrorFilterRuleSourcePortRange = /** @class */ (function (_super) {
    __extends(GETCreateTrafficMirrorFilterRuleSourcePortRange, _super);
    function GETCreateTrafficMirrorFilterRuleSourcePortRange() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=FromPort" }),
        __metadata("design:type", Number)
    ], GETCreateTrafficMirrorFilterRuleSourcePortRange.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=ToPort" }),
        __metadata("design:type", Number)
    ], GETCreateTrafficMirrorFilterRuleSourcePortRange.prototype, "toPort", void 0);
    return GETCreateTrafficMirrorFilterRuleSourcePortRange;
}(utils_1.SpeakeasyBase));
exports.GETCreateTrafficMirrorFilterRuleSourcePortRange = GETCreateTrafficMirrorFilterRuleSourcePortRange;
/**
 * The type of traffic.
 */
var GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum;
(function (GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum) {
    GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum["Ingress"] = "ingress";
    GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum["Egress"] = "egress";
})(GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum = exports.GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum || (exports.GETCreateTrafficMirrorFilterRuleTrafficDirectionEnum = {}));
var GETCreateTrafficMirrorFilterRuleVersionEnum;
(function (GETCreateTrafficMirrorFilterRuleVersionEnum) {
    GETCreateTrafficMirrorFilterRuleVersionEnum["TwoThousandAndSixteen1115"] = "2016-11-15";
})(GETCreateTrafficMirrorFilterRuleVersionEnum = exports.GETCreateTrafficMirrorFilterRuleVersionEnum || (exports.GETCreateTrafficMirrorFilterRuleVersionEnum = {}));
var GETCreateTrafficMirrorFilterRuleRequest = /** @class */ (function (_super) {
    __extends(GETCreateTrafficMirrorFilterRuleRequest, _super);
    function GETCreateTrafficMirrorFilterRuleRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=ClientToken",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "clientToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Description",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DestinationCidrBlock",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "destinationCidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DestinationPortRange",
        }),
        __metadata("design:type", GETCreateTrafficMirrorFilterRuleDestinationPortRange)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "destinationPortRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DryRun",
        }),
        __metadata("design:type", Boolean)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "dryRun", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Protocol",
        }),
        __metadata("design:type", Number)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "protocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=RuleAction",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "ruleAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=RuleNumber",
        }),
        __metadata("design:type", Number)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "ruleNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=SourceCidrBlock",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "sourceCidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=SourcePortRange",
        }),
        __metadata("design:type", GETCreateTrafficMirrorFilterRuleSourcePortRange)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "sourcePortRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=TrafficDirection",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "trafficDirection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=TrafficMirrorFilterId",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "trafficMirrorFilterId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETCreateTrafficMirrorFilterRuleRequest;
}(utils_1.SpeakeasyBase));
exports.GETCreateTrafficMirrorFilterRuleRequest = GETCreateTrafficMirrorFilterRuleRequest;
var GETCreateTrafficMirrorFilterRuleResponse = /** @class */ (function (_super) {
    __extends(GETCreateTrafficMirrorFilterRuleResponse, _super);
    function GETCreateTrafficMirrorFilterRuleResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETCreateTrafficMirrorFilterRuleResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETCreateTrafficMirrorFilterRuleResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETCreateTrafficMirrorFilterRuleResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETCreateTrafficMirrorFilterRuleResponse.prototype, "rawResponse", void 0);
    return GETCreateTrafficMirrorFilterRuleResponse;
}(utils_1.SpeakeasyBase));
exports.GETCreateTrafficMirrorFilterRuleResponse = GETCreateTrafficMirrorFilterRuleResponse;
