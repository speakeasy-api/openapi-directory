"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import scim_user as shared_scim_user
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GetV2Scim20UsersIDRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The user ID."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetV2Scim20UsersID500ApplicationScimPlusJSON:
    r"""Internal Error"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Details about why the request failed."""  
    schemas: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemas'), 'exclude': lambda f: f is None }})  
    status: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetV2Scim20UsersID404ApplicationScimPlusJSON:
    r"""Not Found"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Details about why the request failed."""  
    schemas: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemas'), 'exclude': lambda f: f is None }})  
    status: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetV2Scim20UsersID403ApplicationScimPlusJSON:
    r"""Forbidden"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Details about why the request failed."""  
    schemas: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemas'), 'exclude': lambda f: f is None }})  
    status: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetV2Scim20UsersID401ApplicationScimPlusJSON:
    r"""Unauthorized"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Details about why the request failed."""  
    schemas: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemas'), 'exclude': lambda f: f is None }})  
    status: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetV2Scim20UsersID400ApplicationScimPlusJSON:
    r"""Bad Request"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Details about why the request failed."""  
    schemas: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemas'), 'exclude': lambda f: f is None }})  
    scim_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scimType'), 'exclude': lambda f: f is None }})
    r"""Some types of errors will return this per the specification."""  
    status: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetV2Scim20UsersIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_v2_scim_2_0_users_id_400_application_scim_plus_json_object: Optional[GetV2Scim20UsersID400ApplicationScimPlusJSON] = dataclasses.field(default=None)
    r"""Bad Request"""  
    get_v2_scim_2_0_users_id_401_application_scim_plus_json_object: Optional[GetV2Scim20UsersID401ApplicationScimPlusJSON] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    get_v2_scim_2_0_users_id_403_application_scim_plus_json_object: Optional[GetV2Scim20UsersID403ApplicationScimPlusJSON] = dataclasses.field(default=None)
    r"""Forbidden"""  
    get_v2_scim_2_0_users_id_404_application_scim_plus_json_object: Optional[GetV2Scim20UsersID404ApplicationScimPlusJSON] = dataclasses.field(default=None)
    r"""Not Found"""  
    get_v2_scim_2_0_users_id_500_application_scim_plus_json_object: Optional[GetV2Scim20UsersID500ApplicationScimPlusJSON] = dataclasses.field(default=None)
    r"""Internal Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    scim_user: Optional[shared_scim_user.ScimUser] = dataclasses.field(default=None)  
    