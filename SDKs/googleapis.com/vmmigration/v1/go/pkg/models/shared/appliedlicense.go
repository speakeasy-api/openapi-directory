// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AppliedLicenseTypeEnum - The license type that was used in OS adaptation.
type AppliedLicenseTypeEnum string

const (
	AppliedLicenseTypeEnumTypeUnspecified AppliedLicenseTypeEnum = "TYPE_UNSPECIFIED"
	AppliedLicenseTypeEnumNone            AppliedLicenseTypeEnum = "NONE"
	AppliedLicenseTypeEnumPayg            AppliedLicenseTypeEnum = "PAYG"
	AppliedLicenseTypeEnumByol            AppliedLicenseTypeEnum = "BYOL"
)

func (e *AppliedLicenseTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "NONE":
		fallthrough
	case "PAYG":
		fallthrough
	case "BYOL":
		*e = AppliedLicenseTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppliedLicenseTypeEnum: %s", s)
	}
}

// AppliedLicense - AppliedLicense holds the license data returned by adaptation module report.
type AppliedLicense struct {
	// The OS license returned from the adaptation module's report.
	OsLicense *string `json:"osLicense,omitempty"`
	// The license type that was used in OS adaptation.
	Type *AppliedLicenseTypeEnum `json:"type,omitempty"`
}
