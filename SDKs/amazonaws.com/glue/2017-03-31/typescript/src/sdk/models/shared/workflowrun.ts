/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StartingEventBatchCondition } from "./startingeventbatchcondition";
import { WorkflowGraph } from "./workflowgraph";
import { WorkflowRunStatistics } from "./workflowrunstatistics";
import { WorkflowRunStatusEnum } from "./workflowrunstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A workflow run is an execution of a workflow providing all the runtime information.
 */
export class WorkflowRun extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CompletedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Graph" })
  @Type(() => WorkflowGraph)
  graph?: WorkflowGraph;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PreviousRunId" })
  previousRunId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StartingEventBatchCondition" })
  @Type(() => StartingEventBatchCondition)
  startingEventBatchCondition?: StartingEventBatchCondition;

  @SpeakeasyMetadata()
  @Expose({ name: "Statistics" })
  @Type(() => WorkflowRunStatistics)
  statistics?: WorkflowRunStatistics;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: WorkflowRunStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkflowRunId" })
  workflowRunId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkflowRunProperties" })
  workflowRunProperties?: Record<string, string>;
}
