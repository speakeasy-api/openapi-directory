/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class DomainLookupResponse {
    /**
     * The number of days since the domain was registered. A domain age of under 90 days is generally considered to be potentially risky. A value of 0 indicates no registration date was found for this domain
     */
    @JsonProperty("age")
    public Integer age;

    public DomainLookupResponse withAge(Integer age) {
        this.age = age;
        return this;
    }
    
    /**
     * An array of strings indicating which blocklist categories this domain is listed on. Current categories are: phishing, malware, spam, anonymizer, nefarious
     */
    @JsonProperty("blocklists")
    public String[] blocklists;

    public DomainLookupResponse withBlocklists(String[] blocklists) {
        this.blocklists = blocklists;
        return this;
    }
    
    /**
     * The primary domain of the DNS provider for this domain
     */
    @JsonProperty("dns-provider")
    public String dnsProvider;

    public DomainLookupResponse withDnsProvider(String dnsProvider) {
        this.dnsProvider = dnsProvider;
        return this;
    }
    
    /**
     * The primary domain name excluding any subdomains. This is also referred to as the second-level domain (SLD)
     */
    @JsonProperty("domain")
    public String domain;

    public DomainLookupResponse withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * The fully qualified domain name (FQDN)
     */
    @JsonProperty("fqdn")
    public String fqdn;

    public DomainLookupResponse withFqdn(String fqdn) {
        this.fqdn = fqdn;
        return this;
    }
    
    /**
     * This domain is hosting adult content such as porn, webcams, escorts, etc
     */
    @JsonProperty("is-adult")
    public Boolean isAdult;

    public DomainLookupResponse withIsAdult(Boolean isAdult) {
        this.isAdult = isAdult;
        return this;
    }
    
    /**
     * Is this domain under a government or military TLD
     */
    @JsonProperty("is-gov")
    public Boolean isGov;

    public DomainLookupResponse withIsGov(Boolean isGov) {
        this.isGov = isGov;
        return this;
    }
    
    /**
     * Consider this domain malicious as it is currently listed on at least 1 blocklist
     */
    @JsonProperty("is-malicious")
    public Boolean isMalicious;

    public DomainLookupResponse withIsMalicious(Boolean isMalicious) {
        this.isMalicious = isMalicious;
        return this;
    }
    
    /**
     * Is this domain under an OpenNIC TLD
     */
    @JsonProperty("is-opennic")
    public Boolean isOpennic;

    public DomainLookupResponse withIsOpennic(Boolean isOpennic) {
        this.isOpennic = isOpennic;
        return this;
    }
    
    /**
     * True if this domain is unseen and is currently being processed in the background. This field only matters when the 'live' lookup setting has been explicitly disabled and indicates that not all domain data my be present yet
     */
    @JsonProperty("is-pending")
    public Boolean isPending;

    public DomainLookupResponse withIsPending(Boolean isPending) {
        this.isPending = isPending;
        return this;
    }
    
    /**
     * Is the FQDN a subdomain of the primary domain
     */
    @JsonProperty("is-subdomain")
    public Boolean isSubdomain;

    public DomainLookupResponse withIsSubdomain(Boolean isSubdomain) {
        this.isSubdomain = isSubdomain;
        return this;
    }
    
    /**
     * The primary domain of the email provider for this domain. An empty value indicates the domain has no valid MX records
     */
    @JsonProperty("mail-provider")
    public String mailProvider;

    public DomainLookupResponse withMailProvider(String mailProvider) {
        this.mailProvider = mailProvider;
        return this;
    }
    
    /**
     * The domains estimated global traffic rank with the highest rank being 1. A value of 0 indicates the domain is currently ranked outside of the top 1M of domains
     */
    @JsonProperty("rank")
    public Integer rank;

    public DomainLookupResponse withRank(Integer rank) {
        this.rank = rank;
        return this;
    }
    
    /**
     * The ISO date this domain was registered or first seen on the internet. An empty value indicates we could not reliably determine the date
     */
    @JsonProperty("registered-date")
    public String registeredDate;

    public DomainLookupResponse withRegisteredDate(String registeredDate) {
        this.registeredDate = registeredDate;
        return this;
    }
    
    /**
     * The IANA registrar ID (0 if no registrar ID was found)
     */
    @JsonProperty("registrar-id")
    public Integer registrarId;

    public DomainLookupResponse withRegistrarId(Integer registrarId) {
        this.registrarId = registrarId;
        return this;
    }
    
    /**
     * The name of the domain registrar owning this domain
     */
    @JsonProperty("registrar-name")
    public String registrarName;

    public DomainLookupResponse withRegistrarName(String registrarName) {
        this.registrarName = registrarName;
        return this;
    }
    
    /**
     * An array of objects containing details on which specific blocklist sensors have detected this domain
     */
    @JsonProperty("sensors")
    public BlocklistSensor[] sensors;

    public DomainLookupResponse withSensors(BlocklistSensor[] sensors) {
        this.sensors = sensors;
        return this;
    }
    
    /**
     * The top-level domain (TLD)
     */
    @JsonProperty("tld")
    public String tld;

    public DomainLookupResponse withTld(String tld) {
        this.tld = tld;
        return this;
    }
    
    /**
     * For a country code top-level domain (ccTLD) this will contain the associated ISO 2-letter country code
     */
    @JsonProperty("tld-cc")
    public String tldCc;

    public DomainLookupResponse withTldCc(String tldCc) {
        this.tldCc = tldCc;
        return this;
    }
    
    /**
     * True if a valid domain was found. For a domain to be considered valid it must be registered and have valid DNS NS records
     */
    @JsonProperty("valid")
    public Boolean valid;

    public DomainLookupResponse withValid(Boolean valid) {
        this.valid = valid;
        return this;
    }
    
    public DomainLookupResponse(@JsonProperty("age") Integer age, @JsonProperty("blocklists") String[] blocklists, @JsonProperty("dns-provider") String dnsProvider, @JsonProperty("domain") String domain, @JsonProperty("fqdn") String fqdn, @JsonProperty("is-adult") Boolean isAdult, @JsonProperty("is-gov") Boolean isGov, @JsonProperty("is-malicious") Boolean isMalicious, @JsonProperty("is-opennic") Boolean isOpennic, @JsonProperty("is-pending") Boolean isPending, @JsonProperty("is-subdomain") Boolean isSubdomain, @JsonProperty("mail-provider") String mailProvider, @JsonProperty("rank") Integer rank, @JsonProperty("registered-date") String registeredDate, @JsonProperty("registrar-id") Integer registrarId, @JsonProperty("registrar-name") String registrarName, @JsonProperty("sensors") BlocklistSensor[] sensors, @JsonProperty("tld") String tld, @JsonProperty("tld-cc") String tldCc, @JsonProperty("valid") Boolean valid) {
        this.age = age;
        this.blocklists = blocklists;
        this.dnsProvider = dnsProvider;
        this.domain = domain;
        this.fqdn = fqdn;
        this.isAdult = isAdult;
        this.isGov = isGov;
        this.isMalicious = isMalicious;
        this.isOpennic = isOpennic;
        this.isPending = isPending;
        this.isSubdomain = isSubdomain;
        this.mailProvider = mailProvider;
        this.rank = rank;
        this.registeredDate = registeredDate;
        this.registrarId = registrarId;
        this.registrarName = registrarName;
        this.sensors = sensors;
        this.tld = tld;
        this.tldCc = tldCc;
        this.valid = valid;
  }
}
