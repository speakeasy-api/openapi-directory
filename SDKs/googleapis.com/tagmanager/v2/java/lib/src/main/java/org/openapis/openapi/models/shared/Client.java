/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Client - Successful response
 */
public class Client {
    /**
     * GTM Account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public Client withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The Client ID uniquely identifies the GTM client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;

    public Client withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * GTM Container ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerId")
    public String containerId;

    public Client withContainerId(String containerId) {
        this.containerId = containerId;
        return this;
    }
    
    /**
     * The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;

    public Client withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Client withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public Client withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameter")
    public Parameter[] parameter;

    public Client withParameter(Parameter[] parameter) {
        this.parameter = parameter;
        return this;
    }
    
    /**
     * Parent folder id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentFolderId")
    public String parentFolderId;

    public Client withParentFolderId(String parentFolderId) {
        this.parentFolderId = parentFolderId;
        return this;
    }
    
    /**
     * GTM client's API relative path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public Client withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public Integer priority;

    public Client withPriority(Integer priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * Auto generated link to the tag manager UI
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagManagerUrl")
    public String tagManagerUrl;

    public Client withTagManagerUrl(String tagManagerUrl) {
        this.tagManagerUrl = tagManagerUrl;
        return this;
    }
    
    /**
     * Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public Client withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * GTM Workspace ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceId")
    public String workspaceId;

    public Client withWorkspaceId(String workspaceId) {
        this.workspaceId = workspaceId;
        return this;
    }
    
    public Client(){}
}
