"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetServerTypesResponse = exports.GetServerTypes200ApplicationJSON = exports.GetServerTypes200ApplicationJSONServerTypes = exports.GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum = exports.GetServerTypes200ApplicationJSONServerTypesPrices = exports.GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly = exports.GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly = exports.GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum = exports.GetServerTypesRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetServerTypesRequest = /** @class */ (function (_super) {
    __extends(GetServerTypesRequest, _super);
    function GetServerTypesRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=name" }),
        __metadata("design:type", String)
    ], GetServerTypesRequest.prototype, "name", void 0);
    return GetServerTypesRequest;
}(utils_1.SpeakeasyBase));
exports.GetServerTypesRequest = GetServerTypesRequest;
/**
 * Type of cpu
 */
var GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum;
(function (GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum) {
    GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum["Shared"] = "shared";
    GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum["Dedicated"] = "dedicated";
})(GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum = exports.GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum || (exports.GetServerTypes200ApplicationJSONServerTypesCpuTypeEnum = {}));
/**
 * Hourly costs for a Server type in this Location
 */
var GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly = /** @class */ (function (_super) {
    __extends(GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly, _super);
    function GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gross" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly.prototype, "gross", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "net" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly.prototype, "net", void 0);
    return GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly;
}(utils_1.SpeakeasyBase));
exports.GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly = GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly;
/**
 * Monthly costs for a Server type in this Location
 */
var GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly = /** @class */ (function (_super) {
    __extends(GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly, _super);
    function GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gross" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly.prototype, "gross", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "net" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly.prototype, "net", void 0);
    return GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly;
}(utils_1.SpeakeasyBase));
exports.GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly = GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly;
var GetServerTypes200ApplicationJSONServerTypesPrices = /** @class */ (function (_super) {
    __extends(GetServerTypes200ApplicationJSONServerTypesPrices, _super);
    function GetServerTypes200ApplicationJSONServerTypesPrices() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypesPrices.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "price_hourly" }),
        (0, class_transformer_1.Type)(function () { return GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly; }),
        __metadata("design:type", GetServerTypes200ApplicationJSONServerTypesPricesPriceHourly)
    ], GetServerTypes200ApplicationJSONServerTypesPrices.prototype, "priceHourly", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "price_monthly" }),
        (0, class_transformer_1.Type)(function () { return GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly; }),
        __metadata("design:type", GetServerTypes200ApplicationJSONServerTypesPricesPriceMonthly)
    ], GetServerTypes200ApplicationJSONServerTypesPrices.prototype, "priceMonthly", void 0);
    return GetServerTypes200ApplicationJSONServerTypesPrices;
}(utils_1.SpeakeasyBase));
exports.GetServerTypes200ApplicationJSONServerTypesPrices = GetServerTypes200ApplicationJSONServerTypesPrices;
/**
 * Type of Server boot drive. Local has higher speed. Network has better availability.
 */
var GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum;
(function (GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum) {
    GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum["Local"] = "local";
    GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum["Network"] = "network";
})(GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum = exports.GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum || (exports.GetServerTypes200ApplicationJSONServerTypesStorageTypeEnum = {}));
var GetServerTypes200ApplicationJSONServerTypes = /** @class */ (function (_super) {
    __extends(GetServerTypes200ApplicationJSONServerTypes, _super);
    function GetServerTypes200ApplicationJSONServerTypes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cores" }),
        __metadata("design:type", Number)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "cores", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cpu_type" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "cpuType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deprecated" }),
        __metadata("design:type", Boolean)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "deprecated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disk" }),
        __metadata("design:type", Number)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "disk", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "memory" }),
        __metadata("design:type", Number)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "memory", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetServerTypes200ApplicationJSONServerTypesPrices,
        }),
        (0, class_transformer_1.Expose)({ name: "prices" }),
        (0, class_transformer_1.Type)(function () { return GetServerTypes200ApplicationJSONServerTypesPrices; }),
        __metadata("design:type", Array)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "prices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storage_type" }),
        __metadata("design:type", String)
    ], GetServerTypes200ApplicationJSONServerTypes.prototype, "storageType", void 0);
    return GetServerTypes200ApplicationJSONServerTypes;
}(utils_1.SpeakeasyBase));
exports.GetServerTypes200ApplicationJSONServerTypes = GetServerTypes200ApplicationJSONServerTypes;
/**
 * The `server_types` key in the reply contains an array of Server type objects with this structure
 */
var GetServerTypes200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetServerTypes200ApplicationJSON, _super);
    function GetServerTypes200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: GetServerTypes200ApplicationJSONServerTypes }),
        (0, class_transformer_1.Expose)({ name: "server_types" }),
        (0, class_transformer_1.Type)(function () { return GetServerTypes200ApplicationJSONServerTypes; }),
        __metadata("design:type", Array)
    ], GetServerTypes200ApplicationJSON.prototype, "serverTypes", void 0);
    return GetServerTypes200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetServerTypes200ApplicationJSON = GetServerTypes200ApplicationJSON;
var GetServerTypesResponse = /** @class */ (function (_super) {
    __extends(GetServerTypesResponse, _super);
    function GetServerTypesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetServerTypesResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetServerTypesResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetServerTypesResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetServerTypes200ApplicationJSON)
    ], GetServerTypesResponse.prototype, "getServerTypes200ApplicationJSONObject", void 0);
    return GetServerTypesResponse;
}(utils_1.SpeakeasyBase));
exports.GetServerTypesResponse = GetServerTypesResponse;
