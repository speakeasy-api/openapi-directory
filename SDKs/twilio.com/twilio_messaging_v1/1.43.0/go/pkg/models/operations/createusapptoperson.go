// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateUsAppToPersonServerList = []string{
	"https://messaging.twilio.com",
}

type CreateUsAppToPersonSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type CreateUsAppToPersonCreateUsAppToPersonRequest struct {
	// A2P Brand Registration SID
	BrandRegistrationSid string `form:"name=BrandRegistrationSid"`
	// A short description of what this SMS campaign does. Min length: 40 characters. Max length: 4096 characters.
	Description string `form:"name=Description"`
	// Indicates that this SMS campaign will send messages that contain links.
	HasEmbeddedLinks bool `form:"name=HasEmbeddedLinks"`
	// Indicates that this SMS campaign will send messages that contain phone numbers.
	HasEmbeddedPhone bool `form:"name=HasEmbeddedPhone"`
	// End users should be able to text in a keyword to receive help. Those keywords must be provided as part of the campaign registration request. This field is required if managing help keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.
	HelpKeywords []string `form:"name=HelpKeywords"`
	// When customers receive the help keywords from their end users, Twilio customers are expected to send back an auto-generated response; this may include the brand name and additional support contact information. This field is required if managing help keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.
	HelpMessage *string `form:"name=HelpMessage"`
	// Required for all Campaigns. Details around how a consumer opts-in to their campaign, therefore giving consent to receive their messages. If multiple opt-in methods can be used for the same campaign, they must all be listed. 40 character minimum. 2048 character maximum.
	MessageFlow string `form:"name=MessageFlow"`
	// Message samples, at least 1 and up to 5 sample messages (at least 2 for sole proprietor), >=20 chars, <=1024 chars each.
	MessageSamples []string `form:"name=MessageSamples"`
	// If end users can text in a keyword to start receiving messages from this campaign, those keywords must be provided. This field is required if end users can text in a keyword to start receiving messages from this campaign. Values must be alphanumeric. 255 character maximum.
	OptInKeywords []string `form:"name=OptInKeywords"`
	// If end users can text in a keyword to start receiving messages from this campaign, the auto-reply messages sent to the end users must be provided. The opt-in response should include the Brand name, confirmation of opt-in enrollment to a recurring message campaign, how to get help, and clear description of how to opt-out. This field is required if end users can text in a keyword to start receiving messages from this campaign. 20 character minimum. 320 character maximum.
	OptInMessage *string `form:"name=OptInMessage"`
	// End users should be able to text in a keyword to stop receiving messages from this campaign. Those keywords must be provided. This field is required if managing opt out keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). Values must be alphanumeric. 255 character maximum.
	OptOutKeywords []string `form:"name=OptOutKeywords"`
	// Upon receiving the opt-out keywords from the end users, Twilio customers are expected to send back an auto-generated response, which must provide acknowledgment of the opt-out request and confirmation that no further messages will be sent. It is also recommended that these opt-out messages include the brand name. This field is required if managing opt out keywords yourself (i.e. not using Twilio's Default or Advanced Opt Out features). 20 character minimum. 320 character maximum.
	OptOutMessage *string `form:"name=OptOutMessage"`
	// A2P Campaign Use Case. Examples: [ 2FA, EMERGENCY, MARKETING..]
	UsAppToPersonUsecase string `form:"name=UsAppToPersonUsecase"`
}

type CreateUsAppToPersonRequest struct {
	// The SID of the [Messaging Service](https://www.twilio.com/docs/messaging/services/api) to create the resources from.
	MessagingServiceSid string                                         `pathParam:"style=simple,explode=false,name=MessagingServiceSid"`
	RequestBody         *CreateUsAppToPersonCreateUsAppToPersonRequest `request:"mediaType=application/x-www-form-urlencoded"`
}

type CreateUsAppToPersonResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	MessagingV1ServiceUsAppToPerson *shared.MessagingV1ServiceUsAppToPerson
}
