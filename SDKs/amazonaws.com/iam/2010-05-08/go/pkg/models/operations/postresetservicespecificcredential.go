// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTResetServiceSpecificCredentialActionEnum
type POSTResetServiceSpecificCredentialActionEnum string

const (
	POSTResetServiceSpecificCredentialActionEnumResetServiceSpecificCredential POSTResetServiceSpecificCredentialActionEnum = "ResetServiceSpecificCredential"
)

func (e POSTResetServiceSpecificCredentialActionEnum) ToPointer() *POSTResetServiceSpecificCredentialActionEnum {
	return &e
}

func (e *POSTResetServiceSpecificCredentialActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ResetServiceSpecificCredential":
		*e = POSTResetServiceSpecificCredentialActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTResetServiceSpecificCredentialActionEnum: %v", v)
	}
}

// POSTResetServiceSpecificCredentialVersionEnum
type POSTResetServiceSpecificCredentialVersionEnum string

const (
	POSTResetServiceSpecificCredentialVersionEnumTwoThousandAndTen0508 POSTResetServiceSpecificCredentialVersionEnum = "2010-05-08"
)

func (e POSTResetServiceSpecificCredentialVersionEnum) ToPointer() *POSTResetServiceSpecificCredentialVersionEnum {
	return &e
}

func (e *POSTResetServiceSpecificCredentialVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTResetServiceSpecificCredentialVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTResetServiceSpecificCredentialVersionEnum: %v", v)
	}
}

type POSTResetServiceSpecificCredentialRequest struct {
	Action            POSTResetServiceSpecificCredentialActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                        `request:"mediaType=text/xml"`
	Version           POSTResetServiceSpecificCredentialVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTResetServiceSpecificCredentialResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
