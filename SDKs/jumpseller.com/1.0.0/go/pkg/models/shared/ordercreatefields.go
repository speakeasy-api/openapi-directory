// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OrderCreateFieldsStatusEnum - Status of the Order
type OrderCreateFieldsStatusEnum string

const (
	OrderCreateFieldsStatusEnumAbandoned      OrderCreateFieldsStatusEnum = "Abandoned"
	OrderCreateFieldsStatusEnumCanceled       OrderCreateFieldsStatusEnum = "Canceled"
	OrderCreateFieldsStatusEnumPendingPayment OrderCreateFieldsStatusEnum = "Pending Payment"
	OrderCreateFieldsStatusEnumPaid           OrderCreateFieldsStatusEnum = "Paid"
)

func (e OrderCreateFieldsStatusEnum) ToPointer() *OrderCreateFieldsStatusEnum {
	return &e
}

func (e *OrderCreateFieldsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Abandoned":
		fallthrough
	case "Canceled":
		fallthrough
	case "Pending Payment":
		fallthrough
	case "Paid":
		*e = OrderCreateFieldsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderCreateFieldsStatusEnum: %v", v)
	}
}

type OrderCreateFields struct {
	Customer *CustomerFieldsWithBillingAddressAndShippingAddressFields `json:"customer,omitempty"`
	Products []OrderProductOrderCreate                                 `json:"products,omitempty"`
	// Shipping method id
	ShippingMethodID *int `json:"shipping_method_id,omitempty"`
	// Shipping method name e.g. Royal Mail
	ShippingMethodName *string `json:"shipping_method_name,omitempty"`
	// Shipping method's price (applicable if shipping_method_name is provided instead of a shipping_method_id)
	ShippingPrice *float32 `json:"shipping_price,omitempty"`
	// Status of the Order
	Status *OrderCreateFieldsStatusEnum `json:"status,omitempty"`
}
