/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateLaunchRequestBody {
    /**
     * An optional description for the launch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public UpdateLaunchRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * An array of structures that contains the feature and variations that are to be used for the launch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groups")
    public org.openapis.openapi.models.shared.LaunchGroupConfig[] groups;
    public UpdateLaunchRequestBody withGroups(org.openapis.openapi.models.shared.LaunchGroupConfig[] groups) {
        this.groups = groups;
        return this;
    }
    
    /**
     * An array of structures that define the metrics that will be used to monitor the launch performance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricMonitors")
    public org.openapis.openapi.models.shared.MetricMonitorConfig[] metricMonitors;
    public UpdateLaunchRequestBody withMetricMonitors(org.openapis.openapi.models.shared.MetricMonitorConfig[] metricMonitors) {
        this.metricMonitors = metricMonitors;
        return this;
    }
    
    /**
     * When Evidently assigns a particular user session to a launch, it must use a randomization ID to determine which variation the user session is served. This randomization ID is a combination of the entity ID and &lt;code&gt;randomizationSalt&lt;/code&gt;. If you omit &lt;code&gt;randomizationSalt&lt;/code&gt;, Evidently uses the launch name as the &lt;code&gt;randomizationSalt&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("randomizationSalt")
    public String randomizationSalt;
    public UpdateLaunchRequestBody withRandomizationSalt(String randomizationSalt) {
        this.randomizationSalt = randomizationSalt;
        return this;
    }
    
    /**
     * An array of structures that define the traffic allocation percentages among the feature variations during each step of a launch. This also defines the start time of each step.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduledSplitsConfig")
    public UpdateLaunchRequestBodyScheduledSplitsConfig scheduledSplitsConfig;
    public UpdateLaunchRequestBody withScheduledSplitsConfig(UpdateLaunchRequestBodyScheduledSplitsConfig scheduledSplitsConfig) {
        this.scheduledSplitsConfig = scheduledSplitsConfig;
        return this;
    }
    
}
