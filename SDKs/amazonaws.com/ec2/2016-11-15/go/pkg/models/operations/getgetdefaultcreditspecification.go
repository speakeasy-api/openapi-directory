// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETDefaultCreditSpecificationActionEnum
type GETGETDefaultCreditSpecificationActionEnum string

const (
	GETGETDefaultCreditSpecificationActionEnumGetDefaultCreditSpecification GETGETDefaultCreditSpecificationActionEnum = "GetDefaultCreditSpecification"
)

func (e *GETGETDefaultCreditSpecificationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetDefaultCreditSpecification":
		*e = GETGETDefaultCreditSpecificationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETDefaultCreditSpecificationActionEnum: %s", s)
	}
}

// GETGETDefaultCreditSpecificationInstanceFamilyEnum - The instance family.
type GETGETDefaultCreditSpecificationInstanceFamilyEnum string

const (
	GETGETDefaultCreditSpecificationInstanceFamilyEnumT2  GETGETDefaultCreditSpecificationInstanceFamilyEnum = "t2"
	GETGETDefaultCreditSpecificationInstanceFamilyEnumT3  GETGETDefaultCreditSpecificationInstanceFamilyEnum = "t3"
	GETGETDefaultCreditSpecificationInstanceFamilyEnumT3a GETGETDefaultCreditSpecificationInstanceFamilyEnum = "t3a"
	GETGETDefaultCreditSpecificationInstanceFamilyEnumT4g GETGETDefaultCreditSpecificationInstanceFamilyEnum = "t4g"
)

func (e *GETGETDefaultCreditSpecificationInstanceFamilyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "t2":
		fallthrough
	case "t3":
		fallthrough
	case "t3a":
		fallthrough
	case "t4g":
		*e = GETGETDefaultCreditSpecificationInstanceFamilyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETDefaultCreditSpecificationInstanceFamilyEnum: %s", s)
	}
}

// GETGETDefaultCreditSpecificationVersionEnum
type GETGETDefaultCreditSpecificationVersionEnum string

const (
	GETGETDefaultCreditSpecificationVersionEnumTwoThousandAndSixteen1115 GETGETDefaultCreditSpecificationVersionEnum = "2016-11-15"
)

func (e *GETGETDefaultCreditSpecificationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETGETDefaultCreditSpecificationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETDefaultCreditSpecificationVersionEnum: %s", s)
	}
}

type GETGETDefaultCreditSpecificationRequest struct {
	Action GETGETDefaultCreditSpecificationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The instance family.
	InstanceFamily    GETGETDefaultCreditSpecificationInstanceFamilyEnum `queryParam:"style=form,explode=true,name=InstanceFamily"`
	Version           GETGETDefaultCreditSpecificationVersionEnum        `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETDefaultCreditSpecificationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
