"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class GetCachedImageRequest:
    
    image_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'imageID', 'style': 'simple', 'explode': False }})
    r"""ID of the image to fetch"""  
    listing_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'listingID', 'style': 'simple', 'explode': False }})
    r"""ID of the listing to fetch cached images for"""  
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""The API Authentication Key. Mandatory with all API calls."""  
    

@dataclasses.dataclass
class GetCachedImageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    cache_image_response: Optional[bytes] = dataclasses.field(default=None)
    r"""Cached image of the car"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    