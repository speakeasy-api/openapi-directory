<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PreviewOrderOrderAction
{
    /**
     * Rate plan associated with a subscription.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PreviewOrderRatePlanOverride $addProduct
     */
	#[\JMS\Serializer\Annotation\SerializedName('addProduct')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PreviewOrderRatePlanOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PreviewOrderRatePlanOverride $addProduct = null;
    
    /**
     * Information about an order action of type `CancelSubscription`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CancelSubscription $cancelSubscription
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancelSubscription')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CancelSubscription')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CancelSubscription $cancelSubscription = null;
    
    /**
     * Information about an order action of type `CreateSubscription`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PreviewOrderCreateSubscription $createSubscription
     */
	#[\JMS\Serializer\Annotation\SerializedName('createSubscription')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PreviewOrderCreateSubscription')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PreviewOrderCreateSubscription $createSubscription = null;
    
    /**
     * Container for custom fields of an Order Action object.
     * 
     * 
     * 
     * @var ?array<string, mixed> $customFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('customFields')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFields = null;
    
    /**
     * Information about an order action of type `OwnerTransfer`.
     * 
     * 
     * **Note:** The Owner Transfer feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OwnerTransfer $ownerTransfer
     */
	#[\JMS\Serializer\Annotation\SerializedName('ownerTransfer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OwnerTransfer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OwnerTransfer $ownerTransfer = null;
    
    /**
     * Information about an order action of type `RemoveProduct`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoveProduct $removeProduct
     */
	#[\JMS\Serializer\Annotation\SerializedName('removeProduct')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RemoveProduct')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoveProduct $removeProduct = null;
    
    /**
     * Information about an order action of type `Resume`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateOrderResume $resume
     */
	#[\JMS\Serializer\Annotation\SerializedName('resume')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CreateOrderResume')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateOrderResume $resume = null;
    
    /**
     * Information about an order action of type `Suspend`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateOrderSuspend $suspend
     */
	#[\JMS\Serializer\Annotation\SerializedName('suspend')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CreateOrderSuspend')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateOrderSuspend $suspend = null;
    
    /**
     * Information about an order action of type `TermsAndConditions`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateOrderTermsAndConditions $termsAndConditions
     */
	#[\JMS\Serializer\Annotation\SerializedName('termsAndConditions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CreateOrderTermsAndConditions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateOrderTermsAndConditions $termsAndConditions = null;
    
    /**
     * Container for the contract effective, service activation, and customer acceptance dates of the order action. 
     * 
     * 
     * If the service activation date is set as a required field in Default Subscription Settings, skipping this field in a `CreateSubscription` order action of your JSON request will result in a `Pending` order and a `Pending Activation` subscription.
     * 
     * If the customer acceptance date is set as a required field in Default Subscription Settings, skipping this field in a `CreateSubscription` order action of your JSON request will result in a `Pending` order and a `Pending Acceptance` subscription. If the service activation date field is at the same time required and skipped (or set as null), it will be a `Pending Activation` subscription.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TriggerDate> $triggerDates
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggerDates')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TriggerDate>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $triggerDates = null;
    
    /**
     * Type of order action.
     * 
     * 
     * Unless the type of order action is `RenewSubscription`, you must use the corresponding field to provide information about the order action. For example, if the type of order action is `AddProduct`, you must set the `addProduct` field.
     * 
     * Zuora returns an error if you set a field that corresponds to a different type of order action. For example, if the type of order action is `AddProduct`, Zuora returns an error if you set the `updateProduct` field.
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PreviewOrderOrderActionTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PreviewOrderOrderActionTypeEnum>')]
    public PreviewOrderOrderActionTypeEnum $type;
    
    /**
     * Information about an order action of type `UpdateProduct`.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PreviewOrderRatePlanUpdate $updateProduct
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateProduct')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PreviewOrderRatePlanUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PreviewOrderRatePlanUpdate $updateProduct = null;
    
	public function __construct()
	{
		$this->addProduct = null;
		$this->cancelSubscription = null;
		$this->createSubscription = null;
		$this->customFields = null;
		$this->ownerTransfer = null;
		$this->removeProduct = null;
		$this->resume = null;
		$this->suspend = null;
		$this->termsAndConditions = null;
		$this->triggerDates = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\PreviewOrderOrderActionTypeEnum::CREATE_SUBSCRIPTION;
		$this->updateProduct = null;
	}
}
