// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// CodeGenConfigurationNode -  <code>CodeGenConfigurationNode</code> enumerates all valid Node types. One and only one of its member variables can be populated.
type CodeGenConfigurationNode struct {
	Aggregate             *Aggregate             `json:"Aggregate,omitempty"`
	ApplyMapping          *ApplyMapping          `json:"ApplyMapping,omitempty"`
	AthenaConnectorSource *AthenaConnectorSource `json:"AthenaConnectorSource,omitempty"`
	CatalogDeltaSource    *CatalogDeltaSource    `json:"CatalogDeltaSource,omitempty"`
	CatalogHudiSource     *CatalogHudiSource     `json:"CatalogHudiSource,omitempty"`
	CatalogKafkaSource    *CatalogKafkaSource    `json:"CatalogKafkaSource,omitempty"`
	CatalogKinesisSource  *CatalogKinesisSource  `json:"CatalogKinesisSource,omitempty"`
	CatalogSource         *CatalogSource         `json:"CatalogSource,omitempty"`
	CatalogTarget         *BasicCatalogTarget    `json:"CatalogTarget,omitempty"`
	CustomCode            *CustomCode            `json:"CustomCode,omitempty"`
	// Specifies the direct JDBC source connection.
	DirectJDBCSource                *DirectJDBCSource                `json:"DirectJDBCSource,omitempty"`
	DirectKafkaSource               *DirectKafkaSource               `json:"DirectKafkaSource,omitempty"`
	DirectKinesisSource             *DirectKinesisSource             `json:"DirectKinesisSource,omitempty"`
	DropDuplicates                  *DropDuplicates                  `json:"DropDuplicates,omitempty"`
	DropFields                      *DropFields                      `json:"DropFields,omitempty"`
	DropNullFields                  *DropNullFields                  `json:"DropNullFields,omitempty"`
	DynamicTransform                *DynamicTransform                `json:"DynamicTransform,omitempty"`
	DynamoDBCatalogSource           *DynamoDBCatalogSource           `json:"DynamoDBCatalogSource,omitempty"`
	EvaluateDataQuality             *EvaluateDataQuality             `json:"EvaluateDataQuality,omitempty"`
	FillMissingValues               *FillMissingValues               `json:"FillMissingValues,omitempty"`
	Filter                          *Filter                          `json:"Filter,omitempty"`
	GovernedCatalogSource           *GovernedCatalogSource           `json:"GovernedCatalogSource,omitempty"`
	GovernedCatalogTarget           *GovernedCatalogTarget           `json:"GovernedCatalogTarget,omitempty"`
	JDBCConnectorSource             *JDBCConnectorSource             `json:"JDBCConnectorSource,omitempty"`
	JDBCConnectorTarget             *JDBCConnectorTarget             `json:"JDBCConnectorTarget,omitempty"`
	Join                            *Join                            `json:"Join,omitempty"`
	Merge                           *Merge                           `json:"Merge,omitempty"`
	MicrosoftSQLServerCatalogSource *MicrosoftSQLServerCatalogSource `json:"MicrosoftSQLServerCatalogSource,omitempty"`
	MicrosoftSQLServerCatalogTarget *MicrosoftSQLServerCatalogTarget `json:"MicrosoftSQLServerCatalogTarget,omitempty"`
	MySQLCatalogSource              *MySQLCatalogSource              `json:"MySQLCatalogSource,omitempty"`
	MySQLCatalogTarget              *MySQLCatalogTarget              `json:"MySQLCatalogTarget,omitempty"`
	OracleSQLCatalogSource          *OracleSQLCatalogSource          `json:"OracleSQLCatalogSource,omitempty"`
	OracleSQLCatalogTarget          *OracleSQLCatalogTarget          `json:"OracleSQLCatalogTarget,omitempty"`
	PIIDetection                    *PIIDetection                    `json:"PIIDetection,omitempty"`
	PostgreSQLCatalogSource         *PostgreSQLCatalogSource         `json:"PostgreSQLCatalogSource,omitempty"`
	PostgreSQLCatalogTarget         *PostgreSQLCatalogTarget         `json:"PostgreSQLCatalogTarget,omitempty"`
	RedshiftSource                  *RedshiftSource                  `json:"RedshiftSource,omitempty"`
	RedshiftTarget                  *RedshiftTarget                  `json:"RedshiftTarget,omitempty"`
	RelationalCatalogSource         *RelationalCatalogSource         `json:"RelationalCatalogSource,omitempty"`
	RenameField                     *RenameField                     `json:"RenameField,omitempty"`
	S3CatalogDeltaSource            *S3CatalogDeltaSource            `json:"S3CatalogDeltaSource,omitempty"`
	S3CatalogHudiSource             *S3CatalogHudiSource             `json:"S3CatalogHudiSource,omitempty"`
	S3CatalogSource                 *S3CatalogSource                 `json:"S3CatalogSource,omitempty"`
	S3CatalogTarget                 *S3CatalogTarget                 `json:"S3CatalogTarget,omitempty"`
	S3CsvSource                     *S3CsvSource                     `json:"S3CsvSource,omitempty"`
	S3DeltaCatalogTarget            *S3DeltaCatalogTarget            `json:"S3DeltaCatalogTarget,omitempty"`
	S3DeltaDirectTarget             *S3DeltaDirectTarget             `json:"S3DeltaDirectTarget,omitempty"`
	S3DeltaSource                   *S3DeltaSource                   `json:"S3DeltaSource,omitempty"`
	S3DirectTarget                  *S3DirectTarget                  `json:"S3DirectTarget,omitempty"`
	S3GlueParquetTarget             *S3GlueParquetTarget             `json:"S3GlueParquetTarget,omitempty"`
	S3HudiCatalogTarget             *S3HudiCatalogTarget             `json:"S3HudiCatalogTarget,omitempty"`
	S3HudiDirectTarget              *S3HudiDirectTarget              `json:"S3HudiDirectTarget,omitempty"`
	S3HudiSource                    *S3HudiSource                    `json:"S3HudiSource,omitempty"`
	S3JSONSource                    *S3JSONSource                    `json:"S3JsonSource,omitempty"`
	S3ParquetSource                 *S3ParquetSource                 `json:"S3ParquetSource,omitempty"`
	SelectFields                    *SelectFields                    `json:"SelectFields,omitempty"`
	SelectFromCollection            *SelectFromCollection            `json:"SelectFromCollection,omitempty"`
	SparkConnectorSource            *SparkConnectorSource            `json:"SparkConnectorSource,omitempty"`
	SparkConnectorTarget            *SparkConnectorTarget            `json:"SparkConnectorTarget,omitempty"`
	SparkSQL                        *SparkSQL                        `json:"SparkSQL,omitempty"`
	Spigot                          *Spigot                          `json:"Spigot,omitempty"`
	SplitFields                     *SplitFields                     `json:"SplitFields,omitempty"`
	Union                           *Union                           `json:"Union,omitempty"`
}
