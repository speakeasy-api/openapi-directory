/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Ec2InstanceSortByEnum } from "./ec2instancesortbyenum";
import { MapFilter } from "./mapfilter";
import { SortOrderEnum } from "./sortorderenum";
import { StringFilter } from "./stringfilter";
import { Expose, Type } from "class-transformer";

/**
 * The details that define an aggregation based on Amazon EC2 instances.
 */
export class Ec2InstanceAggregation extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "amis" })
  @Type(() => StringFilter)
  amis?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "instanceIds" })
  @Type(() => StringFilter)
  instanceIds?: StringFilter[];

  @SpeakeasyMetadata({ elemType: MapFilter })
  @Expose({ name: "instanceTags" })
  @Type(() => MapFilter)
  instanceTags?: MapFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "operatingSystems" })
  @Type(() => StringFilter)
  operatingSystems?: StringFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "sortBy" })
  sortBy?: Ec2InstanceSortByEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: SortOrderEnum;
}
