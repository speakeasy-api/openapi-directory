"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import embeddedresource as shared_embeddedresource
from ..shared import meetingurl as shared_meetingurl
from datetime import date
from typing import Any, Optional


@dataclasses.dataclass
class MeetingSetting:
    r"""Success"""
    
    active_meeting_url: Optional[shared_meetingurl.MeetingURL] = dataclasses.field(default=None)  
    allow_booking_on_behalf: Optional[bool] = dataclasses.field(default=None)
    r"""Allow other team members to schedule on you behalf."""  
    allow_booking_overtime: Optional[bool] = dataclasses.field(default=None)
    r"""Allow team members to insert available time outside your working hours."""  
    allow_event_overlap: Optional[bool] = dataclasses.field(default=None)
    r"""Allow team members to double book events on your calendar."""  
    availability_limit: Optional[int] = dataclasses.field(default=None)
    r"""The number of days out the user allows a prospect to schedule a meeting"""  
    availability_limit_enabled: Optional[bool] = dataclasses.field(default=None)
    r"""If Availability Limits have been turned on"""  
    buffer_time_duration: Optional[int] = dataclasses.field(default=None)
    r"""Default buffer duration in minutes set by a user"""  
    calendar_type: Optional[str] = dataclasses.field(default=None)
    r"""Calendar type"""  
    created_at: Optional[date] = dataclasses.field(default=None)
    r"""Datetime of when the MeetingSetting was created"""  
    default_meeting_length: Optional[int] = dataclasses.field(default=None)
    r"""Default meeting length in minutes set by the user"""  
    description: Optional[str] = dataclasses.field(default=None)
    r"""Default description of the meeting"""  
    email_address: Optional[str] = dataclasses.field(default=None)
    r"""Calendar owner's email address"""  
    enable_calendar_sync: Optional[bool] = dataclasses.field(default=None)
    r"""Determines if a user enabled Calendar Sync feature"""  
    enable_dynamic_location: Optional[bool] = dataclasses.field(default=None)
    r"""Determines if location will be filled via third-party service (Zoom, GoToMeeting, etc.)"""  
    id: Optional[int] = dataclasses.field(default=None)
    r"""ID of the MeetingSetting"""  
    location: Optional[str] = dataclasses.field(default=None)
    r"""Default location of the meeting"""  
    primary_calendar_connection_failed: Optional[bool] = dataclasses.field(default=None)
    r"""Gets true when any issue with fetching calendar occurs"""  
    primary_calendar_id: Optional[str] = dataclasses.field(default=None)
    r"""ID of the primary calendar"""  
    primary_calendar_name: Optional[str] = dataclasses.field(default=None)
    r"""Display name of the primary calendar"""  
    schedule_buffer_enabled: Optional[bool] = dataclasses.field(default=None)
    r"""Determines if meetings are scheduled with a 15 minute buffer between them"""  
    schedule_delay: Optional[int] = dataclasses.field(default=None)
    r"""The number of hours in advance a user requires someone to a book a meeting with them"""  
    share_event_detail: Optional[bool] = dataclasses.field(default=None)
    r"""Allow team members to see the details of events on your calendar."""  
    time_zone: Optional[str] = dataclasses.field(default=None)
    r"""Time zone for current calendar"""  
    times_available: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Times available set by a user that can be used to book meetings"""  
    title: Optional[str] = dataclasses.field(default=None)
    r"""Default title of the meeting"""  
    updated_at: Optional[date] = dataclasses.field(default=None)
    r"""Datetime of when the MeetingSetting was last updated"""  
    user: Optional[shared_embeddedresource.EmbeddedResource] = dataclasses.field(default=None)  
    user_details: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""User details"""  
    user_slug: Optional[str] = dataclasses.field(default=None)
    r"""User slug generated with a full name of the user"""  
    