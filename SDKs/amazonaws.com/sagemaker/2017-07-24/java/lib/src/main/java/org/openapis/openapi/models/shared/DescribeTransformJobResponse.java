/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DescribeTransformJobResponse - Success
 */
public class DescribeTransformJobResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutoMLJobArn")
    public String autoMLJobArn;
    public DescribeTransformJobResponse withAutoMLJobArn(String autoMLJobArn) {
        this.autoMLJobArn = autoMLJobArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BatchStrategy")
    public BatchStrategyEnum batchStrategy;
    public DescribeTransformJobResponse withBatchStrategy(BatchStrategyEnum batchStrategy) {
        this.batchStrategy = batchStrategy;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public DescribeTransformJobResponse withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataCaptureConfig")
    public BatchDataCaptureConfig dataCaptureConfig;
    public DescribeTransformJobResponse withDataCaptureConfig(BatchDataCaptureConfig dataCaptureConfig) {
        this.dataCaptureConfig = dataCaptureConfig;
        return this;
    }
    
    /**
     * The data structure used to specify the data to be used for inference in a batch transform job and to associate the data that is relevant to the prediction results in the output. The input filter provided allows you to exclude input data that is not needed for inference in a batch transform job. The output filter provided allows you to include input data relevant to interpreting the predictions in the output from the job. For more information, see &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/dg/batch-transform-data-processing.html"&gt;Associate Prediction Results with their Corresponding Input Records&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataProcessing")
    public DataProcessing dataProcessing;
    public DescribeTransformJobResponse withDataProcessing(DataProcessing dataProcessing) {
        this.dataProcessing = dataProcessing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Environment")
    public java.util.Map<String, String> environment;
    public DescribeTransformJobResponse withEnvironment(java.util.Map<String, String> environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * &lt;p&gt;Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateProcessingJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateTrainingJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateTransformJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExperimentConfig")
    public ExperimentConfig experimentConfig;
    public DescribeTransformJobResponse withExperimentConfig(ExperimentConfig experimentConfig) {
        this.experimentConfig = experimentConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureReason")
    public String failureReason;
    public DescribeTransformJobResponse withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LabelingJobArn")
    public String labelingJobArn;
    public DescribeTransformJobResponse withLabelingJobArn(String labelingJobArn) {
        this.labelingJobArn = labelingJobArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxConcurrentTransforms")
    public Long maxConcurrentTransforms;
    public DescribeTransformJobResponse withMaxConcurrentTransforms(Long maxConcurrentTransforms) {
        this.maxConcurrentTransforms = maxConcurrentTransforms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxPayloadInMB")
    public Long maxPayloadInMB;
    public DescribeTransformJobResponse withMaxPayloadInMB(Long maxPayloadInMB) {
        this.maxPayloadInMB = maxPayloadInMB;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModelClientConfig")
    public ModelClientConfig modelClientConfig;
    public DescribeTransformJobResponse withModelClientConfig(ModelClientConfig modelClientConfig) {
        this.modelClientConfig = modelClientConfig;
        return this;
    }
    
    @JsonProperty("ModelName")
    public String modelName;
    public DescribeTransformJobResponse withModelName(String modelName) {
        this.modelName = modelName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TransformEndTime")
    public OffsetDateTime transformEndTime;
    public DescribeTransformJobResponse withTransformEndTime(OffsetDateTime transformEndTime) {
        this.transformEndTime = transformEndTime;
        return this;
    }
    
    @JsonProperty("TransformInput")
    public TransformInput transformInput;
    public DescribeTransformJobResponse withTransformInput(TransformInput transformInput) {
        this.transformInput = transformInput;
        return this;
    }
    
    @JsonProperty("TransformJobArn")
    public String transformJobArn;
    public DescribeTransformJobResponse withTransformJobArn(String transformJobArn) {
        this.transformJobArn = transformJobArn;
        return this;
    }
    
    @JsonProperty("TransformJobName")
    public String transformJobName;
    public DescribeTransformJobResponse withTransformJobName(String transformJobName) {
        this.transformJobName = transformJobName;
        return this;
    }
    
    @JsonProperty("TransformJobStatus")
    public TransformJobStatusEnum transformJobStatus;
    public DescribeTransformJobResponse withTransformJobStatus(TransformJobStatusEnum transformJobStatus) {
        this.transformJobStatus = transformJobStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransformOutput")
    public TransformOutput transformOutput;
    public DescribeTransformJobResponse withTransformOutput(TransformOutput transformOutput) {
        this.transformOutput = transformOutput;
        return this;
    }
    
    @JsonProperty("TransformResources")
    public TransformResources transformResources;
    public DescribeTransformJobResponse withTransformResources(TransformResources transformResources) {
        this.transformResources = transformResources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TransformStartTime")
    public OffsetDateTime transformStartTime;
    public DescribeTransformJobResponse withTransformStartTime(OffsetDateTime transformStartTime) {
        this.transformStartTime = transformStartTime;
        return this;
    }
    
}
