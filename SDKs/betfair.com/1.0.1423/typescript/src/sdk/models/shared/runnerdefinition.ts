/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum RunnerDefinitionStatusEnum {
  Active = "ACTIVE",
  Winner = "WINNER",
  Loser = "LOSER",
  Removed = "REMOVED",
  RemovedVacant = "REMOVED_VACANT",
  Hidden = "HIDDEN",
  Placed = "PLACED",
}

export class RunnerDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "adjustmentFactor" })
  adjustmentFactor?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "bsp" })
  bsp?: number;

  /**
   * Handicap - the handicap of the runner (selection) (null if not applicable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hc" })
  hc?: number;

  /**
   * Selection Id - the id of the runner (selection)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "removalDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  removalDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "sortPriority" })
  sortPriority?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: RunnerDefinitionStatusEnum;
}
