"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudbillingbudgetsv1beta1allupdatesrule as shared_googlecloudbillingbudgetsv1beta1allupdatesrule
from ..shared import googlecloudbillingbudgetsv1beta1budgetamount as shared_googlecloudbillingbudgetsv1beta1budgetamount
from ..shared import googlecloudbillingbudgetsv1beta1filter as shared_googlecloudbillingbudgetsv1beta1filter
from ..shared import googlecloudbillingbudgetsv1beta1thresholdrule as shared_googlecloudbillingbudgetsv1beta1thresholdrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudBillingBudgetsV1beta1BudgetInput:
    r"""A budget is a plan that describes what you expect to spend on Cloud projects, plus the rules to execute as spend is tracked against that plan, (for example, send an alert when 90% of the target spend is met). The budget time period is configurable, with options such as month (default), quarter, year, or custom time period."""
    
    all_updates_rule: Optional[shared_googlecloudbillingbudgetsv1beta1allupdatesrule.GoogleCloudBillingBudgetsV1beta1AllUpdatesRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allUpdatesRule'), 'exclude': lambda f: f is None }})
    r"""AllUpdatesRule defines notifications that are sent based on budget spend and thresholds."""  
    amount: Optional[shared_googlecloudbillingbudgetsv1beta1budgetamount.GoogleCloudBillingBudgetsV1beta1BudgetAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The budgeted amount for each usage period."""  
    budget_filter: Optional[shared_googlecloudbillingbudgetsv1beta1filter.GoogleCloudBillingBudgetsV1beta1Filter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('budgetFilter'), 'exclude': lambda f: f is None }})
    r"""A filter for a budget, limiting the scope of the cost to calculate."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""User data for display name in UI. Validation: <= 60 chars."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Optional. Etag to validate that the object is unchanged for a read-modify-write operation. An empty etag will cause an update to overwrite other changes."""  
    threshold_rules: Optional[list[shared_googlecloudbillingbudgetsv1beta1thresholdrule.GoogleCloudBillingBudgetsV1beta1ThresholdRule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thresholdRules'), 'exclude': lambda f: f is None }})
    r"""Optional. Rules that trigger alerts (notifications of thresholds being crossed) when spend exceeds the specified percentages of the budget. Optional for `pubsubTopic` notifications. Required if using email notifications."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudBillingBudgetsV1beta1Budget:
    r"""A budget is a plan that describes what you expect to spend on Cloud projects, plus the rules to execute as spend is tracked against that plan, (for example, send an alert when 90% of the target spend is met). The budget time period is configurable, with options such as month (default), quarter, year, or custom time period."""
    
    all_updates_rule: Optional[shared_googlecloudbillingbudgetsv1beta1allupdatesrule.GoogleCloudBillingBudgetsV1beta1AllUpdatesRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allUpdatesRule'), 'exclude': lambda f: f is None }})
    r"""AllUpdatesRule defines notifications that are sent based on budget spend and thresholds."""  
    amount: Optional[shared_googlecloudbillingbudgetsv1beta1budgetamount.GoogleCloudBillingBudgetsV1beta1BudgetAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The budgeted amount for each usage period."""  
    budget_filter: Optional[shared_googlecloudbillingbudgetsv1beta1filter.GoogleCloudBillingBudgetsV1beta1Filter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('budgetFilter'), 'exclude': lambda f: f is None }})
    r"""A filter for a budget, limiting the scope of the cost to calculate."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""User data for display name in UI. Validation: <= 60 chars."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Optional. Etag to validate that the object is unchanged for a read-modify-write operation. An empty etag will cause an update to overwrite other changes."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Resource name of the budget. The resource name implies the scope of a budget. Values are of the form `billingAccounts/{billingAccountId}/budgets/{budgetId}`."""  
    threshold_rules: Optional[list[shared_googlecloudbillingbudgetsv1beta1thresholdrule.GoogleCloudBillingBudgetsV1beta1ThresholdRule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thresholdRules'), 'exclude': lambda f: f is None }})
    r"""Optional. Rules that trigger alerts (notifications of thresholds being crossed) when spend exceeds the specified percentages of the budget. Optional for `pubsubTopic` notifications. Required if using email notifications."""  
    