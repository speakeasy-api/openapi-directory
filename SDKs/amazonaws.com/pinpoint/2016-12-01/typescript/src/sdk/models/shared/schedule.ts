/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CampaignEventFilter } from "./campaigneventfilter";
import { FrequencyEnum } from "./frequencyenum";
import { QuietTime } from "./quiettime";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the schedule settings for a campaign.
 */
export class Schedule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  endTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventFilter" })
  @Type(() => CampaignEventFilter)
  eventFilter?: CampaignEventFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "Frequency" })
  frequency?: FrequencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "IsLocalTime" })
  isLocalTime?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "QuietTime" })
  @Type(() => QuietTime)
  quietTime?: QuietTime;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  startTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Timezone" })
  timezone?: string;
}
