/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PubsubSnapshotMetadata } from "./pubsubsnapshotmetadata";
import { Expose, Type } from "class-transformer";

/**
 * State of the snapshot.
 */
export enum SnapshotStateEnum {
  UnknownSnapshotState = "UNKNOWN_SNAPSHOT_STATE",
  Pending = "PENDING",
  Running = "RUNNING",
  Ready = "READY",
  Failed = "FAILED",
  Deleted = "DELETED",
}

/**
 * Represents a snapshot of a job.
 */
export class Snapshot extends SpeakeasyBase {
  /**
   * The time this snapshot was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  creationTime?: string;

  /**
   * User specified description of the snapshot. Maybe empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The disk byte size of the snapshot. Only available for snapshots in READY state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "diskSizeBytes" })
  diskSizeBytes?: string;

  /**
   * The unique ID of this snapshot.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The project this snapshot belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projectId" })
  projectId?: string;

  /**
   * Pub/Sub snapshot metadata.
   */
  @SpeakeasyMetadata({ elemType: PubsubSnapshotMetadata })
  @Expose({ name: "pubsubMetadata" })
  @Type(() => PubsubSnapshotMetadata)
  pubsubMetadata?: PubsubSnapshotMetadata[];

  /**
   * Cloud region where this snapshot lives in, e.g., "us-central1".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * The job this snapshot was created from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceJobId" })
  sourceJobId?: string;

  /**
   * State of the snapshot.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: SnapshotStateEnum;

  /**
   * The time after which this snapshot will be automatically deleted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ttl" })
  ttl?: string;
}
