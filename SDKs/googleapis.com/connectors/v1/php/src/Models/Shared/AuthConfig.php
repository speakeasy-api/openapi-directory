<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AuthConfig - AuthConfig defines details of a authentication type.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AuthConfig
{
    /**
     * List containing additional auth configs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConfigVariable> $additionalVariables
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalVariables')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConfigVariable>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalVariables = null;
    
    /**
     * Identifier key for auth config
     * 
     * @var ?string $authKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('authKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authKey = null;
    
    /**
     * The type of authentication configured.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuthConfigAuthTypeEnum $authType
     */
	#[\JMS\Serializer\Annotation\SerializedName('authType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuthConfigAuthTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuthConfigAuthTypeEnum $authType = null;
    
    /**
     * Parameters to support Oauth 2.0 Auth Code Grant Authentication. See https://www.rfc-editor.org/rfc/rfc6749#section-1.3.1 for more details.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Oauth2AuthCodeFlow $oauth2AuthCodeFlow
     */
	#[\JMS\Serializer\Annotation\SerializedName('oauth2AuthCodeFlow')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Oauth2AuthCodeFlow')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Oauth2AuthCodeFlow $oauth2AuthCodeFlow = null;
    
    /**
     * Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Oauth2ClientCredentials $oauth2ClientCredentials
     */
	#[\JMS\Serializer\Annotation\SerializedName('oauth2ClientCredentials')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Oauth2ClientCredentials')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Oauth2ClientCredentials $oauth2ClientCredentials = null;
    
    /**
     * Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Oauth2JwtBearer $oauth2JwtBearer
     */
	#[\JMS\Serializer\Annotation\SerializedName('oauth2JwtBearer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Oauth2JwtBearer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Oauth2JwtBearer $oauth2JwtBearer = null;
    
    /**
     * Parameters to support Ssh public key Authentication.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SshPublicKey $sshPublicKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('sshPublicKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SshPublicKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SshPublicKey $sshPublicKey = null;
    
    /**
     * Parameters to support Username and Password Authentication.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserPassword $userPassword
     */
	#[\JMS\Serializer\Annotation\SerializedName('userPassword')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserPassword')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserPassword $userPassword = null;
    
	public function __construct()
	{
		$this->additionalVariables = null;
		$this->authKey = null;
		$this->authType = null;
		$this->oauth2AuthCodeFlow = null;
		$this->oauth2ClientCredentials = null;
		$this->oauth2JwtBearer = null;
		$this->sshPublicKey = null;
		$this->userPassword = null;
	}
}
