"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudcontactcenterinsightsv1phrasematchruleconfig as shared_googlecloudcontactcenterinsightsv1phrasematchruleconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1PhraseMatchRule:
    r"""The data for a phrase match rule."""
    
    config: Optional[shared_googlecloudcontactcenterinsightsv1phrasematchruleconfig.GoogleCloudContactcenterinsightsV1PhraseMatchRuleConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('config'), 'exclude': lambda f: f is None }})
    r"""Configuration information of a phrase match rule."""  
    negated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('negated'), 'exclude': lambda f: f is None }})
    r"""Specifies whether the phrase must be missing from the transcript segment or present in the transcript segment."""  
    query: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""Required. The phrase to be matched."""  
    