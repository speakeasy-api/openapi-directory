// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetTestXAmzTargetEnum
type GetTestXAmzTargetEnum string

const (
	GetTestXAmzTargetEnumDeviceFarm20150623GetTest GetTestXAmzTargetEnum = "DeviceFarm_20150623.GetTest"
)

func (e GetTestXAmzTargetEnum) ToPointer() *GetTestXAmzTargetEnum {
	return &e
}

func (e *GetTestXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.GetTest":
		*e = GetTestXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTestXAmzTargetEnum: %v", v)
	}
}

type GetTestRequest struct {
	GetTestRequest    shared.GetTestRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetTestXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetTestResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// Success
	GetTestResult *shared.GetTestResult
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceAccountException
	ServiceAccountException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
