// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetChannelSubscriptionsAlt1DirectionEnum - The sort direction of the results.
type GetChannelSubscriptionsAlt1DirectionEnum string

const (
	GetChannelSubscriptionsAlt1DirectionEnumAsc  GetChannelSubscriptionsAlt1DirectionEnum = "asc"
	GetChannelSubscriptionsAlt1DirectionEnumDesc GetChannelSubscriptionsAlt1DirectionEnum = "desc"
)

func (e *GetChannelSubscriptionsAlt1DirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetChannelSubscriptionsAlt1DirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelSubscriptionsAlt1DirectionEnum: %s", s)
	}
}

// GetChannelSubscriptionsAlt1FilterEnum - The attribute by which to filter the results.
type GetChannelSubscriptionsAlt1FilterEnum string

const (
	GetChannelSubscriptionsAlt1FilterEnumModerated GetChannelSubscriptionsAlt1FilterEnum = "moderated"
)

func (e *GetChannelSubscriptionsAlt1FilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "moderated":
		*e = GetChannelSubscriptionsAlt1FilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelSubscriptionsAlt1FilterEnum: %s", s)
	}
}

// GetChannelSubscriptionsAlt1SortEnum - The way to sort the results.
type GetChannelSubscriptionsAlt1SortEnum string

const (
	GetChannelSubscriptionsAlt1SortEnumAlphabetical GetChannelSubscriptionsAlt1SortEnum = "alphabetical"
	GetChannelSubscriptionsAlt1SortEnumDate         GetChannelSubscriptionsAlt1SortEnum = "date"
	GetChannelSubscriptionsAlt1SortEnumFollowers    GetChannelSubscriptionsAlt1SortEnum = "followers"
	GetChannelSubscriptionsAlt1SortEnumVideos       GetChannelSubscriptionsAlt1SortEnum = "videos"
)

func (e *GetChannelSubscriptionsAlt1SortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "followers":
		fallthrough
	case "videos":
		*e = GetChannelSubscriptionsAlt1SortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetChannelSubscriptionsAlt1SortEnum: %s", s)
	}
}

type GetChannelSubscriptionsAlt1QueryParams struct {
	// The sort direction of the results.
	Direction *GetChannelSubscriptionsAlt1DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetChannelSubscriptionsAlt1FilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetChannelSubscriptionsAlt1SortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetChannelSubscriptionsAlt1Request struct {
	QueryParams GetChannelSubscriptionsAlt1QueryParams
}

type GetChannelSubscriptionsAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The channels were returned.
	Channels []shared.Channel
}
