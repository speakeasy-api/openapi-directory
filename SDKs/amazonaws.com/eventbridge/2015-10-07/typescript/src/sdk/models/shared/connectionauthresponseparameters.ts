/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectionApiKeyAuthResponseParameters } from "./connectionapikeyauthresponseparameters";
import { ConnectionBasicAuthResponseParameters } from "./connectionbasicauthresponseparameters";
import { ConnectionHttpParameters } from "./connectionhttpparameters";
import { ConnectionOAuthResponseParameters } from "./connectionoauthresponseparameters";
import { Expose, Type } from "class-transformer";

/**
 * Contains the authorization parameters to use for the connection.
 */
export class ConnectionAuthResponseParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApiKeyAuthParameters" })
  @Type(() => ConnectionApiKeyAuthResponseParameters)
  apiKeyAuthParameters?: ConnectionApiKeyAuthResponseParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "BasicAuthParameters" })
  @Type(() => ConnectionBasicAuthResponseParameters)
  basicAuthParameters?: ConnectionBasicAuthResponseParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "InvocationHttpParameters" })
  @Type(() => ConnectionHttpParameters)
  invocationHttpParameters?: ConnectionHttpParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "OAuthParameters" })
  @Type(() => ConnectionOAuthResponseParameters)
  oAuthParameters?: ConnectionOAuthResponseParameters;
}
