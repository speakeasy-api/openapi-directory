"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cpu as shared_cpu
from ..shared import identificationhints as shared_identificationhints
from ..shared import networkinterface as shared_networkinterface
from ..shared import os as shared_os
from ..shared import recoveryinstancedisk as shared_recoveryinstancedisk
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecoveryInstanceProperties:
    r"""Properties of the Recovery Instance machine."""
    
    cpus: Optional[list[shared_cpu.CPU]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cpus'), 'exclude': lambda f: f is None }})  
    disks: Optional[list[shared_recoveryinstancedisk.RecoveryInstanceDisk]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disks'), 'exclude': lambda f: f is None }})  
    identification_hints: Optional[shared_identificationhints.IdentificationHints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identificationHints'), 'exclude': lambda f: f is None }})  
    last_updated_date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastUpdatedDateTime'), 'exclude': lambda f: f is None }})  
    network_interfaces: Optional[list[shared_networkinterface.NetworkInterface]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkInterfaces'), 'exclude': lambda f: f is None }})  
    os: Optional[shared_os.Os] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('os'), 'exclude': lambda f: f is None }})  
    ram_bytes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ramBytes'), 'exclude': lambda f: f is None }})  
    