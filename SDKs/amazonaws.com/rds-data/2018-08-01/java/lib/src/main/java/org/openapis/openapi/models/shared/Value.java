/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Value - &lt;p&gt;Contains the value of a column.&lt;/p&gt; &lt;pre&gt;&lt;code&gt; &amp;lt;note&amp;gt; &amp;lt;p&amp;gt;This data structure is only used with the deprecated &amp;lt;code&amp;gt;ExecuteSql&amp;lt;/code&amp;gt; operation. Use the &amp;lt;code&amp;gt;BatchExecuteStatement&amp;lt;/code&amp;gt; or &amp;lt;code&amp;gt;ExecuteStatement&amp;lt;/code&amp;gt; operation instead.&amp;lt;/p&amp;gt; &amp;lt;/note&amp;gt; &lt;/code&gt;&lt;/pre&gt;
 */
public class Value {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arrayValues")
    public Value[] arrayValues;

    public Value withArrayValues(Value[] arrayValues) {
        this.arrayValues = arrayValues;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bigIntValue")
    public Long bigIntValue;

    public Value withBigIntValue(Long bigIntValue) {
        this.bigIntValue = bigIntValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bitValue")
    public Boolean bitValue;

    public Value withBitValue(Boolean bitValue) {
        this.bitValue = bitValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blobValue")
    public String blobValue;

    public Value withBlobValue(String blobValue) {
        this.blobValue = blobValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doubleValue")
    public Double doubleValue;

    public Value withDoubleValue(Double doubleValue) {
        this.doubleValue = doubleValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intValue")
    public Long intValue;

    public Value withIntValue(Long intValue) {
        this.intValue = intValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isNull")
    public Boolean isNull;

    public Value withIsNull(Boolean isNull) {
        this.isNull = isNull;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("realValue")
    public Float realValue;

    public Value withRealValue(Float realValue) {
        this.realValue = realValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringValue")
    public String stringValue;

    public Value withStringValue(String stringValue) {
        this.stringValue = stringValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("structValue")
    public StructValue structValue;

    public Value withStructValue(StructValue structValue) {
        this.structValue = structValue;
        return this;
    }
    
    public Value(){}
}
