"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetCallQoSRequest:
    
    call_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'callId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the call."""  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCalleeQosReceivingQos:
    
    avg_loss: Optional[str] = dataclasses.field(default=None)
    r"""The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination."""  
    bitrate: Optional[str] = dataclasses.field(default=None)
    r"""The number of bits per second in kbps that can be transmitted along a digital network."""  
    jitter: Optional[str] = dataclasses.field(default=None)
    r"""The variation in the delay of received packets. The value of this field is expressed in milliseconds."""  
    max_loss: Optional[str] = dataclasses.field(default=None)
    r"""The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination."""  
    mos: Optional[str] = dataclasses.field(default=None)
    r"""Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality."""  
    network_delay: Optional[str] = dataclasses.field(default=None)
    r"""The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another."""  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCalleeQosReceiving:
    
    date_time: Optional[datetime] = dataclasses.field(default=None)
    r"""Date and time at which the QoS was received."""  
    qos: Optional[GetCallQoS200ApplicationXMLCalleeQosReceivingQos] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCalleeQosSendingQos:
    
    avg_loss: Optional[str] = dataclasses.field(default=None)
    r"""The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination."""  
    bitrate: Optional[str] = dataclasses.field(default=None)
    r"""The number of bits per second expressed in kbps that can be transmitted along a digital network."""  
    jitter: Optional[str] = dataclasses.field(default=None)
    r"""The variation in the delay of received packets. The value of this field is expressed in milliseconds."""  
    max_loss: Optional[str] = dataclasses.field(default=None)
    r"""The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination."""  
    mos: Optional[str] = dataclasses.field(default=None)
    r"""Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality."""  
    network_delay: Optional[str] = dataclasses.field(default=None)
    r"""The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another."""  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCalleeQosSending:
    
    date_time: Optional[datetime] = dataclasses.field(default=None)
    r"""Date and time at which the QoS was delivered."""  
    qos: Optional[GetCallQoS200ApplicationXMLCalleeQosSendingQos] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCalleeQos:
    
    receiving: Optional[list[GetCallQoS200ApplicationXMLCalleeQosReceiving]] = dataclasses.field(default=None)
    r"""QoS received by the callee."""  
    sending: Optional[list[GetCallQoS200ApplicationXMLCalleeQosSending]] = dataclasses.field(default=None)
    r"""QoS sent by the callee."""  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCallerQosReceivingQos:
    
    avg_loss: Optional[str] = dataclasses.field(default=None)
    r"""The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination."""  
    bitrate: Optional[str] = dataclasses.field(default=None)
    r"""The number of bits per second in kbps that can be transmitted along a digital network."""  
    jitter: Optional[str] = dataclasses.field(default=None)
    r"""The variation in the delay of received packets. The value of this field is expressed in milliseconds."""  
    max_loss: Optional[str] = dataclasses.field(default=None)
    r"""The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination."""  
    mos: Optional[str] = dataclasses.field(default=None)
    r"""Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality."""  
    network_delay: Optional[str] = dataclasses.field(default=None)
    r"""The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another."""  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCallerQosReceiving:
    
    date_time: Optional[datetime] = dataclasses.field(default=None)
    r"""Date and time at which the QoS was received."""  
    qos: Optional[GetCallQoS200ApplicationXMLCallerQosReceivingQos] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCallerQosSendingQos:
    
    avg_loss: Optional[str] = dataclasses.field(default=None)
    r"""The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination."""  
    bitrate: Optional[str] = dataclasses.field(default=None)
    r"""The number of bits per second in kbps that can be transmitted along a digital network."""  
    jitter: Optional[str] = dataclasses.field(default=None)
    r"""The variation in the delay of received packets. The value of this field is expressed in milliseconds."""  
    max_loss: Optional[str] = dataclasses.field(default=None)
    r"""The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination."""  
    mos: Optional[str] = dataclasses.field(default=None)
    r"""Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality."""  
    network_delay: Optional[str] = dataclasses.field(default=None)
    r"""The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another."""  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCallerQosSending:
    
    date_time: Optional[datetime] = dataclasses.field(default=None)
    r"""Date and time at which the QoS was delivered."""  
    qos: Optional[GetCallQoS200ApplicationXMLCallerQosSendingQos] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXMLCallerQos:
    r"""Quality of Service object that represents the call quality data of the caller."""
    
    receiving: Optional[list[GetCallQoS200ApplicationXMLCallerQosReceiving]] = dataclasses.field(default=None)
    r"""QoS received by the caller."""  
    sending: Optional[list[GetCallQoS200ApplicationXMLCallerQosSending]] = dataclasses.field(default=None)
    r"""QoS sent by the caller."""  
    

@dataclasses.dataclass
class GetCallQoS200ApplicationXML:
    
    call_id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the phone call."""  
    callee_qos: Optional[GetCallQoS200ApplicationXMLCalleeQos] = dataclasses.field(default=None)  
    caller_qos: Optional[GetCallQoS200ApplicationXMLCallerQos] = dataclasses.field(default=None)
    r"""Quality of Service object that represents the call quality data of the caller."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCalleeQosReceivingQos:
    
    avg_loss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avg_loss'), 'exclude': lambda f: f is None }})
    r"""The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination."""  
    bitrate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bitrate'), 'exclude': lambda f: f is None }})
    r"""The number of bits per second in kbps that can be transmitted along a digital network."""  
    jitter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jitter'), 'exclude': lambda f: f is None }})
    r"""The variation in the delay of received packets. The value of this field is expressed in milliseconds."""  
    max_loss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_loss'), 'exclude': lambda f: f is None }})
    r"""The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination."""  
    mos: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mos'), 'exclude': lambda f: f is None }})
    r"""Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality."""  
    network_delay: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network_delay'), 'exclude': lambda f: f is None }})
    r"""The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCalleeQosReceiving:
    
    date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time at which the QoS was received."""  
    qos: Optional[GetCallQoS200ApplicationJSONCalleeQosReceivingQos] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qos'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCalleeQosSendingQos:
    
    avg_loss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avg_loss'), 'exclude': lambda f: f is None }})
    r"""The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination."""  
    bitrate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bitrate'), 'exclude': lambda f: f is None }})
    r"""The number of bits per second expressed in kbps that can be transmitted along a digital network."""  
    jitter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jitter'), 'exclude': lambda f: f is None }})
    r"""The variation in the delay of received packets. The value of this field is expressed in milliseconds."""  
    max_loss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_loss'), 'exclude': lambda f: f is None }})
    r"""The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination."""  
    mos: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mos'), 'exclude': lambda f: f is None }})
    r"""Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality."""  
    network_delay: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network_delay'), 'exclude': lambda f: f is None }})
    r"""The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCalleeQosSending:
    
    date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time at which the QoS was delivered."""  
    qos: Optional[GetCallQoS200ApplicationJSONCalleeQosSendingQos] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qos'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCalleeQos:
    
    receiving: Optional[list[GetCallQoS200ApplicationJSONCalleeQosReceiving]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiving'), 'exclude': lambda f: f is None }})
    r"""QoS received by the callee."""  
    sending: Optional[list[GetCallQoS200ApplicationJSONCalleeQosSending]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sending'), 'exclude': lambda f: f is None }})
    r"""QoS sent by the callee."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCallerQosReceivingQos:
    
    avg_loss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avg_loss'), 'exclude': lambda f: f is None }})
    r"""The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination."""  
    bitrate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bitrate'), 'exclude': lambda f: f is None }})
    r"""The number of bits per second in kbps that can be transmitted along a digital network."""  
    jitter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jitter'), 'exclude': lambda f: f is None }})
    r"""The variation in the delay of received packets. The value of this field is expressed in milliseconds."""  
    max_loss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_loss'), 'exclude': lambda f: f is None }})
    r"""The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination."""  
    mos: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mos'), 'exclude': lambda f: f is None }})
    r"""Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality."""  
    network_delay: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network_delay'), 'exclude': lambda f: f is None }})
    r"""The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCallerQosReceiving:
    
    date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time at which the QoS was received."""  
    qos: Optional[GetCallQoS200ApplicationJSONCallerQosReceivingQos] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qos'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCallerQosSendingQos:
    
    avg_loss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avg_loss'), 'exclude': lambda f: f is None }})
    r"""The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination."""  
    bitrate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bitrate'), 'exclude': lambda f: f is None }})
    r"""The number of bits per second in kbps that can be transmitted along a digital network."""  
    jitter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jitter'), 'exclude': lambda f: f is None }})
    r"""The variation in the delay of received packets. The value of this field is expressed in milliseconds."""  
    max_loss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_loss'), 'exclude': lambda f: f is None }})
    r"""The max amount of packet loss, i.e., the max percentage of packets that fail to arrive at their destination."""  
    mos: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mos'), 'exclude': lambda f: f is None }})
    r"""Mean Opinion Score(MOS) measures voice quality on a scale of 1 to 5. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality."""  
    network_delay: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network_delay'), 'exclude': lambda f: f is None }})
    r"""The amount of time(in milliseconds) it takes for a VoIP packet to travel from one point to another."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCallerQosSending:
    
    date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_time'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time at which the QoS was delivered."""  
    qos: Optional[GetCallQoS200ApplicationJSONCallerQosSendingQos] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qos'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSONCallerQos:
    r"""Quality of Service object that represents the call quality data of the caller."""
    
    receiving: Optional[list[GetCallQoS200ApplicationJSONCallerQosReceiving]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiving'), 'exclude': lambda f: f is None }})
    r"""QoS received by the caller."""  
    sending: Optional[list[GetCallQoS200ApplicationJSONCallerQosSending]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sending'), 'exclude': lambda f: f is None }})
    r"""QoS sent by the caller."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCallQoS200ApplicationJSON:
    
    call_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('call_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the phone call."""  
    callee_qos: Optional[GetCallQoS200ApplicationJSONCalleeQos] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callee_qos'), 'exclude': lambda f: f is None }})  
    caller_qos: Optional[GetCallQoS200ApplicationJSONCallerQos] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caller_qos'), 'exclude': lambda f: f is None }})
    r"""Quality of Service object that represents the call quality data of the caller."""  
    

@dataclasses.dataclass
class GetCallQoSResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_call_qo_s_200_application_json_object: Optional[GetCallQoS200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    