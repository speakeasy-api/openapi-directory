"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import redshiftdatabase as shared_redshiftdatabase
from ..shared import redshiftdatabasecredentials as shared_redshiftdatabasecredentials
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RedshiftDataSpec:
    r"""Describes the data specification of an Amazon Redshift <code>DataSource</code>."""
    
    database_credentials: shared_redshiftdatabasecredentials.RedshiftDatabaseCredentials = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatabaseCredentials') }})  
    database_information: shared_redshiftdatabase.RedshiftDatabase = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatabaseInformation') }})  
    s3_staging_location: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3StagingLocation') }})  
    select_sql_query: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SelectSqlQuery') }})  
    data_rearrangement: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataRearrangement'), 'exclude': lambda f: f is None }})  
    data_schema: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataSchema'), 'exclude': lambda f: f is None }})  
    data_schema_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataSchemaUri'), 'exclude': lambda f: f is None }})  
    