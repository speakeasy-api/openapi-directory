"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errormodel as shared_errormodel
from ..shared import execbody as shared_execbody
from typing import Optional


@dataclasses.dataclass
class ExecuteActionRequest:
    
    action_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'actionId', 'style': 'simple', 'explode': False }})
    r"""Action ID of the action to execute."""  
    service_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serviceId', 'style': 'simple', 'explode': False }})
    r"""Service ID of the service supporting the action."""  
    exec_body: Optional[shared_execbody.ExecBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""Any parameters required by the action are supplied as a JSON object in the request body. The properties of this object depend on the service action being invoked."""  
    

@dataclasses.dataclass
class ExecuteActionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_model: Optional[shared_errormodel.ErrorModel] = dataclasses.field(default=None)
    r"""Error response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    