/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDescribeUserGroupsQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDescribeUserGroupsActionEnum action;
    public GETDescribeUserGroupsQueryParams withAction(GETDescribeUserGroupsActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by MaxRecords. &amp;gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Marker")
    public String marker;
    public GETDescribeUserGroupsQueryParams withMarker(String marker) {
        this.marker = marker;
        return this;
    }
    
    /**
     * The maximum number of records to include in the response. If more records exist than the specified MaxRecords value, a marker is included in the response so that the remaining results can be retrieved. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxRecords")
    public Long maxRecords;
    public GETDescribeUserGroupsQueryParams withMaxRecords(Long maxRecords) {
        this.maxRecords = maxRecords;
        return this;
    }
    
    /**
     * The ID of the user group.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=UserGroupId")
    public String userGroupId;
    public GETDescribeUserGroupsQueryParams withUserGroupId(String userGroupId) {
        this.userGroupId = userGroupId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDescribeUserGroupsVersionEnum version;
    public GETDescribeUserGroupsQueryParams withVersion(GETDescribeUserGroupsVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
