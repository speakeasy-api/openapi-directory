"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import textsegment as shared_textsegment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TextExtractionAnnotation:
    r"""Annotation for identifying spans of text."""
    
    score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score'), 'exclude': lambda f: f is None }})
    r"""Output only. A confidence estimate between 0.0 and 1.0. A higher value means greater confidence in correctness of the annotation."""  
    text_segment: Optional[shared_textsegment.TextSegment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textSegment'), 'exclude': lambda f: f is None }})
    r"""A contiguous part of a text (string), assuming it has an UTF-8 NFC encoding."""  
    