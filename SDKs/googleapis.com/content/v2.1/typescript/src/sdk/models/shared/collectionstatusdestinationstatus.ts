/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Destination status message.
 */
export class CollectionStatusDestinationStatus extends SpeakeasyBase {
  /**
   * Country codes (ISO 3166-1 alpha-2) where the collection is approved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approvedCountries" })
  approvedCountries?: string[];

  /**
   * The name of the destination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  destination?: string;

  /**
   * Country codes (ISO 3166-1 alpha-2) where the collection is disapproved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disapprovedCountries" })
  disapprovedCountries?: string[];

  /**
   * Country codes (ISO 3166-1 alpha-2) where the collection is pending approval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pendingCountries" })
  pendingCountries?: string[];

  /**
   * The status for the specified destination in the collections target country.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
