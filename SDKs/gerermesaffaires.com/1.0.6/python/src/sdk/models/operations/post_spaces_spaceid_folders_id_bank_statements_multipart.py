"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDBankStatementsMultipartSecurity:
    
    gma_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class PostSpacesSpaceIDFoldersIDBankStatementsMultipartFormDataAccountingWorkbookEnum(str, Enum):
    CUSTOMER = 'customer'
    PROVIDER = 'provider'
    BANK = 'bank'
    CASH_WOUCHER = 'cashWoucher'
    FISCAL = 'fiscal'
    INSURANCE = 'insurance'
    SOCIAL = 'social'
    OTHER = 'other'
    PERMANENT = 'permanent'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDBankStatementsMultipartFormDataAccounting:
    
    accounted_on: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountedOn'), 'exclude': lambda f: f is None }})  
    workbook: Optional[PostSpacesSpaceIDFoldersIDBankStatementsMultipartFormDataAccountingWorkbookEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Workbook'), 'exclude': lambda f: f is None }})  
    year_month: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('YearMonth'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDBankStatementsMultipartFormDataFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'File' }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDBankStatementsMultipartFormData1:
    r"""Bank statement to add (either DocumentId,StatementDate either (File,Name,Content64Encoded,Title,StatementDate) is mandatory)"""
    
    file: PostSpacesSpaceIDFoldersIDBankStatementsMultipartFormDataFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})  
    statement_date: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'StatementDate' }})  
    title: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'Title' }})  
    accounting: Optional[PostSpacesSpaceIDFoldersIDBankStatementsMultipartFormDataAccounting] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Accounting', 'json': True }})  
    author: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Author' }})  
    balance: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Balance' }})  
    code: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Code' }})  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Comment' }})  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Date' }})  
    number: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Number' }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDBankStatementsMultipartRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder bank"""  
    request_body: PostSpacesSpaceIDFoldersIDBankStatementsMultipartFormData1 = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})
    r"""Bank statement to add (either DocumentId,StatementDate either (File,Name,Content64Encoded,Title,StatementDate) is mandatory)"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDBankStatementsMultipart201ApplicationJSON:
    r"""Id of document created"""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDBankStatementsMultipartResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    post_spaces_space_id_folders_id_bank_statements_multipart_201_application_json_object: Optional[PostSpacesSpaceIDFoldersIDBankStatementsMultipart201ApplicationJSON] = dataclasses.field(default=None)
    r"""Id of document created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    