import { SpeakeasyBase } from "../../../internal/utils";
import { AllowedClient, AllowedClientInput } from "./allowedclient";
/**
 * Output only. The state of the NFS share.
 */
export declare enum NfsShareStateEnum {
    StateUnspecified = "STATE_UNSPECIFIED",
    Provisioned = "PROVISIONED",
    Creating = "CREATING",
    Updating = "UPDATING",
    Deleting = "DELETING"
}
/**
 * Immutable. The storage type of the underlying volume.
 */
export declare enum NfsShareStorageTypeEnum {
    StorageTypeUnspecified = "STORAGE_TYPE_UNSPECIFIED",
    Ssd = "SSD",
    Hdd = "HDD"
}
/**
 * An NFS share.
 */
export declare class NfsShare extends SpeakeasyBase {
    /**
     * List of allowed access points.
     */
    allowedClients?: AllowedClient[];
    /**
     * Output only. An identifier for the NFS share, generated by the backend. This is the same value as nfs_share_id and will replace it in the future.
     */
    id?: string;
    /**
     * Labels as key value pairs.
     */
    labels?: Record<string, string>;
    /**
     * Immutable. The name of the NFS share.
     */
    name?: string;
    /**
     * Output only. An identifier for the NFS share, generated by the backend. This field will be deprecated in the future, use `id` instead.
     */
    nfsShareId?: string;
    /**
     * The requested size, in GiB.
     */
    requestedSizeGib?: string;
    /**
     * Output only. The state of the NFS share.
     */
    state?: NfsShareStateEnum;
    /**
     * Immutable. The storage type of the underlying volume.
     */
    storageType?: NfsShareStorageTypeEnum;
    /**
     * Output only. The underlying volume of the share. Created automatically during provisioning.
     */
    volume?: string;
}
/**
 * An NFS share.
 */
export declare class NfsShareInput extends SpeakeasyBase {
    /**
     * List of allowed access points.
     */
    allowedClients?: AllowedClientInput[];
    /**
     * Labels as key value pairs.
     */
    labels?: Record<string, string>;
    /**
     * Immutable. The name of the NFS share.
     */
    name?: string;
    /**
     * The requested size, in GiB.
     */
    requestedSizeGib?: string;
    /**
     * Immutable. The storage type of the underlying volume.
     */
    storageType?: NfsShareStorageTypeEnum;
}
