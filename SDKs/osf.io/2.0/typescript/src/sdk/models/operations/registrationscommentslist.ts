/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class RegistrationsCommentsListRequest extends SpeakeasyBase {
  /**
   * The unique identifier of the registration.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=registration_id",
  })
  registrationId: string;
}

/**
 * The properties of the comment entity.
 */
export class RegistrationsCommentsListCommentAttributes extends SpeakeasyBase {
  /**
   * Whether or not the current user has permission to edit this comment
   */
  @SpeakeasyMetadata()
  canEdit?: boolean;

  /**
   * The content of the comment.
   */
  @SpeakeasyMetadata()
  content?: string;

  /**
   * The time at which the comment was created, as an iso8601 formatted timestamp.
   */
  @SpeakeasyMetadata()
  dateCreated?: Date;

  /**
   * The time at which the comment was last modified, as an iso8601 formatted timestamp.
   */
  @SpeakeasyMetadata()
  dateModified?: Date;

  /**
   * Whether or not the comment is deleted.
   */
  @SpeakeasyMetadata()
  deleted?: boolean;

  /**
   * Whether or not the comment has replies.
   */
  @SpeakeasyMetadata()
  hasChildren?: boolean;

  /**
   * Whether or not the comment the current user reported this as spam.
   */
  @SpeakeasyMetadata()
  hasReport?: boolean;

  /**
   * Whether or not the comment is flagged or confirmed spam.
   */
  @SpeakeasyMetadata()
  isAbuse?: boolean;

  /**
   * Whether or not an admin checked the legitimacy of this comment.
   */
  @SpeakeasyMetadata()
  isHam?: boolean;

  /**
   * Whether or not the comment has been edited.
   */
  @SpeakeasyMetadata()
  modified?: boolean;

  /**
   * The page type the comment is on, e.g. `node`, `registration`, `wiki`, `files`.
   */
  @SpeakeasyMetadata()
  page?: string;
}

/**
 * URLs to alternative representations of the comment entity.
 */
export class RegistrationsCommentsListCommentLinks extends SpeakeasyBase {
  /**
   * A link to the detail page for the comment.
   */
  @SpeakeasyMetadata()
  self?: string;
}

/**
 * URLs to other entities or entity collections that have a relationship to the comment entity.
 */
export class RegistrationsCommentsListCommentRelationships extends SpeakeasyBase {
  /**
   * A relationship to the node the comment is on.
   */
  @SpeakeasyMetadata()
  node?: string;

  /**
   * A relationship to the replies to the comment.
   */
  @SpeakeasyMetadata()
  replies?: string;

  /**
   * A relationship to the reports connected to the comment.
   */
  @SpeakeasyMetadata()
  reports?: string;

  /**
   * A relationship to the target of the comment.
   */
  @SpeakeasyMetadata()
  target?: string;

  /**
   * A relationship to the user who created the comment.
   */
  @SpeakeasyMetadata()
  user?: string;
}

export class RegistrationsCommentsListComment extends SpeakeasyBase {
  /**
   * The properties of the comment entity.
   */
  @SpeakeasyMetadata()
  attributes?: RegistrationsCommentsListCommentAttributes;

  /**
   * The identifier of the comment entity.
   */
  @SpeakeasyMetadata()
  id: string;

  /**
   * URLs to alternative representations of the comment entity.
   */
  @SpeakeasyMetadata()
  links?: RegistrationsCommentsListCommentLinks;

  /**
   * URLs to other entities or entity collections that have a relationship to the comment entity.
   */
  @SpeakeasyMetadata()
  relationships?: RegistrationsCommentsListCommentRelationships;

  /**
   * The type identifier of the comment entity (`comments`).
   */
  @SpeakeasyMetadata()
  type?: string;
}

export class RegistrationsCommentsListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
