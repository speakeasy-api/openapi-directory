// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScanStatusEnum - Current scan status:
//   - queued - Scan queued to start
//   - started - Scan currently running
//   - under_review - Scan is complete but we need to verify some findings
//   - completed - Scan complete
//   - completed_with_errors - Scan complete with error(s) in non essential modules
//   - failed - Something went seriously wrong during the scan
//   - canceled - Scan was canceled
//   - canceling - Stopping scan
type ScanStatusEnum string

const (
	ScanStatusEnumQueued              ScanStatusEnum = "queued"
	ScanStatusEnumStarted             ScanStatusEnum = "started"
	ScanStatusEnumUnderReview         ScanStatusEnum = "under_review"
	ScanStatusEnumCompleted           ScanStatusEnum = "completed"
	ScanStatusEnumCompletedWithErrors ScanStatusEnum = "completed_with_errors"
	ScanStatusEnumFailed              ScanStatusEnum = "failed"
	ScanStatusEnumCanceled            ScanStatusEnum = "canceled"
	ScanStatusEnumCanceling           ScanStatusEnum = "canceling"
)

func (e *ScanStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "queued":
		fallthrough
	case "started":
		fallthrough
	case "under_review":
		fallthrough
	case "completed":
		fallthrough
	case "completed_with_errors":
		fallthrough
	case "failed":
		fallthrough
	case "canceled":
		fallthrough
	case "canceling":
		*e = ScanStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanStatusEnum: %s", s)
	}
}
