// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetVariantSetsArchiveCollectionPerPageEnum - Results per page {error_msg}
type GetVariantSetsArchiveCollectionPerPageEnum string

const (
	GetVariantSetsArchiveCollectionPerPageEnumTwo    GetVariantSetsArchiveCollectionPerPageEnum = "2"
	GetVariantSetsArchiveCollectionPerPageEnumTen    GetVariantSetsArchiveCollectionPerPageEnum = "10"
	GetVariantSetsArchiveCollectionPerPageEnumTwenty GetVariantSetsArchiveCollectionPerPageEnum = "20"
	GetVariantSetsArchiveCollectionPerPageEnumThirty GetVariantSetsArchiveCollectionPerPageEnum = "30"
	GetVariantSetsArchiveCollectionPerPageEnumForty  GetVariantSetsArchiveCollectionPerPageEnum = "40"
	GetVariantSetsArchiveCollectionPerPageEnumFifty  GetVariantSetsArchiveCollectionPerPageEnum = "50"
)

func (e *GetVariantSetsArchiveCollectionPerPageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2":
		fallthrough
	case "10":
		fallthrough
	case "20":
		fallthrough
	case "30":
		fallthrough
	case "40":
		fallthrough
	case "50":
		*e = GetVariantSetsArchiveCollectionPerPageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVariantSetsArchiveCollectionPerPageEnum: %s", s)
	}
}

type GetVariantSetsArchiveCollectionRequest struct {
	Day   int64 `pathParam:"style=simple,explode=false,name=day"`
	Month int64 `pathParam:"style=simple,explode=false,name=month"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page {error_msg}
	PerPage *GetVariantSetsArchiveCollectionPerPageEnum `queryParam:"style=form,explode=true,name=per_page"`
	Year    int64                                       `pathParam:"style=simple,explode=false,name=year"`
}

type GetVariantSetsArchiveCollectionResponse struct {
	ContentType string
	// Success
	PageOfVariantSets *shared.PageOfVariantSets
	StatusCode        int
	RawResponse       *http.Response
}
