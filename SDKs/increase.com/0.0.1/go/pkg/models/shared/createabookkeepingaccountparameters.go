// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateABookkeepingAccountParametersComplianceCategoryEnum - The account compliance category.
type CreateABookkeepingAccountParametersComplianceCategoryEnum string

const (
	CreateABookkeepingAccountParametersComplianceCategoryEnumCommingledCash  CreateABookkeepingAccountParametersComplianceCategoryEnum = "commingled_cash"
	CreateABookkeepingAccountParametersComplianceCategoryEnumCustomerBalance CreateABookkeepingAccountParametersComplianceCategoryEnum = "customer_balance"
)

func (e CreateABookkeepingAccountParametersComplianceCategoryEnum) ToPointer() *CreateABookkeepingAccountParametersComplianceCategoryEnum {
	return &e
}

func (e *CreateABookkeepingAccountParametersComplianceCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "commingled_cash":
		fallthrough
	case "customer_balance":
		*e = CreateABookkeepingAccountParametersComplianceCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateABookkeepingAccountParametersComplianceCategoryEnum: %v", v)
	}
}

type CreateABookkeepingAccountParameters struct {
	// The entity, if `compliance_category` is `commingled_cash`.
	AccountID *string `json:"account_id,omitempty"`
	// The account compliance category.
	ComplianceCategory *CreateABookkeepingAccountParametersComplianceCategoryEnum `json:"compliance_category,omitempty"`
	// The entity, if `compliance_category` is `customer_balance`.
	EntityID *string `json:"entity_id,omitempty"`
	// The name you choose for the account.
	Name string `json:"name"`
}
