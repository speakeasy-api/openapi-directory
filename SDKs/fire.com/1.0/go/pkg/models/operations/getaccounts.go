// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetAccountsAccountsAccountCurrencyCodeEnum - The three letter code for the currency - either `EUR` or `GBP`.
type GetAccountsAccountsAccountCurrencyCodeEnum string

const (
	GetAccountsAccountsAccountCurrencyCodeEnumEur GetAccountsAccountsAccountCurrencyCodeEnum = "EUR"
	GetAccountsAccountsAccountCurrencyCodeEnumGbp GetAccountsAccountsAccountCurrencyCodeEnum = "GBP"
)

func (e *GetAccountsAccountsAccountCurrencyCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EUR":
		fallthrough
	case "GBP":
		*e = GetAccountsAccountsAccountCurrencyCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountsAccountsAccountCurrencyCodeEnum: %s", s)
	}
}

type GetAccountsAccountsAccountCurrency struct {
	// The three letter code for the currency - either `EUR` or `GBP`.
	Code *GetAccountsAccountsAccountCurrencyCodeEnum `json:"code,omitempty"`
	// The name of the currency
	Description *string `json:"description,omitempty"`
}

// GetAccountsAccountsAccountStatusEnum - Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.
type GetAccountsAccountsAccountStatusEnum string

const (
	GetAccountsAccountsAccountStatusEnumLive     GetAccountsAccountsAccountStatusEnum = "LIVE"
	GetAccountsAccountsAccountStatusEnumMigrated GetAccountsAccountsAccountStatusEnum = "MIGRATED"
)

func (e *GetAccountsAccountsAccountStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LIVE":
		fallthrough
	case "MIGRATED":
		*e = GetAccountsAccountsAccountStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountsAccountsAccountStatusEnum: %s", s)
	}
}

type GetAccountsAccountsAccount struct {
	// the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).
	Balance *int64 `json:"balance,omitempty"`
	// the BIC of the account (provided if currency is EUR).
	Cbic *string `json:"cbic,omitempty"`
	// the Account Number of the account.
	Ccan *string `json:"ccan,omitempty"`
	// the IBAN of the account (provided if currency is EUR).
	Ciban *string `json:"ciban,omitempty"`
	// the Sort Code of the account.
	Cnsc *string `json:"cnsc,omitempty"`
	// Internal Use
	Colour   *string                             `json:"colour,omitempty"`
	Currency *GetAccountsAccountsAccountCurrency `json:"currency,omitempty"`
	// true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).
	DefaultAccount *bool `json:"defaultAccount,omitempty"`
	// Whether or not direct debits can be set up on this account.
	DirectDebitsAllowed *bool `json:"directDebitsAllowed,omitempty"`
	// identifier for the fire.com account (assigned by fire.com)
	Ican *int64 `json:"ican,omitempty"`
	// the name the user gives to the account to help them identify it.
	Name *string `json:"name,omitempty"`
	// Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.
	Status *GetAccountsAccountsAccountStatusEnum `json:"status,omitempty"`
}

// GetAccountsAccounts - An array of account objects.
type GetAccountsAccounts struct {
	Accounts []GetAccountsAccountsAccount `json:"accounts,omitempty"`
}

type GetAccountsResponse struct {
	// An array of account objects.
	Accounts    *GetAccountsAccounts
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
