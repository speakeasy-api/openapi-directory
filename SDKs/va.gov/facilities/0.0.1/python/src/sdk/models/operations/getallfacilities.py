"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import genericerror as shared_genericerror
from ..shared import geofacilitiesresponse as shared_geofacilitiesresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetAllFacilitiesSecurity:
    
    apikey: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'apikey' }})  
    
class GetAllFacilitiesAcceptEnum(str, Enum):
    APPLICATION_GEO_PLUS_JSON = 'application/geo+json'
    APPLICATION_VND_GEO_PLUS_JSON = 'application/vnd.geo+json'
    TEXT_CSV = 'text/csv'


@dataclasses.dataclass
class GetAllFacilitiesRequest:
    
    accept: GetAllFacilitiesAcceptEnum = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GetAllFacilitiesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Requested format unacceptable"""  
    generic_error: Optional[shared_genericerror.GenericError] = dataclasses.field(default=None)
    r"""Missing API token"""  
    geo_facilities_response: Optional[shared_geofacilitiesresponse.GeoFacilitiesResponse] = dataclasses.field(default=None)
    r"""Success"""  
    get_all_facilities_200_text_csv_string: Optional[str] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    