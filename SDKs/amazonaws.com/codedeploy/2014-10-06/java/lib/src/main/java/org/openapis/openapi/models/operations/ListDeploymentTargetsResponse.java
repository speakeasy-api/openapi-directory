/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class ListDeploymentTargetsResponse {
    
    public String contentType;

    public ListDeploymentTargetsResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DeploymentDoesNotExistException
     */
    
    public Object deploymentDoesNotExistException;

    public ListDeploymentTargetsResponse withDeploymentDoesNotExistException(Object deploymentDoesNotExistException) {
        this.deploymentDoesNotExistException = deploymentDoesNotExistException;
        return this;
    }
    
    /**
     * DeploymentIdRequiredException
     */
    
    public Object deploymentIdRequiredException;

    public ListDeploymentTargetsResponse withDeploymentIdRequiredException(Object deploymentIdRequiredException) {
        this.deploymentIdRequiredException = deploymentIdRequiredException;
        return this;
    }
    
    /**
     * DeploymentNotStartedException
     */
    
    public Object deploymentNotStartedException;

    public ListDeploymentTargetsResponse withDeploymentNotStartedException(Object deploymentNotStartedException) {
        this.deploymentNotStartedException = deploymentNotStartedException;
        return this;
    }
    
    /**
     * InvalidDeploymentIdException
     */
    
    public Object invalidDeploymentIdException;

    public ListDeploymentTargetsResponse withInvalidDeploymentIdException(Object invalidDeploymentIdException) {
        this.invalidDeploymentIdException = invalidDeploymentIdException;
        return this;
    }
    
    /**
     * InvalidDeploymentInstanceTypeException
     */
    
    public Object invalidDeploymentInstanceTypeException;

    public ListDeploymentTargetsResponse withInvalidDeploymentInstanceTypeException(Object invalidDeploymentInstanceTypeException) {
        this.invalidDeploymentInstanceTypeException = invalidDeploymentInstanceTypeException;
        return this;
    }
    
    /**
     * InvalidInstanceStatusException
     */
    
    public Object invalidInstanceStatusException;

    public ListDeploymentTargetsResponse withInvalidInstanceStatusException(Object invalidInstanceStatusException) {
        this.invalidInstanceStatusException = invalidInstanceStatusException;
        return this;
    }
    
    /**
     * InvalidInstanceTypeException
     */
    
    public Object invalidInstanceTypeException;

    public ListDeploymentTargetsResponse withInvalidInstanceTypeException(Object invalidInstanceTypeException) {
        this.invalidInstanceTypeException = invalidInstanceTypeException;
        return this;
    }
    
    /**
     * InvalidNextTokenException
     */
    
    public Object invalidNextTokenException;

    public ListDeploymentTargetsResponse withInvalidNextTokenException(Object invalidNextTokenException) {
        this.invalidNextTokenException = invalidNextTokenException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.ListDeploymentTargetsOutput listDeploymentTargetsOutput;

    public ListDeploymentTargetsResponse withListDeploymentTargetsOutput(org.openapis.openapi.models.shared.ListDeploymentTargetsOutput listDeploymentTargetsOutput) {
        this.listDeploymentTargetsOutput = listDeploymentTargetsOutput;
        return this;
    }
    
    
    public Integer statusCode;

    public ListDeploymentTargetsResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public ListDeploymentTargetsResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public ListDeploymentTargetsResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
