"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dnsrecordset as shared_dnsrecordset
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddDNSRecordSetRequest:
    r"""Request to add a record set to a private managed DNS zone in the shared producer host project."""
    
    consumer_network: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consumerNetwork'), 'exclude': lambda f: f is None }})
    r"""Required. The network that the consumer is using to connect with services. Must be in the form of projects/{project}/global/networks/{network} {project} is the project number, as in '12345' {network} is the network name."""  
    dns_record_set: Optional[shared_dnsrecordset.DNSRecordSet] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnsRecordSet'), 'exclude': lambda f: f is None }})
    r"""Represents a DNS record set resource."""  
    zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zone'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the private DNS zone in the shared producer host project to which the record set will be added."""  
    