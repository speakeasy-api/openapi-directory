// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DiagnosticKindEnum - The kind of diagnostic information provided.
type DiagnosticKindEnum string

const (
	DiagnosticKindEnumWarning DiagnosticKindEnum = "WARNING"
	DiagnosticKindEnumError   DiagnosticKindEnum = "ERROR"
)

func (e *DiagnosticKindEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WARNING":
		fallthrough
	case "ERROR":
		*e = DiagnosticKindEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DiagnosticKindEnum: %s", s)
	}
}

// Diagnostic - Represents a diagnostic message (error or warning)
type Diagnostic struct {
	// The kind of diagnostic information provided.
	Kind *DiagnosticKindEnum `json:"kind,omitempty"`
	// File name and line number of the error or warning.
	Location *string `json:"location,omitempty"`
	// Message describing the error or warning.
	Message *string `json:"message,omitempty"`
}
