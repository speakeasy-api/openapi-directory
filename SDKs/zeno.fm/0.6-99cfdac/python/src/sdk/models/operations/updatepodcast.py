"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import podcast as shared_podcast
from typing import Optional


@dataclasses.dataclass
class UpdatePodcastRequestBodyFileLogo:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file_logo: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file_logo' }})  
    

@dataclasses.dataclass
class UpdatePodcastRequestBody:
    
    podcast: shared_podcast.Podcast = dataclasses.field(metadata={'multipart_form': { 'field_name': 'podcast', 'json': True }})
    r"""Podcast model"""  
    file_logo: Optional[UpdatePodcastRequestBodyFileLogo] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})  
    

@dataclasses.dataclass
class UpdatePodcastRequest:
    
    podcast_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'podcastKey', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdatePodcastRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class UpdatePodcastResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    