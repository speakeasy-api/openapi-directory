<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Event - Represents the changes associated with an action taken by a user.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Event
{
    /**
     * Additional event types. Some events may have multiple types when multiple actions are part of a single event. For example, creating a document, renaming it, and sharing it may be part of a single file-creation event.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EventAdditionalEventTypesEnum> $additionalEventTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalEventTypes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\EventAdditionalEventTypesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalEventTypes = null;
    
    /**
     * The time at which the event occurred formatted as Unix time in milliseconds.
     * 
     * @var ?string $eventTimeMillis
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTimeMillis')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventTimeMillis = null;
    
    /**
     * Whether this event is caused by a user being deleted.
     * 
     * @var ?bool $fromUserDeletion
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromUserDeletion')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $fromUserDeletion = null;
    
    /**
     * Contains information about changes in an object's parents as a result of a move type event.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Move $move
     */
	#[\JMS\Serializer\Annotation\SerializedName('move')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Move')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Move $move = null;
    
    /**
     * Extra information for permissionChange type events, such as the user or group the new permission applies to.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PermissionChange> $permissionChanges
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissionChanges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PermissionChange>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $permissionChanges = null;
    
    /**
     * The main type of event that occurred.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventPrimaryEventTypeEnum $primaryEventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryEventType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EventPrimaryEventTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventPrimaryEventTypeEnum $primaryEventType = null;
    
    /**
     * Contains information about a renametype event.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Rename $rename
     */
	#[\JMS\Serializer\Annotation\SerializedName('rename')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Rename')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Rename $rename = null;
    
    /**
     * Information about the object modified by the event.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Target $target
     */
	#[\JMS\Serializer\Annotation\SerializedName('target')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Target')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Target $target = null;
    
    /**
     * A representation of a user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\User $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\User')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?User $user = null;
    
	public function __construct()
	{
		$this->additionalEventTypes = null;
		$this->eventTimeMillis = null;
		$this->fromUserDeletion = null;
		$this->move = null;
		$this->permissionChanges = null;
		$this->primaryEventType = null;
		$this->rename = null;
		$this->target = null;
		$this->user = null;
	}
}
