/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETImportVolumeActionEnum {
  ImportVolume = "ImportVolume",
}

/**
 * The disk image format.
 */
export enum GETImportVolumeImageFormatEnum {
  Vmdk = "VMDK",
  Raw = "RAW",
  Vhd = "VHD",
}

/**
 * Describes a disk image.
 */
export class GETImportVolumeImage extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Bytes" })
  bytes: number;

  @SpeakeasyMetadata({ data: "queryParam, name=Format" })
  format: GETImportVolumeImageFormatEnum;

  @SpeakeasyMetadata({ data: "queryParam, name=ImportManifestUrl" })
  importManifestUrl: string;
}

export enum GETImportVolumeVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

/**
 * Describes an EBS volume.
 */
export class GETImportVolumeVolume extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Size" })
  size: number;
}

export class GETImportVolumeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETImportVolumeActionEnum;

  /**
   * The Availability Zone for the resulting EBS volume.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AvailabilityZone",
  })
  availabilityZone: string;

  /**
   * A description of the volume.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Description",
  })
  description?: string;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The disk image.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Image" })
  image: GETImportVolumeImage;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETImportVolumeVersionEnum;

  /**
   * The volume size.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Volume",
  })
  volume: GETImportVolumeVolume;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETImportVolumeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
