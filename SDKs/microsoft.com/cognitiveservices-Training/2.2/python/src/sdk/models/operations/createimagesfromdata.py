"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import imagecreatesummary as shared_imagecreatesummary
from typing import Optional


@dataclasses.dataclass
class CreateImagesFromDataRequestBodyImageData:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    image_data: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'imageData' }})  
    

@dataclasses.dataclass
class CreateImagesFromDataRequestBody:
    
    image_data: CreateImagesFromDataRequestBodyImageData = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""Binary image data."""  
    

@dataclasses.dataclass
class CreateImagesFromDataRequest:
    
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    request_body: CreateImagesFromDataRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})  
    training_key: str = dataclasses.field(metadata={'header': { 'field_name': 'Training-Key', 'style': 'simple', 'explode': False }})  
    tag_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tagIds', 'style': 'form', 'explode': False }})
    r"""The tags ids with which to tag each image. Limited to 20."""  
    

@dataclasses.dataclass
class CreateImagesFromDataResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    image_create_summary: Optional[shared_imagecreatesummary.ImageCreateSummary] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    