/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The date range the adjustment applies to, inclusive.
 */
export class AdjustmentConditionsRulesBookableDateRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end: string;

  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start: string;
}

/**
 * The number of nights the adjustment applies to, inclusive.
 */
export class AdjustmentConditionsRulesNightsRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "max" })
  max: number;

  @SpeakeasyMetadata()
  @Expose({ name: "min" })
  min: number;
}

export class AdjustmentConditionsRules extends SpeakeasyBase {
  /**
   * The date range the adjustment applies to, inclusive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookableDateRange" })
  @Type(() => AdjustmentConditionsRulesBookableDateRange)
  bookableDateRange: AdjustmentConditionsRulesBookableDateRange;

  /**
   * The number of nights the adjustment applies to, inclusive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nightsRange" })
  @Type(() => AdjustmentConditionsRulesNightsRange)
  nightsRange: AdjustmentConditionsRulesNightsRange;
}

/**
 * The type of the condition. Currently we only support conditions based on length of stay.
 */
export enum AdjustmentConditionsTypeEnum {
  LengthOfStay = "LENGTH_OF_STAY",
}

export class AdjustmentConditions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "rules" })
  @Type(() => AdjustmentConditionsRules)
  rules: AdjustmentConditionsRules;

  /**
   * The type of the condition. Currently we only support conditions based on length of stay.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AdjustmentConditionsTypeEnum;
}
