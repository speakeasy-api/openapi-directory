/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Review - Output only. Represents a review for a location.
 */
public class Review {
    /**
     * The body of the review as plain text with markups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;

    public Review withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The timestamp for when the review was written.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Review withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The resource name. For Review it is of the form `accounts/{account_id}/locations/{location_id}/reviews/{review_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Review withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The encrypted unique identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewId")
    public String reviewId;

    public Review withReviewId(String reviewId) {
        this.reviewId = reviewId;
        return this;
    }
    
    /**
     * Represents the location owner/manager's reply to a review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewReply")
    public ReviewReply reviewReply;

    public Review withReviewReply(ReviewReply reviewReply) {
        this.reviewReply = reviewReply;
        return this;
    }
    
    /**
     * Represents the author of the review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewer")
    public Reviewer reviewer;

    public Review withReviewer(Reviewer reviewer) {
        this.reviewer = reviewer;
        return this;
    }
    
    /**
     * The star rating of the review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("starRating")
    public ReviewStarRatingEnum starRating;

    public Review withStarRating(ReviewStarRatingEnum starRating) {
        this.starRating = starRating;
        return this;
    }
    
    /**
     * The timestamp for when the review was last modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Review withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Review(){}
}
