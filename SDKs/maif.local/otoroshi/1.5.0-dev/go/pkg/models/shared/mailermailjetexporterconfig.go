// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MailerMailjetExporterConfigTypeEnum - Type of mailer
type MailerMailjetExporterConfigTypeEnum string

const (
	MailerMailjetExporterConfigTypeEnumMailjet MailerMailjetExporterConfigTypeEnum = "mailjet"
)

func (e MailerMailjetExporterConfigTypeEnum) ToPointer() *MailerMailjetExporterConfigTypeEnum {
	return &e
}

func (e *MailerMailjetExporterConfigTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mailjet":
		*e = MailerMailjetExporterConfigTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MailerMailjetExporterConfigTypeEnum: %v", v)
	}
}

// MailerMailjetExporterConfig - Data Exporter config
type MailerMailjetExporterConfig struct {
	// Mailjet private apiKey
	APIKeyPrivate *string `json:"apiKeyPrivate,omitempty"`
	// Mailjet public apiKey
	APIKeyPublic *string `json:"apiKeyPublic,omitempty"`
	// Email adresses of recipents
	To []string `json:"to,omitempty"`
	// Type of mailer
	Type MailerMailjetExporterConfigTypeEnum `json:"type"`
}
