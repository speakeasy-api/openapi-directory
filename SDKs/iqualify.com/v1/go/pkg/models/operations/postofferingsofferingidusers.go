// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostOfferingsOfferingIDUsersPathParams struct {
	// offering's id
	OfferingID string `pathParam:"style=simple,explode=false,name=offeringId"`
}

type PostOfferingsOfferingIDUsersRequest struct {
	PathParams PostOfferingsOfferingIDUsersPathParams
	Request    []shared.OfferingUser `request:"mediaType=application/json"`
}

type PostOfferingsOfferingIDUsers207ApplicationJSONType string

const (
	PostOfferingsOfferingIDUsers207ApplicationJSONTypeOfferingUserAddResponse PostOfferingsOfferingIDUsers207ApplicationJSONType = "OfferingUserAddResponse"
	PostOfferingsOfferingIDUsers207ApplicationJSONTypeError                   PostOfferingsOfferingIDUsers207ApplicationJSONType = "Error"
)

type PostOfferingsOfferingIDUsers207ApplicationJSON struct {
	OfferingUserAddResponse *shared.OfferingUserAddResponse
	Error                   *shared.Error

	Type PostOfferingsOfferingIDUsers207ApplicationJSONType
}

func CreatePostOfferingsOfferingIDUsers207ApplicationJSONOfferingUserAddResponse(offeringUserAddResponse shared.OfferingUserAddResponse) PostOfferingsOfferingIDUsers207ApplicationJSON {
	typ := PostOfferingsOfferingIDUsers207ApplicationJSONTypeOfferingUserAddResponse

	return PostOfferingsOfferingIDUsers207ApplicationJSON{
		OfferingUserAddResponse: &offeringUserAddResponse,
		Type:                    typ,
	}
}

func CreatePostOfferingsOfferingIDUsers207ApplicationJSONError(error shared.Error) PostOfferingsOfferingIDUsers207ApplicationJSON {
	typ := PostOfferingsOfferingIDUsers207ApplicationJSONTypeError

	return PostOfferingsOfferingIDUsers207ApplicationJSON{
		Error: &error,
		Type:  typ,
	}
}

func (u *PostOfferingsOfferingIDUsers207ApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	offeringUserAddResponse := new(shared.OfferingUserAddResponse)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&offeringUserAddResponse); err == nil {
		u.OfferingUserAddResponse = offeringUserAddResponse
		u.Type = PostOfferingsOfferingIDUsers207ApplicationJSONTypeOfferingUserAddResponse
		return nil
	}

	error := new(shared.Error)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&error); err == nil {
		u.Error = error
		u.Type = PostOfferingsOfferingIDUsers207ApplicationJSONTypeError
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PostOfferingsOfferingIDUsers207ApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.OfferingUserAddResponse != nil {
		return json.Marshal(u.OfferingUserAddResponse)
	}

	if u.Error != nil {
		return json.Marshal(u.Error)
	}

	return nil, nil
}

type PostOfferingsOfferingIDUsersResponse struct {
	ContentType string
	// Bad Request
	Error *shared.Error
	// user successfully added to the offering
	OfferingUserAddResponses []shared.OfferingUserAddResponse
	StatusCode               int
	RawResponse              *http.Response
	// Partially successful response
	PostOfferingsOfferingIDUsers207ApplicationJSONOneoves []PostOfferingsOfferingIDUsers207ApplicationJSON
}
