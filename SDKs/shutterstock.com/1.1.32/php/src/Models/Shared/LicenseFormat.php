<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LicenseFormat - Description of a license
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LicenseFormat
{
    /**
     * Description of the license
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Format or extension of the media, such as mpeg for videos or jpeg for images
     * 
     * @var ?string $format
     */
	#[\JMS\Serializer\Annotation\SerializedName('format')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $format = null;
    
    /**
     * Media type of the license
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LicenseFormatMediaTypeEnum $mediaType
     */
	#[\JMS\Serializer\Annotation\SerializedName('media_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LicenseFormatMediaTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LicenseFormatMediaTypeEnum $mediaType = null;
    
    /**
     * Width of the media, in pixels, allowed by this license
     * 
     * @var ?int $minResolution
     */
	#[\JMS\Serializer\Annotation\SerializedName('min_resolution')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minResolution = null;
    
    /**
     * Keyword that details the size of the media, such as hd or sd for video, huge or vector for images
     * 
     * @var ?string $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $size = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->format = null;
		$this->mediaType = null;
		$this->minResolution = null;
		$this->size = null;
	}
}
