"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AdditionalInfo:
    r"""Additional information about the item."""
    
    brand_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brandId') }})
    r"""Item's brand ID."""  
    brand_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brandName') }})
    r"""Item's brand name."""  
    categories_ids: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categoriesIds') }})
    r"""Item's category ID."""  
    commercial_condition_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commercialConditionId') }})
    r"""Commercial conditions ID."""  
    dimension: shared_dimension.Dimension = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimension') }})  
    offering_info: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offeringInfo') }})
    r"""Information about services related to the item. For example: guarantee or installation."""  
    offering_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offeringType') }})
    r"""Offering type."""  
    offering_type_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offeringTypeId') }})
    r"""Offering type ID."""  
    product_cluster_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productClusterId') }})
    r"""All product clusters related to the item."""  
    