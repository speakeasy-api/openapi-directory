// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FieldTransformSetToServerValueEnum - Sets the field to the given server value.
type FieldTransformSetToServerValueEnum string

const (
	FieldTransformSetToServerValueEnumServerValueUnspecified FieldTransformSetToServerValueEnum = "SERVER_VALUE_UNSPECIFIED"
	FieldTransformSetToServerValueEnumRequestTime            FieldTransformSetToServerValueEnum = "REQUEST_TIME"
)

func (e FieldTransformSetToServerValueEnum) ToPointer() *FieldTransformSetToServerValueEnum {
	return &e
}

func (e *FieldTransformSetToServerValueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SERVER_VALUE_UNSPECIFIED":
		fallthrough
	case "REQUEST_TIME":
		*e = FieldTransformSetToServerValueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FieldTransformSetToServerValueEnum: %v", v)
	}
}

// FieldTransform - A transformation of a field of the document.
type FieldTransform struct {
	// An array value.
	AppendMissingElements *ArrayValue `json:"appendMissingElements,omitempty"`
	// The path of the field. See Document.fields for the field path syntax reference.
	FieldPath *string `json:"fieldPath,omitempty"`
	// A message that can hold any of the supported value types.
	Increment *Value `json:"increment,omitempty"`
	// A message that can hold any of the supported value types.
	Maximum *Value `json:"maximum,omitempty"`
	// A message that can hold any of the supported value types.
	Minimum *Value `json:"minimum,omitempty"`
	// An array value.
	RemoveAllFromArray *ArrayValue `json:"removeAllFromArray,omitempty"`
	// Sets the field to the given server value.
	SetToServerValue *FieldTransformSetToServerValueEnum `json:"setToServerValue,omitempty"`
}
