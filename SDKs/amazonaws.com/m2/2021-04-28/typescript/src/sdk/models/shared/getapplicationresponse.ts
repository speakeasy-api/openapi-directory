/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApplicationLifecycleEnum } from "./applicationlifecycleenum";
import { ApplicationVersionSummary } from "./applicationversionsummary";
import { DeployedVersionSummary } from "./deployedversionsummary";
import { EngineTypeEnum } from "./enginetypeenum";
import { LogGroupSummary } from "./loggroupsummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetApplicationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "applicationArn" })
  applicationArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "applicationId" })
  applicationId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deployedVersion" })
  @Type(() => DeployedVersionSummary)
  deployedVersion?: DeployedVersionSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "engineType" })
  engineType: EngineTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentId" })
  environmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "kmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "latestVersion" })
  @Type(() => ApplicationVersionSummary)
  latestVersion: ApplicationVersionSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "listenerArns" })
  listenerArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "listenerPorts" })
  listenerPorts?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "loadBalancerDnsName" })
  loadBalancerDnsName?: string;

  @SpeakeasyMetadata({ elemType: LogGroupSummary })
  @Expose({ name: "logGroups" })
  @Type(() => LogGroupSummary)
  logGroups?: LogGroupSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ApplicationLifecycleEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  statusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "targetGroupArns" })
  targetGroupArns?: string[];
}
