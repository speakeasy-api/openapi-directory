"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class CancelTasksRequest:
    
    after_enqueued_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'afterEnqueuedAt', 'style': 'form', 'explode': True }})  
    after_finished_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'afterFinishedAt', 'style': 'form', 'explode': True }})  
    after_started_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'afterStartedAt', 'style': 'form', 'explode': True }})  
    before_enqueued_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'beforeEnqueuedAt', 'style': 'form', 'explode': True }})  
    before_finished_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'beforeFinishedAt', 'style': 'form', 'explode': True }})  
    before_started_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'beforeStartedAt', 'style': 'form', 'explode': True }})  
    canceled_by: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'canceledBy', 'style': 'form', 'explode': True }})  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})  
    index_uids: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'indexUids', 'style': 'form', 'explode': True }})  
    limit: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})  
    statuses: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'statuses', 'style': 'form', 'explode': True }})  
    types: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'types', 'style': 'form', 'explode': True }})  
    uids: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uids', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class CancelTasksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    