/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstructedAmountRequest } from "./instructedamountrequest";
import { PeriodicPaymentRequest } from "./periodicpaymentrequest";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Debtor account type
 */
export enum PaymentWriteRequestDebtorAccountTypeEnum {
  Iban = "IBAN",
  Scan = "SCAN",
}

/**
 * Debtor account write serializer.
 */
export class PaymentWriteRequestDebtorAccount extends SpeakeasyBase {
  /**
   * Debtor account type identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  account?: string;

  /**
   * Debtor account address country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address_country" })
  addressCountry?: string;

  /**
   * Debtor account address street
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address_street" })
  addressStreet?: string;

  /**
   * Debtor account currency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Debtor account name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Debtor account post code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "post_code" })
  postCode?: string;

  /**
   * Debtor account type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: PaymentWriteRequestDebtorAccountTypeEnum;

  /**
   * Debtor account type identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type_number" })
  typeNumber?: string;
}

/**
 * Payment product
 */
export enum PaymentWriteRequestPaymentProductEnum {
  T2P = "T2P",
  Sct = "SCT",
  Isct = "ISCT",
  Cbct = "CBCT",
}

/**
 * PaymentWriteSerializer.
 */
export class PaymentWriteRequest extends SpeakeasyBase {
  /**
   * Registered creditor account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creditor_account" })
  creditorAccount: string;

  /**
   * Payment Custom Payment ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_payment_id" })
  customPaymentId?: string;

  /**
   * Debtor account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debtor_account" })
  @Type(() => PaymentWriteRequestDebtorAccount)
  debtorAccount?: PaymentWriteRequestDebtorAccount;

  /**
   * Payment description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Institution ID for Payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "institution_id" })
  institutionId?: string;

  /**
   * Instructed amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instructed_amount" })
  @Type(() => InstructedAmountRequest)
  instructedAmount: InstructedAmountRequest;

  /**
   * Payment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_product" })
  paymentProduct?: PaymentWriteRequestPaymentProductEnum;

  /**
   * Periodic Payment Serializer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodic_payment" })
  @Type(() => PeriodicPaymentRequest)
  periodicPayment?: PeriodicPaymentRequest;

  /**
   * Redirect URL to your application after payment is done
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redirect" })
  redirect: string;

  /**
   * Payment Execution date (for periodic payments)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requested_execution_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  requestedExecutionDate?: Date;
}
