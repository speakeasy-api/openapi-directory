// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETReorderReceiptRuleSetActionEnum
type GETReorderReceiptRuleSetActionEnum string

const (
	GETReorderReceiptRuleSetActionEnumReorderReceiptRuleSet GETReorderReceiptRuleSetActionEnum = "ReorderReceiptRuleSet"
)

func (e GETReorderReceiptRuleSetActionEnum) ToPointer() *GETReorderReceiptRuleSetActionEnum {
	return &e
}

func (e *GETReorderReceiptRuleSetActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ReorderReceiptRuleSet":
		*e = GETReorderReceiptRuleSetActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETReorderReceiptRuleSetActionEnum: %v", v)
	}
}

// GETReorderReceiptRuleSetVersionEnum
type GETReorderReceiptRuleSetVersionEnum string

const (
	GETReorderReceiptRuleSetVersionEnumTwoThousandAndTen1201 GETReorderReceiptRuleSetVersionEnum = "2010-12-01"
)

func (e GETReorderReceiptRuleSetVersionEnum) ToPointer() *GETReorderReceiptRuleSetVersionEnum {
	return &e
}

func (e *GETReorderReceiptRuleSetVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETReorderReceiptRuleSetVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETReorderReceiptRuleSetVersionEnum: %v", v)
	}
}

type GETReorderReceiptRuleSetRequest struct {
	Action GETReorderReceiptRuleSetActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A list of the specified receipt rule set's receipt rules in the order that you want to put them.
	RuleNames []string `queryParam:"style=form,explode=true,name=RuleNames"`
	// The name of the receipt rule set to reorder.
	RuleSetName       string                              `queryParam:"style=form,explode=true,name=RuleSetName"`
	Version           GETReorderReceiptRuleSetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETReorderReceiptRuleSetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
