/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ArchivalSummary } from "./archivalsummary";
import { AttributeDefinition } from "./attributedefinition";
import { BillingModeSummary } from "./billingmodesummary";
import { GlobalSecondaryIndexDescription } from "./globalsecondaryindexdescription";
import { KeySchemaElement } from "./keyschemaelement";
import { LocalSecondaryIndexDescription } from "./localsecondaryindexdescription";
import { ProvisionedThroughputDescription } from "./provisionedthroughputdescription";
import { ReplicaDescription } from "./replicadescription";
import { RestoreSummary } from "./restoresummary";
import { SSEDescription } from "./ssedescription";
import { StreamSpecification } from "./streamspecification";
import { TableClassSummary } from "./tableclasssummary";
import { TableStatusEnum } from "./tablestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents the properties of a table.
 */
export class TableDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ArchivalSummary" })
  @Type(() => ArchivalSummary)
  archivalSummary?: ArchivalSummary;

  @SpeakeasyMetadata({ elemType: AttributeDefinition })
  @Expose({ name: "AttributeDefinitions" })
  @Type(() => AttributeDefinition)
  attributeDefinitions?: AttributeDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "BillingModeSummary" })
  @Type(() => BillingModeSummary)
  billingModeSummary?: BillingModeSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeletionProtectionEnabled" })
  deletionProtectionEnabled?: boolean;

  @SpeakeasyMetadata({ elemType: GlobalSecondaryIndexDescription })
  @Expose({ name: "GlobalSecondaryIndexes" })
  @Type(() => GlobalSecondaryIndexDescription)
  globalSecondaryIndexes?: GlobalSecondaryIndexDescription[];

  @SpeakeasyMetadata()
  @Expose({ name: "GlobalTableVersion" })
  globalTableVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ItemCount" })
  itemCount?: number;

  @SpeakeasyMetadata({ elemType: KeySchemaElement })
  @Expose({ name: "KeySchema" })
  @Type(() => KeySchemaElement)
  keySchema?: KeySchemaElement[];

  @SpeakeasyMetadata()
  @Expose({ name: "LatestStreamArn" })
  latestStreamArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestStreamLabel" })
  latestStreamLabel?: string;

  @SpeakeasyMetadata({ elemType: LocalSecondaryIndexDescription })
  @Expose({ name: "LocalSecondaryIndexes" })
  @Type(() => LocalSecondaryIndexDescription)
  localSecondaryIndexes?: LocalSecondaryIndexDescription[];

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisionedThroughput" })
  @Type(() => ProvisionedThroughputDescription)
  provisionedThroughput?: ProvisionedThroughputDescription;

  @SpeakeasyMetadata({ elemType: ReplicaDescription })
  @Expose({ name: "Replicas" })
  @Type(() => ReplicaDescription)
  replicas?: ReplicaDescription[];

  @SpeakeasyMetadata()
  @Expose({ name: "RestoreSummary" })
  @Type(() => RestoreSummary)
  restoreSummary?: RestoreSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "SSEDescription" })
  @Type(() => SSEDescription)
  sseDescription?: SSEDescription;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamSpecification" })
  @Type(() => StreamSpecification)
  streamSpecification?: StreamSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "TableArn" })
  tableArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableClassSummary" })
  @Type(() => TableClassSummary)
  tableClassSummary?: TableClassSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "TableId" })
  tableId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableSizeBytes" })
  tableSizeBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TableStatus" })
  tableStatus?: TableStatusEnum;
}
