/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LandlordLettingsInspectionModel } from "./landlordlettingsinspectionmodel";
import { LandlordMaintenanceCertificateModel } from "./landlordmaintenancecertificatemodel";
import { LandlordMaintenancePreferenceModel } from "./landlordmaintenancepreferencemodel";
import { LettingsLandlordDocument } from "./lettingslandlorddocument";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Landlord Tenancy Model.
 */
export class LandlordTenancyModel extends SpeakeasyBase {
  /**
   * Actual End Date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ActualEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  actualEndDate?: Date;

  /**
   * Beds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Beds" })
  beds?: number;

  /**
   * Bond
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Bond" })
  bond?: number;

  /**
   * The tenancy branch ID:-
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BranchID" })
  branchID?: string;

  /**
   * Maintenance Certificates.
   */
  @SpeakeasyMetadata({ elemType: LandlordMaintenanceCertificateModel })
  @Expose({ name: "Certificates" })
  @Type(() => LandlordMaintenanceCertificateModel)
  certificates?: LandlordMaintenanceCertificateModel[];

  /**
   * Tenancy documents:-
   */
  @SpeakeasyMetadata({ elemType: LettingsLandlordDocument })
  @Expose({ name: "Documents" })
  @Type(() => LettingsLandlordDocument)
  documents?: LettingsLandlordDocument[];

  /**
   * Fixed Date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FixedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fixedDate?: Date;

  /**
   * User Friendly ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GlobalReference" })
  globalReference?: string;

  /**
   * ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ID" })
  id?: string;

  /**
   * Inspections
   */
  @SpeakeasyMetadata({ elemType: LandlordLettingsInspectionModel })
  @Expose({ name: "Inspections" })
  @Type(() => LandlordLettingsInspectionModel)
  inspections?: LandlordLettingsInspectionModel[];

  /**
   * State of the tenancy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ManagedRent" })
  managedRent?: boolean;

  /**
   * Maintenance Preferences.
   */
  @SpeakeasyMetadata({ elemType: LandlordMaintenancePreferenceModel })
  @Expose({ name: "Preferences" })
  @Type(() => LandlordMaintenancePreferenceModel)
  preferences?: LandlordMaintenancePreferenceModel[];

  /**
   * Previous Rent Amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PreviousRentAmount" })
  previousRentAmount?: number;

  /**
   * Display Property Address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PropertyAddress" })
  propertyAddress?: string;

  /**
   * Rent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Rent" })
  rent?: string;

  /**
   * Rent Amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RentAmount" })
  rentAmount?: number;

  /**
   * Start Date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  /**
   * Tenancy Property
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TenancyProperty" })
  tenancyProperty?: string;

  /**
   * State of the tenancy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TenancyState" })
  tenancyState?: string;

  /**
   * Tenants
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tenants" })
  tenants?: string[];
}
