// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type UserPlatformEnum string

const (
	UserPlatformEnumWeb           UserPlatformEnum = "web"
	UserPlatformEnumIPad          UserPlatformEnum = "iPad"
	UserPlatformEnumIPhone        UserPlatformEnum = "iPhone"
	UserPlatformEnumAndroid       UserPlatformEnum = "Android"
	UserPlatformEnumCAstore       UserPlatformEnum = "CAstore"
	UserPlatformEnumRequestAccess UserPlatformEnum = "requestAccess"
	UserPlatformEnumSharedAccess  UserPlatformEnum = "sharedAccess"
	UserPlatformEnumSingleAccess  UserPlatformEnum = "singleAccess"
	UserPlatformEnumTransfer      UserPlatformEnum = "transfer"
	UserPlatformEnumRefreshToken  UserPlatformEnum = "refresh_token"
)

func (e *UserPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "web":
		fallthrough
	case "iPad":
		fallthrough
	case "iPhone":
		fallthrough
	case "Android":
		fallthrough
	case "CAstore":
		fallthrough
	case "requestAccess":
		fallthrough
	case "sharedAccess":
		fallthrough
	case "singleAccess":
		fallthrough
	case "transfer":
		fallthrough
	case "refresh_token":
		*e = UserPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserPlatformEnum: %s", s)
	}
}

// User - Successful DELETE on User resource
type User struct {
	ID       int64            `json:"id"`
	Platform UserPlatformEnum `json:"platform"`
	Signin   time.Time        `json:"signin"`
}
