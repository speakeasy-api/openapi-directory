// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateProvisioningTemplatePathParams struct {
	// The name of the provisioning template.
	TemplateName string `pathParam:"style=simple,explode=false,name=templateName"`
}

type UpdateProvisioningTemplateHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateProvisioningTemplateRequestBodyPreProvisioningHook - Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.
type UpdateProvisioningTemplateRequestBodyPreProvisioningHook struct {
	PayloadVersion *string `json:"payloadVersion,omitempty"`
	TargetArn      *string `json:"targetArn,omitempty"`
}

type UpdateProvisioningTemplateRequestBody struct {
	// The ID of the default provisioning template version.
	DefaultVersionID *int64 `json:"defaultVersionId,omitempty"`
	// The description of the provisioning template.
	Description *string `json:"description,omitempty"`
	// True to enable the provisioning template, otherwise false.
	Enabled *bool `json:"enabled,omitempty"`
	// Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.
	PreProvisioningHook *UpdateProvisioningTemplateRequestBodyPreProvisioningHook `json:"preProvisioningHook,omitempty"`
	// The ARN of the role associated with the provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn *string `json:"provisioningRoleArn,omitempty"`
	// Removes pre-provisioning hook template.
	RemovePreProvisioningHook *bool `json:"removePreProvisioningHook,omitempty"`
}

type UpdateProvisioningTemplateRequest struct {
	PathParams UpdateProvisioningTemplatePathParams
	Headers    UpdateProvisioningTemplateHeaders
	Request    UpdateProvisioningTemplateRequestBody `request:"mediaType=application/json"`
}

type UpdateProvisioningTemplateResponse struct {
	// ConflictingResourceUpdateException
	ConflictingResourceUpdateException interface{}
	ContentType                        string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
	// Success
	UpdateProvisioningTemplateResponse map[string]interface{}
}
