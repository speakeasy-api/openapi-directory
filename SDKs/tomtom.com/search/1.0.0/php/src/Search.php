<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Search 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Low Bandwith Category Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCSCategoryExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCSCategoryExtResponse
     * @deprecated this method will be removed in a future release, please migrate away from it as soon as possible
     */
	public function getSearchVersionNumberCSCategoryExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCSCategoryExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCSCategoryExtResponse
    {
        trigger_error('Method ' . __METHOD__ . ' is deprecated', E_USER_DEPRECATED);
        
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/cS/{category}.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCSCategoryExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCSCategoryExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCSCategoryExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Category Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCategorySearchQueryExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCategorySearchQueryExtResponse
     */
	public function getSearchVersionNumberCategorySearchQueryExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCategorySearchQueryExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCategorySearchQueryExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/categorySearch/{query}.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCategorySearchQueryExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCategorySearchQueryExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberCategorySearchQueryExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Geometry Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometrySearchQueryExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometrySearchQueryExtResponse
     */
	public function getSearchVersionNumberGeometrySearchQueryExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometrySearchQueryExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometrySearchQueryExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/geometrySearch/{query}.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometrySearchQueryExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometrySearchQueryExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometrySearchQueryExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Nearby Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberNearbySearchExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberNearbySearchExtResponse
     */
	public function getSearchVersionNumberNearbySearchExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberNearbySearchExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberNearbySearchExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/nearbySearch/.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberNearbySearchExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberNearbySearchExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberNearbySearchExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Points of Interest Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberPoiSearchQueryExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberPoiSearchQueryExtResponse
     */
	public function getSearchVersionNumberPoiSearchQueryExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberPoiSearchQueryExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberPoiSearchQueryExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/poiSearch/{query}.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberPoiSearchQueryExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberPoiSearchQueryExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberPoiSearchQueryExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Routed Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtResponse
     * @deprecated this method will be removed in a future release, please migrate away from it as soon as possible
     */
	public function getSearchVersionNumberRoutedSearchQueryPositionHeadingExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtResponse
    {
        trigger_error('Method ' . __METHOD__ . ' is deprecated', E_USER_DEPRECATED);
        
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/routedSearch/{query}/{position}/{heading}.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Low bandwith Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSQueryExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSQueryExtResponse
     * @deprecated this method will be removed in a future release, please migrate away from it as soon as possible
     */
	public function getSearchVersionNumberSQueryExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSQueryExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSQueryExtResponse
    {
        trigger_error('Method ' . __METHOD__ . ' is deprecated', E_USER_DEPRECATED);
        
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/s/{query}.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSQueryExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSQueryExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSQueryExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Fuzzy Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSearchQueryExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSearchQueryExtResponse
     */
	public function getSearchVersionNumberSearchQueryExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSearchQueryExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSearchQueryExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/search/{query}.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSearchQueryExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSearchQueryExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberSearchQueryExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Geometry Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometrySearchQueryExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometrySearchQueryExtResponse
     */
	public function postSearchVersionNumberGeometrySearchQueryExt(
        \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometrySearchQueryExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometrySearchQueryExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/geometrySearch/{query}.{ext}', \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometrySearchQueryExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometrySearchQueryExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometrySearchQueryExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Along Route Search
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberSearchAlongRouteQueryExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberSearchAlongRouteQueryExtResponse
     */
	public function postSearchVersionNumberSearchAlongRouteQueryExt(
        \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberSearchAlongRouteQueryExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberSearchAlongRouteQueryExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/searchAlongRoute/{query}.{ext}', \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberSearchAlongRouteQueryExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberSearchAlongRouteQueryExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberSearchAlongRouteQueryExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
}