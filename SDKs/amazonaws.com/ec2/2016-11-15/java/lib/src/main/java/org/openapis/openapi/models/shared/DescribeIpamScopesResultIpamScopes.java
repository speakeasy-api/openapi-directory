/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DescribeIpamScopesResultIpamScopes - &lt;p&gt;In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/vpc/latest/ipam/how-it-works-ipam.html"&gt;How IPAM works&lt;/a&gt; in the &lt;i&gt;Amazon VPC IPAM User Guide&lt;/i&gt;.&lt;/p&gt;
 */
public class DescribeIpamScopesResultIpamScopes {
    
    public String description;

    public DescribeIpamScopesResultIpamScopes withDescription(String description) {
        this.description = description;
        return this;
    }
    
    
    public String ipamArn;

    public DescribeIpamScopesResultIpamScopes withIpamArn(String ipamArn) {
        this.ipamArn = ipamArn;
        return this;
    }
    
    
    public String ipamRegion;

    public DescribeIpamScopesResultIpamScopes withIpamRegion(String ipamRegion) {
        this.ipamRegion = ipamRegion;
        return this;
    }
    
    
    public String ipamScopeArn;

    public DescribeIpamScopesResultIpamScopes withIpamScopeArn(String ipamScopeArn) {
        this.ipamScopeArn = ipamScopeArn;
        return this;
    }
    
    
    public String ipamScopeId;

    public DescribeIpamScopesResultIpamScopes withIpamScopeId(String ipamScopeId) {
        this.ipamScopeId = ipamScopeId;
        return this;
    }
    
    
    public DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum ipamScopeType;

    public DescribeIpamScopesResultIpamScopes withIpamScopeType(DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum ipamScopeType) {
        this.ipamScopeType = ipamScopeType;
        return this;
    }
    
    
    public Boolean isDefault;

    public DescribeIpamScopesResultIpamScopes withIsDefault(Boolean isDefault) {
        this.isDefault = isDefault;
        return this;
    }
    
    
    public String ownerId;

    public DescribeIpamScopesResultIpamScopes withOwnerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    
    public Long poolCount;

    public DescribeIpamScopesResultIpamScopes withPoolCount(Long poolCount) {
        this.poolCount = poolCount;
        return this;
    }
    
    
    public DescribeIpamScopesResultIpamScopesStateEnum state;

    public DescribeIpamScopesResultIpamScopes withState(DescribeIpamScopesResultIpamScopesStateEnum state) {
        this.state = state;
        return this;
    }
    
    
    public DescribeIpamScopesResultIpamScopesTags[] tags;

    public DescribeIpamScopesResultIpamScopes withTags(DescribeIpamScopesResultIpamScopesTags[] tags) {
        this.tags = tags;
        return this;
    }
    
    public DescribeIpamScopesResultIpamScopes(){}
}
