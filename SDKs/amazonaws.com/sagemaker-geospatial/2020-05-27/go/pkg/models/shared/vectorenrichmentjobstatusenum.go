// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VectorEnrichmentJobStatusEnum string

const (
	VectorEnrichmentJobStatusEnumInitializing VectorEnrichmentJobStatusEnum = "INITIALIZING"
	VectorEnrichmentJobStatusEnumInProgress   VectorEnrichmentJobStatusEnum = "IN_PROGRESS"
	VectorEnrichmentJobStatusEnumStopping     VectorEnrichmentJobStatusEnum = "STOPPING"
	VectorEnrichmentJobStatusEnumStopped      VectorEnrichmentJobStatusEnum = "STOPPED"
	VectorEnrichmentJobStatusEnumCompleted    VectorEnrichmentJobStatusEnum = "COMPLETED"
	VectorEnrichmentJobStatusEnumFailed       VectorEnrichmentJobStatusEnum = "FAILED"
	VectorEnrichmentJobStatusEnumDeleting     VectorEnrichmentJobStatusEnum = "DELETING"
	VectorEnrichmentJobStatusEnumDeleted      VectorEnrichmentJobStatusEnum = "DELETED"
)

func (e VectorEnrichmentJobStatusEnum) ToPointer() *VectorEnrichmentJobStatusEnum {
	return &e
}

func (e *VectorEnrichmentJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INITIALIZING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = VectorEnrichmentJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VectorEnrichmentJobStatusEnum: %v", v)
	}
}
