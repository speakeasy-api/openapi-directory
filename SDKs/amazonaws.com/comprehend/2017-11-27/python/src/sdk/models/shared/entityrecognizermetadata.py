"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import entityrecognizerevaluationmetrics as shared_entityrecognizerevaluationmetrics
from ..shared import entityrecognizermetadataentitytypeslistitem as shared_entityrecognizermetadataentitytypeslistitem
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EntityRecognizerMetadata:
    r"""Detailed information about an entity recognizer."""
    
    entity_types: Optional[list[shared_entityrecognizermetadataentitytypeslistitem.EntityRecognizerMetadataEntityTypesListItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EntityTypes'), 'exclude': lambda f: f is None }})  
    evaluation_metrics: Optional[shared_entityrecognizerevaluationmetrics.EntityRecognizerEvaluationMetrics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EvaluationMetrics'), 'exclude': lambda f: f is None }})  
    number_of_test_documents: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfTestDocuments'), 'exclude': lambda f: f is None }})  
    number_of_trained_documents: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfTrainedDocuments'), 'exclude': lambda f: f is None }})  
    