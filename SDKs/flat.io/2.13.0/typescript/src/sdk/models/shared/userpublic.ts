/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClassRolesEnum } from "./classrolesenum";
import { OrganizationRolesEnum } from "./organizationrolesenum";
import { Expose, Transform } from "class-transformer";

/**
 * The type of user account
 */
export enum UserPublicTypeEnum {
  User = "user",
  Guest = "guest",
}

/**
 * Public User details summary
 */
export class UserPublic extends SpeakeasyBase {
  /**
   * User's biography
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bio" })
  bio?: string;

  /**
   * User's Class Role (for Edu users only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classRole" })
  classRole?: ClassRolesEnum;

  /**
   * Cover picture (backgroud) for the profile
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coverPicture" })
  coverPicture?: string;

  /**
   * Firstname of the user (for education users)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstname" })
  firstname?: string;

  /**
   * Number of followers the user have
   */
  @SpeakeasyMetadata()
  @Expose({ name: "followersCount" })
  followersCount?: number;

  /**
   * Number of people the user follow
   */
  @SpeakeasyMetadata()
  @Expose({ name: "followingCount" })
  followingCount?: number;

  /**
   * Link to user profile (for Indiv. users only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlUrl" })
  htmlUrl?: string;

  /**
   * The user unique identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * An array of the instrument identifiers.
   *
   * @remarks
   * The format of the strings is `{instrument-group}.{instrument-id}`.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instruments" })
  instruments?: string[];

  /**
   * Will be 'true' if user is part of the Flat Team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isFlatTeam" })
  isFlatTeam?: boolean;

  /**
   * User license status. 'true' if user is an individual Power user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPowerUser" })
  isPowerUser?: boolean;

  /**
   * Lastname of the user (for education users)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastname" })
  lastname?: string;

  /**
   * Number of the scores liked by the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "likedScoresCount" })
  likedScoresCount?: number;

  /**
   * A displayable name for the user (for consumer users)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Organization ID (for Edu users only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization?: string;

  /**
   * User's Organization Role (for Edu users only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organizationRole" })
  organizationRole?: OrganizationRolesEnum;

  /**
   * Number of public scores the user have
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ownedPublicScoresCount" })
  ownedPublicScoresCount?: number;

  /**
   * The URL of the picture to display
   */
  @SpeakeasyMetadata()
  @Expose({ name: "picture" })
  picture?: string;

  /**
   * The name that can be directly printed (name, firstname & lastname, or username)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "printableName" })
  printableName?: string;

  /**
   * Theme (background) for the profile
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileTheme" })
  profileTheme?: string;

  /**
   * Date the user signed up
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  registrationDate?: Date;

  /**
   * The type of user account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: UserPublicTypeEnum;

  /**
   * The user name (unique for the organization)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}
