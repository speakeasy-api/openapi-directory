"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import retrievalimportance as shared_retrievalimportance
from ..shared import textoperatoroptions as shared_textoperatoroptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TextPropertyOptions:
    r"""The options for text properties."""
    
    operator_options: Optional[shared_textoperatoroptions.TextOperatorOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operatorOptions'), 'exclude': lambda f: f is None }})
    r"""Used to provide a search operator for text properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched."""  
    retrieval_importance: Optional[shared_retrievalimportance.RetrievalImportance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retrievalImportance'), 'exclude': lambda f: f is None }})  
    