"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import sourcewrapped as shared_sourcewrapped
from typing import Optional


@dataclasses.dataclass
class GetResourcesSourcesJSONRequest:
    
    max: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max', 'style': 'form', 'explode': False }})
    r"""The maximum number of records to return"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': False }})
    r"""Return records starting at the offset index."""  
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': False }})
    r"""The name of the property to which sorting will be applied"""  
    

@dataclasses.dataclass
class GetResourcesSourcesJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    source_wrappeds: Optional[list[shared_sourcewrapped.SourceWrapped]] = dataclasses.field(default=None)
    r"""Returns the list of Sources."""  
    