/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesMatchedStop } from "./tflapipresentationentitiesmatchedstop";
import { TflApiPresentationEntitiesOrderedRoute } from "./tflapipresentationentitiesorderedroute";
import { TflApiPresentationEntitiesStopPointSequence } from "./tflapipresentationentitiesstoppointsequence";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class TflApiPresentationEntitiesRouteSequence extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isOutboundOnly" })
  isOutboundOnly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lineId" })
  lineId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lineName" })
  lineName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lineStrings" })
  lineStrings?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "mode" })
  mode?: string;

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesOrderedRoute })
  @Expose({ name: "orderedLineRoutes" })
  @Type(() => TflApiPresentationEntitiesOrderedRoute)
  orderedLineRoutes?: TflApiPresentationEntitiesOrderedRoute[];

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesMatchedStop })
  @Expose({ name: "stations" })
  @Type(() => TflApiPresentationEntitiesMatchedStop)
  stations?: TflApiPresentationEntitiesMatchedStop[];

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesStopPointSequence })
  @Expose({ name: "stopPointSequences" })
  @Type(() => TflApiPresentationEntitiesStopPointSequence)
  stopPointSequences?: TflApiPresentationEntitiesStopPointSequence[];
}
