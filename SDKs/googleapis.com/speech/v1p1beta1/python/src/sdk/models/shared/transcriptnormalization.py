"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import entry as shared_entry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TranscriptNormalization:
    r"""Transcription normalization configuration. Use transcription normalization to automatically replace parts of the transcript with phrases of your choosing. For StreamingRecognize, this normalization only applies to stable partial transcripts (stability > 0.8) and final transcripts."""
    
    entries: Optional[list[shared_entry.Entry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entries'), 'exclude': lambda f: f is None }})
    r"""A list of replacement entries. We will perform replacement with one entry at a time. For example, the second entry in [\\"cat\\" => \\"dog\\", \\"mountain cat\\" => \\"mountain dog\\"] will never be applied because we will always process the first entry before it. At most 100 entries."""  
    