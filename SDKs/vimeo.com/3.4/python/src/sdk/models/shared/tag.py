"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TagMetadataConnectionsVideos:
    r"""Information about the videos related to this tag."""
    
    options: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of HTTP methods permitted on this URI."""  
    total: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})
    r"""The total number of videos on this connection."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The API URI that resolves to the connection data."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TagMetadataConnections:
    r"""A collection of information that is connected to this resource."""
    
    videos: TagMetadataConnectionsVideos = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videos') }})
    r"""Information about the videos related to this tag."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TagMetadata:
    r"""Metadata about the group."""
    
    connections: TagMetadataConnections = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connections') }})
    r"""A collection of information that is connected to this resource."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Tag:
    r"""The tag was returned."""
    
    canonical: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canonical') }})
    r"""The normalized canonical tag name."""  
    metadata: TagMetadata = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata') }})
    r"""Metadata about the group."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The tag value."""  
    resource_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_key') }})
    r"""The tag's resource key string."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The canonical relative URI of the tag."""  
    