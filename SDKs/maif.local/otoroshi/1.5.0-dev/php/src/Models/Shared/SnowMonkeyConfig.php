<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SnowMonkeyConfig - Configuration for the faults that can be injected in requests. The name Snow Monkey is an hommage to Netflix's Chaos Monkey ðŸ˜‰
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SnowMonkeyConfig
{
    /**
     * Configuration for the faults that can be injected in requests
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ChaosConfig $chaosConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('chaosConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChaosConfig')]
    public ChaosConfig $chaosConfig;
    
    /**
     * Whether or not outages will actualy impact requests
     * 
     * @var bool $dryRun
     */
	#[\JMS\Serializer\Annotation\SerializedName('dryRun')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $dryRun;
    
    /**
     * Whether or not this config is enabled
     * 
     * @var bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $enabled;
    
    /**
     * Whether or not user facing apps. will be impacted by Snow Monkey
     * 
     * @var bool $includeUserFacingDescriptors
     */
	#[\JMS\Serializer\Annotation\SerializedName('includeUserFacingDescriptors')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $includeUserFacingDescriptors;
    
    /**
     * Start of outage duration range
     * 
     * @var int $outageDurationFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('outageDurationFrom')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $outageDurationFrom;
    
    /**
     * End of outage duration range
     * 
     * @var int $outageDurationTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('outageDurationTo')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $outageDurationTo;
    
	#[\JMS\Serializer\Annotation\SerializedName('outageStrategy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OutageStrategyEnum>')]
    public OutageStrategyEnum $outageStrategy;
    
    /**
     * Start time of Snow Monkey each day
     * 
     * @var string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $startTime;
    
    /**
     * Stop time of Snow Monkey each day
     * 
     * @var string $stopTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('stopTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $stopTime;
    
    /**
     * Groups impacted by Snow Monkey. If empty, all groups will be impacted
     * 
     * @var array<string> $targetGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetGroups')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $targetGroups;
    
    /**
     * Number of time per day each service will be outage
     * 
     * @var int $timesPerDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('timesPerDay')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $timesPerDay;
    
	public function __construct()
	{
		$this->chaosConfig = new \OpenAPI\OpenAPI\Models\Shared\ChaosConfig();
		$this->dryRun = false;
		$this->enabled = false;
		$this->includeUserFacingDescriptors = false;
		$this->outageDurationFrom = 0;
		$this->outageDurationTo = 0;
		$this->outageStrategy = \OpenAPI\OpenAPI\Models\Shared\OutageStrategyEnum::ONE_SERVICE_PER_GROUP;
		$this->startTime = "";
		$this->stopTime = "";
		$this->targetGroups = [];
		$this->timesPerDay = 0;
	}
}
