/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CompleteS3FileUploadRequest - Request model for completing a S3 file upload
 */
public class CompleteS3FileUploadRequest {
    /**
     * File key information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileKey")
    public FileKey fileKey;
    public CompleteS3FileUploadRequest withFileKey(FileKey fileKey) {
        this.fileKey = fileKey;
        return this;
    }
    
    /**
     * New file name to store with
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileName")
    public String fileName;
    public CompleteS3FileUploadRequest withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    /**
     * Preserve Download Share Links and point them to the new node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keepShareLinks")
    public Boolean keepShareLinks;
    public CompleteS3FileUploadRequest withKeepShareLinks(Boolean keepShareLinks) {
        this.keepShareLinks = keepShareLinks;
        return this;
    }
    
    /**
     * List of S3 file upload parts
     */
    @JsonProperty("parts")
    public S3FileUploadPart[] parts;
    public CompleteS3FileUploadRequest withParts(S3FileUploadPart[] parts) {
        this.parts = parts;
        return this;
    }
    
    /**
     * Node conflict resolution strategy:
     * 
     * * `autorename`
     * 
     * * `overwrite`
     * 
     * * `fail`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolutionStrategy")
    public CompleteS3FileUploadRequestResolutionStrategyEnum resolutionStrategy;
    public CompleteS3FileUploadRequest withResolutionStrategy(CompleteS3FileUploadRequestResolutionStrategyEnum resolutionStrategy) {
        this.resolutionStrategy = resolutionStrategy;
        return this;
    }
    
}
