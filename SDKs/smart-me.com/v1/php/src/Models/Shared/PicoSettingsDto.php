<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PicoSettingsDto - DTO for the pico charging station settings
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PicoSettingsDto
{
    /**
     * The authentication type
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PicoSettingsDtoAuthenticationTypeEnum $authenticationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('AuthenticationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PicoSettingsDtoAuthenticationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PicoSettingsDtoAuthenticationTypeEnum $authenticationType = null;
    
    /**
     * Flag if the car id detection is enabled
     * 
     * @var ?bool $carIdDetection
     */
	#[\JMS\Serializer\Annotation\SerializedName('CarIdDetection')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $carIdDetection = null;
    
    /**
     * The Brightness of the LCD Matrix display. 0 = minimum, 255 = maximum
     * 
     * @var ?string $displayBrightness
     */
	#[\JMS\Serializer\Annotation\SerializedName('DisplayBrightness')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayBrightness = null;
    
    /**
     * The DNS name of the pico's internal ip
     * 
     * @var ?string $dnsName
     */
	#[\JMS\Serializer\Annotation\SerializedName('DnsName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dnsName = null;
    
    /**
     * Enable the fix lock of the charging cable
     * 
     * @var ?bool $fixCableLockEnable
     */
	#[\JMS\Serializer\Annotation\SerializedName('FixCableLockEnable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $fixCableLockEnable = null;
    
    /**
     * The url of the idle image
     * 
     * @var ?string $idleImageUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('IdleImageUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idleImageUrl = null;
    
    /**
     * The internal IP address
     * 
     * @var ?string $internalIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('InternalIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $internalIp = null;
    
    /**
     * The ID of the loadmanagement group
     * 
     * @var ?string $loadmanagementGroupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('LoadmanagementGroupId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $loadmanagementGroupId = null;
    
    /**
     * The max current of this station (in A)
     * 
     * @var ?int $maxCurrent
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaxCurrent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxCurrent = null;
    
    /**
     * The max current of this station (in A)
     * 
     * @var ?int $minCurrent
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinCurrent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minCurrent = null;
    
    /**
     * Flag if ModbusTcp is enabled
     * 
     * @var ?bool $modbusTcp
     */
	#[\JMS\Serializer\Annotation\SerializedName('ModbusTcp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $modbusTcp = null;
    
    /**
     * The name of the station
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The Serial number of the station
     * 
     * @var ?string $serialNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('SerialNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serialNumber = null;
    
	public function __construct()
	{
		$this->authenticationType = null;
		$this->carIdDetection = null;
		$this->displayBrightness = null;
		$this->dnsName = null;
		$this->fixCableLockEnable = null;
		$this->idleImageUrl = null;
		$this->internalIp = null;
		$this->loadmanagementGroupId = null;
		$this->maxCurrent = null;
		$this->minCurrent = null;
		$this->modbusTcp = null;
		$this->name = null;
		$this->serialNumber = null;
	}
}
