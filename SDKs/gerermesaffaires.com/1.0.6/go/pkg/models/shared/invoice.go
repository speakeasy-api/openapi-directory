// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InvoiceTypeEnum string

const (
	InvoiceTypeEnumCommercialInvoice   InvoiceTypeEnum = "commercial-invoice"
	InvoiceTypeEnumCreditNote          InvoiceTypeEnum = "credit-note"
	InvoiceTypeEnumAmendingInvoice     InvoiceTypeEnum = "amending-invoice"
	InvoiceTypeEnumSelfBilling         InvoiceTypeEnum = "self-billing"
	InvoiceTypeEnumCreditSelfBilling   InvoiceTypeEnum = "credit-self-billing"
	InvoiceTypeEnumDownPaymentInvoice  InvoiceTypeEnum = "down-payment-invoice"
	InvoiceTypeEnumInformationsInvoice InvoiceTypeEnum = "informations-invoice"
)

func (e InvoiceTypeEnum) ToPointer() *InvoiceTypeEnum {
	return &e
}

func (e *InvoiceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "commercial-invoice":
		fallthrough
	case "credit-note":
		fallthrough
	case "amending-invoice":
		fallthrough
	case "self-billing":
		fallthrough
	case "credit-self-billing":
		fallthrough
	case "down-payment-invoice":
		fallthrough
	case "informations-invoice":
		*e = InvoiceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceTypeEnum: %v", v)
	}
}

type Invoice struct {
	AccountedOn *string          `json:"AccountedOn,omitempty"`
	Author      *string          `json:"Author,omitempty"`
	BeforeVAT   *float64         `json:"BeforeVAT,omitempty"`
	Class       []string         `json:"Class,omitempty"`
	Code        *string          `json:"Code,omitempty"`
	Comment     *string          `json:"Comment,omitempty"`
	Date        *string          `json:"Date,omitempty"`
	DueDate     *string          `json:"DueDate,omitempty"`
	Extension   *string          `json:"Extension,omitempty"`
	FolderDate  *string          `json:"FolderDate,omitempty"`
	ID          *string          `json:"Id,omitempty"`
	InclVAT     *float64         `json:"InclVAT,omitempty"`
	InvoiceDate *string          `json:"InvoiceDate,omitempty"`
	Number      *string          `json:"Number,omitempty"`
	PaymentDate *string          `json:"PaymentDate,omitempty"`
	Title       *string          `json:"Title,omitempty"`
	Type        *InvoiceTypeEnum `json:"Type,omitempty"`
	Vat         *float64         `json:"VAT,omitempty"`
}
