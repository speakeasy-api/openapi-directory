/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ChannelCatalogProductsCounters - The channel catalog products counters. For each counter you will have a count.
 */
public class ChannelCatalogProductsCounters {
    /**
     * Disabled product count EXCLUDING uncategorized products on existing products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabledProductCountExcludingUncategorized")
    public Integer disabledProductCountExcludingUncategorized;
    public ChannelCatalogProductsCounters withDisabledProductCountExcludingUncategorized(Integer disabledProductCountExcludingUncategorized) {
        this.disabledProductCountExcludingUncategorized = disabledProductCountExcludingUncategorized;
        return this;
    }
    
    /**
     * Disabled product count INCLUDING uncategorized products on existing products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabledProductCountIncludingUncategorized")
    public Integer disabledProductCountIncludingUncategorized;
    public ChannelCatalogProductsCounters withDisabledProductCountIncludingUncategorized(Integer disabledProductCountIncludingUncategorized) {
        this.disabledProductCountIncludingUncategorized = disabledProductCountIncludingUncategorized;
        return this;
    }
    
    /**
     * Excluded product count EXCLUDING uncategorized products AND disabled products on existing products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludedProductCountExcludingUncategorizedAndDisabled")
    public Integer excludedProductCountExcludingUncategorizedAndDisabled;
    public ChannelCatalogProductsCounters withExcludedProductCountExcludingUncategorizedAndDisabled(Integer excludedProductCountExcludingUncategorizedAndDisabled) {
        this.excludedProductCountExcludingUncategorizedAndDisabled = excludedProductCountExcludingUncategorizedAndDisabled;
        return this;
    }
    
    /**
     * Excluded product count INCLUDING uncategorized products AND disabled products on existing products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludedProductCountIncludingUncategorizedAndDisabled")
    public Integer excludedProductCountIncludingUncategorizedAndDisabled;
    public ChannelCatalogProductsCounters withExcludedProductCountIncludingUncategorizedAndDisabled(Integer excludedProductCountIncludingUncategorizedAndDisabled) {
        this.excludedProductCountIncludingUncategorizedAndDisabled = excludedProductCountIncludingUncategorizedAndDisabled;
        return this;
    }
    
    /**
     * Imported product count currently in your catalog.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("existingProductCount")
    public Integer existingProductCount;
    public ChannelCatalogProductsCounters withExistingProductCount(Integer existingProductCount) {
        this.existingProductCount = existingProductCount;
        return this;
    }
    
    /**
     * Product count WITHOUT category mapped on existing products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uncategorizedProductCount")
    public Integer uncategorizedProductCount;
    public ChannelCatalogProductsCounters withUncategorizedProductCount(Integer uncategorizedProductCount) {
        this.uncategorizedProductCount = uncategorizedProductCount;
        return this;
    }
    
}
