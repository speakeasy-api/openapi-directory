// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BackfillErrorCodeEnum string

const (
	BackfillErrorCodeEnumEncryptedPartitionError            BackfillErrorCodeEnum = "ENCRYPTED_PARTITION_ERROR"
	BackfillErrorCodeEnumInternalError                      BackfillErrorCodeEnum = "INTERNAL_ERROR"
	BackfillErrorCodeEnumInvalidPartitionTypeDataError      BackfillErrorCodeEnum = "INVALID_PARTITION_TYPE_DATA_ERROR"
	BackfillErrorCodeEnumMissingPartitionValueError         BackfillErrorCodeEnum = "MISSING_PARTITION_VALUE_ERROR"
	BackfillErrorCodeEnumUnsupportedPartitionCharacterError BackfillErrorCodeEnum = "UNSUPPORTED_PARTITION_CHARACTER_ERROR"
)

func (e *BackfillErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENCRYPTED_PARTITION_ERROR":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "INVALID_PARTITION_TYPE_DATA_ERROR":
		fallthrough
	case "MISSING_PARTITION_VALUE_ERROR":
		fallthrough
	case "UNSUPPORTED_PARTITION_CHARACTER_ERROR":
		*e = BackfillErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BackfillErrorCodeEnum: %s", s)
	}
}
