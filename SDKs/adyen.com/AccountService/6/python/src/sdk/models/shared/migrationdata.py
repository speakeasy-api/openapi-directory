"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import migratedaccounts as shared_migratedaccounts
from ..shared import migratedstores as shared_migratedstores
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MigrationData:
    
    account_holder_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountHolderId'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the account holder in the balance platform."""  
    balance_platform: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balancePlatform'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the balance platfrom to which the account holder was migrated."""  
    migrated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('migrated'), 'exclude': lambda f: f is None }})
    r"""Set to **true** if the account holder has been migrated."""  
    migrated_accounts: Optional[list[shared_migratedaccounts.MigratedAccounts]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('migratedAccounts'), 'exclude': lambda f: f is None }})
    r"""Contains the mapping of virtual account codes (classic integration) to the balance account codes (balance platform) associated with the migrated account holder."""  
    migrated_stores: Optional[list[shared_migratedstores.MigratedStores]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('migratedStores'), 'exclude': lambda f: f is None }})
    r"""Contains the mapping of business lines and stores associated with the migrated account holder."""  
    migration_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('migrationDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when account holder was migrated."""  
    