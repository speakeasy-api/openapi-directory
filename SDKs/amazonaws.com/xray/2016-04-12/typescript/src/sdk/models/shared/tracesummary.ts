/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AvailabilityZoneDetail } from "./availabilityzonedetail";
import { ErrorRootCause } from "./errorrootcause";
import { FaultRootCause } from "./faultrootcause";
import { Http } from "./http";
import { InstanceIdDetail } from "./instanceiddetail";
import { ResourceARNDetail } from "./resourcearndetail";
import { ResponseTimeRootCause } from "./responsetimerootcause";
import { ServiceId } from "./serviceid";
import { TraceUser } from "./traceuser";
import { ValueWithServiceIds } from "./valuewithserviceids";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Metadata generated from the segment documents in a trace.
 */
export class TraceSummary extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ValueWithServiceIds, elemDepth: 2 })
  @Expose({ name: "Annotations" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ValueWithServiceIds[]> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ValueWithServiceIds);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  annotations?: Record<string, ValueWithServiceIds[]>;

  @SpeakeasyMetadata({ elemType: AvailabilityZoneDetail })
  @Expose({ name: "AvailabilityZones" })
  @Type(() => AvailabilityZoneDetail)
  availabilityZones?: AvailabilityZoneDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "Duration" })
  duration?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EntryPoint" })
  @Type(() => ServiceId)
  entryPoint?: ServiceId;

  @SpeakeasyMetadata({ elemType: ErrorRootCause })
  @Expose({ name: "ErrorRootCauses" })
  @Type(() => ErrorRootCause)
  errorRootCauses?: ErrorRootCause[];

  @SpeakeasyMetadata({ elemType: FaultRootCause })
  @Expose({ name: "FaultRootCauses" })
  @Type(() => FaultRootCause)
  faultRootCauses?: FaultRootCause[];

  @SpeakeasyMetadata()
  @Expose({ name: "HasError" })
  hasError?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "HasFault" })
  hasFault?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "HasThrottle" })
  hasThrottle?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Http" })
  @Type(() => Http)
  http?: Http;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata({ elemType: InstanceIdDetail })
  @Expose({ name: "InstanceIds" })
  @Type(() => InstanceIdDetail)
  instanceIds?: InstanceIdDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "IsPartial" })
  isPartial?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "MatchedEventTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  matchedEventTime?: Date;

  @SpeakeasyMetadata({ elemType: ResourceARNDetail })
  @Expose({ name: "ResourceARNs" })
  @Type(() => ResourceARNDetail)
  resourceARNs?: ResourceARNDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "ResponseTime" })
  responseTime?: number;

  @SpeakeasyMetadata({ elemType: ResponseTimeRootCause })
  @Expose({ name: "ResponseTimeRootCauses" })
  @Type(() => ResponseTimeRootCause)
  responseTimeRootCauses?: ResponseTimeRootCause[];

  @SpeakeasyMetadata()
  @Expose({ name: "Revision" })
  revision?: number;

  @SpeakeasyMetadata({ elemType: ServiceId })
  @Expose({ name: "ServiceIds" })
  @Type(() => ServiceId)
  serviceIds?: ServiceId[];

  @SpeakeasyMetadata({ elemType: TraceUser })
  @Expose({ name: "Users" })
  @Type(() => TraceUser)
  users?: TraceUser[];
}
