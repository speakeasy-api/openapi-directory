/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * RotationShift - Information about a shift that belongs to an on-call rotation.
 */
public class RotationShift {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ContactIds")
    public String[] contactIds;

    public RotationShift withContactIds(String[] contactIds) {
        this.contactIds = contactIds;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;

    public RotationShift withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShiftDetails")
    public ShiftDetails shiftDetails;

    public RotationShift withShiftDetails(ShiftDetails shiftDetails) {
        this.shiftDetails = shiftDetails;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;

    public RotationShift withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public ShiftTypeEnum type;

    public RotationShift withType(ShiftTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public RotationShift(@JsonProperty("EndTime") OffsetDateTime endTime, @JsonProperty("StartTime") OffsetDateTime startTime) {
        this.endTime = endTime;
        this.startTime = startTime;
  }
}
