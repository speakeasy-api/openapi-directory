/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BankAccount {
    /**
     * The bank account number (without separators).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountNumber")
    public String bankAccountNumber;
    public BankAccount withBankAccountNumber(String bankAccountNumber) {
        this.bankAccountNumber = bankAccountNumber;
        return this;
    }
    
    /**
     * The bank city.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankCity")
    public String bankCity;
    public BankAccount withBankCity(String bankCity) {
        this.bankCity = bankCity;
        return this;
    }
    
    /**
     * The location id of the bank. The field value is `nil` in most cases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankLocationId")
    public String bankLocationId;
    public BankAccount withBankLocationId(String bankLocationId) {
        this.bankLocationId = bankLocationId;
        return this;
    }
    
    /**
     * The name of the bank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankName")
    public String bankName;
    public BankAccount withBankName(String bankName) {
        this.bankName = bankName;
        return this;
    }
    
    /**
     * The [Business Identifier Code](https://en.wikipedia.org/wiki/ISO_9362) (BIC) is the SWIFT address assigned to a bank. The field value is `nil` in most cases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bic")
    public String bic;
    public BankAccount withBic(String bic) {
        this.bic = bic;
        return this;
    }
    
    /**
     * Country code where the bank is located.
     * 
     * A valid value is an ISO two-character country code (e.g. 'NL').
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countryCode")
    public String countryCode;
    public BankAccount withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    /**
     * The [International Bank Account Number](https://en.wikipedia.org/wiki/International_Bank_Account_Number) (IBAN).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iban")
    public String iban;
    public BankAccount withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
    /**
     * The name of the bank account holder.
     * If you submit a name with non-Latin characters, we automatically replace some of them with corresponding Latin characters to meet the FATF recommendations. For example:
     * * \u03c712 is converted to ch12.
     * * \u00fcA is converted to euA.
     * * Peter M\u00f8ller is converted to Peter Mller, because banks don't accept '\u00f8'.
     * After replacement, the ownerName must have at least three alphanumeric characters (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character (A-Z, a-z). For example:
     * * John17 - allowed.
     * * J17 - allowed.
     * * 171 - not allowed.
     * * John-7 - allowed.
     * &gt; If provided details don't match the required format, the response returns the error message: 203 'Invalid bank account holder name'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerName")
    public String ownerName;
    public BankAccount withOwnerName(String ownerName) {
        this.ownerName = ownerName;
        return this;
    }
    
    /**
     * The bank account holder's tax ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxId")
    public String taxId;
    public BankAccount withTaxId(String taxId) {
        this.taxId = taxId;
        return this;
    }
    
}
