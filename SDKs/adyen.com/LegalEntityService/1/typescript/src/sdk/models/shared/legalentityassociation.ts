/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Defines the relationship of the legal entity to the current legal entity.
 *
 * @remarks
 *
 * Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **signatory**, or **ultimateParentCompany**.
 *
 * Possible values for sole proprietorships: **soleProprietorship**.
 */
export enum LegalEntityAssociationTypeEnum {
  Signatory = "signatory",
  UboThroughControl = "uboThroughControl",
  UboThroughOwnership = "uboThroughOwnership",
}

export class LegalEntityAssociationInput extends SpeakeasyBase {
  /**
   * The individual's job title if the `type` is **uboThroughControl** or **signatory**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobTitle" })
  jobTitle?: string;

  /**
   * The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalEntityId" })
  legalEntityId: string;

  /**
   * Defines the relationship of the legal entity to the current legal entity.
   *
   * @remarks
   *
   * Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **signatory**, or **ultimateParentCompany**.
   *
   * Possible values for sole proprietorships: **soleProprietorship**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: LegalEntityAssociationTypeEnum;
}

export class LegalEntityAssociation extends SpeakeasyBase {
  /**
   * The unique identifier of another legal entity with which the `legalEntityId` is associated. When the `legalEntityId` is associated to legal entities other than the current one, the response returns all the associations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "associatorId" })
  associatorId?: string;

  /**
   * The legal entity type of associated legal entity.
   *
   * @remarks
   *
   * For example, **organization**, **soleProprietorship** or **individual**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityType" })
  entityType?: string;

  /**
   * The individual's job title if the `type` is **uboThroughControl** or **signatory**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobTitle" })
  jobTitle?: string;

  /**
   * The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalEntityId" })
  legalEntityId: string;

  /**
   * The name of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
   *
   * @remarks
   *
   * - For **individual**, `name.firstName` and `name.lastName`.
   * - For **organization**, `legalName`.
   * - For **soleProprietorship**, `name`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Defines the relationship of the legal entity to the current legal entity.
   *
   * @remarks
   *
   * Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **signatory**, or **ultimateParentCompany**.
   *
   * Possible values for sole proprietorships: **soleProprietorship**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: LegalEntityAssociationTypeEnum;
}
