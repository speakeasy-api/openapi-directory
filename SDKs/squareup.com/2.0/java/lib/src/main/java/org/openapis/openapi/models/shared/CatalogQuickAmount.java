/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CatalogQuickAmount - Represents a Quick Amount in the Catalog.
 */
public class CatalogQuickAmount {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonProperty("amount")
    public Money amount;
    public CatalogQuickAmount withAmount(Money amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The order in which this Quick Amount should be displayed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ordinal")
    public Long ordinal;
    public CatalogQuickAmount withOrdinal(Long ordinal) {
        this.ordinal = ordinal;
        return this;
    }
    
    /**
     * Describes the ranking of the Quick Amount provided by machine learning model, in the range [0, 100].
     * MANUAL type amount will always have score = 100.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("score")
    public Long score;
    public CatalogQuickAmount withScore(Long score) {
        this.score = score;
        return this;
    }
    
    /**
     * Represents the type of the Quick Amount.
     */
    @JsonProperty("type")
    public String type;
    public CatalogQuickAmount withType(String type) {
        this.type = type;
        return this;
    }
    
}
