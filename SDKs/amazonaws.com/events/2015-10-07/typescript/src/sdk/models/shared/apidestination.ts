/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApiDestinationHttpMethodEnum } from "./apidestinationhttpmethodenum";
import { ApiDestinationStateEnum } from "./apidestinationstateenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains details about an API destination.
 */
export class ApiDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApiDestinationArn" })
  apiDestinationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ApiDestinationState" })
  apiDestinationState?: ApiDestinationStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ConnectionArn" })
  connectionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "HttpMethod" })
  httpMethod?: ApiDestinationHttpMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "InvocationEndpoint" })
  invocationEndpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InvocationRateLimitPerSecond" })
  invocationRateLimitPerSecond?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}
