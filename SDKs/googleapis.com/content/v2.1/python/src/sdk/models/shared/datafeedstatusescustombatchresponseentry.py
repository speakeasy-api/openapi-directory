"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datafeedstatus as shared_datafeedstatus
from ..shared import errors as shared_errors
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatafeedstatusesCustomBatchResponseEntry:
    r"""A batch entry encoding a single non-batch datafeedstatuses response."""
    
    batch_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchId'), 'exclude': lambda f: f is None }})
    r"""The ID of the request entry this entry responds to."""  
    datafeed_status: Optional[shared_datafeedstatus.DatafeedStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datafeedStatus'), 'exclude': lambda f: f is None }})
    r"""The status of a datafeed, that is, the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished."""  
    errors: Optional[shared_errors.Errors] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""A list of errors returned by a failed batch entry."""  
    