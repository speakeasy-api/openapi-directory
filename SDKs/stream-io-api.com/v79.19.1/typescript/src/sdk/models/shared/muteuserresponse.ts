/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserMute } from "./usermute";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class MuteUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mute" })
  @Type(() => UserMute)
  mute?: UserMute;

  /**
   * Object with mutes (if multiple users were muted)
   */
  @SpeakeasyMetadata({ elemType: UserMute })
  @Expose({ name: "mutes" })
  @Type(() => UserMute)
  mutes?: UserMute[];

  @SpeakeasyMetadata()
  @Expose({ name: "own_user" })
  ownUser?: Record<string, any>;
}
