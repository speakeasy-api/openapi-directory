"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import marketosourceproperties as shared_marketosourceproperties
from ..shared import s3sourceproperties as shared_s3sourceproperties
from ..shared import salesforcesourceproperties as shared_salesforcesourceproperties
from ..shared import servicenowsourceproperties as shared_servicenowsourceproperties
from ..shared import zendesksourceproperties as shared_zendesksourceproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceConnectorProperties:
    r"""Specifies the information that is required to query a particular Amazon AppFlow connector. Customer Profiles supports Salesforce, Zendesk, Marketo, ServiceNow and Amazon S3."""
    
    marketo: Optional[shared_marketosourceproperties.MarketoSourceProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Marketo'), 'exclude': lambda f: f is None }})  
    s3: Optional[shared_s3sourceproperties.S3SourceProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3'), 'exclude': lambda f: f is None }})  
    salesforce: Optional[shared_salesforcesourceproperties.SalesforceSourceProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Salesforce'), 'exclude': lambda f: f is None }})  
    service_now: Optional[shared_servicenowsourceproperties.ServiceNowSourceProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceNow'), 'exclude': lambda f: f is None }})  
    zendesk: Optional[shared_zendesksourceproperties.ZendeskSourceProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Zendesk'), 'exclude': lambda f: f is None }})  
    