// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RoomEnumRoomTypeEnum string

const (
	RoomEnumRoomTypeEnumGo         RoomEnumRoomTypeEnum = "go"
	RoomEnumRoomTypeEnumPeerToPeer RoomEnumRoomTypeEnum = "peer-to-peer"
	RoomEnumRoomTypeEnumGroup      RoomEnumRoomTypeEnum = "group"
	RoomEnumRoomTypeEnumGroupSmall RoomEnumRoomTypeEnum = "group-small"
)

func (e RoomEnumRoomTypeEnum) ToPointer() *RoomEnumRoomTypeEnum {
	return &e
}

func (e *RoomEnumRoomTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "go":
		fallthrough
	case "peer-to-peer":
		fallthrough
	case "group":
		fallthrough
	case "group-small":
		*e = RoomEnumRoomTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RoomEnumRoomTypeEnum: %v", v)
	}
}
