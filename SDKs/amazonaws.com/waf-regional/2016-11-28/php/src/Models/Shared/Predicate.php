<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Predicate - <note> <p>This is <b>AWS WAF Classic</b> documentation. For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html">AWS WAF Classic</a> in the developer guide.</p> <p> <b>For the latest version of AWS WAF</b>, use the AWS WAFV2 API and see the <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html">AWS WAF Developer Guide</a>. With the latest version, AWS WAF has a single set of endpoints for regional and global use. </p> </note> <p>Specifies the <a>ByteMatchSet</a>, <a>IPSet</a>, <a>SqlInjectionMatchSet</a>, <a>XssMatchSet</a>, <a>RegexMatchSet</a>, <a>GeoMatchSet</a>, and <a>SizeConstraintSet</a> objects that you want to add to a <code>Rule</code> and, for each object, indicates whether you want to negate the settings, for example, requests that do NOT originate from the IP address 192.0.2.44. </p>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Predicate
{
	#[\JMS\Serializer\Annotation\SerializedName('DataId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $dataId;
    
	#[\JMS\Serializer\Annotation\SerializedName('Negated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $negated;
    
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PredicateTypeEnum>')]
    public PredicateTypeEnum $type;
    
	public function __construct()
	{
		$this->dataId = "";
		$this->negated = false;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\PredicateTypeEnum::IP_MATCH;
	}
}
