// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RevocationReasonEnum string

const (
	RevocationReasonEnumUnspecified          RevocationReasonEnum = "UNSPECIFIED"
	RevocationReasonEnumKeyCompromise        RevocationReasonEnum = "KEY_COMPROMISE"
	RevocationReasonEnumCaCompromise         RevocationReasonEnum = "CA_COMPROMISE"
	RevocationReasonEnumAffiliationChanged   RevocationReasonEnum = "AFFILIATION_CHANGED"
	RevocationReasonEnumSuperceded           RevocationReasonEnum = "SUPERCEDED"
	RevocationReasonEnumCessationOfOperation RevocationReasonEnum = "CESSATION_OF_OPERATION"
	RevocationReasonEnumCertificateHold      RevocationReasonEnum = "CERTIFICATE_HOLD"
	RevocationReasonEnumRemoveFromCrl        RevocationReasonEnum = "REMOVE_FROM_CRL"
	RevocationReasonEnumPrivilegeWithdrawn   RevocationReasonEnum = "PRIVILEGE_WITHDRAWN"
	RevocationReasonEnumAACompromise         RevocationReasonEnum = "A_A_COMPROMISE"
)

func (e RevocationReasonEnum) ToPointer() *RevocationReasonEnum {
	return &e
}

func (e *RevocationReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED":
		fallthrough
	case "KEY_COMPROMISE":
		fallthrough
	case "CA_COMPROMISE":
		fallthrough
	case "AFFILIATION_CHANGED":
		fallthrough
	case "SUPERCEDED":
		fallthrough
	case "CESSATION_OF_OPERATION":
		fallthrough
	case "CERTIFICATE_HOLD":
		fallthrough
	case "REMOVE_FROM_CRL":
		fallthrough
	case "PRIVILEGE_WITHDRAWN":
		fallthrough
	case "A_A_COMPROMISE":
		*e = RevocationReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RevocationReasonEnum: %v", v)
	}
}
