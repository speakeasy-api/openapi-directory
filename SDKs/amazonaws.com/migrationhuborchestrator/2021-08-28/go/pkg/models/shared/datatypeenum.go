// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataTypeEnum string

const (
	DataTypeEnumString     DataTypeEnum = "STRING"
	DataTypeEnumInteger    DataTypeEnum = "INTEGER"
	DataTypeEnumStringlist DataTypeEnum = "STRINGLIST"
	DataTypeEnumStringmap  DataTypeEnum = "STRINGMAP"
)

func (e DataTypeEnum) ToPointer() *DataTypeEnum {
	return &e
}

func (e *DataTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STRING":
		fallthrough
	case "INTEGER":
		fallthrough
	case "STRINGLIST":
		fallthrough
	case "STRINGMAP":
		*e = DataTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataTypeEnum: %v", v)
	}
}
