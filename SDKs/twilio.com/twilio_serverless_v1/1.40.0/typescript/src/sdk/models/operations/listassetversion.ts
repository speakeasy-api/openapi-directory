/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListAssetVersionServerList = [
  "https://serverless.twilio.com",
] as const;

export class ListAssetVersionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListAssetVersionRequest extends SpeakeasyBase {
  /**
   * The SID of the Asset resource that is the parent of the Asset Version resources to read.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AssetSid",
  })
  assetSid: string;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * The SID of the Service to read the Asset Version resource from.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class ListAssetVersionListAssetVersionResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListAssetVersionListAssetVersionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.ServerlessV1ServiceAssetAssetVersion })
  @Expose({ name: "asset_versions" })
  @Type(() => shared.ServerlessV1ServiceAssetAssetVersion)
  assetVersions?: shared.ServerlessV1ServiceAssetAssetVersion[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListAssetVersionListAssetVersionResponseMeta)
  meta?: ListAssetVersionListAssetVersionResponseMeta;
}

export class ListAssetVersionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listAssetVersionResponse?: ListAssetVersionListAssetVersionResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
