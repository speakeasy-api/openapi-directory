/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRetailV2ModelInput - Metadata that describes the training and serving parameters of a Model. A Model can be associated with a ServingConfig and then queried through the Predict API.
 */
public class GoogleCloudRetailV2ModelInput {
    /**
     * Required. The display name of the model. Should be human readable, used to display Recommendation Models in the Retail Cloud Console Dashboard. UTF-8 encoded string with limit of 1024 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public GoogleCloudRetailV2ModelInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Optional. If `RECOMMENDATIONS_FILTERING_ENABLED`, recommendation filtering by attributes is enabled for the model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filteringOption")
    public GoogleCloudRetailV2ModelFilteringOptionEnum filteringOption;
    public GoogleCloudRetailV2ModelInput withFilteringOption(GoogleCloudRetailV2ModelFilteringOptionEnum filteringOption) {
        this.filteringOption = filteringOption;
        return this;
    }
    
    /**
     * Required. The fully qualified resource name of the model. Format: `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}` catalog_id has char limit of 50. recommendation_model_id has char limit of 40.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleCloudRetailV2ModelInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional. The optimization objective e.g. `cvr`. Currently supported values: `ctr`, `cvr`, `revenue-per-order`. If not specified, we choose default based on model type. Default depends on type of recommendation: `recommended-for-you` =&gt; `ctr` `others-you-may-like` =&gt; `ctr` `frequently-bought-together` =&gt; `revenue_per_order` This field together with optimization_objective describe model metadata to use to control model training and serving. See https://cloud.google.com/retail/docs/models for more details on what the model metadata control and which combination of parameters are valid. For invalid combinations of parameters (e.g. type = `frequently-bought-together` and optimization_objective = `ctr`), you receive an error 400 if you try to create/update a recommendation with this set of knobs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optimizationObjective")
    public String optimizationObjective;
    public GoogleCloudRetailV2ModelInput withOptimizationObjective(String optimizationObjective) {
        this.optimizationObjective = optimizationObjective;
        return this;
    }
    
    /**
     * Optional. The state of periodic tuning. The period we use is 3 months - to do a one-off tune earlier use the `TuneModel` method. Default value is `PERIODIC_TUNING_ENABLED`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("periodicTuningState")
    public GoogleCloudRetailV2ModelPeriodicTuningStateEnum periodicTuningState;
    public GoogleCloudRetailV2ModelInput withPeriodicTuningState(GoogleCloudRetailV2ModelPeriodicTuningStateEnum periodicTuningState) {
        this.periodicTuningState = periodicTuningState;
        return this;
    }
    
    /**
     * Optional. The training state that the model is in (e.g. `TRAINING` or `PAUSED`). Since part of the cost of running the service is frequency of training - this can be used to determine when to train model in order to control cost. If not specified: the default value for `CreateModel` method is `TRAINING`. The default value for `UpdateModel` method is to keep the state the same as before.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trainingState")
    public GoogleCloudRetailV2ModelTrainingStateEnum trainingState;
    public GoogleCloudRetailV2ModelInput withTrainingState(GoogleCloudRetailV2ModelTrainingStateEnum trainingState) {
        this.trainingState = trainingState;
        return this;
    }
    
    /**
     * Required. The type of model e.g. `home-page`. Currently supported values: `recommended-for-you`, `others-you-may-like`, `frequently-bought-together`, `page-optimization`, `similar-items`, `buy-it-again`, `on-sale-items`, and `recently-viewed`(readonly value). This field together with optimization_objective describe model metadata to use to control model training and serving. See https://cloud.google.com/retail/docs/models for more details on what the model metadata control and which combination of parameters are valid. For invalid combinations of parameters (e.g. type = `frequently-bought-together` and optimization_objective = `ctr`), you receive an error 400 if you try to create/update a recommendation with this set of knobs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public GoogleCloudRetailV2ModelInput withType(String type) {
        this.type = type;
        return this;
    }
    
}
