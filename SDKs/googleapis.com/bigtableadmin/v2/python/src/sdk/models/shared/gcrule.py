"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import intersection as shared_intersection
from ..shared import union as shared_union
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GcRule:
    r"""Rule for determining which cells to delete during garbage collection."""
    
    intersection: Optional[shared_intersection.Intersection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intersection'), 'exclude': lambda f: f is None }})
    r"""A GcRule which deletes cells matching all of the given rules."""  
    max_age: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxAge'), 'exclude': lambda f: f is None }})
    r"""Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."""  
    max_num_versions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxNumVersions'), 'exclude': lambda f: f is None }})
    r"""Delete all cells in a column except the most recent N."""  
    union: Optional[shared_union.Union] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('union'), 'exclude': lambda f: f is None }})
    r"""A GcRule which deletes cells matching any of the given rules."""  
    