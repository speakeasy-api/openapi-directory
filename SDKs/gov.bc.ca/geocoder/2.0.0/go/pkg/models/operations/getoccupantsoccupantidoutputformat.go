// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum - Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
type GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum string

const (
	GetOccupantsOccupantIDOutputFormatLocationDescriptorEnumAny            GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum = "any"
	GetOccupantsOccupantIDOutputFormatLocationDescriptorEnumAccessPoint    GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum = "accessPoint"
	GetOccupantsOccupantIDOutputFormatLocationDescriptorEnumFrontDoorPoint GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum = "frontDoorPoint"
	GetOccupantsOccupantIDOutputFormatLocationDescriptorEnumParcelPoint    GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum = "parcelPoint"
	GetOccupantsOccupantIDOutputFormatLocationDescriptorEnumRooftopPoint   GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum = "rooftopPoint"
	GetOccupantsOccupantIDOutputFormatLocationDescriptorEnumRoutingPoint   GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum = "routingPoint"
)

func (e GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum) ToPointer() *GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum {
	return &e
}

func (e *GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "any":
		fallthrough
	case "accessPoint":
		fallthrough
	case "frontDoorPoint":
		fallthrough
	case "parcelPoint":
		fallthrough
	case "rooftopPoint":
		fallthrough
	case "routingPoint":
		*e = GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum: %v", v)
	}
}

// GetOccupantsOccupantIDOutputFormatOutputFormatEnum - Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
//
// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
type GetOccupantsOccupantIDOutputFormatOutputFormatEnum string

const (
	GetOccupantsOccupantIDOutputFormatOutputFormatEnumJSON    GetOccupantsOccupantIDOutputFormatOutputFormatEnum = "json"
	GetOccupantsOccupantIDOutputFormatOutputFormatEnumGeojson GetOccupantsOccupantIDOutputFormatOutputFormatEnum = "geojson"
	GetOccupantsOccupantIDOutputFormatOutputFormatEnumXhtml   GetOccupantsOccupantIDOutputFormatOutputFormatEnum = "xhtml"
	GetOccupantsOccupantIDOutputFormatOutputFormatEnumKml     GetOccupantsOccupantIDOutputFormatOutputFormatEnum = "kml"
	GetOccupantsOccupantIDOutputFormatOutputFormatEnumGml     GetOccupantsOccupantIDOutputFormatOutputFormatEnum = "gml"
	GetOccupantsOccupantIDOutputFormatOutputFormatEnumCsv     GetOccupantsOccupantIDOutputFormatOutputFormatEnum = "csv"
	GetOccupantsOccupantIDOutputFormatOutputFormatEnumShpz    GetOccupantsOccupantIDOutputFormatOutputFormatEnum = "shpz"
)

func (e GetOccupantsOccupantIDOutputFormatOutputFormatEnum) ToPointer() *GetOccupantsOccupantIDOutputFormatOutputFormatEnum {
	return &e
}

func (e *GetOccupantsOccupantIDOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "geojson":
		fallthrough
	case "xhtml":
		fallthrough
	case "kml":
		fallthrough
	case "gml":
		fallthrough
	case "csv":
		fallthrough
	case "shpz":
		*e = GetOccupantsOccupantIDOutputFormatOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsOccupantIDOutputFormatOutputFormatEnum: %v", v)
	}
}

// GetOccupantsOccupantIDOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
type GetOccupantsOccupantIDOutputFormatOutputSrsEnum int64

const (
	GetOccupantsOccupantIDOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  GetOccupantsOccupantIDOutputFormatOutputSrsEnum = 4326
	GetOccupantsOccupantIDOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    GetOccupantsOccupantIDOutputFormatOutputSrsEnum = 4269
	GetOccupantsOccupantIDOutputFormatOutputSrsEnumThreeThousandAndFive                  GetOccupantsOccupantIDOutputFormatOutputSrsEnum = 3005
	GetOccupantsOccupantIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  GetOccupantsOccupantIDOutputFormatOutputSrsEnum = 26907
	GetOccupantsOccupantIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  GetOccupantsOccupantIDOutputFormatOutputSrsEnum = 26908
	GetOccupantsOccupantIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   GetOccupantsOccupantIDOutputFormatOutputSrsEnum = 26909
	GetOccupantsOccupantIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    GetOccupantsOccupantIDOutputFormatOutputSrsEnum = 26910
	GetOccupantsOccupantIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven GetOccupantsOccupantIDOutputFormatOutputSrsEnum = 26911
)

func (e GetOccupantsOccupantIDOutputFormatOutputSrsEnum) ToPointer() *GetOccupantsOccupantIDOutputFormatOutputSrsEnum {
	return &e
}

func (e *GetOccupantsOccupantIDOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 4326:
		fallthrough
	case 4269:
		fallthrough
	case 3005:
		fallthrough
	case 26907:
		fallthrough
	case 26908:
		fallthrough
	case 26909:
		fallthrough
	case 26910:
		fallthrough
	case 26911:
		*e = GetOccupantsOccupantIDOutputFormatOutputSrsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsOccupantIDOutputFormatOutputSrsEnum: %v", v)
	}
}

type GetOccupantsOccupantIDOutputFormatRequest struct {
	// If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
	Brief *bool `queryParam:"style=form,explode=true,name=brief"`
	// Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
	LocationDescriptor *GetOccupantsOccupantIDOutputFormatLocationDescriptorEnum `queryParam:"style=form,explode=true,name=locationDescriptor"`
	// Occupant identifier
	OccupantID string `pathParam:"style=simple,explode=false,name=occupantID"`
	// Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
	//
	// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
	OutputFormat GetOccupantsOccupantIDOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *GetOccupantsOccupantIDOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
	// The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
	SetBack *int64 `queryParam:"style=form,explode=true,name=setBack"`
}

type GetOccupantsOccupantIDOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
