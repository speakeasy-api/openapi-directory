<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataBenefitsBenefitGroupBenefitItemBenefitDetail - Benefit detail
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataBenefitsBenefitGroupBenefitItemBenefitDetail
{
    /**
     * A textual explanation of what the benefit is
     * 
     * @var ?string $benefitDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('BenefitDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $benefitDescription = null;
    
    /**
     * Unique benefit identifier per organisation
     * 
     * @var ?string $benefitID
     */
	#[\JMS\Serializer\Annotation\SerializedName('BenefitID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $benefitID = null;
    
    /**
     * The name of the benefit
     * 
     * @var ?string $benefitName
     */
	#[\JMS\Serializer\Annotation\SerializedName('BenefitName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $benefitName = null;
    
    /**
     * Type that represents the nature of the benefit
     * 
     * @var ?string $benefitType
     */
	#[\JMS\Serializer\Annotation\SerializedName('BenefitType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $benefitType = null;
    
    /**
     * The value or values permissible for a specific benefit for an individual product representing a product characteristic
     * 
     * @var ?string $benefitValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('BenefitValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $benefitValue = null;
    
    /**
     * Counter for the criteria (e.g. number of DD)
     * 
     * @var ?int $counter
     */
	#[\JMS\Serializer\Annotation\SerializedName('Counter')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $counter = null;
    
    /**
     * $criteriaType
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataBenefitsBenefitGroupBenefitItemBenefitDetailCriteriaTypeEnum> $criteriaType
     */
	#[\JMS\Serializer\Annotation\SerializedName('CriteriaType')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetPersonalCurrentAccounts200ApplicationPrsOpenbankingOpendataV13PlusJsonDataBenefitsBenefitGroupBenefitItemBenefitDetailCriteriaTypeEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $criteriaType = null;
    
    /**
     * Is the benefit part of the default account
     * 
     * @var ?bool $defaultToAccounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('DefaultToAccounts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $defaultToAccounts = null;
    
    /**
     * Maximum amount for the criteria
     * 
     * @var ?string $maximumCriteria
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaximumCriteria')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maximumCriteria = null;
    
    /**
     * Minimum amount for the criteria
     * 
     * @var ?string $minimumCriteria
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumCriteria')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumCriteria = null;
    
    /**
     * If the benefit is temporal the end date is when the benefit is no longer applicable
     * 
     * @var ?string $promotionEndDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('PromotionEndDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $promotionEndDate = null;
    
    /**
     * If the benefit is temporal the start date is when the benefit comes into effect
     * 
     * @var ?string $promotionStartDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('PromotionStartDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $promotionStartDate = null;
    
	public function __construct()
	{
		$this->benefitDescription = null;
		$this->benefitID = null;
		$this->benefitName = null;
		$this->benefitType = null;
		$this->benefitValue = null;
		$this->counter = null;
		$this->criteriaType = null;
		$this->defaultToAccounts = null;
		$this->maximumCriteria = null;
		$this->minimumCriteria = null;
		$this->promotionEndDate = null;
		$this->promotionStartDate = null;
	}
}
