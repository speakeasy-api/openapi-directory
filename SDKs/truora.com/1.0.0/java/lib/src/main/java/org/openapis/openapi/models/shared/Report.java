/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Report - Represents reports
 */
public class Report {
    /**
     * name of the user who created the report
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_by")
    public String createdBy;

    public Report withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Amount of created checks. Returned only when a file is uploaded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_checks_count")
    public Long createdChecksCount;

    public Report withCreatedChecksCount(Long createdChecksCount) {
        this.createdChecksCount = createdChecksCount;
        return this;
    }
    
    /**
     * Report creation date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creation_date")
    public OffsetDateTime creationDate;

    public Report withCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    /**
     * Indicates whether the report has an associated file
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_data")
    public Boolean hasData;

    public Report withHasData(Boolean hasData) {
        this.hasData = hasData;
        return this;
    }
    
    /**
     * Report ID
     */
    @JsonProperty("id")
    public String id;

    public Report withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * number of invalid rows in the uploaded file. Returned only when a file is uploaded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalid_checks_count")
    public Long invalidChecksCount;

    public Report withInvalidChecksCount(Long invalidChecksCount) {
        this.invalidChecksCount = invalidChecksCount;
        return this;
    }
    
    /**
     * Report name
     */
    @JsonProperty("name")
    public String name;

    public Report withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Uploaded file row count. Returned only when a file is uploaded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;

    public Report withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * Latest modification date of the report
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("update_date")
    public OffsetDateTime updateDate;

    public Report withUpdateDate(OffsetDateTime updateDate) {
        this.updateDate = updateDate;
        return this;
    }
    
    public Report(@JsonProperty("creation_date") OffsetDateTime creationDate, @JsonProperty("id") String id, @JsonProperty("name") String name, @JsonProperty("update_date") OffsetDateTime updateDate) {
        this.creationDate = creationDate;
        this.id = id;
        this.name = name;
        this.updateDate = updateDate;
  }
}
