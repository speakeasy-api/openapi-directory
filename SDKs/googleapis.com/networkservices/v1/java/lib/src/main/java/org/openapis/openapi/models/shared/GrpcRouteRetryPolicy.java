/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GrpcRouteRetryPolicy - The specifications for retries.
 */
public class GrpcRouteRetryPolicy {
    /**
     * Specifies the allowed number of retries. This number must be &gt; 0. If not specified, default to 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numRetries")
    public Long numRetries;
    public GrpcRouteRetryPolicy withNumRetries(Long numRetries) {
        this.numRetries = numRetries;
        return this;
    }
    
    /**
     * - connect-failure: Router will retry on failures connecting to Backend Services, for example due to connection timeouts. - refused-stream: Router will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. - cancelled: Router will retry if the gRPC status code in the response header is set to cancelled - deadline-exceeded: Router will retry if the gRPC status code in the response header is set to deadline-exceeded - resource-exhausted: Router will retry if the gRPC status code in the response header is set to resource-exhausted - unavailable: Router will retry if the gRPC status code in the response header is set to unavailable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retryConditions")
    public String[] retryConditions;
    public GrpcRouteRetryPolicy withRetryConditions(String[] retryConditions) {
        this.retryConditions = retryConditions;
        return this;
    }
    
}
