"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import document as shared_document
from ..shared import recommendationtype_enum as shared_recommendationtype_enum
from ..shared import relevancelevel_enum as shared_relevancelevel_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecommendationData:
    r"""Information about the recommendation."""
    
    document: shared_document.Document = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document') }})  
    recommendation_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recommendationId') }})  
    relevance_level: Optional[shared_relevancelevel_enum.RelevanceLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relevanceLevel'), 'exclude': lambda f: f is None }})  
    relevance_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relevanceScore'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_recommendationtype_enum.RecommendationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    