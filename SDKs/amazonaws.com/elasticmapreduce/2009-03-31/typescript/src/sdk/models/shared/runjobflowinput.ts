/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Application } from "./application";
import { AutoTerminationPolicy } from "./autoterminationpolicy";
import { BootstrapActionConfig } from "./bootstrapactionconfig";
import { Configuration } from "./configuration";
import { JobFlowInstancesConfig } from "./jobflowinstancesconfig";
import { KerberosAttributes } from "./kerberosattributes";
import { ManagedScalingPolicy } from "./managedscalingpolicy";
import { PlacementGroupConfig } from "./placementgroupconfig";
import { RepoUpgradeOnBootEnum } from "./repoupgradeonbootenum";
import { ScaleDownBehaviorEnum } from "./scaledownbehaviorenum";
import { StepConfig } from "./stepconfig";
import { SupportedProductConfig } from "./supportedproductconfig";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 *  Input to the <a>RunJobFlow</a> operation.
 */
export class RunJobFlowInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalInfo" })
  additionalInfo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AmiVersion" })
  amiVersion?: string;

  @SpeakeasyMetadata({ elemType: Application })
  @Expose({ name: "Applications" })
  @Type(() => Application)
  applications?: Application[];

  @SpeakeasyMetadata()
  @Expose({ name: "AutoScalingRole" })
  autoScalingRole?: string;

  /**
   * An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. For alternative cluster termination options, see <a href="https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-termination.html">Control cluster termination</a>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AutoTerminationPolicy" })
  @Type(() => AutoTerminationPolicy)
  autoTerminationPolicy?: AutoTerminationPolicy;

  @SpeakeasyMetadata({ elemType: BootstrapActionConfig })
  @Expose({ name: "BootstrapActions" })
  @Type(() => BootstrapActionConfig)
  bootstrapActions?: BootstrapActionConfig[];

  @SpeakeasyMetadata({ elemType: Configuration })
  @Expose({ name: "Configurations" })
  @Type(() => Configuration)
  configurations?: Configuration[];

  @SpeakeasyMetadata()
  @Expose({ name: "CustomAmiId" })
  customAmiId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EbsRootVolumeSize" })
  ebsRootVolumeSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Instances" })
  @Type(() => JobFlowInstancesConfig)
  instances: JobFlowInstancesConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "JobFlowRole" })
  jobFlowRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KerberosAttributes" })
  @Type(() => KerberosAttributes)
  kerberosAttributes?: KerberosAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "LogEncryptionKmsKeyId" })
  logEncryptionKmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LogUri" })
  logUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ManagedScalingPolicy" })
  @Type(() => ManagedScalingPolicy)
  managedScalingPolicy?: ManagedScalingPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata({ elemType: SupportedProductConfig })
  @Expose({ name: "NewSupportedProducts" })
  @Type(() => SupportedProductConfig)
  newSupportedProducts?: SupportedProductConfig[];

  @SpeakeasyMetadata()
  @Expose({ name: "OSReleaseLabel" })
  osReleaseLabel?: string;

  @SpeakeasyMetadata({ elemType: PlacementGroupConfig })
  @Expose({ name: "PlacementGroupConfigs" })
  @Type(() => PlacementGroupConfig)
  placementGroupConfigs?: PlacementGroupConfig[];

  @SpeakeasyMetadata()
  @Expose({ name: "ReleaseLabel" })
  releaseLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RepoUpgradeOnBoot" })
  repoUpgradeOnBoot?: RepoUpgradeOnBootEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ScaleDownBehavior" })
  scaleDownBehavior?: ScaleDownBehaviorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityConfiguration" })
  securityConfiguration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceRole" })
  serviceRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StepConcurrencyLevel" })
  stepConcurrencyLevel?: number;

  @SpeakeasyMetadata({ elemType: StepConfig })
  @Expose({ name: "Steps" })
  @Type(() => StepConfig)
  steps?: StepConfig[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedProducts" })
  supportedProducts?: string[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "VisibleToAllUsers" })
  visibleToAllUsers?: boolean;
}
