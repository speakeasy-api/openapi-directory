// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FieldContentTypeEnum string

const (
	FieldContentTypeEnumString       FieldContentTypeEnum = "STRING"
	FieldContentTypeEnumNumber       FieldContentTypeEnum = "NUMBER"
	FieldContentTypeEnumPhoneNumber  FieldContentTypeEnum = "PHONE_NUMBER"
	FieldContentTypeEnumEmailAddress FieldContentTypeEnum = "EMAIL_ADDRESS"
	FieldContentTypeEnumName         FieldContentTypeEnum = "NAME"
)

func (e FieldContentTypeEnum) ToPointer() *FieldContentTypeEnum {
	return &e
}

func (e *FieldContentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STRING":
		fallthrough
	case "NUMBER":
		fallthrough
	case "PHONE_NUMBER":
		fallthrough
	case "EMAIL_ADDRESS":
		fallthrough
	case "NAME":
		*e = FieldContentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FieldContentTypeEnum: %v", v)
	}
}
