// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ObjectFilterStatusEnum - Status of the filter. NONE means the user has access to none of the objects. ALL means the user has access to all objects. ASSIGNED means the user has access to the objects with IDs in the objectIds list.
type ObjectFilterStatusEnum string

const (
	ObjectFilterStatusEnumNone     ObjectFilterStatusEnum = "NONE"
	ObjectFilterStatusEnumAssigned ObjectFilterStatusEnum = "ASSIGNED"
	ObjectFilterStatusEnumAll      ObjectFilterStatusEnum = "ALL"
)

func (e ObjectFilterStatusEnum) ToPointer() *ObjectFilterStatusEnum {
	return &e
}

func (e *ObjectFilterStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "ASSIGNED":
		fallthrough
	case "ALL":
		*e = ObjectFilterStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ObjectFilterStatusEnum: %v", v)
	}
}

// ObjectFilter - Object Filter.
type ObjectFilter struct {
	// Identifies what kind of resource this is. Value: the fixed string "dfareporting#objectFilter".
	Kind *string `json:"kind,omitempty"`
	// Applicable when status is ASSIGNED. The user has access to objects with these object IDs.
	ObjectIds []string `json:"objectIds,omitempty"`
	// Status of the filter. NONE means the user has access to none of the objects. ALL means the user has access to all objects. ASSIGNED means the user has access to the objects with IDs in the objectIds list.
	Status *ObjectFilterStatusEnum `json:"status,omitempty"`
}
