/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The pay runs' pay frequency
 */
export enum PayRunPayRunPayFrequencyEnum {
  Weekly = "Weekly",
  Monthly = "Monthly",
  TwoWeekly = "TwoWeekly",
  FourWeekly = "FourWeekly",
  Yearly = "Yearly",
}

/**
 * The pay runs' pay schedule
 */
export class PayRunPayRunPaySchedule extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

/**
 * The pay runs' proceeding pay run
 */
export class PayRunPayRunProceedingPayRun extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

export class PayRunPayRun extends SpeakeasyBase {
  /**
   * The pay runs' executed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Executed" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executed?: Date;

  /**
   * The pay runs' is supplementary
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsSupplementary" })
  isSupplementary?: boolean;

  /**
   * The pay runs' pay frequency
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PayFrequency" })
  payFrequency?: PayRunPayRunPayFrequencyEnum;

  /**
   * The pay runs' pay schedule
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaySchedule" })
  @Type(() => PayRunPayRunPaySchedule)
  paySchedule?: PayRunPayRunPaySchedule;

  /**
   * The pay runs' payment date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PaymentDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  paymentDate?: Date;

  /**
   * The pay runs' period end
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PeriodEnd" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  periodEnd?: Date;

  /**
   * The pay runs' period start
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PeriodStart" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  periodStart?: Date;

  /**
   * The pay runs' proceeding pay run
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProceedingPayRun" })
  @Type(() => PayRunPayRunProceedingPayRun)
  proceedingPayRun?: PayRunPayRunProceedingPayRun;

  /**
   * The pay runs' sequence
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Sequence" })
  sequence?: number;

  /**
   * The pay runs' tax period
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxPeriod" })
  taxPeriod?: number;

  /**
   * The pay runs' tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxYear" })
  taxYear?: number;
}

/**
 * The pay run object.
 */
export class PayRun extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "PayRun" })
  @Type(() => PayRunPayRun)
  payRun?: PayRunPayRun;
}
