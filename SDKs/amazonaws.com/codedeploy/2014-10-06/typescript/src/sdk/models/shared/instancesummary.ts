/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstanceStatusEnum } from "./instancestatusenum";
import { InstanceTypeEnum } from "./instancetypeenum";
import { LifecycleEvent } from "./lifecycleevent";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about an instance in a deployment.InstanceSummary is deprecated, use DeploymentTarget instead.
 */
export class InstanceSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "deploymentId" })
  deploymentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceId" })
  instanceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceType" })
  instanceType?: InstanceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata({ elemType: LifecycleEvent })
  @Expose({ name: "lifecycleEvents" })
  @Type(() => LifecycleEvent)
  lifecycleEvents?: LifecycleEvent[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: InstanceStatusEnum;
}
