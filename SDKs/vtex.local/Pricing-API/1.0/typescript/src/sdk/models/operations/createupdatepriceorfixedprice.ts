/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Period of time when the fixed price will be applied to the SKU.
 */
export class CreateUpdatePriceOrFixedPriceRequestBodyFixedPricesDateRange extends SpeakeasyBase {
  /**
   * Start date of the price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from: string;

  /**
   * End date of the price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to: string;
}

/**
 * Array with general information about the SKU's fixed prices.
 */
export class CreateUpdatePriceOrFixedPriceRequestBodyFixedPrices extends SpeakeasyBase {
  /**
   * Period of time when the fixed price will be applied to the SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateRange" })
  @Type(() => CreateUpdatePriceOrFixedPriceRequestBodyFixedPricesDateRange)
  dateRange?: CreateUpdatePriceOrFixedPriceRequestBodyFixedPricesDateRange;

  /**
   * SKU List Fixed Price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  /**
   * Minimum quantity of the SKU for the fixed price to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minQuantity" })
  minQuantity: number;

  /**
   * Trade policy name or ID that will have the fixed price configured.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tradePolicyId" })
  tradePolicyId: string;

  /**
   * Fixed price value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class CreateUpdatePriceOrFixedPriceRequestBody extends SpeakeasyBase {
  /**
   * SKU selling base price. If you decide to fill only the `basePrice` item, the `markup` and `costPrice` will be automatically generated to adapt to the number inserted in `basePrice`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "basePrice" })
  basePrice: number;

  /**
   * SKU selling cost price. If you decide to fill the `costPrice` item, you must also fill the `markup` and `basePrice` will be automatically generated based on both values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "costPrice" })
  costPrice?: number;

  @SpeakeasyMetadata({
    elemType: CreateUpdatePriceOrFixedPriceRequestBodyFixedPrices,
  })
  @Expose({ name: "fixedPrices" })
  @Type(() => CreateUpdatePriceOrFixedPriceRequestBodyFixedPrices)
  fixedPrices?: CreateUpdatePriceOrFixedPriceRequestBodyFixedPrices[];

  /**
   * SKU's suggested selling price.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice: number;

  /**
   * The profit percentage that is to be obtained from the sale of that SKU. If you decide to fill the `markup` item, you must also fill the `costPrice`. The `basePrice` will be automatically generated based on both values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "markup" })
  markup: number;
}

export class CreateUpdatePriceOrFixedPriceRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CreateUpdatePriceOrFixedPriceRequestBody;

  /**
   * SKU unique identifier number.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=itemId",
  })
  itemId: number;
}

export class CreateUpdatePriceOrFixedPriceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
