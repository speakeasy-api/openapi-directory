/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BackupRun - A BackupRun resource.
 */
public class BackupRun {
    /**
     * Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupKind")
    public BackupRunBackupKindEnum backupKind;
    public BackupRun withBackupKind(BackupRunBackupKindEnum backupKind) {
        this.backupKind = backupKind;
        return this;
    }
    
    /**
     * The description of this run, only applicable to on-demand backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public BackupRun withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Disk encryption configuration for an instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskEncryptionConfiguration")
    public DiskEncryptionConfiguration diskEncryptionConfiguration;
    public BackupRun withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration) {
        this.diskEncryptionConfiguration = diskEncryptionConfiguration;
        return this;
    }
    
    /**
     * Disk encryption status for an instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskEncryptionStatus")
    public DiskEncryptionStatus diskEncryptionStatus;
    public BackupRun withDiskEncryptionStatus(DiskEncryptionStatus diskEncryptionStatus) {
        this.diskEncryptionStatus = diskEncryptionStatus;
        return this;
    }
    
    /**
     * The time the backup operation completed in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;
    public BackupRun withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The time the run was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enqueuedTime")
    public String enqueuedTime;
    public BackupRun withEnqueuedTime(String enqueuedTime) {
        this.enqueuedTime = enqueuedTime;
        return this;
    }
    
    /**
     * Database instance operation error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public OperationError error;
    public BackupRun withError(OperationError error) {
        this.error = error;
        return this;
    }
    
    /**
     * The identifier for this backup run. Unique only for a specific Cloud SQL instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public BackupRun withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the database instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instance")
    public String instance;
    public BackupRun withInstance(String instance) {
        this.instance = instance;
        return this;
    }
    
    /**
     * This is always `sql#backupRun`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public BackupRun withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Location of the backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public BackupRun withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * The URI of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public BackupRun withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The time the backup operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;
    public BackupRun withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The status of this run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public BackupRunStatusEnum status;
    public BackupRun withStatus(BackupRunStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Backup time zone to prevent restores to an instance with a different time zone. Now relevant only for SQL Server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZone")
    public String timeZone;
    public BackupRun withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }
    
    /**
     * The type of this run; can be either "AUTOMATED" or "ON_DEMAND" or "FINAL". This field defaults to "ON_DEMAND" and is ignored, when specified for insert requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public BackupRunTypeEnum type;
    public BackupRun withType(BackupRunTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The start time of the backup window during which this the backup was attempted in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("windowStartTime")
    public String windowStartTime;
    public BackupRun withWindowStartTime(String windowStartTime) {
        this.windowStartTime = windowStartTime;
        return this;
    }
    
}
