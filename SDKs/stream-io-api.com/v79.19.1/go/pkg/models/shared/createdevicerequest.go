// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CreateDeviceRequestPushProviderEnum string

const (
	CreateDeviceRequestPushProviderEnumFirebase CreateDeviceRequestPushProviderEnum = "firebase"
	CreateDeviceRequestPushProviderEnumApn      CreateDeviceRequestPushProviderEnum = "apn"
	CreateDeviceRequestPushProviderEnumHuawei   CreateDeviceRequestPushProviderEnum = "huawei"
	CreateDeviceRequestPushProviderEnumXiaomi   CreateDeviceRequestPushProviderEnum = "xiaomi"
)

func (e *CreateDeviceRequestPushProviderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "firebase":
		fallthrough
	case "apn":
		fallthrough
	case "huawei":
		fallthrough
	case "xiaomi":
		*e = CreateDeviceRequestPushProviderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDeviceRequestPushProviderEnum: %s", s)
	}
}

type CreateDeviceRequest struct {
	ID               *string                              `json:"id,omitempty"`
	PushProvider     *CreateDeviceRequestPushProviderEnum `json:"push_provider,omitempty"`
	PushProviderName *string                              `json:"push_provider_name,omitempty"`
	// Represents chat user
	User map[string]interface{} `json:"user,omitempty"`
	// **Server-side only**. User ID which server acts upon
	UserID *string `json:"user_id,omitempty"`
}
