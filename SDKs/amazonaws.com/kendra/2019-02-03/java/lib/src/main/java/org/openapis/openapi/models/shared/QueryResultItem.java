/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QueryResultItem - &lt;p&gt;A single query result.&lt;/p&gt; &lt;p&gt;A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.&lt;/p&gt;
 */
public class QueryResultItem {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalAttributes")
    public AdditionalResultAttribute[] additionalAttributes;

    public QueryResultItem withAdditionalAttributes(AdditionalResultAttribute[] additionalAttributes) {
        this.additionalAttributes = additionalAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentAttributes")
    public DocumentAttribute[] documentAttributes;

    public QueryResultItem withDocumentAttributes(DocumentAttribute[] documentAttributes) {
        this.documentAttributes = documentAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentExcerpt")
    public TextWithHighlights documentExcerpt;

    public QueryResultItem withDocumentExcerpt(TextWithHighlights documentExcerpt) {
        this.documentExcerpt = documentExcerpt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentId")
    public String documentId;

    public QueryResultItem withDocumentId(String documentId) {
        this.documentId = documentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentTitle")
    public TextWithHighlights documentTitle;

    public QueryResultItem withDocumentTitle(TextWithHighlights documentTitle) {
        this.documentTitle = documentTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentURI")
    public String documentURI;

    public QueryResultItem withDocumentURI(String documentURI) {
        this.documentURI = documentURI;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeedbackToken")
    public String feedbackToken;

    public QueryResultItem withFeedbackToken(String feedbackToken) {
        this.feedbackToken = feedbackToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Format")
    public QueryResultFormatEnum format;

    public QueryResultItem withFormat(QueryResultFormatEnum format) {
        this.format = format;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;

    public QueryResultItem withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScoreAttributes")
    public ScoreAttributes scoreAttributes;

    public QueryResultItem withScoreAttributes(ScoreAttributes scoreAttributes) {
        this.scoreAttributes = scoreAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TableExcerpt")
    public TableExcerpt tableExcerpt;

    public QueryResultItem withTableExcerpt(TableExcerpt tableExcerpt) {
        this.tableExcerpt = tableExcerpt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public QueryResultTypeEnum type;

    public QueryResultItem withType(QueryResultTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public QueryResultItem(){}
}
