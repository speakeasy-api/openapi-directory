// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LambdaFunctionRecommendationFindingEnum string

const (
	LambdaFunctionRecommendationFindingEnumOptimized    LambdaFunctionRecommendationFindingEnum = "Optimized"
	LambdaFunctionRecommendationFindingEnumNotOptimized LambdaFunctionRecommendationFindingEnum = "NotOptimized"
	LambdaFunctionRecommendationFindingEnumUnavailable  LambdaFunctionRecommendationFindingEnum = "Unavailable"
)

func (e LambdaFunctionRecommendationFindingEnum) ToPointer() *LambdaFunctionRecommendationFindingEnum {
	return &e
}

func (e *LambdaFunctionRecommendationFindingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Optimized":
		fallthrough
	case "NotOptimized":
		fallthrough
	case "Unavailable":
		*e = LambdaFunctionRecommendationFindingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LambdaFunctionRecommendationFindingEnum: %v", v)
	}
}
