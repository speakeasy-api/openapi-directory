// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutBlockPublicAccessConfigurationXAmzTargetEnum
type PutBlockPublicAccessConfigurationXAmzTargetEnum string

const (
	PutBlockPublicAccessConfigurationXAmzTargetEnumElasticMapReducePutBlockPublicAccessConfiguration PutBlockPublicAccessConfigurationXAmzTargetEnum = "ElasticMapReduce.PutBlockPublicAccessConfiguration"
)

func (e *PutBlockPublicAccessConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ElasticMapReduce.PutBlockPublicAccessConfiguration":
		*e = PutBlockPublicAccessConfigurationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutBlockPublicAccessConfigurationXAmzTargetEnum: %s", s)
	}
}

type PutBlockPublicAccessConfigurationHeaders struct {
	XAmzAlgorithm     *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        PutBlockPublicAccessConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutBlockPublicAccessConfigurationRequest struct {
	Headers PutBlockPublicAccessConfigurationHeaders
	Request shared.PutBlockPublicAccessConfigurationInput `request:"mediaType=application/json"`
}

type PutBlockPublicAccessConfigurationResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	PutBlockPublicAccessConfigurationOutput map[string]interface{}
	StatusCode                              int
	RawResponse                             *http.Response
}
