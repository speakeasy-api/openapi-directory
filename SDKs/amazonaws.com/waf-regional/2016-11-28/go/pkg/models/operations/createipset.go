// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateIPSetXAmzTargetEnum
type CreateIPSetXAmzTargetEnum string

const (
	CreateIPSetXAmzTargetEnumAwswafRegional20161128CreateIPSet CreateIPSetXAmzTargetEnum = "AWSWAF_Regional_20161128.CreateIPSet"
)

func (e CreateIPSetXAmzTargetEnum) ToPointer() *CreateIPSetXAmzTargetEnum {
	return &e
}

func (e *CreateIPSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_Regional_20161128.CreateIPSet":
		*e = CreateIPSetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIPSetXAmzTargetEnum: %v", v)
	}
}

type CreateIPSetRequest struct {
	CreateIPSetRequest shared.CreateIPSetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         CreateIPSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateIPSetResponse struct {
	ContentType string
	// Success
	CreateIPSetResponse *shared.CreateIPSetResponse
	StatusCode          int
	RawResponse         *http.Response
	// WAFDisallowedNameException
	WAFDisallowedNameException interface{}
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFLimitsExceededException
	WAFLimitsExceededException interface{}
	// WAFStaleDataException
	WAFStaleDataException interface{}
}
