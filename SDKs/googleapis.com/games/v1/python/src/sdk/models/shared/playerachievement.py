"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PlayerAchievementAchievementStateEnum(str, Enum):
    r"""The state of the achievement."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    HIDDEN = 'HIDDEN'
    REVEALED = 'REVEALED'
    UNLOCKED = 'UNLOCKED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlayerAchievement:
    r"""An achievement object."""
    
    achievement_state: Optional[PlayerAchievementAchievementStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('achievementState'), 'exclude': lambda f: f is None }})
    r"""The state of the achievement."""  
    current_steps: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentSteps'), 'exclude': lambda f: f is None }})
    r"""The current steps for an incremental achievement."""  
    experience_points: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('experiencePoints'), 'exclude': lambda f: f is None }})
    r"""Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished."""  
    formatted_current_steps_string: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formattedCurrentStepsString'), 'exclude': lambda f: f is None }})
    r"""The current steps for an incremental achievement as a string."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the achievement."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`."""  
    last_updated_timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastUpdatedTimestamp'), 'exclude': lambda f: f is None }})
    r"""The timestamp of the last modification to this achievement's state."""  
    