/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateDomainRequestBody {
    /**
     * The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications. If specified as an empty string, it will clear any existing value. You must set up a policy on the DeadLetterQueue for the SendMessage operation to enable Amazon Connect Customer Profiles to send messages to the DeadLetterQueue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeadLetterQueueUrl")
    public String deadLetterQueueUrl;
    public UpdateDomainRequestBody withDeadLetterQueueUrl(String deadLetterQueueUrl) {
        this.deadLetterQueueUrl = deadLetterQueueUrl;
        return this;
    }
    
    /**
     * The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage. If specified as an empty string, it will clear any existing value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultEncryptionKey")
    public String defaultEncryptionKey;
    public UpdateDomainRequestBody withDefaultEncryptionKey(String defaultEncryptionKey) {
        this.defaultEncryptionKey = defaultEncryptionKey;
        return this;
    }
    
    /**
     * The default number of days until the data within the domain expires.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultExpirationDays")
    public Long defaultExpirationDays;
    public UpdateDomainRequestBody withDefaultExpirationDays(Long defaultExpirationDays) {
        this.defaultExpirationDays = defaultExpirationDays;
        return this;
    }
    
    /**
     * The flag that enables the matching process of duplicate profiles.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Matching")
    public UpdateDomainRequestBodyMatching matching;
    public UpdateDomainRequestBody withMatching(UpdateDomainRequestBodyMatching matching) {
        this.matching = matching;
        return this;
    }
    
    /**
     * The tags used to organize, track, or control access for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;
    public UpdateDomainRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
}
