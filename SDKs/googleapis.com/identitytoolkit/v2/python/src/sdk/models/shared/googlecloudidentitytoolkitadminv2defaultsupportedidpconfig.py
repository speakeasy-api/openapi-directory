"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudidentitytoolkitadminv2applesigninconfig as shared_googlecloudidentitytoolkitadminv2applesigninconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIdentitytoolkitAdminV2DefaultSupportedIdpConfig:
    r"""Configurations options for authenticating with a the standard set of Identity Toolkit-trusted IDPs."""
    
    apple_sign_in_config: Optional[shared_googlecloudidentitytoolkitadminv2applesigninconfig.GoogleCloudIdentitytoolkitAdminV2AppleSignInConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appleSignInConfig'), 'exclude': lambda f: f is None }})
    r"""Additional config for SignInWithApple."""  
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientId'), 'exclude': lambda f: f is None }})
    r"""OAuth client ID."""  
    client_secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientSecret'), 'exclude': lambda f: f is None }})
    r"""OAuth client secret."""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""True if allows the user to sign in with the provider."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the DefaultSupportedIdpConfig resource, for example: \\"projects/my-awesome-project/defaultSupportedIdpConfigs/google.com\\" """  
    