<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdatePipelineRequestBody
{
    /**
     * <p>The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.</p> <p>If you use either <code>s3</code> or <code>s3-aws-kms</code> as your <code>Encryption:Mode</code>, you don't need to provide a key with your job because a default key, known as an AWS-KMS key, is created for you automatically. You need to provide an AWS-KMS key only if you want to use a non-default AWS-KMS key, or if you are using an <code>Encryption:Mode</code> of <code>aes-cbc-pkcs7</code>, <code>aes-ctr</code>, or <code>aes-gcm</code>.</p>
     * 
     * @var ?string $awsKmsKeyArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('AwsKmsKeyArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $awsKmsKeyArn = null;
    
    /**
     * The <code>PipelineOutputConfig</code> structure.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdatePipelineRequestBodyContentConfig $contentConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('ContentConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdatePipelineRequestBodyContentConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdatePipelineRequestBodyContentConfig $contentConfig = null;
    
    /**
     * The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
     * 
     * @var ?string $inputBucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('InputBucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $inputBucket = null;
    
    /**
     * <p>The name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.</p> <p>Constraints: Maximum 40 characters</p>
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * <p>The Amazon Simple Notification Service (Amazon SNS) topic or topics to notify in order to report job status.</p> <important> <p>To receive notifications, you must also subscribe to the new topic in the Amazon SNS console.</p> </important>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdatePipelineRequestBodyNotifications $notifications
     */
	#[\JMS\Serializer\Annotation\SerializedName('Notifications')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdatePipelineRequestBodyNotifications')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdatePipelineRequestBodyNotifications $notifications = null;
    
    /**
     * The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
     * 
     * @var ?string $role
     */
	#[\JMS\Serializer\Annotation\SerializedName('Role')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $role = null;
    
    /**
     * The <code>PipelineOutputConfig</code> structure.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdatePipelineRequestBodyThumbnailConfig $thumbnailConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('ThumbnailConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdatePipelineRequestBodyThumbnailConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdatePipelineRequestBodyThumbnailConfig $thumbnailConfig = null;
    
	public function __construct()
	{
		$this->awsKmsKeyArn = null;
		$this->contentConfig = null;
		$this->inputBucket = null;
		$this->name = null;
		$this->notifications = null;
		$this->role = null;
		$this->thumbnailConfig = null;
	}
}
