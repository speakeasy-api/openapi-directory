"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DynamicGroupStatusStatusEnum(str, Enum):
    r"""Status of the dynamic group."""
    STATUS_UNSPECIFIED = 'STATUS_UNSPECIFIED'
    UP_TO_DATE = 'UP_TO_DATE'
    UPDATING_MEMBERSHIPS = 'UPDATING_MEMBERSHIPS'
    INVALID_QUERY = 'INVALID_QUERY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DynamicGroupStatus:
    r"""The current status of a dynamic group along with timestamp."""
    
    status: Optional[DynamicGroupStatusStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the dynamic group."""  
    status_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusTime'), 'exclude': lambda f: f is None }})
    r"""The latest time at which the dynamic group is guaranteed to be in the given status. If status is `UP_TO_DATE`, the latest time at which the dynamic group was confirmed to be up-to-date. If status is `UPDATING_MEMBERSHIPS`, the time at which dynamic group was created."""  
    