"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PageSummary:
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Unique identifier for the page."""  
    is_static: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isStatic') }})
    r"""True if this page is static and doesn't have any dynamic content to load.
    
    Static pages don't need to go back to the page endpoint to load page content
    instead the page summary loaded with the sitemap should be enough to determine
    the page template type and render based on this.
    """  
    is_system_page: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSystemPage') }})
    r"""True if this page is a system page type.
    
    **DEPRECATED** This property doesn't have any real use in client applications
    anymore so shouldn't be used. It especially shouldn't be used to determine if
    a page is static or not. Use the `isStatic` property instead.
    """  
    path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path') }})
    r"""Unique path for the page."""  
    template: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('template') }})
    r"""Identifier for of the page template to render this page."""  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""Title of the page."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Key used to lookup a known page."""  
    