// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ComparisonOperatorEnum - <p>A comparison operator is an enumeration of several operations:</p> <ul> <li><code>EQ</code> for <em>equal</em>.</li> <li><code>NE</code> for <em>not equal</em>.</li> <li><code>IN</code> checks for exact matches.</li> <li><code>LE</code> for <em>less than or equal to</em>.</li> <li><code>LT</code> for <em>less than</em>.</li> <li><code>GE</code> for <em>greater than or equal to</em>.</li> <li><code>GT</code> for <em>greater than</em>.</li> <li><code>BETWEEN</code> for <em>between</em>.</li> <li><code>NOT_NULL</code> for <em>exists</em>.</li> <li><code>NULL</code> for <em>not exists</em>.</li> <li><code>CONTAINS</code> for substring or value in a set.</li> <li><code>NOT_CONTAINS</code> for absence of a substring or absence of a value in a set.</li> <li><code>BEGINS_WITH</code> for a substring prefix.</li> </ul> <p>Scan operations support all available comparison operators.</p> <p>Query operations support a subset of the available comparison operators: EQ, LE, LT, GE, GT, BETWEEN, and BEGINS_WITH.</p>
type ComparisonOperatorEnum string

const (
	ComparisonOperatorEnumEq          ComparisonOperatorEnum = "EQ"
	ComparisonOperatorEnumNe          ComparisonOperatorEnum = "NE"
	ComparisonOperatorEnumIn          ComparisonOperatorEnum = "IN"
	ComparisonOperatorEnumLe          ComparisonOperatorEnum = "LE"
	ComparisonOperatorEnumLt          ComparisonOperatorEnum = "LT"
	ComparisonOperatorEnumGe          ComparisonOperatorEnum = "GE"
	ComparisonOperatorEnumGt          ComparisonOperatorEnum = "GT"
	ComparisonOperatorEnumBetween     ComparisonOperatorEnum = "BETWEEN"
	ComparisonOperatorEnumNotNull     ComparisonOperatorEnum = "NOT_NULL"
	ComparisonOperatorEnumNull        ComparisonOperatorEnum = "NULL"
	ComparisonOperatorEnumContains    ComparisonOperatorEnum = "CONTAINS"
	ComparisonOperatorEnumNotContains ComparisonOperatorEnum = "NOT_CONTAINS"
	ComparisonOperatorEnumBeginsWith  ComparisonOperatorEnum = "BEGINS_WITH"
)

func (e *ComparisonOperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EQ":
		fallthrough
	case "NE":
		fallthrough
	case "IN":
		fallthrough
	case "LE":
		fallthrough
	case "LT":
		fallthrough
	case "GE":
		fallthrough
	case "GT":
		fallthrough
	case "BETWEEN":
		fallthrough
	case "NOT_NULL":
		fallthrough
	case "NULL":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "NOT_CONTAINS":
		fallthrough
	case "BEGINS_WITH":
		*e = ComparisonOperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ComparisonOperatorEnum: %s", s)
	}
}
