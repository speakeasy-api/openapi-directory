/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostCustomObjectDefinitionsRequestDefinitionRelationships {
    /**
     * The cardinality of the relationship from this object to another object.
     * 
     * Only the `manyToOne` cardinality can be used when creating relationships.  A relationship with `oneToMany` cardinality is created implicitly when a `manyToOne` relationship is created.
     * 
     * A custom object definition can have a maximum of 2 `manyToOne` relationships.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardinality")
    public PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum cardinality;
    public PostCustomObjectDefinitionsRequestDefinitionRelationships withCardinality(PostCustomObjectDefinitionsRequestDefinitionRelationshipsCardinalityEnum cardinality) {
        this.cardinality = cardinality;
        return this;
    }
    
    /**
     * Field mappings in the form of `&lt;this-object-field-name&gt;`: `&lt;other-object-field-name&gt;`. Usually the `&lt;other-object-field-name&gt;` can only be the `Id` field of the related object. Two exceptions are Subscription Name and Rate Plan Charge Number as both of them are unique.
     * 
     */
    @JsonProperty("fields")
    public java.util.Map<String, String> fields;
    public PostCustomObjectDefinitionsRequestDefinitionRelationships withFields(java.util.Map<String, String> fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The namespace where the related object is located
     */
    @JsonProperty("namespace")
    public String namespace;
    public PostCustomObjectDefinitionsRequestDefinitionRelationships withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }
    
    /**
     * The API name of the related object
     */
    @JsonProperty("object")
    public String object;
    public PostCustomObjectDefinitionsRequestDefinitionRelationships withObject(String object) {
        this.object = object;
        return this;
    }
    
    /**
     * Specifies contraints to apply to custom object records.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordConstraints")
    public PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraints recordConstraints;
    public PostCustomObjectDefinitionsRequestDefinitionRelationships withRecordConstraints(PostCustomObjectDefinitionsRequestDefinitionRelationshipsRecordConstraints recordConstraints) {
        this.recordConstraints = recordConstraints;
        return this;
    }
    
}
