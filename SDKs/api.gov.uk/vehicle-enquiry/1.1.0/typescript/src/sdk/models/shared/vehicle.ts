/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * MOT Status of the vehicle
 */
export enum VehicleMotStatusEnum {
  NoDetailsHeldByDVLA = "No details held by DVLA",
  NoResultsReturned = "No results returned",
  NotValid = "Not valid",
  Valid = "Valid",
}

/**
 * Tax status of the vehicle
 */
export enum VehicleTaxStatusEnum {
  NotTaxedForOnRoadUse = "Not Taxed for on Road Use",
  Sorn = "SORN",
  Taxed = "Taxed",
  Untaxed = "Untaxed",
}

/**
 * Successful response
 */
export class Vehicle extends SpeakeasyBase {
  /**
   * Additional Rate of Tax End Date, format: YYYY-MM-DD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "artEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  artEndDate?: Date;

  /**
   * Carbon Dioxide emissions in grams per kilometre
   */
  @SpeakeasyMetadata()
  @Expose({ name: "co2Emissions" })
  co2Emissions?: number;

  /**
   * Vehicle colour
   */
  @SpeakeasyMetadata()
  @Expose({ name: "colour" })
  colour?: string;

  /**
   * Date of last V5C issued
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateOfLastV5CIssued" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateOfLastV5CIssued?: Date;

  /**
   * Engine capacity in cubic centimetres
   */
  @SpeakeasyMetadata()
  @Expose({ name: "engineCapacity" })
  engineCapacity?: number;

  /**
   * Euro Status (Dealer / Customer Provided (new vehicles))
   */
  @SpeakeasyMetadata()
  @Expose({ name: "euroStatus" })
  euroStatus?: string;

  /**
   * Fuel type (Method of Propulsion)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fuelType" })
  fuelType?: string;

  /**
   * Vehicle make
   */
  @SpeakeasyMetadata()
  @Expose({ name: "make" })
  make?: string;

  /**
   * True only if vehicle has been export marked
   */
  @SpeakeasyMetadata()
  @Expose({ name: "markedForExport" })
  markedForExport?: boolean;

  /**
   * Month of First DVLA Registration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "monthOfFirstDvlaRegistration" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  monthOfFirstDvlaRegistration?: Date;

  /**
   * Month of First Registration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "monthOfFirstRegistration" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  monthOfFirstRegistration?: Date;

  /**
   * Mot Expiry Date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "motExpiryDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  motExpiryDate?: Date;

  /**
   * MOT Status of the vehicle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "motStatus" })
  motStatus?: VehicleMotStatusEnum;

  /**
   * Real Driving Emissions value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "realDrivingEmissions" })
  realDrivingEmissions?: string;

  /**
   * Registration number of the vehicle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationNumber" })
  registrationNumber: string;

  /**
   * Revenue weight in kilograms
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revenueWeight" })
  revenueWeight?: number;

  /**
   * Date of tax liablity, Used in calculating licence information presented to user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxDueDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  taxDueDate?: Date;

  /**
   * Tax status of the vehicle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxStatus" })
  taxStatus?: VehicleTaxStatusEnum;

  /**
   * Vehicle Type Approval Category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "typeApproval" })
  typeApproval?: string;

  /**
   * Vehicle wheel plan
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wheelplan" })
  wheelplan?: string;

  /**
   * Year of Manufacture
   */
  @SpeakeasyMetadata()
  @Expose({ name: "yearOfManufacture" })
  yearOfManufacture?: number;
}
