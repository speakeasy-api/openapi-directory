// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateUserHeaders struct {
	APIKey      string `header:"style=simple,explode=false,name=Api-Key"`
	APIUsername string `header:"style=simple,explode=false,name=Api-Username"`
}

type CreateUserRequestBody struct {
	// This param requires an api key in the request header
	// or it will be ignored
	Active      *bool                  `json:"active,omitempty"`
	Approved    *bool                  `json:"approved,omitempty"`
	Email       string                 `json:"email"`
	ExternalIds map[string]interface{} `json:"external_ids,omitempty"`
	Name        string                 `json:"name"`
	Password    string                 `json:"password"`
	UserFields1 *bool                  `json:"user_fields[1],omitempty"`
	Username    string                 `json:"username"`
}

type CreateUserRequest struct {
	Headers CreateUserHeaders
	Request *CreateUserRequestBody `request:"mediaType=application/json"`
}

// CreateUser200ApplicationJSON - user created
type CreateUser200ApplicationJSON struct {
	Active  bool   `json:"active"`
	Message string `json:"message"`
	Success bool   `json:"success"`
	UserID  *int64 `json:"user_id,omitempty"`
}

type CreateUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// user created
	CreateUser200ApplicationJSONObject *CreateUser200ApplicationJSON
}
