"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tableborderproperties as shared_tableborderproperties
from ..shared import tablerange as shared_tablerange
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdateTableBorderPropertiesRequestBorderPositionEnum(str, Enum):
    r"""The border position in the table range the updates should apply to. If a border position is not specified, the updates will apply to all borders in the table range."""
    ALL = 'ALL'
    BOTTOM = 'BOTTOM'
    INNER = 'INNER'
    INNER_HORIZONTAL = 'INNER_HORIZONTAL'
    INNER_VERTICAL = 'INNER_VERTICAL'
    LEFT = 'LEFT'
    OUTER = 'OUTER'
    RIGHT = 'RIGHT'
    TOP = 'TOP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateTableBorderPropertiesRequest:
    r"""Updates the properties of the table borders in a Table."""
    
    border_position: Optional[UpdateTableBorderPropertiesRequestBorderPositionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('borderPosition'), 'exclude': lambda f: f is None }})
    r"""The border position in the table range the updates should apply to. If a border position is not specified, the updates will apply to all borders in the table range."""  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields that should be updated. At least one field must be specified. The root `tableBorderProperties` is implied and should not be specified. A single `\\"*\\"` can be used as short-hand for listing every field. For example to update the table border solid fill color, set `fields` to `\\"tableBorderFill.solidFill.color\\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset."""  
    object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectId'), 'exclude': lambda f: f is None }})
    r"""The object ID of the table."""  
    table_border_properties: Optional[shared_tableborderproperties.TableBorderProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableBorderProperties'), 'exclude': lambda f: f is None }})
    r"""The border styling properties of the TableBorderCell."""  
    table_range: Optional[shared_tablerange.TableRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableRange'), 'exclude': lambda f: f is None }})
    r"""A table range represents a reference to a subset of a table. It's important to note that the cells specified by a table range do not necessarily form a rectangle. For example, let's say we have a 3 x 3 table where all the cells of the last row are merged together. The table looks like this: [ ] A table range with location = (0, 0), row span = 3 and column span = 2 specifies the following cells: x x [ x x x ]"""  
    