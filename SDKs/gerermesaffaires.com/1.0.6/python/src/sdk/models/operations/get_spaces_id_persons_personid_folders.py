"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import folder as shared_folder
from typing import Optional


@dataclasses.dataclass
class GetSpacesIDPersonsPersonIDFoldersRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    person_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'personId', 'style': 'simple', 'explode': False }})
    r"""Id of the person to get folders"""  
    range: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Range', 'style': 'form', 'explode': True }})
    r"""index range of the results"""  
    

@dataclasses.dataclass
class GetSpacesIDPersonsPersonIDFoldersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_id_persons_person_id_folders_200_application_json_all_ofs: Optional[list[shared_folder.Folder]] = dataclasses.field(default=None)
    r"""A list of folders"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    