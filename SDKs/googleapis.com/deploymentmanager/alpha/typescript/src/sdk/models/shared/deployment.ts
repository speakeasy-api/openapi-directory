/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Credential } from "./credential";
import { DeploymentLabelEntry } from "./deploymentlabelentry";
import { DeploymentOutputEntry } from "./deploymentoutputentry";
import { DeploymentUpdate } from "./deploymentupdate";
import { Operation } from "./operation";
import { TargetConfiguration } from "./targetconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class Deployment extends SpeakeasyBase {
  /**
   * The credential used by Deployment Manager and TypeProvider. Only one of the options is permitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credential" })
  @Type(() => Credential)
  credential?: Credential;

  /**
   * An optional user-provided description of the deployment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Provides a fingerprint to use in requests to modify a deployment, such as `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided with `update()`, `stop()`, and `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a `get()` request to a deployment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Output only. Creation timestamp in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "insertTime" })
  insertTime?: string;

  /**
   * Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
   */
  @SpeakeasyMetadata({ elemType: DeploymentLabelEntry })
  @Expose({ name: "labels" })
  @Type(() => DeploymentLabelEntry)
  labels?: DeploymentLabelEntry[];

  /**
   * Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manifest" })
  manifest?: string;

  /**
   * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zonalOperations` resource. For more information, read Global, Regional, and Zonal Resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operation" })
  @Type(() => Operation)
  operation?: Operation;

  /**
   * Output only. List of outputs from the last manifest that deployed successfully.
   */
  @SpeakeasyMetadata({ elemType: DeploymentOutputEntry })
  @Expose({ name: "outputs" })
  @Type(() => DeploymentOutputEntry)
  outputs?: DeploymentOutputEntry[];

  /**
   * Output only. Server defined URL for the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "target" })
  @Type(() => TargetConfiguration)
  target?: TargetConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "update" })
  @Type(() => DeploymentUpdate)
  update?: DeploymentUpdate;

  /**
   * Output only. Update timestamp in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
