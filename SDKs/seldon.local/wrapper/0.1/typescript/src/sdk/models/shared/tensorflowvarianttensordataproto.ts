/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TensorflowTensorProto } from "./tensorflowtensorproto";
import { Expose, Type } from "class-transformer";

/**
 * Protocol buffer representing the serialization format of DT_VARIANT tensors.
 */
export class TensorflowVariantTensorDataProto extends SpeakeasyBase {
  /**
   * Portions of the object that are not Tensors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: string;

  /**
   * Tensors contained within objects being serialized.
   */
  @SpeakeasyMetadata({ elemType: TensorflowTensorProto })
  @Expose({ name: "tensors" })
  @Type(() => TensorflowTensorProto)
  tensors?: TensorflowTensorProto[];

  /**
   * Name of the type of objects being serialized.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type_name" })
  typeName?: string;
}
