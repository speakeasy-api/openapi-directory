<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Buyongoogleprograms 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Reactivates the BoG program in your Merchant Center account. Moves the program to the active state when allowed, for example, when paused. This method is only available to selected merchants.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateResponse
     */
	public function contentBuyongoogleprogramsActivate(
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/buyongoogleprograms/{regionCode}/activate', \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsActivateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Retrieves a status of the BoG program for your Merchant Center account.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetResponse
     */
	public function contentBuyongoogleprogramsGet(
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/buyongoogleprograms/{regionCode}', \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->buyOnGoogleProgramStatus = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BuyOnGoogleProgramStatus', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Onboards the BoG program in your Merchant Center account. By using this method, you agree to the [Terms of Service](https://merchants.google.com/mc/termsofservice/transactions/US/latest). Calling this method is only possible if the authenticated account is the same as the merchant id in the request. Calling this method multiple times will only accept Terms of Service if the latest version is not currently signed.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardResponse
     */
	public function contentBuyongoogleprogramsOnboard(
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/buyongoogleprograms/{regionCode}/onboard', \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "onboardBuyOnGoogleProgramRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsOnboardResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Updates the status of the BoG program for your Merchant Center account.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchResponse
     */
	public function contentBuyongoogleprogramsPatch(
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/buyongoogleprograms/{regionCode}', \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "buyOnGoogleProgramStatusInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->buyOnGoogleProgramStatus = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BuyOnGoogleProgramStatus', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Pauses the BoG program in your Merchant Center account. This method is only available to selected merchants.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseResponse
     */
	public function contentBuyongoogleprogramsPause(
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/buyongoogleprograms/{regionCode}/pause', \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsPauseResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Requests review and then activates the BoG program in your Merchant Center account for the first time. Moves the program to the REVIEW_PENDING state. This method is only available to selected merchants.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewResponse
     */
	public function contentBuyongoogleprogramsRequestreview(
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/{merchantId}/buyongoogleprograms/{regionCode}/requestreview', \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ContentBuyongoogleprogramsRequestreviewResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
}