"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import appointmentphonenumber as shared_appointmentphonenumber
from ..shared import detailedservicelocation as shared_detailedservicelocation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DetailedService:
    r"""Detailed information of a facility service."""
    
    appointment_leadin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appointment_leadin'), 'exclude': lambda f: f is None }})
    r"""Additional appointment information. May contain html / string formatting characters."""  
    appointment_phones: Optional[list[shared_appointmentphonenumber.AppointmentPhoneNumber]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appointment_phones'), 'exclude': lambda f: f is None }})
    r"""List of phone numbers related to scheduling appointments for this service."""  
    description_facility: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description_facility'), 'exclude': lambda f: f is None }})
    r"""Deprecated until further notice."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Service name."""  
    online_scheduling_available: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('online_scheduling_available'), 'exclude': lambda f: f is None }})
    r"""String detailing online scheduling availability."""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""URL to a page with additional details for this service within the associated facility's health care system."""  
    referral_required: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referral_required'), 'exclude': lambda f: f is None }})
    r"""String detailing if referrals are required for the service."""  
    service_locations: Optional[list[shared_detailedservicelocation.DetailedServiceLocation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_locations'), 'exclude': lambda f: f is None }})
    r"""List of service locations."""  
    walk_ins_accepted: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('walk_ins_accepted'), 'exclude': lambda f: f is None }})
    r"""String detailing if walk-ins are accepted for the service."""  
    