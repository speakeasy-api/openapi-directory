// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateDBSubnetGroupActionEnum
type GETCreateDBSubnetGroupActionEnum string

const (
	GETCreateDBSubnetGroupActionEnumCreateDbSubnetGroup GETCreateDBSubnetGroupActionEnum = "CreateDBSubnetGroup"
)

func (e GETCreateDBSubnetGroupActionEnum) ToPointer() *GETCreateDBSubnetGroupActionEnum {
	return &e
}

func (e *GETCreateDBSubnetGroupActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateDBSubnetGroup":
		*e = GETCreateDBSubnetGroupActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDBSubnetGroupActionEnum: %v", v)
	}
}

// GETCreateDBSubnetGroupVersionEnum
type GETCreateDBSubnetGroupVersionEnum string

const (
	GETCreateDBSubnetGroupVersionEnumTwoThousandAndThirteen0212 GETCreateDBSubnetGroupVersionEnum = "2013-02-12"
)

func (e GETCreateDBSubnetGroupVersionEnum) ToPointer() *GETCreateDBSubnetGroupVersionEnum {
	return &e
}

func (e *GETCreateDBSubnetGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-02-12":
		*e = GETCreateDBSubnetGroupVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDBSubnetGroupVersionEnum: %v", v)
	}
}

type GETCreateDBSubnetGroupRequest struct {
	Action                   GETCreateDBSubnetGroupActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBSubnetGroupDescription string                            `queryParam:"style=form,explode=true,name=DBSubnetGroupDescription"`
	DBSubnetGroupName        string                            `queryParam:"style=form,explode=true,name=DBSubnetGroupName"`
	SubnetIds                []string                          `queryParam:"style=form,explode=true,name=SubnetIds"`
	Version                  GETCreateDBSubnetGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm            *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateDBSubnetGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
