/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetUsersSelectedUserSshKeysSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey?: string;

  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2?: string;
}

export class GetUsersSelectedUserSshKeysRequest extends SpeakeasyBase {
  /**
   * This can either be the UUID of the account, surrounded by curly-braces, for
   *
   * @remarks
   * example: `{account UUID}`, OR an Atlassian Account ID.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=selected_user",
  })
  selectedUser: string;
}

export class GetUsersSelectedUserSshKeysResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * If the specified user does not exist
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * A list of the SSH keys associated with the account.
   */
  @SpeakeasyMetadata()
  paginatedSshUserKeys?: shared.PaginatedSshUserKeys;
}
