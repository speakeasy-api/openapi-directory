/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The UserDTO Class.
 *
 * @remarks
 * Contains relevant fields of User DTO by masking actual User entity's fields in application.
 *
 */
export class UserDTO extends SpeakeasyBase {
  /**
   * Account number of the user.It can be any stakeholder of the application.even can be a gym.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountNumber" })
  accountNumber?: string;

  /**
   * Entity number that make a relationship with BOX API DB.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "externalEntityNumber" })
  externalEntityNumber?: string;

  /**
   * Gaurdian of the this user if he/she is under 18 years old.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "guardian" })
  guardian?: number;

  /**
   * If this user is a gym, then the gym number.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gymNumber" })
  gymNumber?: string;

  /**
   * If Someone introduced this user to the system, then that user's UserId.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "introduceBy" })
  introduceBy?: number;

  /**
   * Name of the user.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Unique number maintain by application to idenify user.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Type of the user.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "typeId" })
  typeId?: number;

  /**
   * Indentity number(primary key) for user object. Generated in DB table when inserting a record.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: number;
}
