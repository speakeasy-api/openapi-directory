<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Version - Version object
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Version
{
    /**
     * Dubbed name of version
     * 
     * @var ?string $codename
     */
	#[\JMS\Serializer\Annotation\SerializedName('codename')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $codename = null;
    
    /**
     * Semantic Version to use as the base fork
     * 
     * @var string $from
     */
	#[\JMS\Serializer\Annotation\SerializedName('from')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $from;
    
	#[\JMS\Serializer\Annotation\SerializedName('is_beta')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isBeta = null;
    
    /**
     * Should this be deprecated? Only allowed in PUT operations
     * 
     * @var ?bool $isDeprecated
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_deprecated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isDeprecated = null;
    
    /**
     * Should this be publically accessible?
     * 
     * @var ?bool $isHidden
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_hidden')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isHidden = null;
    
    /**
     * Should this be the **main** version
     * 
     * @var ?bool $isStable
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_stable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isStable = null;
    
    /**
     * Semantic Version
     * 
     * @var string $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $version;
    
	public function __construct()
	{
		$this->codename = null;
		$this->from = "";
		$this->isBeta = null;
		$this->isDeprecated = null;
		$this->isHidden = null;
		$this->isStable = null;
		$this->version = "";
	}
}
