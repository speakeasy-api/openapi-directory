// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.
type InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnumCad InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnumChf InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnumEur InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnumGbp InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnumJpy InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnumUsd InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum - The type of the route this Declined Transaction came through.
type InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnumAccountNumber InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum = "account_number"
	InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnumCard          InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum = "card"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_number":
		fallthrough
	case "card":
		*e = InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum: %v", v)
	}
}

// InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum - Why the ACH transfer was declined.
type InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum string

const (
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumAchRouteCanceled             InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "ach_route_canceled"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumAchRouteDisabled             InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "ach_route_disabled"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumBreachesLimit                InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "breaches_limit"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumCreditEntryRefusedByReceiver InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "credit_entry_refused_by_receiver"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumDuplicateReturn              InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "duplicate_return"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumEntityNotActive              InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "entity_not_active"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumGroupLocked                  InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "group_locked"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumInsufficientFunds            InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "insufficient_funds"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumMisroutedReturn              InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "misrouted_return"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumNoAchRoute                   InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "no_ach_route"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumOriginatorRequest            InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "originator_request"
	InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumTransactionNotAllowed        InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "transaction_not_allowed"
)

func (e InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum) ToPointer() *InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum {
	return &e
}

func (e *InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ach_route_canceled":
		fallthrough
	case "ach_route_disabled":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "credit_entry_refused_by_receiver":
		fallthrough
	case "duplicate_return":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "misrouted_return":
		fallthrough
	case "no_ach_route":
		fallthrough
	case "originator_request":
		fallthrough
	case "transaction_not_allowed":
		*e = InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum: %v", v)
	}
}

// InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDecline - A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.
type InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                             int64  `json:"amount"`
	OriginatorCompanyDescriptiveDate   string `json:"originator_company_descriptive_date"`
	OriginatorCompanyDiscretionaryData string `json:"originator_company_discretionary_data"`
	OriginatorCompanyID                string `json:"originator_company_id"`
	OriginatorCompanyName              string `json:"originator_company_name"`
	// Why the ACH transfer was declined.
	Reason           InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum `json:"reason"`
	ReceiverIDNumber string                                                                                             `json:"receiver_id_number"`
	ReceiverName     string                                                                                             `json:"receiver_name"`
	TraceNumber      string                                                                                             `json:"trace_number"`
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumCad InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumChf InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumEur InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumGbp InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumJpy InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumUsd InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum - The payment network used to process this card authorization
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnumVisa InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum = "visa"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "visa":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum - For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumMailPhoneOrder                                          InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "mail_phone_order"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumRecurring                                               InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "recurring"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumInstallment                                             InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "installment"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumUnknownMailPhoneOrder                                   InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "unknown_mail_phone_order"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumSecureElectronicCommerce                                InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "secure_electronic_commerce"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonAuthenticatedSecurityTransactionAt3dsCapableMerchant InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_authenticated_security_transaction_at_3ds_capable_merchant"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonAuthenticatedSecurityTransaction                     InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_authenticated_security_transaction"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonSecureTransaction                                    InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_secure_transaction"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mail_phone_order":
		fallthrough
	case "recurring":
		fallthrough
	case "installment":
		fallthrough
	case "unknown_mail_phone_order":
		fallthrough
	case "secure_electronic_commerce":
		fallthrough
	case "non_authenticated_security_transaction_at_3ds_capable_merchant":
		fallthrough
	case "non_authenticated_security_transaction":
		fallthrough
	case "non_secure_transaction":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum - The method used to enter the cardholder's primary account number and card expiration date
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumManual                     InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "manual"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumMagneticStripeNoCvv        InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "magnetic_stripe_no_cvv"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumOpticalCode                InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "optical_code"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumIntegratedCircuitCard      InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "integrated_circuit_card"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumContactless                InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "contactless"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumCredentialOnFile           InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "credential_on_file"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumMagneticStripe             InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "magnetic_stripe"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumContactlessMagneticStripe  InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "contactless_magnetic_stripe"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumIntegratedCircuitCardNoCvv InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "integrated_circuit_card_no_cvv"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "manual":
		fallthrough
	case "magnetic_stripe_no_cvv":
		fallthrough
	case "optical_code":
		fallthrough
	case "integrated_circuit_card":
		fallthrough
	case "contactless":
		fallthrough
	case "credential_on_file":
		fallthrough
	case "magnetic_stripe":
		fallthrough
	case "contactless_magnetic_stripe":
		fallthrough
	case "integrated_circuit_card_no_cvv":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa - Fields specific to the `visa` network
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa struct {
	// For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.
	ElectronicCommerceIndicator InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum `json:"electronic_commerce_indicator"`
	// The method used to enter the cardholder's primary account number and card expiration date
	PointOfServiceEntryMode InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum `json:"point_of_service_entry_mode"`
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails - Fields specific to the `network`
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails struct {
	// Fields specific to the `visa` network
	Visa InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa `json:"visa"`
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum - Why the transaction was declined.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumCardNotActive                InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "card_not_active"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumEntityNotActive              InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "entity_not_active"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumGroupLocked                  InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "group_locked"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumInsufficientFunds            InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "insufficient_funds"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumCvv2Mismatch                 InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "cvv2_mismatch"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumTransactionNotAllowed        InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "transaction_not_allowed"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumBreachesLimit                InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "breaches_limit"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumWebhookDeclined              InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "webhook_declined"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumWebhookTimedOut              InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "webhook_timed_out"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumDeclinedByStandInProcessing  InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "declined_by_stand_in_processing"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumInvalidPhysicalCard          InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "invalid_physical_card"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumMissingOriginalAuthorization InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "missing_original_authorization"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "card_not_active":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "cvv2_mismatch":
		fallthrough
	case "transaction_not_allowed":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "webhook_declined":
		fallthrough
	case "webhook_timed_out":
		fallthrough
	case "declined_by_stand_in_processing":
		fallthrough
	case "invalid_physical_card":
		fallthrough
	case "missing_original_authorization":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline - A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
	Currency InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum `json:"currency"`
	// If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.
	DigitalWalletTokenID string `json:"digital_wallet_token_id"`
	// The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.
	MerchantAcceptorID string `json:"merchant_acceptor_id"`
	// The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.
	MerchantCategoryCode string `json:"merchant_category_code"`
	// The city the merchant resides in.
	MerchantCity string `json:"merchant_city"`
	// The country the merchant resides in.
	MerchantCountry string `json:"merchant_country"`
	// The merchant descriptor of the merchant the card is transacting with.
	MerchantDescriptor string `json:"merchant_descriptor"`
	// The state the merchant resides in.
	MerchantState string `json:"merchant_state"`
	// The payment network used to process this card authorization
	Network InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum `json:"network"`
	// Fields specific to the `network`
	NetworkDetails InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails `json:"network_details"`
	// The identifier of the Real-Time Decision sent to approve or decline this transaction.
	RealTimeDecisionID string `json:"real_time_decision_id"`
	// Why the transaction was declined.
	Reason InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum `json:"reason"`
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumCad InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumChf InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumEur InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumGbp InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumJpy InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumUsd InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline - A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
	Currency             InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum `json:"currency"`
	MerchantAcceptorID   string                                                                                                          `json:"merchant_acceptor_id"`
	MerchantCategoryCode string                                                                                                          `json:"merchant_category_code"`
	MerchantCity         string                                                                                                          `json:"merchant_city"`
	MerchantCountry      string                                                                                                          `json:"merchant_country"`
	MerchantDescriptor   string                                                                                                          `json:"merchant_descriptor"`
	MerchantState        string                                                                                                          `json:"merchant_state"`
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum - The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumAchDecline                             InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "ach_decline"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumCardDecline                            InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "card_decline"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumCheckDecline                           InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "check_decline"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumInboundRealTimePaymentsTransferDecline InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "inbound_real_time_payments_transfer_decline"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumInternationalAchDecline                InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "international_ach_decline"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumCardRouteDecline                       InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "card_route_decline"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumOther                                  InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "other"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ach_decline":
		fallthrough
	case "card_decline":
		fallthrough
	case "check_decline":
		fallthrough
	case "inbound_real_time_payments_transfer_decline":
		fallthrough
	case "international_ach_decline":
		fallthrough
	case "card_route_decline":
		fallthrough
	case "other":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum - Why the check was declined.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumAchRouteCanceled      InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "ach_route_canceled"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumAchRouteDisabled      InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "ach_route_disabled"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumBreachesLimit         InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "breaches_limit"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumEntityNotActive       InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "entity_not_active"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumGroupLocked           InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "group_locked"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumInsufficientFunds     InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "insufficient_funds"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumUnableToLocateAccount InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "unable_to_locate_account"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumUnableToProcess       InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "unable_to_process"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumReferToImage          InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "refer_to_image"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumStopPaymentRequested  InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "stop_payment_requested"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumReturned              InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "returned"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumDuplicatePresentment  InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "duplicate_presentment"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumNotAuthorized         InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "not_authorized"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ach_route_canceled":
		fallthrough
	case "ach_route_disabled":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "unable_to_locate_account":
		fallthrough
	case "unable_to_process":
		fallthrough
	case "refer_to_image":
		fallthrough
	case "stop_payment_requested":
		fallthrough
	case "returned":
		fallthrough
	case "duplicate_presentment":
		fallthrough
	case "not_authorized":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDecline - A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount        int64  `json:"amount"`
	AuxiliaryOnUs string `json:"auxiliary_on_us"`
	// Why the check was declined.
	Reason InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum `json:"reason"`
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be "USD" for a Real Time Payments transfer.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumCad InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumChf InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumEur InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumGbp InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumJpy InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumUsd InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum - Why the transfer was declined.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumAccountNumberCanceled      InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "account_number_canceled"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumAccountNumberDisabled      InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "account_number_disabled"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumGroupLocked                InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "group_locked"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumEntityNotActive            InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "entity_not_active"
	InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumRealTimePaymentsNotEnabled InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "real_time_payments_not_enabled"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_number_canceled":
		fallthrough
	case "account_number_disabled":
		fallthrough
	case "group_locked":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "real_time_payments_not_enabled":
		*e = InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline - A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The name the sender of the transfer specified as the recipient of the transfer.
	CreditorName string `json:"creditor_name"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be "USD" for a Real Time Payments transfer.
	Currency InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum `json:"currency"`
	// The account number of the account that sent the transfer.
	DebtorAccountNumber string `json:"debtor_account_number"`
	// The name provided by the sender of the transfer.
	DebtorName string `json:"debtor_name"`
	// The routing number of the account that sent the transfer.
	DebtorRoutingNumber string `json:"debtor_routing_number"`
	// Why the transfer was declined.
	Reason InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum `json:"reason"`
	// Additional information included with the transfer.
	RemittanceInformation string `json:"remittance_information"`
	// The Real Time Payments network identification of the declined transfer.
	TransactionIdentification string `json:"transaction_identification"`
}

// InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInternationalACHDecline - A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.
type InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInternationalACHDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                                                 int64  `json:"amount"`
	DestinationCountryCode                                 string `json:"destination_country_code"`
	DestinationCurrencyCode                                string `json:"destination_currency_code"`
	ForeignExchangeIndicator                               string `json:"foreign_exchange_indicator"`
	ForeignExchangeReference                               string `json:"foreign_exchange_reference"`
	ForeignExchangeReferenceIndicator                      string `json:"foreign_exchange_reference_indicator"`
	ForeignPaymentAmount                                   int64  `json:"foreign_payment_amount"`
	ForeignTraceNumber                                     string `json:"foreign_trace_number"`
	InternationalTransactionTypeCode                       string `json:"international_transaction_type_code"`
	OriginatingCurrencyCode                                string `json:"originating_currency_code"`
	OriginatingDepositoryFinancialInstitutionBranchCountry string `json:"originating_depository_financial_institution_branch_country"`
	OriginatingDepositoryFinancialInstitutionID            string `json:"originating_depository_financial_institution_id"`
	OriginatingDepositoryFinancialInstitutionIDQualifier   string `json:"originating_depository_financial_institution_id_qualifier"`
	OriginatingDepositoryFinancialInstitutionName          string `json:"originating_depository_financial_institution_name"`
	OriginatorCity                                         string `json:"originator_city"`
	OriginatorCompanyEntryDescription                      string `json:"originator_company_entry_description"`
	OriginatorCountry                                      string `json:"originator_country"`
	OriginatorIdentification                               string `json:"originator_identification"`
	OriginatorName                                         string `json:"originator_name"`
	OriginatorPostalCode                                   string `json:"originator_postal_code"`
	OriginatorStateOrProvince                              string `json:"originator_state_or_province"`
	OriginatorStreetAddress                                string `json:"originator_street_address"`
	PaymentRelatedInformation                              string `json:"payment_related_information"`
	PaymentRelatedInformation2                             string `json:"payment_related_information2"`
	ReceiverCity                                           string `json:"receiver_city"`
	ReceiverCountry                                        string `json:"receiver_country"`
	ReceiverIdentificationNumber                           string `json:"receiver_identification_number"`
	ReceiverPostalCode                                     string `json:"receiver_postal_code"`
	ReceiverStateOrProvince                                string `json:"receiver_state_or_province"`
	ReceiverStreetAddress                                  string `json:"receiver_street_address"`
	ReceivingCompanyOrIndividualName                       string `json:"receiving_company_or_individual_name"`
	ReceivingDepositoryFinancialInstitutionCountry         string `json:"receiving_depository_financial_institution_country"`
	ReceivingDepositoryFinancialInstitutionID              string `json:"receiving_depository_financial_institution_id"`
	ReceivingDepositoryFinancialInstitutionIDQualifier     string `json:"receiving_depository_financial_institution_id_qualifier"`
	ReceivingDepositoryFinancialInstitutionName            string `json:"receiving_depository_financial_institution_name"`
	TraceNumber                                            string `json:"trace_number"`
}

// InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSource - This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
type InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSource struct {
	// A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.
	AchDecline InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDecline `json:"ach_decline"`
	// A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.
	CardDecline InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline `json:"card_decline"`
	// A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.
	CardRouteDecline InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline `json:"card_route_decline"`
	// The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
	Category InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum `json:"category"`
	// A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.
	CheckDecline InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDecline `json:"check_decline"`
	// A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.
	InboundRealTimePaymentsTransferDecline InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline `json:"inbound_real_time_payments_transfer_decline"`
	// A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.
	InternationalAchDecline InboundACHTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInternationalACHDecline `json:"international_ach_decline"`
}

// InboundAchTransferSimulationResultDeclinedTransactionTypeEnum - A constant representing the object's type. For this resource it will always be `declined_transaction`.
type InboundAchTransferSimulationResultDeclinedTransactionTypeEnum string

const (
	InboundAchTransferSimulationResultDeclinedTransactionTypeEnumDeclinedTransaction InboundAchTransferSimulationResultDeclinedTransactionTypeEnum = "declined_transaction"
)

func (e InboundAchTransferSimulationResultDeclinedTransactionTypeEnum) ToPointer() *InboundAchTransferSimulationResultDeclinedTransactionTypeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultDeclinedTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "declined_transaction":
		*e = InboundAchTransferSimulationResultDeclinedTransactionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultDeclinedTransactionTypeEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultDeclinedTransaction - If the ACH Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_ach_transfer`.
type InboundAchTransferSimulationResultDeclinedTransaction struct {
	// The identifier for the Account the Declined Transaction belongs to.
	AccountID string `json:"account_id"`
	// The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.
	CreatedAt time.Time `json:"created_at"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.
	Currency InboundAchTransferSimulationResultDeclinedTransactionCurrencyEnum `json:"currency"`
	// This is the description the vendor provides.
	Description string `json:"description"`
	// The Declined Transaction identifier.
	ID string `json:"id"`
	// The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.
	RouteID string `json:"route_id"`
	// The type of the route this Declined Transaction came through.
	RouteType InboundAchTransferSimulationResultDeclinedTransactionRouteTypeEnum `json:"route_type"`
	// This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
	Source InboundAchTransferSimulationResultDeclinedTransactionDeclinedTransactionSource `json:"source"`
	// A constant representing the object's type. For this resource it will always be `declined_transaction`.
	Type InboundAchTransferSimulationResultDeclinedTransactionTypeEnum `json:"type"`
}

// InboundAchTransferSimulationResultTransactionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.
type InboundAchTransferSimulationResultTransactionCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionCurrencyEnumCad InboundAchTransferSimulationResultTransactionCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionCurrencyEnumChf InboundAchTransferSimulationResultTransactionCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionCurrencyEnumEur InboundAchTransferSimulationResultTransactionCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionCurrencyEnumGbp InboundAchTransferSimulationResultTransactionCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionCurrencyEnumJpy InboundAchTransferSimulationResultTransactionCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionCurrencyEnumUsd InboundAchTransferSimulationResultTransactionCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionRouteTypeEnum - The type of the route this Transaction came through.
type InboundAchTransferSimulationResultTransactionRouteTypeEnum string

const (
	InboundAchTransferSimulationResultTransactionRouteTypeEnumAccountNumber InboundAchTransferSimulationResultTransactionRouteTypeEnum = "account_number"
	InboundAchTransferSimulationResultTransactionRouteTypeEnumCard          InboundAchTransferSimulationResultTransactionRouteTypeEnum = "card"
)

func (e InboundAchTransferSimulationResultTransactionRouteTypeEnum) ToPointer() *InboundAchTransferSimulationResultTransactionRouteTypeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionRouteTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_number":
		fallthrough
	case "card":
		*e = InboundAchTransferSimulationResultTransactionRouteTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionRouteTypeEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntention - A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
type InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntention struct {
	// The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum `json:"currency"`
	// The description you chose to give the transfer.
	Description string `json:"description"`
	// The identifier of the Account to where the Account Transfer was sent.
	DestinationAccountID string `json:"destination_account_id"`
	// The identifier of the Account from where the Account Transfer was sent.
	SourceAccountID string `json:"source_account_id"`
	// The identifier of the Account Transfer that led to this Pending Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversion - A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
type InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversion struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The identifier of the File containing an image of the returned check.
	FileID string `json:"file_id"`
}

// InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn - A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
type InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// Why the transfer was returned.
	ReturnReasonCode string `json:"return_reason_code"`
}

// InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferIntention - A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
type InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferIntention struct {
	AccountNumber string `json:"account_number"`
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount              int64  `json:"amount"`
	RoutingNumber       string `json:"routing_number"`
	StatementDescriptor string `json:"statement_descriptor"`
	// The identifier of the ACH Transfer that led to this Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferRejection - A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
type InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferRejection struct {
	// The identifier of the ACH Transfer that led to this Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum - Why the ACH Transfer was returned.
type InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum string

const (
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumInsufficientFund                                          InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "insufficient_fund"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumNoAccount                                                 InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "no_account"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAccountClosed                                             InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "account_closed"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumInvalidAccountNumberStructure                             InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "invalid_account_number_structure"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAccountFrozenEntryReturnedPerOfacInstruction              InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "account_frozen_entry_returned_per_ofac_instruction"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumCreditEntryRefusedByReceiver                              InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "credit_entry_refused_by_receiver"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumUnauthorizedDebitToConsumerAccountUsingCorporateSecCode   InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "unauthorized_debit_to_consumer_account_using_corporate_sec_code"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumCorporateCustomerAdvisedNotAuthorized                     InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "corporate_customer_advised_not_authorized"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumPaymentStopped                                            InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "payment_stopped"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumNonTransactionAccount                                     InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "non_transaction_account"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumUncollectedFunds                                          InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "uncollected_funds"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumRoutingNumberCheckDigitError                              InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "routing_number_check_digit_error"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumCustomerAdvisedUnauthorizedImproperIneligibleOrIncomplete InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "customer_advised_unauthorized_improper_ineligible_or_incomplete"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAmountFieldError                                          InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "amount_field_error"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAuthorizationRevokedByCustomer                            InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "authorization_revoked_by_customer"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumInvalidAchRoutingNumber                                   InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "invalid_ach_routing_number"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumFileRecordEditCriteria                                    InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "file_record_edit_criteria"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumEnrInvalidIndividualName                                  InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "enr_invalid_individual_name"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumReturnedPerOdfiRequest                                    InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "returned_per_odfi_request"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAddendaError                                              InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "addenda_error"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumLimitedParticipationDfi                                   InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "limited_participation_dfi"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumIncorrectlyCodedOutboundInternationalPayment              InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "incorrectly_coded_outbound_international_payment"
	InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumOther                                                     InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "other"
)

func (e InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum) ToPointer() *InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum {
	return &e
}

func (e *InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_fund":
		fallthrough
	case "no_account":
		fallthrough
	case "account_closed":
		fallthrough
	case "invalid_account_number_structure":
		fallthrough
	case "account_frozen_entry_returned_per_ofac_instruction":
		fallthrough
	case "credit_entry_refused_by_receiver":
		fallthrough
	case "unauthorized_debit_to_consumer_account_using_corporate_sec_code":
		fallthrough
	case "corporate_customer_advised_not_authorized":
		fallthrough
	case "payment_stopped":
		fallthrough
	case "non_transaction_account":
		fallthrough
	case "uncollected_funds":
		fallthrough
	case "routing_number_check_digit_error":
		fallthrough
	case "customer_advised_unauthorized_improper_ineligible_or_incomplete":
		fallthrough
	case "amount_field_error":
		fallthrough
	case "authorization_revoked_by_customer":
		fallthrough
	case "invalid_ach_routing_number":
		fallthrough
	case "file_record_edit_criteria":
		fallthrough
	case "enr_invalid_individual_name":
		fallthrough
	case "returned_per_odfi_request":
		fallthrough
	case "addenda_error":
		fallthrough
	case "limited_participation_dfi":
		fallthrough
	case "incorrectly_coded_outbound_international_payment":
		fallthrough
	case "other":
		*e = InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum: %v", v)
	}
}

// InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturn - A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
type InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturn struct {
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
	CreatedAt time.Time `json:"created_at"`
	// Why the ACH Transfer was returned.
	ReturnReasonCode InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum `json:"return_reason_code"`
	// The identifier of the Tranasaction associated with this return.
	TransactionID string `json:"transaction_id"`
	// The identifier of the ACH Transfer associated with this return.
	TransferID string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance - A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance struct {
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.
	AcceptedAt time.Time `json:"accepted_at"`
	// The identifier of the Card Dispute that was accepted.
	CardDisputeID string `json:"card_dispute_id"`
	// The identifier of the Transaction that was created to return the disputed funds to your account.
	TransactionID string `json:"transaction_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum - A constant representing the object's type. For this resource it will always be `card_refund`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnumCardRefund InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum = "card_refund"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "card_refund":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardRefund - A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardRefund struct {
	// The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The identifier for the Transaction this refunds, if any.
	CardSettlementTransactionID string `json:"card_settlement_transaction_id"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum `json:"currency"`
	// The Card Refund identifier.
	ID string `json:"id"`
	// The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.
	MerchantAcceptorID string `json:"merchant_acceptor_id"`
	// The 4-digit MCC describing the merchant's business.
	MerchantCategoryCode string `json:"merchant_category_code"`
	// The city the merchant resides in.
	MerchantCity string `json:"merchant_city"`
	// The country the merchant resides in.
	MerchantCountry string `json:"merchant_country"`
	// The name of the merchant.
	MerchantName string `json:"merchant_name"`
	// The state the merchant resides in.
	MerchantState string `json:"merchant_state"`
	// A constant representing the object's type. For this resource it will always be `card_refund`.
	Type InboundAchTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum `json:"type"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePayment - A Card Revenue Payment object. This field will be present in the JSON response if and only if `category` is equal to `card_revenue_payment`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePayment struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePaymentCurrencyEnum `json:"currency"`
	// The end of the period for which this transaction paid interest.
	PeriodEnd time.Time `json:"period_end"`
	// The start of the period for which this transaction paid interest.
	PeriodStart time.Time `json:"period_start"`
	// The account the card belonged to.
	TransactedOnAccountID string `json:"transacted_on_account_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund - A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
type InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund struct {
	// The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.
	Currency             InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum `json:"currency"`
	MerchantAcceptorID   string                                                                                         `json:"merchant_acceptor_id"`
	MerchantCategoryCode string                                                                                         `json:"merchant_category_code"`
	MerchantCity         string                                                                                         `json:"merchant_city"`
	MerchantCountry      string                                                                                         `json:"merchant_country"`
	MerchantDescriptor   string                                                                                         `json:"merchant_descriptor"`
	MerchantState        string                                                                                         `json:"merchant_state"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement - A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
type InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement struct {
	// The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.
	Currency             InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum `json:"currency"`
	MerchantAcceptorID   string                                                                                             `json:"merchant_acceptor_id"`
	MerchantCategoryCode string                                                                                             `json:"merchant_category_code"`
	MerchantCity         string                                                                                             `json:"merchant_city"`
	MerchantCountry      string                                                                                             `json:"merchant_country"`
	MerchantDescriptor   string                                                                                             `json:"merchant_descriptor"`
	MerchantState        string                                                                                             `json:"merchant_state"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum - A constant representing the object's type. For this resource it will always be `card_settlement`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnumCardSettlement InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum = "card_settlement"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "card_settlement":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlement - A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlement struct {
	// The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The Card Authorization that was created prior to this Card Settlement, if on exists.
	CardAuthorization string `json:"card_authorization"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum `json:"currency"`
	// The Card Settlement identifier.
	ID string `json:"id"`
	// The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.
	MerchantAcceptorID string `json:"merchant_acceptor_id"`
	// The 4-digit MCC describing the merchant's business.
	MerchantCategoryCode string `json:"merchant_category_code"`
	// The city the merchant resides in.
	MerchantCity string `json:"merchant_city"`
	// The country the merchant resides in.
	MerchantCountry string `json:"merchant_country"`
	// The name of the merchant.
	MerchantName string `json:"merchant_name"`
	// The state the merchant resides in.
	MerchantState string `json:"merchant_state"`
	// The identifier of the Pending Transaction associated with this Transaction.
	PendingTransactionID string `json:"pending_transaction_id"`
	// The amount in the minor unit of the transaction's presentment currency.
	PresentmentAmount int64 `json:"presentment_amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.
	PresentmentCurrency string `json:"presentment_currency"`
	// A constant representing the object's type. For this resource it will always be `card_settlement`.
	Type InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum `json:"type"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum - The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
type InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumAccountTransferIntention                    InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "account_transfer_intention"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumAchCheckConversionReturn                    InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_check_conversion_return"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumAchCheckConversion                          InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_check_conversion"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumAchTransferIntention                        InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_transfer_intention"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumAchTransferRejection                        InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_transfer_rejection"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumAchTransferReturn                           InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_transfer_return"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCardDisputeAcceptance                       InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_dispute_acceptance"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCardRefund                                  InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_refund"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCardSettlement                              InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_settlement"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCardRevenuePayment                          InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_revenue_payment"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckDepositAcceptance                      InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_deposit_acceptance"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckDepositReturn                          InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_deposit_return"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckTransferIntention                      InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_transfer_intention"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckTransferReturn                         InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_transfer_return"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckTransferRejection                      InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_transfer_rejection"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckTransferStopPaymentRequest             InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_transfer_stop_payment_request"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumDisputeResolution                           InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "dispute_resolution"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumEmpyrealCashDeposit                         InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "empyreal_cash_deposit"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumFeePayment                                  InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "fee_payment"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundAchTransfer                          InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_ach_transfer"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundAchTransferReturnIntention           InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_ach_transfer_return_intention"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundCheck                                InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_check"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundInternationalAchTransfer             InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_international_ach_transfer"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundRealTimePaymentsTransferConfirmation InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_real_time_payments_transfer_confirmation"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundWireDrawdownPaymentReversal          InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_wire_drawdown_payment_reversal"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundWireDrawdownPayment                  InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_wire_drawdown_payment"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundWireReversal                         InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_wire_reversal"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundWireTransfer                         InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_wire_transfer"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInterestPayment                             InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "interest_payment"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInternalGeneralLedgerTransaction            InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "internal_general_ledger_transaction"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumInternalSource                              InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "internal_source"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCardRouteRefund                             InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_route_refund"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumCardRouteSettlement                         InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_route_settlement"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumRealTimePaymentsTransferAcknowledgement     InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "real_time_payments_transfer_acknowledgement"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumSampleFunds                                 InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "sample_funds"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumWireDrawdownPaymentIntention                InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "wire_drawdown_payment_intention"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumWireDrawdownPaymentRejection                InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "wire_drawdown_payment_rejection"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumWireTransferIntention                       InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "wire_transfer_intention"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumWireTransferRejection                       InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "wire_transfer_rejection"
	InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnumOther                                       InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum = "other"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account_transfer_intention":
		fallthrough
	case "ach_check_conversion_return":
		fallthrough
	case "ach_check_conversion":
		fallthrough
	case "ach_transfer_intention":
		fallthrough
	case "ach_transfer_rejection":
		fallthrough
	case "ach_transfer_return":
		fallthrough
	case "card_dispute_acceptance":
		fallthrough
	case "card_refund":
		fallthrough
	case "card_settlement":
		fallthrough
	case "card_revenue_payment":
		fallthrough
	case "check_deposit_acceptance":
		fallthrough
	case "check_deposit_return":
		fallthrough
	case "check_transfer_intention":
		fallthrough
	case "check_transfer_return":
		fallthrough
	case "check_transfer_rejection":
		fallthrough
	case "check_transfer_stop_payment_request":
		fallthrough
	case "dispute_resolution":
		fallthrough
	case "empyreal_cash_deposit":
		fallthrough
	case "fee_payment":
		fallthrough
	case "inbound_ach_transfer":
		fallthrough
	case "inbound_ach_transfer_return_intention":
		fallthrough
	case "inbound_check":
		fallthrough
	case "inbound_international_ach_transfer":
		fallthrough
	case "inbound_real_time_payments_transfer_confirmation":
		fallthrough
	case "inbound_wire_drawdown_payment_reversal":
		fallthrough
	case "inbound_wire_drawdown_payment":
		fallthrough
	case "inbound_wire_reversal":
		fallthrough
	case "inbound_wire_transfer":
		fallthrough
	case "interest_payment":
		fallthrough
	case "internal_general_ledger_transaction":
		fallthrough
	case "internal_source":
		fallthrough
	case "card_route_refund":
		fallthrough
	case "card_route_settlement":
		fallthrough
	case "real_time_payments_transfer_acknowledgement":
		fallthrough
	case "sample_funds":
		fallthrough
	case "wire_drawdown_payment_intention":
		fallthrough
	case "wire_drawdown_payment_rejection":
		fallthrough
	case "wire_transfer_intention":
		fallthrough
	case "wire_transfer_rejection":
		fallthrough
	case "other":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance - A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance struct {
	// The account number printed on the check.
	AccountNumber string `json:"account_number"`
	// The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// An additional line of metadata printed on the check. This typically includes the check number for business checks.
	AuxiliaryOnUs string `json:"auxiliary_on_us"`
	// The ID of the Check Deposit that was accepted.
	CheckDepositID string `json:"check_deposit_id"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum `json:"currency"`
	// The routing number printed on the check.
	RoutingNumber string `json:"routing_number"`
	// The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.
	SerialNumber string `json:"serial_number"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum: %v", v)
	}
}

type InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumAchConversionNotSupported InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "ach_conversion_not_supported"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumClosedAccount             InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "closed_account"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumDuplicateSubmission       InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "duplicate_submission"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumInsufficientFunds         InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "insufficient_funds"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumNoAccount                 InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "no_account"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumNotAuthorized             InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "not_authorized"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumStaleDated                InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "stale_dated"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumStopPayment               InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "stop_payment"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumUnknownReason             InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "unknown_reason"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumUnmatchedDetails          InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "unmatched_details"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumUnreadableImage           InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "unreadable_image"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ach_conversion_not_supported":
		fallthrough
	case "closed_account":
		fallthrough
	case "duplicate_submission":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "no_account":
		fallthrough
	case "not_authorized":
		fallthrough
	case "stale_dated":
		fallthrough
	case "stop_payment":
		fallthrough
	case "unknown_reason":
		fallthrough
	case "unmatched_details":
		fallthrough
	case "unreadable_image":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturn - A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturn struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The identifier of the Check Deposit that was returned.
	CheckDepositID string `json:"check_deposit_id"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency     InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum     `json:"currency"`
	ReturnReason InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum `json:"return_reason"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.
	ReturnedAt time.Time `json:"returned_at"`
	// The identifier of the transaction that reversed the original check deposit transaction.
	TransactionID string `json:"transaction_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntention - A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntention struct {
	// The city of the check's destination.
	AddressCity string `json:"address_city"`
	// The street address of the check's destination.
	AddressLine1 string `json:"address_line1"`
	// The second line of the address of the check's destination.
	AddressLine2 string `json:"address_line2"`
	// The state of the check's destination.
	AddressState string `json:"address_state"`
	// The postal code of the check's destination.
	AddressZip string `json:"address_zip"`
	// The transfer amount in USD cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum `json:"currency"`
	// The name that will be printed on the check.
	RecipientName string `json:"recipient_name"`
	// The identifier of the Check Transfer with which this is associated.
	TransferID string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferRejection - A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferRejection struct {
	// The identifier of the Check Transfer that led to this Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum - The reason why the check was returned.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnumMailDeliveryFailure InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum = "mail_delivery_failure"
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnumRefusedByRecipient  InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum = "refused_by_recipient"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mail_delivery_failure":
		fallthrough
	case "refused_by_recipient":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturn - A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturn struct {
	// If available, a document with additional information about the return.
	FileID string `json:"file_id"`
	// The reason why the check was returned.
	Reason InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturnReasonEnum `json:"reason"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check was returned.
	ReturnedAt time.Time `json:"returned_at"`
	// The identifier of the Transaction that was created to credit you for the returned check.
	TransactionID string `json:"transaction_id"`
	// The identifier of the returned Check Transfer.
	TransferID string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum - A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnumCheckTransferStopPaymentRequest InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum = "check_transfer_stop_payment_request"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "check_transfer_stop_payment_request":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest - A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
type InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest struct {
	// The time the stop-payment was requested.
	RequestedAt time.Time `json:"requested_at"`
	// The transaction ID of the corresponding credit transaction.
	TransactionID string `json:"transaction_id"`
	// The ID of the check transfer that was stopped.
	TransferID string `json:"transfer_id"`
	// A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.
	Type InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum `json:"type"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolution - A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
type InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolution struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum `json:"currency"`
	// The identifier of the Transaction that was disputed.
	DisputedTransactionID string `json:"disputed_transaction_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit - A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
type InboundAchTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount      int64     `json:"amount"`
	BagID       string    `json:"bag_id"`
	DepositDate time.Time `json:"deposit_date"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceFeePayment - A Fee Payment object. This field will be present in the JSON response if and only if `category` is equal to `fee_payment`.
type InboundAchTransferSimulationResultTransactionTransactionSourceFeePayment struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceFeePaymentCurrencyEnum `json:"currency"`
}

// InboundACHTransferSimulationResultTransactionTransactionSourceInboundACHTransfer - A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
type InboundACHTransferSimulationResultTransactionTransactionSourceInboundACHTransfer struct {
	// The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                             int64  `json:"amount"`
	OriginatorCompanyDescriptiveDate   string `json:"originator_company_descriptive_date"`
	OriginatorCompanyDiscretionaryData string `json:"originator_company_discretionary_data"`
	OriginatorCompanyEntryDescription  string `json:"originator_company_entry_description"`
	OriginatorCompanyID                string `json:"originator_company_id"`
	OriginatorCompanyName              string `json:"originator_company_name"`
	ReceiverIDNumber                   string `json:"receiver_id_number"`
	ReceiverName                       string `json:"receiver_name"`
	TraceNumber                        string `json:"trace_number"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheck - A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
type InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheck struct {
	// The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                int64  `json:"amount"`
	CheckFrontImageFileID string `json:"check_front_image_file_id"`
	CheckNumber           string `json:"check_number"`
	CheckRearImageFileID  string `json:"check_rear_image_file_id"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum `json:"currency"`
}

// InboundACHTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer - A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
type InboundACHTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer struct {
	// The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                                                 int64  `json:"amount"`
	DestinationCountryCode                                 string `json:"destination_country_code"`
	DestinationCurrencyCode                                string `json:"destination_currency_code"`
	ForeignExchangeIndicator                               string `json:"foreign_exchange_indicator"`
	ForeignExchangeReference                               string `json:"foreign_exchange_reference"`
	ForeignExchangeReferenceIndicator                      string `json:"foreign_exchange_reference_indicator"`
	ForeignPaymentAmount                                   int64  `json:"foreign_payment_amount"`
	ForeignTraceNumber                                     string `json:"foreign_trace_number"`
	InternationalTransactionTypeCode                       string `json:"international_transaction_type_code"`
	OriginatingCurrencyCode                                string `json:"originating_currency_code"`
	OriginatingDepositoryFinancialInstitutionBranchCountry string `json:"originating_depository_financial_institution_branch_country"`
	OriginatingDepositoryFinancialInstitutionID            string `json:"originating_depository_financial_institution_id"`
	OriginatingDepositoryFinancialInstitutionIDQualifier   string `json:"originating_depository_financial_institution_id_qualifier"`
	OriginatingDepositoryFinancialInstitutionName          string `json:"originating_depository_financial_institution_name"`
	OriginatorCity                                         string `json:"originator_city"`
	OriginatorCompanyEntryDescription                      string `json:"originator_company_entry_description"`
	OriginatorCountry                                      string `json:"originator_country"`
	OriginatorIdentification                               string `json:"originator_identification"`
	OriginatorName                                         string `json:"originator_name"`
	OriginatorPostalCode                                   string `json:"originator_postal_code"`
	OriginatorStateOrProvince                              string `json:"originator_state_or_province"`
	OriginatorStreetAddress                                string `json:"originator_street_address"`
	PaymentRelatedInformation                              string `json:"payment_related_information"`
	PaymentRelatedInformation2                             string `json:"payment_related_information2"`
	ReceiverCity                                           string `json:"receiver_city"`
	ReceiverCountry                                        string `json:"receiver_country"`
	ReceiverIdentificationNumber                           string `json:"receiver_identification_number"`
	ReceiverPostalCode                                     string `json:"receiver_postal_code"`
	ReceiverStateOrProvince                                string `json:"receiver_state_or_province"`
	ReceiverStreetAddress                                  string `json:"receiver_street_address"`
	ReceivingCompanyOrIndividualName                       string `json:"receiving_company_or_individual_name"`
	ReceivingDepositoryFinancialInstitutionCountry         string `json:"receiving_depository_financial_institution_country"`
	ReceivingDepositoryFinancialInstitutionID              string `json:"receiving_depository_financial_institution_id"`
	ReceivingDepositoryFinancialInstitutionIDQualifier     string `json:"receiving_depository_financial_institution_id_qualifier"`
	ReceivingDepositoryFinancialInstitutionName            string `json:"receiving_depository_financial_institution_name"`
	TraceNumber                                            string `json:"trace_number"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be "USD" for a Real Time Payments transfer.
type InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation - A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
type InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation struct {
	// The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The name the sender of the transfer specified as the recipient of the transfer.
	CreditorName string `json:"creditor_name"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be "USD" for a Real Time Payments transfer.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum `json:"currency"`
	// The account number of the account that sent the transfer.
	DebtorAccountNumber string `json:"debtor_account_number"`
	// The name provided by the sender of the transfer.
	DebtorName string `json:"debtor_name"`
	// The routing number of the account that sent the transfer.
	DebtorRoutingNumber string `json:"debtor_routing_number"`
	// Additional information included with the transfer.
	RemittanceInformation string `json:"remittance_information"`
	// The Real Time Payments network identification of the transfer
	TransactionIdentification string `json:"transaction_identification"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment - A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
type InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount                             int64  `json:"amount"`
	BeneficiaryAddressLine1            string `json:"beneficiary_address_line1"`
	BeneficiaryAddressLine2            string `json:"beneficiary_address_line2"`
	BeneficiaryAddressLine3            string `json:"beneficiary_address_line3"`
	BeneficiaryName                    string `json:"beneficiary_name"`
	BeneficiaryReference               string `json:"beneficiary_reference"`
	Description                        string `json:"description"`
	InputMessageAccountabilityData     string `json:"input_message_accountability_data"`
	OriginatorAddressLine1             string `json:"originator_address_line1"`
	OriginatorAddressLine2             string `json:"originator_address_line2"`
	OriginatorAddressLine3             string `json:"originator_address_line3"`
	OriginatorName                     string `json:"originator_name"`
	OriginatorToBeneficiaryInformation string `json:"originator_to_beneficiary_information"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal - A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
type InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal struct {
	// The amount that was reversed.
	Amount int64 `json:"amount"`
	// The description on the reversal message from Fedwire.
	Description string `json:"description"`
	// The Fedwire cycle date for the wire reversal.
	InputCycleDate types.Date `json:"input_cycle_date"`
	// The Fedwire transaction identifier.
	InputMessageAccountabilityData string `json:"input_message_accountability_data"`
	// The Fedwire sequence number.
	InputSequenceNumber string `json:"input_sequence_number"`
	// The Fedwire input source identifier.
	InputSource string `json:"input_source"`
	// The Fedwire cycle date for the wire transfer that was reversed.
	PreviousMessageInputCycleDate types.Date `json:"previous_message_input_cycle_date"`
	// The Fedwire transaction identifier for the wire transfer that was reversed.
	PreviousMessageInputMessageAccountabilityData string `json:"previous_message_input_message_accountability_data"`
	// The Fedwire sequence number for the wire transfer that was reversed.
	PreviousMessageInputSequenceNumber string `json:"previous_message_input_sequence_number"`
	// The Fedwire input source identifier for the wire transfer that was reversed.
	PreviousMessageInputSource string `json:"previous_message_input_source"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireReversal - A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
type InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireReversal struct {
	// The amount that was reversed.
	Amount int64 `json:"amount"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the reversal was created.
	CreatedAt time.Time `json:"created_at"`
	// The description on the reversal message from Fedwire.
	Description string `json:"description"`
	// Additional financial institution information included in the wire reversal.
	FinancialInstitutionToFinancialInstitutionInformation string `json:"financial_institution_to_financial_institution_information"`
	// The Fedwire cycle date for the wire reversal.
	InputCycleDate types.Date `json:"input_cycle_date"`
	// The Fedwire transaction identifier.
	InputMessageAccountabilityData string `json:"input_message_accountability_data"`
	// The Fedwire sequence number.
	InputSequenceNumber string `json:"input_sequence_number"`
	// The Fedwire input source identifier.
	InputSource string `json:"input_source"`
	// The Fedwire cycle date for the wire transfer that was reversed.
	PreviousMessageInputCycleDate types.Date `json:"previous_message_input_cycle_date"`
	// The Fedwire transaction identifier for the wire transfer that was reversed.
	PreviousMessageInputMessageAccountabilityData string `json:"previous_message_input_message_accountability_data"`
	// The Fedwire sequence number for the wire transfer that was reversed.
	PreviousMessageInputSequenceNumber string `json:"previous_message_input_sequence_number"`
	// The Fedwire input source identifier for the wire transfer that was reversed.
	PreviousMessageInputSource string `json:"previous_message_input_source"`
	// Information included in the wire reversal for the receiving financial institution.
	ReceiverFinancialInstitutionInformation string `json:"receiver_financial_institution_information"`
	// The ID for the Transaction associated with the transfer reversal.
	TransactionID string `json:"transaction_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireTransfer - A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
type InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireTransfer struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount                                  int64  `json:"amount"`
	BeneficiaryAddressLine1                 string `json:"beneficiary_address_line1"`
	BeneficiaryAddressLine2                 string `json:"beneficiary_address_line2"`
	BeneficiaryAddressLine3                 string `json:"beneficiary_address_line3"`
	BeneficiaryName                         string `json:"beneficiary_name"`
	BeneficiaryReference                    string `json:"beneficiary_reference"`
	Description                             string `json:"description"`
	InputMessageAccountabilityData          string `json:"input_message_accountability_data"`
	OriginatorAddressLine1                  string `json:"originator_address_line1"`
	OriginatorAddressLine2                  string `json:"originator_address_line2"`
	OriginatorAddressLine3                  string `json:"originator_address_line3"`
	OriginatorName                          string `json:"originator_name"`
	OriginatorToBeneficiaryInformation      string `json:"originator_to_beneficiary_information"`
	OriginatorToBeneficiaryInformationLine1 string `json:"originator_to_beneficiary_information_line1"`
	OriginatorToBeneficiaryInformationLine2 string `json:"originator_to_beneficiary_information_line2"`
	OriginatorToBeneficiaryInformationLine3 string `json:"originator_to_beneficiary_information_line3"`
	OriginatorToBeneficiaryInformationLine4 string `json:"originator_to_beneficiary_information_line4"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInterestPayment - A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
type InboundAchTransferSimulationResultTransactionTransactionSourceInterestPayment struct {
	// The account on which the interest was accrued.
	AccruedOnAccountID string `json:"accrued_on_account_id"`
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum `json:"currency"`
	// The end of the period for which this transaction paid interest.
	PeriodEnd time.Time `json:"period_end"`
	// The start of the period for which this transaction paid interest.
	PeriodStart time.Time `json:"period_start"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
type InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumCad InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "CAD"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumChf InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "CHF"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumEur InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "EUR"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumGbp InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "GBP"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumJpy InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "JPY"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumUsd InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "USD"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum: %v", v)
	}
}

type InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum string

const (
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumBankMigration      InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "bank_migration"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumCashback           InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "cashback"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumEmpyrealAdjustment InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "empyreal_adjustment"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumError              InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "error"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumErrorCorrection    InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "error_correction"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumFees               InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "fees"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumInterest           InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "interest"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumSampleFunds        InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "sample_funds"
	InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumSampleFundsReturn  InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "sample_funds_return"
)

func (e InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bank_migration":
		fallthrough
	case "cashback":
		fallthrough
	case "empyreal_adjustment":
		fallthrough
	case "error":
		fallthrough
	case "error_correction":
		fallthrough
	case "fees":
		fallthrough
	case "interest":
		fallthrough
	case "sample_funds":
		fallthrough
	case "sample_funds_return":
		*e = InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransactionTransactionSourceInternalSource - A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
type InboundAchTransferSimulationResultTransactionTransactionSourceInternalSource struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
	Currency InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum `json:"currency"`
	Reason   InboundAchTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum   `json:"reason"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceRealTimePaymentsTransferAcknowledgement - A Real Time Payments Transfer Acknowledgement object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_acknowledgement`.
type InboundAchTransferSimulationResultTransactionTransactionSourceRealTimePaymentsTransferAcknowledgement struct {
	// The transfer amount in USD cents.
	Amount int64 `json:"amount"`
	// The destination account number.
	DestinationAccountNumber string `json:"destination_account_number"`
	// The American Bankers' Association (ABA) Routing Transit Number (RTN).
	DestinationRoutingNumber string `json:"destination_routing_number"`
	// Unstructured information that will show on the recipient's bank statement.
	RemittanceInformation string `json:"remittance_information"`
	// The identifier of the Real Time Payments Transfer that led to this Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceSampleFunds - A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
type InboundAchTransferSimulationResultTransactionTransactionSourceSampleFunds struct {
	// Where the sample funds came from.
	Originator string `json:"originator"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention - A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
type InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention struct {
	AccountNumber string `json:"account_number"`
	// The transfer amount in USD cents.
	Amount             int64  `json:"amount"`
	MessageToRecipient string `json:"message_to_recipient"`
	RoutingNumber      string `json:"routing_number"`
	TransferID         string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection - A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
type InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection struct {
	TransferID string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferIntention - A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
type InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferIntention struct {
	// The destination account number.
	AccountNumber string `json:"account_number"`
	// The transfer amount in USD cents.
	Amount int64 `json:"amount"`
	// The message that will show on the recipient's bank statement.
	MessageToRecipient string `json:"message_to_recipient"`
	// The American Bankers' Association (ABA) Routing Transit Number (RTN).
	RoutingNumber string `json:"routing_number"`
	TransferID    string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferRejection - A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
type InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferRejection struct {
	TransferID string `json:"transfer_id"`
}

// InboundAchTransferSimulationResultTransactionTransactionSource - This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
type InboundAchTransferSimulationResultTransactionTransactionSource struct {
	// A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
	AccountTransferIntention InboundAchTransferSimulationResultTransactionTransactionSourceAccountTransferIntention `json:"account_transfer_intention"`
	// A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
	AchCheckConversion InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversion `json:"ach_check_conversion"`
	// A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
	AchCheckConversionReturn InboundACHTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn `json:"ach_check_conversion_return"`
	// A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
	AchTransferIntention InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferIntention `json:"ach_transfer_intention"`
	// A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
	AchTransferRejection InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferRejection `json:"ach_transfer_rejection"`
	// A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
	AchTransferReturn InboundACHTransferSimulationResultTransactionTransactionSourceACHTransferReturn `json:"ach_transfer_return"`
	// A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
	CardDisputeAcceptance InboundAchTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance `json:"card_dispute_acceptance"`
	// A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
	CardRefund InboundAchTransferSimulationResultTransactionTransactionSourceCardRefund `json:"card_refund"`
	// A Card Revenue Payment object. This field will be present in the JSON response if and only if `category` is equal to `card_revenue_payment`.
	CardRevenuePayment InboundAchTransferSimulationResultTransactionTransactionSourceCardRevenuePayment `json:"card_revenue_payment"`
	// A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
	CardRouteRefund InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund `json:"card_route_refund"`
	// A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
	CardRouteSettlement InboundAchTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement `json:"card_route_settlement"`
	// A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
	CardSettlement InboundAchTransferSimulationResultTransactionTransactionSourceCardSettlement `json:"card_settlement"`
	// The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
	Category InboundAchTransferSimulationResultTransactionTransactionSourceCategoryEnum `json:"category"`
	// A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
	CheckDepositAcceptance InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance `json:"check_deposit_acceptance"`
	// A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
	CheckDepositReturn InboundAchTransferSimulationResultTransactionTransactionSourceCheckDepositReturn `json:"check_deposit_return"`
	// A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
	CheckTransferIntention InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferIntention `json:"check_transfer_intention"`
	// A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
	CheckTransferRejection InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferRejection `json:"check_transfer_rejection"`
	// A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
	CheckTransferReturn InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferReturn `json:"check_transfer_return"`
	// A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
	CheckTransferStopPaymentRequest InboundAchTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest `json:"check_transfer_stop_payment_request"`
	// A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
	DisputeResolution InboundAchTransferSimulationResultTransactionTransactionSourceDisputeResolution `json:"dispute_resolution"`
	// A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
	EmpyrealCashDeposit InboundAchTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit `json:"empyreal_cash_deposit"`
	// A Fee Payment object. This field will be present in the JSON response if and only if `category` is equal to `fee_payment`.
	FeePayment InboundAchTransferSimulationResultTransactionTransactionSourceFeePayment `json:"fee_payment"`
	// A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
	InboundAchTransfer InboundACHTransferSimulationResultTransactionTransactionSourceInboundACHTransfer `json:"inbound_ach_transfer"`
	// A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
	InboundCheck InboundAchTransferSimulationResultTransactionTransactionSourceInboundCheck `json:"inbound_check"`
	// A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
	InboundInternationalAchTransfer InboundACHTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer `json:"inbound_international_ach_transfer"`
	// A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
	InboundRealTimePaymentsTransferConfirmation InboundAchTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation `json:"inbound_real_time_payments_transfer_confirmation"`
	// A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
	InboundWireDrawdownPayment InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment `json:"inbound_wire_drawdown_payment"`
	// A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
	InboundWireDrawdownPaymentReversal InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal `json:"inbound_wire_drawdown_payment_reversal"`
	// A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
	InboundWireReversal InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireReversal `json:"inbound_wire_reversal"`
	// A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
	InboundWireTransfer InboundAchTransferSimulationResultTransactionTransactionSourceInboundWireTransfer `json:"inbound_wire_transfer"`
	// A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
	InterestPayment InboundAchTransferSimulationResultTransactionTransactionSourceInterestPayment `json:"interest_payment"`
	// A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
	InternalSource InboundAchTransferSimulationResultTransactionTransactionSourceInternalSource `json:"internal_source"`
	// A Real Time Payments Transfer Acknowledgement object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_acknowledgement`.
	RealTimePaymentsTransferAcknowledgement InboundAchTransferSimulationResultTransactionTransactionSourceRealTimePaymentsTransferAcknowledgement `json:"real_time_payments_transfer_acknowledgement"`
	// A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
	SampleFunds InboundAchTransferSimulationResultTransactionTransactionSourceSampleFunds `json:"sample_funds"`
	// A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
	WireDrawdownPaymentIntention InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention `json:"wire_drawdown_payment_intention"`
	// A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
	WireDrawdownPaymentRejection InboundAchTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection `json:"wire_drawdown_payment_rejection"`
	// A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
	WireTransferIntention InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferIntention `json:"wire_transfer_intention"`
	// A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
	WireTransferRejection InboundAchTransferSimulationResultTransactionTransactionSourceWireTransferRejection `json:"wire_transfer_rejection"`
}

// InboundAchTransferSimulationResultTransactionTypeEnum - A constant representing the object's type. For this resource it will always be `transaction`.
type InboundAchTransferSimulationResultTransactionTypeEnum string

const (
	InboundAchTransferSimulationResultTransactionTypeEnumTransaction InboundAchTransferSimulationResultTransactionTypeEnum = "transaction"
)

func (e InboundAchTransferSimulationResultTransactionTypeEnum) ToPointer() *InboundAchTransferSimulationResultTransactionTypeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "transaction":
		*e = InboundAchTransferSimulationResultTransactionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTransactionTypeEnum: %v", v)
	}
}

// InboundAchTransferSimulationResultTransaction - If the ACH Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_ach_transfer`.
type InboundAchTransferSimulationResultTransaction struct {
	// The identifier for the Account the Transaction belongs to.
	AccountID string `json:"account_id"`
	// The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.
	CreatedAt time.Time `json:"created_at"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.
	Currency InboundAchTransferSimulationResultTransactionCurrencyEnum `json:"currency"`
	// For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides.
	Description string `json:"description"`
	// The Transaction identifier.
	ID string `json:"id"`
	// The identifier for the route this Transaction came through. Routes are things like cards and ACH details.
	RouteID string `json:"route_id"`
	// The type of the route this Transaction came through.
	RouteType InboundAchTransferSimulationResultTransactionRouteTypeEnum `json:"route_type"`
	// This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
	Source InboundAchTransferSimulationResultTransactionTransactionSource `json:"source"`
	// A constant representing the object's type. For this resource it will always be `transaction`.
	Type InboundAchTransferSimulationResultTransactionTypeEnum `json:"type"`
}

// InboundAchTransferSimulationResultTypeEnum - A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_simulation_result`.
type InboundAchTransferSimulationResultTypeEnum string

const (
	InboundAchTransferSimulationResultTypeEnumInboundAchTransferSimulationResult InboundAchTransferSimulationResultTypeEnum = "inbound_ach_transfer_simulation_result"
)

func (e InboundAchTransferSimulationResultTypeEnum) ToPointer() *InboundAchTransferSimulationResultTypeEnum {
	return &e
}

func (e *InboundAchTransferSimulationResultTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inbound_ach_transfer_simulation_result":
		*e = InboundAchTransferSimulationResultTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundAchTransferSimulationResultTypeEnum: %v", v)
	}
}

// InboundAchTransferSimulationResult - The results of an inbound ACH Transfer simulation.
type InboundAchTransferSimulationResult struct {
	// If the ACH Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_ach_transfer`.
	DeclinedTransaction InboundAchTransferSimulationResultDeclinedTransaction `json:"declined_transaction"`
	// If the ACH Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_ach_transfer`.
	Transaction InboundAchTransferSimulationResultTransaction `json:"transaction"`
	// A constant representing the object's type. For this resource it will always be `inbound_ach_transfer_simulation_result`.
	Type InboundAchTransferSimulationResultTypeEnum `json:"type"`
}
