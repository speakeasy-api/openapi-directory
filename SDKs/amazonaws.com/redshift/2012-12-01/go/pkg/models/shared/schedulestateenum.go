// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScheduleStateEnum string

const (
	ScheduleStateEnumModifying ScheduleStateEnum = "MODIFYING"
	ScheduleStateEnumActive    ScheduleStateEnum = "ACTIVE"
	ScheduleStateEnumFailed    ScheduleStateEnum = "FAILED"
)

func (e ScheduleStateEnum) ToPointer() *ScheduleStateEnum {
	return &e
}

func (e *ScheduleStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MODIFYING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "FAILED":
		*e = ScheduleStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScheduleStateEnum: %v", v)
	}
}
