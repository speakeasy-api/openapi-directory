// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EmployeesSortByEnum - The field on which to sort the Employees
type EmployeesSortByEnum string

const (
	EmployeesSortByEnumFirstName EmployeesSortByEnum = "first_name"
	EmployeesSortByEnumLastName  EmployeesSortByEnum = "last_name"
	EmployeesSortByEnumCreatedAt EmployeesSortByEnum = "created_at"
	EmployeesSortByEnumUpdatedAt EmployeesSortByEnum = "updated_at"
)

func (e EmployeesSortByEnum) ToPointer() *EmployeesSortByEnum {
	return &e
}

func (e *EmployeesSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "first_name":
		fallthrough
	case "last_name":
		fallthrough
	case "created_at":
		fallthrough
	case "updated_at":
		*e = EmployeesSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EmployeesSortByEnum: %v", v)
	}
}

// EmployeesSort - Apply sorting
type EmployeesSort struct {
	// The field on which to sort the Employees
	By *EmployeesSortByEnum `queryParam:"name=by"`
	// The direction in which to sort the results
	Direction *SortDirectionEnum `queryParam:"name=direction"`
}
