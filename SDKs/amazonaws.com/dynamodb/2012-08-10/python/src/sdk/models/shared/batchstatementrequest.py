"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attributevalue as shared_attributevalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchStatementRequest:
    r"""A PartiQL batch statement request."""
    
    statement: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Statement') }})  
    consistent_read: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConsistentRead'), 'exclude': lambda f: f is None }})  
    parameters: Optional[list[shared_attributevalue.AttributeValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Parameters'), 'exclude': lambda f: f is None }})  
    