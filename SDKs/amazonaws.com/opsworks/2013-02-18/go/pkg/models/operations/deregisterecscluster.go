// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeregisterEcsClusterXAmzTargetEnum
type DeregisterEcsClusterXAmzTargetEnum string

const (
	DeregisterEcsClusterXAmzTargetEnumOpsWorks20130218DeregisterEcsCluster DeregisterEcsClusterXAmzTargetEnum = "OpsWorks_20130218.DeregisterEcsCluster"
)

func (e *DeregisterEcsClusterXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OpsWorks_20130218.DeregisterEcsCluster":
		*e = DeregisterEcsClusterXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeregisterEcsClusterXAmzTargetEnum: %s", s)
	}
}

type DeregisterEcsClusterRequest struct {
	DeregisterEcsClusterRequest shared.DeregisterEcsClusterRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DeregisterEcsClusterXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeregisterEcsClusterResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
