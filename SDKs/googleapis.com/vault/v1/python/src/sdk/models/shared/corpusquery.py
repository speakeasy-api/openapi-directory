"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import helddrivequery as shared_helddrivequery
from ..shared import heldgroupsquery as shared_heldgroupsquery
from ..shared import heldhangoutschatquery as shared_heldhangoutschatquery
from ..shared import heldmailquery as shared_heldmailquery
from ..shared import heldvoicequery as shared_heldvoicequery
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CorpusQuery:
    r"""Service-specific options for holds."""
    
    drive_query: Optional[shared_helddrivequery.HeldDriveQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driveQuery'), 'exclude': lambda f: f is None }})
    r"""Options for Drive holds."""  
    groups_query: Optional[shared_heldgroupsquery.HeldGroupsQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupsQuery'), 'exclude': lambda f: f is None }})
    r"""Query options for group holds."""  
    hangouts_chat_query: Optional[shared_heldhangoutschatquery.HeldHangoutsChatQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hangoutsChatQuery'), 'exclude': lambda f: f is None }})
    r"""Options for Chat holds."""  
    mail_query: Optional[shared_heldmailquery.HeldMailQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mailQuery'), 'exclude': lambda f: f is None }})
    r"""Query options for Gmail holds."""  
    voice_query: Optional[shared_heldvoicequery.HeldVoiceQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voiceQuery'), 'exclude': lambda f: f is None }})
    r"""Options for Voice holds."""  
    