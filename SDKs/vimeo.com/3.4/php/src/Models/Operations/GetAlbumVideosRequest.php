<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetAlbumVideosRequest
{
    /**
     * The ID of the album.
     * 
     * @var float $albumId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=album_id')]
    public float $albumId;
    
    /**
     * The page containing the video URI.
     * 
     * @var ?string $containingUri
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=containing_uri')]
    public ?string $containingUri = null;
    
    /**
     * The sort direction of the results.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetAlbumVideosDirectionEnum $direction
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=direction')]
    public ?GetAlbumVideosDirectionEnum $direction = null;
    
    /**
     * The attribute by which to filter the results.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetAlbumVideosFilterEnum $filter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter')]
    public ?GetAlbumVideosFilterEnum $filter = null;
    
    /**
     * Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
     * 
     * @var ?bool $filterEmbeddable
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter_embeddable')]
    public ?bool $filterEmbeddable = null;
    
    /**
     * The page number of the results to show.
     * 
     * @var ?float $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?float $page = null;
    
    /**
     * The password of the album.
     * 
     * @var ?string $password
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=password')]
    public ?string $password = null;
    
    /**
     * The number of items to show on each page of results, up to a maximum of 100.
     * 
     * @var ?float $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?float $perPage = null;
    
    /**
     * The search query to use to filter the results.
     * 
     * @var ?string $query
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=query')]
    public ?string $query = null;
    
    /**
     * The way to sort the results.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetAlbumVideosSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?GetAlbumVideosSortEnum $sort = null;
    
    /**
     * The ID of the user.
     * 
     * @var float $userId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=user_id')]
    public float $userId;
    
    /**
     * Whether to include private videos in the search. Please note that a separate search service provides this functionality. The service performs a partial text search on the video's name.
     * 
     * @var ?bool $weakSearch
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=weak_search')]
    public ?bool $weakSearch = null;
    
	public function __construct()
	{
		$this->albumId = 0;
		$this->containingUri = null;
		$this->direction = null;
		$this->filter = null;
		$this->filterEmbeddable = null;
		$this->page = null;
		$this->password = null;
		$this->perPage = null;
		$this->query = null;
		$this->sort = null;
		$this->userId = 0;
		$this->weakSearch = null;
	}
}
