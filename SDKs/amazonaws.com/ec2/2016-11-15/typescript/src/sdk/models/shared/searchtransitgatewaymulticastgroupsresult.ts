/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The member type (for example, <code>static</code>).
 */
export enum SearchTransitGatewayMulticastGroupsResultMulticastGroupsMemberTypeEnum {
  Static = "static",
  Igmp = "igmp",
}

/**
 * The type of resource, for example a VPC attachment.
 */
export enum SearchTransitGatewayMulticastGroupsResultMulticastGroupsResourceTypeEnum {
  Vpc = "vpc",
  Vpn = "vpn",
  DirectConnectGateway = "direct-connect-gateway",
  Connect = "connect",
  Peering = "peering",
  TgwPeering = "tgw-peering",
}

/**
 * The source type.
 */
export enum SearchTransitGatewayMulticastGroupsResultMulticastGroupsSourceTypeEnum {
  Static = "static",
  Igmp = "igmp",
}

/**
 * Describes the transit gateway multicast group resources.
 */
export class SearchTransitGatewayMulticastGroupsResultMulticastGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  groupIpAddress?: string;

  @SpeakeasyMetadata()
  groupMember?: boolean;

  @SpeakeasyMetadata()
  groupSource?: boolean;

  @SpeakeasyMetadata()
  memberType?: SearchTransitGatewayMulticastGroupsResultMulticastGroupsMemberTypeEnum;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceOwnerId?: string;

  @SpeakeasyMetadata()
  resourceType?: SearchTransitGatewayMulticastGroupsResultMulticastGroupsResourceTypeEnum;

  @SpeakeasyMetadata()
  sourceType?: SearchTransitGatewayMulticastGroupsResultMulticastGroupsSourceTypeEnum;

  @SpeakeasyMetadata()
  subnetId?: string;

  @SpeakeasyMetadata()
  transitGatewayAttachmentId?: string;
}

/**
 * Success
 */
export class SearchTransitGatewayMulticastGroupsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: SearchTransitGatewayMulticastGroupsResultMulticastGroups,
  })
  multicastGroups?: SearchTransitGatewayMulticastGroupsResultMulticastGroups[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
