<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RampIntervalRequest - Container for the intervals that the ramp is split into in its timeline. Zuora can report metrics for this specific period.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RampIntervalRequest
{
    /**
     * The short description of the interval.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The end date of the interval.
     * 
     * @var \DateTime $endDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('endDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $endDate;
    
    /**
     * The name of the interval.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The start date of the interval.
     * 
     * @var \DateTime $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('startDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $startDate;
    
	public function __construct()
	{
		$this->description = null;
		$this->endDate = new \DateTime();
		$this->name = null;
		$this->startDate = new \DateTime();
	}
}
