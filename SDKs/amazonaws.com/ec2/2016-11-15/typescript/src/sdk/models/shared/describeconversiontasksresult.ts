/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The instance operating system.
 */
export enum DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum {
  Windows = "Windows",
}

/**
 * The disk image format.
 */
export enum DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum {
  Vmdk = "VMDK",
  Raw = "RAW",
  Vhd = "VHD",
}

/**
 * The image.
 */
export class DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  checksum?: string;

  @SpeakeasyMetadata()
  format?: DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum;

  @SpeakeasyMetadata()
  importManifestUrl?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * The volume.
 */
export class DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * Describes an import volume task.
 */
export class DescribeConversionTasksResultConversionTasksImportInstanceVolumes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  bytesConverted?: number;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  image?: DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage;

  @SpeakeasyMetadata()
  status?: string;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata()
  volume?: DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume;
}

/**
 * If the task is for importing an instance, this contains information about the import instance task.
 */
export class DescribeConversionTasksResultConversionTasksImportInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  platform?: DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum;

  @SpeakeasyMetadata({
    elemType: DescribeConversionTasksResultConversionTasksImportInstanceVolumes,
  })
  volumes?: DescribeConversionTasksResultConversionTasksImportInstanceVolumes[];
}

/**
 * The disk image format.
 */
export enum DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum {
  Vmdk = "VMDK",
  Raw = "RAW",
  Vhd = "VHD",
}

/**
 * The image.
 */
export class DescribeConversionTasksResultConversionTasksImportVolumeImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  checksum?: string;

  @SpeakeasyMetadata()
  format?: DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum;

  @SpeakeasyMetadata()
  importManifestUrl?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * The volume.
 */
export class DescribeConversionTasksResultConversionTasksImportVolumeVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  size?: number;
}

/**
 * If the task is for importing a volume, this contains information about the import volume task.
 */
export class DescribeConversionTasksResultConversionTasksImportVolume extends SpeakeasyBase {
  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  bytesConverted?: number;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  image?: DescribeConversionTasksResultConversionTasksImportVolumeImage;

  @SpeakeasyMetadata()
  volume?: DescribeConversionTasksResultConversionTasksImportVolumeVolume;
}

/**
 * The state of the conversion task.
 */
export enum DescribeConversionTasksResultConversionTasksStateEnum {
  Active = "active",
  Cancelling = "cancelling",
  Cancelled = "cancelled",
  Completed = "completed",
}

/**
 * Describes a tag.
 */
export class DescribeConversionTasksResultConversionTasksTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a conversion task.
 */
export class DescribeConversionTasksResultConversionTasks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  conversionTaskId?: string;

  @SpeakeasyMetadata()
  expirationTime?: string;

  @SpeakeasyMetadata()
  importInstance?: DescribeConversionTasksResultConversionTasksImportInstance;

  @SpeakeasyMetadata()
  importVolume?: DescribeConversionTasksResultConversionTasksImportVolume;

  @SpeakeasyMetadata()
  state?: DescribeConversionTasksResultConversionTasksStateEnum;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata({
    elemType: DescribeConversionTasksResultConversionTasksTags,
  })
  tags?: DescribeConversionTasksResultConversionTasksTags[];
}

/**
 * Success
 */
export class DescribeConversionTasksResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DescribeConversionTasksResultConversionTasks })
  conversionTasks?: DescribeConversionTasksResultConversionTasks[];
}
