"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DomainDomainTypeEnum(str, Enum):
    LDAP = 'LDAP'
    LOCAL = 'LOCAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Domain:
    
    domain_type: Optional[DomainDomainTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain_type'), 'exclude': lambda f: f is None }})  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""domain value, not required for LOCAL domain"""  
    