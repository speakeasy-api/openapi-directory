/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Whether the delete applies only to this event, to all events within the series from this event or to all events within the series.
 */
export enum DeleteEventsIdBehaviourEnum {
  One = "one",
  Forward = "forward",
  All = "all",
}

export class DeleteEventsIdRequest extends SpeakeasyBase {
  /**
   * Whether the delete applies only to this event, to all events within the series from this event or to all events within the series.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=behaviour",
  })
  behaviour: DeleteEventsIdBehaviourEnum;

  /**
   * The unique identifier of the event.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class DeleteEventsIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
