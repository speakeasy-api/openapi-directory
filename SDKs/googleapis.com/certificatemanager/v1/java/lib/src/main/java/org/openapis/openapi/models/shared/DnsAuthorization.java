/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DnsAuthorization - A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.
 */
public class DnsAuthorization {
    /**
     * Output only. The creation timestamp of a DnsAuthorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public DnsAuthorization withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * One or more paragraphs of text description of a DnsAuthorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public DnsAuthorization withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dnsResourceRecord")
    public DnsResourceRecord dnsResourceRecord;

    public DnsAuthorization withDnsResourceRecord(DnsResourceRecord dnsResourceRecord) {
        this.dnsResourceRecord = dnsResourceRecord;
        return this;
    }
    
    /**
     * Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain")
    public String domain;

    public DnsAuthorization withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * Set of labels associated with a DnsAuthorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public DnsAuthorization withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/* /locations/* /dnsAuthorizations/*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public DnsAuthorization withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The last update timestamp of a DnsAuthorization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public DnsAuthorization withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public DnsAuthorization(){}
}
