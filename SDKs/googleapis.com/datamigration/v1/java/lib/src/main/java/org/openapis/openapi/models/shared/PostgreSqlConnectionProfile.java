/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PostgreSqlConnectionProfile - Specifies connection parameters required specifically for PostgreSQL databases.
 */
public class PostgreSqlConnectionProfile {
    /**
     * If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudSqlId")
    public String cloudSqlId;

    public PostgreSqlConnectionProfile withCloudSqlId(String cloudSqlId) {
        this.cloudSqlId = cloudSqlId;
        return this;
    }
    
    /**
     * Required. The IP or hostname of the source PostgreSQL database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host")
    public String host;

    public PostgreSqlConnectionProfile withHost(String host) {
        this.host = host;
        return this;
    }
    
    /**
     * Output only. If the source is a Cloud SQL database, this field indicates the network architecture it's associated with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkArchitecture")
    public PostgreSqlConnectionProfileNetworkArchitectureEnum networkArchitecture;

    public PostgreSqlConnectionProfile withNetworkArchitecture(PostgreSqlConnectionProfileNetworkArchitectureEnum networkArchitecture) {
        this.networkArchitecture = networkArchitecture;
        return this;
    }
    
    /**
     * Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;

    public PostgreSqlConnectionProfile withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Output only. Indicates If this connection profile password is stored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passwordSet")
    public Boolean passwordSet;

    public PostgreSqlConnectionProfile withPasswordSet(Boolean passwordSet) {
        this.passwordSet = passwordSet;
        return this;
    }
    
    /**
     * Required. The network port of the source PostgreSQL database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public Integer port;

    public PostgreSqlConnectionProfile withPort(Integer port) {
        this.port = port;
        return this;
    }
    
    /**
     * Private Service Connect connectivity (https://cloud.google.com/vpc/docs/private-service-connect#benefits-services)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateServiceConnectConnectivity")
    public PrivateServiceConnectConnectivity privateServiceConnectConnectivity;

    public PostgreSqlConnectionProfile withPrivateServiceConnectConnectivity(PrivateServiceConnectConnectivity privateServiceConnectConnectivity) {
        this.privateServiceConnectConnectivity = privateServiceConnectConnectivity;
        return this;
    }
    
    /**
     * SSL configuration information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssl")
    public SslConfig ssl;

    public PostgreSqlConnectionProfile withSsl(SslConfig ssl) {
        this.ssl = ssl;
        return this;
    }
    
    /**
     * The source database will allow incoming connections from the public IP of the destination database. You can retrieve the public IP of the Cloud SQL instance from the Cloud SQL console or using Cloud SQL APIs. No additional configuration is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("staticIpConnectivity")
    public java.util.Map<String, Object> staticIpConnectivity;

    public PostgreSqlConnectionProfile withStaticIpConnectivity(java.util.Map<String, Object> staticIpConnectivity) {
        this.staticIpConnectivity = staticIpConnectivity;
        return this;
    }
    
    /**
     * Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public PostgreSqlConnectionProfile withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public PostgreSqlConnectionProfile(){}
}
