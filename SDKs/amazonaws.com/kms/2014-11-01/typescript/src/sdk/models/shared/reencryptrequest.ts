/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EncryptionAlgorithmSpecEnum } from "./encryptionalgorithmspecenum";
import { Expose } from "class-transformer";

export class ReEncryptRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CiphertextBlob" })
  ciphertextBlob: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationEncryptionAlgorithm" })
  destinationEncryptionAlgorithm?: EncryptionAlgorithmSpecEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationEncryptionContext" })
  destinationEncryptionContext?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationKeyId" })
  destinationKeyId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GrantTokens" })
  grantTokens?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SourceEncryptionAlgorithm" })
  sourceEncryptionAlgorithm?: EncryptionAlgorithmSpecEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceEncryptionContext" })
  sourceEncryptionContext?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceKeyId" })
  sourceKeyId?: string;
}
