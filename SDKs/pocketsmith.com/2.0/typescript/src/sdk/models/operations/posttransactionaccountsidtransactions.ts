/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostTransactionAccountsIdTransactionsRequestBody extends SpeakeasyBase {
  /**
   * The amount of the transaction. A positive amount is a credit, and a negative amount is a debit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * The unique identifier of a category for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category_id" })
  categoryId?: number;

  /**
   * A cheque number for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cheque_number" })
  chequeNumber?: string;

  /**
   * The date when the transaction occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date: string;

  /**
   * Whether the transaction should be indicated as a transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_transfer" })
  isTransfer?: boolean;

  /**
   * A set of comma-separated labels for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: string;

  /**
   * A memo for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memo" })
  memo?: string;

  /**
   * Whether the transaction needs to be reviewed or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "needs_review" })
  needsReview?: boolean;

  /**
   * A note for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  /**
   * The payee/merchant of the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payee" })
  payee: string;
}

export class PostTransactionAccountsIdTransactionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostTransactionAccountsIdTransactionsRequestBody;

  /**
   * The unique identifier of the transaction account.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

export class PostTransactionAccountsIdTransactionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Not Allowed
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  transaction?: shared.Transaction;
}
