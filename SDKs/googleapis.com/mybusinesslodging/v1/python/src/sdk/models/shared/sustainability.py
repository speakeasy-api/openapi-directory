"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import energyefficiency as shared_energyefficiency
from ..shared import sustainabilitycertifications as shared_sustainabilitycertifications
from ..shared import sustainablesourcing as shared_sustainablesourcing
from ..shared import wastereduction as shared_wastereduction
from ..shared import waterconservation as shared_waterconservation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SustainabilityInput:
    r"""Sustainability practices implemented at the hotel."""
    
    energy_efficiency: Optional[shared_energyefficiency.EnergyEfficiencyInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('energyEfficiency'), 'exclude': lambda f: f is None }})
    r"""Energy efficiency practices implemented at the hotel."""  
    sustainability_certifications: Optional[shared_sustainabilitycertifications.SustainabilityCertifications] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sustainabilityCertifications'), 'exclude': lambda f: f is None }})
    r"""Sustainability certifications the hotel has been awarded."""  
    sustainable_sourcing: Optional[shared_sustainablesourcing.SustainableSourcing] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sustainableSourcing'), 'exclude': lambda f: f is None }})
    r"""Sustainable sourcing practices implemented at the hotel."""  
    waste_reduction: Optional[shared_wastereduction.WasteReduction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wasteReduction'), 'exclude': lambda f: f is None }})
    r"""Waste reduction practices implemented at the hotel."""  
    water_conservation: Optional[shared_waterconservation.WaterConservation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waterConservation'), 'exclude': lambda f: f is None }})
    r"""Water conservation practices implemented at the hotel."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Sustainability:
    r"""Sustainability practices implemented at the hotel."""
    
    energy_efficiency: Optional[shared_energyefficiency.EnergyEfficiency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('energyEfficiency'), 'exclude': lambda f: f is None }})
    r"""Energy efficiency practices implemented at the hotel."""  
    sustainability_certifications: Optional[shared_sustainabilitycertifications.SustainabilityCertifications] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sustainabilityCertifications'), 'exclude': lambda f: f is None }})
    r"""Sustainability certifications the hotel has been awarded."""  
    sustainable_sourcing: Optional[shared_sustainablesourcing.SustainableSourcing] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sustainableSourcing'), 'exclude': lambda f: f is None }})
    r"""Sustainable sourcing practices implemented at the hotel."""  
    waste_reduction: Optional[shared_wastereduction.WasteReduction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wasteReduction'), 'exclude': lambda f: f is None }})
    r"""Waste reduction practices implemented at the hotel."""  
    water_conservation: Optional[shared_waterconservation.WaterConservation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waterConservation'), 'exclude': lambda f: f is None }})
    r"""Water conservation practices implemented at the hotel."""  
    