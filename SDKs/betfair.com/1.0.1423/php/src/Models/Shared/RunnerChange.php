<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class RunnerChange
{
    /**
     * Available To Back - PriceVol tuple delta of price changes (0 vol is remove)
     * 
     * @var ?array<array<float>> $atb
     */
	#[\JMS\Serializer\Annotation\SerializedName('atb')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $atb = null;
    
    /**
     * Available To Lay - PriceVol tuple delta of price changes (0 vol is remove)
     * 
     * @var ?array<array<float>> $atl
     */
	#[\JMS\Serializer\Annotation\SerializedName('atl')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $atl = null;
    
    /**
     * Best Available To Back - LevelPriceVol triple delta of price changes, keyed by level (0 vol is remove)
     * 
     * @var ?array<array<float>> $batb
     */
	#[\JMS\Serializer\Annotation\SerializedName('batb')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $batb = null;
    
    /**
     * Best Available To Lay - LevelPriceVol triple delta of price changes, keyed by level (0 vol is remove)
     * 
     * @var ?array<array<float>> $batl
     */
	#[\JMS\Serializer\Annotation\SerializedName('batl')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $batl = null;
    
    /**
     * Best Display Available To Back (includes virtual prices)- LevelPriceVol triple delta of price changes, keyed by level (0 vol is remove)
     * 
     * @var ?array<array<float>> $bdatb
     */
	#[\JMS\Serializer\Annotation\SerializedName('bdatb')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $bdatb = null;
    
    /**
     * Best Display Available To Lay (includes virtual prices)- LevelPriceVol triple delta of price changes, keyed by level (0 vol is remove)
     * 
     * @var ?array<array<float>> $bdatl
     */
	#[\JMS\Serializer\Annotation\SerializedName('bdatl')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $bdatl = null;
    
    /**
     * Handicap - the handicap of the runner (selection) (null if not applicable)
     * 
     * @var ?float $hc
     */
	#[\JMS\Serializer\Annotation\SerializedName('hc')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $hc = null;
    
    /**
     * Selection Id - the id of the runner (selection)
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Last Traded Price - The last traded price (or null if un-changed)
     * 
     * @var ?float $ltp
     */
	#[\JMS\Serializer\Annotation\SerializedName('ltp')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $ltp = null;
    
    /**
     * Starting Price Back - PriceVol tuple delta of price changes (0 vol is remove)
     * 
     * @var ?array<array<float>> $spb
     */
	#[\JMS\Serializer\Annotation\SerializedName('spb')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $spb = null;
    
    /**
     * Starting Price Far - The far starting price (or null if un-changed)
     * 
     * @var ?float $spf
     */
	#[\JMS\Serializer\Annotation\SerializedName('spf')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $spf = null;
    
    /**
     * Starting Price Lay - PriceVol tuple delta of price changes (0 vol is remove)
     * 
     * @var ?array<array<float>> $spl
     */
	#[\JMS\Serializer\Annotation\SerializedName('spl')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $spl = null;
    
    /**
     * Starting Price Near - The far starting price (or null if un-changed)
     * 
     * @var ?float $spn
     */
	#[\JMS\Serializer\Annotation\SerializedName('spn')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $spn = null;
    
    /**
     * Traded - PriceVol tuple delta of price changes (0 vol is remove)
     * 
     * @var ?array<array<float>> $trd
     */
	#[\JMS\Serializer\Annotation\SerializedName('trd')]
    #[\JMS\Serializer\Annotation\Type('array<array<float>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $trd = null;
    
    /**
     * The total amount matched. This value is truncated at 2dp.
     * 
     * @var ?float $tv
     */
	#[\JMS\Serializer\Annotation\SerializedName('tv')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $tv = null;
    
	public function __construct()
	{
		$this->atb = null;
		$this->atl = null;
		$this->batb = null;
		$this->batl = null;
		$this->bdatb = null;
		$this->bdatl = null;
		$this->hc = null;
		$this->id = null;
		$this->ltp = null;
		$this->spb = null;
		$this->spf = null;
		$this->spl = null;
		$this->spn = null;
		$this->trd = null;
		$this->tv = null;
	}
}
