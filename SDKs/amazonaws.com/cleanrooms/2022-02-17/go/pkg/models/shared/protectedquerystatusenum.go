// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProtectedQueryStatusEnum string

const (
	ProtectedQueryStatusEnumSubmitted  ProtectedQueryStatusEnum = "SUBMITTED"
	ProtectedQueryStatusEnumStarted    ProtectedQueryStatusEnum = "STARTED"
	ProtectedQueryStatusEnumCancelled  ProtectedQueryStatusEnum = "CANCELLED"
	ProtectedQueryStatusEnumCancelling ProtectedQueryStatusEnum = "CANCELLING"
	ProtectedQueryStatusEnumFailed     ProtectedQueryStatusEnum = "FAILED"
	ProtectedQueryStatusEnumSuccess    ProtectedQueryStatusEnum = "SUCCESS"
	ProtectedQueryStatusEnumTimedOut   ProtectedQueryStatusEnum = "TIMED_OUT"
)

func (e ProtectedQueryStatusEnum) ToPointer() *ProtectedQueryStatusEnum {
	return &e
}

func (e *ProtectedQueryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUBMITTED":
		fallthrough
	case "STARTED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "TIMED_OUT":
		*e = ProtectedQueryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProtectedQueryStatusEnum: %v", v)
	}
}
