"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import channelgrouping as shared_channelgrouping
from ..shared import pathfilter as shared_pathfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PathQueryOptions:
    r"""Path Query Options for Report Options."""
    
    channel_grouping: Optional[shared_channelgrouping.ChannelGrouping] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelGrouping'), 'exclude': lambda f: f is None }})
    r"""A channel grouping defines a set of rules that can be used to categorize events in a path report."""  
    path_filters: Optional[list[shared_pathfilter.PathFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pathFilters'), 'exclude': lambda f: f is None }})
    r"""Path Filters. There is a limit of 100 path filters that can be set per report."""  
    