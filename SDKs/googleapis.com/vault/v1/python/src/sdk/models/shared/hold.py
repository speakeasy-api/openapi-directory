"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import corpusquery as shared_corpusquery
from ..shared import heldaccount as shared_heldaccount
from ..shared import heldorgunit as shared_heldorgunit
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class HoldCorpusEnum(str, Enum):
    r"""The service to be searched."""
    CORPUS_TYPE_UNSPECIFIED = 'CORPUS_TYPE_UNSPECIFIED'
    DRIVE = 'DRIVE'
    MAIL = 'MAIL'
    GROUPS = 'GROUPS'
    HANGOUTS_CHAT = 'HANGOUTS_CHAT'
    VOICE = 'VOICE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Hold:
    r"""A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege."""
    
    accounts: Optional[list[shared_heldaccount.HeldAccount]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accounts'), 'exclude': lambda f: f is None }})
    r"""If set, the hold applies to the specified accounts and **orgUnit** must be empty."""  
    corpus: Optional[HoldCorpusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('corpus'), 'exclude': lambda f: f is None }})
    r"""The service to be searched."""  
    hold_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('holdId'), 'exclude': lambda f: f is None }})
    r"""The unique immutable ID of the hold. Assigned during creation."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the hold."""  
    org_unit: Optional[shared_heldorgunit.HeldOrgUnit] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orgUnit'), 'exclude': lambda f: f is None }})
    r"""The organizational unit covered by a hold. This structure is immutable."""  
    query: Optional[shared_corpusquery.CorpusQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""Service-specific options for holds."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""The last time this hold was modified."""  
    