// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ImportBackendAuthRequestBody struct {
	// The ID of the Amazon Cognito identity pool.
	IdentityPoolID *string `json:"identityPoolId,omitempty"`
	// The ID of the Amazon Cognito native client.
	NativeClientID string `json:"nativeClientId"`
	// The ID of the Amazon Cognito user pool.
	UserPoolID string `json:"userPoolId"`
	// The ID of the Amazon Cognito web client.
	WebClientID string `json:"webClientId"`
}

type ImportBackendAuthRequest struct {
	RequestBody       ImportBackendAuthRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The app ID.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// The name of the backend environment.
	BackendEnvironmentName string `pathParam:"style=simple,explode=false,name=backendEnvironmentName"`
}

type ImportBackendAuthResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// GatewayTimeoutException
	GatewayTimeoutException interface{}
	// Success
	ImportBackendAuthResponse *shared.ImportBackendAuthResponse
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
