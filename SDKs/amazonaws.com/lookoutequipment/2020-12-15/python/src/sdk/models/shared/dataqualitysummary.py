"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import duplicatetimestamps as shared_duplicatetimestamps
from ..shared import insufficientsensordata as shared_insufficientsensordata
from ..shared import invalidsensordata as shared_invalidsensordata
from ..shared import missingsensordata as shared_missingsensordata
from ..shared import unsupportedtimestamps as shared_unsupportedtimestamps
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataQualitySummary:
    r"""DataQualitySummary gives aggregated statistics over all the sensors about a completed ingestion job. It primarily gives more information about statistics over different incorrect data like MissingCompleteSensorData, MissingSensorData, UnsupportedDateFormats, InsufficientSensorData, DuplicateTimeStamps."""
    
    duplicate_timestamps: shared_duplicatetimestamps.DuplicateTimestamps = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DuplicateTimestamps') }})  
    insufficient_sensor_data: shared_insufficientsensordata.InsufficientSensorData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InsufficientSensorData') }})  
    invalid_sensor_data: shared_invalidsensordata.InvalidSensorData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvalidSensorData') }})  
    missing_sensor_data: shared_missingsensordata.MissingSensorData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MissingSensorData') }})  
    unsupported_timestamps: shared_unsupportedtimestamps.UnsupportedTimestamps = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnsupportedTimestamps') }})  
    