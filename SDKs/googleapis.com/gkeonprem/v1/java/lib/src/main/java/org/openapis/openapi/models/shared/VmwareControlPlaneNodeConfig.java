/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VmwareControlPlaneNodeConfig - Specifies control plane node config for the VMware user cluster.
 */
public class VmwareControlPlaneNodeConfig {
    /**
     * Represents auto resizing configurations for the VMware user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoResizeConfig")
    public VmwareAutoResizeConfig autoResizeConfig;

    public VmwareControlPlaneNodeConfig withAutoResizeConfig(VmwareAutoResizeConfig autoResizeConfig) {
        this.autoResizeConfig = autoResizeConfig;
        return this;
    }
    
    /**
     * The number of CPUs for each admin cluster node that serve as control planes for this VMware user cluster. (default: 4 CPUs)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpus")
    public String cpus;

    public VmwareControlPlaneNodeConfig withCpus(String cpus) {
        this.cpus = cpus;
        return this;
    }
    
    /**
     * The megabytes of memory for each admin cluster node that serves as a control plane for this VMware user cluster (default: 8192 MB memory).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memory")
    public String memory;

    public VmwareControlPlaneNodeConfig withMemory(String memory) {
        this.memory = memory;
        return this;
    }
    
    /**
     * The number of control plane nodes for this VMware user cluster. (default: 1 replica).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicas")
    public String replicas;

    public VmwareControlPlaneNodeConfig withReplicas(String replicas) {
        this.replicas = replicas;
        return this;
    }
    
    /**
     * Specifies control plane node config.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vsphereConfig")
    public VmwareControlPlaneVsphereConfig vsphereConfig;

    public VmwareControlPlaneNodeConfig withVsphereConfig(VmwareControlPlaneVsphereConfig vsphereConfig) {
        this.vsphereConfig = vsphereConfig;
        return this;
    }
    
    public VmwareControlPlaneNodeConfig(){}
}
