/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The color of the text watermark.
 */
export enum AddTextWatermarkV1RequestBodyColorEnum {
  Red = "Red",
  Blue = "Blue",
  Gray = "Gray",
  Black = "Black",
}

export class AddTextWatermarkV1RequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

export class AddTextWatermarkV1RequestBody extends SpeakeasyBase {
  /**
   * The color of the text watermark.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=color" })
  color?: AddTextWatermarkV1RequestBodyColorEnum;

  /**
   * The input PDF document
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file: AddTextWatermarkV1RequestBodyFile;

  /**
   * The first line of text of the watermark.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=line_1" })
  line1: string;

  /**
   * The second line of text of the watermark.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=line_2" })
  line2?: string;

  /**
   * The third line of text of the watermark.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=line_3" })
  line3?: string;

  /**
   * The distance in inches from the border of the page to the text watermark.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=margin" })
  margin?: number;

  /**
   * The [id of the text watermark template](https://www.pdfblocks.com/docs/api/v1/text-watermark-templates.pdf).
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=template" })
  template?: number;

  /**
   * The transparency level for the text watermark from 0 (opaque) to 100 (transparent).
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=transparency" })
  transparency?: number;
}

/**
 * Error
 */
export class AddTextWatermarkV14XXApplicationProblemPlusJson extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class AddTextWatermarkV1Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The document was processed succesfully.
   */
  @SpeakeasyMetadata()
  addTextWatermarkV1200ApplicationPdfBinaryString?: Uint8Array;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  addTextWatermarkV14XXApplicationProblemPlusJsonObject?: AddTextWatermarkV14XXApplicationProblemPlusJson;
}
