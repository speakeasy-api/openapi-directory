/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Condition } from "./condition";
import { DialogState } from "./dialogstate";
import { ResponseSpecification } from "./responsespecification";
import { Expose, Type } from "class-transformer";

/**
 * A set of actions that Amazon Lex should run if the condition is matched.
 */
export class ConditionalBranch extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  @Type(() => Condition)
  condition: Condition;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "nextStep" })
  @Type(() => DialogState)
  nextStep: DialogState;

  /**
   * Specifies a list of message groups that Amazon Lex uses to respond the user input.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  @Type(() => ResponseSpecification)
  response?: ResponseSpecification;
}
