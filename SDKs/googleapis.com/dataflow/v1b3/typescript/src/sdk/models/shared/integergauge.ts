/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SplitInt64 } from "./splitint64";
import { Expose, Type } from "class-transformer";

/**
 * A metric value representing temporal values of a variable.
 */
export class IntegerGauge extends SpeakeasyBase {
  /**
   * The time at which this value was measured. Measured as msecs from epoch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * A representation of an int64, n, that is immune to precision loss when encoded in JSON.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  @Type(() => SplitInt64)
  value?: SplitInt64;
}
