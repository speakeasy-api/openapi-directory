/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ImagePropertiesSuggestionState - A mask that indicates which of the fields on the base ImageProperties have been changed in this suggestion. For any field set to true, there's a new suggested value.
 */
public class ImagePropertiesSuggestionState {
    /**
     * Indicates if there was a suggested change to angle.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("angleSuggested")
    public Boolean angleSuggested;
    public ImagePropertiesSuggestionState withAngleSuggested(Boolean angleSuggested) {
        this.angleSuggested = angleSuggested;
        return this;
    }
    
    /**
     * Indicates if there was a suggested change to brightness.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brightnessSuggested")
    public Boolean brightnessSuggested;
    public ImagePropertiesSuggestionState withBrightnessSuggested(Boolean brightnessSuggested) {
        this.brightnessSuggested = brightnessSuggested;
        return this;
    }
    
    /**
     * Indicates if there was a suggested change to content_uri.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentUriSuggested")
    public Boolean contentUriSuggested;
    public ImagePropertiesSuggestionState withContentUriSuggested(Boolean contentUriSuggested) {
        this.contentUriSuggested = contentUriSuggested;
        return this;
    }
    
    /**
     * Indicates if there was a suggested change to contrast.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contrastSuggested")
    public Boolean contrastSuggested;
    public ImagePropertiesSuggestionState withContrastSuggested(Boolean contrastSuggested) {
        this.contrastSuggested = contrastSuggested;
        return this;
    }
    
    /**
     * A mask that indicates which of the fields on the base CropProperties have been changed in this suggestion. For any field set to true, there's a new suggested value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cropPropertiesSuggestionState")
    public CropPropertiesSuggestionState cropPropertiesSuggestionState;
    public ImagePropertiesSuggestionState withCropPropertiesSuggestionState(CropPropertiesSuggestionState cropPropertiesSuggestionState) {
        this.cropPropertiesSuggestionState = cropPropertiesSuggestionState;
        return this;
    }
    
    /**
     * Indicates if there was a suggested change to source_uri.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceUriSuggested")
    public Boolean sourceUriSuggested;
    public ImagePropertiesSuggestionState withSourceUriSuggested(Boolean sourceUriSuggested) {
        this.sourceUriSuggested = sourceUriSuggested;
        return this;
    }
    
    /**
     * Indicates if there was a suggested change to transparency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transparencySuggested")
    public Boolean transparencySuggested;
    public ImagePropertiesSuggestionState withTransparencySuggested(Boolean transparencySuggested) {
        this.transparencySuggested = transparencySuggested;
        return this;
    }
    
}
