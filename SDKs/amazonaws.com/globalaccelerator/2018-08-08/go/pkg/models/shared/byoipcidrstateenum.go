// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ByoipCidrStateEnum string

const (
	ByoipCidrStateEnumPendingProvisioning   ByoipCidrStateEnum = "PENDING_PROVISIONING"
	ByoipCidrStateEnumReady                 ByoipCidrStateEnum = "READY"
	ByoipCidrStateEnumPendingAdvertising    ByoipCidrStateEnum = "PENDING_ADVERTISING"
	ByoipCidrStateEnumAdvertising           ByoipCidrStateEnum = "ADVERTISING"
	ByoipCidrStateEnumPendingWithdrawing    ByoipCidrStateEnum = "PENDING_WITHDRAWING"
	ByoipCidrStateEnumPendingDeprovisioning ByoipCidrStateEnum = "PENDING_DEPROVISIONING"
	ByoipCidrStateEnumDeprovisioned         ByoipCidrStateEnum = "DEPROVISIONED"
	ByoipCidrStateEnumFailedProvision       ByoipCidrStateEnum = "FAILED_PROVISION"
	ByoipCidrStateEnumFailedAdvertising     ByoipCidrStateEnum = "FAILED_ADVERTISING"
	ByoipCidrStateEnumFailedWithdraw        ByoipCidrStateEnum = "FAILED_WITHDRAW"
	ByoipCidrStateEnumFailedDeprovision     ByoipCidrStateEnum = "FAILED_DEPROVISION"
)

func (e ByoipCidrStateEnum) ToPointer() *ByoipCidrStateEnum {
	return &e
}

func (e *ByoipCidrStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING_PROVISIONING":
		fallthrough
	case "READY":
		fallthrough
	case "PENDING_ADVERTISING":
		fallthrough
	case "ADVERTISING":
		fallthrough
	case "PENDING_WITHDRAWING":
		fallthrough
	case "PENDING_DEPROVISIONING":
		fallthrough
	case "DEPROVISIONED":
		fallthrough
	case "FAILED_PROVISION":
		fallthrough
	case "FAILED_ADVERTISING":
		fallthrough
	case "FAILED_WITHDRAW":
		fallthrough
	case "FAILED_DEPROVISION":
		*e = ByoipCidrStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ByoipCidrStateEnum: %v", v)
	}
}
