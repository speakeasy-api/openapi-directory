// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostHubSpacesSpaceIDDocumentsJSONSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum string

const (
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumCustomer    PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "customer"
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumProvider    PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "provider"
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumBank        PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "bank"
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumCashWoucher PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "cashWoucher"
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumFiscal      PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "fiscal"
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumInsurance   PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "insurance"
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumSocial      PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "social"
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumOther       PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "other"
	PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnumPermanent   PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum = "permanent"
)

func (e PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum) ToPointer() *PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum {
	return &e
}

func (e *PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum: %v", v)
	}
}

type PostHubSpacesSpaceIDDocumentsApplicationJSONAccounting struct {
	AccountedOn *string                                                             `json:"AccountedOn,omitempty"`
	Workbook    *PostHubSpacesSpaceIDDocumentsApplicationJSONAccountingWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth   *string                                                             `json:"YearMonth,omitempty"`
}

type PostHubSpacesSpaceIDDocumentsApplicationJSONFile struct {
	Content64Encoded *string `json:"Content64Encoded,omitempty"`
	Name             *string `json:"Name,omitempty"`
}

// PostHubSpacesSpaceIDDocumentsApplicationJSON - Document to add
type PostHubSpacesSpaceIDDocumentsApplicationJSON struct {
	Accounting *PostHubSpacesSpaceIDDocumentsApplicationJSONAccounting `json:"Accounting,omitempty"`
	Author     *string                                                 `json:"Author,omitempty"`
	Code       *string                                                 `json:"Code,omitempty"`
	Comment    *string                                                 `json:"Comment,omitempty"`
	Date       *string                                                 `json:"Date,omitempty"`
	File       PostHubSpacesSpaceIDDocumentsApplicationJSONFile        `json:"File"`
	Title      string                                                  `json:"Title"`
}

type PostHubSpacesSpaceIDDocumentsJSONRequest struct {
	// Document to add
	RequestBody PostHubSpacesSpaceIDDocumentsApplicationJSON `request:"mediaType=application/json"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

// PostHubSpacesSpaceIDDocumentsJSON201ApplicationJSON - Id of documents created
type PostHubSpacesSpaceIDDocumentsJSON201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostHubSpacesSpaceIDDocumentsJSONResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of documents created
	PostHubSpacesSpaceIDDocumentsJSON201ApplicationJSONObject *PostHubSpacesSpaceIDDocumentsJSON201ApplicationJSON
}
