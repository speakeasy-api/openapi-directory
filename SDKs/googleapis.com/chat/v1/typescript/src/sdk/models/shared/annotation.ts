/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SlashCommandMetadata } from "./slashcommandmetadata";
import { UserMentionMetadata } from "./usermentionmetadata";
import { Expose, Type } from "class-transformer";

/**
 * The type of this annotation.
 */
export enum AnnotationTypeEnum {
  AnnotationTypeUnspecified = "ANNOTATION_TYPE_UNSPECIFIED",
  UserMention = "USER_MENTION",
  SlashCommand = "SLASH_COMMAND",
}

/**
 * Annotations associated with the plain-text body of the message. Example plain-text message body: ``` Hello @FooBot how are you!" ``` The corresponding annotations metadata: ``` "annotations":[{ "type":"USER_MENTION", "startIndex":6, "length":7, "userMention": { "user": { "name":"users/{user}", "displayName":"FooBot", "avatarUrl":"https://goo.gl/aeDtrS", "type":"BOT" }, "type":"MENTION" } }] ```
 */
export class Annotation extends SpeakeasyBase {
  /**
   * Length of the substring in the plain-text message body this annotation corresponds to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "length" })
  length?: number;

  /**
   * Annotation metadata for slash commands (/).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slashCommand" })
  @Type(() => SlashCommandMetadata)
  slashCommand?: SlashCommandMetadata;

  /**
   * Start index (0-based, inclusive) in the plain-text message body this annotation corresponds to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startIndex" })
  startIndex?: number;

  /**
   * The type of this annotation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AnnotationTypeEnum;

  /**
   * Annotation metadata for user mentions (@).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userMention" })
  @Type(() => UserMentionMetadata)
  userMention?: UserMentionMetadata;
}
