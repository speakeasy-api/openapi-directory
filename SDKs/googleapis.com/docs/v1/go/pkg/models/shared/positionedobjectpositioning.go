// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PositionedObjectPositioningLayoutEnum - The layout of this positioned object.
type PositionedObjectPositioningLayoutEnum string

const (
	PositionedObjectPositioningLayoutEnumPositionedObjectLayoutUnspecified PositionedObjectPositioningLayoutEnum = "POSITIONED_OBJECT_LAYOUT_UNSPECIFIED"
	PositionedObjectPositioningLayoutEnumWrapText                          PositionedObjectPositioningLayoutEnum = "WRAP_TEXT"
	PositionedObjectPositioningLayoutEnumBreakLeft                         PositionedObjectPositioningLayoutEnum = "BREAK_LEFT"
	PositionedObjectPositioningLayoutEnumBreakRight                        PositionedObjectPositioningLayoutEnum = "BREAK_RIGHT"
	PositionedObjectPositioningLayoutEnumBreakLeftRight                    PositionedObjectPositioningLayoutEnum = "BREAK_LEFT_RIGHT"
	PositionedObjectPositioningLayoutEnumInFrontOfText                     PositionedObjectPositioningLayoutEnum = "IN_FRONT_OF_TEXT"
	PositionedObjectPositioningLayoutEnumBehindText                        PositionedObjectPositioningLayoutEnum = "BEHIND_TEXT"
)

func (e PositionedObjectPositioningLayoutEnum) ToPointer() *PositionedObjectPositioningLayoutEnum {
	return &e
}

func (e *PositionedObjectPositioningLayoutEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "POSITIONED_OBJECT_LAYOUT_UNSPECIFIED":
		fallthrough
	case "WRAP_TEXT":
		fallthrough
	case "BREAK_LEFT":
		fallthrough
	case "BREAK_RIGHT":
		fallthrough
	case "BREAK_LEFT_RIGHT":
		fallthrough
	case "IN_FRONT_OF_TEXT":
		fallthrough
	case "BEHIND_TEXT":
		*e = PositionedObjectPositioningLayoutEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PositionedObjectPositioningLayoutEnum: %v", v)
	}
}

// PositionedObjectPositioning - The positioning of a PositionedObject. The positioned object is positioned relative to the beginning of the Paragraph it's tethered to.
type PositionedObjectPositioning struct {
	// The layout of this positioned object.
	Layout *PositionedObjectPositioningLayoutEnum `json:"layout,omitempty"`
	// A magnitude in a single direction in the specified units.
	LeftOffset *Dimension `json:"leftOffset,omitempty"`
	// A magnitude in a single direction in the specified units.
	TopOffset *Dimension `json:"topOffset,omitempty"`
}
