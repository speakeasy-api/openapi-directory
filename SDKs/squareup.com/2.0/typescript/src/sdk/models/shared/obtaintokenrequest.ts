/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * An object containing the fields to POST for the request.
 *
 * @remarks
 *
 * See the corresponding object definition for field details.
 */
export class ObtainTokenRequest extends SpeakeasyBase {
  /**
   * The Square-issued ID of your application, available from the
   *
   * @remarks
   * [developer dashboard](https://developer.squareup.com/apps).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId: string;

  /**
   * The Square-issued application secret for your application, available
   *
   * @remarks
   * from the [developer dashboard](https://developer.squareup.com/apps).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_secret" })
  clientSecret: string;

  /**
   * The authorization code to exchange.
   *
   * @remarks
   * This is required if `grant_type` is set to `authorization_code`, to indicate that
   * the application wants to exchange an authorization code for an OAuth access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Specifies the method to request an OAuth access token.
   *
   * @remarks
   * Valid values are: `authorization_code`, `refresh_token`, and `migration_token`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grant_type" })
  grantType: string;

  /**
   * Legacy OAuth access token obtained using a Connect API version prior
   *
   * @remarks
   * to 2019-03-13. This parameter is required if `grant_type` is set to
   * `migration_token` to indicate that the application wants to get a replacement
   * OAuth access token. The response also returns a refresh token.
   * For more information, see [Migrate to Using Refresh Tokens](https://developer.squareup.com/docs/oauth-api/migrate-to-refresh-tokens).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "migration_token" })
  migrationToken?: string;

  /**
   * The redirect URL assigned in the [developer dashboard](https://developer.squareup.com/apps).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redirect_uri" })
  redirectUri?: string;

  /**
   * A valid refresh token for generating a new OAuth access token.
   *
   * @remarks
   * A valid refresh token is required if `grant_type` is set to `refresh_token` , to indicate the application wants a replacement for an expired OAuth access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refresh_token" })
  refreshToken?: string;

  /**
   * A JSON list of strings representing the permissions the application is requesting.
   *
   * @remarks
   * For example: "`["MERCHANT_PROFILE_READ","PAYMENTS_READ","BANK_ACCOUNTS_READ"]`"
   * The access token returned in the response is granted the permissions
   * that comprise the intersection between the requested list of permissions, and those
   * that belong to the provided refresh token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes?: string[];

  /**
   * A boolean indicating a request for a short-lived access token.
   *
   * @remarks
   * The short-lived access token returned in the response will expire in 24 hours.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "short_lived" })
  shortLived?: boolean;
}
