"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import activewidget as shared_activewidget
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class GetActiveWidgetRequest:
    
    project_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""Continuous Project ID"""  
    widget_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'widgetId', 'style': 'simple', 'explode': False }})
    r"""Active widget ID belonging to this Continuous Project"""  
    

@dataclasses.dataclass
class GetActiveWidgetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    active_widget: Optional[shared_activewidget.ActiveWidget] = dataclasses.field(default=None)
    r"""Active widget details"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""ProjectNotFound | ActiveWidgetNotFound"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    