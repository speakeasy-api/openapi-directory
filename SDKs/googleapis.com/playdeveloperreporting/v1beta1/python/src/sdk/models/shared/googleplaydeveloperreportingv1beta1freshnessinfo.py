"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleplaydeveloperreportingv1beta1freshnessinfofreshness as shared_googleplaydeveloperreportingv1beta1freshnessinfofreshness
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePlayDeveloperReportingV1beta1FreshnessInfo:
    r"""Represents the latest available time that can be requested in a TimelineSpec. Different aggregation periods have different freshness. For example, `DAILY` aggregation may lag behind `HOURLY` in cases where such aggregation is computed only once at the end of the day."""
    
    freshnesses: Optional[list[shared_googleplaydeveloperreportingv1beta1freshnessinfofreshness.GooglePlayDeveloperReportingV1beta1FreshnessInfoFreshness]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('freshnesses'), 'exclude': lambda f: f is None }})
    r"""Information about data freshness for every supported aggregation period. This field has set semantics, keyed by the `aggregation_period` field."""  
    