/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class HitsGetHitsQueryParams {
    /**
     * Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public HitsGetHitsFilterEnum filter;
    public HitsGetHitsQueryParams withFilter(HitsGetHitsFilterEnum filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fromDay")
    public String fromDay;
    public HitsGetHitsQueryParams withFromDay(String fromDay) {
        this.fromDay = fromDay;
        return this;
    }
    
    /**
     * Limit results to this number
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;
    public HitsGetHitsQueryParams withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Offset where to start from (it's the lastKey field in the response object)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public String offset;
    public HitsGetHitsQueryParams withOffset(String offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Timeframe of the request. See list at $timeframeList
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timeframe")
    public HitsGetHitsTimeframeEnum timeframe;
    public HitsGetHitsQueryParams withTimeframe(HitsGetHitsTimeframeEnum timeframe) {
        this.timeframe = timeframe;
        return this;
    }
    
    /**
     * If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=toDay")
    public String toDay;
    public HitsGetHitsQueryParams withToDay(String toDay) {
        this.toDay = toDay;
        return this;
    }
    
}
