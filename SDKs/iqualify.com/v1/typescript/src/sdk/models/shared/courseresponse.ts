/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LearningOutcomes } from "./learningoutcomes";
import { Expose, Transform, Type } from "class-transformer";

export class CourseResponseMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: LearningOutcomes })
  @Expose({ name: "learning_outcomes" })
  @Type(() => LearningOutcomes)
  learningOutcomes?: LearningOutcomes[];
}

export class CourseResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "coverImageUrl" })
  coverImageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => CourseResponseMetadata)
  metadata?: CourseResponseMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
