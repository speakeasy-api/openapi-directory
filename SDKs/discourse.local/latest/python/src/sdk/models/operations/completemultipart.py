"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompleteMultipartRequestBody:
    
    parts: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parts') }})
    r"""All of the part numbers and their corresponding ETags
    that have been uploaded must be provided.
    """  
    unique_identifier: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unique_identifier') }})
    r"""The unique identifier returned in the original /create-multipart
    request.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompleteMultipart200ApplicationJSON:
    r"""external upload initialized"""
    
    extension: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension') }})  
    filesize: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filesize') }})  
    height: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height') }})  
    human_filesize: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('human_filesize') }})  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    original_filename: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('original_filename') }})  
    retain_hours: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retain_hours') }})  
    short_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('short_path') }})  
    short_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('short_url') }})  
    thumbnail_height: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbnail_height') }})  
    thumbnail_width: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbnail_width') }})  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})  
    width: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width') }})  
    dominant_color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dominant_color'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class CompleteMultipartResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    complete_multipart_200_application_json_object: Optional[CompleteMultipart200ApplicationJSON] = dataclasses.field(default=None)
    r"""external upload initialized"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    