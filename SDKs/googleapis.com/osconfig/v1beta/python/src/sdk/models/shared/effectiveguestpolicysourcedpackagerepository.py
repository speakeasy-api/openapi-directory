"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import packagerepository as shared_packagerepository
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EffectiveGuestPolicySourcedPackageRepository:
    r"""A guest policy package repository including its source."""
    
    package_repository: Optional[shared_packagerepository.PackageRepository] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packageRepository'), 'exclude': lambda f: f is None }})
    r"""A package repository."""  
    source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""Name of the guest policy providing this config."""  
    