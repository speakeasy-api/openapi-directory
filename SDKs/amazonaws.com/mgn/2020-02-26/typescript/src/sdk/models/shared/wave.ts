/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WaveAggregatedStatus } from "./waveaggregatedstatus";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class Wave extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  creationDateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isArchived" })
  isArchived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedDateTime" })
  lastModifiedDateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "waveAggregatedStatus" })
  @Type(() => WaveAggregatedStatus)
  waveAggregatedStatus?: WaveAggregatedStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "waveID" })
  waveID?: string;
}
