// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AcceptSharedDirectoryXAmzTargetEnum
type AcceptSharedDirectoryXAmzTargetEnum string

const (
	AcceptSharedDirectoryXAmzTargetEnumDirectoryService20150416AcceptSharedDirectory AcceptSharedDirectoryXAmzTargetEnum = "DirectoryService_20150416.AcceptSharedDirectory"
)

func (e AcceptSharedDirectoryXAmzTargetEnum) ToPointer() *AcceptSharedDirectoryXAmzTargetEnum {
	return &e
}

func (e *AcceptSharedDirectoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DirectoryService_20150416.AcceptSharedDirectory":
		*e = AcceptSharedDirectoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AcceptSharedDirectoryXAmzTargetEnum: %v", v)
	}
}

type AcceptSharedDirectoryRequest struct {
	AcceptSharedDirectoryRequest shared.AcceptSharedDirectoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   AcceptSharedDirectoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AcceptSharedDirectoryResponse struct {
	// Success
	AcceptSharedDirectoryResult *shared.AcceptSharedDirectoryResult
	// ClientException
	ClientException interface{}
	ContentType     string
	// DirectoryAlreadySharedException
	DirectoryAlreadySharedException interface{}
	// EntityDoesNotExistException
	EntityDoesNotExistException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
}
