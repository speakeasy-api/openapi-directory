// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type GetTargetsAllScansQueryParams struct {
	// Number of results to return per page
	Length *int64 `queryParam:"style=form,explode=true,name=length"`
	// Which field to use when ordering the results, prefix with `-` to invert ordering.
	//
	Ordering *string `queryParam:"style=form,explode=true,name=ordering"`
	// Page number within the paginated result set
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Search term
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Filter by scan start dates
	Started []types.Date `queryParam:"style=form,explode=true,name=started"`
	// Filter by scan statuses
	Status *shared.ScanStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type GetTargetsAllScansRequest struct {
	QueryParams GetTargetsAllScansQueryParams
}

// GetTargetsAllScans401ApplicationJSON - Access token is missing or invalid
type GetTargetsAllScans401ApplicationJSON struct {
	Detail *string `json:"detail,omitempty"`
}

// GetTargetsAllScans200ApplicationJSON - Scan list
type GetTargetsAllScans200ApplicationJSON struct {
	// Number of objects in the response.
	Count *int64 `json:"count,omitempty"`
	// Number of objects per page.
	Length *int64 `json:"length,omitempty"`
	// Current page.
	Page *int64 `json:"page,omitempty"`
	// Number of pages.
	PageTotal *int64 `json:"page_total,omitempty"`
	// Scan objects
	Results []shared.Scan `json:"results,omitempty"`
}

type GetTargetsAllScansResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Scan list
	GetTargetsAllScans200ApplicationJSONObject *GetTargetsAllScans200ApplicationJSON
	// Access token is missing or invalid
	GetTargetsAllScans401ApplicationJSONObject *GetTargetsAllScans401ApplicationJSON
}
