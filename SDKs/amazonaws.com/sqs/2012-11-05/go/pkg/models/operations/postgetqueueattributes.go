// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetQueueAttributesActionEnum
type POSTGetQueueAttributesActionEnum string

const (
	POSTGetQueueAttributesActionEnumGetQueueAttributes POSTGetQueueAttributesActionEnum = "GetQueueAttributes"
)

func (e *POSTGetQueueAttributesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetQueueAttributes":
		*e = POSTGetQueueAttributesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetQueueAttributesActionEnum: %s", s)
	}
}

// POSTGetQueueAttributesVersionEnum
type POSTGetQueueAttributesVersionEnum string

const (
	POSTGetQueueAttributesVersionEnumTwoThousandAndTwelve1105 POSTGetQueueAttributesVersionEnum = "2012-11-05"
)

func (e *POSTGetQueueAttributesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-11-05":
		*e = POSTGetQueueAttributesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetQueueAttributesVersionEnum: %s", s)
	}
}

type POSTGetQueueAttributesQueryParams struct {
	Action  POSTGetQueueAttributesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTGetQueueAttributesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTGetQueueAttributesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetQueueAttributesRequest struct {
	QueryParams POSTGetQueueAttributesQueryParams
	Headers     POSTGetQueueAttributesHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTGetQueueAttributesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
