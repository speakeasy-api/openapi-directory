"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contributorprofilesocialmedia as shared_contributorprofilesocialmedia
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContributorProfile:
    r"""Contributor profile data"""
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Contributor ID"""  
    about: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('about'), 'exclude': lambda f: f is None }})
    r"""Short description of the contributors' library"""  
    contributor_type: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contributor_type'), 'exclude': lambda f: f is None }})
    r"""Type of content that the contributor specializes in (photographer, illustrator, etc)"""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name'), 'exclude': lambda f: f is None }})
    r"""Preferred name to be displayed for the contributor"""  
    equipment: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('equipment'), 'exclude': lambda f: f is None }})
    r"""List of equipment used by the contributor (Canon EOS 5D Mark II, etc)"""  
    location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""Country code representing the contributor's locale"""  
    portfolio_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolio_url'), 'exclude': lambda f: f is None }})
    r"""Web URL for the contributors' profile"""  
    social_media: Optional[shared_contributorprofilesocialmedia.ContributorProfileSocialMedia] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('social_media'), 'exclude': lambda f: f is None }})
    r"""Contributor profile social media links"""  
    styles: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('styles'), 'exclude': lambda f: f is None }})
    r"""List of styles that the contributor specializes in (lifestyle, mixed media, etc)"""  
    subjects: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subjects'), 'exclude': lambda f: f is None }})
    r"""Generic list of subjects for contributors' work (food_and_drink, holiday, people, etc)"""  
    website: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('website'), 'exclude': lambda f: f is None }})
    r"""Personal website for the contributor"""  
    