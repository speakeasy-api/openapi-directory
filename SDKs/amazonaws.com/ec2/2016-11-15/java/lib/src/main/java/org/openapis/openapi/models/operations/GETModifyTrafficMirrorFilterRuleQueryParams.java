/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETModifyTrafficMirrorFilterRuleQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETModifyTrafficMirrorFilterRuleActionEnum action;
    public GETModifyTrafficMirrorFilterRuleQueryParams withAction(GETModifyTrafficMirrorFilterRuleActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The description to assign to the Traffic Mirror rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Description")
    public String description;
    public GETModifyTrafficMirrorFilterRuleQueryParams withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The destination CIDR block to assign to the Traffic Mirror rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DestinationCidrBlock")
    public String destinationCidrBlock;
    public GETModifyTrafficMirrorFilterRuleQueryParams withDestinationCidrBlock(String destinationCidrBlock) {
        this.destinationCidrBlock = destinationCidrBlock;
        return this;
    }
    
    /**
     * The destination ports that are associated with the Traffic Mirror rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DestinationPortRange")
    public GETModifyTrafficMirrorFilterRuleDestinationPortRange destinationPortRange;
    public GETModifyTrafficMirrorFilterRuleQueryParams withDestinationPortRange(GETModifyTrafficMirrorFilterRuleDestinationPortRange destinationPortRange) {
        this.destinationPortRange = destinationPortRange;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETModifyTrafficMirrorFilterRuleQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The protocol, for example TCP, to assign to the Traffic Mirror rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Protocol")
    public Long protocol;
    public GETModifyTrafficMirrorFilterRuleQueryParams withProtocol(Long protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * &lt;p&gt;The properties that you want to remove from the Traffic Mirror filter rule.&lt;/p&gt; &lt;p&gt;When you remove a property from a Traffic Mirror filter rule, the property is set to the default.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RemoveField")
    public org.openapis.openapi.models.shared.TrafficMirrorFilterRuleFieldEnum[] removeField;
    public GETModifyTrafficMirrorFilterRuleQueryParams withRemoveField(org.openapis.openapi.models.shared.TrafficMirrorFilterRuleFieldEnum[] removeField) {
        this.removeField = removeField;
        return this;
    }
    
    /**
     * The action to assign to the rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RuleAction")
    public GETModifyTrafficMirrorFilterRuleRuleActionEnum ruleAction;
    public GETModifyTrafficMirrorFilterRuleQueryParams withRuleAction(GETModifyTrafficMirrorFilterRuleRuleActionEnum ruleAction) {
        this.ruleAction = ruleAction;
        return this;
    }
    
    /**
     * The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RuleNumber")
    public Long ruleNumber;
    public GETModifyTrafficMirrorFilterRuleQueryParams withRuleNumber(Long ruleNumber) {
        this.ruleNumber = ruleNumber;
        return this;
    }
    
    /**
     * The source CIDR block to assign to the Traffic Mirror rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SourceCidrBlock")
    public String sourceCidrBlock;
    public GETModifyTrafficMirrorFilterRuleQueryParams withSourceCidrBlock(String sourceCidrBlock) {
        this.sourceCidrBlock = sourceCidrBlock;
        return this;
    }
    
    /**
     * The port range to assign to the Traffic Mirror rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SourcePortRange")
    public GETModifyTrafficMirrorFilterRuleSourcePortRange sourcePortRange;
    public GETModifyTrafficMirrorFilterRuleQueryParams withSourcePortRange(GETModifyTrafficMirrorFilterRuleSourcePortRange sourcePortRange) {
        this.sourcePortRange = sourcePortRange;
        return this;
    }
    
    /**
     * The type of traffic to assign to the rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TrafficDirection")
    public GETModifyTrafficMirrorFilterRuleTrafficDirectionEnum trafficDirection;
    public GETModifyTrafficMirrorFilterRuleQueryParams withTrafficDirection(GETModifyTrafficMirrorFilterRuleTrafficDirectionEnum trafficDirection) {
        this.trafficDirection = trafficDirection;
        return this;
    }
    
    /**
     * The ID of the Traffic Mirror rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TrafficMirrorFilterRuleId")
    public String trafficMirrorFilterRuleId;
    public GETModifyTrafficMirrorFilterRuleQueryParams withTrafficMirrorFilterRuleId(String trafficMirrorFilterRuleId) {
        this.trafficMirrorFilterRuleId = trafficMirrorFilterRuleId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETModifyTrafficMirrorFilterRuleVersionEnum version;
    public GETModifyTrafficMirrorFilterRuleQueryParams withVersion(GETModifyTrafficMirrorFilterRuleVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
