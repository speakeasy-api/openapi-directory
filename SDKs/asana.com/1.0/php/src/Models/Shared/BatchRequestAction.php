<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BatchRequestAction - An action object for use in a batch request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BatchRequestAction
{
    /**
     * For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.
     * 
     * @var ?array<string, mixed> $data
     */
	#[\JMS\Serializer\Annotation\SerializedName('data')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $data = null;
    
    /**
     * The HTTP method you wish to emulate for the action.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BatchRequestActionMethodEnum $method
     */
	#[\JMS\Serializer\Annotation\SerializedName('method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BatchRequestActionMethodEnum>')]
    public BatchRequestActionMethodEnum $method;
    
    /**
     * Pagination (`limit` and `offset`) and output options (`fields` or `expand`) for the action. “Pretty” JSON output is not an available option on individual actions; if you want pretty output, specify that option on the parent request.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BatchRequestActionOptions $options
     */
	#[\JMS\Serializer\Annotation\SerializedName('options')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BatchRequestActionOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BatchRequestActionOptions $options = null;
    
    /**
     * The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead.
     * 
     * @var string $relativePath
     */
	#[\JMS\Serializer\Annotation\SerializedName('relative_path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $relativePath;
    
	public function __construct()
	{
		$this->data = null;
		$this->method = \OpenAPI\OpenAPI\Models\Shared\BatchRequestActionMethodEnum::GET;
		$this->options = null;
		$this->relativePath = "";
	}
}
