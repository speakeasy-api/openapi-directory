/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Voice - Creates a voice audio element from the provided text
 */
public class Voice {
    /**
     * Element's cache policy. When true, the cached version (if exists) is used. When false, the assets is downloaded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cache")
    public Boolean cache;
    public Voice withCache(Boolean cache) {
        this.cache = cache;
        return this;
    }
    
    /**
     * Used for adding your comments
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public Voice withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * Element's duration in seconds. A value of -1 auto calculates the duration based on the asset intrinsic length or the scene duration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Float duration;
    public Voice withDuration(Float duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Element's time span added after the playback.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extra-time")
    public Float extraTime;
    public Voice withExtraTime(Float extraTime) {
        this.extraTime = extraTime;
        return this;
    }
    
    /**
     * Adds a fade in effect to the element. Value in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fade-in")
    public Float fadeIn;
    public Voice withFadeIn(Float fadeIn) {
        this.fadeIn = fadeIn;
        return this;
    }
    
    /**
     * Adds a fade out effect to the element. Value in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fade-out")
    public Float fadeOut;
    public Voice withFadeOut(Float fadeOut) {
        this.fadeOut = fadeOut;
        return this;
    }
    
    /**
     * Mutes the audio
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("muted")
    public Boolean muted;
    public Voice withMuted(Boolean muted) {
        this.muted = muted;
        return this;
    }
    
    /**
     * Element's starting time in seconds relative to the container scene or the movie if the element is in the Movie's elements array.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start")
    public Float start;
    public Voice withStart(Float start) {
        this.start = start;
        return this;
    }
    
    /**
     * The sentence or sentences to be converted to voice audio
     */
    @JsonProperty("text")
    public String text;
    public Voice withText(String text) {
        this.text = text;
        return this;
    }
    
    @JsonProperty("type")
    public VoiceTypeEnum type;
    public Voice withType(VoiceTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The voice name to be used. Check &lt;a href="/docs/tutorial/voice-elements/"&gt;available voices&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voice")
    public String voice;
    public Voice withVoice(String voice) {
        this.voice = voice;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volume")
    public Double volume;
    public Voice withVolume(Double volume) {
        this.volume = volume;
        return this;
    }
    
    /**
     * Element's z-index. Use this property to reorganize the layering of the elements like in HTML
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("z-index")
    public Double zIndex;
    public Voice withZIndex(Double zIndex) {
        this.zIndex = zIndex;
        return this;
    }
    
}
