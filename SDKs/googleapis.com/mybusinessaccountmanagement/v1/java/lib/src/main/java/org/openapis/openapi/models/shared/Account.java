/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Account - An account is a container for your location. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).
 */
public class Account {
    /**
     * Required. The name of the account. For an account of type `PERSONAL`, this is the first and last name of the user account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountName")
    public String accountName;
    public Account withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }
    
    /**
     * Output only. Account reference number if provisioned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public Account withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * Immutable. The resource name, in the format `accounts/{account_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Account withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Additional information stored for an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationInfo")
    public OrganizationInfo organizationInfo;
    public Account withOrganizationInfo(OrganizationInfo organizationInfo) {
        this.organizationInfo = organizationInfo;
        return this;
    }
    
    /**
     * Output only. Specifies the permission level the user has for this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissionLevel")
    public AccountPermissionLevelEnum permissionLevel;
    public Account withPermissionLevel(AccountPermissionLevelEnum permissionLevel) {
        this.permissionLevel = permissionLevel;
        return this;
    }
    
    /**
     * Required. Input only. The resource name of the account which will be the primary owner of the account being created. It should be of the form `accounts/{account_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryOwner")
    public String primaryOwner;
    public Account withPrimaryOwner(String primaryOwner) {
        this.primaryOwner = primaryOwner;
        return this;
    }
    
    /**
     * Output only. Specifies the AccountRole of this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public AccountRoleEnum role;
    public Account withRole(AccountRoleEnum role) {
        this.role = role;
        return this;
    }
    
    /**
     * Required. Contains the type of account. Accounts of type PERSONAL and ORGANIZATION cannot be created using this API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public AccountTypeEnum type;
    public Account withType(AccountTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Output only. If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verificationState")
    public AccountVerificationStateEnum verificationState;
    public Account withVerificationState(AccountVerificationStateEnum verificationState) {
        this.verificationState = verificationState;
        return this;
    }
    
    /**
     * Output only. Indicates whether the account is vetted by Google. A vetted account is able to verify locations via the VETTED_PARTNER method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vettedState")
    public AccountVettedStateEnum vettedState;
    public Account withVettedState(AccountVettedStateEnum vettedState) {
        this.vettedState = vettedState;
        return this;
    }
    
}
