/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AddItemRequestBody1Input {
    /**
     * String representation of the unique code that this item transmits. By default this is a hexadecimal representation. This number could be so long (&gt; 40 bytes!) that a decimal representation would be useless to generate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code_hex")
    public String codeHex;
    public AddItemRequestBody1Input withCodeHex(String codeHex) {
        this.codeHex = codeHex;
        return this;
    }
    
    /**
     * Object containing the new configuration. This will be applied automatically when the values are valid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config_request")
    public java.util.Map<String, Object> configRequest;
    public AddItemRequestBody1Input withConfigRequest(java.util.Map<String, Object> configRequest) {
        this.configRequest = configRequest;
        return this;
    }
    
    /**
     * The `custom` value is only for your custom references, you may use it to save additional attributes. The custom value is not used in any other place. This field may contain any datatype that you like: null (default), string, integer, boolean, object etc...
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom")
    public Object custom;
    public AddItemRequestBody1Input withCustom(Object custom) {
        this.custom = custom;
        return this;
    }
    
    /**
     * A name or a label for this resource. This is used in the user interface, may be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;
    public AddItemRequestBody1Input withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Instruction for the location engine to forcibly localize the item at the specified location id as soon as possible. Cleared automatically.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_request")
    public String locationRequest;
    public AddItemRequestBody1Input withLocationRequest(String locationRequest) {
        this.locationRequest = locationRequest;
        return this;
    }
    
    /**
     * Object of searchable metadata for this resource. Can be freely used to store metadata properties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, Object> metadata;
    public AddItemRequestBody1Input withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Type of protocol that was used to decode this item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public org.openapis.openapi.models.shared.ItemProtocolEnum protocol;
    public AddItemRequestBody1Input withProtocol(org.openapis.openapi.models.shared.ItemProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * Type of technology that was used to detect this item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("technology")
    public org.openapis.openapi.models.shared.TechnologyEnum technology;
    public AddItemRequestBody1Input withTechnology(org.openapis.openapi.models.shared.TechnologyEnum technology) {
        this.technology = technology;
        return this;
    }
    
    /**
     * Type of item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public org.openapis.openapi.models.shared.ItemTypeEnum type;
    public AddItemRequestBody1Input withType(org.openapis.openapi.models.shared.ItemTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
