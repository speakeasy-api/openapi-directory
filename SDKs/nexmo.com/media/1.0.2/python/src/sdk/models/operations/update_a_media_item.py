"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class UpdateAMediaItemRequestBody:
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'description' }})
    r"""A description of the media file."""  
    max_downloads_allowed: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'max_downloads_allowed' }})
    r"""The maximum number of times the file may be downloaded. Unlimited when not provided."""  
    metadata_primary: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'metadata_primary' }})
    r"""A string containing metadata about the media file."""  
    metadata_secondary: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'metadata_secondary' }})
    r"""A string containing further metadata about the media file."""  
    mime_type: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'mime_type' }})
    r"""The MIME type of the media file."""  
    public: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'public' }})
    r"""Whether the item is publicly available without authentication."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'title' }})
    r"""A string containing a title for the media file."""  
    

@dataclasses.dataclass
class UpdateAMediaItemResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    