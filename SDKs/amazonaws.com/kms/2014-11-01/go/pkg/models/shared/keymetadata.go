// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// KeyMetadataCustomerMasterKeySpecEnum - <p>Instead, use the <code>KeySpec</code> field.</p> <p>The <code>KeySpec</code> and <code>CustomerMasterKeySpec</code> fields have the same value. We recommend that you use the <code>KeySpec</code> field in your code. However, to avoid breaking changes, KMS supports both fields.</p>This field has been deprecated. Instead, use the KeySpec field.
type KeyMetadataCustomerMasterKeySpecEnum string

const (
	KeyMetadataCustomerMasterKeySpecEnumRsa2048          KeyMetadataCustomerMasterKeySpecEnum = "RSA_2048"
	KeyMetadataCustomerMasterKeySpecEnumRsa3072          KeyMetadataCustomerMasterKeySpecEnum = "RSA_3072"
	KeyMetadataCustomerMasterKeySpecEnumRsa4096          KeyMetadataCustomerMasterKeySpecEnum = "RSA_4096"
	KeyMetadataCustomerMasterKeySpecEnumEccNistP256      KeyMetadataCustomerMasterKeySpecEnum = "ECC_NIST_P256"
	KeyMetadataCustomerMasterKeySpecEnumEccNistP384      KeyMetadataCustomerMasterKeySpecEnum = "ECC_NIST_P384"
	KeyMetadataCustomerMasterKeySpecEnumEccNistP521      KeyMetadataCustomerMasterKeySpecEnum = "ECC_NIST_P521"
	KeyMetadataCustomerMasterKeySpecEnumEccSecgP256K1    KeyMetadataCustomerMasterKeySpecEnum = "ECC_SECG_P256K1"
	KeyMetadataCustomerMasterKeySpecEnumSymmetricDefault KeyMetadataCustomerMasterKeySpecEnum = "SYMMETRIC_DEFAULT"
	KeyMetadataCustomerMasterKeySpecEnumHmac224          KeyMetadataCustomerMasterKeySpecEnum = "HMAC_224"
	KeyMetadataCustomerMasterKeySpecEnumHmac256          KeyMetadataCustomerMasterKeySpecEnum = "HMAC_256"
	KeyMetadataCustomerMasterKeySpecEnumHmac384          KeyMetadataCustomerMasterKeySpecEnum = "HMAC_384"
	KeyMetadataCustomerMasterKeySpecEnumHmac512          KeyMetadataCustomerMasterKeySpecEnum = "HMAC_512"
	KeyMetadataCustomerMasterKeySpecEnumSm2              KeyMetadataCustomerMasterKeySpecEnum = "SM2"
)

func (e KeyMetadataCustomerMasterKeySpecEnum) ToPointer() *KeyMetadataCustomerMasterKeySpecEnum {
	return &e
}

func (e *KeyMetadataCustomerMasterKeySpecEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RSA_2048":
		fallthrough
	case "RSA_3072":
		fallthrough
	case "RSA_4096":
		fallthrough
	case "ECC_NIST_P256":
		fallthrough
	case "ECC_NIST_P384":
		fallthrough
	case "ECC_NIST_P521":
		fallthrough
	case "ECC_SECG_P256K1":
		fallthrough
	case "SYMMETRIC_DEFAULT":
		fallthrough
	case "HMAC_224":
		fallthrough
	case "HMAC_256":
		fallthrough
	case "HMAC_384":
		fallthrough
	case "HMAC_512":
		fallthrough
	case "SM2":
		*e = KeyMetadataCustomerMasterKeySpecEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyMetadataCustomerMasterKeySpecEnum: %v", v)
	}
}

// KeyMetadata - <p>Contains metadata about a KMS key.</p> <p>This data type is used as a response element for the <a>CreateKey</a>, <a>DescribeKey</a>, and <a>ReplicateKey</a> operations.</p>
type KeyMetadata struct {
	AWSAccountID                *string                               `json:"AWSAccountId,omitempty"`
	Arn                         *string                               `json:"Arn,omitempty"`
	CloudHsmClusterID           *string                               `json:"CloudHsmClusterId,omitempty"`
	CreationDate                *time.Time                            `json:"CreationDate,omitempty"`
	CustomKeyStoreID            *string                               `json:"CustomKeyStoreId,omitempty"`
	CustomerMasterKeySpec       *KeyMetadataCustomerMasterKeySpecEnum `json:"CustomerMasterKeySpec,omitempty"`
	DeletionDate                *time.Time                            `json:"DeletionDate,omitempty"`
	Description                 *string                               `json:"Description,omitempty"`
	Enabled                     *bool                                 `json:"Enabled,omitempty"`
	EncryptionAlgorithms        []EncryptionAlgorithmSpecEnum         `json:"EncryptionAlgorithms,omitempty"`
	ExpirationModel             *ExpirationModelTypeEnum              `json:"ExpirationModel,omitempty"`
	KeyID                       string                                `json:"KeyId"`
	KeyManager                  *KeyManagerTypeEnum                   `json:"KeyManager,omitempty"`
	KeySpec                     *KeySpecEnum                          `json:"KeySpec,omitempty"`
	KeyState                    *KeyStateEnum                         `json:"KeyState,omitempty"`
	KeyUsage                    *KeyUsageTypeEnum                     `json:"KeyUsage,omitempty"`
	MacAlgorithms               []MacAlgorithmSpecEnum                `json:"MacAlgorithms,omitempty"`
	MultiRegion                 *bool                                 `json:"MultiRegion,omitempty"`
	MultiRegionConfiguration    *MultiRegionConfiguration             `json:"MultiRegionConfiguration,omitempty"`
	Origin                      *OriginTypeEnum                       `json:"Origin,omitempty"`
	PendingDeletionWindowInDays *int64                                `json:"PendingDeletionWindowInDays,omitempty"`
	SigningAlgorithms           []SigningAlgorithmSpecEnum            `json:"SigningAlgorithms,omitempty"`
	ValidTo                     *time.Time                            `json:"ValidTo,omitempty"`
	XksKeyConfiguration         *XksKeyConfigurationType              `json:"XksKeyConfiguration,omitempty"`
}
