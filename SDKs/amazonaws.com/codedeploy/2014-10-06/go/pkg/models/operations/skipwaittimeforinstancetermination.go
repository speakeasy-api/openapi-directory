// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SkipWaitTimeForInstanceTerminationXAmzTargetEnum
type SkipWaitTimeForInstanceTerminationXAmzTargetEnum string

const (
	SkipWaitTimeForInstanceTerminationXAmzTargetEnumCodeDeploy20141006SkipWaitTimeForInstanceTermination SkipWaitTimeForInstanceTerminationXAmzTargetEnum = "CodeDeploy_20141006.SkipWaitTimeForInstanceTermination"
)

func (e SkipWaitTimeForInstanceTerminationXAmzTargetEnum) ToPointer() *SkipWaitTimeForInstanceTerminationXAmzTargetEnum {
	return &e
}

func (e *SkipWaitTimeForInstanceTerminationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeDeploy_20141006.SkipWaitTimeForInstanceTermination":
		*e = SkipWaitTimeForInstanceTerminationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SkipWaitTimeForInstanceTerminationXAmzTargetEnum: %v", v)
	}
}

type SkipWaitTimeForInstanceTerminationRequest struct {
	SkipWaitTimeForInstanceTerminationInput shared.SkipWaitTimeForInstanceTerminationInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                           *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                       *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                          *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                       *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                           *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                       *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                              SkipWaitTimeForInstanceTerminationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SkipWaitTimeForInstanceTerminationResponse struct {
	ContentType string
	// DeploymentAlreadyCompletedException
	DeploymentAlreadyCompletedException interface{}
	// DeploymentDoesNotExistException
	DeploymentDoesNotExistException interface{}
	// DeploymentIdRequiredException
	DeploymentIDRequiredException interface{}
	// DeploymentNotStartedException
	DeploymentNotStartedException interface{}
	// InvalidDeploymentIdException
	InvalidDeploymentIDException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
	// UnsupportedActionForDeploymentTypeException
	UnsupportedActionForDeploymentTypeException interface{}
}
