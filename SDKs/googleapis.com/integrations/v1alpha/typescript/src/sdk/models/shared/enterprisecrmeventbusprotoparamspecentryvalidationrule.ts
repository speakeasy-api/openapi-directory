/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange } from "./enterprisecrmeventbusprotoparamspecentryvalidationruledoublerange";
import { EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange } from "./enterprisecrmeventbusprotoparamspecentryvalidationruleintrange";
import { EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex } from "./enterprisecrmeventbusprotoparamspecentryvalidationrulestringregex";
import { Expose, Type } from "class-transformer";

export class EnterpriseCrmEventbusProtoParamSpecEntryValidationRule extends SpeakeasyBase {
  /**
   * Range used to validate doubles and floats.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doubleRange" })
  @Type(() => EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange)
  doubleRange?: EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange;

  /**
   * Range used to validate longs and ints.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intRange" })
  @Type(() => EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange)
  intRange?: EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange;

  /**
   * Rule used to validate strings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringRegex" })
  @Type(() => EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex)
  stringRegex?: EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex;
}
