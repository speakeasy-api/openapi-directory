// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SettingsStatusEnum string

const (
	SettingsStatusEnumInitialized SettingsStatusEnum = "INITIALIZED"
	SettingsStatusEnumPending     SettingsStatusEnum = "PENDING"
	SettingsStatusEnumCompleted   SettingsStatusEnum = "COMPLETED"
	SettingsStatusEnumFailed      SettingsStatusEnum = "FAILED"
)

func (e *SettingsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INITIALIZED":
		fallthrough
	case "PENDING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		*e = SettingsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SettingsStatusEnum: %s", s)
	}
}
