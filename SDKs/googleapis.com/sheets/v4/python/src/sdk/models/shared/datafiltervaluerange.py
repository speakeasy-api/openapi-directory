"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datafilter as shared_datafilter
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class DataFilterValueRangeMajorDimensionEnum(str, Enum):
    r"""The major dimension of the values."""
    DIMENSION_UNSPECIFIED = 'DIMENSION_UNSPECIFIED'
    ROWS = 'ROWS'
    COLUMNS = 'COLUMNS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataFilterValueRange:
    r"""A range of values whose location is specified by a DataFilter."""
    
    data_filter: Optional[shared_datafilter.DataFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataFilter'), 'exclude': lambda f: f is None }})
    r"""Filter that describes what data should be selected or returned from a request."""  
    major_dimension: Optional[DataFilterValueRangeMajorDimensionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('majorDimension'), 'exclude': lambda f: f is None }})
    r"""The major dimension of the values."""  
    values: Optional[list[list[Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values'), 'exclude': lambda f: f is None }})
    r"""The data to be written. If the provided values exceed any of the ranges matched by the data filter then the request fails. If the provided values are less than the matched ranges only the specified values are written, existing values in the matched ranges remain unaffected."""  
    