/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApiCoreDtoTagsTag } from "./apicoredtotagstag";
import { Expose, Type } from "class-transformer";

export enum ApiCoreDtoClickStreamHitDatapointInfoStatusEnum {
  Active = "Active",
  Paused = "Paused",
  Abuse = "Abuse",
  Deleted = "Deleted",
}

export class ApiCoreDtoClickStreamHitDatapointInfo extends SpeakeasyBase {
  /**
   *  (A date in "YmdHis" format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  creationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "datapointFavourite" })
  datapointFavourite?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "datapointId" })
  datapointId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "datapointName" })
  datapointName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "datapointTitle" })
  datapointTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "datapointType" })
  datapointType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationUrl" })
  destinationUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "groupId" })
  groupId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "groupName" })
  groupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isABTest" })
  isABTest?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isPrivateShared" })
  isPrivateShared?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isPublic" })
  isPublic?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ApiCoreDtoClickStreamHitDatapointInfoStatusEnum;

  @SpeakeasyMetadata({ elemType: ApiCoreDtoTagsTag })
  @Expose({ name: "tags" })
  @Type(() => ApiCoreDtoTagsTag)
  tags?: ApiCoreDtoTagsTag[];

  @SpeakeasyMetadata()
  @Expose({ name: "trackingCode" })
  trackingCode?: string;
}
