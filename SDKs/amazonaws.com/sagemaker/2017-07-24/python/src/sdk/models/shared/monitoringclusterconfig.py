"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import processinginstancetype_enum as shared_processinginstancetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonitoringClusterConfig:
    r"""Configuration for the cluster used to run model monitoring jobs."""
    
    instance_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceCount') }})  
    instance_type: shared_processinginstancetype_enum.ProcessingInstanceTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceType') }})  
    volume_size_in_gb: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VolumeSizeInGB') }})  
    volume_kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VolumeKmsKeyId'), 'exclude': lambda f: f is None }})  
    