"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddocumentaiv1beta3documentpageimagequalityscoresdetecteddefect as shared_googleclouddocumentaiv1beta3documentpageimagequalityscoresdetecteddefect
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScores:
    r"""Image Quality Scores for the page image"""
    
    detected_defects: Optional[list[shared_googleclouddocumentaiv1beta3documentpageimagequalityscoresdetecteddefect.GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScoresDetectedDefect]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detectedDefects'), 'exclude': lambda f: f is None }})
    r"""A list of detected defects."""  
    quality_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qualityScore'), 'exclude': lambda f: f is None }})
    r"""The overall quality score. Range `[0, 1]` where 1 is perfect quality."""  
    