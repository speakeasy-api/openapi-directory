/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BookingPricingmatrix200ApplicationJSONData {
    /**
     * **array** of age band pricing objects
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ageBandPrices")
    public BookingPricingmatrix200ApplicationJSONDataAgeBandPrices[] ageBandPrices;

    public BookingPricingmatrix200ApplicationJSONData withAgeBandPrices(BookingPricingmatrix200ApplicationJSONDataAgeBandPrices[] ageBandPrices) {
        this.ageBandPrices = ageBandPrices;
        return this;
    }
    
    /**
     * **date** for which to retrieve pricing information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookingDate")
    public String bookingDate;

    public BookingPricingmatrix200ApplicationJSONData withBookingDate(String bookingDate) {
        this.bookingDate = bookingDate;
        return this;
    }
    
    /**
     * **unit** in which pricing is calculated (currently, only 'per person' is supported)
     * - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pricingUnit")
    public String pricingUnit;

    public BookingPricingmatrix200ApplicationJSONData withPricingUnit(String pricingUnit) {
        this.pricingUnit = pricingUnit;
        return this;
    }
    
    /**
     * **sort order** for *this* response object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortOrder")
    public Long sortOrder;

    public BookingPricingmatrix200ApplicationJSONData withSortOrder(Long sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public BookingPricingmatrix200ApplicationJSONData(){}
}
