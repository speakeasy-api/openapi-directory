/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Metrics - List of basic metrics
 */
public class Metrics {
    /**
     * Data used for charting etc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datasets")
    public Object[] datasets;

    public Metrics withDatasets(Object[] datasets) {
        this.datasets = datasets;
        return this;
    }
    
    /**
     * Percentage of all APIs where auto fixes have been applied
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixedPct")
    public Long fixedPct;

    public Metrics withFixedPct(Long fixedPct) {
        this.fixedPct = fixedPct;
        return this;
    }
    
    /**
     * Total number of fixes applied across all APIs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixes")
    public Long fixes;

    public Metrics withFixes(Long fixes) {
        this.fixes = fixes;
        return this;
    }
    
    /**
     * Number of newly invalid APIs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalid")
    public Long invalid;

    public Metrics withInvalid(Long invalid) {
        this.invalid = invalid;
        return this;
    }
    
    /**
     * Open GitHub issues on our main repo
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issues")
    public Long issues;

    public Metrics withIssues(Long issues) {
        this.issues = issues;
        return this;
    }
    
    /**
     * Number of unique APIs
     */
    @JsonProperty("numAPIs")
    public Long numAPIs;

    public Metrics withNumAPIs(Long numAPIs) {
        this.numAPIs = numAPIs;
        return this;
    }
    
    /**
     * Number of methods of API retrieval
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numDrivers")
    public Long numDrivers;

    public Metrics withNumDrivers(Long numDrivers) {
        this.numDrivers = numDrivers;
        return this;
    }
    
    /**
     * Total number of endpoints inside all definitions
     */
    @JsonProperty("numEndpoints")
    public Long numEndpoints;

    public Metrics withNumEndpoints(Long numEndpoints) {
        this.numEndpoints = numEndpoints;
        return this;
    }
    
    /**
     * Number of API providers in directory
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numProviders")
    public Long numProviders;

    public Metrics withNumProviders(Long numProviders) {
        this.numProviders = numProviders;
        return this;
    }
    
    /**
     * Number of API definitions including different versions of the same API
     */
    @JsonProperty("numSpecs")
    public Long numSpecs;

    public Metrics withNumSpecs(Long numSpecs) {
        this.numSpecs = numSpecs;
        return this;
    }
    
    /**
     * GitHub stars for our main repo
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stars")
    public Long stars;

    public Metrics withStars(Long stars) {
        this.stars = stars;
        return this;
    }
    
    /**
     * Summary totals for the last 7 days
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thisWeek")
    public MetricsThisWeek thisWeek;

    public Metrics withThisWeek(MetricsThisWeek thisWeek) {
        this.thisWeek = thisWeek;
        return this;
    }
    
    /**
     * Number of unofficial APIs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unofficial")
    public Long unofficial;

    public Metrics withUnofficial(Long unofficial) {
        this.unofficial = unofficial;
        return this;
    }
    
    /**
     * Number of unreachable (4XX,5XX status) APIs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unreachable")
    public Long unreachable;

    public Metrics withUnreachable(Long unreachable) {
        this.unreachable = unreachable;
        return this;
    }
    
    public Metrics(@JsonProperty("numAPIs") Long numAPIs, @JsonProperty("numEndpoints") Long numEndpoints, @JsonProperty("numSpecs") Long numSpecs) {
        this.numAPIs = numAPIs;
        this.numEndpoints = numEndpoints;
        this.numSpecs = numSpecs;
  }
}
