/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Service, ServiceInput } from "./service";
import { Expose, Type } from "class-transformer";

/**
 * Output only. The current state of the backup.
 */
export enum BackupStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Deleting = "DELETING",
  Active = "ACTIVE",
  Failed = "FAILED",
  Restoring = "RESTORING",
}

/**
 * The details of a backup resource.
 */
export class Backup extends SpeakeasyBase {
  /**
   * Output only. The time when the backup was started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * The description of the backup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Output only. The time when the backup finished creating.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * Immutable. The relative resource name of the backup, in the following form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. Services that are restoring from the backup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restoringServices" })
  restoringServices?: string[];

  /**
   * A managed metastore service that serves metadata queries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceRevision" })
  @Type(() => Service)
  serviceRevision?: Service;

  /**
   * Output only. The current state of the backup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: BackupStateEnum;
}

/**
 * The details of a backup resource.
 */
export class BackupInput extends SpeakeasyBase {
  /**
   * The description of the backup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Immutable. The relative resource name of the backup, in the following form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A managed metastore service that serves metadata queries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceRevision" })
  @Type(() => ServiceInput)
  serviceRevision?: ServiceInput;
}
