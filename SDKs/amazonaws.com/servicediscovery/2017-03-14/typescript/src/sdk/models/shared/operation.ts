/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OperationStatusEnum } from "./operationstatusenum";
import { OperationTypeEnum } from "./operationtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * A complex type that contains information about a specified operation.
 */
export class Operation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorCode" })
  errorCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: OperationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Targets" })
  targets?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: OperationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateDate?: Date;
}
