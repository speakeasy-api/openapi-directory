<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PUTScUpdateType - Container for custom fields of a Rate Plan Charge object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PUTScUpdateType
{
    /**
     * Aligns charges within the same subscription if multiple charges begin on different dates.
     * 
     * 
     * Values:
     * 
     * * `AlignToCharge`
     * * `AlignToSubscriptionStart`
     * * `AlignToTermStart`
     * 
     * Available for the following charge types:
     * 
     * * Recurring
     * * Usage-based
     * 
     * 
     * @var ?string $billingPeriodAlignment
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingPeriodAlignment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $billingPeriodAlignment = null;
    
    /**
     * Container for charge model configuration data.
     * 
     * 
     * **Note**: This field is only available if you have the High Water Mark, Pre-Rated Pricing, or Multi-Attribute Pricing charge models enabled. These charge models are available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChargeModelConfigurationType $chargeModelConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('chargeModelConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChargeModelConfigurationType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChargeModelConfigurationType $chargeModelConfiguration = null;
    
    /**
     * Description of the charge.
     * 
     * 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Specifies the number of units in the base set of units for this charge. Must be >=0.
     * 
     * 
     * Available for the following charge types for the Overage charge model:
     * 
     * * `Recurring`
     * * `Usage-based`
     * 
     * 
     * @var ?float $includedUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('includedUnits')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $includedUnits = null;
    
    /**
     * Price for units over the allowed amount. 
     * 
     * 
     * Available for the following charge type for the Overage and Tiered with Overage charge models:
     * 
     * * Usage-based
     * 
     * 
     * @var ?float $overagePrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('overagePrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $overagePrice = null;
    
    /**
     * Price for units in the subscription rate plan.
     * 
     * 
     * Supports all charge types for the Flat Fee and Per Unit charge models
     * 
     * 
     * @var ?float $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $price = null;
    
    /**
     * Applies an automatic price change when a termed subscription is renewed. The Billing Admin setting **Enable Automatic Price Change When Subscriptions are Renewed?** must be set to Yes to use this field.
     * 
     * 
     * Values:
     * 
     * * `NoChange` (default)
     * * `SpecificPercentageValue`
     * * `UseLatestProductCatalogPricing`
     * 
     * Available for the following charge types:
     * 
     * * Recurring
     * * Usage-based
     * 
     * Not available for the Fixed-Amount Discount charge model.
     * 
     * 
     * @var ?string $priceChangeOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceChangeOption')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priceChangeOption = null;
    
    /**
     * Specifies the percentage to increase or decrease the price of a termed subscription's renewal. Required if you set the `PriceChangeOption` field to `SpecificPercentageValue`.
     * 
     * 
     * Decimal between `-100` and `100`.
     * 
     * Available for the following charge types:
     * 
     * * Recurring
     * * Usage-based
     * 
     * Not available for the Fixed-Amount Discount charge model.
     * 
     * 
     * @var ?float $priceIncreasePercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceIncreasePercentage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $priceIncreasePercentage = null;
    
    /**
     * Quantity of units; must be greater than zero.
     * 
     * 
     * 
     * @var ?float $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $quantity = null;
    
    /**
     * ID of a rate-plan charge for this subscription.
     * 
     * 
     * 
     * @var string $ratePlanChargeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ratePlanChargeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ratePlanChargeId;
    
    /**
     * Container for Volume, Tiered or Tiered with Overage charge models. Supports the following charge types:
     * 
     * 
     * * One-time
     * * Recurring
     * * Usage-based
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\POSTTierType> $tiers
     */
	#[\JMS\Serializer\Annotation\SerializedName('tiers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\POSTTierType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tiers = null;
    
    /**
     * Specifies when to start billing the customer for the charge. Required if the `triggerEvent` field is set to USD.
     * 
     * 
     * `triggerDate` cannot be updated for the following using the REST update subscription call:
     * 
     * * One-time charge type
     * * Discount-Fixed Amount charge model
     * * Discount-Percentage charge model
     * 
     * 
     * @var ?\DateTime $triggerDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggerDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $triggerDate = null;
    
    /**
     * Specifies when to start billing the customer for the charge.
     * 
     * 
     * Values:
     * 
     * * `UCE`
     * * `USA`
     * * `UCA`
     * * `USD`
     * 
     * This is the date when charge changes in the REST request become effective.
     * 
     * `triggerEvent` cannot be updated for the following using the REST update subscription call:
     * 
     * * One-time charge type
     * * Discount-Fixed Amount charge model
     * * Discount-Percentage charge model
     * 
     * 
     * @var ?string $triggerEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggerEvent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $triggerEvent = null;
    
	public function __construct()
	{
		$this->billingPeriodAlignment = null;
		$this->chargeModelConfiguration = null;
		$this->description = null;
		$this->includedUnits = null;
		$this->overagePrice = null;
		$this->price = null;
		$this->priceChangeOption = null;
		$this->priceIncreasePercentage = null;
		$this->quantity = null;
		$this->ratePlanChargeId = "";
		$this->tiers = null;
		$this->triggerDate = null;
		$this->triggerEvent = null;
	}
}
