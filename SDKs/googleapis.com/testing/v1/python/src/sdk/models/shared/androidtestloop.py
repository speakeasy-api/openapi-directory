"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import appbundle as shared_appbundle
from ..shared import filereference as shared_filereference
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AndroidTestLoop:
    r"""A test of an Android Application with a Test Loop. The intent \ will be implicitly added, since Games is the only user of this api, for the time being."""
    
    app_apk: Optional[shared_filereference.FileReference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appApk'), 'exclude': lambda f: f is None }})
    r"""A reference to a file, used for user inputs."""  
    app_bundle: Optional[shared_appbundle.AppBundle] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appBundle'), 'exclude': lambda f: f is None }})
    r"""An Android App Bundle file format, containing a BundleConfig.pb file, a base module directory, zero or more dynamic feature module directories. See https://developer.android.com/guide/app-bundle/build for guidance on building App Bundles."""  
    app_package_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appPackageId'), 'exclude': lambda f: f is None }})
    r"""The java package for the application under test. The default is determined by examining the application's manifest."""  
    scenario_labels: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scenarioLabels'), 'exclude': lambda f: f is None }})
    r"""The list of scenario labels that should be run during the test. The scenario labels should map to labels defined in the application's manifest. For example, player_experience and com.google.test.loops.player_experience add all of the loops labeled in the manifest with the com.google.test.loops.player_experience name to the execution. Scenarios can also be specified in the scenarios field."""  
    scenarios: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scenarios'), 'exclude': lambda f: f is None }})
    r"""The list of scenarios that should be run during the test. The default is all test loops, derived from the application's manifest."""  
    