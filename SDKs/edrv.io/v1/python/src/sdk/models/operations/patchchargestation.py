"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import schema1 as shared_schema1
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class PatchChargeStationRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""ID of charge station that needs to be updated"""  
    schema1: shared_schema1.Schema1 = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Include charge station properties to update here"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchChargeStation200ApplicationJSON:
    r"""Returns the updated chargestion object"""
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    ok: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ok'), 'exclude': lambda f: f is None }})  
    result: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PatchChargeStationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    patch_charge_station_200_application_json_object: Optional[PatchChargeStation200ApplicationJSON] = dataclasses.field(default=None)
    r"""Returns the updated chargestion object"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    