// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateVirtualNodePathParams struct {
	// The name of the service mesh that the virtual node resides in.
	MeshName string `pathParam:"style=simple,explode=false,name=meshName"`
	// The name of the virtual node to update.
	VirtualNodeName string `pathParam:"style=simple,explode=false,name=virtualNodeName"`
}

type UpdateVirtualNodeQueryParams struct {
	// The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then it's the ID of the account that shared the mesh with your account. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.
	MeshOwner *string `queryParam:"style=form,explode=true,name=meshOwner"`
}

type UpdateVirtualNodeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateVirtualNodeRequestBodySpec - An object that represents the specification of a virtual node.
type UpdateVirtualNodeRequestBodySpec struct {
	BackendDefaults  *shared.BackendDefaults  `json:"backendDefaults,omitempty"`
	Backends         []shared.Backend         `json:"backends,omitempty"`
	Listeners        []shared.Listener        `json:"listeners,omitempty"`
	Logging          *shared.Logging          `json:"logging,omitempty"`
	ServiceDiscovery *shared.ServiceDiscovery `json:"serviceDiscovery,omitempty"`
}

type UpdateVirtualNodeRequestBody struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.
	ClientToken *string `json:"clientToken,omitempty"`
	// An object that represents the specification of a virtual node.
	Spec UpdateVirtualNodeRequestBodySpec `json:"spec"`
}

type UpdateVirtualNodeRequest struct {
	PathParams  UpdateVirtualNodePathParams
	QueryParams UpdateVirtualNodeQueryParams
	Headers     UpdateVirtualNodeHeaders
	Request     UpdateVirtualNodeRequestBody `request:"mediaType=application/json"`
}

type UpdateVirtualNodeResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateVirtualNodeOutput *shared.UpdateVirtualNodeOutput
}
