/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Attachment } from "./attachment";
import { CapacityProviderStrategyItem } from "./capacityproviderstrategyitem";
import { ClusterConfiguration } from "./clusterconfiguration";
import { ClusterServiceConnectDefaults } from "./clusterserviceconnectdefaults";
import { ClusterSetting } from "./clustersetting";
import { KeyValuePair } from "./keyvaluepair";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * A regional grouping of one or more container instances where you can run task requests. Each account receives a default cluster the first time you use the Amazon ECS service, but you may also create other clusters. Clusters may contain more than one instance type simultaneously.
 */
export class Cluster extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "activeServicesCount" })
  activeServicesCount?: number;

  @SpeakeasyMetadata({ elemType: Attachment })
  @Expose({ name: "attachments" })
  @Type(() => Attachment)
  attachments?: Attachment[];

  @SpeakeasyMetadata()
  @Expose({ name: "attachmentsStatus" })
  attachmentsStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "capacityProviders" })
  capacityProviders?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "clusterArn" })
  clusterArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "clusterName" })
  clusterName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  @Type(() => ClusterConfiguration)
  configuration?: ClusterConfiguration;

  @SpeakeasyMetadata({ elemType: CapacityProviderStrategyItem })
  @Expose({ name: "defaultCapacityProviderStrategy" })
  @Type(() => CapacityProviderStrategyItem)
  defaultCapacityProviderStrategy?: CapacityProviderStrategyItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "pendingTasksCount" })
  pendingTasksCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "registeredContainerInstancesCount" })
  registeredContainerInstancesCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "runningTasksCount" })
  runningTasksCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceConnectDefaults" })
  @Type(() => ClusterServiceConnectDefaults)
  serviceConnectDefaults?: ClusterServiceConnectDefaults;

  @SpeakeasyMetadata({ elemType: ClusterSetting })
  @Expose({ name: "settings" })
  @Type(() => ClusterSetting)
  settings?: ClusterSetting[];

  @SpeakeasyMetadata({ elemType: KeyValuePair })
  @Expose({ name: "statistics" })
  @Type(() => KeyValuePair)
  statistics?: KeyValuePair[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
