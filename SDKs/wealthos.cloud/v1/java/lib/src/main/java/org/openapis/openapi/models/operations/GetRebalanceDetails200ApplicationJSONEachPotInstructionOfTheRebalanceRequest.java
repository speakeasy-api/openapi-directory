/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest - Each individual pot details on the rebalance request
 */
public class GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest {
    @JsonProperty("buy_instructions")
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequestEachBuyOrSellInstructionOfTheSwitchRequest[] buyInstructions;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withBuyInstructions(GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequestEachBuyOrSellInstructionOfTheSwitchRequest[] buyInstructions) {
        this.buyInstructions = buyInstructions;
        return this;
    }
    
    /**
     * switch instruction ID
     */
    @JsonProperty("instruction_id")
    public String instructionId;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withInstructionId(String instructionId) {
        this.instructionId = instructionId;
        return this;
    }
    
    /**
     * Portfolio deviation for the pot
     */
    @JsonProperty("portfolio_deviation")
    public String portfolioDeviation;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withPortfolioDeviation(String portfolioDeviation) {
        this.portfolioDeviation = portfolioDeviation;
        return this;
    }
    
    /**
     * portfolio_template_id in used by the relevent pot
     */
    @JsonProperty("portfolio_template_id")
    public String portfolioTemplateId;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withPortfolioTemplateId(String portfolioTemplateId) {
        this.portfolioTemplateId = portfolioTemplateId;
        return this;
    }
    
    /**
     * Identifier of pot triggered for rebalance
     */
    @JsonProperty("pot_id")
    public String potId;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withPotId(String potId) {
        this.potId = potId;
        return this;
    }
    
    /**
     * if the status is rejected then the reason for it.
     */
    @JsonProperty("reason")
    public String reason;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    @JsonProperty("sell_instructions")
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequestEachBuyOrSellInstructionOfTheSwitchRequest[] sellInstructions;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withSellInstructions(GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequestEachBuyOrSellInstructionOfTheSwitchRequest[] sellInstructions) {
        this.sellInstructions = sellInstructions;
        return this;
    }
    
    /**
     * Current status of the rebalance on the specific pot_id
     */
    @JsonProperty("status")
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum status;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withStatus(GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequestStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Array with status of all buy and sell transactions.
     */
    @JsonProperty("transactions")
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequestTransactions[] transactions;
    public GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequest withTransactions(GetRebalanceDetails200ApplicationJSONEachPotInstructionOfTheRebalanceRequestTransactions[] transactions) {
        this.transactions = transactions;
        return this;
    }
    
}
