"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CustomFieldEditFieldsTypeEnum(str, Enum):
    r"""Type of the Custom Field"""
    TEXT = 'text'
    SELECTION = 'selection'
    INPUT = 'input'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomFieldEditFields:
    
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""Label given to the Custom Field"""  
    type: Optional[CustomFieldEditFieldsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the Custom Field"""  
    values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values'), 'exclude': lambda f: f is None }})
    r"""All the possible Values of the Custom Field (for type 'selection')"""  
    