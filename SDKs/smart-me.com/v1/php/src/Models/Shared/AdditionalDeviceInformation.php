<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AdditionalDeviceInformation - Additional Information For a device
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AdditionalDeviceInformation
{
    /**
     * An additional Meter serial number. e.g. the number of a meter a smart-me device is connected to.
     * 
     * @var ?string $additionalMeterSerialNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('AdditionalMeterSerialNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $additionalMeterSerialNumber = null;
    
    /**
     * The Firmware Version of a Meter
     * 
     * @var ?int $firmwareVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('FirmwareVersion')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $firmwareVersion = null;
    
    /**
     * The Hardware Version of a Meter.
     * 
     * @var ?int $hardwareVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('HardwareVersion')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hardwareVersion = null;
    
    /**
     * The ID of the device
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('ID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The mode how the device is connected to the network. Valid values are:
     * 
     *             wifi, gprs, ltecatm1, ltenbiot, meshmobile, meshwifi
     * 
     * @var ?string $networkConnection
     */
	#[\JMS\Serializer\Annotation\SerializedName('NetworkConnection')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkConnection = null;
    
    /**
     * The connection RSSI value (0 is bad, 100 is best)
     * 
     * @var ?int $networkConnectionRSSI
     */
	#[\JMS\Serializer\Annotation\SerializedName('NetworkConnectionRSSI')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $networkConnectionRSSI = null;
    
	public function __construct()
	{
		$this->additionalMeterSerialNumber = null;
		$this->firmwareVersion = null;
		$this->hardwareVersion = null;
		$this->id = null;
		$this->networkConnection = null;
		$this->networkConnectionRSSI = null;
	}
}
