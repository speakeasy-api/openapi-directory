/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TimestreamDimension } from "./timestreamdimension";
import { TimestreamTimestamp } from "./timestreamtimestamp";
import { Expose, Type } from "class-transformer";

/**
 * The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href="https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html">Timestream</a> topic rule action documentation.
 */
export class TimestreamAction extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "databaseName" })
  databaseName: string;

  @SpeakeasyMetadata({ elemType: TimestreamDimension })
  @Expose({ name: "dimensions" })
  @Type(() => TimestreamDimension)
  dimensions: TimestreamDimension[];

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tableName" })
  tableName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Type(() => TimestreamTimestamp)
  timestamp?: TimestreamTimestamp;
}
