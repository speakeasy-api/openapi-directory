/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Account } from "./account";
import { Status } from "./status";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The type of event that resulted in the notification.
 */
export enum NotificationTypeEnum {
  Follow = "follow",
  FollowRequest = "follow_request",
  Mention = "mention",
  Reblog = "reblog",
  Favourite = "favourite",
  Poll = "poll",
  Status = "status",
}

/**
 * Represents a notification of an event relevant to the user.
 *
 * @see {@link https://docs.joinmastodon.org/entities/notification/}
 */
export class Notification extends SpeakeasyBase {
  /**
   * Represents a user of Mastodon and their associated profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  @Type(() => Account)
  account: Account;

  /**
   * The timestamp of the notification. ISO 8601 Datetime.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The id of the notification in the database. Cast from an integer, but not guaranteed to be a number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Represents a status posted by an account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => Status)
  status?: Status;

  /**
   * The type of event that resulted in the notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: NotificationTypeEnum;
}
