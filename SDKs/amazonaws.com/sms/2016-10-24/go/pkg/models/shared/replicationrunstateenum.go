// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReplicationRunStateEnum string

const (
	ReplicationRunStateEnumPending   ReplicationRunStateEnum = "PENDING"
	ReplicationRunStateEnumMissed    ReplicationRunStateEnum = "MISSED"
	ReplicationRunStateEnumActive    ReplicationRunStateEnum = "ACTIVE"
	ReplicationRunStateEnumFailed    ReplicationRunStateEnum = "FAILED"
	ReplicationRunStateEnumCompleted ReplicationRunStateEnum = "COMPLETED"
	ReplicationRunStateEnumDeleting  ReplicationRunStateEnum = "DELETING"
	ReplicationRunStateEnumDeleted   ReplicationRunStateEnum = "DELETED"
)

func (e ReplicationRunStateEnum) ToPointer() *ReplicationRunStateEnum {
	return &e
}

func (e *ReplicationRunStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "MISSED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "FAILED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = ReplicationRunStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplicationRunStateEnum: %v", v)
	}
}
