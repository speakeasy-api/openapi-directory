/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DocumentLinks } from "./documentlinks";
import { ManualFile } from "./manualfile";
import { Expose, Type } from "class-transformer";

/**
 * Document model
 */
export class Document extends SpeakeasyBase {
  /**
   * Extension of the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "file_type" })
  fileType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "has_custom_package" })
  hasCustomPackage?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => DocumentLinks)
  links?: DocumentLinks;

  @SpeakeasyMetadata({ elemType: ManualFile })
  @Expose({ name: "manual_files" })
  @Type(() => ManualFile)
  manualFiles?: ManualFile[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "project_id" })
  projectId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "review_in_manual_editor" })
  reviewInManualEditor?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "scheme" })
  scheme?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "search_score" })
  searchScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "source_language" })
  sourceLanguage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "target_languages" })
  targetLanguages?: string[];

  /**
   * Unix epoch time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_at" })
  uploadedAt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "word_count" })
  wordCount?: number;
}
