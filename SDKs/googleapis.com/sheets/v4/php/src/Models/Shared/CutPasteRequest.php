<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CutPasteRequest - Moves data from the source to the destination.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CutPasteRequest
{
    /**
     * A coordinate in a sheet. All indexes are zero-based.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GridCoordinate $destination
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GridCoordinate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GridCoordinate $destination = null;
    
    /**
     * What kind of data to paste. All the source data will be cut, regardless of what is pasted.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CutPasteRequestPasteTypeEnum $pasteType
     */
	#[\JMS\Serializer\Annotation\SerializedName('pasteType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CutPasteRequestPasteTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CutPasteRequestPasteTypeEnum $pasteType = null;
    
    /**
     * A range on a sheet. All indexes are zero-based. Indexes are half open, i.e. the start index is inclusive and the end index is exclusive -- [start_index, end_index). Missing indexes indicate the range is unbounded on that side. For example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id: 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0, end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2, end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B == sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B == sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or equal to the end index. If the start index equals the end index, then the range is empty. Empty ranges are typically not meaningful and are usually rendered in the UI as `#REF!`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GridRange $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GridRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GridRange $source = null;
    
	public function __construct()
	{
		$this->destination = null;
		$this->pasteType = null;
		$this->source = null;
	}
}
