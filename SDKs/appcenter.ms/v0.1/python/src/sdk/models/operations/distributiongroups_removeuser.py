"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DistributionGroupsRemoveUserSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DistributionGroupsRemoveUserRequestBody:
    r"""The list of members to add"""
    
    user_emails: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_emails'), 'exclude': lambda f: f is None }})
    r"""The list of emails of the users"""  
    

@dataclasses.dataclass
class DistributionGroupsRemoveUserRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    distribution_group_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'distribution_group_name', 'style': 'simple', 'explode': False }})
    r"""The name of the distribution group"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    request_body: DistributionGroupsRemoveUserRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""The list of members to add"""  
    
class DistributionGroupsRemoveUserDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DistributionGroupsRemoveUserDefaultApplicationJSONError:
    
    code: DistributionGroupsRemoveUserDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DistributionGroupsRemoveUserDefaultApplicationJSON:
    r"""Error"""
    
    error: DistributionGroupsRemoveUserDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DistributionGroupsRemoveUser200ApplicationJSON:
    
    status: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status code of the result"""  
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The code of the result"""  
    message: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""The message of the result"""  
    user_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_email'), 'exclude': lambda f: f is None }})
    r"""The email of the user"""  
    

@dataclasses.dataclass
class DistributionGroupsRemoveUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    distribution_groups_remove_user_200_application_json_objects: Optional[list[DistributionGroupsRemoveUser200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Success"""  
    distribution_groups_remove_user_default_application_json_object: Optional[DistributionGroupsRemoveUserDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    