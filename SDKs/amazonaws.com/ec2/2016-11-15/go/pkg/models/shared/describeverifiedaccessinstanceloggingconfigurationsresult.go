// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum - The status code.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum string

const (
	DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnumSuccess DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum = "success"
	DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnumFailed  DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum = "failed"
)

func (e DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum) ToPointer() *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum {
	return &e
}

func (e *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "failed":
		*e = DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum: %v", v)
	}
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatus - The delivery status for access logs.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatus struct {
	Code    *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatusCodeEnum
	Message *string
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogs - CloudWatch Logs logging destination.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogs struct {
	DeliveryStatus *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogsDeliveryStatus
	Enabled        *bool
	LogGroup       *string
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum - The status code.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum string

const (
	DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnumSuccess DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum = "success"
	DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnumFailed  DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum = "failed"
)

func (e DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum) ToPointer() *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum {
	return &e
}

func (e *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "failed":
		*e = DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum: %v", v)
	}
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatus - The delivery status.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatus struct {
	Code    *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatusCodeEnum
	Message *string
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehose - Kinesis logging destination.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehose struct {
	DeliveryStatus *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehoseDeliveryStatus
	DeliveryStream *string
	Enabled        *bool
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum - The status code.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum string

const (
	DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnumSuccess DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum = "success"
	DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnumFailed  DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum = "failed"
)

func (e DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum) ToPointer() *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum {
	return &e
}

func (e *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "failed":
		*e = DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum: %v", v)
	}
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatus - The delivery status.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatus struct {
	Code    *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatusCodeEnum
	Message *string
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3 - Amazon S3 logging options.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3 struct {
	BucketName     *string
	BucketOwner    *string
	DeliveryStatus *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3DeliveryStatus
	Enabled        *bool
	Prefix         *string
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogs - Details about the logging options.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogs struct {
	CloudWatchLogs      *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsCloudWatchLogs
	KinesisDataFirehose *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsKinesisDataFirehose
	S3                  *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogsS3
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurations - Describes logging options for an Amazon Web Services Verified Access instance.
type DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurations struct {
	AccessLogs               *DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurationsAccessLogs
	VerifiedAccessInstanceID *string
}

// DescribeVerifiedAccessInstanceLoggingConfigurationsResult - Success
type DescribeVerifiedAccessInstanceLoggingConfigurationsResult struct {
	LoggingConfigurations []DescribeVerifiedAccessInstanceLoggingConfigurationsResultLoggingConfigurations
	NextToken             *string
}
