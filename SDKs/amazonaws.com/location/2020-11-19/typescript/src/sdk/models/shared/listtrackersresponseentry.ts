/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Always returns <code>RequestBasedUsage</code>.Deprecated. Always returns RequestBasedUsage.
 */
export enum ListTrackersResponseEntryPricingPlanEnum {
  RequestBasedUsage = "RequestBasedUsage",
  MobileAssetTracking = "MobileAssetTracking",
  MobileAssetManagement = "MobileAssetManagement",
}

/**
 * Contains the tracker resource details.
 */
export class ListTrackersResponseEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PricingPlan" })
  pricingPlan?: ListTrackersResponseEntryPricingPlanEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PricingPlanDataSource" })
  pricingPlanDataSource?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TrackerName" })
  trackerName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
