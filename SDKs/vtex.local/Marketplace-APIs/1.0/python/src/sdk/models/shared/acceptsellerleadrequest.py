"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountable as shared_accountable
from ..shared import address as shared_address
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AcceptSellerLeadRequest:
    
    accountable: shared_accountable.Accountable = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountable') }})  
    account_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId') }})
    r"""Marketplace's account ID"""  
    address: shared_address.Address = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address') }})  
    document: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document') }})
    r"""Company's legal document code."""  
    email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email') }})
    r"""email of the admin responsible for the seller."""  
    has_accepted_legal_terms: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hasAcceptedLegalTerms') }})
    r"""Indicates if the seller has accepted the platform's legal terms and conditions."""  
    sales_channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesChannel') }})
    r"""Sales channel (or [trade policy](https://help.vtex.com/en/tutorial/como-funciona-uma-politica-comercial--6Xef8PZiFm40kg2STrMkMV#master-data)) associated to the seller account created."""  
    seller_account_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellerAccountName') }})
    r"""Name of the seller's account, part of the url of their VTEX Admin."""  
    seller_email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellerEmail') }})
    r"""Seller's contact email."""  
    seller_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellerName') }})
    r"""Seller's store's name."""  
    seller_type: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellerType') }})
    r"""Type of seller, including:
    
    `1`: regular seller 
    
    `2`: whitelabel seller
    """  
    