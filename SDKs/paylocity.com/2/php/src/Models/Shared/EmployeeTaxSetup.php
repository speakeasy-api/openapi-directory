<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EmployeeTaxSetup - Add tax form, 1099 exempt reasons and notes, and 943 agricultural employee information. Once the employee receives wages, this information cannot be updated. Add or update SUI tax state, retirement plan, and statutory information.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EmployeeTaxSetup
{
    /**
     * Notes for FITW exemption.<br  /> Max length: 250
     * 
     * @var ?string $fitwExemptNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('fitwExemptNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fitwExemptNotes = null;
    
    /**
     * Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
     * 
     * @var ?string $fitwExemptReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('fitwExemptReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fitwExemptReason = null;
    
    /**
     * Notes for FUTA exemption.<br  /> Max length: 250
     * 
     * @var ?string $futaExemptNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('futaExemptNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $futaExemptNotes = null;
    
    /**
     * Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30
     * 
     * @var ?string $futaExemptReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('futaExemptReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $futaExemptReason = null;
    
    /**
     * Indicates if employee in agriculture or farming.
     * 
     * @var ?bool $isEmployee943
     */
	#[\JMS\Serializer\Annotation\SerializedName('isEmployee943')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isEmployee943 = null;
    
    /**
     * Indicates if employee is eligible for pension.
     * 
     * @var ?bool $isPension
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPension')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPension = null;
    
    /**
     * Indicates if employee is statutory.
     * 
     * @var ?bool $isStatutory
     */
	#[\JMS\Serializer\Annotation\SerializedName('isStatutory')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isStatutory = null;
    
    /**
     * Notes for Medicare exemption.<br  /> Max length: 250
     * 
     * @var ?string $medExemptNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('medExemptNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $medExemptNotes = null;
    
    /**
     * Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30
     * 
     * @var ?string $medExemptReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('medExemptReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $medExemptReason = null;
    
    /**
     * Notes for SITW exemption.<br  /> Max length: 250
     * 
     * @var ?string $sitwExemptNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('sitwExemptNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sitwExemptNotes = null;
    
    /**
     * Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
     * 
     * @var ?string $sitwExemptReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('sitwExemptReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sitwExemptReason = null;
    
    /**
     * Notes for Social Security exemption.<br  /> Max length: 250
     * 
     * @var ?string $ssExemptNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('ssExemptNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ssExemptNotes = null;
    
    /**
     * Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
     * 
     * @var ?string $ssExemptReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('ssExemptReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ssExemptReason = null;
    
    /**
     * Notes for SUI exemption.<br  /> Max length: 250
     * 
     * @var ?string $suiExemptNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('suiExemptNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $suiExemptNotes = null;
    
    /**
     * Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30
     * 
     * @var ?string $suiExemptReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('suiExemptReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $suiExemptReason = null;
    
    /**
     * Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2
     * 
     * @var ?string $suiState
     */
	#[\JMS\Serializer\Annotation\SerializedName('suiState')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $suiState = null;
    
    /**
     * Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1
     * 
     * @var ?string $taxDistributionCode1099R
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxDistributionCode1099R')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxDistributionCode1099R = null;
    
    /**
     * Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15
     * 
     * @var ?string $taxForm
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxForm')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taxForm = null;
    
	public function __construct()
	{
		$this->fitwExemptNotes = null;
		$this->fitwExemptReason = null;
		$this->futaExemptNotes = null;
		$this->futaExemptReason = null;
		$this->isEmployee943 = null;
		$this->isPension = null;
		$this->isStatutory = null;
		$this->medExemptNotes = null;
		$this->medExemptReason = null;
		$this->sitwExemptNotes = null;
		$this->sitwExemptReason = null;
		$this->ssExemptNotes = null;
		$this->ssExemptReason = null;
		$this->suiExemptNotes = null;
		$this->suiExemptReason = null;
		$this->suiState = null;
		$this->taxDistributionCode1099R = null;
		$this->taxForm = null;
	}
}
