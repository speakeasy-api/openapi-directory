/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PathFilter } from "./pathfilter";
import { Expose, Type } from "class-transformer";

export class CloneVersionRequest extends SpeakeasyBase {
  /**
   * A representation of filter path.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exclude" })
  @Type(() => PathFilter)
  exclude?: PathFilter;

  /**
   * If true, the call to `CloneVersion` immediately finalizes the version after cloning is complete. If false, the cloned version will have a status of `CREATED`. Use [`UpdateVersion`](patch) to set the status of the version to `FINALIZED`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finalize" })
  finalize?: boolean;

  /**
   * A representation of filter path.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "include" })
  @Type(() => PathFilter)
  include?: PathFilter;

  /**
   * Required. The unique identifier for the version to be cloned, in the format: sites/SITE_ID/versions/VERSION_ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceVersion" })
  sourceVersion?: string;
}
