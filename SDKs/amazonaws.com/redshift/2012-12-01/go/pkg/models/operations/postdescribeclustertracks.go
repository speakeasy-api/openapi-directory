// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeClusterTracksActionEnum
type POSTDescribeClusterTracksActionEnum string

const (
	POSTDescribeClusterTracksActionEnumDescribeClusterTracks POSTDescribeClusterTracksActionEnum = "DescribeClusterTracks"
)

func (e POSTDescribeClusterTracksActionEnum) ToPointer() *POSTDescribeClusterTracksActionEnum {
	return &e
}

func (e *POSTDescribeClusterTracksActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeClusterTracks":
		*e = POSTDescribeClusterTracksActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeClusterTracksActionEnum: %v", v)
	}
}

// POSTDescribeClusterTracksVersionEnum
type POSTDescribeClusterTracksVersionEnum string

const (
	POSTDescribeClusterTracksVersionEnumTwoThousandAndTwelve1201 POSTDescribeClusterTracksVersionEnum = "2012-12-01"
)

func (e POSTDescribeClusterTracksVersionEnum) ToPointer() *POSTDescribeClusterTracksVersionEnum {
	return &e
}

func (e *POSTDescribeClusterTracksVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = POSTDescribeClusterTracksVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeClusterTracksVersionEnum: %v", v)
	}
}

type POSTDescribeClusterTracksRequest struct {
	Action POSTDescribeClusterTracksActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords        *string                              `queryParam:"style=form,explode=true,name=MaxRecords"`
	RequestBody       []byte                               `request:"mediaType=text/xml"`
	Version           POSTDescribeClusterTracksVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeClusterTracksResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
