"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetRealmUsersCountRequest:
    
    realm: str = dataclasses.field(metadata={'path_param': { 'field_name': 'realm', 'style': 'simple', 'explode': False }})
    r"""realm name (not id!)"""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    r"""email filter"""  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'firstName', 'style': 'form', 'explode': True }})
    r"""first name filter"""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lastName', 'style': 'form', 'explode': True }})
    r"""last name filter"""  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""arbitrary search string for all the fields below"""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'username', 'style': 'form', 'explode': True }})
    r"""username filter"""  
    

@dataclasses.dataclass
class GetRealmUsersCountResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_realm_users_count_2_xx_application_json_int32_integer: Optional[int] = dataclasses.field(default=None)
    r"""success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    