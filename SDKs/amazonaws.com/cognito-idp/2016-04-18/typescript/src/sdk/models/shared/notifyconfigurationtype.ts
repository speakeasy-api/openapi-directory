/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NotifyEmailType } from "./notifyemailtype";
import { Expose, Type } from "class-transformer";

/**
 * The notify configuration type.
 */
export class NotifyConfigurationType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BlockEmail" })
  @Type(() => NotifyEmailType)
  blockEmail?: NotifyEmailType;

  @SpeakeasyMetadata()
  @Expose({ name: "From" })
  from?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MfaEmail" })
  @Type(() => NotifyEmailType)
  mfaEmail?: NotifyEmailType;

  @SpeakeasyMetadata()
  @Expose({ name: "NoActionEmail" })
  @Type(() => NotifyEmailType)
  noActionEmail?: NotifyEmailType;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplyTo" })
  replyTo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceArn" })
  sourceArn: string;
}
