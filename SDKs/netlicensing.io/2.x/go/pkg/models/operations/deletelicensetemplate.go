// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteLicenseTemplateSecurity struct {
	BasicAuth shared.SchemeBasicAuth `security:"scheme,type=http,subtype=basic"`
}

type DeleteLicenseTemplatePathParams struct {
	// Unique number (across all Products of a Vendor) that identifies the License Template.
	LicenseTemplateNumber string `pathParam:"style=simple,explode=false,name=licenseTemplateNumber"`
}

type DeleteLicenseTemplateQueryParams struct {
	// Force object deletion and all descendants.
	ForceCascade *bool `queryParam:"style=form,explode=true,name=forceCascade"`
}

type DeleteLicenseTemplateRequest struct {
	PathParams  DeleteLicenseTemplatePathParams
	QueryParams DeleteLicenseTemplateQueryParams
	Security    DeleteLicenseTemplateSecurity
}

type DeleteLicenseTemplateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful request
	Netlicensing *shared.Netlicensing
}
