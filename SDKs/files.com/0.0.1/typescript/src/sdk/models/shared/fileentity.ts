/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PreviewEntity } from "./previewentity";
import { Expose, Transform, Type } from "class-transformer";

/**
 * List Folders by path
 */
export class FileEntity extends SpeakeasyBase {
  /**
   * File CRC32 checksum. This is sometimes delayed, so if you get a blank response, wait and try again.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crc32" })
  crc32?: string;

  /**
   * File created date/time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * File/Folder display name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * Link to download file. Provided only in response to a download request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "download_uri" })
  downloadUri?: string;

  /**
   * Is this folder locked and unable to be modified?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_locked" })
  isLocked?: boolean;

  /**
   * File MD5 checksum. This is sometimes delayed, so if you get a blank response, wait and try again.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "md5" })
  md5?: string;

  /**
   * MIME Type.  This is determined by the filename extension and is not stored separately internally.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mime_type" })
  mimeType?: string;

  /**
   * File last modified date/time, according to the server.  This is the timestamp of the last Files.com operation of the file, regardless of what modified timestamp was sent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mtime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  mtime?: Date;

  /**
   * File/Folder path
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * A short string representing the current user's permissions.  Can be `r`,`w`,`d`, `l` or any combination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "preview" })
  @Type(() => PreviewEntity)
  preview?: PreviewEntity;

  /**
   * File preview ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preview_id" })
  previewId?: number;

  /**
   * Bookmark/priority color of file/folder
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority_color" })
  priorityColor?: string;

  /**
   * File last modified date/time, according to the client who set it.  Files.com allows desktop, FTP, SFTP, and WebDAV clients to set modified at times.  This allows Desktop<->Cloud syncing to preserve modified at times.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provided_mtime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  providedMtime?: Date;

  /**
   * Region location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * File/Folder size
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  /**
   * Are subfolders locked and unable to be modified?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subfolders_locked?" })
  subfoldersLocked?: boolean;

  /**
   * Type: `directory` or `file`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
