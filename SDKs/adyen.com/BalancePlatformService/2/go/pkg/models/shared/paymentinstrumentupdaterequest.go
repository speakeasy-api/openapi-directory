// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PaymentInstrumentUpdateRequestStatusEnum - The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **inactive**.
//
// Possible values:
//
//   - **active**:  The payment instrument is active and can be used to make payments.
//
//   - **inactive**: The payment instrument is inactive and cannot be used to make payments.
//
//   - **suspended**: The payment instrument is suspended, either because it was stolen or lost.
//
//   - **closed**: The payment instrument is permanently closed. This action cannot be undone.
type PaymentInstrumentUpdateRequestStatusEnum string

const (
	PaymentInstrumentUpdateRequestStatusEnumActive    PaymentInstrumentUpdateRequestStatusEnum = "active"
	PaymentInstrumentUpdateRequestStatusEnumClosed    PaymentInstrumentUpdateRequestStatusEnum = "closed"
	PaymentInstrumentUpdateRequestStatusEnumInactive  PaymentInstrumentUpdateRequestStatusEnum = "inactive"
	PaymentInstrumentUpdateRequestStatusEnumSuspended PaymentInstrumentUpdateRequestStatusEnum = "suspended"
)

func (e *PaymentInstrumentUpdateRequestStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "closed":
		fallthrough
	case "inactive":
		fallthrough
	case "suspended":
		*e = PaymentInstrumentUpdateRequestStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentInstrumentUpdateRequestStatusEnum: %s", s)
	}
}

// PaymentInstrumentUpdateRequestStatusReasonEnum - The reason for updating the status of the payment instrument.
//
// Possible values: **lost**, **stolen**, **damaged**, **suspectedFraud**, **expired**, **endOfLife**, **accountClosure**, **other**.
// If the reason is **other**, you must also send the `statusComment` parameter describing the status change.
type PaymentInstrumentUpdateRequestStatusReasonEnum string

const (
	PaymentInstrumentUpdateRequestStatusReasonEnumAccountClosure PaymentInstrumentUpdateRequestStatusReasonEnum = "accountClosure"
	PaymentInstrumentUpdateRequestStatusReasonEnumDamaged        PaymentInstrumentUpdateRequestStatusReasonEnum = "damaged"
	PaymentInstrumentUpdateRequestStatusReasonEnumEndOfLife      PaymentInstrumentUpdateRequestStatusReasonEnum = "endOfLife"
	PaymentInstrumentUpdateRequestStatusReasonEnumExpired        PaymentInstrumentUpdateRequestStatusReasonEnum = "expired"
	PaymentInstrumentUpdateRequestStatusReasonEnumLost           PaymentInstrumentUpdateRequestStatusReasonEnum = "lost"
	PaymentInstrumentUpdateRequestStatusReasonEnumOther          PaymentInstrumentUpdateRequestStatusReasonEnum = "other"
	PaymentInstrumentUpdateRequestStatusReasonEnumStolen         PaymentInstrumentUpdateRequestStatusReasonEnum = "stolen"
	PaymentInstrumentUpdateRequestStatusReasonEnumSuspectedFraud PaymentInstrumentUpdateRequestStatusReasonEnum = "suspectedFraud"
)

func (e *PaymentInstrumentUpdateRequestStatusReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "accountClosure":
		fallthrough
	case "damaged":
		fallthrough
	case "endOfLife":
		fallthrough
	case "expired":
		fallthrough
	case "lost":
		fallthrough
	case "other":
		fallthrough
	case "stolen":
		fallthrough
	case "suspectedFraud":
		*e = PaymentInstrumentUpdateRequestStatusReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentInstrumentUpdateRequestStatusReasonEnum: %s", s)
	}
}

type PaymentInstrumentUpdateRequest struct {
	// The unique identifier of the balance account associated with this payment instrument.
	// >You can only change the balance account ID if the payment instrument has **inactive** status.
	BalanceAccountID *string   `json:"balanceAccountId,omitempty"`
	Card             *CardInfo `json:"card,omitempty"`
	// The status of the payment instrument. If a status is not specified when creating a payment instrument, it is set to **active** by default. However, there can be exceptions for cards based on the `card.formFactor` and the `issuingCountryCode`. For example, when issuing physical cards in the US, the default status is **inactive**.
	//
	// Possible values:
	//
	//  * **active**:  The payment instrument is active and can be used to make payments.
	//
	//  * **inactive**: The payment instrument is inactive and cannot be used to make payments.
	//
	//  * **suspended**: The payment instrument is suspended, either because it was stolen or lost.
	//
	//  * **closed**: The payment instrument is permanently closed. This action cannot be undone.
	//
	//
	Status *PaymentInstrumentUpdateRequestStatusEnum `json:"status,omitempty"`
	// Comment for the status of the payment instrument.
	//
	// Required if `statusReason` is **other**.
	StatusComment *string `json:"statusComment,omitempty"`
	// The reason for updating the status of the payment instrument.
	//
	// Possible values: **lost**, **stolen**, **damaged**, **suspectedFraud**, **expired**, **endOfLife**, **accountClosure**, **other**.
	// If the reason is **other**, you must also send the `statusComment` parameter describing the status change.
	StatusReason *PaymentInstrumentUpdateRequestStatusReasonEnum `json:"statusReason,omitempty"`
}
