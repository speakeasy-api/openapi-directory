/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ClearorderFormMessagesRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: Record<string, any>;

  /**
   * ID of the orderForm corresponding to the cart whose messages you want to remove.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=orderFormId",
  })
  orderFormId: string;
}

export class ClearorderFormMessages200ApplicationJSONAvailableAddresses extends SpeakeasyBase {
  /**
   * Address ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressId" })
  addressId?: string;

  /**
   * Address type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressType" })
  addressType?: string;

  /**
   * City of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Complement to the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: string;

  /**
   * Country of the address. ISO three-letter code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Array containing two floats with geocoordinates, first longitude, then latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCoordinates" })
  geoCoordinates?: number[];

  /**
   * Indicates whether address is disposable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDisposable" })
  isDisposable?: boolean;

  /**
   * Neighborhood of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood?: string;

  /**
   * Number of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Name of the receiver.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverName" })
  receiverName?: string;

  /**
   * Reference that may help in the location of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * State of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Street of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;
}

/**
 * Object containing preferences from the client who placed the order.
 */
export class ClearorderFormMessages200ApplicationJSONClientPreferencesData extends SpeakeasyBase {
  /**
   * Client's locale. Examples: `pt-BR` and `en-US`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locale" })
  locale?: string;

  /**
   * `true` if the client opted to receive newsletter from the store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "optinNewsLetter" })
  optinNewsLetter?: boolean;
}

/**
 * Customer's profile information.
 */
export class ClearorderFormMessages200ApplicationJSONClientProfileData extends SpeakeasyBase {
  /**
   * Corporate document, if the customer is a legal entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corporateDocument" })
  corporateDocument?: string;

  /**
   * Company name, if the customer is a legal entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corporateName" })
  corporateName?: string;

  /**
   * Corporate phone number, if the customer is a legal entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corporatePhone" })
  corporatePhone?: string;

  /**
   * Customer class.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerClass" })
  customerClass?: string;

  /**
   * Document informed by the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "document" })
  document?: string;

  /**
   * Type of the document informed by the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documentType" })
  documentType?: string;

  /**
   * Email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * First name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  /**
   * Indicates whether the customer is a legal entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCorporate" })
  isCorporate?: boolean;

  /**
   * Last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  /**
   * Phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * Indicates whether profile is complete on loading.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileCompleteOnLoading" })
  profileCompleteOnLoading?: boolean;

  /**
   * Indicates whether profile presents error on loading.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileErrorOnLoading" })
  profileErrorOnLoading?: boolean;

  /**
   * State inscription, if the customer is a legal entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateInscription" })
  stateInscription?: string;

  /**
   * Trade name, if the customer is a legal entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tradeName" })
  tradeName?: string;
}

export class ClearorderFormMessages200ApplicationJSONItemMetadataItems extends SpeakeasyBase {
  /**
   * Detail URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detailUrl" })
  detailUrl?: string;

  /**
   * European Article Number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ean" })
  ean?: string;

  /**
   * Item ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Image URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageUrl" })
  imageUrl?: string;

  /**
   * Product name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Product ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  /**
   * Ref ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refId" })
  refId?: string;

  /**
   * Seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  seller?: string;

  /**
   * SKU name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skuName" })
  skuName?: string;
}

/**
 * Item metadata.
 */
export class ClearorderFormMessages200ApplicationJSONItemMetadata extends SpeakeasyBase {
  /**
   * List of objects containing metadata on each item in the order.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONItemMetadataItems,
  })
  @Expose({ name: "items" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItemMetadataItems)
  items?: ClearorderFormMessages200ApplicationJSONItemMetadataItems[];
}

/**
 * Additional information.
 */
export class ClearorderFormMessages200ApplicationJSONItemsAdditionalInfo extends SpeakeasyBase {
  /**
   * Brand ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandId" })
  brandId?: string;

  /**
   * Brand name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandName" })
  brandName?: string;

  /**
   * Dimension.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimension" })
  dimension?: string;

  /**
   * Offering information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offeringInfo" })
  offeringInfo?: string;

  /**
   * Offering type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offeringType" })
  offeringType?: string;

  /**
   * Offering type ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offeringTypeId" })
  offeringTypeId?: string;
}

export class ClearorderFormMessages200ApplicationJSONItemsBundleItems extends SpeakeasyBase {
  /**
   * Service identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Service name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Service price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Service type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class ClearorderFormMessages200ApplicationJSONItemsPriceDefinitionSellingPrices extends SpeakeasyBase {
  /**
   * Rounding quantity, meaning how many items are rounded to this value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Value in cents for that specific rounding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * Price information for all units of a specific item.
 */
export class ClearorderFormMessages200ApplicationJSONItemsPriceDefinition extends SpeakeasyBase {
  /**
   * Item's calculated unitary selling price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "calculatedSellingPrice" })
  calculatedSellingPrice?: number;

  /**
   * Array of objects, each containing value (in cents) and quantity for the different rounding instances that can be combined to form the correctly rounded total.
   */
  @SpeakeasyMetadata({
    elemType:
      ClearorderFormMessages200ApplicationJSONItemsPriceDefinitionSellingPrices,
  })
  @Expose({ name: "sellingPrices" })
  @Type(
    () =>
      ClearorderFormMessages200ApplicationJSONItemsPriceDefinitionSellingPrices
  )
  sellingPrices?: ClearorderFormMessages200ApplicationJSONItemsPriceDefinitionSellingPrices[];

  /**
   * Total value for all units of the item in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class ClearorderFormMessages200ApplicationJSONItemsPriceTags extends SpeakeasyBase {
  /**
   * Price tag identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  /**
   * Indicates whether price tag value is applied through a percentage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPercentual" })
  isPercentual?: boolean;

  /**
   * Price tag name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Price tag raw value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawValue" })
  rawValue?: number;

  /**
   * Price tag value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

/**
 * Object, where each field is an ID from `productCategoryIds`.
 */
export class ClearorderFormMessages200ApplicationJSONItemsProductCategories extends SpeakeasyBase {
  /**
   * Product category corresponding to the ID in the field key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "{ID}" })
  id?: string;
}

export class ClearorderFormMessages200ApplicationJSONItems extends SpeakeasyBase {
  /**
   * Additional information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfo" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItemsAdditionalInfo)
  additionalInfo?: ClearorderFormMessages200ApplicationJSONItemsAdditionalInfo;

  /**
   * Array containing information on attachments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attachments" })
  attachments?: string[];

  /**
   * Availability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availability" })
  availability?: string;

  /**
   * Information on services sold along with the SKU. Example: a gift package.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONItemsBundleItems,
  })
  @Expose({ name: "bundleItems" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItemsBundleItems)
  bundleItems?: ClearorderFormMessages200ApplicationJSONItemsBundleItems[];

  /**
   * Detail URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detailUrl" })
  detailUrl?: string;

  /**
   * European Article Number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ean" })
  ean?: string;

  /**
   * ID of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Image URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageUrl" })
  imageUrl?: string;

  /**
   * Indicates whether item is a gift.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isGift" })
  isGift?: boolean;

  /**
   * List price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  /**
   * Manual price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manualPrice" })
  manualPrice?: number;

  /**
   * User that applied the manual price, if that is the case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manualPriceAppliedBy" })
  manualPriceAppliedBy?: string;

  /**
   * Manufacturer code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manufacturerCode" })
  manufacturerCode?: string;

  /**
   * Measurement unit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "measurementUnit" })
  measurementUnit?: string;

  /**
   * Modal type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modalType" })
  modalType?: string;

  /**
   * Product name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Parent assembly binding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentAssemblyBinding" })
  parentAssemblyBinding?: string;

  /**
   * Parent item index.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentItemIndex" })
  parentItemIndex?: number;

  /**
   * Presale date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preSaleDate" })
  preSaleDate?: string;

  /**
   * Price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Price information for all units of a specific item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceDefinition" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItemsPriceDefinition)
  priceDefinition?: ClearorderFormMessages200ApplicationJSONItemsPriceDefinition;

  /**
   * Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONItemsPriceTags,
  })
  @Expose({ name: "priceTags" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItemsPriceTags)
  priceTags?: ClearorderFormMessages200ApplicationJSONItemsPriceTags[];

  /**
   * Price expiration date and time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priceValidUntil" })
  priceValidUntil?: string;

  /**
   * Object, where each field is an ID from `productCategoryIds`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCategories" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItemsProductCategories)
  productCategories?: ClearorderFormMessages200ApplicationJSONItemsProductCategories;

  /**
   * Product category IDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCategoryIds" })
  productCategoryIds?: string;

  /**
   * Product ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  /**
   * Product Ref ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productRefId" })
  productRefId?: string;

  /**
   * Quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Ref ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refId" })
  refId?: string;

  /**
   * Reward value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rewardValue" })
  rewardValue?: number;

  /**
   * Seller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seller" })
  seller?: string;

  /**
   * Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerChain" })
  sellerChain?: string[];

  /**
   * Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellingPrice" })
  sellingPrice?: number;

  /**
   * SKU name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skuName" })
  skuName?: string;

  /**
   * Tax value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;

  /**
   * Unique ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uniqueId" })
  uniqueId?: string;

  /**
   * Unit multiplier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitMultiplier" })
  unitMultiplier?: number;
}

/**
 * Object containing information about the ordering of items within the orderForm.
 */
export class ClearorderFormMessages200ApplicationJSONItemsOrdination extends SpeakeasyBase {
  /**
   * Indicates whether the ordering is ascending.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ascending" })
  ascending?: boolean;

  /**
   * Criteria adopted to order the items in the list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "criteria" })
  criteria?: string;
}

/**
 * Object containing promotion data such as coupon tracking information and internal or external UTMs.
 */
export class ClearorderFormMessages200ApplicationJSONMarketingData extends SpeakeasyBase {
  /**
   * Sending an existing coupon code in this field will return the corresponding discount in the purchase. Use the [cart simulation](https://developers.vtex.com/vtex-rest-api/reference/orderform#orderformsimulation) request to check which coupons might apply before placing the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coupon" })
  coupon?: string;

  /**
   * UTM campaign
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmCampaign" })
  utmCampaign?: string;

  /**
   * UTM medium.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmMedium" })
  utmMedium?: string;

  /**
   * UTM source.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmSource" })
  utmSource?: string;

  /**
   * utmi_campaign (internal utm).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmiCampaign" })
  utmiCampaign?: string;

  /**
   * utmi_page (internal utm)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmiPage" })
  utmiPage?: string;

  /**
   * utmi_part (internal utm).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmiPart" })
  utmiPart?: string;
}

export class ClearorderFormMessages200ApplicationJSONPaymentDataGiftCards extends SpeakeasyBase {
  /**
   * Gift card balance in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  /**
   * Gift card ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Indicates whether gift card is in use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inUse" })
  inUse?: boolean;

  /**
   * Indicates whether gift card is special.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSpecialCard" })
  isSpecialCard?: boolean;

  /**
   * Gift card name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Gift card redemption code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redemptionCode" })
  redemptionCode?: string;

  /**
   * Gift card value in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

export class ClearorderFormMessages200ApplicationJSONPaymentDataTransactionsPayments extends SpeakeasyBase {
  /**
   * Account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Bin.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bin" })
  bin?: string;

  /**
   * Number of installments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "installments" })
  installments?: number;

  /**
   * Payment system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentSystem" })
  paymentSystem?: string;

  /**
   * Reference value for calculating interest rates, in case it applies. Displayed in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referenceValue" })
  referenceValue?: number;

  /**
   * Value including interest, in case it applies. Displayed in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

export class ClearorderFormMessages200ApplicationJSONPaymentDataTransactions extends SpeakeasyBase {
  /**
   * Indicates whether transaction is active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  /**
   * Merchant name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantName" })
  merchantName?: string;

  /**
   * Information on each payment.
   */
  @SpeakeasyMetadata({
    elemType:
      ClearorderFormMessages200ApplicationJSONPaymentDataTransactionsPayments,
  })
  @Expose({ name: "payments" })
  @Type(
    () =>
      ClearorderFormMessages200ApplicationJSONPaymentDataTransactionsPayments
  )
  payments?: ClearorderFormMessages200ApplicationJSONPaymentDataTransactionsPayments[];

  /**
   * Indicates whather transaction is shared.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sharedTransaction" })
  sharedTransaction?: boolean;

  /**
   * Transaction ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transactionId" })
  transactionId?: string;
}

/**
 * Information on the order's payment.
 */
export class ClearorderFormMessages200ApplicationJSONPaymentData extends SpeakeasyBase {
  /**
   * Gift card information, if it applies to the order.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONPaymentDataGiftCards,
  })
  @Expose({ name: "giftCards" })
  @Type(() => ClearorderFormMessages200ApplicationJSONPaymentDataGiftCards)
  giftCards?: ClearorderFormMessages200ApplicationJSONPaymentDataGiftCards[];

  /**
   * Information on each transaction pertinent to the order.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONPaymentDataTransactions,
  })
  @Expose({ name: "transactions" })
  @Type(() => ClearorderFormMessages200ApplicationJSONPaymentDataTransactions)
  transactions?: ClearorderFormMessages200ApplicationJSONPaymentDataTransactions[];
}

/**
 * Information on rates and benefits that apply to the order.
 */
export class ClearorderFormMessages200ApplicationJSONRatesAndBenefitsData extends SpeakeasyBase {
  /**
   * List with rates and benefits identifiers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rateAndBenefitsIdentifiers" })
  rateAndBenefitsIdentifiers?: string[];

  /**
   * List with rates and benefits teasers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "teaser" })
  teaser?: string[];
}

export class ClearorderFormMessages200ApplicationJSONSellers extends SpeakeasyBase {
  /**
   * Seller ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Seller logo.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logo" })
  logo?: string;

  /**
   * Seller name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Address information.
 */
export class ClearorderFormMessages200ApplicationJSONShippingDataAddress extends SpeakeasyBase {
  /**
   * Address ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressId" })
  addressId?: string;

  /**
   * Type of address. For example, `Residential` or `Pickup`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressType" })
  addressType?: string;

  /**
   * City of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Complement to the shipping address, in case it applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: string;

  /**
   * Three letter ISO code of the country of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Array containing two floats with geocoordinates, first longitude, then latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCoordinates" })
  geoCoordinates?: number[];

  /**
   * Indicates whether address is disposable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDisposable" })
  isDisposable?: boolean;

  /**
   * Neighborhood of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood?: string;

  /**
   * Number of the building, house or apartment in the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Postal code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * Name of the person who is going to receive the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverName" })
  receiverName?: string;

  /**
   * Complement that might help locate the shipping address more precisely in case of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * State of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Street of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;
}

export class ClearorderFormMessages200ApplicationJSONShippingDataAvailableAddresses extends SpeakeasyBase {
  /**
   * Address ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressId" })
  addressId?: string;

  /**
   * Type of address. For example, `Residential` or `Pickup`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressType" })
  addressType?: string;

  /**
   * City of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Complement to the shipping address, in case it applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: string;

  /**
   * Three letter ISO code of the country of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Array containing two floats with geocoordinates, first longitude, then latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCoordinates" })
  geoCoordinates?: number[];

  /**
   * Indicates whether address is disposable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDisposable" })
  isDisposable?: boolean;

  /**
   * Neighborhood of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood?: string;

  /**
   * Number of the building, house or apartment in the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Postal code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * Name of the person who is going to receive the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverName" })
  receiverName?: string;

  /**
   * Complement that might help locate the shipping address more precisely in case of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * State of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Street of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;
}

export class ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoDeliveryChannels extends SpeakeasyBase {
  /**
   * Delivery channel ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasDeliveryIds extends SpeakeasyBase {
  /**
   * Courier ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courierId" })
  courierId?: string;

  /**
   * Courier name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courierName" })
  courierName?: string;

  /**
   * Warehouse ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId?: string;

  /**
   * Quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Warehouse ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warehouseId" })
  warehouseId?: string;
}

/**
 * Address information.
 */
export class ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasPickupStoreInfoAddress extends SpeakeasyBase {
  /**
   * Type of address. For example, `Residential` or `Pickup`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressType" })
  addressType?: string;

  /**
   * City of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Complement to the shipping address, in case it applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: string;

  /**
   * Three letter ISO code of the country of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Array containing two floats with geocoordinates, first longitude, then latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCoordinates" })
  geoCoordinates?: number[];

  /**
   * Neighborhood of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood?: string;

  /**
   * Number of the building, house or apartment in the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Postal code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * Complement that might help locate the shipping address more precisely in case of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * State of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Street of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;
}

/**
 * Information on the pickup store.
 */
export class ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasPickupStoreInfo extends SpeakeasyBase {
  /**
   * Additional information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfo" })
  additionalInfo?: string;

  /**
   * Address information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(
    () =>
      ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasPickupStoreInfoAddress
  )
  address?: ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasPickupStoreInfoAddress;

  /**
   * Corresponding dock ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId?: string;

  /**
   * Friendly name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendlyName" })
  friendlyName?: string;

  /**
   * Indicates whether it is the pickup store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPickupStore" })
  isPickupStore?: boolean;
}

export class ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlas extends SpeakeasyBase {
  /**
   * Delivery channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryChannel" })
  deliveryChannel?: string;

  /**
   * Information on each delivery ID.
   */
  @SpeakeasyMetadata({
    elemType:
      ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasDeliveryIds,
  })
  @Expose({ name: "deliveryIds" })
  @Type(
    () =>
      ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasDeliveryIds
  )
  deliveryIds?: ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasDeliveryIds[];

  /**
   * SLA ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * List price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listPrice" })
  listPrice?: number;

  /**
   * Estimate date of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockTTL" })
  lockTTL?: string;

  /**
   * SLA name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Pickup point distance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupDistance" })
  pickupDistance?: number;

  /**
   * Pickup point ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupPointId" })
  pickupPointId?: string;

  /**
   * Information on the pickup store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupStoreInfo" })
  @Type(
    () =>
      ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasPickupStoreInfo
  )
  pickupStoreInfo?: ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlasPickupStoreInfo;

  /**
   * Polygon name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "polygonName" })
  polygonName?: string;

  /**
   * Price in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Shipping estimate. For instance, Three business days will be represented `3bd`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingEstimate" })
  shippingEstimate?: string;

  /**
   * Shipping estimate date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingEstimateDate" })
  shippingEstimateDate?: string;

  /**
   * Tax in cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;

  /**
   * Transit time. For instance, "three business days" is represented `3bd`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transitTime" })
  transitTime?: string;
}

export class ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfo extends SpeakeasyBase {
  /**
   * Address ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressId" })
  addressId?: string;

  /**
   * List of available delivery channels.
   */
  @SpeakeasyMetadata({
    elemType:
      ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoDeliveryChannels,
  })
  @Expose({ name: "deliveryChannels" })
  @Type(
    () =>
      ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoDeliveryChannels
  )
  deliveryChannels?: ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoDeliveryChannels[];

  /**
   * Item ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemId" })
  itemId?: string;

  /**
   * Index corresponding to the position of the object in the `items` array.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemIndex" })
  itemIndex?: number;

  /**
   * Delivery channel selected by the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedDeliveryChannel" })
  selectedDeliveryChannel?: string;

  /**
   * SLA selected by the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedSla" })
  selectedSla?: string;

  /**
   * List of countries that the item may be shipped to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipsTo" })
  shipsTo?: string[];

  /**
   * Information on available SLAs.
   */
  @SpeakeasyMetadata({
    elemType:
      ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlas,
  })
  @Expose({ name: "slas" })
  @Type(
    () => ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlas
  )
  slas?: ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfoSlas[];
}

export class ClearorderFormMessages200ApplicationJSONShippingDataSelectedAddresses extends SpeakeasyBase {
  /**
   * Address ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressId" })
  addressId?: string;

  /**
   * Type of address. For example, `Residential` or `Pickup`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressType" })
  addressType?: string;

  /**
   * City of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Complement to the shipping address, in case it applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: string;

  /**
   * Three letter ISO code of the country of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Array containing two floats with geocoordinates, first longitude, then latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCoordinates" })
  geoCoordinates?: number[];

  /**
   * Indicates whether address is disposable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDisposable" })
  isDisposable?: boolean;

  /**
   * Neighborhood of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood?: string;

  /**
   * Number of the building, house or apartment in the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Postal code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * Name of the person who is going to receive the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverName" })
  receiverName?: string;

  /**
   * Complement that might help locate the shipping address more precisely in case of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * State of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Street of the shipping address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;
}

/**
 * Shipping information pertinent to the order.
 */
export class ClearorderFormMessages200ApplicationJSONShippingData extends SpeakeasyBase {
  /**
   * Address information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => ClearorderFormMessages200ApplicationJSONShippingDataAddress)
  address?: ClearorderFormMessages200ApplicationJSONShippingDataAddress;

  /**
   * Array with information on the available addresses for the order.
   */
  @SpeakeasyMetadata({
    elemType:
      ClearorderFormMessages200ApplicationJSONShippingDataAvailableAddresses,
  })
  @Expose({ name: "availableAddresses" })
  @Type(
    () => ClearorderFormMessages200ApplicationJSONShippingDataAvailableAddresses
  )
  availableAddresses?: ClearorderFormMessages200ApplicationJSONShippingDataAvailableAddresses[];

  /**
   * Array with logistics information. Each object in this array corresponds to an object in the `items` array, based on the respective `itemIndex`.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfo,
  })
  @Expose({ name: "logisticsInfo" })
  @Type(() => ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfo)
  logisticsInfo?: ClearorderFormMessages200ApplicationJSONShippingDataLogisticsInfo[];

  /**
   * Array with information on the selected addresses for the order.
   */
  @SpeakeasyMetadata({
    elemType:
      ClearorderFormMessages200ApplicationJSONShippingDataSelectedAddresses,
  })
  @Expose({ name: "selectedAddresses" })
  @Type(
    () => ClearorderFormMessages200ApplicationJSONShippingDataSelectedAddresses
  )
  selectedAddresses?: ClearorderFormMessages200ApplicationJSONShippingDataSelectedAddresses[];
}

/**
 * OK
 */
export class ClearorderFormMessages200ApplicationJSON extends SpeakeasyBase {
  /**
   * Permission to modify item price manually.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowManualPrice" })
  allowManualPrice?: boolean;

  /**
   * Available accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableAccounts" })
  availableAccounts?: string[];

  /**
   * Information on each available address.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONAvailableAddresses,
  })
  @Expose({ name: "availableAddresses" })
  @Type(() => ClearorderFormMessages200ApplicationJSONAvailableAddresses)
  availableAddresses?: ClearorderFormMessages200ApplicationJSONAvailableAddresses[];

  /**
   * Data can be edited.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canEditData" })
  canEditData?: boolean;

  /**
   * Object containing preferences from the client who placed the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientPreferencesData" })
  @Type(() => ClearorderFormMessages200ApplicationJSONClientPreferencesData)
  clientPreferencesData?: ClearorderFormMessages200ApplicationJSONClientPreferencesData;

  /**
   * Customer's profile information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientProfileData" })
  @Type(() => ClearorderFormMessages200ApplicationJSONClientProfileData)
  clientProfileData?: ClearorderFormMessages200ApplicationJSONClientProfileData;

  /**
   * Object containing commercial condition information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commercialConditionData" })
  commercialConditionData?: Record<string, any>;

  /**
   * Customer additional information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customData" })
  customData?: Record<string, any>;

  /**
   * Gift registry list information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "giftRegistryData" })
  giftRegistryData?: Record<string, any>;

  /**
   * Hooks information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hooksData" })
  hooksData?: Record<string, any>;

  /**
   * Ignore customer profile data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ignoreProfileData" })
  ignoreProfileData?: boolean;

  /**
   * Object containing information pertinent to the order's invoice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceData" })
  invoiceData?: Record<string, any>;

  /**
   * Indicates whether order is checked in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCheckedIn" })
  isCheckedIn?: boolean;

  /**
   * Item metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemMetadata" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItemMetadata)
  itemMetadata?: ClearorderFormMessages200ApplicationJSONItemMetadata;

  /**
   * Information on each item in the order.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONItems,
  })
  @Expose({ name: "items" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItems)
  items?: ClearorderFormMessages200ApplicationJSONItems[];

  /**
   * Object containing information about the ordering of items within the orderForm.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemsOrdination" })
  @Type(() => ClearorderFormMessages200ApplicationJSONItemsOrdination)
  itemsOrdination?: ClearorderFormMessages200ApplicationJSONItemsOrdination;

  /**
   * Indicates whether the user is logged into the store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "loggedIn" })
  loggedIn?: boolean;

  /**
   * Object containing promotion data such as coupon tracking information and internal or external UTMs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketingData" })
  @Type(() => ClearorderFormMessages200ApplicationJSONMarketingData)
  marketingData?: ClearorderFormMessages200ApplicationJSONMarketingData;

  /**
   * Array containing an object for each message generated by our servers while processing the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messages" })
  messages?: any[];

  /**
   * Optional field meant to hold additional information about the order. We recommend using this field for text, not data formats such as `JSON` even if escaped. For that purpose, see [Creating customizable fields](https://developers.vtex.com/vtex-rest-api/docs/creating-customizable-fields-in-the-cart-with-checkout-api-1).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "openTextField" })
  openTextField?: string;

  /**
   * ID of the orderForm corresponding to a specific cart.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderFormId" })
  orderFormId?: string;

  /**
   * Information on the order's payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentData" })
  @Type(() => ClearorderFormMessages200ApplicationJSONPaymentData)
  paymentData?: ClearorderFormMessages200ApplicationJSONPaymentData;

  /**
   * Profile provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileProvider" })
  profileProvider?: string;

  /**
   * Information on rates and benefits that apply to the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ratesAndBenefitsData" })
  @Type(() => ClearorderFormMessages200ApplicationJSONRatesAndBenefitsData)
  ratesAndBenefitsData?: ClearorderFormMessages200ApplicationJSONRatesAndBenefitsData;

  /**
   * Attribute created by the seller, in their VTEX store configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "salesChannel" })
  salesChannel?: string;

  /**
   * Array containing the data of the item selected as a gift.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectableGifts" })
  selectableGifts?: any[];

  /**
   * Information on each seller.
   */
  @SpeakeasyMetadata({
    elemType: ClearorderFormMessages200ApplicationJSONSellers,
  })
  @Expose({ name: "sellers" })
  @Type(() => ClearorderFormMessages200ApplicationJSONSellers)
  sellers?: ClearorderFormMessages200ApplicationJSONSellers[];

  /**
   * Shipping information pertinent to the order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingData" })
  @Type(() => ClearorderFormMessages200ApplicationJSONShippingData)
  shippingData?: ClearorderFormMessages200ApplicationJSONShippingData;

  /**
   * ID of the store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storeId" })
  storeId?: string;

  /**
   * Object containing data from the store's configuration (stored in VTEX's License Manager).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storePreferencesData" })
  storePreferencesData?: Record<string, any>;

  /**
   * Subscription information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionData" })
  subscriptionData?: Record<string, any>;

  /**
   * Array containing an object for each totalizer for the purchase. Totalizers contain the sum of values for a specific part of the order (e.g. Total item value, Total shipping value).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalizers" })
  totalizers?: any[];

  /**
   * Unique ID associated with the customer profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userProfileId" })
  userProfileId?: string;

  /**
   * User type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userType" })
  userType?: string;

  /**
   * Total value of the order without separating cents. For example, $24.99 is represented `2499`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;
}

export class ClearorderFormMessagesResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  clearorderFormMessages200ApplicationJSONObject?: ClearorderFormMessages200ApplicationJSON;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
