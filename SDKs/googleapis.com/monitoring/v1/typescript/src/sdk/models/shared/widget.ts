/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlertChart } from "./alertchart";
import { CollapsibleGroup } from "./collapsiblegroup";
import { IncidentList } from "./incidentlist";
import { LogsPanel } from "./logspanel";
import { Scorecard } from "./scorecard";
import { Text } from "./text";
import { TimeSeriesTable } from "./timeseriestable";
import { XyChart } from "./xychart";
import { Expose, Type } from "class-transformer";

/**
 * Widget contains a single dashboard component and configuration of how to present the component in the dashboard.
 */
export class Widget extends SpeakeasyBase {
  /**
   * A chart that displays alert policy data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alertChart" })
  @Type(() => AlertChart)
  alertChart?: AlertChart;

  /**
   * A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blank" })
  blank?: Record<string, any>;

  /**
   * A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collapsibleGroup" })
  @Type(() => CollapsibleGroup)
  collapsibleGroup?: CollapsibleGroup;

  /**
   * A widget that displays a list of incidents
   */
  @SpeakeasyMetadata()
  @Expose({ name: "incidentList" })
  @Type(() => IncidentList)
  incidentList?: IncidentList;

  /**
   * A widget that displays a stream of log.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logsPanel" })
  @Type(() => LogsPanel)
  logsPanel?: LogsPanel;

  /**
   * A widget showing the latest value of a metric, and how this value relates to one or more thresholds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scorecard" })
  @Type(() => Scorecard)
  scorecard?: Scorecard;

  /**
   * A widget that displays textual content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  @Type(() => Text)
  text?: Text;

  /**
   * A table that displays time series data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeSeriesTable" })
  @Type(() => TimeSeriesTable)
  timeSeriesTable?: TimeSeriesTable;

  /**
   * Optional. The title of the widget.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * A chart that displays data on a 2D (X and Y axes) plane.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "xyChart" })
  @Type(() => XyChart)
  xyChart?: XyChart;
}
