// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ClusterDefaultStorageTypeEnum - Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.
type ClusterDefaultStorageTypeEnum string

const (
	ClusterDefaultStorageTypeEnumStorageTypeUnspecified ClusterDefaultStorageTypeEnum = "STORAGE_TYPE_UNSPECIFIED"
	ClusterDefaultStorageTypeEnumSsd                    ClusterDefaultStorageTypeEnum = "SSD"
	ClusterDefaultStorageTypeEnumHdd                    ClusterDefaultStorageTypeEnum = "HDD"
)

func (e *ClusterDefaultStorageTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STORAGE_TYPE_UNSPECIFIED":
		fallthrough
	case "SSD":
		fallthrough
	case "HDD":
		*e = ClusterDefaultStorageTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterDefaultStorageTypeEnum: %s", s)
	}
}

// ClusterInput - A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance.
type ClusterInput struct {
	// Configuration for a cluster.
	ClusterConfig *ClusterConfig `json:"clusterConfig,omitempty"`
	// Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.
	DefaultStorageType *ClusterDefaultStorageTypeEnum `json:"defaultStorageType,omitempty"`
	// Cloud Key Management Service (Cloud KMS) settings for a CMEK-protected cluster.
	EncryptionConfig *EncryptionConfig `json:"encryptionConfig,omitempty"`
	// Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.
	Location *string `json:"location,omitempty"`
	// The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.
	Name *string `json:"name,omitempty"`
	// The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.
	ServeNodes *int `json:"serveNodes,omitempty"`
}

// ClusterStateEnum - Output only. The current state of the cluster.
type ClusterStateEnum string

const (
	ClusterStateEnumStateNotKnown ClusterStateEnum = "STATE_NOT_KNOWN"
	ClusterStateEnumReady         ClusterStateEnum = "READY"
	ClusterStateEnumCreating      ClusterStateEnum = "CREATING"
	ClusterStateEnumResizing      ClusterStateEnum = "RESIZING"
	ClusterStateEnumDisabled      ClusterStateEnum = "DISABLED"
)

func (e *ClusterStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_NOT_KNOWN":
		fallthrough
	case "READY":
		fallthrough
	case "CREATING":
		fallthrough
	case "RESIZING":
		fallthrough
	case "DISABLED":
		*e = ClusterStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterStateEnum: %s", s)
	}
}

// Cluster - A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance.
type Cluster struct {
	// Configuration for a cluster.
	ClusterConfig *ClusterConfig `json:"clusterConfig,omitempty"`
	// Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.
	DefaultStorageType *ClusterDefaultStorageTypeEnum `json:"defaultStorageType,omitempty"`
	// Cloud Key Management Service (Cloud KMS) settings for a CMEK-protected cluster.
	EncryptionConfig *EncryptionConfig `json:"encryptionConfig,omitempty"`
	// Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.
	Location *string `json:"location,omitempty"`
	// The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.
	Name *string `json:"name,omitempty"`
	// The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.
	ServeNodes *int `json:"serveNodes,omitempty"`
	// Output only. The current state of the cluster.
	State *ClusterStateEnum `json:"state,omitempty"`
}
