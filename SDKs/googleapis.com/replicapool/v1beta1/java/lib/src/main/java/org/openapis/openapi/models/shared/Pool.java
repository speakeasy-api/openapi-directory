/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Pool - Successful response
 */
public class Pool {
    /**
     * Whether replicas in this pool should be restarted if they experience a failure. The default value is true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRestart")
    public Boolean autoRestart;
    public Pool withAutoRestart(Boolean autoRestart) {
        this.autoRestart = autoRestart;
        return this;
    }
    
    /**
     * The base instance name to use for the replicas in this pool. This must match the regex [a-z]([-a-z0-9]*[a-z0-9])?. If specified, the instances in this replica pool will be named in the format &lt;base-instance-name&gt;-&lt;ID&gt;. The &lt;ID&gt; postfix will be a four character alphanumeric identifier generated by the service.
     * 
     * If this is not specified by the user, a random base instance name is generated by the service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseInstanceName")
    public String baseInstanceName;
    public Pool withBaseInstanceName(String baseInstanceName) {
        this.baseInstanceName = baseInstanceName;
        return this;
    }
    
    /**
     * [Output Only] The current number of replicas in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentNumReplicas")
    public Integer currentNumReplicas;
    public Pool withCurrentNumReplicas(Integer currentNumReplicas) {
        this.currentNumReplicas = currentNumReplicas;
        return this;
    }
    
    /**
     * An optional description of the replica pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Pool withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Deprecated. Please use template[].healthChecks instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("healthChecks")
    public HealthCheck[] healthChecks;
    public Pool withHealthChecks(HealthCheck[] healthChecks) {
        this.healthChecks = healthChecks;
        return this;
    }
    
    /**
     * The initial number of replicas this pool should have. You must provide a value greater than or equal to 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialNumReplicas")
    public Integer initialNumReplicas;
    public Pool withInitialNumReplicas(Integer initialNumReplicas) {
        this.initialNumReplicas = initialNumReplicas;
        return this;
    }
    
    /**
     * A list of labels to attach to this replica pool and all created virtual machines in this replica pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public Label[] labels;
    public Pool withLabels(Label[] labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The name of the replica pool. Must follow the regex [a-z]([-a-z0-9]*[a-z0-9])? and be 1-28 characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Pool withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Deprecated! Use initial_num_replicas instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numReplicas")
    public Integer numReplicas;
    public Pool withNumReplicas(Integer numReplicas) {
        this.numReplicas = numReplicas;
        return this;
    }
    
    /**
     * The list of resource views that should be updated with all the replicas that are managed by this pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceViews")
    public String[] resourceViews;
    public Pool withResourceViews(String[] resourceViews) {
        this.resourceViews = resourceViews;
        return this;
    }
    
    /**
     * [Output Only] A self-link to the replica pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public Pool withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * Deprecated, please use target_pools instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetPool")
    public String targetPool;
    public Pool withTargetPool(String targetPool) {
        this.targetPool = targetPool;
        return this;
    }
    
    /**
     * A list of target pools to update with the replicas that are managed by this pool. If specified, the replicas in this replica pool will be added to the specified target pools for load balancing purposes. The replica pool must live in the same region as the specified target pools. These values must be the target pool resource names, and not fully qualified URLs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetPools")
    public String[] targetPools;
    public Pool withTargetPools(String[] targetPools) {
        this.targetPools = targetPools;
        return this;
    }
    
    /**
     * The template used for creating replicas in the pool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    public Template template;
    public Pool withTemplate(Template template) {
        this.template = template;
        return this;
    }
    
    /**
     * Deprecated! Do not set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public Pool withType(String type) {
        this.type = type;
        return this;
    }
    
}
