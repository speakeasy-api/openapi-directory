// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListEventServerList = []string{
	"https://taskrouter.twilio.com",
}

type ListEventSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListEventRequest struct {
	// Only include Events that occurred on or before this date, specified in GMT as an [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date-time.
	EndDate *time.Time `queryParam:"style=form,explode=true,name=EndDate"`
	// The type of Events to read. Returns only Events of the type specified.
	EventType *string `queryParam:"style=form,explode=true,name=EventType"`
	// The period of events to read in minutes. Returns only Events that occurred since this many minutes in the past. The default is `15` minutes. Task Attributes for Events occuring more 43,200 minutes ago will be redacted.
	Minutes *int64 `queryParam:"style=form,explode=true,name=Minutes"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The SID of the Reservation with the Events to read. Returns only Events that pertain to the specified Reservation.
	ReservationSid *string `queryParam:"style=form,explode=true,name=ReservationSid"`
	// The SID of the Event resource to read.
	Sid *string `queryParam:"style=form,explode=true,name=Sid"`
	// Only include Events from on or after this date and time, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. Task Attributes for Events older than 30 days will be redacted.
	StartDate *time.Time `queryParam:"style=form,explode=true,name=StartDate"`
	// The TaskChannel with the Events to read. Returns only the Events that pertain to the specified TaskChannel.
	TaskChannel *string `queryParam:"style=form,explode=true,name=TaskChannel"`
	// The SID of the TaskQueue with the Events to read. Returns only the Events that pertain to the specified TaskQueue.
	TaskQueueSid *string `queryParam:"style=form,explode=true,name=TaskQueueSid"`
	// The SID of the Task with the Events to read. Returns only the Events that pertain to the specified Task.
	TaskSid *string `queryParam:"style=form,explode=true,name=TaskSid"`
	// The SID of the Worker with the Events to read. Returns only the Events that pertain to the specified Worker.
	WorkerSid *string `queryParam:"style=form,explode=true,name=WorkerSid"`
	// The SID of the Workflow with the Events to read. Returns only the Events that pertain to the specified Workflow.
	WorkflowSid *string `queryParam:"style=form,explode=true,name=WorkflowSid"`
	// The SID of the Workspace with the Events to read. Returns only the Events that pertain to the specified Workspace.
	WorkspaceSid string `pathParam:"style=simple,explode=false,name=WorkspaceSid"`
}

type ListEventListEventResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListEventListEventResponse - OK
type ListEventListEventResponse struct {
	Events []shared.TaskrouterV1WorkspaceEvent `json:"events,omitempty"`
	Meta   *ListEventListEventResponseMeta     `json:"meta,omitempty"`
}

type ListEventResponse struct {
	ContentType string
	// OK
	ListEventResponse *ListEventListEventResponse
	StatusCode        int
	RawResponse       *http.Response
}
