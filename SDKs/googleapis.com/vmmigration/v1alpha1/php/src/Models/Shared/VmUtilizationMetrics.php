<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VmUtilizationMetrics - Utilization metrics values for a single VM.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VmUtilizationMetrics
{
    /**
     * Average CPU usage, percent.
     * 
     * @var ?int $cpuAverage
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuAverage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cpuAverage = null;
    
    /**
     * Average CPU usage, percent.
     * 
     * @var ?int $cpuAveragePercent
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuAveragePercent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cpuAveragePercent = null;
    
    /**
     * Max CPU usage, percent.
     * 
     * @var ?int $cpuMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuMax')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cpuMax = null;
    
    /**
     * Max CPU usage, percent.
     * 
     * @var ?int $cpuMaxPercent
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuMaxPercent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cpuMaxPercent = null;
    
    /**
     * Average disk IO rate, in kilobytes per second.
     * 
     * @var ?string $diskIoRateAverage
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskIoRateAverage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskIoRateAverage = null;
    
    /**
     * Average disk IO rate, in kilobytes per second.
     * 
     * @var ?string $diskIoRateAverageKbps
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskIoRateAverageKbps')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskIoRateAverageKbps = null;
    
    /**
     * Max disk IO rate, in kilobytes per second.
     * 
     * @var ?string $diskIoRateMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskIoRateMax')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskIoRateMax = null;
    
    /**
     * Max disk IO rate, in kilobytes per second.
     * 
     * @var ?string $diskIoRateMaxKbps
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskIoRateMaxKbps')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskIoRateMaxKbps = null;
    
    /**
     * Average memory usage, percent.
     * 
     * @var ?int $memoryAverage
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryAverage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memoryAverage = null;
    
    /**
     * Average memory usage, percent.
     * 
     * @var ?int $memoryAveragePercent
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryAveragePercent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memoryAveragePercent = null;
    
    /**
     * Max memory usage, percent.
     * 
     * @var ?int $memoryMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryMax')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memoryMax = null;
    
    /**
     * Max memory usage, percent.
     * 
     * @var ?int $memoryMaxPercent
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryMaxPercent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memoryMaxPercent = null;
    
    /**
     * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     * @var ?string $networkThroughputAverage
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkThroughputAverage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkThroughputAverage = null;
    
    /**
     * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     * @var ?string $networkThroughputAverageKbps
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkThroughputAverageKbps')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkThroughputAverageKbps = null;
    
    /**
     * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     * @var ?string $networkThroughputMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkThroughputMax')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkThroughputMax = null;
    
    /**
     * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     * @var ?string $networkThroughputMaxKbps
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkThroughputMaxKbps')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkThroughputMaxKbps = null;
    
	public function __construct()
	{
		$this->cpuAverage = null;
		$this->cpuAveragePercent = null;
		$this->cpuMax = null;
		$this->cpuMaxPercent = null;
		$this->diskIoRateAverage = null;
		$this->diskIoRateAverageKbps = null;
		$this->diskIoRateMax = null;
		$this->diskIoRateMaxKbps = null;
		$this->memoryAverage = null;
		$this->memoryAveragePercent = null;
		$this->memoryMax = null;
		$this->memoryMaxPercent = null;
		$this->networkThroughputAverage = null;
		$this->networkThroughputAverageKbps = null;
		$this->networkThroughputMax = null;
		$this->networkThroughputMaxKbps = null;
	}
}
