<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class BookingMybookings200ApplicationJSONData
{
    /**
     * **email address** of the entity that booked the tour
     * 
     * @var ?string $bookerEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookerEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bookerEmail = null;
    
    /**
     * **date** on which the booking was made
     * 
     * @var ?string $bookingDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookingDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bookingDate = null;
    
    /**
     * **object** containing itinerary booking status information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BookingStatusItinerary $bookingStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookingStatus')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BookingStatusItinerary')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\OpenAPI\OpenAPI\Models\Shared\BookingStatusItinerary $bookingStatus = null;
    
    /**
     * **currency code** for the currency in which pricing is displayed
     * 
     * @var ?string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currencyCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currencyCode = null;
    
    /**
     * **reference code** for the distributor
     * 
     * @var ?string $distributorRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('distributorRef')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $distributorRef = null;
    
    /**
     * **exchange rate** applied to the pricing
     * 
     * @var ?int $exchangeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('exchangeRate')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $exchangeRate = null;
    
    /**
     * **indicator**: `true` if a voucher exists
     * 
     * @var ?bool $hasVoucher
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasVoucher')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasVoucher = null;
    
    /**
     * **array** of item summary objects
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\BookingMybookings200ApplicationJSONDataItemSummaries> $itemSummaries
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemSummaries')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\BookingMybookings200ApplicationJSONDataItemSummaries>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $itemSummaries = null;
    
    /**
     * ignore (Viator only)
     * 
     * @var ?int $itineraryId
     */
	#[\JMS\Serializer\Annotation\SerializedName('itineraryId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $itineraryId = null;
    
    /**
     * ignore (Viator only)
     * 
     * @var ?string $rulesApplied
     */
	#[\JMS\Serializer\Annotation\SerializedName('rulesApplied')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rulesApplied = null;
    
    /**
     * **sort order** for the booking object
     * 
     * @var ?int $sortOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('sortOrder')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sortOrder = null;
    
    /**
     * **numeric merchant total price** for *this* booking
     * 
     * For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     * 
     * @var ?float $totalPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalPrice = null;
    
    /**
     * **currency-formatted merchant total price** of *this* booking
     * 
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     * 
     * @var ?string $totalPriceFormatted
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalPriceFormatted')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalPriceFormatted = null;
    
    /**
     * **numeric merchant total price** of this booking in USD
     * 
     * @var ?float $totalPriceUSD
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalPriceUSD')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalPriceUSD = null;
    
    /**
     * ignore (Viator only)
     * 
     * @var ?string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('userId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
    /**
     * Unique reference for the voucher for this booking that can be used as a request parameter to search for existing bookings using the [/booking/mybookings](#operation/bookingMybookings) and [/booking/pastbooking](#operation/bookingPastbooking) endpoints
     * 
     * @var ?string $voucherKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('voucherKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $voucherKey = null;
    
    /**
     * **URL of the voucher** for *this* product (if available). The customer can access this URL to retrieve their voucher.
     * 
     * @var ?string $voucherURL
     */
	#[\JMS\Serializer\Annotation\SerializedName('voucherURL')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $voucherURL = null;
    
	public function __construct()
	{
		$this->bookerEmail = null;
		$this->bookingDate = null;
		$this->bookingStatus = null;
		$this->currencyCode = null;
		$this->distributorRef = null;
		$this->exchangeRate = null;
		$this->hasVoucher = null;
		$this->itemSummaries = null;
		$this->itineraryId = null;
		$this->rulesApplied = null;
		$this->sortOrder = null;
		$this->totalPrice = null;
		$this->totalPriceFormatted = null;
		$this->totalPriceUSD = null;
		$this->userId = null;
		$this->voucherKey = null;
		$this->voucherURL = null;
	}
}
