"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Componentsh0:
    r"""Success"""
    
    components: Optional[list[Componentsh0]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('components'), 'exclude': lambda f: f is None }})
    r"""Sub components of this price"""  
    describtion: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('describtion'), 'exclude': lambda f: f is None }})
    r"""What is this price component about"""  
    mutlityplier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mutlityplier'), 'exclude': lambda f: f is None }})
    r"""Frequency/dependency of component"""  
    per: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('per'), 'exclude': lambda f: f is None }})
    r"""Single unit price multiyplier is based on"""  
    sum: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sum'), 'exclude': lambda f: f is None }})
    r"""Total sum in Euro for this price component."""  
    