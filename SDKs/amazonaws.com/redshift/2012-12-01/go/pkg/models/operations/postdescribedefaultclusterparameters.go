// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeDefaultClusterParametersActionEnum
type POSTDescribeDefaultClusterParametersActionEnum string

const (
	POSTDescribeDefaultClusterParametersActionEnumDescribeDefaultClusterParameters POSTDescribeDefaultClusterParametersActionEnum = "DescribeDefaultClusterParameters"
)

func (e POSTDescribeDefaultClusterParametersActionEnum) ToPointer() *POSTDescribeDefaultClusterParametersActionEnum {
	return &e
}

func (e *POSTDescribeDefaultClusterParametersActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeDefaultClusterParameters":
		*e = POSTDescribeDefaultClusterParametersActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeDefaultClusterParametersActionEnum: %v", v)
	}
}

// POSTDescribeDefaultClusterParametersVersionEnum
type POSTDescribeDefaultClusterParametersVersionEnum string

const (
	POSTDescribeDefaultClusterParametersVersionEnumTwoThousandAndTwelve1201 POSTDescribeDefaultClusterParametersVersionEnum = "2012-12-01"
)

func (e POSTDescribeDefaultClusterParametersVersionEnum) ToPointer() *POSTDescribeDefaultClusterParametersVersionEnum {
	return &e
}

func (e *POSTDescribeDefaultClusterParametersVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = POSTDescribeDefaultClusterParametersVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeDefaultClusterParametersVersionEnum: %v", v)
	}
}

type POSTDescribeDefaultClusterParametersRequest struct {
	Action POSTDescribeDefaultClusterParametersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords        *string                                         `queryParam:"style=form,explode=true,name=MaxRecords"`
	RequestBody       []byte                                          `request:"mediaType=text/xml"`
	Version           POSTDescribeDefaultClusterParametersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeDefaultClusterParametersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
