"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datalabel as shared_datalabel
from ..shared import linestyle as shared_linestyle
from ..shared import waterfallchartdomain as shared_waterfallchartdomain
from ..shared import waterfallchartseries as shared_waterfallchartseries
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class WaterfallChartSpecStackedTypeEnum(str, Enum):
    r"""The stacked type."""
    WATERFALL_STACKED_TYPE_UNSPECIFIED = 'WATERFALL_STACKED_TYPE_UNSPECIFIED'
    STACKED = 'STACKED'
    SEQUENTIAL = 'SEQUENTIAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WaterfallChartSpec:
    r"""A waterfall chart."""
    
    connector_line_style: Optional[shared_linestyle.LineStyle] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorLineStyle'), 'exclude': lambda f: f is None }})
    r"""Properties that describe the style of a line."""  
    domain: Optional[shared_waterfallchartdomain.WaterfallChartDomain] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain'), 'exclude': lambda f: f is None }})
    r"""The domain of a waterfall chart."""  
    first_value_is_total: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstValueIsTotal'), 'exclude': lambda f: f is None }})
    r"""True to interpret the first value as a total."""  
    hide_connector_lines: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hideConnectorLines'), 'exclude': lambda f: f is None }})
    r"""True to hide connector lines between columns."""  
    series: Optional[list[shared_waterfallchartseries.WaterfallChartSeries]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('series'), 'exclude': lambda f: f is None }})
    r"""The data this waterfall chart is visualizing."""  
    stacked_type: Optional[WaterfallChartSpecStackedTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stackedType'), 'exclude': lambda f: f is None }})
    r"""The stacked type."""  
    total_data_label: Optional[shared_datalabel.DataLabel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalDataLabel'), 'exclude': lambda f: f is None }})
    r"""Settings for one set of data labels. Data labels are annotations that appear next to a set of data, such as the points on a line chart, and provide additional information about what the data represents, such as a text representation of the value behind that point on the graph."""  
    