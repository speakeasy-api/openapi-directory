<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InsightsV1Conference - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InsightsV1Conference
{
    /**
     * The unique SID identifier of the Account.
     * 
     * @var ?string $accountSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountSid = null;
    
    /**
     * The unique SID identifier of the Conference.
     * 
     * @var ?string $conferenceSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('conference_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conferenceSid = null;
    
    /**
     * Duration of the between conference start event and conference end event in seconds.
     * 
     * @var ?int $connectDurationSeconds
     */
	#[\JMS\Serializer\Annotation\SerializedName('connect_duration_seconds')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $connectDurationSeconds = null;
    
    /**
     * Conference creation date and time in ISO 8601 format.
     * 
     * @var ?\DateTime $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('create_time')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createTime = null;
    
    /**
     * Potential issues detected by Twilio during the conference.
     * 
     * @var mixed $detectedIssues
     */
	#[\JMS\Serializer\Annotation\SerializedName('detected_issues')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $detectedIssues = null;
    
    /**
     * Conference duration in seconds.
     * 
     * @var ?int $durationSeconds
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration_seconds')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $durationSeconds = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('end_reason')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConferenceEnumConferenceEndReasonEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceEnumConferenceEndReasonEnum $endReason = null;
    
    /**
     * Conference end date and time in ISO 8601 format.
     * 
     * @var ?\DateTime $endTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('end_time')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $endTime = null;
    
    /**
     * Call SID of the participant whose actions ended the conference.
     * 
     * @var ?string $endedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('ended_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endedBy = null;
    
    /**
     * Custom label for the conference resource, up to 64 characters.
     * 
     * @var ?string $friendlyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('friendly_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $friendlyName = null;
    
    /**
     * Contains a dictionary of URL links to nested resources of this Conference.
     * 
     * @var ?array<string, mixed> $links
     */
	#[\JMS\Serializer\Annotation\SerializedName('links')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $links = null;
    
    /**
     * Actual maximum number of concurrent participants in the conference.
     * 
     * @var ?int $maxConcurrentParticipants
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_concurrent_participants')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxConcurrentParticipants = null;
    
    /**
     * Maximum number of concurrent participants as specified by the configuration.
     * 
     * @var ?int $maxParticipants
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_participants')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxParticipants = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('mixer_region')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConferenceEnumRegionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceEnumRegionEnum $mixerRegion = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('mixer_region_requested')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConferenceEnumRegionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceEnumRegionEnum $mixerRegionRequested = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('processing_state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConferenceEnumProcessingStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceEnumProcessingStateEnum $processingState = null;
    
    /**
     * Boolean. Indicates whether recording was enabled at the conference mixer.
     * 
     * @var ?bool $recordingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('recording_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordingEnabled = null;
    
    /**
     * Timestamp in ISO 8601 format when the conference started. Conferences do not start until at least two participants join, at least one of whom has startConferenceOnEnter=true.
     * 
     * @var ?\DateTime $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_time')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $startTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConferenceEnumConferenceStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConferenceEnumConferenceStatusEnum $status = null;
    
    /**
     * Object. Contains details about conference tags including severity.
     * 
     * @var mixed $tagInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('tag_info')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $tagInfo = null;
    
    /**
     * Tags for detected conference conditions and participant behaviors which may be of interest.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConferenceEnumTagEnum> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\ConferenceEnumTagEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * Unique conference participants based on caller ID.
     * 
     * @var ?int $uniqueParticipants
     */
	#[\JMS\Serializer\Annotation\SerializedName('unique_participants')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $uniqueParticipants = null;
    
    /**
     * The URL of this resource.
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
	public function __construct()
	{
		$this->accountSid = null;
		$this->conferenceSid = null;
		$this->connectDurationSeconds = null;
		$this->createTime = null;
		$this->detectedIssues = null;
		$this->durationSeconds = null;
		$this->endReason = null;
		$this->endTime = null;
		$this->endedBy = null;
		$this->friendlyName = null;
		$this->links = null;
		$this->maxConcurrentParticipants = null;
		$this->maxParticipants = null;
		$this->mixerRegion = null;
		$this->mixerRegionRequested = null;
		$this->processingState = null;
		$this->recordingEnabled = null;
		$this->startTime = null;
		$this->status = null;
		$this->tagInfo = null;
		$this->tags = null;
		$this->uniqueParticipants = null;
		$this->url = null;
	}
}
