// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ParametersFilterKeyEnum string

const (
	ParametersFilterKeyEnumName  ParametersFilterKeyEnum = "Name"
	ParametersFilterKeyEnumType  ParametersFilterKeyEnum = "Type"
	ParametersFilterKeyEnumKeyID ParametersFilterKeyEnum = "KeyId"
)

func (e ParametersFilterKeyEnum) ToPointer() *ParametersFilterKeyEnum {
	return &e
}

func (e *ParametersFilterKeyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Name":
		fallthrough
	case "Type":
		fallthrough
	case "KeyId":
		*e = ParametersFilterKeyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ParametersFilterKeyEnum: %v", v)
	}
}
