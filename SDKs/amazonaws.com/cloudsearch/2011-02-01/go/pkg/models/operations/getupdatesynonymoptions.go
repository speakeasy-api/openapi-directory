// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateSynonymOptionsActionEnum
type GETUpdateSynonymOptionsActionEnum string

const (
	GETUpdateSynonymOptionsActionEnumUpdateSynonymOptions GETUpdateSynonymOptionsActionEnum = "UpdateSynonymOptions"
)

func (e *GETUpdateSynonymOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UpdateSynonymOptions":
		*e = GETUpdateSynonymOptionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateSynonymOptionsActionEnum: %s", s)
	}
}

// GETUpdateSynonymOptionsVersionEnum
type GETUpdateSynonymOptionsVersionEnum string

const (
	GETUpdateSynonymOptionsVersionEnumTwoThousandAndEleven0201 GETUpdateSynonymOptionsVersionEnum = "2011-02-01"
)

func (e *GETUpdateSynonymOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-02-01":
		*e = GETUpdateSynonymOptionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateSynonymOptionsVersionEnum: %s", s)
	}
}

type GETUpdateSynonymOptionsQueryParams struct {
	Action     GETUpdateSynonymOptionsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                             `queryParam:"style=form,explode=true,name=DomainName"`
	Synonyms   string                             `queryParam:"style=form,explode=true,name=Synonyms"`
	Version    GETUpdateSynonymOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETUpdateSynonymOptionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateSynonymOptionsRequest struct {
	QueryParams GETUpdateSynonymOptionsQueryParams
	Headers     GETUpdateSynonymOptionsHeaders
}

type GETUpdateSynonymOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
