// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AmqpExternalRuleResponseRuleTypeEnum string

const (
	AmqpExternalRuleResponseRuleTypeEnumAmqpExternal AmqpExternalRuleResponseRuleTypeEnum = "amqp/external"
)

func (e AmqpExternalRuleResponseRuleTypeEnum) ToPointer() *AmqpExternalRuleResponseRuleTypeEnum {
	return &e
}

func (e *AmqpExternalRuleResponseRuleTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "amqp/external":
		*e = AmqpExternalRuleResponseRuleTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AmqpExternalRuleResponseRuleTypeEnum: %v", v)
	}
}

type AmqpExternalRuleResponseTargetHeaders struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

type AmqpExternalRuleResponseTarget struct {
	Enveloped          *bool                                   `json:"enveloped,omitempty"`
	Exchange           *string                                 `json:"exchange,omitempty"`
	Format             *string                                 `json:"format,omitempty"`
	Headers            []AmqpExternalRuleResponseTargetHeaders `json:"headers,omitempty"`
	MandatoryRoute     bool                                    `json:"mandatoryRoute"`
	MessageTTL         *int64                                  `json:"messageTtl,omitempty"`
	PersistentMessages bool                                    `json:"persistentMessages"`
	RoutingKey         string                                  `json:"routingKey"`
	URL                string                                  `json:"url"`
}

type AmqpExternalRuleResponse struct {
	Links       map[string]interface{}               `json:"_links,omitempty"`
	AppID       *string                              `json:"appId,omitempty"`
	Created     *float64                             `json:"created,omitempty"`
	ID          *string                              `json:"id,omitempty"`
	Modified    *float64                             `json:"modified,omitempty"`
	RequestMode string                               `json:"requestMode"`
	RuleType    AmqpExternalRuleResponseRuleTypeEnum `json:"ruleType"`
	Source      RuleSource                           `json:"source"`
	Status      *string                              `json:"status,omitempty"`
	Target      AmqpExternalRuleResponseTarget       `json:"target"`
	Version     *string                              `json:"version,omitempty"`
}
