<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudRetailV2alphaSearchResponseFacetFacetValue - A facet value which contains value names and their count.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudRetailV2alphaSearchResponseFacetFacetValue
{
    /**
     * Number of items that have this facet value.
     * 
     * @var ?string $count
     */
	#[\JMS\Serializer\Annotation\SerializedName('count')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $count = null;
    
    /**
     * A floating point interval.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudRetailV2alphaInterval $interval
     */
	#[\JMS\Serializer\Annotation\SerializedName('interval')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudRetailV2alphaInterval')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudRetailV2alphaInterval $interval = null;
    
    /**
     * The maximum value in the FacetValue.interval. Only supported on numerical facets and returned if SearchRequest.FacetSpec.FacetKey.return_min_max is true.
     * 
     * @var ?float $maxValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maxValue = null;
    
    /**
     * The minimum value in the FacetValue.interval. Only supported on numerical facets and returned if SearchRequest.FacetSpec.FacetKey.return_min_max is true.
     * 
     * @var ?float $minValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('minValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $minValue = null;
    
    /**
     * Text value of a facet, such as "Black" for facet "colorFamilies".
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->count = null;
		$this->interval = null;
		$this->maxValue = null;
		$this->minValue = null;
		$this->value = null;
	}
}
