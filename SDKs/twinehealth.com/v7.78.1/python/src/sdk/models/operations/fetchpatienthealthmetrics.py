"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import fetcherrorresponse as shared_fetcherrorresponse
from ..shared import fetchpatienthealthmetricresponse as shared_fetchpatienthealthmetricresponse
from typing import Optional


@dataclasses.dataclass
class FetchPatientHealthMetricsRequest:
    
    filter_groups: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[groups]', 'style': 'form', 'explode': True }})
    r"""Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`."""  
    filter_organization: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[organization]', 'style': 'form', 'explode': True }})
    r"""Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`."""  
    filter_patient: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[patient]', 'style': 'form', 'explode': True }})
    r"""Filter the patient health metrics for a specified patient. Note that one of the following filters must be specified: `filter[patient]`, `filter[groups]`, `filter[organization]`."""  
    page_cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[cursor]', 'style': 'form', 'explode': True }})
    r"""Page cursor"""  
    page_limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[limit]', 'style': 'form', 'explode': True }})
    r"""Page limit"""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[number]', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[size]', 'style': 'form', 'explode': True }})
    r"""Page size"""  
    

@dataclasses.dataclass
class FetchPatientHealthMetricsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    fetch_error_response: Optional[shared_fetcherrorresponse.FetchErrorResponse] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    fetch_patient_health_metric_response: Optional[shared_fetchpatienthealthmetricresponse.FetchPatientHealthMetricResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    