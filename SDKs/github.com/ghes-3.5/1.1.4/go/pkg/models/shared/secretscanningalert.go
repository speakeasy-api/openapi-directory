// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// SecretScanningAlert - Response
type SecretScanningAlert struct {
	// The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The GitHub URL of the alert resource.
	HTMLURL *string `json:"html_url,omitempty"`
	// The REST API URL of the code locations for this alert.
	LocationsURL *string `json:"locations_url,omitempty"`
	// The security alert number.
	Number *int64 `json:"number,omitempty"`
	// **Required when the `state` is `resolved`.** The reason for resolving the alert.
	Resolution *SecretScanningAlertResolutionEnum `json:"resolution,omitempty"`
	// The time that the alert was resolved in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
	ResolvedAt *time.Time `json:"resolved_at,omitempty"`
	// A GitHub user.
	ResolvedBy *NullableSimpleUser `json:"resolved_by,omitempty"`
	// The secret that was detected.
	Secret *string `json:"secret,omitempty"`
	// The type of secret that secret scanning detected.
	SecretType *string `json:"secret_type,omitempty"`
	// User-friendly name for the detected secret, matching the `secret_type`.
	// For a list of built-in patterns, see "[Secret scanning patterns](https://docs.github.com/enterprise-server@3.5/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)."
	SecretTypeDisplayName *string `json:"secret_type_display_name,omitempty"`
	// Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`.
	State *SchemassecretScanningAlertStateEnum `json:"state,omitempty"`
	// The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The REST API URL of the alert resource.
	URL *string `json:"url,omitempty"`
}
