/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class DescribeOrganizationOverviewRequestBody {
    /**
     * The ID of the Amazon Web Services account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountIds")
    public String[] accountIds;

    public DescribeOrganizationOverviewRequestBody withAccountIds(String[] accountIds) {
        this.accountIds = accountIds;
        return this;
    }
    
    /**
     *  The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. 
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("FromTime")
    public OffsetDateTime fromTime;

    public DescribeOrganizationOverviewRequestBody withFromTime(OffsetDateTime fromTime) {
        this.fromTime = fromTime;
        return this;
    }
    
    /**
     * The ID of the organizational unit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrganizationalUnitIds")
    public String[] organizationalUnitIds;

    public DescribeOrganizationOverviewRequestBody withOrganizationalUnitIds(String[] organizationalUnitIds) {
        this.organizationalUnitIds = organizationalUnitIds;
        return this;
    }
    
    /**
     *  The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ToTime")
    public OffsetDateTime toTime;

    public DescribeOrganizationOverviewRequestBody withToTime(OffsetDateTime toTime) {
        this.toTime = toTime;
        return this;
    }
    
    public DescribeOrganizationOverviewRequestBody(@JsonProperty("FromTime") OffsetDateTime fromTime) {
        this.fromTime = fromTime;
  }
}
