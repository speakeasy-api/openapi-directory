/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PromotionsPagedCollection - This type defines the fields in a paginated result set of seller promotions. The response consists of 0 or more sequenced pages that are returned from the complete &lt;i&gt;result set&lt;/i&gt;, where each page consists of 0 or more items.
 */
public class PromotionsPagedCollection {
    /**
     * The URI of the current page of results from the result set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("href")
    public String href;

    public PromotionsPagedCollection withHref(String href) {
        this.href = href;
        return this;
    }
    
    /**
     * The number of items returned on a single page from the result set. This value can be set in the request with the &lt;b&gt;limit&lt;/b&gt; query parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Integer limit;

    public PromotionsPagedCollection withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The URI for the following page of results. This value is returned only if there is an additional page of results to display from the result set. &lt;br&gt;&lt;br&gt;&lt;b&gt;Max length&lt;/b&gt;: 2048
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    public String next;

    public PromotionsPagedCollection withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * The number of results skipped in the result set before listing the first returned result. This value can be set in the request with the &lt;b&gt;offset&lt;/b&gt; query parameter. &lt;p class="tablenote"&gt;&lt;strong&gt;Note: &lt;/strong&gt;The items in a paginated result set use a zero-based list where the first item in the list has an offset of &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Integer offset;

    public PromotionsPagedCollection withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * The URI for the preceding page of results. This value is returned only if there is a previous page of results to display from the result set. &lt;br&gt;&lt;br&gt;&lt;b&gt;Max length&lt;/b&gt;: 2048
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prev")
    public String prev;

    public PromotionsPagedCollection withPrev(String prev) {
        this.prev = prev;
        return this;
    }
    
    /**
     * A list containing the details of each returned promotion. This includes all the information about the promotions except for the listings that are part of the promotions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotions")
    public PromotionDetail[] promotions;

    public PromotionsPagedCollection withPromotions(PromotionDetail[] promotions) {
        this.promotions = promotions;
        return this;
    }
    
    /**
     * The total number of items retrieved in the result set.  &lt;br&gt;&lt;br&gt;If no items are found, this field is returned with a value of &lt;code&gt;0&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Integer total;

    public PromotionsPagedCollection withTotal(Integer total) {
        this.total = total;
        return this;
    }
    
    public PromotionsPagedCollection(){}
}
