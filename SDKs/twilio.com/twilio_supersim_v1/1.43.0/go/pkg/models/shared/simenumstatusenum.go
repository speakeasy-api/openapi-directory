// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SimEnumStatusEnum - The status of the Sim resources to read. Can be `new`, `ready`, `active`, `inactive`, or `scheduled`.
type SimEnumStatusEnum string

const (
	SimEnumStatusEnumNew       SimEnumStatusEnum = "new"
	SimEnumStatusEnumReady     SimEnumStatusEnum = "ready"
	SimEnumStatusEnumActive    SimEnumStatusEnum = "active"
	SimEnumStatusEnumInactive  SimEnumStatusEnum = "inactive"
	SimEnumStatusEnumScheduled SimEnumStatusEnum = "scheduled"
)

func (e SimEnumStatusEnum) ToPointer() *SimEnumStatusEnum {
	return &e
}

func (e *SimEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "new":
		fallthrough
	case "ready":
		fallthrough
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "scheduled":
		*e = SimEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SimEnumStatusEnum: %v", v)
	}
}
