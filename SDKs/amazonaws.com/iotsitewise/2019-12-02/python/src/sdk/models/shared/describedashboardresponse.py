"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeDashboardResponse:
    r"""Success"""
    
    dashboard_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashboardArn') }})  
    dashboard_creation_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashboardCreationDate'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    dashboard_definition: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashboardDefinition') }})  
    dashboard_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashboardId') }})  
    dashboard_last_update_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashboardLastUpdateDate'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    dashboard_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashboardName') }})  
    project_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectId') }})  
    dashboard_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashboardDescription'), 'exclude': lambda f: f is None }})  
    