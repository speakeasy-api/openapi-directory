<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * V1Employee - Represents one of a business's employees.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class V1Employee
{
    /**
     * The IDs of the locations the employee is allowed to clock in at.
     * 
     * @var ?array<string> $authorizedLocationIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorized_location_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $authorizedLocationIds = null;
    
    /**
     * The time when the employee entity was created, in ISO 8601 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The employee's email address.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * An ID the merchant can set to associate the employee with an entity in another system.
     * 
     * @var ?string $externalId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalId = null;
    
    /**
     * The employee's first name.
     * 
     * @var string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $firstName;
    
    /**
     * The employee's unique ID.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The employee's last name.
     * 
     * @var string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lastName;
    
    /**
     * The ids of the employee's associated roles. Currently, you can specify only one or zero roles per employee.
     * 
     * @var ?array<string> $roleIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('role_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $roleIds = null;
    
    /**
     * Whether the employee is ACTIVE or INACTIVE. Inactive employees cannot sign in to Square Register.Merchants update this field from the Square Dashboard.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * The time when the employee entity was most recently updated, in ISO 8601 format.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
	public function __construct()
	{
		$this->authorizedLocationIds = null;
		$this->createdAt = null;
		$this->email = null;
		$this->externalId = null;
		$this->firstName = "";
		$this->id = null;
		$this->lastName = "";
		$this->roleIds = null;
		$this->status = null;
		$this->updatedAt = null;
	}
}
