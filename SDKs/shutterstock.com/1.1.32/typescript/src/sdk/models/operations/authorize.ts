/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * User type to be authorized (usually 'customer')
 */
export enum AuthorizeRealmEnum {
  Customer = "customer",
  Contributor = "contributor",
}

/**
 * Type of temporary authorization code that will be used to generate an access code; the only valid value is 'code'
 */
export enum AuthorizeResponseTypeEnum {
  Code = "code",
}

export class AuthorizeRequest extends SpeakeasyBase {
  /**
   * Client ID (Consumer Key) of your application
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=client_id",
  })
  clientId: string;

  /**
   * User type to be authorized (usually 'customer')
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=realm" })
  realm?: AuthorizeRealmEnum;

  /**
   * The callback URI to send the request to after authorization; must use a host name that is registered with your application
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=redirect_uri",
  })
  redirectUri: string;

  /**
   * Type of temporary authorization code that will be used to generate an access code; the only valid value is 'code'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=response_type",
  })
  responseType: AuthorizeResponseTypeEnum;

  /**
   * Space-separated list of scopes to be authorized
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=scope" })
  scope?: string;

  /**
   * Unique value used by the calling app to verify the request
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=state" })
  state: string;
}

export class AuthorizeResponse extends SpeakeasyBase {
  /**
   * Redirect user to authenticate with Shutterstock
   */
  @SpeakeasyMetadata()
  authorizeResponse?: string;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
