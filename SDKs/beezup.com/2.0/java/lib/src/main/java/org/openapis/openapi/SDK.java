/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * # The REST API of BeezUP system
 * ## Overview
 * The REST APIs provide programmatic access to read and write BeezUP data. 
 * Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !
 * 
 * The main features are:
 * - Register and manage your account
 * - Create and manage and share your stores with your friends/co-workers.
 * - Import your product catalog and schedule the auto importation
 * - Search the channels your want to use
 * - Configure your channels for your catalogs to export your product information:
 *     - cost and general settings
 *     - category and columns mappings
 *     - your will be able to create and manage your custom column
 *     - put in place exlusion filters based on simple conditions on your product data
 *     - override product values
 *     - get product vision for a channel catalog scope
 * - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product.
 * - Automatize your optimisation by using rules!
 * - And of course... Manage your orders harvested from all your marketplaces:
 *     - Synchronize your orders in an uniformized way
 *     - Get the available actions and update the order status
 * - ...and more!
 * 
 * ## Authentication credentials
 * The public API with the base path ** /v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials.
 * We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).
 * 
 * The user API with the base path ** /v2/user** requires a token which is available on this page:
 * https://go.beezup.com/Account/MyAccount
 * 
 * ## Things to keep in mind
 * ### API Rate Limits
 * - The BeezUP REST API is limited to 100 calls/minute.
 * 
 * ### Media type
 * The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.
 * 
 * ### Required content type
 * The required and default encoding for the request and responses is UTF8.
 * 
 * ### Required date time format
 * All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.
 * 
 * ### Base URL
 * The Base URL of the BeezUP API Order Management REST API conforms to the following template.
 * 
 * https://api.beezup.com
 * 
 * All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.
 * 
 * You can test our API on https://api-docs.beezup.com/swagger-ui\\
 * You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 * https://api-docs.beezup.com/ - Find the documentation for BeezUP's API here
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        "https://api.beezup.com",
	};
  	
    public AnalyticsGlobal analyticsGlobal;
    public AnalyticsOptimisations analyticsOptimisations;
    public AnalyticsReports analyticsReports;
    public AnalyticsRules analyticsRules;
    public AnalyticsStatistics analyticsStatistics;
    public AnalyticsTracking analyticsTracking;
    public CatalogsAuto catalogsAuto;
    public CatalogsCatalog catalogsCatalog;
    public CatalogsGlobal catalogsGlobal;
    public CatalogsImportationCatalogInfo catalogsImportationCatalogInfo;
    public CatalogsImportationProcess catalogsImportationProcess;
    public ChannelCatalogsCategories channelCatalogsCategories;
    public ChannelCatalogsColumnMappings channelCatalogsColumnMappings;
    public ChannelCatalogsExclusionFilters channelCatalogsExclusionFilters;
    public ChannelCatalogsExportations channelCatalogsExportations;
    public ChannelCatalogsGlobal channelCatalogsGlobal;
    public ChannelCatalogsLegacyTrackingGlobal channelCatalogsLegacyTrackingGlobal;
    public ChannelCatalogsProducts channelCatalogsProducts;
    public ChannelCatalogsProductsOptimisation channelCatalogsProductsOptimisation;
    public ChannelCatalogsProductsOverrides channelCatalogsProductsOverrides;
    public ChannelCatalogsSettings channelCatalogsSettings;
    public ChannelsChannelsGlobal channelsChannelsGlobal;
    public CustomerAccount customerAccount;
    public CustomerAlerts customerAlerts;
    public CustomerContracts customerContracts;
    public CustomerFriends customerFriends;
    public CustomerGlobal customerGlobal;
    public CustomerInvoices customerInvoices;
    public CustomerRights customerRights;
    public CustomerSecurity customerSecurity;
    public CustomerShares customerShares;
    public CustomerStores customerStores;
    public MarketplacesChannelCatalogsGlobal marketplacesChannelCatalogsGlobal;
    public MarketplacesChannelCatalogsPublications marketplacesChannelCatalogsPublications;
    public MarketplacesChannelCatalogsSettings marketplacesChannelCatalogsSettings;
    public MarketplacesOrdersAutoTransitions marketplacesOrdersAutoTransitions;
    public MarketplacesOrdersBatches marketplacesOrdersBatches;
    public MarketplacesOrdersExports marketplacesOrdersExports;
    public MarketplacesOrdersGlobal marketplacesOrdersGlobal;
    public MarketplacesOrdersList marketplacesOrdersList;
    public MarketplacesOrdersOrder marketplacesOrdersOrder;
    public MarketplacesOrdersSubscriptionsSubscriptions marketplacesOrdersSubscriptionsSubscriptions;
    public MarketplacesOrdersV3Batches marketplacesOrdersV3Batches;
    public MarketplacesOrdersV3Global marketplacesOrdersV3Global;
    public MarketplacesOrdersV3List marketplacesOrdersV3List;
    public MarketplacesOrdersV3Order marketplacesOrdersV3Order;
    public OMInvoiceAPIGeneration omInvoiceAPIGeneration;
    public OMInvoiceAPISettings omInvoiceAPISettings;
    public PublicChannelsPublicChannels publicChannelsPublicChannels;
    public PublicListOfValuesLOV publicListOfValuesLOV;
    public PublicSecuritySecurity publicSecuritySecurity;
    public UserListOfValuesLOV userListOfValuesLOV;	

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}

		if (this._serverUrl.endsWith("/")) {
            this._serverUrl = this._serverUrl.substring(0, this._serverUrl.length() - 1);
        }

		
		
		this.analyticsGlobal = new AnalyticsGlobal(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.analyticsOptimisations = new AnalyticsOptimisations(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.analyticsReports = new AnalyticsReports(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.analyticsRules = new AnalyticsRules(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.analyticsStatistics = new AnalyticsStatistics(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.analyticsTracking = new AnalyticsTracking(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.catalogsAuto = new CatalogsAuto(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.catalogsCatalog = new CatalogsCatalog(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.catalogsGlobal = new CatalogsGlobal(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.catalogsImportationCatalogInfo = new CatalogsImportationCatalogInfo(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.catalogsImportationProcess = new CatalogsImportationProcess(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsCategories = new ChannelCatalogsCategories(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsColumnMappings = new ChannelCatalogsColumnMappings(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsExclusionFilters = new ChannelCatalogsExclusionFilters(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsExportations = new ChannelCatalogsExportations(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsGlobal = new ChannelCatalogsGlobal(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsLegacyTrackingGlobal = new ChannelCatalogsLegacyTrackingGlobal(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsProducts = new ChannelCatalogsProducts(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsProductsOptimisation = new ChannelCatalogsProductsOptimisation(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsProductsOverrides = new ChannelCatalogsProductsOverrides(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelCatalogsSettings = new ChannelCatalogsSettings(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.channelsChannelsGlobal = new ChannelsChannelsGlobal(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerAccount = new CustomerAccount(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerAlerts = new CustomerAlerts(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerContracts = new CustomerContracts(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerFriends = new CustomerFriends(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerGlobal = new CustomerGlobal(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerInvoices = new CustomerInvoices(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerRights = new CustomerRights(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerSecurity = new CustomerSecurity(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerShares = new CustomerShares(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.customerStores = new CustomerStores(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesChannelCatalogsGlobal = new MarketplacesChannelCatalogsGlobal(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesChannelCatalogsPublications = new MarketplacesChannelCatalogsPublications(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesChannelCatalogsSettings = new MarketplacesChannelCatalogsSettings(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersAutoTransitions = new MarketplacesOrdersAutoTransitions(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersBatches = new MarketplacesOrdersBatches(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersExports = new MarketplacesOrdersExports(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersGlobal = new MarketplacesOrdersGlobal(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersList = new MarketplacesOrdersList(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersOrder = new MarketplacesOrdersOrder(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersSubscriptionsSubscriptions = new MarketplacesOrdersSubscriptionsSubscriptions(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersV3Batches = new MarketplacesOrdersV3Batches(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersV3Global = new MarketplacesOrdersV3Global(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersV3List = new MarketplacesOrdersV3List(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.marketplacesOrdersV3Order = new MarketplacesOrdersV3Order(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.omInvoiceAPIGeneration = new OMInvoiceAPIGeneration(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.omInvoiceAPISettings = new OMInvoiceAPISettings(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.publicChannelsPublicChannels = new PublicChannelsPublicChannels(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.publicListOfValuesLOV = new PublicListOfValuesLOV(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.publicSecuritySecurity = new PublicSecuritySecurity(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
		
		this.userListOfValuesLOV = new UserListOfValuesLOV(
			this._defaultClient,
			this._securityClient,
			this._serverUrl,
			this._language,
			this._sdkVersion,
			this._genVersion
		);
	}
}