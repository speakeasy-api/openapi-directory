/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Size } from "./size";
import { Expose, Type } from "class-transformer";

/**
 * Companion Settings
 */
export class CompanionSetting extends SpeakeasyBase {
  /**
   * Whether companions are disabled for this placement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companionsDisabled" })
  companionsDisabled?: boolean;

  /**
   * Allowlist of companion sizes to be served to this placement. Set this list to null or empty to serve all companion sizes.
   */
  @SpeakeasyMetadata({ elemType: Size })
  @Expose({ name: "enabledSizes" })
  @Type(() => Size)
  enabledSizes?: Size[];

  /**
   * Whether to serve only static images as companions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageOnly" })
  imageOnly?: boolean;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "dfareporting#companionSetting".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;
}
