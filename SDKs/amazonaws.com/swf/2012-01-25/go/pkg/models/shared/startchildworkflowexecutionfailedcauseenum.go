// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StartChildWorkflowExecutionFailedCauseEnum string

const (
	StartChildWorkflowExecutionFailedCauseEnumWorkflowTypeDoesNotExist                     StartChildWorkflowExecutionFailedCauseEnum = "WORKFLOW_TYPE_DOES_NOT_EXIST"
	StartChildWorkflowExecutionFailedCauseEnumWorkflowTypeDeprecated                       StartChildWorkflowExecutionFailedCauseEnum = "WORKFLOW_TYPE_DEPRECATED"
	StartChildWorkflowExecutionFailedCauseEnumOpenChildrenLimitExceeded                    StartChildWorkflowExecutionFailedCauseEnum = "OPEN_CHILDREN_LIMIT_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseEnumOpenWorkflowsLimitExceeded                   StartChildWorkflowExecutionFailedCauseEnum = "OPEN_WORKFLOWS_LIMIT_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseEnumChildCreationRateExceeded                    StartChildWorkflowExecutionFailedCauseEnum = "CHILD_CREATION_RATE_EXCEEDED"
	StartChildWorkflowExecutionFailedCauseEnumWorkflowAlreadyRunning                       StartChildWorkflowExecutionFailedCauseEnum = "WORKFLOW_ALREADY_RUNNING"
	StartChildWorkflowExecutionFailedCauseEnumDefaultExecutionStartToCloseTimeoutUndefined StartChildWorkflowExecutionFailedCauseEnum = "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseEnumDefaultTaskListUndefined                     StartChildWorkflowExecutionFailedCauseEnum = "DEFAULT_TASK_LIST_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseEnumDefaultTaskStartToCloseTimeoutUndefined      StartChildWorkflowExecutionFailedCauseEnum = "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseEnumDefaultChildPolicyUndefined                  StartChildWorkflowExecutionFailedCauseEnum = "DEFAULT_CHILD_POLICY_UNDEFINED"
	StartChildWorkflowExecutionFailedCauseEnumOperationNotPermitted                        StartChildWorkflowExecutionFailedCauseEnum = "OPERATION_NOT_PERMITTED"
)

func (e StartChildWorkflowExecutionFailedCauseEnum) ToPointer() *StartChildWorkflowExecutionFailedCauseEnum {
	return &e
}

func (e *StartChildWorkflowExecutionFailedCauseEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WORKFLOW_TYPE_DOES_NOT_EXIST":
		fallthrough
	case "WORKFLOW_TYPE_DEPRECATED":
		fallthrough
	case "OPEN_CHILDREN_LIMIT_EXCEEDED":
		fallthrough
	case "OPEN_WORKFLOWS_LIMIT_EXCEEDED":
		fallthrough
	case "CHILD_CREATION_RATE_EXCEEDED":
		fallthrough
	case "WORKFLOW_ALREADY_RUNNING":
		fallthrough
	case "DEFAULT_EXECUTION_START_TO_CLOSE_TIMEOUT_UNDEFINED":
		fallthrough
	case "DEFAULT_TASK_LIST_UNDEFINED":
		fallthrough
	case "DEFAULT_TASK_START_TO_CLOSE_TIMEOUT_UNDEFINED":
		fallthrough
	case "DEFAULT_CHILD_POLICY_UNDEFINED":
		fallthrough
	case "OPERATION_NOT_PERMITTED":
		*e = StartChildWorkflowExecutionFailedCauseEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartChildWorkflowExecutionFailedCauseEnum: %v", v)
	}
}
