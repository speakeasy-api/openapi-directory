// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// QueryCorpusEnum - The Google Workspace service to search.
type QueryCorpusEnum string

const (
	QueryCorpusEnumCorpusTypeUnspecified QueryCorpusEnum = "CORPUS_TYPE_UNSPECIFIED"
	QueryCorpusEnumDrive                 QueryCorpusEnum = "DRIVE"
	QueryCorpusEnumMail                  QueryCorpusEnum = "MAIL"
	QueryCorpusEnumGroups                QueryCorpusEnum = "GROUPS"
	QueryCorpusEnumHangoutsChat          QueryCorpusEnum = "HANGOUTS_CHAT"
	QueryCorpusEnumVoice                 QueryCorpusEnum = "VOICE"
)

func (e *QueryCorpusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CORPUS_TYPE_UNSPECIFIED":
		fallthrough
	case "DRIVE":
		fallthrough
	case "MAIL":
		fallthrough
	case "GROUPS":
		fallthrough
	case "HANGOUTS_CHAT":
		fallthrough
	case "VOICE":
		*e = QueryCorpusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryCorpusEnum: %s", s)
	}
}

// QueryDataScopeEnum - The data source to search.
type QueryDataScopeEnum string

const (
	QueryDataScopeEnumDataScopeUnspecified QueryDataScopeEnum = "DATA_SCOPE_UNSPECIFIED"
	QueryDataScopeEnumAllData              QueryDataScopeEnum = "ALL_DATA"
	QueryDataScopeEnumHeldData             QueryDataScopeEnum = "HELD_DATA"
	QueryDataScopeEnumUnprocessedData      QueryDataScopeEnum = "UNPROCESSED_DATA"
)

func (e *QueryDataScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DATA_SCOPE_UNSPECIFIED":
		fallthrough
	case "ALL_DATA":
		fallthrough
	case "HELD_DATA":
		fallthrough
	case "UNPROCESSED_DATA":
		*e = QueryDataScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryDataScopeEnum: %s", s)
	}
}

// QueryMethodEnum - The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.
type QueryMethodEnum string

const (
	QueryMethodEnumSearchMethodUnspecified QueryMethodEnum = "SEARCH_METHOD_UNSPECIFIED"
	QueryMethodEnumAccount                 QueryMethodEnum = "ACCOUNT"
	QueryMethodEnumOrgUnit                 QueryMethodEnum = "ORG_UNIT"
	QueryMethodEnumTeamDrive               QueryMethodEnum = "TEAM_DRIVE"
	QueryMethodEnumEntireOrg               QueryMethodEnum = "ENTIRE_ORG"
	QueryMethodEnumRoom                    QueryMethodEnum = "ROOM"
	QueryMethodEnumSitesURL                QueryMethodEnum = "SITES_URL"
	QueryMethodEnumSharedDrive             QueryMethodEnum = "SHARED_DRIVE"
)

func (e *QueryMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEARCH_METHOD_UNSPECIFIED":
		fallthrough
	case "ACCOUNT":
		fallthrough
	case "ORG_UNIT":
		fallthrough
	case "TEAM_DRIVE":
		fallthrough
	case "ENTIRE_ORG":
		fallthrough
	case "ROOM":
		fallthrough
	case "SITES_URL":
		fallthrough
	case "SHARED_DRIVE":
		*e = QueryMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryMethodEnum: %s", s)
	}
}

// QuerySearchMethodEnum - The search method to use.
type QuerySearchMethodEnum string

const (
	QuerySearchMethodEnumSearchMethodUnspecified QuerySearchMethodEnum = "SEARCH_METHOD_UNSPECIFIED"
	QuerySearchMethodEnumAccount                 QuerySearchMethodEnum = "ACCOUNT"
	QuerySearchMethodEnumOrgUnit                 QuerySearchMethodEnum = "ORG_UNIT"
	QuerySearchMethodEnumTeamDrive               QuerySearchMethodEnum = "TEAM_DRIVE"
	QuerySearchMethodEnumEntireOrg               QuerySearchMethodEnum = "ENTIRE_ORG"
	QuerySearchMethodEnumRoom                    QuerySearchMethodEnum = "ROOM"
	QuerySearchMethodEnumSitesURL                QuerySearchMethodEnum = "SITES_URL"
	QuerySearchMethodEnumSharedDrive             QuerySearchMethodEnum = "SHARED_DRIVE"
)

func (e *QuerySearchMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEARCH_METHOD_UNSPECIFIED":
		fallthrough
	case "ACCOUNT":
		fallthrough
	case "ORG_UNIT":
		fallthrough
	case "TEAM_DRIVE":
		fallthrough
	case "ENTIRE_ORG":
		fallthrough
	case "ROOM":
		fallthrough
	case "SITES_URL":
		fallthrough
	case "SHARED_DRIVE":
		*e = QuerySearchMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QuerySearchMethodEnum: %s", s)
	}
}

// Query - The query definition used for search and export.
type Query struct {
	// The accounts to search
	AccountInfo *AccountInfo `json:"accountInfo,omitempty"`
	// The Google Workspace service to search.
	Corpus *QueryCorpusEnum `json:"corpus,omitempty"`
	// The data source to search.
	DataScope *QueryDataScopeEnum `json:"dataScope,omitempty"`
	// Additional options for Drive search
	DriveOptions *DriveOptions `json:"driveOptions,omitempty"`
	// The end time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.
	EndTime *string `json:"endTime,omitempty"`
	// The Chat spaces to search
	HangoutsChatInfo *HangoutsChatInfo `json:"hangoutsChatInfo,omitempty"`
	// Additional options for Google Chat search
	HangoutsChatOptions *HangoutsChatOptions `json:"hangoutsChatOptions,omitempty"`
	// Additional options for Gmail search
	MailOptions *MailOptions `json:"mailOptions,omitempty"`
	// The entity to search. This field replaces **searchMethod** to support shared drives. When **searchMethod** is **TEAM_DRIVE**, the response of this field is **SHARED_DRIVE**.
	Method *QueryMethodEnum `json:"method,omitempty"`
	// The organizational unit to search
	OrgUnitInfo *OrgUnitInfo `json:"orgUnitInfo,omitempty"`
	// The search method to use.
	SearchMethod *QuerySearchMethodEnum `json:"searchMethod,omitempty"`
	// The shared drives to search
	SharedDriveInfo *SharedDriveInfo `json:"sharedDriveInfo,omitempty"`
	// The published site URLs of new Google Sites to search
	SitesURLInfo *SitesURLInfo `json:"sitesUrlInfo,omitempty"`
	// The start time for the search query. Specify in GMT. The value is rounded to 12 AM on the specified date.
	StartTime *string `json:"startTime,omitempty"`
	// Team Drives to search
	TeamDriveInfo *TeamDriveInfo `json:"teamDriveInfo,omitempty"`
	// Service-specific [search operators](https://support.google.com/vault/answer/2474474) to filter search results.
	Terms *string `json:"terms,omitempty"`
	// The time zone name. It should be an IANA TZ name, such as "America/Los_Angeles". For a list of time zone names, see [Time Zone](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). For more information about how Vault uses time zones, see [the Vault help center](https://support.google.com/vault/answer/6092995#time).
	TimeZone *string `json:"timeZone,omitempty"`
	// Additional options for Voice search
	VoiceOptions *VoiceOptions `json:"voiceOptions,omitempty"`
}
