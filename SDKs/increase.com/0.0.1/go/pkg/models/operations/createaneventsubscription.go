// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateAnEventSubscriptionDefaultApplicationJSON13StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CreateAnEventSubscriptionDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON13TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON13TypeEnumRateLimitedError CreateAnEventSubscriptionDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON13 struct {
	Detail     string                                                      `json:"detail"`
	RetryAfter *int64                                                      `json:"retry_after,omitempty"`
	Status     CreateAnEventSubscriptionDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                      `json:"title"`
	Type       CreateAnEventSubscriptionDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON12StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON12StatusEnumFourHundredAndThree CreateAnEventSubscriptionDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON12TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON12TypeEnumPrivateFeatureError CreateAnEventSubscriptionDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON12 struct {
	Detail string                                                      `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON11StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON11StatusEnumFourHundredAndFour CreateAnEventSubscriptionDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON11TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON11TypeEnumObjectNotFoundError CreateAnEventSubscriptionDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON11 struct {
	Detail string                                                      `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON10StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON10StatusEnumFourHundred CreateAnEventSubscriptionDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON10TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON10TypeEnumMalformedRequestError CreateAnEventSubscriptionDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON10 struct {
	Detail string                                                      `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON9StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON9StatusEnumFourHundred CreateAnEventSubscriptionDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON9TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON9TypeEnumInvalidParametersError CreateAnEventSubscriptionDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                   `json:"errors,omitempty"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON8StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON8StatusEnumFourHundredAndNine CreateAnEventSubscriptionDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON8TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON8TypeEnumInvalidOperationError CreateAnEventSubscriptionDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON8 struct {
	Detail string                                                     `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON7StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON7StatusEnumFourHundredAndOne CreateAnEventSubscriptionDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON7TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CreateAnEventSubscriptionDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON7 struct {
	Detail string                                                     `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON6StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON6StatusEnumFiveHundred CreateAnEventSubscriptionDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON6TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON6TypeEnumInternalServerError CreateAnEventSubscriptionDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON6 struct {
	Detail string                                                     `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON5StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON5StatusEnumFourHundredAndThree CreateAnEventSubscriptionDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON5TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CreateAnEventSubscriptionDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON5 struct {
	Detail string                                                     `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON4StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CreateAnEventSubscriptionDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON4TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CreateAnEventSubscriptionDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON4 struct {
	Detail string                                                     `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON3StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON3StatusEnumFourHundredAndNine CreateAnEventSubscriptionDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON3TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON3TypeEnumIdempotencyConflictError CreateAnEventSubscriptionDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON3 struct {
	Detail string                                                     `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON2StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON2StatusEnumFourHundredAndThree CreateAnEventSubscriptionDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON2TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CreateAnEventSubscriptionDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON2 struct {
	Detail string                                                     `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionDefaultApplicationJSON1StatusEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON1StatusEnumFourHundredAndFour CreateAnEventSubscriptionDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON1TypeEnum string

const (
	CreateAnEventSubscriptionDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CreateAnEventSubscriptionDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CreateAnEventSubscriptionDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CreateAnEventSubscriptionDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnEventSubscriptionDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CreateAnEventSubscriptionDefaultApplicationJSON1 struct {
	Detail string                                                     `json:"detail"`
	Status CreateAnEventSubscriptionDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CreateAnEventSubscriptionDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CreateAnEventSubscriptionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Event Subscription
	EventSubscription *shared.EventSubscription
}
