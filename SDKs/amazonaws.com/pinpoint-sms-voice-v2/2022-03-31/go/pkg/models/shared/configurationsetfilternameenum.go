// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConfigurationSetFilterNameEnum string

const (
	ConfigurationSetFilterNameEnumEventDestinationName ConfigurationSetFilterNameEnum = "event-destination-name"
	ConfigurationSetFilterNameEnumMatchingEventTypes   ConfigurationSetFilterNameEnum = "matching-event-types"
	ConfigurationSetFilterNameEnumDefaultMessageType   ConfigurationSetFilterNameEnum = "default-message-type"
	ConfigurationSetFilterNameEnumDefaultSenderID      ConfigurationSetFilterNameEnum = "default-sender-id"
)

func (e *ConfigurationSetFilterNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "event-destination-name":
		fallthrough
	case "matching-event-types":
		fallthrough
	case "default-message-type":
		fallthrough
	case "default-sender-id":
		*e = ConfigurationSetFilterNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigurationSetFilterNameEnum: %s", s)
	}
}
