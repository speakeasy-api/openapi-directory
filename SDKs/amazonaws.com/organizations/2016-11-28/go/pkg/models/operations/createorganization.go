// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateOrganizationXAmzTargetEnum
type CreateOrganizationXAmzTargetEnum string

const (
	CreateOrganizationXAmzTargetEnumAwsOrganizationsV20161128CreateOrganization CreateOrganizationXAmzTargetEnum = "AWSOrganizationsV20161128.CreateOrganization"
)

func (e CreateOrganizationXAmzTargetEnum) ToPointer() *CreateOrganizationXAmzTargetEnum {
	return &e
}

func (e *CreateOrganizationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSOrganizationsV20161128.CreateOrganization":
		*e = CreateOrganizationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationXAmzTargetEnum: %v", v)
	}
}

type CreateOrganizationRequest struct {
	CreateOrganizationRequest shared.CreateOrganizationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                CreateOrganizationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateOrganizationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccessDeniedForDependencyException
	AccessDeniedForDependencyException interface{}
	// AlreadyInOrganizationException
	AlreadyInOrganizationException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	// ConstraintViolationException
	ConstraintViolationException interface{}
	ContentType                  string
	// Success
	CreateOrganizationResponse *shared.CreateOrganizationResponse
	// InvalidInputException
	InvalidInputException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
