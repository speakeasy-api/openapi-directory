// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RichResultsInspectionResultVerdictEnum - High-level rich results inspection result for this URL.
type RichResultsInspectionResultVerdictEnum string

const (
	RichResultsInspectionResultVerdictEnumVerdictUnspecified RichResultsInspectionResultVerdictEnum = "VERDICT_UNSPECIFIED"
	RichResultsInspectionResultVerdictEnumPass               RichResultsInspectionResultVerdictEnum = "PASS"
	RichResultsInspectionResultVerdictEnumPartial            RichResultsInspectionResultVerdictEnum = "PARTIAL"
	RichResultsInspectionResultVerdictEnumFail               RichResultsInspectionResultVerdictEnum = "FAIL"
	RichResultsInspectionResultVerdictEnumNeutral            RichResultsInspectionResultVerdictEnum = "NEUTRAL"
)

func (e RichResultsInspectionResultVerdictEnum) ToPointer() *RichResultsInspectionResultVerdictEnum {
	return &e
}

func (e *RichResultsInspectionResultVerdictEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VERDICT_UNSPECIFIED":
		fallthrough
	case "PASS":
		fallthrough
	case "PARTIAL":
		fallthrough
	case "FAIL":
		fallthrough
	case "NEUTRAL":
		*e = RichResultsInspectionResultVerdictEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RichResultsInspectionResultVerdictEnum: %v", v)
	}
}

// RichResultsInspectionResult - Rich-Results inspection result, including any rich results found at this URL.
type RichResultsInspectionResult struct {
	// A list of zero or more rich results detected on this page. Rich results that cannot even be parsed due to syntactic issues will not be listed here.
	DetectedItems []DetectedItems `json:"detectedItems,omitempty"`
	// High-level rich results inspection result for this URL.
	Verdict *RichResultsInspectionResultVerdictEnum `json:"verdict,omitempty"`
}
