// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetLicenseConversionTaskXAmzTargetEnum
type GetLicenseConversionTaskXAmzTargetEnum string

const (
	GetLicenseConversionTaskXAmzTargetEnumAwsLicenseManagerGetLicenseConversionTask GetLicenseConversionTaskXAmzTargetEnum = "AWSLicenseManager.GetLicenseConversionTask"
)

func (e *GetLicenseConversionTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSLicenseManager.GetLicenseConversionTask":
		*e = GetLicenseConversionTaskXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLicenseConversionTaskXAmzTargetEnum: %s", s)
	}
}

type GetLicenseConversionTaskRequest struct {
	GetLicenseConversionTaskRequest shared.GetLicenseConversionTaskRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      GetLicenseConversionTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetLicenseConversionTaskResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	ContentType            string
	// Success
	GetLicenseConversionTaskResponse *shared.GetLicenseConversionTaskResponse
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// RateLimitExceededException
	RateLimitExceededException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ServerInternalException
	ServerInternalException interface{}
}
