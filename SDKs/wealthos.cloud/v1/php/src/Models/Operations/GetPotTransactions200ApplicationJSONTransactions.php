<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetPotTransactions200ApplicationJSONTransactions
{
    /**
     * Additional external details of the transaction, This may be populated in reconciliation process
     * 
     * @var ?array<string, mixed> $additionalExternalDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('additional_external_details')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalExternalDetails = null;
    
    /**
     * (optional) Order identifier assigned by the wealth manager
     * 
     * @var ?string $clientOrderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_order_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientOrderId = null;
    
    /**
     * Will indicate the date where this record was created
     * 
     * @var string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdAt;
    
    /**
     * Currency of the transaction
     * 
     * @var string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currency;
    
    /**
     * in = cash payment or pending buy transaction, out= cash out or pending sell transaction.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsDirectionEnum $direction
     */
	#[\JMS\Serializer\Annotation\SerializedName('direction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsDirectionEnum>')]
    public GetPotTransactions200ApplicationJSONTransactionsDirectionEnum $direction;
    
    /**
     * Executed price of the buy, sell transaction
     * 
     * @var ?string $executionPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('execution_price')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $executionPrice = null;
    
    /**
     * External Transaction Reference
     * 
     * @var ?string $externalTransactionReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_transaction_reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalTransactionReference = null;
    
    /**
     * Investment product id of the transaction. Will be 'cash' for cash transaction
     * 
     * @var string $investmentProductId
     */
	#[\JMS\Serializer\Annotation\SerializedName('investment_product_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $investmentProductId;
    
    /**
     * Origin of the transaction
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsOriginEnum $origin
     */
	#[\JMS\Serializer\Annotation\SerializedName('origin')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsOriginEnum>')]
    public GetPotTransactions200ApplicationJSONTransactionsOriginEnum $origin;
    
    /**
     * Parent Transaction ID
     * 
     * @var ?string $parentTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentTransactionId = null;
    
    /**
     * Primary transaction type
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsPrimaryTransactionTypeEnum $primaryTransactionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('primary_transaction_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsPrimaryTransactionTypeEnum>')]
    public GetPotTransactions200ApplicationJSONTransactionsPrimaryTransactionTypeEnum $primaryTransactionType;
    
    /**
     * Intended settlement date of the pending transaction or actual the settled day of the transaction
     * 
     * @var ?string $settlementDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('settlement_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $settlementDate = null;
    
    /**
     * Sub transaction type
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsSubTransactionTypeEnum $subTransactionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('sub_transaction_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsSubTransactionTypeEnum>')]
    public GetPotTransactions200ApplicationJSONTransactionsSubTransactionTypeEnum $subTransactionType;
    
    /**
     * Sub state of the transaction. instructed, confirmed, priced sub_types applicable for pending state and rejected, cancelled, settled sub_types applicable for archived state
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsSubTypeEnum $subType
     */
	#[\JMS\Serializer\Annotation\SerializedName('sub_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsSubTypeEnum>')]
    public GetPotTransactions200ApplicationJSONTransactionsSubTypeEnum $subType;
    
    /**
     * Date the transaction was effected
     * 
     * @var ?string $tradeDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('trade_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tradeDate = null;
    
    /**
     * Unique ID of the transaction
     * 
     * @var string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transactionId;
    
    /**
     * Quantity of the investment product transaction. Will be empty for the cash transactions.
     * 
     * @var ?string $transactionQuantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_quantity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionQuantity = null;
    
    /**
     * Value of the transaction
     * 
     * @var ?string $transactionValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionValue = null;
    
    /**
     * State of the transaction
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsTypeEnum>')]
    public GetPotTransactions200ApplicationJSONTransactionsTypeEnum $type;
    
    /**
     * Will indicate the date where this record was last changed
     * 
     * @var string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $updatedAt;
    
	public function __construct()
	{
		$this->additionalExternalDetails = null;
		$this->clientOrderId = null;
		$this->createdAt = "";
		$this->currency = "";
		$this->direction = \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsDirectionEnum::IN;
		$this->executionPrice = null;
		$this->externalTransactionReference = null;
		$this->investmentProductId = "";
		$this->origin = \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsOriginEnum::API;
		$this->parentTransactionId = null;
		$this->primaryTransactionType = \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsPrimaryTransactionTypeEnum::FEES;
		$this->settlementDate = null;
		$this->subTransactionType = \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsSubTransactionTypeEnum::DIVIDEND_REINVESTMENT;
		$this->subType = \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsSubTypeEnum::INSTRUCTED;
		$this->tradeDate = null;
		$this->transactionId = "";
		$this->transactionQuantity = null;
		$this->transactionValue = null;
		$this->type = \OpenAPI\OpenAPI\Models\Operations\GetPotTransactions200ApplicationJSONTransactionsTypeEnum::PENDING;
		$this->updatedAt = "";
	}
}
