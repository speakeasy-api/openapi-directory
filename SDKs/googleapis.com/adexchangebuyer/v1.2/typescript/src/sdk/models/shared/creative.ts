/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class CreativeCorrections extends SpeakeasyBase {
  /**
   * Additional details about the correction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: string[];

  /**
   * The type of correction that was applied to the creative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

export class CreativeDisapprovalReasons extends SpeakeasyBase {
  /**
   * Additional details about the reason for disapproval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: string[];

  /**
   * The categorized reason for disapproval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;
}

export class CreativeFilteringReasonsReasons extends SpeakeasyBase {
  /**
   * The number of times the creative was filtered for the status. The count is aggregated across all publishers on the exchange.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filteringCount" })
  filteringCount?: string;

  /**
   * The filtering status code. Please refer to the creative-status-codes.txt file for different statuses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filteringStatus" })
  filteringStatus?: number;
}

/**
 * The filtering reasons for the creative. Read-only. This field should not be set in requests.
 */
export class CreativeFilteringReasons extends SpeakeasyBase {
  /**
   * The date in ISO 8601 format for the data. The data is collected from 00:00:00 to 23:59:59 in PST.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date?: string;

  /**
   * The filtering reasons.
   */
  @SpeakeasyMetadata({ elemType: CreativeFilteringReasonsReasons })
  @Expose({ name: "reasons" })
  @Type(() => CreativeFilteringReasonsReasons)
  reasons?: CreativeFilteringReasonsReasons[];
}

/**
 * A creative and its classification data.
 */
export class Creative extends SpeakeasyBase {
  /**
   * The HTML snippet that displays the ad when inserted in the web page. If set, videoURL should not be set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "HTMLSnippet" })
  htmlSnippet?: string;

  /**
   * Account id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: number;

  /**
   * Detected advertiser id, if any. Read-only. This field should not be set in requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "advertiserId" })
  advertiserId?: string[];

  /**
   * The name of the company being advertised in the creative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "advertiserName" })
  advertiserName?: string;

  /**
   * The agency id for this creative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "agencyId" })
  agencyId?: string;

  /**
   * The last upload timestamp of this creative if it was uploaded via API. Read-only. The value of this field is generated, and will be ignored for uploads. (formatted RFC 3339 timestamp).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apiUploadTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  apiUploadTimestamp?: Date;

  /**
   * All attributes for the ads that may be shown from this snippet.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attribute" })
  attribute?: number[];

  /**
   * A buyer-specific id identifying the creative in this ad.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buyerCreativeId" })
  buyerCreativeId?: string;

  /**
   * The set of destination urls for the snippet.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clickThroughUrl" })
  clickThroughUrl?: string[];

  /**
   * Shows any corrections that were applied to this creative. Read-only. This field should not be set in requests.
   */
  @SpeakeasyMetadata({ elemType: CreativeCorrections })
  @Expose({ name: "corrections" })
  @Type(() => CreativeCorrections)
  corrections?: CreativeCorrections[];

  /**
   * The reasons for disapproval, if any. Note that not all disapproval reasons may be categorized, so it is possible for the creative to have a status of DISAPPROVED with an empty list for disapproval_reasons. In this case, please reach out to your TAM to help debug the issue. Read-only. This field should not be set in requests.
   */
  @SpeakeasyMetadata({ elemType: CreativeDisapprovalReasons })
  @Expose({ name: "disapprovalReasons" })
  @Type(() => CreativeDisapprovalReasons)
  disapprovalReasons?: CreativeDisapprovalReasons[];

  /**
   * The filtering reasons for the creative. Read-only. This field should not be set in requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filteringReasons" })
  @Type(() => CreativeFilteringReasons)
  filteringReasons?: CreativeFilteringReasons;

  /**
   * Ad height.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height?: number;

  /**
   * The set of urls to be called to record an impression.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "impressionTrackingUrl" })
  impressionTrackingUrl?: string[];

  /**
   * Resource type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Detected product categories, if any. Read-only. This field should not be set in requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCategories" })
  productCategories?: number[];

  /**
   * All restricted categories for the ads that may be shown from this snippet.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictedCategories" })
  restrictedCategories?: number[];

  /**
   * Detected sensitive categories, if any. Read-only. This field should not be set in requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sensitiveCategories" })
  sensitiveCategories?: number[];

  /**
   * Creative serving status. Read-only. This field should not be set in requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * All vendor types for the ads that may be shown from this snippet.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vendorType" })
  vendorType?: number[];

  /**
   * The version for this creative. Read-only. This field should not be set in requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;

  /**
   * The url to fetch a video ad. If set, HTMLSnippet should not be set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videoURL" })
  videoURL?: string;

  /**
   * Ad width.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: number;
}
