/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class JobStatistics3 {
    /**
     * [Output-only] The number of bad records encountered. Note that if the job has failed because of more bad records encountered than the maximum allowed in the load job configuration, then this number can be less than the total number of bad records present in the input data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("badRecords")
    public String badRecords;

    public JobStatistics3 withBadRecords(String badRecords) {
        this.badRecords = badRecords;
        return this;
    }
    
    /**
     * [Output-only] Number of bytes of source data in a load job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputFileBytes")
    public String inputFileBytes;

    public JobStatistics3 withInputFileBytes(String inputFileBytes) {
        this.inputFileBytes = inputFileBytes;
        return this;
    }
    
    /**
     * [Output-only] Number of source files in a load job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputFiles")
    public String inputFiles;

    public JobStatistics3 withInputFiles(String inputFiles) {
        this.inputFiles = inputFiles;
        return this;
    }
    
    /**
     * [Output-only] Size of the loaded data in bytes. Note that while a load job is in the running state, this value may change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputBytes")
    public String outputBytes;

    public JobStatistics3 withOutputBytes(String outputBytes) {
        this.outputBytes = outputBytes;
        return this;
    }
    
    /**
     * [Output-only] Number of rows imported in a load job. Note that while an import job is in the running state, this value may change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputRows")
    public String outputRows;

    public JobStatistics3 withOutputRows(String outputRows) {
        this.outputRows = outputRows;
        return this;
    }
    
    public JobStatistics3(){}
}
