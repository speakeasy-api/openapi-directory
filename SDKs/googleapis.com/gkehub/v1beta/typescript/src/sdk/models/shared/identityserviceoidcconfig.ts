/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Configuration for OIDC Auth flow.
 */
export class IdentityServiceOidcConfig extends SpeakeasyBase {
  /**
   * PEM-encoded CA for OIDC provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificateAuthorityData" })
  certificateAuthorityData?: string;

  /**
   * ID for OIDC client application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientSecret" })
  clientSecret?: string;

  /**
   * Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deployCloudConsoleProxy" })
  deployCloudConsoleProxy?: boolean;

  /**
   * Enable access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableAccessToken" })
  enableAccessToken?: boolean;

  /**
   * Output only. Encrypted OIDC Client secret
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptedClientSecret" })
  encryptedClientSecret?: string;

  /**
   * Comma-separated list of key-value pairs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraParams" })
  extraParams?: string;

  /**
   * Prefix to prepend to group name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPrefix" })
  groupPrefix?: string;

  /**
   * Claim in OIDC ID token that holds group information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupsClaim" })
  groupsClaim?: string;

  /**
   * URI for the OIDC provider. This should point to the level below .well-known/openid-configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issuerUri" })
  issuerUri?: string;

  /**
   * Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kubectlRedirectUri" })
  kubectlRedirectUri?: string;

  /**
   * Comma-separated list of identifiers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes?: string;

  /**
   * Claim in OIDC ID token that holds username.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userClaim" })
  userClaim?: string;

  /**
   * Prefix to prepend to user name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userPrefix" })
  userPrefix?: string;
}

/**
 * Configuration for OIDC Auth flow.
 */
export class IdentityServiceOidcConfigInput extends SpeakeasyBase {
  /**
   * PEM-encoded CA for OIDC provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificateAuthorityData" })
  certificateAuthorityData?: string;

  /**
   * ID for OIDC client application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Input only. Unencrypted OIDC client secret will be passed to the GKE Hub CLH.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientSecret" })
  clientSecret?: string;

  /**
   * Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deployCloudConsoleProxy" })
  deployCloudConsoleProxy?: boolean;

  /**
   * Enable access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableAccessToken" })
  enableAccessToken?: boolean;

  /**
   * Comma-separated list of key-value pairs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extraParams" })
  extraParams?: string;

  /**
   * Prefix to prepend to group name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPrefix" })
  groupPrefix?: string;

  /**
   * Claim in OIDC ID token that holds group information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupsClaim" })
  groupsClaim?: string;

  /**
   * URI for the OIDC provider. This should point to the level below .well-known/openid-configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issuerUri" })
  issuerUri?: string;

  /**
   * Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kubectlRedirectUri" })
  kubectlRedirectUri?: string;

  /**
   * Comma-separated list of identifiers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes?: string;

  /**
   * Claim in OIDC ID token that holds username.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userClaim" })
  userClaim?: string;

  /**
   * Prefix to prepend to user name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userPrefix" })
  userPrefix?: string;
}
