/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Successful DELETE on Webhook resource
 */
export class Webhook extends SpeakeasyBase {
  /**
   * json value to describe data to add
   */
  @SpeakeasyMetadata()
  @Expose({ name: "add_to_data" })
  addToData?: string;

  /**
   * Date of the webhook creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created: Date;

  /**
   * Date of the webhook deletion
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deleted?: Date;

  /**
   * json value to store last related webhook data flushing fail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "flush_fail" })
  flushFail?: string;

  /**
   * ID of the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * ID of the authentication process
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_auth" })
  idAuth?: number;

  /**
   * ID of the webhook event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_event" })
  idEvent?: number;

  /**
   * ID of the service
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_service" })
  idService?: number;

  /**
   * ID of the emitter user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_user" })
  idUser?: number;

  /**
   * Date of the webhook last update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated: Date;

  /**
   * URL of the webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
