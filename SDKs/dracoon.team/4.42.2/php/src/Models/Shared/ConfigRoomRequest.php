<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConfigRoomRequest - Request model for configuring a room
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConfigRoomRequest
{
    /**
     * List of group ids
     * 
     * 
     * A room requires at least one admin (user or group)
     * 
     * @var ?array<int> $adminGroupIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('adminGroupIds')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $adminGroupIds = null;
    
    /**
     * List of user ids
     * 
     * 
     * A room requires at least one admin (user or group)
     * 
     * @var ?array<int> $adminIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('adminIds')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $adminIds = null;
    
    /**
     * Classification ID:
     * 
     * 
     * * `1` - public
     * 
     * * `2` - internal
     * 
     * * `3` - confidential
     * 
     * * `4` - strictly confidential
     * 
     * 
     * 
     * Provided (or default) classification is taken from room
     * 
     * when file gets uploaded without any classification.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConfigRoomRequestClassificationEnum $classification
     */
	#[\JMS\Serializer\Annotation\SerializedName('classification')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConfigRoomRequestClassificationEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConfigRoomRequestClassificationEnum $classification = null;
    
    /**
     * Is activities log active (for rooms only)
     * 
     * @var ?bool $hasActivitiesLog
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasActivitiesLog')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasActivitiesLog = null;
    
    /**
     * Inherit permissions from parent room
     * 
     * 
     * (default: `false` if `parentId` is `0`; otherwise: `true`)
     * 
     * @var ?bool $inheritPermissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('inheritPermissions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $inheritPermissions = null;
    
    /**
     * Behaviour when new users are added to the group:
     * 
     * 
     * * `autoallow`
     * 
     * * `pending`
     * 
     * 
     * 
     * Only relevant if `adminGroupIds` has items.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConfigRoomRequestNewGroupMemberAcceptanceEnum $newGroupMemberAcceptance
     */
	#[\JMS\Serializer\Annotation\SerializedName('newGroupMemberAcceptance')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConfigRoomRequestNewGroupMemberAcceptanceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConfigRoomRequestNewGroupMemberAcceptanceEnum $newGroupMemberAcceptance = null;
    
    /**
     * Retention period for deleted nodes in days
     * 
     * @var ?int $recycleBinRetentionPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('recycleBinRetentionPeriod')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $recycleBinRetentionPeriod = null;
    
    /**
     * Take over existing permissions
     * 
     * @var ?bool $takeOverPermissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('takeOverPermissions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $takeOverPermissions = null;
    
	public function __construct()
	{
		$this->adminGroupIds = null;
		$this->adminIds = null;
		$this->classification = null;
		$this->hasActivitiesLog = null;
		$this->inheritPermissions = null;
		$this->newGroupMemberAcceptance = null;
		$this->recycleBinRetentionPeriod = null;
		$this->takeOverPermissions = null;
	}
}
