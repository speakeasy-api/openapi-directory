<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class NetworkAttributes
{
    /**
     * The copyright of the network
     * 
     * @var ?string $copyright
     */
	#[\JMS\Serializer\Annotation\SerializedName('copyright')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $copyright = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The description of the network eventually in HTML format
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Determines whether `description` is in HTML format or plain.
     * 
     * @var ?bool $descriptionIsHtml
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_is_html')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $descriptionIsHtml = null;
    
    /**
     * The description with all HTML markup removed. If the description does not contain markup
     * 
     * this is identitcal to `description`.
     * 
     * 
     * @var ?string $descriptionPlain
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_plain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $descriptionPlain = null;
    
    /**
     * Where to find this network on Facebook
     * 
     * @var ?string $facebookUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('facebook_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $facebookUrl = null;
    
    /**
     * Where to find this network on Instagram
     * 
     * @var ?string $instagramUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('instagram_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instagramUrl = null;
    
    /**
     * Where to find the network on LinkedIn
     * 
     * @var ?string $linkedinUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkedin_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $linkedinUrl = null;
    
    /**
     * The name of the network
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * A public point of contact through email
     * 
     * @var ?string $publicEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicEmail = null;
    
    /**
     * If this is `true`, a public web page for this network is available under
     * 
     * `https://art19.com/networks/{slug}`, where `slug` is the value of the corresponding attribute.
     * This public page provides details about the network as well as descriptive links to all its
     * series' public pages. If this is `false`, no such public page is available.
     * 
     * 
     * @var ?bool $publicPageEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_page_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $publicPageEnabled = null;
    
    /**
     * The unique slug for the network also used on its public page for example.
     * 
     * This value is unique system-wide amongst all networks _and_ series.
     * 
     * 
     * @var ?string $slug
     */
	#[\JMS\Serializer\Annotation\SerializedName('slug')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $slug = null;
    
    /**
     * Where to find the network on Tumblr
     * 
     * @var ?string $tumblrUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('tumblr_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tumblrUrl = null;
    
    /**
     * Where to find the network on Twitter
     * 
     * @var ?string $twitterUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('twitter_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $twitterUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
    /**
     * A public website for the network
     * 
     * @var ?string $websiteUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('website_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $websiteUrl = null;
    
	public function __construct()
	{
		$this->copyright = null;
		$this->createdAt = null;
		$this->description = null;
		$this->descriptionIsHtml = null;
		$this->descriptionPlain = null;
		$this->facebookUrl = null;
		$this->instagramUrl = null;
		$this->linkedinUrl = null;
		$this->name = null;
		$this->publicEmail = null;
		$this->publicPageEnabled = null;
		$this->slug = null;
		$this->tumblrUrl = null;
		$this->twitterUrl = null;
		$this->updatedAt = null;
		$this->websiteUrl = null;
	}
}
