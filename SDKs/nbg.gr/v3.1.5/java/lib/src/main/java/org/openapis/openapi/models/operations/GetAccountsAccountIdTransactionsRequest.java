/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetAccountsAccountIdTransactionsRequest {
    /**
     * AccountId
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=accountId")
    public String accountId;

    public GetAccountsAccountIdTransactionsRequest withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The UTC ISO 8601 Date Time to filter transactions FROM NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fromBookingDateTime")
    public OffsetDateTime fromBookingDateTime;

    public GetAccountsAccountIdTransactionsRequest withFromBookingDateTime(OffsetDateTime fromBookingDateTime) {
        this.fromBookingDateTime = fromBookingDateTime;
        return this;
    }
    
    /**
     * The unique id of the sandbox to be used
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=sandbox-id")
    public String sandboxId;

    public GetAccountsAccountIdTransactionsRequest withSandboxId(String sandboxId) {
        this.sandboxId = sandboxId;
        return this;
    }
    
    /**
     * The UTC ISO 8601 Date Time to filter transactions TO NB Time component is optional - set to 00:00:00 for just Date. If the Date Time contains a timezone, the ASPSP must ignore the timezone component.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=toBookingDateTime")
    public OffsetDateTime toBookingDateTime;

    public GetAccountsAccountIdTransactionsRequest withToBookingDateTime(OffsetDateTime toBookingDateTime) {
        this.toBookingDateTime = toBookingDateTime;
        return this;
    }
    
    /**
     * Indicates the user-agent that the PSU is using.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-customer-user-agent")
    public String xCustomerUserAgent;

    public GetAccountsAccountIdTransactionsRequest withXCustomerUserAgent(String xCustomerUserAgent) {
        this.xCustomerUserAgent = xCustomerUserAgent;
        return this;
    }
    
    /**
     * The time when the PSU last logged in with the TPP.
     * All dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below:
     * Sun, 10 Sep 2017 19:43:31 UTC
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-fapi-auth-date")
    public String xFapiAuthDate;

    public GetAccountsAccountIdTransactionsRequest withXFapiAuthDate(String xFapiAuthDate) {
        this.xFapiAuthDate = xFapiAuthDate;
        return this;
    }
    
    /**
     * The PSU's IP address if the PSU is currently logged in with the TPP.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-fapi-customer-ip-address")
    public String xFapiCustomerIpAddress;

    public GetAccountsAccountIdTransactionsRequest withXFapiCustomerIpAddress(String xFapiCustomerIpAddress) {
        this.xFapiCustomerIpAddress = xFapiCustomerIpAddress;
        return this;
    }
    
    /**
     * An RFC4122 UID used as a correlation id.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-fapi-interaction-id")
    public String xFapiInteractionId;

    public GetAccountsAccountIdTransactionsRequest withXFapiInteractionId(String xFapiInteractionId) {
        this.xFapiInteractionId = xFapiInteractionId;
        return this;
    }
    
    public GetAccountsAccountIdTransactionsRequest(@JsonProperty("accountId") String accountId, @JsonProperty("sandbox-id") String sandboxId) {
        this.accountId = accountId;
        this.sandboxId = sandboxId;
  }
}
