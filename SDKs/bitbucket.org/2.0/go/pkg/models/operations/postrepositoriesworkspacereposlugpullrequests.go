// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostRepositoriesWorkspaceRepoSlugPullrequestsSecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

type PostRepositoriesWorkspaceRepoSlugPullrequestsPathParams struct {
	// This can either be the repository slug or the UUID of the repository,
	// surrounded by curly-braces, for example: `{repository UUID}`.
	//
	RepoSlug string `pathParam:"style=simple,explode=false,name=repo_slug"`
	// This can either be the workspace ID (slug) or the workspace UUID
	// surrounded by curly-braces, for example: `{workspace UUID}`.
	//
	Workspace string `pathParam:"style=simple,explode=false,name=workspace"`
}

type PostRepositoriesWorkspaceRepoSlugPullrequestsRequest struct {
	PathParams PostRepositoriesWorkspaceRepoSlugPullrequestsPathParams
	// The new pull request.
	//
	// The request URL you POST to becomes the destination repository URL. For this reason, you must specify an explicit source repository in the request object if you want to pull from a different repository (fork).
	//
	// Since not all elements are required or even mutable, you only need to include the elements you want to initialize, such as the source branch and the title.
	Request  map[string]interface{} `request:"mediaType=application/json"`
	Security PostRepositoriesWorkspaceRepoSlugPullrequestsSecurity
}

type PostRepositoriesWorkspaceRepoSlugPullrequestsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// If the input document was invalid, or if the caller lacks the privilege to create repositories under the targeted account.
	Error map[string]interface{}
	// The newly created pull request.
	Pullrequest map[string]interface{}
}
