/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetinvestorAccount200ApplicationJSON - success
 */
public class GetinvestorAccount200ApplicationJSON {
    /**
     * investor account id
     */
    @JsonProperty("account_id")
    public String accountId;

    public GetinvestorAccount200ApplicationJSON withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_type")
    public GetinvestorAccount200ApplicationJSONAccountTypeEnum accountType;

    public GetinvestorAccount200ApplicationJSON withAccountType(GetinvestorAccount200ApplicationJSONAccountTypeEnum accountType) {
        this.accountType = accountType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public GetinvestorAccount200ApplicationJSON withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * does the Account have contributions for the current tax year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_year_subscription")
    public Boolean currentYearSubscription;

    public GetinvestorAccount200ApplicationJSON withCurrentYearSubscription(Boolean currentYearSubscription) {
        this.currentYearSubscription = currentYearSubscription;
        return this;
    }
    
    /**
     * total contribution by investor for account for the current tax year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_year_total_contribution")
    public String currentYearTotalContribution;

    public GetinvestorAccount200ApplicationJSON withCurrentYearTotalContribution(String currentYearTotalContribution) {
        this.currentYearTotalContribution = currentYearTotalContribution;
        return this;
    }
    
    /**
     * total contribution by investor for all ISA product types for the current tax year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_year_total_isa_contribution")
    public String currentYearTotalIsaContribution;

    public GetinvestorAccount200ApplicationJSON withCurrentYearTotalIsaContribution(String currentYearTotalIsaContribution) {
        this.currentYearTotalIsaContribution = currentYearTotalIsaContribution;
        return this;
    }
    
    /**
     * total subscription allowance remaining for investor across all ISA product types for the current tax year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_year_total_isa_withdrawals")
    public String currentYearTotalIsaWithdrawals;

    public GetinvestorAccount200ApplicationJSON withCurrentYearTotalIsaWithdrawals(String currentYearTotalIsaWithdrawals) {
        this.currentYearTotalIsaWithdrawals = currentYearTotalIsaWithdrawals;
        return this;
    }
    
    /**
     * total withdrawal by investor for account for the current tax year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_year_total_withdrawals")
    public String currentYearTotalWithdrawals;

    public GetinvestorAccount200ApplicationJSON withCurrentYearTotalWithdrawals(String currentYearTotalWithdrawals) {
        this.currentYearTotalWithdrawals = currentYearTotalWithdrawals;
        return this;
    }
    
    /**
     * the first date the account was opened by the investor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_of_account_activation")
    public String dateOfAccountActivation;

    public GetinvestorAccount200ApplicationJSON withDateOfAccountActivation(String dateOfAccountActivation) {
        this.dateOfAccountActivation = dateOfAccountActivation;
        return this;
    }
    
    @JsonProperty("financial_product_id")
    public String financialProductId;

    public GetinvestorAccount200ApplicationJSON withFinancialProductId(String financialProductId) {
        this.financialProductId = financialProductId;
        return this;
    }
    
    /**
     * date of the first subscription received for the current tax year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_subscription_date_for_current_year")
    public String firstSubscriptionDateForCurrentYear;

    public GetinvestorAccount200ApplicationJSON withFirstSubscriptionDateForCurrentYear(String firstSubscriptionDateForCurrentYear) {
        this.firstSubscriptionDateForCurrentYear = firstSubscriptionDateForCurrentYear;
        return this;
    }
    
    @JsonProperty("investor_id")
    public String investorId;

    public GetinvestorAccount200ApplicationJSON withInvestorId(String investorId) {
        this.investorId = investorId;
        return this;
    }
    
    /**
     * total subscription allowance remaining for investor across all ISA product types for the current tax year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isa_allowance_remaining")
    public String isaAllowanceRemaining;

    public GetinvestorAccount200ApplicationJSON withIsaAllowanceRemaining(String isaAllowanceRemaining) {
        this.isaAllowanceRemaining = isaAllowanceRemaining;
        return this;
    }
    
    /**
     * Array of pot IDs attached to Investor Account ID
     */
    @JsonProperty("pot_id")
    public String[] potId;

    public GetinvestorAccount200ApplicationJSON withPotId(String[] potId) {
        this.potId = potId;
        return this;
    }
    
    /**
     * account status
     */
    @JsonProperty("status")
    public GetinvestorAccount200ApplicationJSONStatusEnum status;

    public GetinvestorAccount200ApplicationJSON withStatus(GetinvestorAccount200ApplicationJSONStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Value of holdings across all pots attached to the account ID (including investment products and cash)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_market_value")
    public String totalMarketValue;

    public GetinvestorAccount200ApplicationJSON withTotalMarketValue(String totalMarketValue) {
        this.totalMarketValue = totalMarketValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public GetinvestorAccount200ApplicationJSON withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public GetinvestorAccount200ApplicationJSON(@JsonProperty("account_id") String accountId, @JsonProperty("financial_product_id") String financialProductId, @JsonProperty("investor_id") String investorId, @JsonProperty("pot_id") String[] potId, @JsonProperty("status") GetinvestorAccount200ApplicationJSONStatusEnum status) {
        this.accountId = accountId;
        this.financialProductId = financialProductId;
        this.investorId = investorId;
        this.potId = potId;
        this.status = status;
  }
}
