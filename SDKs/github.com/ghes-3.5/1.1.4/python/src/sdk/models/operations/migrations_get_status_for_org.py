"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import migration as shared_migration
from enum import Enum
from typing import Optional

class MigrationsGetStatusForOrgExcludeEnum(str, Enum):
    r"""Allowed values that can be passed to the exclude param."""
    REPOSITORIES = 'repositories'


@dataclasses.dataclass
class MigrationsGetStatusForOrgRequest:
    
    migration_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'migration_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the migration."""  
    org: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org', 'style': 'simple', 'explode': False }})
    r"""The organization name. The name is not case sensitive."""  
    exclude: Optional[list[MigrationsGetStatusForOrgExcludeEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'exclude', 'style': 'form', 'explode': True }})
    r"""Exclude attributes from the API response to improve performance"""  
    

@dataclasses.dataclass
class MigrationsGetStatusForOrgResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Resource not found"""  
    migration: Optional[shared_migration.Migration] = dataclasses.field(default=None)
    r"""*   `pending`, which means the migration hasn't started yet.
    *   `exporting`, which means the migration is in progress.
    *   `exported`, which means the migration finished successfully.
    *   `failed`, which means the migration failed.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    