/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class AccountCreateOAuth2SessionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Project",
  })
  project: string;
}

export class AccountCreateOAuth2SessionRequest extends SpeakeasyBase {
  /**
   * URL to redirect back to your app after a failed login attempt.  Only URLs from hostnames in your project platform list are allowed. This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) attack against your project API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=failure",
  })
  failure?: string;

  /**
   * OAuth2 Provider. Currently, supported providers are: amazon, apple, bitbucket, bitly, box, discord, dropbox, facebook, github, gitlab, google, linkedin, microsoft, paypal, paypalSandbox, salesforce, slack, spotify, tradeshift, tradeshiftBox, twitch, vk, yahoo, yandex, wordpress.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=provider",
  })
  provider: string;

  /**
   * A list of custom OAuth2 scopes. Check each provider internal docs for a list of supported scopes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=scopes",
  })
  scopes?: string[];

  /**
   * URL to redirect back to your app after a successful login attempt.  Only URLs from hostnames in your project platform list are allowed. This requirement helps to prevent an [open redirect](https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html) attack against your project API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=success",
  })
  success?: string;
}

export class AccountCreateOAuth2SessionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
