/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AppStartTime {
    /**
     *  A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullyDrawnTime")
    public Duration fullyDrawnTime;
    public AppStartTime withFullyDrawnTime(Duration fullyDrawnTime) {
        this.fullyDrawnTime = fullyDrawnTime;
        return this;
    }
    
    /**
     *  A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialDisplayTime")
    public Duration initialDisplayTime;
    public AppStartTime withInitialDisplayTime(Duration initialDisplayTime) {
        this.initialDisplayTime = initialDisplayTime;
        return this;
    }
    
}
