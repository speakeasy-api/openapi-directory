// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PackageStatusEnumEnum - The status of translation packaging. Possible values are 'started', 'packaging', 'completed'. When completed, you can make a /download call to download the last translation package.
type PackageStatusEnumEnum string

const (
	PackageStatusEnumEnumStarted   PackageStatusEnumEnum = "started"
	PackageStatusEnumEnumPackaging PackageStatusEnumEnum = "packaging"
	PackageStatusEnumEnumCompleted PackageStatusEnumEnum = "completed"
)

func (e *PackageStatusEnumEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "started":
		fallthrough
	case "packaging":
		fallthrough
	case "completed":
		*e = PackageStatusEnumEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PackageStatusEnumEnum: %s", s)
	}
}
