// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum - The current state of the EC2 Fleet.
type DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum string

const (
	DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnumSubmitted          DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum = "submitted"
	DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnumActive             DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum = "active"
	DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnumDeleted            DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum = "deleted"
	DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnumFailed             DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum = "failed"
	DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnumDeletedRunning     DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum = "deleted_running"
	DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnumDeletedTerminating DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum = "deleted_terminating"
	DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnumModifying          DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum = "modifying"
)

func (e DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum) ToPointer() *DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum {
	return &e
}

func (e *DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "submitted":
		fallthrough
	case "active":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		fallthrough
	case "deleted_running":
		fallthrough
	case "deleted_terminating":
		fallthrough
	case "modifying":
		*e = DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum: %v", v)
	}
}

// DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum - The previous state of the EC2 Fleet.
type DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum string

const (
	DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnumSubmitted          DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum = "submitted"
	DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnumActive             DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum = "active"
	DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnumDeleted            DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum = "deleted"
	DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnumFailed             DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum = "failed"
	DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnumDeletedRunning     DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum = "deleted_running"
	DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnumDeletedTerminating DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum = "deleted_terminating"
	DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnumModifying          DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum = "modifying"
)

func (e DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum) ToPointer() *DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum {
	return &e
}

func (e *DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "submitted":
		fallthrough
	case "active":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		fallthrough
	case "deleted_running":
		fallthrough
	case "deleted_terminating":
		fallthrough
	case "modifying":
		*e = DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum: %v", v)
	}
}

// DeleteFleetsResultSuccessfulFleetDeletions - Describes an EC2 Fleet that was successfully deleted.
type DeleteFleetsResultSuccessfulFleetDeletions struct {
	CurrentFleetState  *DeleteFleetsResultSuccessfulFleetDeletionsCurrentFleetStateEnum
	FleetID            *string
	PreviousFleetState *DeleteFleetsResultSuccessfulFleetDeletionsPreviousFleetStateEnum
}

// DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum - The error code.
type DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum string

const (
	DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnumFleetIDDoesNotExist      DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum = "fleetIdDoesNotExist"
	DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnumFleetIDMalformed         DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum = "fleetIdMalformed"
	DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnumFleetNotInDeletableState DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum = "fleetNotInDeletableState"
	DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnumUnexpectedError          DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum = "unexpectedError"
)

func (e DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum) ToPointer() *DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum {
	return &e
}

func (e *DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fleetIdDoesNotExist":
		fallthrough
	case "fleetIdMalformed":
		fallthrough
	case "fleetNotInDeletableState":
		fallthrough
	case "unexpectedError":
		*e = DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum: %v", v)
	}
}

// DeleteFleetsResultUnsuccessfulFleetDeletionsError - The error.
type DeleteFleetsResultUnsuccessfulFleetDeletionsError struct {
	Code    *DeleteFleetsResultUnsuccessfulFleetDeletionsErrorCodeEnum
	Message *string
}

// DeleteFleetsResultUnsuccessfulFleetDeletions - Describes an EC2 Fleet that was not successfully deleted.
type DeleteFleetsResultUnsuccessfulFleetDeletions struct {
	Error   *DeleteFleetsResultUnsuccessfulFleetDeletionsError
	FleetID *string
}

// DeleteFleetsResult - Success
type DeleteFleetsResult struct {
	SuccessfulFleetDeletions   []DeleteFleetsResultSuccessfulFleetDeletions
	UnsuccessfulFleetDeletions []DeleteFleetsResultUnsuccessfulFleetDeletions
}
