/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateUserSettingsRequestBody {
    /**
     * &lt;p&gt;A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. &lt;/p&gt; &lt;p&gt;If you do not specify a client token, one is automatically generated by the AWS SDK.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;
    public CreateUserSettingsRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * Specifies whether the user can copy text from the streaming session to the local device.
     */
    @JsonProperty("copyAllowed")
    public CreateUserSettingsRequestBodyCopyAllowedEnum copyAllowed;
    public CreateUserSettingsRequestBody withCopyAllowed(CreateUserSettingsRequestBodyCopyAllowedEnum copyAllowed) {
        this.copyAllowed = copyAllowed;
        return this;
    }
    
    /**
     * The amount of time that a streaming session remains active after users disconnect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disconnectTimeoutInMinutes")
    public Long disconnectTimeoutInMinutes;
    public CreateUserSettingsRequestBody withDisconnectTimeoutInMinutes(Long disconnectTimeoutInMinutes) {
        this.disconnectTimeoutInMinutes = disconnectTimeoutInMinutes;
        return this;
    }
    
    /**
     * Specifies whether the user can download files from the streaming session to the local device.
     */
    @JsonProperty("downloadAllowed")
    public CreateUserSettingsRequestBodyDownloadAllowedEnum downloadAllowed;
    public CreateUserSettingsRequestBody withDownloadAllowed(CreateUserSettingsRequestBodyDownloadAllowedEnum downloadAllowed) {
        this.downloadAllowed = downloadAllowed;
        return this;
    }
    
    /**
     * The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idleDisconnectTimeoutInMinutes")
    public Long idleDisconnectTimeoutInMinutes;
    public CreateUserSettingsRequestBody withIdleDisconnectTimeoutInMinutes(Long idleDisconnectTimeoutInMinutes) {
        this.idleDisconnectTimeoutInMinutes = idleDisconnectTimeoutInMinutes;
        return this;
    }
    
    /**
     * Specifies whether the user can paste text from the local device to the streaming session.
     */
    @JsonProperty("pasteAllowed")
    public CreateUserSettingsRequestBodyPasteAllowedEnum pasteAllowed;
    public CreateUserSettingsRequestBody withPasteAllowed(CreateUserSettingsRequestBodyPasteAllowedEnum pasteAllowed) {
        this.pasteAllowed = pasteAllowed;
        return this;
    }
    
    /**
     * Specifies whether the user can print to the local device.
     */
    @JsonProperty("printAllowed")
    public CreateUserSettingsRequestBodyPrintAllowedEnum printAllowed;
    public CreateUserSettingsRequestBody withPrintAllowed(CreateUserSettingsRequestBodyPrintAllowedEnum printAllowed) {
        this.printAllowed = printAllowed;
        return this;
    }
    
    /**
     * The tags to add to the user settings resource. A tag is a key-value pair.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public org.openapis.openapi.models.shared.Tag[] tags;
    public CreateUserSettingsRequestBody withTags(org.openapis.openapi.models.shared.Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Specifies whether the user can upload files from the local device to the streaming session.
     */
    @JsonProperty("uploadAllowed")
    public CreateUserSettingsRequestBodyUploadAllowedEnum uploadAllowed;
    public CreateUserSettingsRequestBody withUploadAllowed(CreateUserSettingsRequestBodyUploadAllowedEnum uploadAllowed) {
        this.uploadAllowed = uploadAllowed;
        return this;
    }
    
}
