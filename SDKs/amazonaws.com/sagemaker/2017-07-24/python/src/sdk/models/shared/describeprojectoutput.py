"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import projectstatus_enum as shared_projectstatus_enum
from ..shared import servicecatalogprovisionedproductdetails as shared_servicecatalogprovisionedproductdetails
from ..shared import servicecatalogprovisioningdetails as shared_servicecatalogprovisioningdetails
from ..shared import usercontext as shared_usercontext
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeProjectOutput:
    r"""Success"""
    
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    project_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectArn') }})  
    project_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectId') }})  
    project_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectName') }})  
    project_status: shared_projectstatus_enum.ProjectStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectStatus') }})  
    service_catalog_provisioning_details: shared_servicecatalogprovisioningdetails.ServiceCatalogProvisioningDetails = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceCatalogProvisioningDetails') }})  
    created_by: Optional[shared_usercontext.UserContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedBy'), 'exclude': lambda f: f is None }})
    r"""Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card."""  
    last_modified_by: Optional[shared_usercontext.UserContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastModifiedBy'), 'exclude': lambda f: f is None }})
    r"""Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card."""  
    last_modified_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastModifiedTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    project_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectDescription'), 'exclude': lambda f: f is None }})  
    service_catalog_provisioned_product_details: Optional[shared_servicecatalogprovisionedproductdetails.ServiceCatalogProvisionedProductDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceCatalogProvisionedProductDetails'), 'exclude': lambda f: f is None }})  
    