/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETDescribeReservedDBInstancesActionEnum {
  DescribeReservedDBInstances = "DescribeReservedDBInstances",
}

export enum GETDescribeReservedDBInstancesVersionEnum {
  TwoThousandAndThirteen0212 = "2013-02-12",
}

export class GETDescribeReservedDBInstancesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETDescribeReservedDBInstancesActionEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DBInstanceClass",
  })
  dbInstanceClass?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Duration",
  })
  duration?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Marker",
  })
  marker?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxRecords",
  })
  maxRecords?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MultiAZ",
  })
  multiAZ?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=OfferingType",
  })
  offeringType?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ProductDescription",
  })
  productDescription?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ReservedDBInstanceId",
  })
  reservedDBInstanceId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ReservedDBInstancesOfferingId",
  })
  reservedDBInstancesOfferingId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETDescribeReservedDBInstancesVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETDescribeReservedDBInstancesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
