<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateReplicationConfigurationRequestBody
{
    /**
     * Update replication configuration associate default Application Migration Service Security group request.
     * 
     * @var ?bool $associateDefaultSecurityGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('associateDefaultSecurityGroup')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $associateDefaultSecurityGroup = null;
    
    /**
     * Update replication configuration bandwidth throttling request.
     * 
     * @var ?int $bandwidthThrottling
     */
	#[\JMS\Serializer\Annotation\SerializedName('bandwidthThrottling')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bandwidthThrottling = null;
    
    /**
     * Update replication configuration create Public IP request.
     * 
     * @var ?bool $createPublicIP
     */
	#[\JMS\Serializer\Annotation\SerializedName('createPublicIP')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $createPublicIP = null;
    
    /**
     * Update replication configuration data plane routing request.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum $dataPlaneRouting
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataPlaneRouting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum $dataPlaneRouting = null;
    
    /**
     * Update replication configuration use default large Staging Disk type request.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum $defaultLargeStagingDiskType
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultLargeStagingDiskType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum $defaultLargeStagingDiskType = null;
    
    /**
     * Update replication configuration EBS encryption request.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum $ebsEncryption
     */
	#[\JMS\Serializer\Annotation\SerializedName('ebsEncryption')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum $ebsEncryption = null;
    
    /**
     * Update replication configuration EBS encryption key ARN request.
     * 
     * @var ?string $ebsEncryptionKeyArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('ebsEncryptionKeyArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ebsEncryptionKeyArn = null;
    
    /**
     * Update replication configuration name request.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Update replication configuration replicated disks request.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ReplicationConfigurationReplicatedDisk> $replicatedDisks
     */
	#[\JMS\Serializer\Annotation\SerializedName('replicatedDisks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ReplicationConfigurationReplicatedDisk>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $replicatedDisks = null;
    
    /**
     * Update replication configuration Replication Server instance type request.
     * 
     * @var ?string $replicationServerInstanceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('replicationServerInstanceType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replicationServerInstanceType = null;
    
    /**
     * Update replication configuration Replication Server Security Groups IDs request.
     * 
     * @var ?array<string> $replicationServersSecurityGroupsIDs
     */
	#[\JMS\Serializer\Annotation\SerializedName('replicationServersSecurityGroupsIDs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $replicationServersSecurityGroupsIDs = null;
    
    /**
     * Update replication configuration Source Server ID request.
     * 
     * @var string $sourceServerID
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceServerID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceServerID;
    
    /**
     * Update replication configuration Staging Area subnet request.
     * 
     * @var ?string $stagingAreaSubnetId
     */
	#[\JMS\Serializer\Annotation\SerializedName('stagingAreaSubnetId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stagingAreaSubnetId = null;
    
    /**
     * Update replication configuration Staging Area Tags request.
     * 
     * @var ?array<string, string> $stagingAreaTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('stagingAreaTags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $stagingAreaTags = null;
    
    /**
     * Update replication configuration use dedicated Replication Server request.
     * 
     * @var ?bool $useDedicatedReplicationServer
     */
	#[\JMS\Serializer\Annotation\SerializedName('useDedicatedReplicationServer')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useDedicatedReplicationServer = null;
    
	public function __construct()
	{
		$this->associateDefaultSecurityGroup = null;
		$this->bandwidthThrottling = null;
		$this->createPublicIP = null;
		$this->dataPlaneRouting = null;
		$this->defaultLargeStagingDiskType = null;
		$this->ebsEncryption = null;
		$this->ebsEncryptionKeyArn = null;
		$this->name = null;
		$this->replicatedDisks = null;
		$this->replicationServerInstanceType = null;
		$this->replicationServersSecurityGroupsIDs = null;
		$this->sourceServerID = "";
		$this->stagingAreaSubnetId = null;
		$this->stagingAreaTags = null;
		$this->useDedicatedReplicationServer = null;
	}
}
