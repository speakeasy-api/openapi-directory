// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FrameworkEnum string

const (
	FrameworkEnumTensorflow FrameworkEnum = "TENSORFLOW"
	FrameworkEnumKeras      FrameworkEnum = "KERAS"
	FrameworkEnumMxnet      FrameworkEnum = "MXNET"
	FrameworkEnumOnnx       FrameworkEnum = "ONNX"
	FrameworkEnumPytorch    FrameworkEnum = "PYTORCH"
	FrameworkEnumXgboost    FrameworkEnum = "XGBOOST"
	FrameworkEnumTflite     FrameworkEnum = "TFLITE"
	FrameworkEnumDarknet    FrameworkEnum = "DARKNET"
	FrameworkEnumSklearn    FrameworkEnum = "SKLEARN"
)

func (e FrameworkEnum) ToPointer() *FrameworkEnum {
	return &e
}

func (e *FrameworkEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TENSORFLOW":
		fallthrough
	case "KERAS":
		fallthrough
	case "MXNET":
		fallthrough
	case "ONNX":
		fallthrough
	case "PYTORCH":
		fallthrough
	case "XGBOOST":
		fallthrough
	case "TFLITE":
		fallthrough
	case "DARKNET":
		fallthrough
	case "SKLEARN":
		*e = FrameworkEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FrameworkEnum: %v", v)
	}
}
