/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A permission for a file.
 */
export class PermissionInput extends SpeakeasyBase {
  /**
   * Additional roles for this user. Only commenter is currently allowed, though more may be supported in the future.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalRoles" })
  additionalRoles?: string[];

  /**
   * Deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authKey" })
  authKey?: string;

  /**
   * Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  /**
   * The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  /**
   * The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailAddress" })
  emailAddress?: string;

  /**
   * The ETag of the permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions:
   *
   * @remarks
   * - They cannot be set on shared drive items
   * - They can only be set on user and group permissions
   * - The date must be in the future
   * - The date cannot be more than a year in the future
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expirationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationDate?: Date;

  /**
   * The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * This is always drive#permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The name for this permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that are not in a shared drive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pendingOwner" })
  pendingOwner?: boolean;

  /**
   * A link to the profile photo, if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoLink" })
  photoLink?: string;

  /**
   * The primary role for this user. While new values may be supported in the future, the following are currently allowed:
   *
   * @remarks
   * - owner
   * - organizer
   * - fileOrganizer
   * - writer
   * - reader
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: string;

  /**
   * A link back to this permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * The account type. Allowed values are:
   *
   * @remarks
   * - user
   * - group
   * - domain
   * - anyone
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;

  /**
   * Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "view" })
  view?: string;

  /**
   * Whether the link is required for this permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "withLink" })
  withLink?: boolean;
}

export class PermissionPermissionDetails extends SpeakeasyBase {
  /**
   * Additional roles for this user. Only commenter is currently possible, though more may be supported in the future.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalRoles" })
  additionalRoles?: string[];

  /**
   * Whether this permission is inherited. This field is always populated. This is an output-only field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inherited" })
  inherited?: boolean;

  /**
   * The ID of the item from which this permission is inherited. This is an output-only field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inheritedFrom" })
  inheritedFrom?: string;

  /**
   * The permission type for this user. While new values may be added in future, the following are currently possible:
   *
   * @remarks
   * - file
   * - member
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissionType" })
  permissionType?: string;

  /**
   * The primary role for this user. While new values may be added in the future, the following are currently possible:
   *
   * @remarks
   * - organizer
   * - fileOrganizer
   * - writer
   * - reader
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: string;
}

export class PermissionTeamDrivePermissionDetails extends SpeakeasyBase {
  /**
   * Deprecated - use permissionDetails/additionalRoles instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalRoles" })
  additionalRoles?: string[];

  /**
   * Deprecated - use permissionDetails/inherited instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inherited" })
  inherited?: boolean;

  /**
   * Deprecated - use permissionDetails/inheritedFrom instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inheritedFrom" })
  inheritedFrom?: string;

  /**
   * Deprecated - use permissionDetails/role instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: string;

  /**
   * Deprecated - use permissionDetails/permissionType instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "teamDrivePermissionType" })
  teamDrivePermissionType?: string;
}

/**
 * A permission for a file.
 */
export class Permission extends SpeakeasyBase {
  /**
   * Additional roles for this user. Only commenter is currently allowed, though more may be supported in the future.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalRoles" })
  additionalRoles?: string[];

  /**
   * Deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authKey" })
  authKey?: string;

  /**
   * Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  /**
   * The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  /**
   * The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailAddress" })
  emailAddress?: string;

  /**
   * The ETag of the permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions:
   *
   * @remarks
   * - They cannot be set on shared drive items
   * - They can only be set on user and group permissions
   * - The date must be in the future
   * - The date cannot be more than a year in the future
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expirationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationDate?: Date;

  /**
   * The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * This is always drive#permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The name for this permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that are not in a shared drive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pendingOwner" })
  pendingOwner?: boolean;

  /**
   * Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.
   */
  @SpeakeasyMetadata({ elemType: PermissionPermissionDetails })
  @Expose({ name: "permissionDetails" })
  @Type(() => PermissionPermissionDetails)
  permissionDetails?: PermissionPermissionDetails[];

  /**
   * A link to the profile photo, if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoLink" })
  photoLink?: string;

  /**
   * The primary role for this user. While new values may be supported in the future, the following are currently allowed:
   *
   * @remarks
   * - owner
   * - organizer
   * - fileOrganizer
   * - writer
   * - reader
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: string;

  /**
   * A link back to this permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Deprecated - use permissionDetails instead.
   */
  @SpeakeasyMetadata({ elemType: PermissionTeamDrivePermissionDetails })
  @Expose({ name: "teamDrivePermissionDetails" })
  @Type(() => PermissionTeamDrivePermissionDetails)
  teamDrivePermissionDetails?: PermissionTeamDrivePermissionDetails[];

  /**
   * The account type. Allowed values are:
   *
   * @remarks
   * - user
   * - group
   * - domain
   * - anyone
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;

  /**
   * Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "view" })
  view?: string;

  /**
   * Whether the link is required for this permission.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "withLink" })
  withLink?: boolean;
}
