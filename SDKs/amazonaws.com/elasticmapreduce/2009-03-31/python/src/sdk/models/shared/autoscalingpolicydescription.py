"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autoscalingpolicystatus as shared_autoscalingpolicystatus
from ..shared import scalingconstraints as shared_scalingconstraints
from ..shared import scalingrule as shared_scalingrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoScalingPolicyDescription:
    r"""An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster. The automatic scaling policy defines how an instance group dynamically adds and terminates EC2 instances in response to the value of a CloudWatch metric. See <a>PutAutoScalingPolicy</a>."""
    
    constraints: Optional[shared_scalingconstraints.ScalingConstraints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Constraints'), 'exclude': lambda f: f is None }})  
    rules: Optional[list[shared_scalingrule.ScalingRule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Rules'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_autoscalingpolicystatus.AutoScalingPolicyStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    