// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MembershipRoleRestrictionEvaluationStateEnum - Output only. The current state of the restriction
type MembershipRoleRestrictionEvaluationStateEnum string

const (
	MembershipRoleRestrictionEvaluationStateEnumStateUnspecified MembershipRoleRestrictionEvaluationStateEnum = "STATE_UNSPECIFIED"
	MembershipRoleRestrictionEvaluationStateEnumCompliant        MembershipRoleRestrictionEvaluationStateEnum = "COMPLIANT"
	MembershipRoleRestrictionEvaluationStateEnumForwardCompliant MembershipRoleRestrictionEvaluationStateEnum = "FORWARD_COMPLIANT"
	MembershipRoleRestrictionEvaluationStateEnumNonCompliant     MembershipRoleRestrictionEvaluationStateEnum = "NON_COMPLIANT"
	MembershipRoleRestrictionEvaluationStateEnumEvaluating       MembershipRoleRestrictionEvaluationStateEnum = "EVALUATING"
)

func (e *MembershipRoleRestrictionEvaluationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "COMPLIANT":
		fallthrough
	case "FORWARD_COMPLIANT":
		fallthrough
	case "NON_COMPLIANT":
		fallthrough
	case "EVALUATING":
		*e = MembershipRoleRestrictionEvaluationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MembershipRoleRestrictionEvaluationStateEnum: %s", s)
	}
}

// MembershipRoleRestrictionEvaluation - The evaluated state of this restriction.
type MembershipRoleRestrictionEvaluation struct {
	// Output only. The current state of the restriction
	State *MembershipRoleRestrictionEvaluationStateEnum `json:"state,omitempty"`
}
