"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aclentry as shared_aclentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IPConfiguration:
    r"""IP Management configuration."""
    
    allocated_ip_range: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allocatedIpRange'), 'exclude': lambda f: f is None }})
    r"""The name of the allocated ip range for the private ip Cloud SQL instance. For example: \\"google-managed-services-default\\". If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`"""  
    authorized_networks: Optional[list[shared_aclentry.ACLEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizedNetworks'), 'exclude': lambda f: f is None }})
    r"""The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: `157.197.200.0/24`)."""  
    enable_private_path_for_google_cloud_services: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enablePrivatePathForGoogleCloudServices'), 'exclude': lambda f: f is None }})
    r"""Controls connectivity to private IP instances from Google services, such as BigQuery."""  
    ipv4_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipv4Enabled'), 'exclude': lambda f: f is None }})
    r"""Whether the instance is assigned a public IP address or not."""  
    private_network: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privateNetwork'), 'exclude': lambda f: f is None }})
    r"""The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set."""  
    require_ssl: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requireSsl'), 'exclude': lambda f: f is None }})
    r"""Whether SSL connections over IP are enforced or not."""  
    