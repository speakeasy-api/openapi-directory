/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConnectivityTestInput - A Connectivity Test for a network reachability analysis.
 */
public class ConnectivityTestInput {
    /**
     * The user-supplied description of the Connectivity Test. Maximum of 512 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ConnectivityTestInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Source or destination of the Connectivity Test.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destination")
    public EndpointInput destination;

    public ConnectivityTestInput withDestination(EndpointInput destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * Resource labels to represent user-provided metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public ConnectivityTestInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Required. Unique name of the resource using the form: `projects/{project_id}/locations/global/connectivityTests/{test}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ConnectivityTestInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Results of active probing from the last run of the test.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("probingDetails")
    public ProbingDetails probingDetails;

    public ConnectivityTestInput withProbingDetails(ProbingDetails probingDetails) {
        this.probingDetails = probingDetails;
        return this;
    }
    
    /**
     * IP Protocol of the test. When not provided, "TCP" is assumed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public String protocol;

    public ConnectivityTestInput withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * Results of the configuration analysis from the last run of the test.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reachabilityDetails")
    public ReachabilityDetails reachabilityDetails;

    public ConnectivityTestInput withReachabilityDetails(ReachabilityDetails reachabilityDetails) {
        this.reachabilityDetails = reachabilityDetails;
        return this;
    }
    
    /**
     * Other projects that may be relevant for reachability analysis. This is applicable to scenarios where a test can cross project boundaries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedProjects")
    public String[] relatedProjects;

    public ConnectivityTestInput withRelatedProjects(String[] relatedProjects) {
        this.relatedProjects = relatedProjects;
        return this;
    }
    
    /**
     * Source or destination of the Connectivity Test.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public EndpointInput source;

    public ConnectivityTestInput withSource(EndpointInput source) {
        this.source = source;
        return this;
    }
    
    public ConnectivityTestInput(){}
}
