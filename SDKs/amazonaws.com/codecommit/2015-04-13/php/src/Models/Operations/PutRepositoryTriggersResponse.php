<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PutRepositoryTriggersResponse
{
	
    public string $contentType;
    
    /**
     * EncryptionIntegrityChecksFailedException
     * 
     * @var mixed $encryptionIntegrityChecksFailedException
     */
	
    public mixed $encryptionIntegrityChecksFailedException = null;
    
    /**
     * EncryptionKeyAccessDeniedException
     * 
     * @var mixed $encryptionKeyAccessDeniedException
     */
	
    public mixed $encryptionKeyAccessDeniedException = null;
    
    /**
     * EncryptionKeyDisabledException
     * 
     * @var mixed $encryptionKeyDisabledException
     */
	
    public mixed $encryptionKeyDisabledException = null;
    
    /**
     * EncryptionKeyNotFoundException
     * 
     * @var mixed $encryptionKeyNotFoundException
     */
	
    public mixed $encryptionKeyNotFoundException = null;
    
    /**
     * EncryptionKeyUnavailableException
     * 
     * @var mixed $encryptionKeyUnavailableException
     */
	
    public mixed $encryptionKeyUnavailableException = null;
    
    /**
     * InvalidRepositoryNameException
     * 
     * @var mixed $invalidRepositoryNameException
     */
	
    public mixed $invalidRepositoryNameException = null;
    
    /**
     * InvalidRepositoryTriggerBranchNameException
     * 
     * @var mixed $invalidRepositoryTriggerBranchNameException
     */
	
    public mixed $invalidRepositoryTriggerBranchNameException = null;
    
    /**
     * InvalidRepositoryTriggerCustomDataException
     * 
     * @var mixed $invalidRepositoryTriggerCustomDataException
     */
	
    public mixed $invalidRepositoryTriggerCustomDataException = null;
    
    /**
     * InvalidRepositoryTriggerDestinationArnException
     * 
     * @var mixed $invalidRepositoryTriggerDestinationArnException
     */
	
    public mixed $invalidRepositoryTriggerDestinationArnException = null;
    
    /**
     * InvalidRepositoryTriggerEventsException
     * 
     * @var mixed $invalidRepositoryTriggerEventsException
     */
	
    public mixed $invalidRepositoryTriggerEventsException = null;
    
    /**
     * InvalidRepositoryTriggerNameException
     * 
     * @var mixed $invalidRepositoryTriggerNameException
     */
	
    public mixed $invalidRepositoryTriggerNameException = null;
    
    /**
     * InvalidRepositoryTriggerRegionException
     * 
     * @var mixed $invalidRepositoryTriggerRegionException
     */
	
    public mixed $invalidRepositoryTriggerRegionException = null;
    
    /**
     * MaximumBranchesExceededException
     * 
     * @var mixed $maximumBranchesExceededException
     */
	
    public mixed $maximumBranchesExceededException = null;
    
    /**
     * MaximumRepositoryTriggersExceededException
     * 
     * @var mixed $maximumRepositoryTriggersExceededException
     */
	
    public mixed $maximumRepositoryTriggersExceededException = null;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PutRepositoryTriggersOutput $putRepositoryTriggersOutput
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\PutRepositoryTriggersOutput $putRepositoryTriggersOutput = null;
    
    /**
     * RepositoryDoesNotExistException
     * 
     * @var mixed $repositoryDoesNotExistException
     */
	
    public mixed $repositoryDoesNotExistException = null;
    
    /**
     * RepositoryTriggerBranchNameListRequiredException
     * 
     * @var mixed $repositoryTriggerBranchNameListRequiredException
     */
	
    public mixed $repositoryTriggerBranchNameListRequiredException = null;
    
    /**
     * RepositoryTriggerDestinationArnRequiredException
     * 
     * @var mixed $repositoryTriggerDestinationArnRequiredException
     */
	
    public mixed $repositoryTriggerDestinationArnRequiredException = null;
    
    /**
     * RepositoryTriggerEventsListRequiredException
     * 
     * @var mixed $repositoryTriggerEventsListRequiredException
     */
	
    public mixed $repositoryTriggerEventsListRequiredException = null;
    
    /**
     * RepositoryTriggerNameRequiredException
     * 
     * @var mixed $repositoryTriggerNameRequiredException
     */
	
    public mixed $repositoryTriggerNameRequiredException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * RepositoryNameRequiredException
     * 
     * @var mixed $repositoryNameRequiredException
     */
	
    public mixed $repositoryNameRequiredException = null;
    
    /**
     * RepositoryTriggersListRequiredException
     * 
     * @var mixed $repositoryTriggersListRequiredException
     */
	
    public mixed $repositoryTriggersListRequiredException = null;
    
	public function __construct()
	{
		$this->contentType = "";
		$this->encryptionIntegrityChecksFailedException = null;
		$this->encryptionKeyAccessDeniedException = null;
		$this->encryptionKeyDisabledException = null;
		$this->encryptionKeyNotFoundException = null;
		$this->encryptionKeyUnavailableException = null;
		$this->invalidRepositoryNameException = null;
		$this->invalidRepositoryTriggerBranchNameException = null;
		$this->invalidRepositoryTriggerCustomDataException = null;
		$this->invalidRepositoryTriggerDestinationArnException = null;
		$this->invalidRepositoryTriggerEventsException = null;
		$this->invalidRepositoryTriggerNameException = null;
		$this->invalidRepositoryTriggerRegionException = null;
		$this->maximumBranchesExceededException = null;
		$this->maximumRepositoryTriggersExceededException = null;
		$this->putRepositoryTriggersOutput = null;
		$this->repositoryDoesNotExistException = null;
		$this->repositoryTriggerBranchNameListRequiredException = null;
		$this->repositoryTriggerDestinationArnRequiredException = null;
		$this->repositoryTriggerEventsListRequiredException = null;
		$this->repositoryTriggerNameRequiredException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->repositoryNameRequiredException = null;
		$this->repositoryTriggersListRequiredException = null;
	}
}
