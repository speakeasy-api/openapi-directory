"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SupportingEntityCapability:
    
    allowed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the supporting entity capability is allowed.
    
    If a supporting entity is allowed but its parent legal entity is not, it means there are other supporting entities that failed validation.
    
    **The allowed supporting entity can still be used**
    """  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Supporting entity reference"""  
    requested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requested'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the supporting entity capability is requested."""  
    verification_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verificationStatus'), 'exclude': lambda f: f is None }})
    r"""The status of the verification checks for the supporting entity capability.
    
    Possible values:
    
    * **pending**: Adyen is running the verification.
    
    * **invalid**: The verification failed. Check if the `errors` array contains more information.
    
    * **valid**: The verification has been successfully completed.
    
    * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
    """  
    