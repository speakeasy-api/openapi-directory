"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RatingTypeEnum(str, Enum):
    r"""The type of the rating."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    OVERALL = 'OVERALL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Rating:
    r"""A rating within a vacation rentals Listing. NEXT ID: 4"""
    
    rating_scale: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ratingScale'), 'exclude': lambda f: f is None }})
    r"""Maximum rating possible."""  
    score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score'), 'exclude': lambda f: f is None }})
    r"""The rating score. (e.g. 8.5)"""  
    type: Optional[RatingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the rating."""  
    