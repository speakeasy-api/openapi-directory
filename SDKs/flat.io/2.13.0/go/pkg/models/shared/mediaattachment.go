// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MediaAttachmentTypeEnum - The type of the assignment resolved:
// * `rich`, `photo`, `video` are attachment types that are automatically resolved from a `link` attachment.
// * A `flat` attachment is a score document where the unique identifier will be specified in the `score` property. Its sharing mode will be provided in the `sharingMode` property.
type MediaAttachmentTypeEnum string

const (
	MediaAttachmentTypeEnumRich        MediaAttachmentTypeEnum = "rich"
	MediaAttachmentTypeEnumPhoto       MediaAttachmentTypeEnum = "photo"
	MediaAttachmentTypeEnumVideo       MediaAttachmentTypeEnum = "video"
	MediaAttachmentTypeEnumLink        MediaAttachmentTypeEnum = "link"
	MediaAttachmentTypeEnumFlat        MediaAttachmentTypeEnum = "flat"
	MediaAttachmentTypeEnumGoogleDrive MediaAttachmentTypeEnum = "googleDrive"
	MediaAttachmentTypeEnumWorksheet   MediaAttachmentTypeEnum = "worksheet"
	MediaAttachmentTypeEnumPerformance MediaAttachmentTypeEnum = "performance"
)

func (e *MediaAttachmentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rich":
		fallthrough
	case "photo":
		fallthrough
	case "video":
		fallthrough
	case "link":
		fallthrough
	case "flat":
		fallthrough
	case "googleDrive":
		fallthrough
	case "worksheet":
		fallthrough
	case "performance":
		*e = MediaAttachmentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MediaAttachmentTypeEnum: %s", s)
	}
}

// MediaAttachment - Media attachment. The API will automatically resolve the details, oEmbed,
// and media available if possible and return them in this object
type MediaAttachment struct {
	// The resolved author name of the attachment
	AuthorName *string `json:"authorName,omitempty"`
	// The resolved author url of the attachment
	AuthorURL *string `json:"authorUrl,omitempty"`
	// The resolved description of the attachment
	Description *string `json:"description,omitempty"`
	// The ID of the Google Drive File
	GoogleDriveFileID *string `json:"googleDriveFileId,omitempty"`
	// If the attachment type is `rich` or `video`, the HTML code of the
	// media to display
	//
	HTML *string `json:"html,omitempty"`
	// If the `html` is available, the height of the widget
	HTMLHeight *string `json:"htmlHeight,omitempty"`
	// If the `html` is available, the width of the widget
	HTMLWidth *string `json:"htmlWidth,omitempty"`
	// The URL of the icon
	IconURL *string `json:"iconUrl,omitempty"`
	// To be used with a score attached in `sharingMode` `copy` (score used as template). If true, students won't be able to change the original notes of the template.
	LockScoreTemplate *bool `json:"lockScoreTemplate,omitempty"`
	// The mine type of the file
	MimeType *string `json:"mimeType,omitempty"`
	// An unique revision identifier of a score
	Revision *string `json:"revision,omitempty"`
	// An unique Flat score identifier
	Score *string `json:"score,omitempty"`
	// The sharing mode of the score for classes post and assignments
	SharingMode *MediaScoreSharingModeEnum `json:"sharingMode,omitempty"`
	// If the `thumbnailUrl` is available, the width of the thumbnail
	//
	ThumbnailHeight *int64 `json:"thumbnailHeight,omitempty"`
	// If the attachment type is `rich`, `video`, `photo` or `link`, a
	// displayable thumbnail for this attachment
	//
	ThumbnailURL *string `json:"thumbnailUrl,omitempty"`
	// If the `thumbnailUrl` is available, the width of the thumbnail
	//
	ThumbnailWidth *int64 `json:"thumbnailWidth,omitempty"`
	// The resolved title of the attachment
	Title *string `json:"title,omitempty"`
	// A unique track identifier
	Track *string `json:"track,omitempty"`
	// The type of the assignment resolved:
	// * `rich`, `photo`, `video` are attachment types that are automatically resolved from a `link` attachment.
	// * A `flat` attachment is a score document where the unique identifier will be specified in the `score` property. Its sharing mode will be provided in the `sharingMode` property.
	//
	Type *MediaAttachmentTypeEnum `json:"type,omitempty"`
	// The url of the attachment
	URL *string `json:"url,omitempty"`
	// An unique worksheet identifier
	Worksheet *string `json:"worksheet,omitempty"`
}
