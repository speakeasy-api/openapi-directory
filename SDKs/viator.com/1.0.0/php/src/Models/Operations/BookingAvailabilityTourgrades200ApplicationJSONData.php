<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class BookingAvailabilityTourgrades200ApplicationJSONData
{
    /**
     * **array** of age band objects describing the age bands and respective passenger counts allowed to book *this* tour grade; `null` if `ageBandsRequired` is filled and `available` is `false`
     * 
     * @var ?array<mixed> $ageBands
     */
	#[\JMS\Serializer\Annotation\SerializedName('ageBands')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ageBands = null;
    
    /**
     * **array of arrays** of age band objects describing the traveler mixes eligible to book *this* tour grade; `null` if `ageBands` is filled and `available` is `true`
     * 
     * - **note**: multiple objects; structure will depend on available tour grades â€“ see response sample for an example, but the exact result you receive will differ
     * 
     * 
     * @var ?array<array<\OpenAPI\OpenAPI\Models\Operations\BookingAvailabilityTourgrades200ApplicationJSONDataAgeBandsRequired>> $ageBandsRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('ageBandsRequired')]
    #[\JMS\Serializer\Annotation\Type('array<array<OpenAPI\OpenAPI\Models\Operations\BookingAvailabilityTourgrades200ApplicationJSONDataAgeBandsRequired>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ageBandsRequired = null;
    
    /**
     * **indicator** - `true` if this tour grade is available to be booked according to the traveler mix specified
     * 
     * @var ?bool $available
     */
	#[\JMS\Serializer\Annotation\SerializedName('available')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $available = null;
    
    /**
     * **date** on which *this* tour grade operates
     * 
     * @var ?string $bookingDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookingDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bookingDate = null;
    
    /**
     * **currency code for the specified currency** (will be `'ERROR'` if `available` is `false`)
     * 
     * @var ?string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currencyCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currencyCode = null;
    
    /**
     * **language code for standard langauge** for *this* product
     * 
     * @var ?string $defaultLanguageCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultLanguageCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultLanguageCode = null;
    
    /**
     * **alphanumeric identifier** of *this* tour grade
     * 
     * @var ?string $gradeCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('gradeCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gradeCode = null;
    
    /**
     * **time** of *this* product
     * 
     * @var ?string $gradeDepartureTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('gradeDepartureTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gradeDepartureTime = null;
    
    /**
     * **natural-language description** of the tour grade
     * 
     * @var ?string $gradeDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('gradeDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gradeDescription = null;
    
    /**
     * **natural-language title** of the tour grade
     * 
     * @var ?string $gradeTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('gradeTitle')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gradeTitle = null;
    
    /**
     * **object** detailing language services available for *this* product** (will be `null` if `available` is `false`)
     * 
     * @var ?array<string, mixed> $langServices
     */
	#[\JMS\Serializer\Annotation\SerializedName('langServices')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $langServices = null;
    
    /**
     * **numeric merchant net rate** for *this* tour grade
     * 
     * **Note**: will be `0` if `available` is `false`
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     * 
     * @var ?float $merchantNetPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantNetPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $merchantNetPrice = null;
    
    /**
     * **currency-formatted merchant net rate** for *this* tour grade
     * 
     * **Note**: will be empty if `available` is `false`
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     * 
     * @var ?string $merchantNetPriceFormatted
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantNetPriceFormatted')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantNetPriceFormatted = null;
    
    /**
     * **numeric suggested retail price** for *this* tour grade
     * 
     * **Note**: will be `0` if `available` is `false`
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     * 
     * @var ?float $retailPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('retailPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $retailPrice = null;
    
    /**
     * **currency-formatted suggested retail price** for *this* tour grade
     * 
     * **Note**: (will be '' if `available` is `false`)
     * - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
     * 
     * 
     * @var ?string $retailPriceFormatted
     */
	#[\JMS\Serializer\Annotation\SerializedName('retailPriceFormatted')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $retailPriceFormatted = null;
    
    /**
     * **sort order** for *this* tour grade availability object
     * 
     * @var ?int $sortOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('sortOrder')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sortOrder = null;
    
    /**
     * **enum specifier of reason for product unavailability** (will be `null` if `available` is `true`)
     * 
     * @var ?string $unavailableReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('unavailableReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $unavailableReason = null;
    
	public function __construct()
	{
		$this->ageBands = null;
		$this->ageBandsRequired = null;
		$this->available = null;
		$this->bookingDate = null;
		$this->currencyCode = null;
		$this->defaultLanguageCode = null;
		$this->gradeCode = null;
		$this->gradeDepartureTime = null;
		$this->gradeDescription = null;
		$this->gradeTitle = null;
		$this->langServices = null;
		$this->merchantNetPrice = null;
		$this->merchantNetPriceFormatted = null;
		$this->retailPrice = null;
		$this->retailPriceFormatted = null;
		$this->sortOrder = null;
		$this->unavailableReason = null;
	}
}
