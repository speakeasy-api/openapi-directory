"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import automerging as shared_automerging
from ..shared import exportingconfig as shared_exportingconfig
from ..shared import jobschedule as shared_jobschedule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MatchingResponse:
    r"""The flag that enables the matching process of duplicate profiles."""
    
    auto_merging: Optional[shared_automerging.AutoMerging] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoMerging'), 'exclude': lambda f: f is None }})  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Enabled'), 'exclude': lambda f: f is None }})  
    exporting_config: Optional[shared_exportingconfig.ExportingConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExportingConfig'), 'exclude': lambda f: f is None }})  
    job_schedule: Optional[shared_jobschedule.JobSchedule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JobSchedule'), 'exclude': lambda f: f is None }})  
    