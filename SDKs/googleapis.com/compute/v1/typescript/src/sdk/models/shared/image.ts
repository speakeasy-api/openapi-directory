/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomerEncryptionKey } from "./customerencryptionkey";
import { DeprecationStatus } from "./deprecationstatus";
import { GuestOsFeature } from "./guestosfeature";
import { InitialStateConfig } from "./initialstateconfig";
import { Expose, Type } from "class-transformer";

/**
 * The architecture of the image. Valid values are ARM64 or X86_64.
 */
export enum ImageArchitectureEnum {
  ArchitectureUnspecified = "ARCHITECTURE_UNSPECIFIED",
  Arm64 = "ARM64",
  X8664 = "X86_64",
}

/**
 * The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
 */
export enum ImageRawDiskContainerTypeEnum {
  Tar = "TAR",
}

/**
 * The parameters of the raw disk image.
 */
export class ImageRawDisk extends SpeakeasyBase {
  /**
   * The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "containerType" })
  containerType?: ImageRawDiskContainerTypeEnum;

  /**
   * [Deprecated] This field is deprecated. An optional SHA1 checksum of the disk image before unpackaging provided by the client when the disk image is created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sha1Checksum" })
  sha1Checksum?: string;

  /**
   * The full Google Cloud Storage URL where the raw disk image archive is stored. The following are valid formats for the URL: - https://storage.googleapis.com/bucket_name/image_archive_name - https://storage.googleapis.com/bucket_name/folder_name/ image_archive_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;
}

/**
 * The type of the image used to create this disk. The default and only valid value is RAW.
 */
export enum ImageSourceTypeEnum {
  Raw = "RAW",
}

/**
 * [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
 */
export enum ImageStatusEnum {
  Deleting = "DELETING",
  Failed = "FAILED",
  Pending = "PENDING",
  Ready = "READY",
}

/**
 * Represents an Image resource. You can use images to create boot disks for your VM instances. For more information, read Images.
 */
export class Image extends SpeakeasyBase {
  /**
   * The architecture of the image. Valid values are ARM64 or X86_64.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "architecture" })
  architecture?: ImageArchitectureEnum;

  /**
   * Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archiveSizeBytes" })
  archiveSizeBytes?: string;

  /**
   * [Output Only] Creation timestamp in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTimestamp" })
  creationTimestamp?: string;

  /**
   * Deprecation status for a public resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprecated" })
  @Type(() => DeprecationStatus)
  deprecated?: DeprecationStatus;

  /**
   * An optional description of this resource. Provide this property when you create the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Size of the image when restored onto a persistent disk (in GB).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "diskSizeGb" })
  diskSizeGb?: string;

  /**
   * The name of the image family to which this image belongs. The image family name can be from a publicly managed image family provided by Compute Engine, or from a custom image family you create. For example, centos-stream-9 is a publicly available image family. For more information, see Image family best practices. When creating disks, you can specify an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "family" })
  family?: string;

  /**
   * A list of features to enable on the guest operating system. Applicable only for bootable images. To see a list of available options, see the guestOSfeatures[].type parameter.
   */
  @SpeakeasyMetadata({ elemType: GuestOsFeature })
  @Expose({ name: "guestOsFeatures" })
  @Type(() => GuestOsFeature)
  guestOsFeatures?: GuestOsFeature[];

  /**
   * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imageEncryptionKey" })
  @Type(() => CustomerEncryptionKey)
  imageEncryptionKey?: CustomerEncryptionKey;

  /**
   * [Output Only] Type of the resource. Always compute#image for images.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labelFingerprint" })
  labelFingerprint?: string;

  /**
   * Labels to apply to this image. These can be later modified by the setLabels method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Integer license codes indicating which licenses are attached to this image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "licenseCodes" })
  licenseCodes?: string[];

  /**
   * Any applicable license URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "licenses" })
  licenses?: string[];

  /**
   * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The parameters of the raw disk image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawDisk" })
  @Type(() => ImageRawDisk)
  rawDisk?: ImageRawDisk;

  /**
   * [Output Only] Reserved for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "satisfiesPzs" })
  satisfiesPzs?: boolean;

  /**
   * [Output Only] Server-defined URL for the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Initial State for shielded instance, these are public keys which are safe to store in public
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shieldedInstanceInitialState" })
  @Type(() => InitialStateConfig)
  shieldedInstanceInitialState?: InitialStateConfig;

  /**
   * URL of the source disk used to create this image. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceDisk" })
  sourceDisk?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceDiskEncryptionKey" })
  @Type(() => CustomerEncryptionKey)
  sourceDiskEncryptionKey?: CustomerEncryptionKey;

  /**
   * [Output Only] The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceDiskId" })
  sourceDiskId?: string;

  /**
   * URL of the source image used to create this image. The following are valid formats for the URL: - https://www.googleapis.com/compute/v1/projects/project_id/global/ images/image_name - projects/project_id/global/images/image_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceImage" })
  sourceImage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceImageEncryptionKey" })
  @Type(() => CustomerEncryptionKey)
  sourceImageEncryptionKey?: CustomerEncryptionKey;

  /**
   * [Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceImageId" })
  sourceImageId?: string;

  /**
   * URL of the source snapshot used to create this image. The following are valid formats for the URL: - https://www.googleapis.com/compute/v1/projects/project_id/global/ snapshots/snapshot_name - projects/project_id/global/snapshots/snapshot_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceSnapshot" })
  sourceSnapshot?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceSnapshotEncryptionKey" })
  @Type(() => CustomerEncryptionKey)
  sourceSnapshotEncryptionKey?: CustomerEncryptionKey;

  /**
   * [Output Only] The ID value of the snapshot used to create this image. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given snapshot name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceSnapshotId" })
  sourceSnapshotId?: string;

  /**
   * The type of the image used to create this disk. The default and only valid value is RAW.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceType" })
  sourceType?: ImageSourceTypeEnum;

  /**
   * [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ImageStatusEnum;

  /**
   * Cloud Storage bucket storage location of the image (regional or multi-regional).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storageLocations" })
  storageLocations?: string[];
}
