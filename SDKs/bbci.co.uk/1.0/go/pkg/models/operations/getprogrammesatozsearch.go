// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetProgrammesAtoZSearchPathParams struct {
	// Letter to search by, a to z or the string '0-9'
	Letter string `pathParam:"style=simple,explode=false,name=letter"`
}

// GetProgrammesAtoZSearchSortEnum - The sort order of the results.
type GetProgrammesAtoZSearchSortEnum string

const (
	GetProgrammesAtoZSearchSortEnumTitle GetProgrammesAtoZSearchSortEnum = "title"
)

func (e *GetProgrammesAtoZSearchSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "title":
		*e = GetProgrammesAtoZSearchSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProgrammesAtoZSearchSortEnum: %s", s)
	}
}

type GetProgrammesAtoZSearchQueryParams struct {
	// Whether to return all, or available programmes
	Availability shared.AvailabilityEnum `queryParam:"style=form,explode=true,name=availability"`
	// The depth to return child entities.
	InitialChildCount int64 `queryParam:"style=form,explode=true,name=initial_child_count"`
	// The page index.
	Page int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results to return.
	PerPage int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The rights group to limit results to.
	Rights shared.RightsEnum `queryParam:"style=form,explode=true,name=rights"`
	// The sort order of the results.
	Sort GetProgrammesAtoZSearchSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Whether to sort ascending or descending
	SortDirection shared.SortDirectionEnum `queryParam:"style=form,explode=true,name=sort_direction"`
}

type GetProgrammesAtoZSearchRequest struct {
	PathParams  GetProgrammesAtoZSearchPathParams
	QueryParams GetProgrammesAtoZSearchQueryParams
}

type GetProgrammesAtoZSearchResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Default response
	Ibl interface{}
}
