/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AchievementConfiguration - An achievement configuration resource.
 */
public class AchievementConfiguration {
    /**
     * The type of the achievement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("achievementType")
    public AchievementConfigurationAchievementTypeEnum achievementType;

    public AchievementConfiguration withAchievementType(AchievementConfigurationAchievementTypeEnum achievementType) {
        this.achievementType = achievementType;
        return this;
    }
    
    /**
     * An achievement configuration detail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("draft")
    public AchievementConfigurationDetail draft;

    public AchievementConfiguration withDraft(AchievementConfigurationDetail draft) {
        this.draft = draft;
        return this;
    }
    
    /**
     * The ID of the achievement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public AchievementConfiguration withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The initial state of the achievement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialState")
    public AchievementConfigurationInitialStateEnum initialState;

    public AchievementConfiguration withInitialState(AchievementConfigurationInitialStateEnum initialState) {
        this.initialState = initialState;
        return this;
    }
    
    /**
     * Uniquely identifies the type of this resource. Value is always the fixed string `gamesConfiguration#achievementConfiguration`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public AchievementConfiguration withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * An achievement configuration detail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("published")
    public AchievementConfigurationDetail published;

    public AchievementConfiguration withPublished(AchievementConfigurationDetail published) {
        this.published = published;
        return this;
    }
    
    /**
     * Steps to unlock. Only applicable to incremental achievements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stepsToUnlock")
    public Integer stepsToUnlock;

    public AchievementConfiguration withStepsToUnlock(Integer stepsToUnlock) {
        this.stepsToUnlock = stepsToUnlock;
        return this;
    }
    
    /**
     * The token for this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token")
    public String token;

    public AchievementConfiguration withToken(String token) {
        this.token = token;
        return this;
    }
    
    public AchievementConfiguration(){}
}
