// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyDBSubnetGroupActionEnum
type GETModifyDBSubnetGroupActionEnum string

const (
	GETModifyDBSubnetGroupActionEnumModifyDbSubnetGroup GETModifyDBSubnetGroupActionEnum = "ModifyDBSubnetGroup"
)

func (e GETModifyDBSubnetGroupActionEnum) ToPointer() *GETModifyDBSubnetGroupActionEnum {
	return &e
}

func (e *GETModifyDBSubnetGroupActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyDBSubnetGroup":
		*e = GETModifyDBSubnetGroupActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyDBSubnetGroupActionEnum: %v", v)
	}
}

// GETModifyDBSubnetGroupVersionEnum
type GETModifyDBSubnetGroupVersionEnum string

const (
	GETModifyDBSubnetGroupVersionEnumTwoThousandAndThirteen0110 GETModifyDBSubnetGroupVersionEnum = "2013-01-10"
)

func (e GETModifyDBSubnetGroupVersionEnum) ToPointer() *GETModifyDBSubnetGroupVersionEnum {
	return &e
}

func (e *GETModifyDBSubnetGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-10":
		*e = GETModifyDBSubnetGroupVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyDBSubnetGroupVersionEnum: %v", v)
	}
}

type GETModifyDBSubnetGroupRequest struct {
	Action                   GETModifyDBSubnetGroupActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBSubnetGroupDescription *string                           `queryParam:"style=form,explode=true,name=DBSubnetGroupDescription"`
	DBSubnetGroupName        string                            `queryParam:"style=form,explode=true,name=DBSubnetGroupName"`
	SubnetIds                []string                          `queryParam:"style=form,explode=true,name=SubnetIds"`
	Version                  GETModifyDBSubnetGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm            *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyDBSubnetGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
