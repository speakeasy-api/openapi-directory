/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetPlayerSeasonPPAQueryParams {
    /**
     * Conference abbreviation filter
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=conference")
    public String conference;
    public GetPlayerSeasonPPAQueryParams withConference(String conference) {
        this.conference = conference;
        return this;
    }
    
    /**
     * Filter to remove garbage time plays from calculations
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=excludeGarbageTime")
    public Boolean excludeGarbageTime;
    public GetPlayerSeasonPPAQueryParams withExcludeGarbageTime(Boolean excludeGarbageTime) {
        this.excludeGarbageTime = excludeGarbageTime;
        return this;
    }
    
    /**
     * Player id filter
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=playerId")
    public Long playerId;
    public GetPlayerSeasonPPAQueryParams withPlayerId(Long playerId) {
        this.playerId = playerId;
        return this;
    }
    
    /**
     * Position abbreviation filter
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=position")
    public String position;
    public GetPlayerSeasonPPAQueryParams withPosition(String position) {
        this.position = position;
        return this;
    }
    
    /**
     * Team filter
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=team")
    public String team;
    public GetPlayerSeasonPPAQueryParams withTeam(String team) {
        this.team = team;
        return this;
    }
    
    /**
     * Minimum play threshold filter
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=threshold")
    public String threshold;
    public GetPlayerSeasonPPAQueryParams withThreshold(String threshold) {
        this.threshold = threshold;
        return this;
    }
    
    /**
     * Year filter
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=year")
    public Long year;
    public GetPlayerSeasonPPAQueryParams withYear(Long year) {
        this.year = year;
        return this;
    }
    
}
