// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SustainabilityCertificationsBreeamCertificationEnum - BREEAM certification.
type SustainabilityCertificationsBreeamCertificationEnum string

const (
	SustainabilityCertificationsBreeamCertificationEnumBreeamCertificationUnspecified SustainabilityCertificationsBreeamCertificationEnum = "BREEAM_CERTIFICATION_UNSPECIFIED"
	SustainabilityCertificationsBreeamCertificationEnumNoBreeamCertification          SustainabilityCertificationsBreeamCertificationEnum = "NO_BREEAM_CERTIFICATION"
	SustainabilityCertificationsBreeamCertificationEnumBreeamPass                     SustainabilityCertificationsBreeamCertificationEnum = "BREEAM_PASS"
	SustainabilityCertificationsBreeamCertificationEnumBreeamGood                     SustainabilityCertificationsBreeamCertificationEnum = "BREEAM_GOOD"
	SustainabilityCertificationsBreeamCertificationEnumBreeamVeryGood                 SustainabilityCertificationsBreeamCertificationEnum = "BREEAM_VERY_GOOD"
	SustainabilityCertificationsBreeamCertificationEnumBreeamExcellent                SustainabilityCertificationsBreeamCertificationEnum = "BREEAM_EXCELLENT"
	SustainabilityCertificationsBreeamCertificationEnumBreeamOutstanding              SustainabilityCertificationsBreeamCertificationEnum = "BREEAM_OUTSTANDING"
)

func (e SustainabilityCertificationsBreeamCertificationEnum) ToPointer() *SustainabilityCertificationsBreeamCertificationEnum {
	return &e
}

func (e *SustainabilityCertificationsBreeamCertificationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BREEAM_CERTIFICATION_UNSPECIFIED":
		fallthrough
	case "NO_BREEAM_CERTIFICATION":
		fallthrough
	case "BREEAM_PASS":
		fallthrough
	case "BREEAM_GOOD":
		fallthrough
	case "BREEAM_VERY_GOOD":
		fallthrough
	case "BREEAM_EXCELLENT":
		fallthrough
	case "BREEAM_OUTSTANDING":
		*e = SustainabilityCertificationsBreeamCertificationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SustainabilityCertificationsBreeamCertificationEnum: %v", v)
	}
}

// SustainabilityCertificationsBreeamCertificationExceptionEnum - BREEAM certification exception.
type SustainabilityCertificationsBreeamCertificationExceptionEnum string

const (
	SustainabilityCertificationsBreeamCertificationExceptionEnumExceptionUnspecified SustainabilityCertificationsBreeamCertificationExceptionEnum = "EXCEPTION_UNSPECIFIED"
	SustainabilityCertificationsBreeamCertificationExceptionEnumUnderConstruction    SustainabilityCertificationsBreeamCertificationExceptionEnum = "UNDER_CONSTRUCTION"
	SustainabilityCertificationsBreeamCertificationExceptionEnumDependentOnSeason    SustainabilityCertificationsBreeamCertificationExceptionEnum = "DEPENDENT_ON_SEASON"
	SustainabilityCertificationsBreeamCertificationExceptionEnumDependentOnDayOfWeek SustainabilityCertificationsBreeamCertificationExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e SustainabilityCertificationsBreeamCertificationExceptionEnum) ToPointer() *SustainabilityCertificationsBreeamCertificationExceptionEnum {
	return &e
}

func (e *SustainabilityCertificationsBreeamCertificationExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = SustainabilityCertificationsBreeamCertificationExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SustainabilityCertificationsBreeamCertificationExceptionEnum: %v", v)
	}
}

// SustainabilityCertificationsLeedCertificationEnum - LEED certification. Deprecated: this field is no longer populated. LEED certification status is now provided directly by USGBC.
type SustainabilityCertificationsLeedCertificationEnum string

const (
	SustainabilityCertificationsLeedCertificationEnumLeedCertificationUnspecified SustainabilityCertificationsLeedCertificationEnum = "LEED_CERTIFICATION_UNSPECIFIED"
	SustainabilityCertificationsLeedCertificationEnumNoLeedCertification          SustainabilityCertificationsLeedCertificationEnum = "NO_LEED_CERTIFICATION"
	SustainabilityCertificationsLeedCertificationEnumLeedCertified                SustainabilityCertificationsLeedCertificationEnum = "LEED_CERTIFIED"
	SustainabilityCertificationsLeedCertificationEnumLeedSilver                   SustainabilityCertificationsLeedCertificationEnum = "LEED_SILVER"
	SustainabilityCertificationsLeedCertificationEnumLeedGold                     SustainabilityCertificationsLeedCertificationEnum = "LEED_GOLD"
	SustainabilityCertificationsLeedCertificationEnumLeedPlatinum                 SustainabilityCertificationsLeedCertificationEnum = "LEED_PLATINUM"
)

func (e SustainabilityCertificationsLeedCertificationEnum) ToPointer() *SustainabilityCertificationsLeedCertificationEnum {
	return &e
}

func (e *SustainabilityCertificationsLeedCertificationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LEED_CERTIFICATION_UNSPECIFIED":
		fallthrough
	case "NO_LEED_CERTIFICATION":
		fallthrough
	case "LEED_CERTIFIED":
		fallthrough
	case "LEED_SILVER":
		fallthrough
	case "LEED_GOLD":
		fallthrough
	case "LEED_PLATINUM":
		*e = SustainabilityCertificationsLeedCertificationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SustainabilityCertificationsLeedCertificationEnum: %v", v)
	}
}

// SustainabilityCertificationsLeedCertificationExceptionEnum - LEED certification exception. Deprecated: this field is no longer populated. LEED certification status is now provided directly by USGBC.
type SustainabilityCertificationsLeedCertificationExceptionEnum string

const (
	SustainabilityCertificationsLeedCertificationExceptionEnumExceptionUnspecified SustainabilityCertificationsLeedCertificationExceptionEnum = "EXCEPTION_UNSPECIFIED"
	SustainabilityCertificationsLeedCertificationExceptionEnumUnderConstruction    SustainabilityCertificationsLeedCertificationExceptionEnum = "UNDER_CONSTRUCTION"
	SustainabilityCertificationsLeedCertificationExceptionEnumDependentOnSeason    SustainabilityCertificationsLeedCertificationExceptionEnum = "DEPENDENT_ON_SEASON"
	SustainabilityCertificationsLeedCertificationExceptionEnumDependentOnDayOfWeek SustainabilityCertificationsLeedCertificationExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e SustainabilityCertificationsLeedCertificationExceptionEnum) ToPointer() *SustainabilityCertificationsLeedCertificationExceptionEnum {
	return &e
}

func (e *SustainabilityCertificationsLeedCertificationExceptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = SustainabilityCertificationsLeedCertificationExceptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SustainabilityCertificationsLeedCertificationExceptionEnum: %v", v)
	}
}

// SustainabilityCertifications - Sustainability certifications the hotel has been awarded.
type SustainabilityCertifications struct {
	// BREEAM certification.
	BreeamCertification *SustainabilityCertificationsBreeamCertificationEnum `json:"breeamCertification,omitempty"`
	// BREEAM certification exception.
	BreeamCertificationException *SustainabilityCertificationsBreeamCertificationExceptionEnum `json:"breeamCertificationException,omitempty"`
	// The eco certificates awarded to the hotel.
	EcoCertifications []EcoCertification `json:"ecoCertifications,omitempty"`
	// LEED certification. Deprecated: this field is no longer populated. LEED certification status is now provided directly by USGBC.
	LeedCertification *SustainabilityCertificationsLeedCertificationEnum `json:"leedCertification,omitempty"`
	// LEED certification exception. Deprecated: this field is no longer populated. LEED certification status is now provided directly by USGBC.
	LeedCertificationException *SustainabilityCertificationsLeedCertificationExceptionEnum `json:"leedCertificationException,omitempty"`
}
