// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HubContentStatusEnum string

const (
	HubContentStatusEnumAvailable    HubContentStatusEnum = "Available"
	HubContentStatusEnumImporting    HubContentStatusEnum = "Importing"
	HubContentStatusEnumDeleting     HubContentStatusEnum = "Deleting"
	HubContentStatusEnumImportFailed HubContentStatusEnum = "ImportFailed"
	HubContentStatusEnumDeleteFailed HubContentStatusEnum = "DeleteFailed"
)

func (e HubContentStatusEnum) ToPointer() *HubContentStatusEnum {
	return &e
}

func (e *HubContentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Available":
		fallthrough
	case "Importing":
		fallthrough
	case "Deleting":
		fallthrough
	case "ImportFailed":
		fallthrough
	case "DeleteFailed":
		*e = HubContentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HubContentStatusEnum: %v", v)
	}
}
