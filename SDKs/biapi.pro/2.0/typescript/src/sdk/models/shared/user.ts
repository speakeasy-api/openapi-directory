/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum UserPlatformEnum {
  Web = "web",
  IPad = "iPad",
  IPhone = "iPhone",
  Android = "Android",
  CAstore = "CAstore",
  RequestAccess = "requestAccess",
  SharedAccess = "sharedAccess",
  SingleAccess = "singleAccess",
  Transfer = "transfer",
  RefreshToken = "refresh_token",
}

/**
 * Successful DELETE on User resource
 */
export class User extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform: UserPlatformEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "signin" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  signin: Date;
}
