/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImportError } from "./importerror";
import { ImportRowError } from "./importrowerror";
import { Expose, Type } from "class-transformer";

/**
 * A resource that aggregates the validation errors found in an import job file.
 */
export class FileValidationReport extends SpeakeasyBase {
  /**
   * List of file level errors.
   */
  @SpeakeasyMetadata({ elemType: ImportError })
  @Expose({ name: "fileErrors" })
  @Type(() => ImportError)
  fileErrors?: ImportError[];

  /**
   * The name of the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileName" })
  fileName?: string;

  /**
   * Flag indicating that processing was aborted due to maximum number of errors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "partialReport" })
  partialReport?: boolean;

  /**
   * Partial list of rows that encountered validation error.
   */
  @SpeakeasyMetadata({ elemType: ImportRowError })
  @Expose({ name: "rowErrors" })
  @Type(() => ImportRowError)
  rowErrors?: ImportRowError[];
}
