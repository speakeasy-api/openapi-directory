/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ResourceFilter - Message describing resource filters
 */
public class ResourceFilter {
    /**
     * Message describing compute engine instance filter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gceInstanceFilter")
    public GceInstanceFilter gceInstanceFilter;

    public ResourceFilter withGceInstanceFilter(GceInstanceFilter gceInstanceFilter) {
        this.gceInstanceFilter = gceInstanceFilter;
        return this;
    }
    
    /**
     * The label used for filter resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inclusionLabels")
    public java.util.Map<String, String> inclusionLabels;

    public ResourceFilter withInclusionLabels(java.util.Map<String, String> inclusionLabels) {
        this.inclusionLabels = inclusionLabels;
        return this;
    }
    
    /**
     * The id pattern for filter resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceIdPatterns")
    public String[] resourceIdPatterns;

    public ResourceFilter withResourceIdPatterns(String[] resourceIdPatterns) {
        this.resourceIdPatterns = resourceIdPatterns;
        return this;
    }
    
    /**
     * The scopes of evaluation resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopes")
    public String[] scopes;

    public ResourceFilter withScopes(String[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    public ResourceFilter(){}
}
