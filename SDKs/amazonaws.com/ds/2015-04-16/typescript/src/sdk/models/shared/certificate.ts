/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateStateEnum } from "./certificatestateenum";
import { CertificateTypeEnum } from "./certificatetypeenum";
import { ClientCertAuthSettings } from "./clientcertauthsettings";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about the certificate.
 */
export class Certificate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateId" })
  certificateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ClientCertAuthSettings" })
  @Type(() => ClientCertAuthSettings)
  clientCertAuthSettings?: ClientCertAuthSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "CommonName" })
  commonName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExpiryDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiryDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RegisteredDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  registeredDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: CertificateStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StateReason" })
  stateReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: CertificateTypeEnum;
}
