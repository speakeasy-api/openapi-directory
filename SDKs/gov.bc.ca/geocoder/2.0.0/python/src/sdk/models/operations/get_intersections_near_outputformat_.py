"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetIntersectionsNearOutputFormatOutputFormatEnum(str, Enum):
    r"""Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target=\\"_blank\\">outputFormat</a>.
    
    Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
    """
    JSON = 'json'
    GEOJSON = 'geojson'
    XHTML = 'xhtml'
    KML = 'kml'
    GML = 'gml'
    CSV = 'csv'
    SHPZ = 'shpz'

class GetIntersectionsNearOutputFormatOutputSrsEnum(str, Enum):
    r"""The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target=\\"_blank\\">outputSRS</a>"""
    FOUR_THOUSAND_THREE_HUNDRED_AND_TWENTY_SIX = '4326'
    FOUR_THOUSAND_TWO_HUNDRED_AND_SIXTY_NINE = '4269'
    THREE_THOUSAND_AND_FIVE = '3005'
    TWENTY_SIX_THOUSAND_NINE_HUNDRED_AND_SEVEN = '26907'
    TWENTY_SIX_THOUSAND_NINE_HUNDRED_AND_EIGHT = '26908'
    TWENTY_SIX_THOUSAND_NINE_HUNDRED_AND_NINE = '26909'
    TWENTY_SIX_THOUSAND_NINE_HUNDRED_AND_TEN = '26910'
    TWENTY_SIX_THOUSAND_NINE_HUNDRED_AND_ELEVEN = '26911'


@dataclasses.dataclass
class GetIntersectionsNearOutputFormatRequest:
    
    output_format: GetIntersectionsNearOutputFormatOutputFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'outputFormat', 'style': 'simple', 'explode': False }})
    r"""Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target=\\"_blank\\">outputFormat</a>.
    
    Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
    """  
    output_srs: GetIntersectionsNearOutputFormatOutputSrsEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'outputSRS', 'style': 'form', 'explode': True }})
    r"""The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target=\\"_blank\\">outputSRS</a>"""  
    point: str = dataclasses.field(metadata={'query_param': { 'field_name': 'point', 'style': 'form', 'explode': True }})
    r"""The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter."""  
    max_degree: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxDegree', 'style': 'form', 'explode': True }})
    r"""The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4."""  
    max_distance: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxDistance', 'style': 'form', 'explode': True }})
    r"""The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited."""  
    max_results: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxResults', 'style': 'form', 'explode': True }})
    r"""The maximum number of search results to return."""  
    min_degree: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minDegree', 'style': 'form', 'explode': True }})
    r"""The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1."""  
    

@dataclasses.dataclass
class GetIntersectionsNearOutputFormatResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    