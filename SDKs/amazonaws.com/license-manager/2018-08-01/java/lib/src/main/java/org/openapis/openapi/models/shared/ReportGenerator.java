/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReportGenerator - Describe the details of a report generator.
 */
public class ReportGenerator {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreateTime")
    public String createTime;
    public ReportGenerator withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public ReportGenerator withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastReportGenerationTime")
    public String lastReportGenerationTime;
    public ReportGenerator withLastReportGenerationTime(String lastReportGenerationTime) {
        this.lastReportGenerationTime = lastReportGenerationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastRunFailureReason")
    public String lastRunFailureReason;
    public ReportGenerator withLastRunFailureReason(String lastRunFailureReason) {
        this.lastRunFailureReason = lastRunFailureReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastRunStatus")
    public String lastRunStatus;
    public ReportGenerator withLastRunStatus(String lastRunStatus) {
        this.lastRunStatus = lastRunStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LicenseManagerReportGeneratorArn")
    public String licenseManagerReportGeneratorArn;
    public ReportGenerator withLicenseManagerReportGeneratorArn(String licenseManagerReportGeneratorArn) {
        this.licenseManagerReportGeneratorArn = licenseManagerReportGeneratorArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReportContext")
    public ReportContext reportContext;
    public ReportGenerator withReportContext(ReportContext reportContext) {
        this.reportContext = reportContext;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReportCreatorAccount")
    public String reportCreatorAccount;
    public ReportGenerator withReportCreatorAccount(String reportCreatorAccount) {
        this.reportCreatorAccount = reportCreatorAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReportFrequency")
    public ReportFrequency reportFrequency;
    public ReportGenerator withReportFrequency(ReportFrequency reportFrequency) {
        this.reportFrequency = reportFrequency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReportGeneratorName")
    public String reportGeneratorName;
    public ReportGenerator withReportGeneratorName(String reportGeneratorName) {
        this.reportGeneratorName = reportGeneratorName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReportType")
    public ReportTypeEnum[] reportType;
    public ReportGenerator withReportType(ReportTypeEnum[] reportType) {
        this.reportType = reportType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3Location")
    public S3Location s3Location;
    public ReportGenerator withS3Location(S3Location s3Location) {
        this.s3Location = s3Location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public ReportGenerator withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
}
