// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PackageManagerEnum string

const (
	PackageManagerEnumBundler   PackageManagerEnum = "BUNDLER"
	PackageManagerEnumCargo     PackageManagerEnum = "CARGO"
	PackageManagerEnumComposer  PackageManagerEnum = "COMPOSER"
	PackageManagerEnumNpm       PackageManagerEnum = "NPM"
	PackageManagerEnumNuget     PackageManagerEnum = "NUGET"
	PackageManagerEnumPipenv    PackageManagerEnum = "PIPENV"
	PackageManagerEnumPoetry    PackageManagerEnum = "POETRY"
	PackageManagerEnumYarn      PackageManagerEnum = "YARN"
	PackageManagerEnumGobinary  PackageManagerEnum = "GOBINARY"
	PackageManagerEnumGomod     PackageManagerEnum = "GOMOD"
	PackageManagerEnumJar       PackageManagerEnum = "JAR"
	PackageManagerEnumOs        PackageManagerEnum = "OS"
	PackageManagerEnumPip       PackageManagerEnum = "PIP"
	PackageManagerEnumPythonpkg PackageManagerEnum = "PYTHONPKG"
	PackageManagerEnumNodepkg   PackageManagerEnum = "NODEPKG"
	PackageManagerEnumPom       PackageManagerEnum = "POM"
)

func (e PackageManagerEnum) ToPointer() *PackageManagerEnum {
	return &e
}

func (e *PackageManagerEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BUNDLER":
		fallthrough
	case "CARGO":
		fallthrough
	case "COMPOSER":
		fallthrough
	case "NPM":
		fallthrough
	case "NUGET":
		fallthrough
	case "PIPENV":
		fallthrough
	case "POETRY":
		fallthrough
	case "YARN":
		fallthrough
	case "GOBINARY":
		fallthrough
	case "GOMOD":
		fallthrough
	case "JAR":
		fallthrough
	case "OS":
		fallthrough
	case "PIP":
		fallthrough
	case "PYTHONPKG":
		fallthrough
	case "NODEPKG":
		fallthrough
	case "POM":
		*e = PackageManagerEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PackageManagerEnum: %v", v)
	}
}
