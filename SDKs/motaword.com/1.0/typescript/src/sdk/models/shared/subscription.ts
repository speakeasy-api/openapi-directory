/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Delete continuous project subscription
 */
export class Subscription extends SpeakeasyBase {
  /**
   * Stripe downgradable plan
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downgrade" })
  downgrade?: string[];

  /**
   * Stripe subscription plan payment card internal id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_method" })
  paymentMethod?: number;

  /**
   * Stripe plan period end
   */
  @SpeakeasyMetadata()
  @Expose({ name: "period_end" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  periodEnd?: Date;

  /**
   * Stripe subscription plan id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_id" })
  planId?: string;

  /**
   * Stripe subscription plan name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_name" })
  planName?: string;

  /**
   * Stripe plan price
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "products" })
  products?: any[];

  /**
   * Stripe Scheduled plan period end
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedule_name" })
  scheduleName?: string;

  /**
   * Stripe Scheduled start date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedule_start" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduleStart?: Date;

  /**
   * Stripe subscription id for this project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscription_id" })
  subscriptionId?: string;

  /**
   * Stripe upgradable plan
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upgrade" })
  upgrade?: string[];

  /**
   * Stripe plan trial
   */
  @SpeakeasyMetadata()
  @Expose({ name: "withTrial" })
  withTrial?: any;
}
