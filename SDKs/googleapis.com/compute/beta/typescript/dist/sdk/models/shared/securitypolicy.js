"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SecurityPolicy = exports.SecurityPolicyTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var securitypolicyadaptiveprotectionconfig_1 = require("./securitypolicyadaptiveprotectionconfig");
var securitypolicyadvancedoptionsconfig_1 = require("./securitypolicyadvancedoptionsconfig");
var securitypolicyassociation_1 = require("./securitypolicyassociation");
var securitypolicyddosprotectionconfig_1 = require("./securitypolicyddosprotectionconfig");
var securitypolicyrecaptchaoptionsconfig_1 = require("./securitypolicyrecaptchaoptionsconfig");
var securitypolicyrule_1 = require("./securitypolicyrule");
var class_transformer_1 = require("class-transformer");
/**
 * The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. - CLOUD_ARMOR_NETWORK: Cloud Armor network policies can be configured to filter packets targeting network load balancing resources such as backend services, target pools, target instances, and instances with external IPs. They filter requests before the request is served from the application. This field can be set only at resource creation time.
 */
var SecurityPolicyTypeEnum;
(function (SecurityPolicyTypeEnum) {
    SecurityPolicyTypeEnum["CloudArmor"] = "CLOUD_ARMOR";
    SecurityPolicyTypeEnum["CloudArmorEdge"] = "CLOUD_ARMOR_EDGE";
    SecurityPolicyTypeEnum["CloudArmorNetwork"] = "CLOUD_ARMOR_NETWORK";
    SecurityPolicyTypeEnum["Firewall"] = "FIREWALL";
})(SecurityPolicyTypeEnum = exports.SecurityPolicyTypeEnum || (exports.SecurityPolicyTypeEnum = {}));
/**
 * Represents a Google Cloud Armor security policy resource. Only external backend services that use load balancers can reference a security policy. For more information, see Google Cloud Armor security policy overview.
 */
var SecurityPolicy = /** @class */ (function (_super) {
    __extends(SecurityPolicy, _super);
    function SecurityPolicy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adaptiveProtectionConfig" }),
        (0, class_transformer_1.Type)(function () { return securitypolicyadaptiveprotectionconfig_1.SecurityPolicyAdaptiveProtectionConfig; }),
        __metadata("design:type", securitypolicyadaptiveprotectionconfig_1.SecurityPolicyAdaptiveProtectionConfig)
    ], SecurityPolicy.prototype, "adaptiveProtectionConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "advancedOptionsConfig" }),
        (0, class_transformer_1.Type)(function () { return securitypolicyadvancedoptionsconfig_1.SecurityPolicyAdvancedOptionsConfig; }),
        __metadata("design:type", securitypolicyadvancedoptionsconfig_1.SecurityPolicyAdvancedOptionsConfig)
    ], SecurityPolicy.prototype, "advancedOptionsConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: securitypolicyassociation_1.SecurityPolicyAssociation }),
        (0, class_transformer_1.Expose)({ name: "associations" }),
        (0, class_transformer_1.Type)(function () { return securitypolicyassociation_1.SecurityPolicyAssociation; }),
        __metadata("design:type", Array)
    ], SecurityPolicy.prototype, "associations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ddosProtectionConfig" }),
        (0, class_transformer_1.Type)(function () { return securitypolicyddosprotectionconfig_1.SecurityPolicyDdosProtectionConfig; }),
        __metadata("design:type", securitypolicyddosprotectionconfig_1.SecurityPolicyDdosProtectionConfig)
    ], SecurityPolicy.prototype, "ddosProtectionConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fingerprint" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "fingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labelFingerprint" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "labelFingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], SecurityPolicy.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parent" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "parent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recaptchaOptionsConfig" }),
        (0, class_transformer_1.Type)(function () { return securitypolicyrecaptchaoptionsconfig_1.SecurityPolicyRecaptchaOptionsConfig; }),
        __metadata("design:type", securitypolicyrecaptchaoptionsconfig_1.SecurityPolicyRecaptchaOptionsConfig)
    ], SecurityPolicy.prototype, "recaptchaOptionsConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ruleTupleCount" }),
        __metadata("design:type", Number)
    ], SecurityPolicy.prototype, "ruleTupleCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: securitypolicyrule_1.SecurityPolicyRule }),
        (0, class_transformer_1.Expose)({ name: "rules" }),
        (0, class_transformer_1.Type)(function () { return securitypolicyrule_1.SecurityPolicyRule; }),
        __metadata("design:type", Array)
    ], SecurityPolicy.prototype, "rules", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLinkWithId" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "selfLinkWithId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], SecurityPolicy.prototype, "type", void 0);
    return SecurityPolicy;
}(utils_1.SpeakeasyBase));
exports.SecurityPolicy = SecurityPolicy;
