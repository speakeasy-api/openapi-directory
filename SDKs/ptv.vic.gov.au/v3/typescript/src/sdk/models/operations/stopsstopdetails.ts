/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Number identifying transport mode; values returned via RouteTypes API
 */
export enum StopsStopDetailsRouteTypeEnum {
  Zero = "0",
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
}

export class StopsStopDetailsRequest extends SpeakeasyBase {
  /**
   * Your developer id
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=devid" })
  devid?: string;

  /**
   * Incdicates whether the stop_id is a GTFS ID or not
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=gtfs" })
  gtfs?: boolean;

  /**
   * Number identifying transport mode; values returned via RouteTypes API
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=route_type",
  })
  routeType: StopsStopDetailsRouteTypeEnum;

  /**
   * Authentication signature for request
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=signature",
  })
  signature?: string;

  /**
   * Indicates if stop accessibility information will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stop_accessibility",
  })
  stopAccessibility?: boolean;

  /**
   * Indicates if stop amenity information will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stop_amenities",
  })
  stopAmenities?: boolean;

  /**
   * Indicates if stop contact information will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stop_contact",
  })
  stopContact?: boolean;

  /**
   * Indicates if stop disruption information will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stop_disruptions",
  })
  stopDisruptions?: boolean;

  /**
   * Identifier of stop; values returned by Stops API
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=stop_id",
  })
  stopId: number;

  /**
   * Indicates if stop location information will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stop_location",
  })
  stopLocation?: boolean;

  /**
   * Indicates if stop staffing information will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stop_staffing",
  })
  stopStaffing?: boolean;

  /**
   * Indicates if stop ticket information will be returned (default = false)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=stop_ticket",
  })
  stopTicket?: boolean;

  /**
   * Please ignore
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token?: string;
}

export class StopsStopDetailsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid Request
   */
  @SpeakeasyMetadata()
  v3ErrorResponse?: shared.V3ErrorResponse;

  /**
   * Stop location, amenity and accessibility facility information for the specified stop (metropolitan and V/Line stations only).
   */
  @SpeakeasyMetadata()
  v3StopResponse?: shared.V3StopResponse;
}
