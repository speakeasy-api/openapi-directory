// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UserDeletePathParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

// UserDeleteActionEnum - Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`
type UserDeleteActionEnum string

const (
	UserDeleteActionEnumDisassociate UserDeleteActionEnum = "disassociate"
	UserDeleteActionEnumDelete       UserDeleteActionEnum = "delete"
)

func (e *UserDeleteActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "disassociate":
		fallthrough
	case "delete":
		*e = UserDeleteActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserDeleteActionEnum: %s", s)
	}
}

type UserDeleteQueryParams struct {
	// Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`
	Action *UserDeleteActionEnum `queryParam:"style=form,explode=true,name=action"`
	// Transfer email.
	TransferEmail *string `queryParam:"style=form,explode=true,name=transfer_email"`
	// Transfer meeting.
	TransferMeeting *bool `queryParam:"style=form,explode=true,name=transfer_meeting"`
	// Transfer recording.
	TransferRecording *bool `queryParam:"style=form,explode=true,name=transfer_recording"`
	// Transfer webinar.
	TransferWebinar *bool `queryParam:"style=form,explode=true,name=transfer_webinar"`
}

type UserDeleteRequest struct {
	PathParams  UserDeletePathParams
	QueryParams UserDeleteQueryParams
}

type UserDeleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
