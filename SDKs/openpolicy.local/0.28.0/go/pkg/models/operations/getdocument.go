// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetDocumentRequest struct {
	// If set to *full*, response will include query explanations in addition to the result.
	Explain *string `queryParam:"style=form,explode=true,name=explain"`
	// Provide the text for an [input document](https://www.openpolicyagent.org/docs/latest/kubernetes-primer/#input-document) in JSON format
	Input map[string]interface{} `queryParam:"style=form,explode=true,name=input"`
	// If true, response will return additional performance metrics in addition to the result and the standard metrics.
	//
	// **Caution:** This can add significant overhead to query evaluation. The recommendation is to only use this parameter if you are debugging a performance problem.
	Instrument *bool `queryParam:"style=form,explode=true,name=instrument"`
	// If true, compiler performance metrics will be returned in the response.
	Metrics *bool `queryParam:"style=form,explode=true,name=metrics"`
	// A backslash (/) delimited path to access values inside object and array documents. If the path points to an array, the server will attempt to convert the array index to an integer. If the path element cannot be converted to an integer, the server will respond with 404.
	Path string `pathParam:"style=simple,explode=false,name=path"`
	// If true, response will be in a human-readable format.
	Pretty *bool `queryParam:"style=form,explode=true,name=pretty"`
	// If true, response will include build and version information in addition to the result.
	Provenance *bool `queryParam:"style=form,explode=true,name=provenance"`
}

type GetDocument200ApplicationJSONExplanationLocalsKey struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type GetDocument200ApplicationJSONExplanationLocalsValue struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type GetDocument200ApplicationJSONExplanationLocals struct {
	Key   *GetDocument200ApplicationJSONExplanationLocalsKey   `json:"key,omitempty"`
	Value *GetDocument200ApplicationJSONExplanationLocalsValue `json:"value,omitempty"`
}

type GetDocument200ApplicationJSONExplanationNodeTerms struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

// GetDocument200ApplicationJSONExplanationNode - The AST element associated with the evaluation step.
// https://godoc.org/github.com/open-policy-agent/opa/ast - AST
type GetDocument200ApplicationJSONExplanationNode struct {
	// Node number
	Index *float64                                            `json:"index,omitempty"`
	Terms []GetDocument200ApplicationJSONExplanationNodeTerms `json:"terms,omitempty"`
}

// GetDocument200ApplicationJSONExplanationOpEnum - The kind of *trace event*
//
// Each trace event represents a step in the query evaluation process. Trace events are emitted at the following points:
// - enter - before a body or rule is evaluated
// - exit - after a body or rule has evaluated successfully
// - eval - before an expression is evaluated
// - fail - after an expression has evaluated to false.
// - redo - before evaluation restarts from a body, rule, or expression.
//
// By default, OPA searches for all sets of term bindings that make all expressions in the query evaluate to true. Because there may be multiple answers, the search can restart when OPA determines the query is true or false. When the search restarts, a *redo trace event* is emitted.
type GetDocument200ApplicationJSONExplanationOpEnum string

const (
	GetDocument200ApplicationJSONExplanationOpEnumEnter GetDocument200ApplicationJSONExplanationOpEnum = "enter"
	GetDocument200ApplicationJSONExplanationOpEnumExit  GetDocument200ApplicationJSONExplanationOpEnum = "exit"
	GetDocument200ApplicationJSONExplanationOpEnumEval  GetDocument200ApplicationJSONExplanationOpEnum = "eval"
	GetDocument200ApplicationJSONExplanationOpEnumFail  GetDocument200ApplicationJSONExplanationOpEnum = "fail"
	GetDocument200ApplicationJSONExplanationOpEnumRedo  GetDocument200ApplicationJSONExplanationOpEnum = "redo"
)

func (e *GetDocument200ApplicationJSONExplanationOpEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enter":
		fallthrough
	case "exit":
		fallthrough
	case "eval":
		fallthrough
	case "fail":
		fallthrough
	case "redo":
		*e = GetDocument200ApplicationJSONExplanationOpEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDocument200ApplicationJSONExplanationOpEnum: %s", s)
	}
}

// GetDocument200ApplicationJSONExplanationTypeEnum - The type of the **node** field
type GetDocument200ApplicationJSONExplanationTypeEnum string

const (
	GetDocument200ApplicationJSONExplanationTypeEnumExpr GetDocument200ApplicationJSONExplanationTypeEnum = "expr"
	GetDocument200ApplicationJSONExplanationTypeEnumRule GetDocument200ApplicationJSONExplanationTypeEnum = "rule"
	GetDocument200ApplicationJSONExplanationTypeEnumBody GetDocument200ApplicationJSONExplanationTypeEnum = "body"
)

func (e *GetDocument200ApplicationJSONExplanationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "expr":
		fallthrough
	case "rule":
		fallthrough
	case "body":
		*e = GetDocument200ApplicationJSONExplanationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDocument200ApplicationJSONExplanationTypeEnum: %s", s)
	}
}

type GetDocument200ApplicationJSONExplanation struct {
	// The query's term bindings at the point when the trace event was emitted.
	Locals []GetDocument200ApplicationJSONExplanationLocals `json:"locals,omitempty"`
	// The AST element associated with the evaluation step.
	Node *GetDocument200ApplicationJSONExplanationNode `json:"node,omitempty"`
	// The kind of *trace event*
	//
	// Each trace event represents a step in the query evaluation process. Trace events are emitted at the following points:
	// - enter - before a body or rule is evaluated
	// - exit - after a body or rule has evaluated successfully
	// - eval - before an expression is evaluated
	// - fail - after an expression has evaluated to false.
	// - redo - before evaluation restarts from a body, rule, or expression.
	//
	// By default, OPA searches for all sets of term bindings that make all expressions in the query evaluate to true. Because there may be multiple answers, the search can restart when OPA determines the query is true or false. When the search restarts, a *redo trace event* is emitted.
	Op *GetDocument200ApplicationJSONExplanationOpEnum `json:"op,omitempty"`
	// The parent query. Use this field to identify trace events from related queries.
	//
	// For example, if query A references rule R, trace events emitted when evaluating rule R will have the *parent_id* field set to query Aâ€™s *query_id*.
	ParentID *float64 `json:"parent_id,omitempty"`
	// The query that the trace event was emitted for. Use this field to distinguish trace events emitted by from different queries.
	QueryID *float64 `json:"query_id,omitempty"`
	// The type of the **node** field
	Type *GetDocument200ApplicationJSONExplanationTypeEnum `json:"type,omitempty"`
}

type GetDocument200ApplicationJSONMetrics struct {
	// *Description is forthcoming*
	CounterServerQueryCacheHit *float64 `json:"counter_server_query_cache_hit,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageBuildComprehensionIndexNs *float64 `json:"timer_query_compile_stage_build_comprehension_index_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageCheckSafetyNs *float64 `json:"timer_query_compile_stage_check_safety_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageCheckTypesNs *float64 `json:"timer_query_compile_stage_check_types_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageCheckUndefinedFuncsNs *float64 `json:"timer_query_compile_stage_check_undefined_funcs_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageCheckUnsafeBuiltinsNs *float64 `json:"timer_query_compile_stage_check_unsafe_builtins_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageResolveRefsNs *float64 `json:"timer_query_compile_stage_resolve_refs_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteComprehensionTermsNs *float64 `json:"timer_query_compile_stage_rewrite_comprehension_terms_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteDynamicTermsNs *float64 `json:"timer_query_compile_stage_rewrite_dynamic_terms_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteExprTermsNs *float64 `json:"timer_query_compile_stage_rewrite_expr_terms_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteLocalVarsNs *float64 `json:"timer_query_compile_stage_rewrite_local_vars_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteToCaptureValueNs *float64 `json:"timer_query_compile_stage_rewrite_to_capture_value_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteWithValuesNs *float64 `json:"timer_query_compile_stage_rewrite_with_values_ns,omitempty"`
	// Time taken (in nanonseconds) to parse the input
	TimerRegoInputParseNs *float64 `json:"timer_rego_input_parse_ns,omitempty"`
	// Time taken (in nanonseconds) to compile the loaded policy modules
	TimerRegoModuleCompileNs *float64 `json:"timer_rego_module_compile_ns,omitempty"`
	// Time taken (in nanoseconds) to parse the input policy module
	TimerRegoModuleParseNs *float64 `json:"timer_rego_module_parse_ns,omitempty"`
	// Time taken (in nanoseconds) to compile the query
	TimerRegoQueryCompileNs *float64 `json:"timer_rego_query_compile_ns,omitempty"`
	// Time taken (in nanonseconds) to evaluate the query
	TimerRegoQueryEvalNs *float64 `json:"timer_rego_query_eval_ns,omitempty"`
	// Time taken (in nanoseconds) to parse the query
	TimerRegoQueryParseNs *float64 `json:"timer_rego_query_parse_ns,omitempty"`
	// Time taken (in nanoseconds) to handle the API request
	TimerServerHandlerNs *float64 `json:"timer_server_handler_ns,omitempty"`
	// *Description is forthcoming*
	TimerServerReadBytesNs *float64 `json:"timer_server_read_bytes_ns,omitempty"`
}

type GetDocument200ApplicationJSONProvenance struct {
	// The Git commit id of this OPA build.
	BuildCommit *string `json:"build_commit,omitempty"`
	// The hostname where this instance was built.
	BuildHostname *string `json:"build_hostname,omitempty"`
	// When this OPA instance was built (in [ISO8601 format](https://www.w3.org/TR/NOTE-datetime))
	BuildTimestamp *string `json:"build_timestamp,omitempty"`
	// A set of key-value pairs describing each bundle activated on the server.
	Bundles map[string]interface{} `json:"bundles,omitempty"`
	// The version of this OPA instance
	Version *string `json:"version,omitempty"`
}

// GetDocument200ApplicationJSONResultAstPackagePathTypeEnum - The type of the path operation
type GetDocument200ApplicationJSONResultAstPackagePathTypeEnum string

const (
	GetDocument200ApplicationJSONResultAstPackagePathTypeEnumImport  GetDocument200ApplicationJSONResultAstPackagePathTypeEnum = "import"
	GetDocument200ApplicationJSONResultAstPackagePathTypeEnumPackage GetDocument200ApplicationJSONResultAstPackagePathTypeEnum = "package"
)

func (e *GetDocument200ApplicationJSONResultAstPackagePathTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "import":
		fallthrough
	case "package":
		*e = GetDocument200ApplicationJSONResultAstPackagePathTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDocument200ApplicationJSONResultAstPackagePathTypeEnum: %s", s)
	}
}

type GetDocument200ApplicationJSONResultAstPackagePath struct {
	// The type of the path operation
	Type *GetDocument200ApplicationJSONResultAstPackagePathTypeEnum `json:"type,omitempty"`
	// The path variable
	Value *string `json:"value,omitempty"`
}

type GetDocument200ApplicationJSONResultAstPackage struct {
	// The path to the package
	Path []GetDocument200ApplicationJSONResultAstPackagePath `json:"path,omitempty"`
}

type GetDocument200ApplicationJSONResultAstRulesBodyTermsValue struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type GetDocument200ApplicationJSONResultAstRulesBodyTerms struct {
	// The type of the term variable
	Type *string `json:"type,omitempty"`
	// The list of types and values for the term variable
	Value []GetDocument200ApplicationJSONResultAstRulesBodyTermsValue `json:"value,omitempty"`
}

type GetDocument200ApplicationJSONResultAstRulesBody struct {
	// The location of this term in the list (starts at 0)
	Index *float64 `json:"index,omitempty"`
	// The type/value pairing for this term
	Terms []GetDocument200ApplicationJSONResultAstRulesBodyTerms `json:"terms,omitempty"`
}

// GetDocument200ApplicationJSONResultAstRulesHeadKey - The type/value pairing for this rule's head
type GetDocument200ApplicationJSONResultAstRulesHeadKey struct {
	// The type of the head
	Type *string `json:"type,omitempty"`
	// The value of the head
	Value *string `json:"value,omitempty"`
}

type GetDocument200ApplicationJSONResultAstRulesHead struct {
	// The type/value pairing for this rule's head
	Key *GetDocument200ApplicationJSONResultAstRulesHeadKey `json:"key,omitempty"`
	// The head of the rule
	Name *string `json:"name,omitempty"`
}

type GetDocument200ApplicationJSONResultAstRules struct {
	// A list of the terms in this rule
	Body []GetDocument200ApplicationJSONResultAstRulesBody `json:"body,omitempty"`
	Head *GetDocument200ApplicationJSONResultAstRulesHead  `json:"head,omitempty"`
}

// GetDocument200ApplicationJSONResultAst - The types for declarations and runtime objects passed to your implementation. This consists of an abstract syntax tree (AST) of policy modules, package and import declarations, rules, expressions, and terms.
// https://godoc.org/github.com/open-policy-agent/opa/ast - AST
type GetDocument200ApplicationJSONResultAst struct {
	Package *GetDocument200ApplicationJSONResultAstPackage `json:"package,omitempty"`
	// When OPA evaluates a rule, it generates the content of a [virtual documents](https://www.openpolicyagent.org/docs/latest/philosophy/#the-opa-document-model)
	Rules []GetDocument200ApplicationJSONResultAstRules `json:"rules,omitempty"`
}

type GetDocument200ApplicationJSONResult struct {
	// The types for declarations and runtime objects passed to your implementation. This consists of an abstract syntax tree (AST) of policy modules, package and import declarations, rules, expressions, and terms.
	Ast *GetDocument200ApplicationJSONResultAst `json:"ast,omitempty"`
	// The name of a policy module
	ID *string `json:"id,omitempty"`
	// A string representation of the full Rego policy
	Raw *string `json:"raw,omitempty"`
}

// GetDocument200ApplicationJSON - Success
type GetDocument200ApplicationJSON struct {
	Explanation []GetDocument200ApplicationJSONExplanation `json:"explanation,omitempty"`
	Metrics     *GetDocument200ApplicationJSONMetrics      `json:"metrics,omitempty"`
	Provenance  *GetDocument200ApplicationJSONProvenance   `json:"provenance,omitempty"`
	Result      []GetDocument200ApplicationJSONResult      `json:"result,omitempty"`
}

type GetDocumentResponse struct {
	// Bad request
	FourHundred *shared.FourHundred
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	GetDocument200ApplicationJSONObject *GetDocument200ApplicationJSON
}
