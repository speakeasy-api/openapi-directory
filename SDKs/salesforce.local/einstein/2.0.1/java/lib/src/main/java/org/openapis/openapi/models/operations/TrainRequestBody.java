/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class TrainRequestBody {
    /**
     * Algorithm used for train
     */
    @SpeakeasyMetadata("multipartForm:name=algorithm")
    public String algorithm;

    public TrainRequestBody withAlgorithm(String algorithm) {
        this.algorithm = algorithm;
        return this;
    }
    
    /**
     * ID of the dataset to train.
     */
    @SpeakeasyMetadata("multipartForm:name=datasetId")
    public Long datasetId;

    public TrainRequestBody withDatasetId(Long datasetId) {
        this.datasetId = datasetId;
        return this;
    }
    
    /**
     * Number of training iterations for the neural network. Optional.
     */
    @SpeakeasyMetadata("multipartForm:name=epochs")
    public Integer epochs;

    public TrainRequestBody withEpochs(Integer epochs) {
        this.epochs = epochs;
        return this;
    }
    
    /**
     * N/A for intent or sentiment models.
     */
    @SpeakeasyMetadata("multipartForm:name=learningRate")
    public Double learningRate;

    public TrainRequestBody withLearningRate(Double learningRate) {
        this.learningRate = learningRate;
        return this;
    }
    
    /**
     * Name of the model. Maximum length is 180 characters.
     */
    @SpeakeasyMetadata("multipartForm:name=name")
    public String name;

    public TrainRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * JSON that contains parameters that specify how the model is created
     */
    @SpeakeasyMetadata("multipartForm:name=trainParams,json")
    public org.openapis.openapi.models.shared.V2LanguageTrainParams trainParams;

    public TrainRequestBody withTrainParams(org.openapis.openapi.models.shared.V2LanguageTrainParams trainParams) {
        this.trainParams = trainParams;
        return this;
    }
    
    public TrainRequestBody(){}
}
