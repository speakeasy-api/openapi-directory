/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DependabotAlertPackage } from "./dependabotalertpackage";
import { DependabotAlertSecurityAdvisory } from "./dependabotalertsecurityadvisory";
import { DependabotAlertSecurityVulnerability } from "./dependabotalertsecurityvulnerability";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { SimpleRepository } from "./simplerepository";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The execution scope of the vulnerable dependency.
 */
export enum DependabotAlertWithRepositoryDependencyScopeEnum {
  Development = "development",
  Runtime = "runtime",
}

/**
 * Details for the vulnerable dependency.
 */
export class DependabotAlertWithRepositoryDependency extends SpeakeasyBase {
  /**
   * The full path to the dependency manifest file, relative to the root of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manifest_path" })
  manifestPath?: string;

  /**
   * Details for the vulnerable package.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "package" })
  @Type(() => DependabotAlertPackage)
  package?: DependabotAlertPackage;

  /**
   * The execution scope of the vulnerable dependency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: DependabotAlertWithRepositoryDependencyScopeEnum;
}

/**
 * The reason that the alert was dismissed.
 */
export enum DependabotAlertWithRepositoryDismissedReasonEnum {
  FixStarted = "fix_started",
  Inaccurate = "inaccurate",
  NoBandwidth = "no_bandwidth",
  NotUsed = "not_used",
  TolerableRisk = "tolerable_risk",
}

/**
 * The state of the Dependabot alert.
 */
export enum DependabotAlertWithRepositoryStateEnum {
  Dismissed = "dismissed",
  Fixed = "fixed",
  Open = "open",
}

/**
 * A Dependabot alert.
 */
export class DependabotAlertWithRepository extends SpeakeasyBase {
  /**
   * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Details for the vulnerable dependency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dependency" })
  @Type(() => DependabotAlertWithRepositoryDependency)
  dependency: DependabotAlertWithRepositoryDependency;

  /**
   * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dismissedAt: Date;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_by" })
  @Type(() => NullableSimpleUser)
  dismissedBy: NullableSimpleUser;

  /**
   * An optional comment associated with the alert's dismissal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_comment" })
  dismissedComment: string;

  /**
   * The reason that the alert was dismissed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_reason" })
  dismissedReason: DependabotAlertWithRepositoryDismissedReasonEnum;

  /**
   * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fixed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fixedAt: Date;

  /**
   * The GitHub URL of the alert resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * The security alert number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: number;

  /**
   * A GitHub repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  @Type(() => SimpleRepository)
  repository: SimpleRepository;

  /**
   * Details for the GitHub Security Advisory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "security_advisory" })
  @Type(() => DependabotAlertSecurityAdvisory)
  securityAdvisory: DependabotAlertSecurityAdvisory;

  /**
   * Details pertaining to one vulnerable version range for the advisory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "security_vulnerability" })
  @Type(() => DependabotAlertSecurityVulnerability)
  securityVulnerability: DependabotAlertSecurityVulnerability;

  /**
   * The state of the Dependabot alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: DependabotAlertWithRepositoryStateEnum;

  /**
   * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * The REST API URL of the alert resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
