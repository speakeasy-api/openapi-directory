// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetWorkspaceSlugMembersSecurity struct {
	Bearer string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

// GetWorkspaceSlugMembersActivityTypeEnum - Comma separated list of activity types
type GetWorkspaceSlugMembersActivityTypeEnum string

const (
	GetWorkspaceSlugMembersActivityTypeEnumDiscourseTopicCreated        GetWorkspaceSlugMembersActivityTypeEnum = "discourse:topic:created"
	GetWorkspaceSlugMembersActivityTypeEnumDiscoursePostLiked           GetWorkspaceSlugMembersActivityTypeEnum = "discourse:post:liked"
	GetWorkspaceSlugMembersActivityTypeEnumDiscourseUserCreated         GetWorkspaceSlugMembersActivityTypeEnum = "discourse:user:created"
	GetWorkspaceSlugMembersActivityTypeEnumDiscoursePostCreated         GetWorkspaceSlugMembersActivityTypeEnum = "discourse:post:created"
	GetWorkspaceSlugMembersActivityTypeEnumSlackMessageSent             GetWorkspaceSlugMembersActivityTypeEnum = "slack:message:sent"
	GetWorkspaceSlugMembersActivityTypeEnumSlackThreadReplied           GetWorkspaceSlugMembersActivityTypeEnum = "slack:thread:replied"
	GetWorkspaceSlugMembersActivityTypeEnumSlackChannelJoined           GetWorkspaceSlugMembersActivityTypeEnum = "slack:channel:joined"
	GetWorkspaceSlugMembersActivityTypeEnumNoteCreated                  GetWorkspaceSlugMembersActivityTypeEnum = "note:created"
	GetWorkspaceSlugMembersActivityTypeEnumPostCreated                  GetWorkspaceSlugMembersActivityTypeEnum = "post:created"
	GetWorkspaceSlugMembersActivityTypeEnumIssuesOpened                 GetWorkspaceSlugMembersActivityTypeEnum = "issues:opened"
	GetWorkspaceSlugMembersActivityTypeEnumDiscordMessageSent           GetWorkspaceSlugMembersActivityTypeEnum = "discord:message:sent"
	GetWorkspaceSlugMembersActivityTypeEnumIssueCommentCreated          GetWorkspaceSlugMembersActivityTypeEnum = "issue_comment:created"
	GetWorkspaceSlugMembersActivityTypeEnumDiscordThreadReplied         GetWorkspaceSlugMembersActivityTypeEnum = "discord:thread:replied"
	GetWorkspaceSlugMembersActivityTypeEnumCustomHappened               GetWorkspaceSlugMembersActivityTypeEnum = "custom:happened"
	GetWorkspaceSlugMembersActivityTypeEnumDevComment                   GetWorkspaceSlugMembersActivityTypeEnum = "dev:comment"
	GetWorkspaceSlugMembersActivityTypeEnumDiscordMessageReplied        GetWorkspaceSlugMembersActivityTypeEnum = "discord:message:replied"
	GetWorkspaceSlugMembersActivityTypeEnumDiscordServerJoined          GetWorkspaceSlugMembersActivityTypeEnum = "discord:server:joined"
	GetWorkspaceSlugMembersActivityTypeEnumInsidedConversationStarted   GetWorkspaceSlugMembersActivityTypeEnum = "insided:conversation:started"
	GetWorkspaceSlugMembersActivityTypeEnumForkCreated                  GetWorkspaceSlugMembersActivityTypeEnum = "fork:created"
	GetWorkspaceSlugMembersActivityTypeEnumInsidedIdeaReplied           GetWorkspaceSlugMembersActivityTypeEnum = "insided:idea:replied"
	GetWorkspaceSlugMembersActivityTypeEnumInsidedArticleCreated        GetWorkspaceSlugMembersActivityTypeEnum = "insided:article:created"
	GetWorkspaceSlugMembersActivityTypeEnumDiscussionsDiscussionCreated GetWorkspaceSlugMembersActivityTypeEnum = "discussions:discussion_created"
	GetWorkspaceSlugMembersActivityTypeEnumInsidedQuestionReplied       GetWorkspaceSlugMembersActivityTypeEnum = "insided:question:replied"
	GetWorkspaceSlugMembersActivityTypeEnumDiscussionsComment           GetWorkspaceSlugMembersActivityTypeEnum = "discussions:comment"
	GetWorkspaceSlugMembersActivityTypeEnumDiscussionsReply             GetWorkspaceSlugMembersActivityTypeEnum = "discussions:reply"
	GetWorkspaceSlugMembersActivityTypeEnumInsidedArticleReplied        GetWorkspaceSlugMembersActivityTypeEnum = "insided:article:replied"
	GetWorkspaceSlugMembersActivityTypeEnumInsidedQuestionAsked         GetWorkspaceSlugMembersActivityTypeEnum = "insided:question:asked"
	GetWorkspaceSlugMembersActivityTypeEnumInsidedConversationReplied   GetWorkspaceSlugMembersActivityTypeEnum = "insided:conversation:replied"
	GetWorkspaceSlugMembersActivityTypeEnumInsidedIdeaSubmitted         GetWorkspaceSlugMembersActivityTypeEnum = "insided:idea:submitted"
	GetWorkspaceSlugMembersActivityTypeEnumRedditComment                GetWorkspaceSlugMembersActivityTypeEnum = "reddit:comment"
	GetWorkspaceSlugMembersActivityTypeEnumRedditPost                   GetWorkspaceSlugMembersActivityTypeEnum = "reddit:post"
	GetWorkspaceSlugMembersActivityTypeEnumStackoverflowAnswer          GetWorkspaceSlugMembersActivityTypeEnum = "stackoverflow:answer"
	GetWorkspaceSlugMembersActivityTypeEnumLinkedinComment              GetWorkspaceSlugMembersActivityTypeEnum = "linkedin:comment"
	GetWorkspaceSlugMembersActivityTypeEnumPullRequestsOpened           GetWorkspaceSlugMembersActivityTypeEnum = "pull_requests:opened"
	GetWorkspaceSlugMembersActivityTypeEnumPullRequestsMerged           GetWorkspaceSlugMembersActivityTypeEnum = "pull_requests:merged"
	GetWorkspaceSlugMembersActivityTypeEnumStarCreated                  GetWorkspaceSlugMembersActivityTypeEnum = "star:created"
	GetWorkspaceSlugMembersActivityTypeEnumStackoverflowQuestion        GetWorkspaceSlugMembersActivityTypeEnum = "stackoverflow:question"
	GetWorkspaceSlugMembersActivityTypeEnumTweetSent                    GetWorkspaceSlugMembersActivityTypeEnum = "tweet:sent"
	GetWorkspaceSlugMembersActivityTypeEnumTwitterFollowed              GetWorkspaceSlugMembersActivityTypeEnum = "twitter:followed"
	GetWorkspaceSlugMembersActivityTypeEnumYoutubeComment               GetWorkspaceSlugMembersActivityTypeEnum = "youtube:comment"
)

func (e *GetWorkspaceSlugMembersActivityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "discourse:topic:created":
		fallthrough
	case "discourse:post:liked":
		fallthrough
	case "discourse:user:created":
		fallthrough
	case "discourse:post:created":
		fallthrough
	case "slack:message:sent":
		fallthrough
	case "slack:thread:replied":
		fallthrough
	case "slack:channel:joined":
		fallthrough
	case "note:created":
		fallthrough
	case "post:created":
		fallthrough
	case "issues:opened":
		fallthrough
	case "discord:message:sent":
		fallthrough
	case "issue_comment:created":
		fallthrough
	case "discord:thread:replied":
		fallthrough
	case "custom:happened":
		fallthrough
	case "dev:comment":
		fallthrough
	case "discord:message:replied":
		fallthrough
	case "discord:server:joined":
		fallthrough
	case "insided:conversation:started":
		fallthrough
	case "fork:created":
		fallthrough
	case "insided:idea:replied":
		fallthrough
	case "insided:article:created":
		fallthrough
	case "discussions:discussion_created":
		fallthrough
	case "insided:question:replied":
		fallthrough
	case "discussions:comment":
		fallthrough
	case "discussions:reply":
		fallthrough
	case "insided:article:replied":
		fallthrough
	case "insided:question:asked":
		fallthrough
	case "insided:conversation:replied":
		fallthrough
	case "insided:idea:submitted":
		fallthrough
	case "reddit:comment":
		fallthrough
	case "reddit:post":
		fallthrough
	case "stackoverflow:answer":
		fallthrough
	case "linkedin:comment":
		fallthrough
	case "pull_requests:opened":
		fallthrough
	case "pull_requests:merged":
		fallthrough
	case "star:created":
		fallthrough
	case "stackoverflow:question":
		fallthrough
	case "tweet:sent":
		fallthrough
	case "twitter:followed":
		fallthrough
	case "youtube:comment":
		*e = GetWorkspaceSlugMembersActivityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugMembersActivityTypeEnum: %s", s)
	}
}

// GetWorkspaceSlugMembersAffiliationEnum
type GetWorkspaceSlugMembersAffiliationEnum string

const (
	GetWorkspaceSlugMembersAffiliationEnumMember   GetWorkspaceSlugMembersAffiliationEnum = "member"
	GetWorkspaceSlugMembersAffiliationEnumTeammate GetWorkspaceSlugMembersAffiliationEnum = "teammate"
)

func (e *GetWorkspaceSlugMembersAffiliationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "member":
		fallthrough
	case "teammate":
		*e = GetWorkspaceSlugMembersAffiliationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugMembersAffiliationEnum: %s", s)
	}
}

// GetWorkspaceSlugMembersDirectionEnum
type GetWorkspaceSlugMembersDirectionEnum string

const (
	GetWorkspaceSlugMembersDirectionEnumAsc  GetWorkspaceSlugMembersDirectionEnum = "ASC"
	GetWorkspaceSlugMembersDirectionEnumDesc GetWorkspaceSlugMembersDirectionEnum = "DESC"
)

func (e *GetWorkspaceSlugMembersDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASC":
		fallthrough
	case "DESC":
		*e = GetWorkspaceSlugMembersDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugMembersDirectionEnum: %s", s)
	}
}

// GetWorkspaceSlugMembersIdentityEnum
type GetWorkspaceSlugMembersIdentityEnum string

const (
	GetWorkspaceSlugMembersIdentityEnumGithub    GetWorkspaceSlugMembersIdentityEnum = "github"
	GetWorkspaceSlugMembersIdentityEnumTwitter   GetWorkspaceSlugMembersIdentityEnum = "twitter"
	GetWorkspaceSlugMembersIdentityEnumEmail     GetWorkspaceSlugMembersIdentityEnum = "email"
	GetWorkspaceSlugMembersIdentityEnumDiscourse GetWorkspaceSlugMembersIdentityEnum = "discourse"
	GetWorkspaceSlugMembersIdentityEnumLinkedin  GetWorkspaceSlugMembersIdentityEnum = "linkedin"
	GetWorkspaceSlugMembersIdentityEnumDevto     GetWorkspaceSlugMembersIdentityEnum = "devto"
	GetWorkspaceSlugMembersIdentityEnumSlack     GetWorkspaceSlugMembersIdentityEnum = "slack"
	GetWorkspaceSlugMembersIdentityEnumDiscord   GetWorkspaceSlugMembersIdentityEnum = "discord"
)

func (e *GetWorkspaceSlugMembersIdentityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "github":
		fallthrough
	case "twitter":
		fallthrough
	case "email":
		fallthrough
	case "discourse":
		fallthrough
	case "linkedin":
		fallthrough
	case "devto":
		fallthrough
	case "slack":
		fallthrough
	case "discord":
		*e = GetWorkspaceSlugMembersIdentityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugMembersIdentityEnum: %s", s)
	}
}

// GetWorkspaceSlugMembersItemsEnum
type GetWorkspaceSlugMembersItemsEnum string

const (
	GetWorkspaceSlugMembersItemsEnumTen        GetWorkspaceSlugMembersItemsEnum = "10"
	GetWorkspaceSlugMembersItemsEnumFifty      GetWorkspaceSlugMembersItemsEnum = "50"
	GetWorkspaceSlugMembersItemsEnumOneHundred GetWorkspaceSlugMembersItemsEnum = "100"
)

func (e *GetWorkspaceSlugMembersItemsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "10":
		fallthrough
	case "50":
		fallthrough
	case "100":
		*e = GetWorkspaceSlugMembersItemsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugMembersItemsEnum: %s", s)
	}
}

// GetWorkspaceSlugMembersSortEnum
type GetWorkspaceSlugMembersSortEnum string

const (
	GetWorkspaceSlugMembersSortEnumActivitiesCount  GetWorkspaceSlugMembersSortEnum = "activities_count"
	GetWorkspaceSlugMembersSortEnumCompany          GetWorkspaceSlugMembersSortEnum = "company"
	GetWorkspaceSlugMembersSortEnumCreatedAt        GetWorkspaceSlugMembersSortEnum = "created_at"
	GetWorkspaceSlugMembersSortEnumFirstActivity    GetWorkspaceSlugMembersSortEnum = "first_activity"
	GetWorkspaceSlugMembersSortEnumGithubFollowers  GetWorkspaceSlugMembersSortEnum = "github_followers"
	GetWorkspaceSlugMembersSortEnumID               GetWorkspaceSlugMembersSortEnum = "id"
	GetWorkspaceSlugMembersSortEnumLastActivity     GetWorkspaceSlugMembersSortEnum = "last_activity"
	GetWorkspaceSlugMembersSortEnumLocation         GetWorkspaceSlugMembersSortEnum = "location"
	GetWorkspaceSlugMembersSortEnumLove             GetWorkspaceSlugMembersSortEnum = "love"
	GetWorkspaceSlugMembersSortEnumName             GetWorkspaceSlugMembersSortEnum = "name"
	GetWorkspaceSlugMembersSortEnumOrbit            GetWorkspaceSlugMembersSortEnum = "orbit"
	GetWorkspaceSlugMembersSortEnumReach            GetWorkspaceSlugMembersSortEnum = "reach"
	GetWorkspaceSlugMembersSortEnumTitle            GetWorkspaceSlugMembersSortEnum = "title"
	GetWorkspaceSlugMembersSortEnumTwitterFollowers GetWorkspaceSlugMembersSortEnum = "twitter_followers"
	GetWorkspaceSlugMembersSortEnumUpdatedAt        GetWorkspaceSlugMembersSortEnum = "updated_at"
)

func (e *GetWorkspaceSlugMembersSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "activities_count":
		fallthrough
	case "company":
		fallthrough
	case "created_at":
		fallthrough
	case "first_activity":
		fallthrough
	case "github_followers":
		fallthrough
	case "id":
		fallthrough
	case "last_activity":
		fallthrough
	case "location":
		fallthrough
	case "love":
		fallthrough
	case "name":
		fallthrough
	case "orbit":
		fallthrough
	case "reach":
		fallthrough
	case "title":
		fallthrough
	case "twitter_followers":
		fallthrough
	case "updated_at":
		*e = GetWorkspaceSlugMembersSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkspaceSlugMembersSortEnum: %s", s)
	}
}

type GetWorkspaceSlugMembersRequest struct {
	ActivitiesCountMax *string `queryParam:"style=form,explode=true,name=activities_count_max"`
	ActivitiesCountMin *string `queryParam:"style=form,explode=true,name=activities_count_min"`
	// Comma separated list of activity types
	ActivityType *GetWorkspaceSlugMembersActivityTypeEnum `queryParam:"style=form,explode=true,name=activity_type"`
	Affiliation  *GetWorkspaceSlugMembersAffiliationEnum  `queryParam:"style=form,explode=true,name=affiliation"`
	// Comma separated list of cities. The union (OR) of cities is applied.
	Cities *string `queryParam:"style=form,explode=true,name=cities[]"`
	// Comma separated list of companies. The union (OR) of companies is applied.
	Company *string `queryParam:"style=form,explode=true,name=company[]"`
	// Comma separated list of countries. The union (OR) of countries is applied.
	Countries *string                               `queryParam:"style=form,explode=true,name=countries[]"`
	Direction *GetWorkspaceSlugMembersDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// Filter activities before this date. Format: YYYY-MM-DD.
	EndDate  *string                              `queryParam:"style=form,explode=true,name=end_date"`
	Identity *GetWorkspaceSlugMembersIdentityEnum `queryParam:"style=form,explode=true,name=identity"`
	Items    *GetWorkspaceSlugMembersItemsEnum    `queryParam:"style=form,explode=true,name=items"`
	// The list of tags to filter against. Separate tags with `,` to do an intersection (AND), or with `|` to do a union (OR)
	MemberTags *string `queryParam:"style=form,explode=true,name=member_tags"`
	// The list of orbit levels to filter against. Accepted values are 1, 2, 3, 4, n. In the request, a format like `23` would include levels 2 and 3. `n` is for members with no orbit level.
	Orbit *string `queryParam:"style=form,explode=true,name=orbit"`
	Page  *string `queryParam:"style=form,explode=true,name=page"`
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Comma separated list of regions. The union (OR) of regions is applied.
	Regions *string `queryParam:"style=form,explode=true,name=regions[]"`
	// Relative timeframes. Format: this_<integer>_<period>, with period in [days, weeks, months, years]. For example, this_30_days.
	Relative *string                          `queryParam:"style=form,explode=true,name=relative"`
	Sort     *GetWorkspaceSlugMembersSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Filter activities after this date. Format: YYYY-MM-DD.
	StartDate *string `queryParam:"style=form,explode=true,name=start_date"`
	// Comma separated list of job titles. The union (OR) of job titles is applied.
	Title *string `queryParam:"style=form,explode=true,name=title[]"`
	// Deprecated in favor of the activity_type parameter.
	Type          *string `queryParam:"style=form,explode=true,name=type"`
	WorkspaceSlug string  `pathParam:"style=simple,explode=false,name=workspace_slug"`
}

type GetWorkspaceSlugMembersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
