/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WebhookEventTypeEnumEnum } from "./webhookeventtypeenumenum";
import { Expose, Transform, Type } from "class-transformer";

export class WebhookEventResourceAttributes extends SpeakeasyBase {
  /**
   * The date-time at which this event was generated.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The type of this event. This can be used to determine what action to
   *
   * @remarks
   * take in response to the event.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventType" })
  eventType: WebhookEventTypeEnumEnum;
}

export class WebhookEventResourceRelationshipsTransactionData extends SpeakeasyBase {
  /**
   * The unique identifier of the resource within its type.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The type of this resource: `transactions`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class WebhookEventResourceRelationshipsTransactionLinks extends SpeakeasyBase {
  /**
   * The link to retrieve the related resource(s) in this relationship.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "related" })
  related: string;
}

export class WebhookEventResourceRelationshipsTransaction extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => WebhookEventResourceRelationshipsTransactionData)
  data: WebhookEventResourceRelationshipsTransactionData;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => WebhookEventResourceRelationshipsTransactionLinks)
  links?: WebhookEventResourceRelationshipsTransactionLinks;
}

export class WebhookEventResourceRelationshipsWebhookData extends SpeakeasyBase {
  /**
   * The unique identifier of the resource within its type.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The type of this resource: `webhooks`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class WebhookEventResourceRelationshipsWebhookLinks extends SpeakeasyBase {
  /**
   * The link to retrieve the related resource(s) in this relationship.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "related" })
  related: string;
}

export class WebhookEventResourceRelationshipsWebhook extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => WebhookEventResourceRelationshipsWebhookData)
  data: WebhookEventResourceRelationshipsWebhookData;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => WebhookEventResourceRelationshipsWebhookLinks)
  links?: WebhookEventResourceRelationshipsWebhookLinks;
}

export class WebhookEventResourceRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "transaction" })
  @Type(() => WebhookEventResourceRelationshipsTransaction)
  transaction?: WebhookEventResourceRelationshipsTransaction;

  @SpeakeasyMetadata()
  @Expose({ name: "webhook" })
  @Type(() => WebhookEventResourceRelationshipsWebhook)
  webhook: WebhookEventResourceRelationshipsWebhook;
}

/**
 * Provides the event data used in asynchronous webhook event callbacks to
 *
 * @remarks
 * subscribed endpoints. Webhooks events have defined `eventType`s and may
 * optionally relate to other resources within the Up API.
 *
 */
export class WebhookEventResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => WebhookEventResourceAttributes)
  attributes: WebhookEventResourceAttributes;

  /**
   * The unique identifier for this event. This will remain constant across
   *
   * @remarks
   * delivery retries.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => WebhookEventResourceRelationships)
  relationships: WebhookEventResourceRelationships;

  /**
   * The type of this resource: `webhook-events`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
