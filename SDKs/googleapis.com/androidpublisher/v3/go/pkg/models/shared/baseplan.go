// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BasePlanInput - A single base plan for a subscription.
type BasePlanInput struct {
	// Represents a base plan that automatically renews at the end of its subscription period.
	AutoRenewingBasePlanType *AutoRenewingBasePlanType `json:"autoRenewingBasePlanType,omitempty"`
	// Required. Immutable. The unique identifier of this base plan. Must be unique within the subscription, and conform with RFC-1034. That is, this ID can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 63 characters.
	BasePlanID *string `json:"basePlanId,omitempty"`
	// List of up to 20 custom tags specified for this base plan, and returned to the app through the billing library. Subscription offers for this base plan will also receive these offer tags in the billing library.
	OfferTags []OfferTag `json:"offerTags,omitempty"`
	// Pricing information for any new locations Play may launch in.
	OtherRegionsConfig *OtherRegionsBasePlanConfig `json:"otherRegionsConfig,omitempty"`
	// Represents a base plan that does not automatically renew at the end of the base plan, and must be manually renewed by the user.
	PrepaidBasePlanType *PrepaidBasePlanType `json:"prepaidBasePlanType,omitempty"`
	// Region-specific information for this base plan.
	RegionalConfigs []RegionalBasePlanConfig `json:"regionalConfigs,omitempty"`
}

// BasePlanStateEnum - Output only. The state of the base plan, i.e. whether it's active. Draft and inactive base plans can be activated or deleted. Active base plans can be made inactive. Inactive base plans can be canceled. This field cannot be changed by updating the resource. Use the dedicated endpoints instead.
type BasePlanStateEnum string

const (
	BasePlanStateEnumStateUnspecified BasePlanStateEnum = "STATE_UNSPECIFIED"
	BasePlanStateEnumDraft            BasePlanStateEnum = "DRAFT"
	BasePlanStateEnumActive           BasePlanStateEnum = "ACTIVE"
	BasePlanStateEnumInactive         BasePlanStateEnum = "INACTIVE"
)

func (e *BasePlanStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "DRAFT":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		*e = BasePlanStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BasePlanStateEnum: %s", s)
	}
}

// BasePlan - A single base plan for a subscription.
type BasePlan struct {
	// Represents a base plan that automatically renews at the end of its subscription period.
	AutoRenewingBasePlanType *AutoRenewingBasePlanType `json:"autoRenewingBasePlanType,omitempty"`
	// Required. Immutable. The unique identifier of this base plan. Must be unique within the subscription, and conform with RFC-1034. That is, this ID can only contain lower-case letters (a-z), numbers (0-9), and hyphens (-), and be at most 63 characters.
	BasePlanID *string `json:"basePlanId,omitempty"`
	// List of up to 20 custom tags specified for this base plan, and returned to the app through the billing library. Subscription offers for this base plan will also receive these offer tags in the billing library.
	OfferTags []OfferTag `json:"offerTags,omitempty"`
	// Pricing information for any new locations Play may launch in.
	OtherRegionsConfig *OtherRegionsBasePlanConfig `json:"otherRegionsConfig,omitempty"`
	// Represents a base plan that does not automatically renew at the end of the base plan, and must be manually renewed by the user.
	PrepaidBasePlanType *PrepaidBasePlanType `json:"prepaidBasePlanType,omitempty"`
	// Region-specific information for this base plan.
	RegionalConfigs []RegionalBasePlanConfig `json:"regionalConfigs,omitempty"`
	// Output only. The state of the base plan, i.e. whether it's active. Draft and inactive base plans can be activated or deleted. Active base plans can be made inactive. Inactive base plans can be canceled. This field cannot be changed by updating the resource. Use the dedicated endpoints instead.
	State *BasePlanStateEnum `json:"state,omitempty"`
}
