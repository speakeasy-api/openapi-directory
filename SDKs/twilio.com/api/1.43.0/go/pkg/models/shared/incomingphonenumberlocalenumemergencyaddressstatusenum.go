// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum string

const (
	IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnumRegistered            IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum = "registered"
	IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnumUnregistered          IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum = "unregistered"
	IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnumPendingRegistration   IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum = "pending-registration"
	IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnumRegistrationFailure   IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum = "registration-failure"
	IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnumPendingUnregistration IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum = "pending-unregistration"
	IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnumUnregistrationFailure IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum = "unregistration-failure"
)

func (e IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum) ToPointer() *IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum {
	return &e
}

func (e *IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "registered":
		fallthrough
	case "unregistered":
		fallthrough
	case "pending-registration":
		fallthrough
	case "registration-failure":
		fallthrough
	case "pending-unregistration":
		fallthrough
	case "unregistration-failure":
		*e = IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IncomingPhoneNumberLocalEnumEmergencyAddressStatusEnum: %v", v)
	}
}
