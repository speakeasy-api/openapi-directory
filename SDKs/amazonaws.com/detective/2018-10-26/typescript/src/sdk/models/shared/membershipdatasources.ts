/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { TimestampForCollection } from "./timestampforcollection";
import { Expose, Transform } from "class-transformer";

/**
 * Details on data source packages for members of the behavior graph.
 */
export class MembershipDatasources extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId?: string;

  @SpeakeasyMetadata({ elemType: TimestampForCollection, elemDepth: 2 })
  @Expose({ name: "DatasourcePackageIngestHistory" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Record<string, TimestampForCollection>> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], TimestampForCollection);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  datasourcePackageIngestHistory?: Record<
    string,
    Record<string, TimestampForCollection>
  >;

  @SpeakeasyMetadata()
  @Expose({ name: "GraphArn" })
  graphArn?: string;
}
