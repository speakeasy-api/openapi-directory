/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedManufacturer } from "./nestedmanufacturer";
import { Expose, Transform, Type } from "class-transformer";

export class DeviceTypeInterfaceOrdering extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class DeviceTypeSubdeviceRole extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: boolean;
}

export class DeviceType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "instance_count" })
  instanceCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "interface_ordering" })
  @Type(() => DeviceTypeInterfaceOrdering)
  interfaceOrdering?: DeviceTypeInterfaceOrdering;

  /**
   * This type of device has console server ports
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_console_server" })
  isConsoleServer?: boolean;

  /**
   * Device consumes both front and rear rack faces
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_full_depth" })
  isFullDepth?: boolean;

  /**
   * This type of device has network interfaces
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_network_device" })
  isNetworkDevice?: boolean;

  /**
   * This type of device has power outlets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_pdu" })
  isPdu?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "manufacturer" })
  @Type(() => NestedManufacturer)
  manufacturer: NestedManufacturer;

  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model: string;

  /**
   * Discrete part number (optional)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "part_number" })
  partNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subdevice_role" })
  @Type(() => DeviceTypeSubdeviceRole)
  subdeviceRole?: DeviceTypeSubdeviceRole;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "u_height" })
  uHeight?: number;
}
