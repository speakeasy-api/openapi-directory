/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class UpdateAliasSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiKeyAuth: string;
}

export class UpdateAliasRequest extends SpeakeasyBase {
  /**
   * alias properties you wish to be updated
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  createAliasModel: shared.CreateAliasModel;

  /**
   * alias (without `/` at the beginning)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=aliasName",
  })
  aliasName: string;

  /**
   * domain which alias belongs to (string without `http/https` or `/`)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=domainName",
  })
  domainName?: string;
}

export class UpdateAliasResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
