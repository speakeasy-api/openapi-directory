/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AwsEcsServiceCapacityProviderStrategyDetails } from "./awsecsservicecapacityproviderstrategydetails";
import { AwsEcsServiceDeploymentConfigurationDetails } from "./awsecsservicedeploymentconfigurationdetails";
import { AwsEcsServiceDeploymentControllerDetails } from "./awsecsservicedeploymentcontrollerdetails";
import { AwsEcsServiceLoadBalancersDetails } from "./awsecsserviceloadbalancersdetails";
import { AwsEcsServiceNetworkConfigurationDetails } from "./awsecsservicenetworkconfigurationdetails";
import { AwsEcsServicePlacementConstraintsDetails } from "./awsecsserviceplacementconstraintsdetails";
import { AwsEcsServicePlacementStrategiesDetails } from "./awsecsserviceplacementstrategiesdetails";
import { AwsEcsServiceServiceRegistriesDetails } from "./awsecsserviceserviceregistriesdetails";
import { Expose, Type } from "class-transformer";

/**
 * Provides details about a service within an ECS cluster.
 */
export class AwsEcsServiceDetails extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AwsEcsServiceCapacityProviderStrategyDetails })
  @Expose({ name: "CapacityProviderStrategy" })
  @Type(() => AwsEcsServiceCapacityProviderStrategyDetails)
  capacityProviderStrategy?: AwsEcsServiceCapacityProviderStrategyDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "Cluster" })
  cluster?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeploymentConfiguration" })
  @Type(() => AwsEcsServiceDeploymentConfigurationDetails)
  deploymentConfiguration?: AwsEcsServiceDeploymentConfigurationDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "DeploymentController" })
  @Type(() => AwsEcsServiceDeploymentControllerDetails)
  deploymentController?: AwsEcsServiceDeploymentControllerDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "DesiredCount" })
  desiredCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableEcsManagedTags" })
  enableEcsManagedTags?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableExecuteCommand" })
  enableExecuteCommand?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "HealthCheckGracePeriodSeconds" })
  healthCheckGracePeriodSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LaunchType" })
  launchType?: string;

  @SpeakeasyMetadata({ elemType: AwsEcsServiceLoadBalancersDetails })
  @Expose({ name: "LoadBalancers" })
  @Type(() => AwsEcsServiceLoadBalancersDetails)
  loadBalancers?: AwsEcsServiceLoadBalancersDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkConfiguration" })
  @Type(() => AwsEcsServiceNetworkConfigurationDetails)
  networkConfiguration?: AwsEcsServiceNetworkConfigurationDetails;

  @SpeakeasyMetadata({ elemType: AwsEcsServicePlacementConstraintsDetails })
  @Expose({ name: "PlacementConstraints" })
  @Type(() => AwsEcsServicePlacementConstraintsDetails)
  placementConstraints?: AwsEcsServicePlacementConstraintsDetails[];

  @SpeakeasyMetadata({ elemType: AwsEcsServicePlacementStrategiesDetails })
  @Expose({ name: "PlacementStrategies" })
  @Type(() => AwsEcsServicePlacementStrategiesDetails)
  placementStrategies?: AwsEcsServicePlacementStrategiesDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "PlatformVersion" })
  platformVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PropagateTags" })
  propagateTags?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Role" })
  role?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SchedulingStrategy" })
  schedulingStrategy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceArn" })
  serviceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceName" })
  serviceName?: string;

  @SpeakeasyMetadata({ elemType: AwsEcsServiceServiceRegistriesDetails })
  @Expose({ name: "ServiceRegistries" })
  @Type(() => AwsEcsServiceServiceRegistriesDetails)
  serviceRegistries?: AwsEcsServiceServiceRegistriesDetails[];

  @SpeakeasyMetadata()
  @Expose({ name: "TaskDefinition" })
  taskDefinition?: string;
}
