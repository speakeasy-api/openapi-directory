/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum LookupTypeTypeEnum {
  Group = "GROUP",
  Menu = "MENU",
  Role = "ROLE",
  CodeStandard = "CODE_STANDARD",
  CodeType = "CODE_TYPE",
  FeatureType = "FEATURE_TYPE",
  RelationshipType = "RELATIONSHIP_TYPE",
  Identifier = "IDENTIFIER",
  ContactPointType = "CONTACT_POINT_TYPE",
  StatisticType = "STATISTIC_TYPE",
  NewsType = "NEWS_TYPE",
  Gender = "GENDER",
  IbdCrohnslocation = "IBD_CROHNSLOCATION",
  IbdCrohnsproximalterminalileum = "IBD_CROHNSPROXIMALTERMINALILEUM",
  IbdCrohnsperianal = "IBD_CROHNSPERIANAL",
  IbdCrohnsbehaviour = "IBD_CROHNSBEHAVIOUR",
  IbdUcextent = "IBD_UCEXTENT",
  IbdEgimcomplication = "IBD_EGIMCOMPLICATION",
  IbdSurgerymainprocedure = "IBD_SURGERYMAINPROCEDURE",
  IbdSmokingstatus = "IBD_SMOKINGSTATUS",
  IbdFamilyhistory = "IBD_FAMILYHISTORY",
  LinkType = "LINK_TYPE",
}

export class LookupType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: LookupTypeTypeEnum;
}
