<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AwsS3BucketNotificationConfigurationDetail - Details for an S3 bucket notification configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AwsS3BucketNotificationConfigurationDetail
{
	#[\JMS\Serializer\Annotation\SerializedName('Destination')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destination = null;
    
    /**
     * $events
     * 
     * @var ?array<string> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('Events')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AwsS3BucketNotificationConfigurationFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AwsS3BucketNotificationConfigurationFilter $filter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->destination = null;
		$this->events = null;
		$this->filter = null;
		$this->type = null;
	}
}
