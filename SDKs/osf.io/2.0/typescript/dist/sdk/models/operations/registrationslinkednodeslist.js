"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegistrationsLinkedNodesListResponse = exports.RegistrationsLinkedNodesListNode = exports.RegistrationsLinkedNodesListNodeRelationships = exports.RegistrationsLinkedNodesListNodeLinks = exports.RegistrationsLinkedNodesListNodeAttributes = exports.RegistrationsLinkedNodesListNodeAttributesCategoryEnum = exports.RegistrationsLinkedNodesListRequest = void 0;
var utils_1 = require("../../../internal/utils");
var RegistrationsLinkedNodesListRequest = /** @class */ (function (_super) {
    __extends(RegistrationsLinkedNodesListRequest, _super);
    function RegistrationsLinkedNodesListRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=registration_id",
        }),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListRequest.prototype, "registrationId", void 0);
    return RegistrationsLinkedNodesListRequest;
}(utils_1.SpeakeasyBase));
exports.RegistrationsLinkedNodesListRequest = RegistrationsLinkedNodesListRequest;
/**
 * The category of the node, as selected by project contributors.
 */
var RegistrationsLinkedNodesListNodeAttributesCategoryEnum;
(function (RegistrationsLinkedNodesListNodeAttributesCategoryEnum) {
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Analysis"] = "analysis";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Communication"] = "communication";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Data"] = "data";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Hypothesis"] = "hypothesis";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Instrumentation"] = "instrumentation";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["MethodsAndMeasures"] = "methods and measures";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Procedure"] = "procedure";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Project"] = "project";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Software"] = "software";
    RegistrationsLinkedNodesListNodeAttributesCategoryEnum["Other"] = "other";
})(RegistrationsLinkedNodesListNodeAttributesCategoryEnum = exports.RegistrationsLinkedNodesListNodeAttributesCategoryEnum || (exports.RegistrationsLinkedNodesListNodeAttributesCategoryEnum = {}));
/**
 * The properties of the node entity.
 */
var RegistrationsLinkedNodesListNodeAttributes = /** @class */ (function (_super) {
    __extends(RegistrationsLinkedNodesListNodeAttributes, _super);
    function RegistrationsLinkedNodesListNodeAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "collection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "currentUserCanComment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "currentUserPermissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "dateCreated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "dateModified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "fork", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "forkedDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "nodeLicense", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "preprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "public", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "registration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "templateFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeAttributes.prototype, "title", void 0);
    return RegistrationsLinkedNodesListNodeAttributes;
}(utils_1.SpeakeasyBase));
exports.RegistrationsLinkedNodesListNodeAttributes = RegistrationsLinkedNodesListNodeAttributes;
/**
 * URLs to alternative representations of the node entity.
 */
var RegistrationsLinkedNodesListNodeLinks = /** @class */ (function (_super) {
    __extends(RegistrationsLinkedNodesListNodeLinks, _super);
    function RegistrationsLinkedNodesListNodeLinks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeLinks.prototype, "html", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeLinks.prototype, "self", void 0);
    return RegistrationsLinkedNodesListNodeLinks;
}(utils_1.SpeakeasyBase));
exports.RegistrationsLinkedNodesListNodeLinks = RegistrationsLinkedNodesListNodeLinks;
/**
 * URLs to other entities or entity collections that have a relationship to the node entity.
 */
var RegistrationsLinkedNodesListNodeRelationships = /** @class */ (function (_super) {
    __extends(RegistrationsLinkedNodesListNodeRelationships, _super);
    function RegistrationsLinkedNodesListNodeRelationships() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "affiliatedInstitutions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "children", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "citation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "comments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "contributors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "draftRegistrations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "files", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "forkedFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "forks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "identifiers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "license", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "linkedNodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "logs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "nodeLinks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "parent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "preprints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "registrations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "root", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "templateNode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "viewOnlyLinks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNodeRelationships.prototype, "wikis", void 0);
    return RegistrationsLinkedNodesListNodeRelationships;
}(utils_1.SpeakeasyBase));
exports.RegistrationsLinkedNodesListNodeRelationships = RegistrationsLinkedNodesListNodeRelationships;
var RegistrationsLinkedNodesListNode = /** @class */ (function (_super) {
    __extends(RegistrationsLinkedNodesListNode, _super);
    function RegistrationsLinkedNodesListNode() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RegistrationsLinkedNodesListNodeAttributes)
    ], RegistrationsLinkedNodesListNode.prototype, "attributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNode.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RegistrationsLinkedNodesListNodeLinks)
    ], RegistrationsLinkedNodesListNode.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RegistrationsLinkedNodesListNodeRelationships)
    ], RegistrationsLinkedNodesListNode.prototype, "relationships", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListNode.prototype, "type", void 0);
    return RegistrationsLinkedNodesListNode;
}(utils_1.SpeakeasyBase));
exports.RegistrationsLinkedNodesListNode = RegistrationsLinkedNodesListNode;
var RegistrationsLinkedNodesListResponse = /** @class */ (function (_super) {
    __extends(RegistrationsLinkedNodesListResponse, _super);
    function RegistrationsLinkedNodesListResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], RegistrationsLinkedNodesListResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RegistrationsLinkedNodesListResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RegistrationsLinkedNodesListResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RegistrationsLinkedNodesListResponse.prototype, "rawResponse", void 0);
    return RegistrationsLinkedNodesListResponse;
}(utils_1.SpeakeasyBase));
exports.RegistrationsLinkedNodesListResponse = RegistrationsLinkedNodesListResponse;
