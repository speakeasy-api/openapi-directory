/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class GetNamespaceRepositoryImagesTagsResponseResults extends SpeakeasyBase {
  /**
   * `true` if the tag currently points to this image.
   *
   * @remarks
   *
   * `false` if it has been overwritten to point at a different image.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_current" })
  isCurrent?: boolean;

  /**
   * The tag.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag?: string;
}

/**
 * Paginated list of tags for this repository.
 */
export class GetNamespaceRepositoryImagesTagsResponse extends SpeakeasyBase {
  /**
   * Total count of tags for this image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  /**
   * Link to the next page if there are more tags.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  /**
   * Link to the previous page if not on first page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  /**
   * The current and historical tags for this image.
   */
  @SpeakeasyMetadata({
    elemType: GetNamespaceRepositoryImagesTagsResponseResults,
  })
  @Expose({ name: "results" })
  @Type(() => GetNamespaceRepositoryImagesTagsResponseResults)
  results?: GetNamespaceRepositoryImagesTagsResponseResults[];
}
