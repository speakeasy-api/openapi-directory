"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetIncidentsRequest:
    
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_date', 'style': 'form', 'explode': True }})
    r"""filter last_update date <= start_date. YYYY-MM-DD format."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})
    r"""give only the current state of the particular incidents."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""pagination option. Default to 1."""  
    size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'size', 'style': 'form', 'explode': True }})
    r"""pagination option. Default to 30."""  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_date', 'style': 'form', 'explode': True }})
    r"""filter last_update date >= start_date. YYYY-MM-DD format."""  
    state: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'state', 'style': 'form', 'explode': True }})
    r"""comma separated list, filter incidents in the given states."""  
    weboob_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'weboob_id', 'style': 'form', 'explode': True }})
    r"""comma_separated list, filter the incidents of the given weboob_id"""  
    

@dataclasses.dataclass
class GetIncidentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    