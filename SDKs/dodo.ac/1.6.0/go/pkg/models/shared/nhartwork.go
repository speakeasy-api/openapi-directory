// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NHArtworkArtTypeEnum - The type of artwork (either a painting or statue).
type NHArtworkArtTypeEnum string

const (
	NHArtworkArtTypeEnumPainting NHArtworkArtTypeEnum = "Painting"
	NHArtworkArtTypeEnumStatue   NHArtworkArtTypeEnum = "Statue"
)

func (e NHArtworkArtTypeEnum) ToPointer() *NHArtworkArtTypeEnum {
	return &e
}

func (e *NHArtworkArtTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Painting":
		fallthrough
	case "Statue":
		*e = NHArtworkArtTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NHArtworkArtTypeEnum: %v", v)
	}
}

// NHArtworkFakeInfo - Information about the fake version of the artwork. If there is no fake, `fake_info`'s value will be `null`.
type NHArtworkFakeInfo struct {
	// A description of how to identify the fake artwork.
	Description *string `json:"description,omitempty"`
	// Image of the fake artwork.
	ImageURL *string `json:"image_url,omitempty"`
	// The texture of the artwork. Note that statues will not have a texture (value will be empty string).
	TextureURL *string `json:"texture_url,omitempty"`
}

// NHArtworkRealInfo - Information about the genuine version of the artwork.
type NHArtworkRealInfo struct {
	// The description of the artwork.
	Description *string `json:"description,omitempty"`
	// Image of the real artwork.
	ImageURL *string `json:"image_url,omitempty"`
	// The texture of the artwork. Note that statues will not have a texture (value will be empty string).
	TextureURL *string `json:"texture_url,omitempty"`
}

// NHArtwork - A JSON object describing the artwork.
type NHArtwork struct {
	// The name of the real-life analog to the artwork.
	ArtName *string `json:"art_name,omitempty"`
	// The art style of the artwork.
	ArtStyle *string `json:"art_style,omitempty"`
	// The type of artwork (either a painting or statue).
	ArtType *NHArtworkArtTypeEnum `json:"art_type,omitempty"`
	// The author of the real-life analog to the artwork.
	Author *string `json:"author,omitempty"`
	// The availability of the artwork.
	Availability *string `json:"availability,omitempty"`
	// The number of Bells the artwork may be purchased for.
	Buy *int64 `json:"buy,omitempty"`
	// Information about the fake version of the artwork. If there is no fake, `fake_info`'s value will be `null`.
	FakeInfo *NHArtworkFakeInfo `json:"fake_info,omitempty"`
	// Whether the artwork has a fake or not.
	HasFake *bool `json:"has_fake,omitempty"`
	// The length of the artwork.
	Length *float32 `json:"length,omitempty"`
	// Name of the artwork.
	Name *string `json:"name,omitempty"`
	// Information about the genuine version of the artwork.
	RealInfo *NHArtworkRealInfo `json:"real_info,omitempty"`
	// The number of Bells the artwork can be sold to Nook's store for, when it is genuine.
	Sell *int64 `json:"sell,omitempty"`
	// Link to the respective Nookipedia article.
	URL *string `json:"url,omitempty"`
	// The width of the artwork.
	Width *float32 `json:"width,omitempty"`
	// The year that the real-life analog was made. May be an exact year, an estimate ("circa"), or a range.
	Year *string `json:"year,omitempty"`
}
