/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Namespace - A container for services. Namespaces allow administrators to group services together and define permissions for a collection of services.
 */
public class Namespace {
    /**
     * Output only. The timestamp when the namespace was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Namespace withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Optional. Resource labels associated with this namespace. No more than 64 user labels can be associated with a given resource. Label keys and values can be no longer than 63 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Namespace withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Immutable. The resource name for the namespace in the format `projects/* /locations/* /namespaces/*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Namespace withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. A globally unique identifier (in UUID4 format) for this namespace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public Namespace withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The timestamp when the namespace was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Namespace withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Namespace(){}
}
