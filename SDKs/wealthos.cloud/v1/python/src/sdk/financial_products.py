"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Optional

class FinancialProducts:
    r"""Financial Products are the tax wrapper investment vehicles offered by the Wealth Manager (e.g. General Investment Accounts, Stocks and Shares ISAs, SIPPs, LISAs etc.). Currently WealthOS supports General Investment Accounts (GIAs).
    
    The Financial Products endpoint returns all financial products and their configurations setup by the Wealth Manager via the WealthOS Admin UI.
    """
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_all_financial_products(self, request: operations.GetAllFinancialProductsRequest, security: operations.GetAllFinancialProductsSecurity) -> operations.GetAllFinancialProductsResponse:
        r"""Get All Financial Products
        Returns all the financial products setup for the tenant in an array
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/tenant/financial-products/v1'
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GetAllFinancialProductsRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetAllFinancialProductsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetAllFinancialProducts200ApplicationJSON])
                res.get_all_financial_products_200_application_json_object = out
        elif http_res.status_code == 400:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetAllFinancialProducts400ApplicationJSON])
                res.get_all_financial_products_400_application_json_object = out
        elif http_res.status_code == 401:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetAllFinancialProducts401ApplicationJSON])
                res.get_all_financial_products_401_application_json_object = out
        elif http_res.status_code == 403:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetAllFinancialProducts403ApplicationJSON])
                res.get_all_financial_products_403_application_json_object = out
        elif http_res.status_code == 404:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetAllFinancialProducts404ApplicationJSON])
                res.get_all_financial_products_404_application_json_object = out
        elif http_res.status_code == 429:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetAllFinancialProducts429ApplicationJSON])
                res.get_all_financial_products_429_application_json_object = out
        elif http_res.status_code == 500:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetAllFinancialProducts500ApplicationJSON])
                res.get_all_financial_products_500_application_json_object = out

        return res

    