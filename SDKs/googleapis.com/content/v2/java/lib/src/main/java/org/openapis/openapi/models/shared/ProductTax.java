/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ProductTax {
    /**
     * The country within which the item is taxed, specified as a CLDR territory code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public ProductTax withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The numeric ID of a location that the tax rate applies to as defined in the AdWords API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationId")
    public String locationId;

    public ProductTax withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalCode")
    public String postalCode;

    public ProductTax withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * The percentage of tax rate that applies to the item price.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rate")
    public Double rate;

    public ProductTax withRate(Double rate) {
        this.rate = rate;
        return this;
    }
    
    /**
     * The geographic region to which the tax rate applies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;

    public ProductTax withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * Should be set to true if tax is charged on shipping.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxShip")
    public Boolean taxShip;

    public ProductTax withTaxShip(Boolean taxShip) {
        this.taxShip = taxShip;
        return this;
    }
    
    public ProductTax(){}
}
