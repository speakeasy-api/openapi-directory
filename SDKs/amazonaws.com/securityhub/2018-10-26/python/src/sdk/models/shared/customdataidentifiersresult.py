"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import customdataidentifiersdetections as shared_customdataidentifiersdetections
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomDataIdentifiersResult:
    r"""Contains an instance of sensitive data that was detected by a customer-defined identifier."""
    
    detections: Optional[list[shared_customdataidentifiersdetections.CustomDataIdentifiersDetections]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Detections'), 'exclude': lambda f: f is None }})  
    total_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalCount'), 'exclude': lambda f: f is None }})  
    