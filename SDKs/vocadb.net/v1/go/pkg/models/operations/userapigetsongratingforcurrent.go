// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UserAPIGetSongRatingForCurrentPathParams struct {
	// ID of the song whose rating is to be checked.
	SongID int `pathParam:"style=simple,explode=false,name=songId"`
}

type UserAPIGetSongRatingForCurrentRequest struct {
	PathParams UserAPIGetSongRatingForCurrentPathParams
}

// UserAPIGetSongRatingForCurrent200TextJSONEnum - OK
type UserAPIGetSongRatingForCurrent200TextJSONEnum string

const (
	UserAPIGetSongRatingForCurrent200TextJSONEnumNothing  UserAPIGetSongRatingForCurrent200TextJSONEnum = "Nothing"
	UserAPIGetSongRatingForCurrent200TextJSONEnumDislike  UserAPIGetSongRatingForCurrent200TextJSONEnum = "Dislike"
	UserAPIGetSongRatingForCurrent200TextJSONEnumLike     UserAPIGetSongRatingForCurrent200TextJSONEnum = "Like"
	UserAPIGetSongRatingForCurrent200TextJSONEnumFavorite UserAPIGetSongRatingForCurrent200TextJSONEnum = "Favorite"
)

func (e *UserAPIGetSongRatingForCurrent200TextJSONEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Dislike":
		fallthrough
	case "Like":
		fallthrough
	case "Favorite":
		*e = UserAPIGetSongRatingForCurrent200TextJSONEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetSongRatingForCurrent200TextJSONEnum: %s", s)
	}
}

// UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum - OK
type UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum string

const (
	UserAPIGetSongRatingForCurrent200ApplicationJsonpEnumNothing  UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum = "Nothing"
	UserAPIGetSongRatingForCurrent200ApplicationJsonpEnumDislike  UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum = "Dislike"
	UserAPIGetSongRatingForCurrent200ApplicationJsonpEnumLike     UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum = "Like"
	UserAPIGetSongRatingForCurrent200ApplicationJsonpEnumFavorite UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum = "Favorite"
)

func (e *UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Dislike":
		fallthrough
	case "Like":
		fallthrough
	case "Favorite":
		*e = UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum: %s", s)
	}
}

// UserAPIGetSongRatingForCurrent200ApplicationJSONEnum - OK
type UserAPIGetSongRatingForCurrent200ApplicationJSONEnum string

const (
	UserAPIGetSongRatingForCurrent200ApplicationJSONEnumNothing  UserAPIGetSongRatingForCurrent200ApplicationJSONEnum = "Nothing"
	UserAPIGetSongRatingForCurrent200ApplicationJSONEnumDislike  UserAPIGetSongRatingForCurrent200ApplicationJSONEnum = "Dislike"
	UserAPIGetSongRatingForCurrent200ApplicationJSONEnumLike     UserAPIGetSongRatingForCurrent200ApplicationJSONEnum = "Like"
	UserAPIGetSongRatingForCurrent200ApplicationJSONEnumFavorite UserAPIGetSongRatingForCurrent200ApplicationJSONEnum = "Favorite"
)

func (e *UserAPIGetSongRatingForCurrent200ApplicationJSONEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Dislike":
		fallthrough
	case "Like":
		fallthrough
	case "Favorite":
		*e = UserAPIGetSongRatingForCurrent200ApplicationJSONEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetSongRatingForCurrent200ApplicationJSONEnum: %s", s)
	}
}

// UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum - OK
type UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum string

const (
	UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnumNothing  UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum = "Nothing"
	UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnumDislike  UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum = "Dislike"
	UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnumLike     UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum = "Like"
	UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnumFavorite UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum = "Favorite"
)

func (e *UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Dislike":
		fallthrough
	case "Like":
		fallthrough
	case "Favorite":
		*e = UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetSongRatingForCurrent200ApplicationJavascriptEnum: %s", s)
	}
}

type UserAPIGetSongRatingForCurrentResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	UserAPIGetSongRatingForCurrent200ApplicationJSONStringEnum *UserAPIGetSongRatingForCurrent200ApplicationJSONEnum
	// OK
	UserAPIGetSongRatingForCurrent200ApplicationJsonpStringEnum *UserAPIGetSongRatingForCurrent200ApplicationJsonpEnum
	// OK
	UserAPIGetSongRatingForCurrent200TextJSONStringEnum *UserAPIGetSongRatingForCurrent200TextJSONEnum
}
