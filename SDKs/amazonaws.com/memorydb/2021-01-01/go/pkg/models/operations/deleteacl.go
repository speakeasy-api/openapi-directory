// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteACLXAmzTargetEnum
type DeleteACLXAmzTargetEnum string

const (
	DeleteACLXAmzTargetEnumAmazonMemoryDbDeleteACL DeleteACLXAmzTargetEnum = "AmazonMemoryDB.DeleteACL"
)

func (e DeleteACLXAmzTargetEnum) ToPointer() *DeleteACLXAmzTargetEnum {
	return &e
}

func (e *DeleteACLXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonMemoryDB.DeleteACL":
		*e = DeleteACLXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteACLXAmzTargetEnum: %v", v)
	}
}

type DeleteACLRequest struct {
	DeleteACLRequest  shared.DeleteACLRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteACLXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteACLResponse struct {
	// ACLNotFoundFault
	ACLNotFoundFault interface{}
	ContentType      string
	// Success
	DeleteACLResponse *shared.DeleteACLResponse
	// InvalidACLStateFault
	InvalidACLStateFault interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
}
