// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type OrganizationUpdateAvatarSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type OrganizationUpdateAvatarPathParams struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

type OrganizationUpdateAvatarRequestBodyAvatar struct {
	Avatar  string `multipartForm:"name=avatar"`
	Content []byte `multipartForm:"content"`
}

type OrganizationUpdateAvatarRequestBody struct {
	// The image for an Organization avatar to upload.
	Avatar *OrganizationUpdateAvatarRequestBodyAvatar `multipartForm:"file"`
}

type OrganizationUpdateAvatarRequest struct {
	PathParams OrganizationUpdateAvatarPathParams
	Request    *OrganizationUpdateAvatarRequestBody `request:"mediaType=multipart/form-data"`
	Security   OrganizationUpdateAvatarSecurity
}

type OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum string

const (
	OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnumBadRequest          OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnumConflict            OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "Conflict"
	OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnumNotAcceptable       OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnumNotFound            OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "NotFound"
	OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnumInternalServerError OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnumUnauthorized        OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnumTooManyRequests     OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type OrganizationUpdateAvatarDefaultApplicationJSONError struct {
	Code    OrganizationUpdateAvatarDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                      `json:"message"`
}

// OrganizationUpdateAvatarDefaultApplicationJSON - Error
type OrganizationUpdateAvatarDefaultApplicationJSON struct {
	Error OrganizationUpdateAvatarDefaultApplicationJSONError `json:"error"`
}

// OrganizationUpdateAvatar200ApplicationJSONOriginEnum - The creation origin of this organization
type OrganizationUpdateAvatar200ApplicationJSONOriginEnum string

const (
	OrganizationUpdateAvatar200ApplicationJSONOriginEnumAppcenter OrganizationUpdateAvatar200ApplicationJSONOriginEnum = "appcenter"
	OrganizationUpdateAvatar200ApplicationJSONOriginEnumHockeyapp OrganizationUpdateAvatar200ApplicationJSONOriginEnum = "hockeyapp"
)

func (e *OrganizationUpdateAvatar200ApplicationJSONOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		*e = OrganizationUpdateAvatar200ApplicationJSONOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationUpdateAvatar200ApplicationJSONOriginEnum: %s", s)
	}
}

// OrganizationUpdateAvatar200ApplicationJSON - Success
type OrganizationUpdateAvatar200ApplicationJSON struct {
	// The URL to a user-uploaded Avatar image
	AvatarURL *string `json:"avatar_url,omitempty"`
	// The creation date of this organization
	CreatedAt string `json:"created_at"`
	// The display name of the organization
	DisplayName string `json:"display_name"`
	// The internal unique id (UUID) of the organization.
	ID string `json:"id"`
	// The slug name of the organization
	Name string `json:"name"`
	// The creation origin of this organization
	Origin OrganizationUpdateAvatar200ApplicationJSONOriginEnum `json:"origin"`
	// The date the organization was last updated at
	UpdatedAt string `json:"updated_at"`
}

type OrganizationUpdateAvatarResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	OrganizationUpdateAvatar200ApplicationJSONObject *OrganizationUpdateAvatar200ApplicationJSON
	// Error
	OrganizationUpdateAvatarDefaultApplicationJSONObject *OrganizationUpdateAvatarDefaultApplicationJSON
}
