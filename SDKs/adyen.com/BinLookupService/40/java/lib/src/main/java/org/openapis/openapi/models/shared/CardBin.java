/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CardBin {
    /**
     * The first 6 digit of the card number. Enable this field via merchant account settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bin")
    public String bin;
    public CardBin withBin(String bin) {
        this.bin = bin;
        return this;
    }
    
    /**
     * If true, it indicates a commercial card. Enable this field via merchant account settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commercial")
    public Boolean commercial;
    public CardBin withCommercial(Boolean commercial) {
        this.commercial = commercial;
        return this;
    }
    
    /**
     * The card funding source. Valid values are:
     * * CHARGE
     * * CREDIT
     * * DEBIT
     * * DEFERRED_DEBIT
     * * PREPAID
     * * PREPAID_RELOADABLE
     * * PREPAID_NONRELOADABLE
     * &gt; Enable this field via merchant account settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fundingSource")
    public String fundingSource;
    public CardBin withFundingSource(String fundingSource) {
        this.fundingSource = fundingSource;
        return this;
    }
    
    /**
     * Indicates availability of funds.
     * 
     * Visa:
     * * "I" (fast funds are supported)
     * * "N" (otherwise)
     * 
     * Mastercard:
     * * "I" (product type is Prepaid or Debit, or issuing country is in CEE/HGEM list)
     * * "N" (otherwise)
     * &gt; Returned when you verify a card BIN or estimate costs, and only if `payoutEligible` is different from "N" or "U".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fundsAvailability")
    public String fundsAvailability;
    public CardBin withFundsAvailability(String fundsAvailability) {
        this.fundsAvailability = fundsAvailability;
        return this;
    }
    
    /**
     * The issuing bank of the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuingBank")
    public String issuingBank;
    public CardBin withIssuingBank(String issuingBank) {
        this.issuingBank = issuingBank;
        return this;
    }
    
    /**
     * The country where the card was issued from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuingCountry")
    public String issuingCountry;
    public CardBin withIssuingCountry(String issuingCountry) {
        this.issuingCountry = issuingCountry;
        return this;
    }
    
    /**
     * The currency of the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuingCurrency")
    public String issuingCurrency;
    public CardBin withIssuingCurrency(String issuingCurrency) {
        this.issuingCurrency = issuingCurrency;
        return this;
    }
    
    /**
     * The payment method associated with the card (e.g. visa, mc, or amex).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentMethod")
    public String paymentMethod;
    public CardBin withPaymentMethod(String paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }
    
    /**
     * Indicates whether a payout is eligible or not for this card.
     * 
     * Visa:
     * * "Y"
     * * "N"
     * 
     * Mastercard:
     * * "Y" (domestic and cross-border)
     * * "D" (only domestic)
     * * "N" (no MoneySend)
     * * "U" (unknown)
     * &gt; Returned when you verify a card BIN or estimate costs, and only if `payoutEligible` is different from "N" or "U".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutEligible")
    public String payoutEligible;
    public CardBin withPayoutEligible(String payoutEligible) {
        this.payoutEligible = payoutEligible;
        return this;
    }
    
    /**
     * The last four digits of the card number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("summary")
    public String summary;
    public CardBin withSummary(String summary) {
        this.summary = summary;
        return this;
    }
    
}
