/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoEventExecutionDetails } from "./enterprisecrmeventbusprotoeventexecutiondetails";
import { EnterpriseCrmFrontendsEventbusProtoParameterEntry } from "./enterprisecrmfrontendseventbusprotoparameterentry";
import { GoogleCloudIntegrationsV1alphaExecutionDetails } from "./googlecloudintegrationsv1alphaexecutiondetails";
import { GoogleCloudIntegrationsV1alphaValueType } from "./googlecloudintegrationsv1alphavaluetype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The ways user posts this event.
 */
export enum GoogleCloudIntegrationsV1alphaExecutionExecutionMethodEnum {
  ExecutionMethodUnspecified = "EXECUTION_METHOD_UNSPECIFIED",
  Post = "POST",
  PostToQueue = "POST_TO_QUEUE",
  Schedule = "SCHEDULE",
}

/**
 * The Execution resource contains detailed information of an individual integration execution.
 */
export class GoogleCloudIntegrationsV1alphaExecution extends SpeakeasyBase {
  /**
   * Output only. Created time of the execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Direct sub executions of the following Execution.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudIntegrationsV1alphaExecution })
  @Expose({ name: "directSubExecutions" })
  @Type(() => GoogleCloudIntegrationsV1alphaExecution)
  directSubExecutions?: GoogleCloudIntegrationsV1alphaExecution[];

  /**
   * Contains the details of the execution info of this event: this includes the tasks execution details plus the event execution statistics. Next available id: 10
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eventExecutionDetails" })
  @Type(() => EnterpriseCrmEventbusProtoEventExecutionDetails)
  eventExecutionDetails?: EnterpriseCrmEventbusProtoEventExecutionDetails;

  /**
   * Contains the details of the execution info: this includes the tasks execution details plus the event execution statistics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionDetails" })
  @Type(() => GoogleCloudIntegrationsV1alphaExecutionDetails)
  executionDetails?: GoogleCloudIntegrationsV1alphaExecutionDetails;

  /**
   * The ways user posts this event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionMethod" })
  executionMethod?: GoogleCloudIntegrationsV1alphaExecutionExecutionMethodEnum;

  /**
   * Auto-generated primary key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Event parameters come in as part of the request.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudIntegrationsV1alphaValueType })
  @Expose({ name: "requestParameters" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, GoogleCloudIntegrationsV1alphaValueType> = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudIntegrationsV1alphaValueType
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  requestParameters?: Record<string, GoogleCloudIntegrationsV1alphaValueType>;

  /**
   * Event parameters come in as part of the request.
   */
  @SpeakeasyMetadata({
    elemType: EnterpriseCrmFrontendsEventbusProtoParameterEntry,
  })
  @Expose({ name: "requestParams" })
  @Type(() => EnterpriseCrmFrontendsEventbusProtoParameterEntry)
  requestParams?: EnterpriseCrmFrontendsEventbusProtoParameterEntry[];

  /**
   * Event parameters returned as part of the response.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudIntegrationsV1alphaValueType })
  @Expose({ name: "responseParameters" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, GoogleCloudIntegrationsV1alphaValueType> = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudIntegrationsV1alphaValueType
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  responseParameters?: Record<string, GoogleCloudIntegrationsV1alphaValueType>;

  /**
   * Event parameters come out as part of the response.
   */
  @SpeakeasyMetadata({
    elemType: EnterpriseCrmFrontendsEventbusProtoParameterEntry,
  })
  @Expose({ name: "responseParams" })
  @Type(() => EnterpriseCrmFrontendsEventbusProtoParameterEntry)
  responseParams?: EnterpriseCrmFrontendsEventbusProtoParameterEntry[];

  /**
   * The trigger id of the integration trigger config. If both trigger_id and client_id is present, the integration is executed from the start tasks provided by the matching trigger config otherwise it is executed from the default start tasks.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggerId" })
  triggerId?: string;

  /**
   * Output only. Last modified time of the execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
