"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import targetcontainerrepository as shared_targetcontainerrepository
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContainerDistributionConfiguration:
    r"""Container distribution settings for encryption, licensing, and sharing in a specific Region."""
    
    target_repository: shared_targetcontainerrepository.TargetContainerRepository = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetRepository') }})  
    container_tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerTags'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    