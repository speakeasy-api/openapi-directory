// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SensitiveDataItemCategoryEnum - For a finding, the category of sensitive data that was detected and produced the finding. For a managed data identifier, the category of sensitive data that the managed data identifier detects. Possible values are:
type SensitiveDataItemCategoryEnum string

const (
	SensitiveDataItemCategoryEnumFinancialInformation SensitiveDataItemCategoryEnum = "FINANCIAL_INFORMATION"
	SensitiveDataItemCategoryEnumPersonalInformation  SensitiveDataItemCategoryEnum = "PERSONAL_INFORMATION"
	SensitiveDataItemCategoryEnumCredentials          SensitiveDataItemCategoryEnum = "CREDENTIALS"
	SensitiveDataItemCategoryEnumCustomIdentifier     SensitiveDataItemCategoryEnum = "CUSTOM_IDENTIFIER"
)

func (e SensitiveDataItemCategoryEnum) ToPointer() *SensitiveDataItemCategoryEnum {
	return &e
}

func (e *SensitiveDataItemCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FINANCIAL_INFORMATION":
		fallthrough
	case "PERSONAL_INFORMATION":
		fallthrough
	case "CREDENTIALS":
		fallthrough
	case "CUSTOM_IDENTIFIER":
		*e = SensitiveDataItemCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SensitiveDataItemCategoryEnum: %v", v)
	}
}
