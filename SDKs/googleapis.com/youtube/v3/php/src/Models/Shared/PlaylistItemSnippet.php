<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PlaylistItemSnippet - Basic details about a playlist, including title, description and thumbnails. Basic details of a YouTube Playlist item provided by the author. Next ID: 15
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PlaylistItemSnippet
{
    /**
     * The ID that YouTube uses to uniquely identify the user that added the item to the playlist.
     * 
     * @var ?string $channelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelId = null;
    
    /**
     * Channel title for the channel that the playlist item belongs to.
     * 
     * @var ?string $channelTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelTitle')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $channelTitle = null;
    
    /**
     * The item's description.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The ID that YouTube uses to uniquely identify thGe playlist that the playlist item is in.
     * 
     * @var ?string $playlistId
     */
	#[\JMS\Serializer\Annotation\SerializedName('playlistId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $playlistId = null;
    
    /**
     * The order in which the item appears in the playlist. The value uses a zero-based index, so the first item has a position of 0, the second item has a position of 1, and so forth.
     * 
     * @var ?int $position
     */
	#[\JMS\Serializer\Annotation\SerializedName('position')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $position = null;
    
    /**
     * The date and time that the item was added to the playlist.
     * 
     * @var ?\DateTime $publishedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('publishedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $publishedAt = null;
    
    /**
     * A resource id is a generic reference that points to another YouTube resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResourceId $resourceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('resourceId')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResourceId')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResourceId $resourceId = null;
    
    /**
     * Internal representation of thumbnails for a YouTube resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ThumbnailDetails $thumbnails
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumbnails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ThumbnailDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ThumbnailDetails $thumbnails = null;
    
    /**
     * The item's title.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * Channel id for the channel this video belongs to.
     * 
     * @var ?string $videoOwnerChannelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('videoOwnerChannelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $videoOwnerChannelId = null;
    
    /**
     * Channel title for the channel this video belongs to.
     * 
     * @var ?string $videoOwnerChannelTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('videoOwnerChannelTitle')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $videoOwnerChannelTitle = null;
    
	public function __construct()
	{
		$this->channelId = null;
		$this->channelTitle = null;
		$this->description = null;
		$this->playlistId = null;
		$this->position = null;
		$this->publishedAt = null;
		$this->resourceId = null;
		$this->thumbnails = null;
		$this->title = null;
		$this->videoOwnerChannelId = null;
		$this->videoOwnerChannelTitle = null;
	}
}
