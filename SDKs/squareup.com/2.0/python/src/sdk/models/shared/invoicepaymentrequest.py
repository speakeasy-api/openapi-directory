"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import invoicepaymentreminder as shared_invoicepaymentreminder
from ..shared import money as shared_money
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InvoicePaymentRequest:
    r"""Represents a payment request for an [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice). Invoices can specify a maximum
    of 13 payment requests, with up to 12 `INSTALLMENT` request types. For more information, 
    see [Payment requests](https://developer.squareup.com/docs/invoices-api/overview#payment-requests).
    
    Adding `INSTALLMENT` payment requests to an invoice requires an 
    [Invoices Plus subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
    """
    
    automatic_payment_source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('automatic_payment_source'), 'exclude': lambda f: f is None }})
    r"""The payment method for an automatic payment.
    
    The default value is `NONE`.
    """  
    card_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the credit or debit card on file to charge for the payment request. To get the cards on file for a customer,
    call [ListCards](https://developer.squareup.com/reference/square_2021-08-18/cards-api/list-cards) and include the `customer_id` of the invoice recipient.
    """  
    computed_amount_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computed_amount_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    due_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('due_date'), 'exclude': lambda f: f is None }})
    r"""The due date (in the invoice's time zone) for the payment request, in `YYYY-MM-DD` format. This field
    is required to create a payment request.
    
    After this date, the invoice becomes overdue. For example, a payment `due_date` of 2021-03-09 with a `timezone`
    of America/Los\_Angeles becomes overdue at midnight on March 9 in America/Los\_Angeles (which equals a UTC
    timestamp of 2021-03-10T08:00:00Z).
    """  
    fixed_amount_requested_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixed_amount_requested_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    percentage_requested: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentage_requested'), 'exclude': lambda f: f is None }})
    r"""Specifies the amount for the payment request in percentage:
    
    - When the payment `request_type` is `DEPOSIT`, it is the percentage of the order's total amount.
    - When the payment `request_type` is `INSTALLMENT`, it is the percentage of the order's total less 
    the deposit, if requested. The sum of the `percentage_requested` in all installment 
    payment requests must be equal to 100.
    
    You cannot specify this when the payment `request_type` is `BALANCE` or when the 
    payment request specifies the `fixed_amount_requested_money` field.
    """  
    reminders: Optional[list[shared_invoicepaymentreminder.InvoicePaymentReminder]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reminders'), 'exclude': lambda f: f is None }})
    r"""A list of one or more reminders to send for the payment request."""  
    request_method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('request_method'), 'exclude': lambda f: f is None }})
    r"""Indicates how Square processes the payment request. DEPRECATED at version 2021-01-21. Replaced by the
    `Invoice.delivery_method` and `InvoicePaymentRequest.automatic_payment_source` fields.
    
    One of the following is required when creating an invoice:
    - (Recommended) The `delivery_method` field of the invoice. To configure an automatic payment, the
    `automatic_payment_source` field of the payment request is also required.
    - This `request_method` field. Note that `invoice` objects returned in responses do not include `request_method`.
    """  
    request_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('request_type'), 'exclude': lambda f: f is None }})
    r"""Identifies the payment request type. This type defines how the payment request amount is determined.
    This field is required to create a payment request.
    """  
    rounding_adjustment_included_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rounding_adjustment_included_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    tipping_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tipping_enabled'), 'exclude': lambda f: f is None }})
    r"""If set to true, the Square-hosted invoice page (the `public_url` field of the invoice)
    provides a place for the customer to pay a tip. 
    
    This field is allowed only on the final payment request  
    and the payment `request_type` must be `BALANCE` or `INSTALLMENT`.
    """  
    total_completed_amount_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_completed_amount_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})
    r"""The Square-generated ID of the payment request in an [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice)."""  
    