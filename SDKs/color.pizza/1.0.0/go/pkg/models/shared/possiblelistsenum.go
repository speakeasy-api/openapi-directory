// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PossibleListsEnum - The name of the color name list to use
type PossibleListsEnum string

const (
	PossibleListsEnumDefault             PossibleListsEnum = "default"
	PossibleListsEnumBestOf              PossibleListsEnum = "bestOf"
	PossibleListsEnumWikipedia           PossibleListsEnum = "wikipedia"
	PossibleListsEnumFrench              PossibleListsEnum = "french"
	PossibleListsEnumRidgway             PossibleListsEnum = "ridgway"
	PossibleListsEnumRisograph           PossibleListsEnum = "risograph"
	PossibleListsEnumBasic               PossibleListsEnum = "basic"
	PossibleListsEnumChineseTraditional  PossibleListsEnum = "chineseTraditional"
	PossibleListsEnumHTML                PossibleListsEnum = "html"
	PossibleListsEnumJapaneseTraditional PossibleListsEnum = "japaneseTraditional"
	PossibleListsEnumLeCorbusier         PossibleListsEnum = "leCorbusier"
	PossibleListsEnumNbsIscc             PossibleListsEnum = "nbsIscc"
	PossibleListsEnumNtc                 PossibleListsEnum = "ntc"
	PossibleListsEnumOsxcrayons          PossibleListsEnum = "osxcrayons"
	PossibleListsEnumRal                 PossibleListsEnum = "ral"
	PossibleListsEnumSanzoWadaI          PossibleListsEnum = "sanzoWadaI"
	PossibleListsEnumThesaurus           PossibleListsEnum = "thesaurus"
	PossibleListsEnumWerner              PossibleListsEnum = "werner"
	PossibleListsEnumWindows             PossibleListsEnum = "windows"
	PossibleListsEnumX11                 PossibleListsEnum = "x11"
	PossibleListsEnumXkcd                PossibleListsEnum = "xkcd"
)

func (e *PossibleListsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "default":
		fallthrough
	case "bestOf":
		fallthrough
	case "wikipedia":
		fallthrough
	case "french":
		fallthrough
	case "ridgway":
		fallthrough
	case "risograph":
		fallthrough
	case "basic":
		fallthrough
	case "chineseTraditional":
		fallthrough
	case "html":
		fallthrough
	case "japaneseTraditional":
		fallthrough
	case "leCorbusier":
		fallthrough
	case "nbsIscc":
		fallthrough
	case "ntc":
		fallthrough
	case "osxcrayons":
		fallthrough
	case "ral":
		fallthrough
	case "sanzoWadaI":
		fallthrough
	case "thesaurus":
		fallthrough
	case "werner":
		fallthrough
	case "windows":
		fallthrough
	case "x11":
		fallthrough
	case "xkcd":
		*e = PossibleListsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PossibleListsEnum: %s", s)
	}
}
