"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlesecuritysafebrowsingv4fetchthreatlistupdatesrequestlistupdaterequestconstraints as shared_googlesecuritysafebrowsingv4fetchthreatlistupdatesrequestlistupdaterequestconstraints
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestPlatformTypeEnum(str, Enum):
    r"""The type of platform at risk by entries present in the list."""
    PLATFORM_TYPE_UNSPECIFIED = 'PLATFORM_TYPE_UNSPECIFIED'
    WINDOWS = 'WINDOWS'
    LINUX = 'LINUX'
    ANDROID = 'ANDROID'
    OSX = 'OSX'
    IOS = 'IOS'
    ANY_PLATFORM = 'ANY_PLATFORM'
    ALL_PLATFORMS = 'ALL_PLATFORMS'
    CHROME = 'CHROME'

class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestThreatEntryTypeEnum(str, Enum):
    r"""The types of entries present in the list."""
    THREAT_ENTRY_TYPE_UNSPECIFIED = 'THREAT_ENTRY_TYPE_UNSPECIFIED'
    URL = 'URL'
    EXECUTABLE = 'EXECUTABLE'
    IP_RANGE = 'IP_RANGE'
    CHROME_EXTENSION = 'CHROME_EXTENSION'
    FILENAME = 'FILENAME'
    CERT = 'CERT'

class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestThreatTypeEnum(str, Enum):
    r"""The type of threat posed by entries present in the list."""
    THREAT_TYPE_UNSPECIFIED = 'THREAT_TYPE_UNSPECIFIED'
    MALWARE = 'MALWARE'
    SOCIAL_ENGINEERING = 'SOCIAL_ENGINEERING'
    UNWANTED_SOFTWARE = 'UNWANTED_SOFTWARE'
    POTENTIALLY_HARMFUL_APPLICATION = 'POTENTIALLY_HARMFUL_APPLICATION'
    SOCIAL_ENGINEERING_INTERNAL = 'SOCIAL_ENGINEERING_INTERNAL'
    API_ABUSE = 'API_ABUSE'
    MALICIOUS_BINARY = 'MALICIOUS_BINARY'
    CSD_WHITELIST = 'CSD_WHITELIST'
    CSD_DOWNLOAD_WHITELIST = 'CSD_DOWNLOAD_WHITELIST'
    CLIENT_INCIDENT = 'CLIENT_INCIDENT'
    CLIENT_INCIDENT_WHITELIST = 'CLIENT_INCIDENT_WHITELIST'
    APK_MALWARE_OFFLINE = 'APK_MALWARE_OFFLINE'
    SUBRESOURCE_FILTER = 'SUBRESOURCE_FILTER'
    SUSPICIOUS = 'SUSPICIOUS'
    TRICK_TO_BILL = 'TRICK_TO_BILL'
    HIGH_CONFIDENCE_ALLOWLIST = 'HIGH_CONFIDENCE_ALLOWLIST'
    ACCURACY_TIPS = 'ACCURACY_TIPS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequest:
    r"""A single list update request."""
    
    constraints: Optional[shared_googlesecuritysafebrowsingv4fetchthreatlistupdatesrequestlistupdaterequestconstraints.GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('constraints'), 'exclude': lambda f: f is None }})
    r"""The constraints for this update."""  
    platform_type: Optional[GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestPlatformTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('platformType'), 'exclude': lambda f: f is None }})
    r"""The type of platform at risk by entries present in the list."""  
    state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The current state of the client for the requested list (the encrypted client state that was received from the last successful list update)."""  
    threat_entry_type: Optional[GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestThreatEntryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threatEntryType'), 'exclude': lambda f: f is None }})
    r"""The types of entries present in the list."""  
    threat_type: Optional[GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestThreatTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threatType'), 'exclude': lambda f: f is None }})
    r"""The type of threat posed by entries present in the list."""  
    