// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RequestAStopPaymentOnACheckTransferPathParams struct {
	CheckTransferID string `pathParam:"style=simple,explode=false,name=check_transfer_id"`
}

type RequestAStopPaymentOnACheckTransferRequest struct {
	PathParams RequestAStopPaymentOnACheckTransferPathParams
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13TypeEnumRateLimitedError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13 struct {
	Detail     string                                                                `json:"detail"`
	RetryAfter *int64                                                                `json:"retry_after,omitempty"`
	Status     RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                                `json:"title"`
	Type       RequestAStopPaymentOnACheckTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12 struct {
	Detail string                                                                `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                                `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11 struct {
	Detail string                                                                `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                                `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10StatusEnumFourHundred RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10TypeEnumMalformedRequestError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10 struct {
	Detail string                                                                `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                                `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9StatusEnumFourHundred RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9TypeEnumInvalidParametersError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                             `json:"errors,omitempty"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8TypeEnumInvalidOperationError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8 struct {
	Detail string                                                               `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7 struct {
	Detail string                                                               `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6StatusEnumFiveHundred RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6TypeEnumInternalServerError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6 struct {
	Detail string                                                               `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5 struct {
	Detail string                                                               `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4 struct {
	Detail string                                                               `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3 struct {
	Detail string                                                               `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2 struct {
	Detail string                                                               `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1StatusEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1TypeEnum string

const (
	RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1 struct {
	Detail string                                                               `json:"detail"`
	Status RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                               `json:"title"`
	Type   RequestAStopPaymentOnACheckTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RequestAStopPaymentOnACheckTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Transfer
	CheckTransfer *shared.CheckTransfer
	// Error
	Error interface{}
}
