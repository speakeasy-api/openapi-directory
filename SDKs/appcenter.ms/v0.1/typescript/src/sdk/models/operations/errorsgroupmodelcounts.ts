/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ErrorsGroupModelCountsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class ErrorsGroupModelCountsRequest extends SpeakeasyBase {
  /**
   * The maximum number of results to return. (0 will fetch all results till the max number.)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=$top" })
  dollarTop?: number;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The id of the error group
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=errorGroupId",
  })
  errorGroupId: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum ErrorsGroupModelCountsDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class ErrorsGroupModelCountsDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ErrorsGroupModelCountsDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class ErrorsGroupModelCountsDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorsGroupModelCountsDefaultApplicationJSONError)
  error: ErrorsGroupModelCountsDefaultApplicationJSONError;
}

export class ErrorsGroupModelCounts200ApplicationJSONModels extends SpeakeasyBase {
  /**
   * count of errors in a model
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCount" })
  errorCount?: number;

  /**
   * model code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modelCode" })
  modelCode?: string;

  /**
   * model name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modelName" })
  modelName?: string;
}

/**
 * Top Models with percentage in descending order
 */
export class ErrorsGroupModelCounts200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "errorCount" })
  errorCount?: number;

  @SpeakeasyMetadata({
    elemType: ErrorsGroupModelCounts200ApplicationJSONModels,
  })
  @Expose({ name: "models" })
  @Type(() => ErrorsGroupModelCounts200ApplicationJSONModels)
  models?: ErrorsGroupModelCounts200ApplicationJSONModels[];
}

export class ErrorsGroupModelCountsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Top Models with percentage in descending order
   */
  @SpeakeasyMetadata()
  errorsGroupModelCounts200ApplicationJSONObject?: ErrorsGroupModelCounts200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  errorsGroupModelCountsDefaultApplicationJSONObject?: ErrorsGroupModelCountsDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
