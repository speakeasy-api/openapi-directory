// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum - Indicates whether attachment requests are automatically accepted.
type DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum string

const (
	DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnumEnable  DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = "enable"
	DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnumDisable DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = "disable"
)

func (e *DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum: %s", s)
	}
}

// DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum - Indicates whether resource attachments are automatically associated with the default association route table.
type DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum string

const (
	DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnumEnable  DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = "enable"
	DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnumDisable DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = "disable"
)

func (e *DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum: %s", s)
	}
}

// DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum - Indicates whether resource attachments automatically propagate routes to the default propagation route table.
type DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum string

const (
	DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnumEnable  DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = "enable"
	DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnumDisable DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = "disable"
)

func (e *DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum: %s", s)
	}
}

// DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnum - Indicates whether DNS support is enabled.
type DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnum string

const (
	DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnumEnable  DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnum = "enable"
	DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnumDisable DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnum = "disable"
)

func (e *DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnum: %s", s)
	}
}

// DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum - Indicates whether multicast is enabled on the transit gateway
type DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum string

const (
	DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnumEnable  DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = "enable"
	DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnumDisable DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = "disable"
)

func (e *DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum: %s", s)
	}
}

// DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum - Indicates whether Equal Cost Multipath Protocol support is enabled.
type DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum string

const (
	DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnumEnable  DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = "enable"
	DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnumDisable DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = "disable"
)

func (e *DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum: %s", s)
	}
}

// DeleteTransitGatewayResultTransitGatewayOptions - The transit gateway options.
type DeleteTransitGatewayResultTransitGatewayOptions struct {
	AmazonSideAsn                  *int64
	AssociationDefaultRouteTableID *string
	AutoAcceptSharedAttachments    *DeleteTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum
	DefaultRouteTableAssociation   *DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum
	DefaultRouteTablePropagation   *DeleteTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum
	DNSSupport                     *DeleteTransitGatewayResultTransitGatewayOptionsDNSSupportEnum
	MulticastSupport               *DeleteTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum
	PropagationDefaultRouteTableID *string
	TransitGatewayCidrBlocks       []string
	VpnEcmpSupport                 *DeleteTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum
}

// DeleteTransitGatewayResultTransitGatewayStateEnum - The state of the transit gateway.
type DeleteTransitGatewayResultTransitGatewayStateEnum string

const (
	DeleteTransitGatewayResultTransitGatewayStateEnumPending   DeleteTransitGatewayResultTransitGatewayStateEnum = "pending"
	DeleteTransitGatewayResultTransitGatewayStateEnumAvailable DeleteTransitGatewayResultTransitGatewayStateEnum = "available"
	DeleteTransitGatewayResultTransitGatewayStateEnumModifying DeleteTransitGatewayResultTransitGatewayStateEnum = "modifying"
	DeleteTransitGatewayResultTransitGatewayStateEnumDeleting  DeleteTransitGatewayResultTransitGatewayStateEnum = "deleting"
	DeleteTransitGatewayResultTransitGatewayStateEnumDeleted   DeleteTransitGatewayResultTransitGatewayStateEnum = "deleted"
)

func (e *DeleteTransitGatewayResultTransitGatewayStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = DeleteTransitGatewayResultTransitGatewayStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTransitGatewayResultTransitGatewayStateEnum: %s", s)
	}
}

// DeleteTransitGatewayResultTransitGatewayTags - Describes a tag.
type DeleteTransitGatewayResultTransitGatewayTags struct {
	Key   *string
	Value *string
}

// DeleteTransitGatewayResultTransitGateway - Information about the deleted transit gateway.
type DeleteTransitGatewayResultTransitGateway struct {
	CreationTime      *time.Time
	Description       *string
	Options           *DeleteTransitGatewayResultTransitGatewayOptions
	OwnerID           *string
	State             *DeleteTransitGatewayResultTransitGatewayStateEnum
	Tags              []DeleteTransitGatewayResultTransitGatewayTags
	TransitGatewayArn *string
	TransitGatewayID  *string
}

// DeleteTransitGatewayResult - Success
type DeleteTransitGatewayResult struct {
	TransitGateway *DeleteTransitGatewayResultTransitGateway
}
