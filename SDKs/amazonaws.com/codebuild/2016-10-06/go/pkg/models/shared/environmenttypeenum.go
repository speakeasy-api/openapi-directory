// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnvironmentTypeEnum string

const (
	EnvironmentTypeEnumWindowsContainer           EnvironmentTypeEnum = "WINDOWS_CONTAINER"
	EnvironmentTypeEnumLinuxContainer             EnvironmentTypeEnum = "LINUX_CONTAINER"
	EnvironmentTypeEnumLinuxGpuContainer          EnvironmentTypeEnum = "LINUX_GPU_CONTAINER"
	EnvironmentTypeEnumArmContainer               EnvironmentTypeEnum = "ARM_CONTAINER"
	EnvironmentTypeEnumWindowsServer2019Container EnvironmentTypeEnum = "WINDOWS_SERVER_2019_CONTAINER"
)

func (e EnvironmentTypeEnum) ToPointer() *EnvironmentTypeEnum {
	return &e
}

func (e *EnvironmentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WINDOWS_CONTAINER":
		fallthrough
	case "LINUX_CONTAINER":
		fallthrough
	case "LINUX_GPU_CONTAINER":
		fallthrough
	case "ARM_CONTAINER":
		fallthrough
	case "WINDOWS_SERVER_2019_CONTAINER":
		*e = EnvironmentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentTypeEnum: %v", v)
	}
}
