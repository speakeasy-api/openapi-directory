"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryParameterValue:
    
    array_values: Optional[list[QueryParameterValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arrayValues'), 'exclude': lambda f: f is None }})
    r"""[Optional] The array values, if this is an array type."""  
    struct_values: Optional[dict[str, QueryParameterValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('structValues'), 'exclude': lambda f: f is None }})
    r"""[Optional] The struct field values, in order of the struct type's declaration."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""[Optional] The value of this value, if a simple scalar type."""  
    