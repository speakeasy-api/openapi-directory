"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaSfdcInstance:
    r"""The SfdcInstance resource use to hold channels and connection config data."""
    
    auth_config_id: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authConfigId'), 'exclude': lambda f: f is None }})
    r"""A list of AuthConfigs that can be tried to open the channel to SFDC"""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time when the instance is created"""  
    delete_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleteTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time when the instance was deleted. Empty if not deleted."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A description of the sfdc instance."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""User selected unique name/alias to easily reference an instance."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Resource name of the SFDC instance projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}."""  
    service_authority: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceAuthority'), 'exclude': lambda f: f is None }})
    r"""URL used for API calls after authentication (the login authority is configured within the referenced AuthConfig)."""  
    sfdc_org_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sfdcOrgId'), 'exclude': lambda f: f is None }})
    r"""The SFDC Org Id. This is defined in salesforce."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time when the instance was last updated"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaSfdcInstanceInput:
    r"""The SfdcInstance resource use to hold channels and connection config data."""
    
    auth_config_id: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authConfigId'), 'exclude': lambda f: f is None }})
    r"""A list of AuthConfigs that can be tried to open the channel to SFDC"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A description of the sfdc instance."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""User selected unique name/alias to easily reference an instance."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Resource name of the SFDC instance projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}."""  
    service_authority: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceAuthority'), 'exclude': lambda f: f is None }})
    r"""URL used for API calls after authentication (the login authority is configured within the referenced AuthConfig)."""  
    sfdc_org_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sfdcOrgId'), 'exclude': lambda f: f is None }})
    r"""The SFDC Org Id. This is defined in salesforce."""  
    