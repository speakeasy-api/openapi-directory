/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FixedAndVariableClickModelInfo } from "./fixedandvariableclickmodelinfo";
import { PaymentMethodEnum } from "./paymentmethodenum";
import { VariableModelInfo } from "./variablemodelinfo";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describe the commitment information related to the offer.
 */
export class ContractCommitmentInfo extends SpeakeasyBase {
  /**
   * The commercial that is responsible of the creation of your account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commercialCreatorUserId" })
  commercialCreatorUserId?: string;

  /**
   * Your current commercial user id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commercialUserId" })
  commercialUserId?: string;

  /**
   * The commitment end date related to the offer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commitmentCalculatedFinishDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  commitmentCalculatedFinishDate?: Date;

  /**
   * The commitment period in month related to the offer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commitmentPeriodInMonth" })
  commitmentPeriodInMonth?: number;

  /**
   * Internal usage: Old offer type. Your contract type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contractType" })
  contractType?: number;

  /**
   * Your special coupon offer identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "couponOfferCode" })
  couponOfferCode?: string;

  /**
   * Your current contract id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentContractId" })
  currentContractId?: string;

  /**
   * The current contract termination date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentContractTerminationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  currentContractTerminationDate?: Date;

  /**
   * Payment method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentCustomerPaymentMethod" })
  currentCustomerPaymentMethod?: PaymentMethodEnum;

  /**
   * Internal usage: Old offer type. Describe the fix and variable model information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fixedAndVariableClickInfo" })
  @Type(() => FixedAndVariableClickModelInfo)
  fixedAndVariableClickInfo?: FixedAndVariableClickModelInfo;

  /**
   * If true, this means you want to leave us and that's sad... :'-(
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCustomerWantsToTerminateHisContract" })
  isCustomerWantsToTerminateHisContract?: boolean;

  /**
   * Internal usage: Old offer type. Is the current contract model needs to be converted into a new contract type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isModelMustBeTransmittedInNewContract" })
  isModelMustBeTransmittedInNewContract?: boolean;

  /**
   * The minimum billing period in month authorized for this offer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minBillingPeriodInMonths" })
  minBillingPeriodInMonths?: number;

  /**
   * Interal usage: Old offer type. The model description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: string;

  /**
   * The start date related to the offer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newContractStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  newContractStartDate?: Date;

  /**
   * The offer id based on /offers. Not a free offer of course.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offerId" })
  offerId?: number;

  /**
   * The offer Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offerName" })
  offerName?: string;

  /**
   * The payment delay in days related to the offer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentDelayInDays" })
  paymentDelayInDays?: number;

  /**
   * Payment method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMethodAuthorized" })
  paymentMethodAuthorized?: PaymentMethodEnum;

  /**
   * Payment method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedPaymentMethod" })
  requestedPaymentMethod?: PaymentMethodEnum;

  /**
   * The trial period end date related to the offer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trialPeriodFinishDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trialPeriodFinishDate?: Date;

  /**
   * The trial period in month related to the offer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trialPeriodInMonth" })
  trialPeriodInMonth?: number;

  /**
   * Internal usage: Old offer type. Describe the fix and variable model information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variableModelInfo" })
  @Type(() => VariableModelInfo)
  variableModelInfo?: VariableModelInfo;
}
