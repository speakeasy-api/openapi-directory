// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeSourceServersRequestBodyFilters - Request to filter Source Servers list.
type DescribeSourceServersRequestBodyFilters struct {
	ApplicationIDs   []string                     `json:"applicationIDs,omitempty"`
	IsArchived       *bool                        `json:"isArchived,omitempty"`
	LifeCycleStates  []shared.LifeCycleStateEnum  `json:"lifeCycleStates,omitempty"`
	ReplicationTypes []shared.ReplicationTypeEnum `json:"replicationTypes,omitempty"`
	SourceServerIDs  []string                     `json:"sourceServerIDs,omitempty"`
}

type DescribeSourceServersRequestBody struct {
	// Request to filter Source Servers list.
	Filters *DescribeSourceServersRequestBodyFilters `json:"filters,omitempty"`
	// Request to filter Source Servers list by maximum results.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// Request to filter Source Servers list by next token.
	NextToken *string `json:"nextToken,omitempty"`
}

type DescribeSourceServersRequest struct {
	RequestBody       DescribeSourceServersRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type DescribeSourceServersResponse struct {
	ContentType string
	// Success
	DescribeSourceServersResponse *shared.DescribeSourceServersResponse
	StatusCode                    int
	RawResponse                   *http.Response
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
