"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import creditdebitindicator_enum as shared_creditdebitindicator_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartBalance:
    r"""The starting balance of the statement"""
    
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""decimal(19,4) unsigned Opening/closing balance amount."""  
    credit_debit_indicator: Optional[shared_creditdebitindicator_enum.CreditDebitIndicatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditDebitIndicator'), 'exclude': lambda f: f is None }})
    r"""If the statement balances are credit or debit, the CreditDebitIndicator should be specified from the perspective of the Customer."""  
    