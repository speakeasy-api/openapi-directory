<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListSimRequest
{
    /**
     * The SID or unique name of the Fleet to which a list of Sims are assigned.
     * 
     * @var ?string $fleet
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Fleet')]
    public ?string $fleet = null;
    
    /**
     * The [ICCID](https://en.wikipedia.org/wiki/Subscriber_identity_module#ICCID) associated with a Super SIM to filter the list by. Passing this parameter will always return a list containing zero or one SIMs.
     * 
     * @var ?string $iccid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Iccid')]
    public ?string $iccid = null;
    
    /**
     * The page index. This value is simply for client state.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Page')]
    public ?int $page = null;
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageSize')]
    public ?int $pageSize = null;
    
    /**
     * The page token. This is provided by the API.
     * 
     * @var ?string $pageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageToken')]
    public ?string $pageToken = null;
    
    /**
     * The status of the Sim resources to read. Can be `new`, `ready`, `active`, `inactive`, or `scheduled`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SimEnumStatusEnum $status
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Status')]
    public ?\OpenAPI\OpenAPI\Models\Shared\SimEnumStatusEnum $status = null;
    
	public function __construct()
	{
		$this->fleet = null;
		$this->iccid = null;
		$this->page = null;
		$this->pageSize = null;
		$this->pageToken = null;
		$this->status = null;
	}
}
