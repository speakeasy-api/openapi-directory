<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CatalogMeasurementUnit - Represents the unit used to measure a `CatalogItemVariation` and
 * 
 * specifies the precision for decimal quantities.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CatalogMeasurementUnit
{
    /**
     * Represents a unit of measurement to use with a quantity, such as ounces
     * 
     * or inches. Exactly one of the following fields are required: `custom_unit`,
     * `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MeasurementUnit $measurementUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurement_unit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MeasurementUnit')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MeasurementUnit $measurementUnit = null;
    
    /**
     * An integer between 0 and 5 that represents the maximum number of
     * 
     * positions allowed after the decimal in quantities measured with this unit.
     * For example:
     * 
     * - if the precision is 0, the quantity can be 1, 2, 3, etc.
     * - if the precision is 1, the quantity can be 0.1, 0.2, etc.
     * - if the precision is 2, the quantity can be 0.01, 0.12, etc.
     * 
     * Default: 3
     * 
     * @var ?int $precision
     */
	#[\JMS\Serializer\Annotation\SerializedName('precision')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $precision = null;
    
	public function __construct()
	{
		$this->measurementUnit = null;
		$this->precision = null;
	}
}
