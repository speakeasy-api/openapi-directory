/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostImagesIdActionsChangeProtectionRequestBody extends SpeakeasyBase {
  /**
   * If true, prevents the snapshot from being deleted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delete" })
  delete?: boolean;
}

export class PostImagesIdActionsChangeProtectionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostImagesIdActionsChangeProtectionRequestBody;

  /**
   * ID of the Image
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

/**
 * Error message for the Action if error occurred, otherwise null
 */
export class PostImagesIdActionsChangeProtectionActionResponseActionError extends SpeakeasyBase {
  /**
   * Fixed machine readable code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  /**
   * Humanized error message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class PostImagesIdActionsChangeProtectionActionResponseActionResources extends SpeakeasyBase {
  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Type of resource referenced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * Status of the Action
 */
export enum PostImagesIdActionsChangeProtectionActionResponseActionStatusEnum {
  Success = "success",
  Running = "running",
  Error = "error",
}

export class PostImagesIdActionsChangeProtectionActionResponseAction extends SpeakeasyBase {
  /**
   * Command executed in the Action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "command" })
  command: string;

  /**
   * Error message for the Action if error occurred, otherwise null
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => PostImagesIdActionsChangeProtectionActionResponseActionError)
  error: PostImagesIdActionsChangeProtectionActionResponseActionError;

  /**
   * Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finished" })
  finished: string;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Progress of Action in percent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progress" })
  progress: number;

  /**
   * Resources the Action relates to
   */
  @SpeakeasyMetadata({
    elemType: PostImagesIdActionsChangeProtectionActionResponseActionResources,
  })
  @Expose({ name: "resources" })
  @Type(() => PostImagesIdActionsChangeProtectionActionResponseActionResources)
  resources: PostImagesIdActionsChangeProtectionActionResponseActionResources[];

  /**
   * Point in time when the Action was started (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "started" })
  started: string;

  /**
   * Status of the Action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: PostImagesIdActionsChangeProtectionActionResponseActionStatusEnum;
}

/**
 * The `action` key contains the `change_protection` Action
 */
export class PostImagesIdActionsChangeProtectionActionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  @Type(() => PostImagesIdActionsChangeProtectionActionResponseAction)
  action: PostImagesIdActionsChangeProtectionActionResponseAction;
}

export class PostImagesIdActionsChangeProtectionResponse extends SpeakeasyBase {
  /**
   * The `action` key contains the `change_protection` Action
   */
  @SpeakeasyMetadata()
  actionResponse?: PostImagesIdActionsChangeProtectionActionResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
