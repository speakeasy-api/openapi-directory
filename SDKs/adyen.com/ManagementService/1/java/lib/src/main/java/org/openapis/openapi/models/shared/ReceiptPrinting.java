/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ReceiptPrinting {
    /**
     * Print a merchant receipt when the payment is approved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantApproved")
    public Boolean merchantApproved;

    public ReceiptPrinting withMerchantApproved(Boolean merchantApproved) {
        this.merchantApproved = merchantApproved;
        return this;
    }
    
    /**
     * Print a merchant receipt when the transaction is cancelled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantCancelled")
    public Boolean merchantCancelled;

    public ReceiptPrinting withMerchantCancelled(Boolean merchantCancelled) {
        this.merchantCancelled = merchantCancelled;
        return this;
    }
    
    /**
     * Print a merchant receipt when capturing the payment is approved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantCaptureApproved")
    public Boolean merchantCaptureApproved;

    public ReceiptPrinting withMerchantCaptureApproved(Boolean merchantCaptureApproved) {
        this.merchantCaptureApproved = merchantCaptureApproved;
        return this;
    }
    
    /**
     * Print a merchant receipt when capturing the payment is refused.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantCaptureRefused")
    public Boolean merchantCaptureRefused;

    public ReceiptPrinting withMerchantCaptureRefused(Boolean merchantCaptureRefused) {
        this.merchantCaptureRefused = merchantCaptureRefused;
        return this;
    }
    
    /**
     * Print a merchant receipt when the refund is approved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantRefundApproved")
    public Boolean merchantRefundApproved;

    public ReceiptPrinting withMerchantRefundApproved(Boolean merchantRefundApproved) {
        this.merchantRefundApproved = merchantRefundApproved;
        return this;
    }
    
    /**
     * Print a merchant receipt when the refund is refused.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantRefundRefused")
    public Boolean merchantRefundRefused;

    public ReceiptPrinting withMerchantRefundRefused(Boolean merchantRefundRefused) {
        this.merchantRefundRefused = merchantRefundRefused;
        return this;
    }
    
    /**
     * Print a merchant receipt when the payment is refused.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantRefused")
    public Boolean merchantRefused;

    public ReceiptPrinting withMerchantRefused(Boolean merchantRefused) {
        this.merchantRefused = merchantRefused;
        return this;
    }
    
    /**
     * Print a merchant receipt when a previous transaction is voided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantVoid")
    public Boolean merchantVoid;

    public ReceiptPrinting withMerchantVoid(Boolean merchantVoid) {
        this.merchantVoid = merchantVoid;
        return this;
    }
    
    /**
     * Print a shopper receipt when the payment is approved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperApproved")
    public Boolean shopperApproved;

    public ReceiptPrinting withShopperApproved(Boolean shopperApproved) {
        this.shopperApproved = shopperApproved;
        return this;
    }
    
    /**
     * Print a shopper receipt when the transaction is cancelled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperCancelled")
    public Boolean shopperCancelled;

    public ReceiptPrinting withShopperCancelled(Boolean shopperCancelled) {
        this.shopperCancelled = shopperCancelled;
        return this;
    }
    
    /**
     * Print a shopper receipt when capturing the payment is approved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperCaptureApproved")
    public Boolean shopperCaptureApproved;

    public ReceiptPrinting withShopperCaptureApproved(Boolean shopperCaptureApproved) {
        this.shopperCaptureApproved = shopperCaptureApproved;
        return this;
    }
    
    /**
     * Print a shopper receipt when capturing the payment is refused.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperCaptureRefused")
    public Boolean shopperCaptureRefused;

    public ReceiptPrinting withShopperCaptureRefused(Boolean shopperCaptureRefused) {
        this.shopperCaptureRefused = shopperCaptureRefused;
        return this;
    }
    
    /**
     * Print a shopper receipt when the refund is approved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperRefundApproved")
    public Boolean shopperRefundApproved;

    public ReceiptPrinting withShopperRefundApproved(Boolean shopperRefundApproved) {
        this.shopperRefundApproved = shopperRefundApproved;
        return this;
    }
    
    /**
     * Print a shopper receipt when the refund is refused.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperRefundRefused")
    public Boolean shopperRefundRefused;

    public ReceiptPrinting withShopperRefundRefused(Boolean shopperRefundRefused) {
        this.shopperRefundRefused = shopperRefundRefused;
        return this;
    }
    
    /**
     * Print a shopper receipt when the payment is refused.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperRefused")
    public Boolean shopperRefused;

    public ReceiptPrinting withShopperRefused(Boolean shopperRefused) {
        this.shopperRefused = shopperRefused;
        return this;
    }
    
    /**
     * Print a shopper receipt when a previous transaction is voided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperVoid")
    public Boolean shopperVoid;

    public ReceiptPrinting withShopperVoid(Boolean shopperVoid) {
        this.shopperVoid = shopperVoid;
        return this;
    }
    
    public ReceiptPrinting(){}
}
