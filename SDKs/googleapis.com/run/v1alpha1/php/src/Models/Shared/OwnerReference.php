<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OwnerReference - OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OwnerReference
{
    /**
     * API version of the referent.
     * 
     * @var ?string $apiVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('apiVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiVersion = null;
    
    /**
     * If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional
     * 
     * @var ?bool $blockOwnerDeletion
     */
	#[\JMS\Serializer\Annotation\SerializedName('blockOwnerDeletion')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $blockOwnerDeletion = null;
    
    /**
     * If true, this reference points to the managing controller. +optional
     * 
     * @var ?bool $controller
     */
	#[\JMS\Serializer\Annotation\SerializedName('controller')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $controller = null;
    
    /**
     * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Name of the referent. More info: https://kubernetes.io/docs/user-guide/identifiers#names
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * UID of the referent. More info: https://kubernetes.io/docs/user-guide/identifiers#uids
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
	public function __construct()
	{
		$this->apiVersion = null;
		$this->blockOwnerDeletion = null;
		$this->controller = null;
		$this->kind = null;
		$this->name = null;
		$this->uid = null;
	}
}
