"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNetworkSmDeviceSoftwaresResponse = exports.GetNetworkSmDeviceSoftwares200ApplicationJSON = exports.GetNetworkSmDeviceSoftwaresRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetNetworkSmDeviceSoftwaresRequest = /** @class */ (function (_super) {
    __extends(GetNetworkSmDeviceSoftwaresRequest, _super);
    function GetNetworkSmDeviceSoftwaresRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=deviceId",
        }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwaresRequest.prototype, "deviceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwaresRequest.prototype, "networkId", void 0);
    return GetNetworkSmDeviceSoftwaresRequest;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSmDeviceSoftwaresRequest = GetNetworkSmDeviceSoftwaresRequest;
var GetNetworkSmDeviceSoftwares200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetNetworkSmDeviceSoftwares200ApplicationJSON, _super);
    function GetNetworkSmDeviceSoftwares200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "appId" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "appId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bundleSize" }),
        __metadata("design:type", Number)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "bundleSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdAt" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deviceId" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "deviceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dynamicSize" }),
        __metadata("design:type", Number)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "dynamicSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "identifier" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "identifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "installedAt" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "installedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iosRedemptionCode" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "iosRedemptionCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isManaged" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "isManaged", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "itunesId" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "itunesId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "licenseKey" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "licenseKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "path" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "path", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redemptionCode" }),
        __metadata("design:type", Number)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "redemptionCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shortVersion" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "shortVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toInstall" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "toInstall", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "toUninstall" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "toUninstall", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uninstalledAt" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "uninstalledAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedAt" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "updatedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vendor" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "vendor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "version" }),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwares200ApplicationJSON.prototype, "version", void 0);
    return GetNetworkSmDeviceSoftwares200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSmDeviceSoftwares200ApplicationJSON = GetNetworkSmDeviceSoftwares200ApplicationJSON;
var GetNetworkSmDeviceSoftwaresResponse = /** @class */ (function (_super) {
    __extends(GetNetworkSmDeviceSoftwaresResponse, _super);
    function GetNetworkSmDeviceSoftwaresResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetNetworkSmDeviceSoftwaresResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetNetworkSmDeviceSoftwaresResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetNetworkSmDeviceSoftwaresResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSmDeviceSoftwares200ApplicationJSON,
        }),
        __metadata("design:type", Array)
    ], GetNetworkSmDeviceSoftwaresResponse.prototype, "getNetworkSmDeviceSoftwares200ApplicationJSONObjects", void 0);
    return GetNetworkSmDeviceSoftwaresResponse;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSmDeviceSoftwaresResponse = GetNetworkSmDeviceSoftwaresResponse;
