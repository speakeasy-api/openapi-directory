<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Position
{
	#[\JMS\Serializer\Annotation\SerializedName('accuracy')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $accuracy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('altitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $altitude = null;
    
    /**
     * $attributes
     * 
     * @var ?array<string, mixed> $attributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('attributes')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attributes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('course')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $course = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('deviceId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $deviceId = null;
    
    /**
     * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     * 
     * @var ?\DateTime $deviceTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $deviceTime = null;
    
    /**
     * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     * 
     * @var ?\DateTime $fixTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('fixTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $fixTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('latitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $latitude = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('longitude')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $longitude = null;
    
    /**
     * $network
     * 
     * @var ?array<string, mixed> $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $network = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('outdated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $outdated = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $protocol = null;
    
    /**
     * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
     * 
     * @var ?\DateTime $serverTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('serverTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $serverTime = null;
    
    /**
     * in knots
     * 
     * @var ?float $speed
     */
	#[\JMS\Serializer\Annotation\SerializedName('speed')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $speed = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('valid')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $valid = null;
    
	public function __construct()
	{
		$this->accuracy = null;
		$this->address = null;
		$this->altitude = null;
		$this->attributes = null;
		$this->course = null;
		$this->deviceId = null;
		$this->deviceTime = null;
		$this->fixTime = null;
		$this->id = null;
		$this->latitude = null;
		$this->longitude = null;
		$this->network = null;
		$this->outdated = null;
		$this->protocol = null;
		$this->serverTime = null;
		$this->speed = null;
		$this->valid = null;
	}
}
