/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Employee - The employee model
 */
public class Employee {
    /**
     * Add up to 19 direct deposit accounts in addition to the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with information provided on the request. GET API will not return direct deposit data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalDirectDeposit")
    public EmployeeAdditionalDirectDeposit[] additionalDirectDeposit;

    public Employee withAdditionalDirectDeposit(EmployeeAdditionalDirectDeposit[] additionalDirectDeposit) {
        this.additionalDirectDeposit = additionalDirectDeposit;
        return this;
    }
    
    /**
     * Add Additional Rates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalRate")
    public EmployeeAdditionalRate[] additionalRate;

    public Employee withAdditionalRate(EmployeeAdditionalRate[] additionalRate) {
        this.additionalRate = additionalRate;
        return this;
    }
    
    /**
     *  Add or update setup values used for employee benefits integration, insurance plan settings, and ACA reporting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("benefitSetup")
    public EmployeeBenefitSetup benefitSetup;

    public Employee withBenefitSetup(EmployeeBenefitSetup benefitSetup) {
        this.benefitSetup = benefitSetup;
        return this;
    }
    
    /**
     * Employee birthdate. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("birthDate")
    public String birthDate;

    public Employee withBirthDate(String birthDate) {
        this.birthDate = birthDate;
        return this;
    }
    
    /**
     * Unique idenifier for SSO.&lt;br  /&gt;Max length: 20
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coEmpCode")
    public String coEmpCode;

    public Employee withCoEmpCode(String coEmpCode) {
        this.coEmpCode = coEmpCode;
        return this;
    }
    
    /**
     * Company FEIN as defined in Web Pay, applicable with GET requests only.&lt;br  /&gt; Max length: 20
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyFEIN")
    public String companyFEIN;

    public Employee withCompanyFEIN(String companyFEIN) {
        this.companyFEIN = companyFEIN;
        return this;
    }
    
    /**
     * Company name as defined in Web Pay, applicable with GET requests only.&lt;br  /&gt; Max length: 50
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyName")
    public String companyName;

    public Employee withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Employee is paid in this currency. &lt;br  /&gt;Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;

    public Employee withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Up to 8 custom fields of boolean (checkbox) type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customBooleanFields")
    public EmployeeCustomBooleanFields[] customBooleanFields;

    public Employee withCustomBooleanFields(EmployeeCustomBooleanFields[] customBooleanFields) {
        this.customBooleanFields = customBooleanFields;
        return this;
    }
    
    /**
     * Up to 8 custom fields of the date type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customDateFields")
    public EmployeeCustomDateFields[] customDateFields;

    public Employee withCustomDateFields(EmployeeCustomDateFields[] customDateFields) {
        this.customDateFields = customDateFields;
        return this;
    }
    
    /**
     * Up to 8 custom fields of the dropdown type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customDropDownFields")
    public EmployeeCustomDropDownFields[] customDropDownFields;

    public Employee withCustomDropDownFields(EmployeeCustomDropDownFields[] customDropDownFields) {
        this.customDropDownFields = customDropDownFields;
        return this;
    }
    
    /**
     * Up to 8 custom fields of numeric type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customNumberFields")
    public EmployeeCustomNumberFields[] customNumberFields;

    public Employee withCustomNumberFields(EmployeeCustomNumberFields[] customNumberFields) {
        this.customNumberFields = customNumberFields;
        return this;
    }
    
    /**
     * Up to 8 custom fields of text type value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customTextFields")
    public EmployeeCustomTextFields[] customTextFields;

    public Employee withCustomTextFields(EmployeeCustomTextFields[] customTextFields) {
        this.customTextFields = customTextFields;
        return this;
    }
    
    /**
     * Add or update home department cost center, position, supervisor, reviewer, employment type, EEO class, pay settings, and union information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departmentPosition")
    public EmployeeDepartmentPosition departmentPosition;

    public Employee withDepartmentPosition(EmployeeDepartmentPosition departmentPosition) {
        this.departmentPosition = departmentPosition;
        return this;
    }
    
    /**
     * Indicates if employee has disability status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabilityDescription")
    public String disabilityDescription;

    public Employee withDisabilityDescription(String disabilityDescription) {
        this.disabilityDescription = disabilityDescription;
        return this;
    }
    
    /**
     * Add or update Emergency Contacts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emergencyContacts")
    public EmployeeEmergencyContacts[] emergencyContacts;

    public Employee withEmergencyContacts(EmployeeEmergencyContacts[] emergencyContacts) {
        this.emergencyContacts = emergencyContacts;
        return this;
    }
    
    /**
     * Leave blank to have Web Pay automatically assign the next available employee ID.&lt;br  /&gt;Max length: 9
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employeeId")
    public String employeeId;

    public Employee withEmployeeId(String employeeId) {
        this.employeeId = employeeId;
        return this;
    }
    
    /**
     * Employee ethnicity.&lt;br  /&gt; Max length: 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethnicity")
    public String ethnicity;

    public Employee withEthnicity(String ethnicity) {
        this.ethnicity = ethnicity;
        return this;
    }
    
    /**
     * Add or update federal tax amount type (taxCalculationCode), amount or percentage, filing status, and exemptions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("federalTax")
    public EmployeeFederalTax federalTax;

    public Employee withFederalTax(EmployeeFederalTax federalTax) {
        this.federalTax = federalTax;
        return this;
    }
    
    /**
     * Employee first name. &lt;br  /&gt;Max length: 40
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstName")
    public String firstName;

    public Employee withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Employee gender. Common values *M* (Male), *F* (Female). &lt;br  /&gt;Max length: 1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public String gender;

    public Employee withGender(String gender) {
        this.gender = gender;
        return this;
    }
    
    /**
     * Add or update employee's home address, personal phone numbers, and personal email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("homeAddress")
    public EmployeeHomeAddress homeAddress;

    public Employee withHomeAddress(EmployeeHomeAddress homeAddress) {
        this.homeAddress = homeAddress;
        return this;
    }
    
    /**
     * Indicates if employee meets the highly compensated employee criteria.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isHighlyCompensated")
    public Boolean isHighlyCompensated;

    public Employee withIsHighlyCompensated(Boolean isHighlyCompensated) {
        this.isHighlyCompensated = isHighlyCompensated;
        return this;
    }
    
    /**
     * Indicates if employee is a smoker.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isSmoker")
    public Boolean isSmoker;

    public Employee withIsSmoker(Boolean isSmoker) {
        this.isSmoker = isSmoker;
        return this;
    }
    
    /**
     * Employee last name. &lt;br  /&gt;Max length: 40
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastName")
    public String lastName;

    public Employee withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Add, update, or delete local tax code, filing status, and exemptions including  PA-PSD taxes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localTax")
    public EmployeeLocalTax[] localTax;

    public Employee withLocalTax(EmployeeLocalTax[] localTax) {
        this.localTax = localTax;
        return this;
    }
    
    /**
     * Add the main direct deposit account. After deposits are made to any additional direct deposit accounts, the remaining net check is deposited in the main direct deposit account. IMPORTANT: A direct deposit update will remove ALL existing main and additional direct deposit information in WebPay and replace with what is provided on the request. GET API will not return direct deposit data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mainDirectDeposit")
    public EmployeeMainDirectDeposit mainDirectDeposit;

    public Employee withMainDirectDeposit(EmployeeMainDirectDeposit mainDirectDeposit) {
        this.mainDirectDeposit = mainDirectDeposit;
        return this;
    }
    
    /**
     * Employee marital status. Common values *D (Divorced), M (Married), S (Single), W (Widowed)*. &lt;br  /&gt;Max length: 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maritalStatus")
    public String maritalStatus;

    public Employee withMaritalStatus(String maritalStatus) {
        this.maritalStatus = maritalStatus;
        return this;
    }
    
    /**
     * Employee middle name.&lt;br  /&gt; Max length: 20
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middleName")
    public String middleName;

    public Employee withMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }
    
    /**
     * Add or update non-primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, supplemental check (specialCheckCalc), and reciprocity code information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonPrimaryStateTax")
    public EmployeeNonPrimaryStateTax nonPrimaryStateTax;

    public Employee withNonPrimaryStateTax(EmployeeNonPrimaryStateTax nonPrimaryStateTax) {
        this.nonPrimaryStateTax = nonPrimaryStateTax;
        return this;
    }
    
    /**
     * Percentage of employee's ownership in the company, entered as a whole number. &lt;br  /&gt; Decimal (12,2)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerPercent")
    public Double ownerPercent;

    public Employee withOwnerPercent(Double ownerPercent) {
        this.ownerPercent = ownerPercent;
        return this;
    }
    
    /**
     * Employee preferred display name.&lt;br  /&gt; Max length: 20
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferredName")
    public String preferredName;

    public Employee withPreferredName(String preferredName) {
        this.preferredName = preferredName;
        return this;
    }
    
    /**
     * Add or update hourly or salary pay rate, effective date, and pay frequency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryPayRate")
    public EmployeePrimaryPayRate primaryPayRate;

    public Employee withPrimaryPayRate(EmployeePrimaryPayRate primaryPayRate) {
        this.primaryPayRate = primaryPayRate;
        return this;
    }
    
    /**
     * Add or update primary state tax code, amount type (taxCalculationCode), amount or percentage, filing status, exemptions, and supplemental check (specialCheckCalc) information. Only one primary state is allowed. Sending an updated primary state will replace the current primary state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryStateTax")
    public EmployeePrimaryStateTax primaryStateTax;

    public Employee withPrimaryStateTax(EmployeePrimaryStateTax primaryStateTax) {
        this.primaryStateTax = primaryStateTax;
        return this;
    }
    
    /**
     * Prior last name if applicable.&lt;br  /&gt;Max length: 40
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priorLastName")
    public String priorLastName;

    public Employee withPriorLastName(String priorLastName) {
        this.priorLastName = priorLastName;
        return this;
    }
    
    /**
     * Employee preferred salutation. &lt;br  /&gt;Max length: 10
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salutation")
    public String salutation;

    public Employee withSalutation(String salutation) {
        this.salutation = salutation;
        return this;
    }
    
    /**
     * Employee social security number. Leave it blank if valid social security number not available. &lt;br  /&gt;Max length: 11
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssn")
    public String ssn;

    public Employee withSsn(String ssn) {
        this.ssn = ssn;
        return this;
    }
    
    /**
     * Add or update employee status, change reason, effective date, and adjusted seniority date. Note that companies that are still in Implementation cannot hire future employees.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public EmployeeStatus status;

    public Employee withStatus(EmployeeStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * Employee name suffix. Common values are *Jr, Sr, II*.&lt;br  /&gt;Max length: 30
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suffix")
    public String suffix;

    public Employee withSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }
    
    /**
     * Add tax form, 1099 exempt reasons and notes, and 943 agricultural employee information. Once the employee receives wages, this information cannot be updated. Add or update SUI tax state, retirement plan, and statutory information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxSetup")
    public EmployeeTaxSetup taxSetup;

    public Employee withTaxSetup(EmployeeTaxSetup taxSetup) {
        this.taxSetup = taxSetup;
        return this;
    }
    
    /**
     * Indicates if employee is a veteran.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("veteranDescription")
    public String veteranDescription;

    public Employee withVeteranDescription(String veteranDescription) {
        this.veteranDescription = veteranDescription;
        return this;
    }
    
    /**
     * Add or update Web Time badge number and charge rate and synchronize Web Pay and Web Time employee data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webTime")
    public EmployeeWebTime webTime;

    public Employee withWebTime(EmployeeWebTime webTime) {
        this.webTime = webTime;
        return this;
    }
    
    /**
     * Add or update employee's work address, phone numbers, and email. Work Location drop down field is not included.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workAddress")
    public EmployeeWorkAddress workAddress;

    public Employee withWorkAddress(EmployeeWorkAddress workAddress) {
        this.workAddress = workAddress;
        return this;
    }
    
    /**
     * Add or update I-9 work authorization information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workEligibility")
    public EmployeeWorkEligibility workEligibility;

    public Employee withWorkEligibility(EmployeeWorkEligibility workEligibility) {
        this.workEligibility = workEligibility;
        return this;
    }
    
    public Employee(){}
}
