// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeListenerCertificatesActionEnum
type GETDescribeListenerCertificatesActionEnum string

const (
	GETDescribeListenerCertificatesActionEnumDescribeListenerCertificates GETDescribeListenerCertificatesActionEnum = "DescribeListenerCertificates"
)

func (e GETDescribeListenerCertificatesActionEnum) ToPointer() *GETDescribeListenerCertificatesActionEnum {
	return &e
}

func (e *GETDescribeListenerCertificatesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeListenerCertificates":
		*e = GETDescribeListenerCertificatesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeListenerCertificatesActionEnum: %v", v)
	}
}

// GETDescribeListenerCertificatesVersionEnum
type GETDescribeListenerCertificatesVersionEnum string

const (
	GETDescribeListenerCertificatesVersionEnumTwoThousandAndFifteen1201 GETDescribeListenerCertificatesVersionEnum = "2015-12-01"
)

func (e GETDescribeListenerCertificatesVersionEnum) ToPointer() *GETDescribeListenerCertificatesVersionEnum {
	return &e
}

func (e *GETDescribeListenerCertificatesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-12-01":
		*e = GETDescribeListenerCertificatesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeListenerCertificatesVersionEnum: %v", v)
	}
}

type GETDescribeListenerCertificatesRequest struct {
	Action GETDescribeListenerCertificatesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The Amazon Resource Names (ARN) of the listener.
	ListenerArn string `queryParam:"style=form,explode=true,name=ListenerArn"`
	// The marker for the next set of results. (You received this marker from a previous call.)
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of results to return with this call.
	PageSize          *int64                                     `queryParam:"style=form,explode=true,name=PageSize"`
	Version           GETDescribeListenerCertificatesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeListenerCertificatesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
