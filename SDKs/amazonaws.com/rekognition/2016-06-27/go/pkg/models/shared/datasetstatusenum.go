// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DatasetStatusEnum string

const (
	DatasetStatusEnumCreateInProgress DatasetStatusEnum = "CREATE_IN_PROGRESS"
	DatasetStatusEnumCreateComplete   DatasetStatusEnum = "CREATE_COMPLETE"
	DatasetStatusEnumCreateFailed     DatasetStatusEnum = "CREATE_FAILED"
	DatasetStatusEnumUpdateInProgress DatasetStatusEnum = "UPDATE_IN_PROGRESS"
	DatasetStatusEnumUpdateComplete   DatasetStatusEnum = "UPDATE_COMPLETE"
	DatasetStatusEnumUpdateFailed     DatasetStatusEnum = "UPDATE_FAILED"
	DatasetStatusEnumDeleteInProgress DatasetStatusEnum = "DELETE_IN_PROGRESS"
)

func (e DatasetStatusEnum) ToPointer() *DatasetStatusEnum {
	return &e
}

func (e *DatasetStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATE_IN_PROGRESS":
		fallthrough
	case "CREATE_COMPLETE":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "UPDATE_IN_PROGRESS":
		fallthrough
	case "UPDATE_COMPLETE":
		fallthrough
	case "UPDATE_FAILED":
		fallthrough
	case "DELETE_IN_PROGRESS":
		*e = DatasetStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DatasetStatusEnum: %v", v)
	}
}
