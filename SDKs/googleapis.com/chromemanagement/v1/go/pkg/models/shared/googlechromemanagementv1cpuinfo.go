// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleChromeManagementV1CPUInfoArchitectureEnum - Output only. Architecture type for the CPU. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A
type GoogleChromeManagementV1CPUInfoArchitectureEnum string

const (
	GoogleChromeManagementV1CPUInfoArchitectureEnumArchitectureUnspecified GoogleChromeManagementV1CPUInfoArchitectureEnum = "ARCHITECTURE_UNSPECIFIED"
	GoogleChromeManagementV1CPUInfoArchitectureEnumX64                     GoogleChromeManagementV1CPUInfoArchitectureEnum = "X64"
)

func (e *GoogleChromeManagementV1CPUInfoArchitectureEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ARCHITECTURE_UNSPECIFIED":
		fallthrough
	case "X64":
		*e = GoogleChromeManagementV1CPUInfoArchitectureEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleChromeManagementV1CPUInfoArchitectureEnum: %s", s)
	}
}

// GoogleChromeManagementV1CPUInfo - CPU specifications for the device * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A
type GoogleChromeManagementV1CPUInfo struct {
	// Output only. Architecture type for the CPU. * This field provides device information, which is static and will not change over time. * Data for this field is controlled via policy: [ReportDeviceCpuInfo](https://chromeenterprise.google/policies/#ReportDeviceCpuInfo) * Data Collection Frequency: Only at Upload * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A
	Architecture *GoogleChromeManagementV1CPUInfoArchitectureEnum `json:"architecture,omitempty"`
	// Output only. Whether keylocker is configured.`TRUE` = Enabled; `FALSE` = disabled. Only reported if keylockerSupported = `TRUE`.
	KeylockerConfigured *bool `json:"keylockerConfigured,omitempty"`
	// Output only. Whether keylocker is supported.
	KeylockerSupported *bool `json:"keylockerSupported,omitempty"`
	// Output only. The max CPU clock speed in kHz.
	MaxClockSpeed *int `json:"maxClockSpeed,omitempty"`
	// Output only. The CPU model name. Example: Intel(R) Core(TM) i5-8250U CPU @ 1.60GHz
	Model *string `json:"model,omitempty"`
}
