/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DeletePushDeviceDetailsRequest extends SpeakeasyBase {
  /**
   * The version of the API you wish to use.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Ably-Version",
  })
  xAblyVersion?: string;

  /**
   * Filter to restrict to subscriptions associated with that channel.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channel",
  })
  channel?: string;

  /**
   * Must be set when deviceId is empty, cannot be used with deviceId.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=clientId",
  })
  clientId?: string;

  /**
   * Must be set when clientId is empty, cannot be used with clientId.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=deviceId",
  })
  deviceId?: string;

  /**
   * The response format you would like
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=format",
  })
  format?: shared.ResponseFormatEnum;
}

export class DeletePushDeviceDetailsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
