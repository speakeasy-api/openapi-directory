/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETSwitchoverBlueGreenDeploymentRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETSwitchoverBlueGreenDeploymentActionEnum action;
    public GETSwitchoverBlueGreenDeploymentRequest withAction(GETSwitchoverBlueGreenDeploymentActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;The blue/green deployment identifier.&lt;/p&gt; &lt;p&gt;Constraints:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must match an existing blue/green deployment identifier.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=BlueGreenDeploymentIdentifier")
    public String blueGreenDeploymentIdentifier;
    public GETSwitchoverBlueGreenDeploymentRequest withBlueGreenDeploymentIdentifier(String blueGreenDeploymentIdentifier) {
        this.blueGreenDeploymentIdentifier = blueGreenDeploymentIdentifier;
        return this;
    }
    
    /**
     * &lt;p&gt;The amount of time, in seconds, for the switchover to complete. The default is 300.&lt;/p&gt; &lt;p&gt;If the switchover takes longer than the specified duration, then any changes are rolled back, and no changes are made to the environments.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SwitchoverTimeout")
    public Long switchoverTimeout;
    public GETSwitchoverBlueGreenDeploymentRequest withSwitchoverTimeout(Long switchoverTimeout) {
        this.switchoverTimeout = switchoverTimeout;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETSwitchoverBlueGreenDeploymentVersionEnum version;
    public GETSwitchoverBlueGreenDeploymentRequest withVersion(GETSwitchoverBlueGreenDeploymentVersionEnum version) {
        this.version = version;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public GETSwitchoverBlueGreenDeploymentRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public GETSwitchoverBlueGreenDeploymentRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public GETSwitchoverBlueGreenDeploymentRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public GETSwitchoverBlueGreenDeploymentRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public GETSwitchoverBlueGreenDeploymentRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public GETSwitchoverBlueGreenDeploymentRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public GETSwitchoverBlueGreenDeploymentRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
}
