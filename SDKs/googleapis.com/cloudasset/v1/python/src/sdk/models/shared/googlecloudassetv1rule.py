"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import expr as shared_expr
from ..shared import googlecloudassetv1stringvalues as shared_googlecloudassetv1stringvalues
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudAssetV1Rule:
    r"""Represents a rule defined in an organization policy"""
    
    allow_all: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowAll'), 'exclude': lambda f: f is None }})
    r"""Setting this to true means that all values are allowed. This field can be set only in Policies for list constraints."""  
    condition: Optional[shared_expr.Expr] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \\"Summary size limit\\" description: \\"Determines if a summary is less than 100 chars\\" expression: \\"document.summary.size() < 100\\" Example (Equality): title: \\"Requestor is owner\\" description: \\"Determines if requestor is the document owner\\" expression: \\"document.owner == request.auth.claims.email\\" Example (Logic): title: \\"Public documents\\" description: \\"Determine whether the document should be publicly visible\\" expression: \\"document.type != 'private' && document.type != 'internal'\\" Example (Data Manipulation): title: \\"Notification string\\" description: \\"Create a notification string with a timestamp.\\" expression: \\"'New message received at ' + string(document.create_time)\\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."""  
    deny_all: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('denyAll'), 'exclude': lambda f: f is None }})
    r"""Setting this to true means that all values are denied. This field can be set only in Policies for list constraints."""  
    enforce: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enforce'), 'exclude': lambda f: f is None }})
    r"""If `true`, then the `Policy` is enforced. If `false`, then any configuration is acceptable. This field can be set only in Policies for boolean constraints."""  
    values: Optional[shared_googlecloudassetv1stringvalues.GoogleCloudAssetV1StringValues] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values'), 'exclude': lambda f: f is None }})
    r"""The string values for the list constraints."""  
    