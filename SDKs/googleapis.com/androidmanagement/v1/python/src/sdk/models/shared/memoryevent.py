"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MemoryEventEventTypeEnum(str, Enum):
    r"""Event type."""
    MEMORY_EVENT_TYPE_UNSPECIFIED = 'MEMORY_EVENT_TYPE_UNSPECIFIED'
    RAM_MEASURED = 'RAM_MEASURED'
    INTERNAL_STORAGE_MEASURED = 'INTERNAL_STORAGE_MEASURED'
    EXTERNAL_STORAGE_DETECTED = 'EXTERNAL_STORAGE_DETECTED'
    EXTERNAL_STORAGE_REMOVED = 'EXTERNAL_STORAGE_REMOVED'
    EXTERNAL_STORAGE_MEASURED = 'EXTERNAL_STORAGE_MEASURED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MemoryEvent:
    r"""An event related to memory and storage measurements."""
    
    byte_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('byteCount'), 'exclude': lambda f: f is None }})
    r"""The number of free bytes in the medium, or for EXTERNAL_STORAGE_DETECTED, the total capacity in bytes of the storage medium."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""The creation time of the event."""  
    event_type: Optional[MemoryEventEventTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventType'), 'exclude': lambda f: f is None }})
    r"""Event type."""  
    