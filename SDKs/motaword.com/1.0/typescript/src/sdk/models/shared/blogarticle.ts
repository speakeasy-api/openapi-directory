/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BlogArticleLinks } from "./blogarticlelinks";
import { Expose, Transform, Type } from "class-transformer";

export enum BlogArticleAnnouncementTypeEnum {
  Article = "article",
  Case = "case",
  FamousTranslators = "famous-translators",
  Sales = "sales",
}

export class BlogArticle extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "announcement_type" })
  announcementType?: BlogArticleAnnouncementTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  author?: string;

  /**
   * Article content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: string;

  /**
   * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * Article excerpt
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excerpt" })
  excerpt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * language code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => BlogArticleLinks)
  links?: BlogArticleLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;
}
