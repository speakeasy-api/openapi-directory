/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DeviceIdentifierStatusEnum } from "./deviceidentifierstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Information about a subscriber of a device that can use a network.
 */
export class DeviceIdentifier extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceIdentifierArn" })
  deviceIdentifierArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iccid" })
  iccid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imsi" })
  imsi?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "networkArn" })
  networkArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "orderArn" })
  orderArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: DeviceIdentifierStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "trafficGroupArn" })
  trafficGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vendor" })
  vendor?: string;
}
