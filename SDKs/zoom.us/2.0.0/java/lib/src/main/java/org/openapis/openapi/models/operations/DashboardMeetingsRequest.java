/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DashboardMeetingsRequest {
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from")
    public LocalDate from;
    public DashboardMeetingsRequest withFrom(LocalDate from) {
        this.from = from;
        return this;
    }
    
    /**
     * Set the value of this field to "tracking_fields" if you would like to include tracking fields of each meeting in the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include_fields")
    public DashboardMeetingsIncludeFieldsEnum includeFields;
    public DashboardMeetingsRequest withIncludeFields(DashboardMeetingsIncludeFieldsEnum includeFields) {
        this.includeFields = includeFields;
        return this;
    }
    
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=next_page_token")
    public String nextPageToken;
    public DashboardMeetingsRequest withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of records returned within a single API call.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_size")
    public Long pageSize;
    public DashboardMeetingsRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * End date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=to")
    public LocalDate to;
    public DashboardMeetingsRequest withTo(LocalDate to) {
        this.to = to;
        return this;
    }
    
    /**
     * Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:&lt;br&gt; &lt;br&gt;`past` - Meeting that already occurred in the specified date range.&lt;br&gt;`pastOne` - Past meetings that were attended by only one user. &lt;br&gt;`live` - Live meetings.&lt;br&gt;&lt;br&gt;
     * 
     * If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type")
    public DashboardMeetingsTypeEnum type;
    public DashboardMeetingsRequest withType(DashboardMeetingsTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
