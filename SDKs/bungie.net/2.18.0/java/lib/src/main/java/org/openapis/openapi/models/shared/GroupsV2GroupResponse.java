/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



public class GroupsV2GroupResponse {
    
    public Integer allianceStatus;
    public GroupsV2GroupResponse withAllianceStatus(Integer allianceStatus) {
        this.allianceStatus = allianceStatus;
        return this;
    }
    
    
    public Long[] alliedIds;
    public GroupsV2GroupResponse withAlliedIds(Long[] alliedIds) {
        this.alliedIds = alliedIds;
        return this;
    }
    
    /**
     * This property will be populated if the authenticated user is a member of the group. Note that because of account linking, a user can sometimes be part of a clan more than once. As such, this returns the highest member type available.
     */
    
    public java.util.Map<String, GroupsV2GroupMember> currentUserMemberMap;
    public GroupsV2GroupResponse withCurrentUserMemberMap(java.util.Map<String, GroupsV2GroupMember> currentUserMemberMap) {
        this.currentUserMemberMap = currentUserMemberMap;
        return this;
    }
    
    /**
     * A convenience property that indicates if every membership you (the current user) have that is a part of this group are part of an account that is considered inactive - for example, overridden accounts in Cross Save.
     */
    
    public Boolean currentUserMembershipsInactiveForDestiny;
    public GroupsV2GroupResponse withCurrentUserMembershipsInactiveForDestiny(Boolean currentUserMembershipsInactiveForDestiny) {
        this.currentUserMembershipsInactiveForDestiny = currentUserMembershipsInactiveForDestiny;
        return this;
    }
    
    /**
     * This property will be populated if the authenticated user is an applicant or has an outstanding invitation to join. Note that because of account linking, a user can sometimes be part of a clan more than once.
     */
    
    public java.util.Map<String, GroupsV2GroupPotentialMember> currentUserPotentialMemberMap;
    public GroupsV2GroupResponse withCurrentUserPotentialMemberMap(java.util.Map<String, GroupsV2GroupPotentialMember> currentUserPotentialMemberMap) {
        this.currentUserPotentialMemberMap = currentUserPotentialMemberMap;
        return this;
    }
    
    
    public GroupsV2GroupV2 detail;
    public GroupsV2GroupResponse withDetail(GroupsV2GroupV2 detail) {
        this.detail = detail;
        return this;
    }
    
    
    public GroupsV2GroupMember founder;
    public GroupsV2GroupResponse withFounder(GroupsV2GroupMember founder) {
        this.founder = founder;
        return this;
    }
    
    
    public Integer groupJoinInviteCount;
    public GroupsV2GroupResponse withGroupJoinInviteCount(Integer groupJoinInviteCount) {
        this.groupJoinInviteCount = groupJoinInviteCount;
        return this;
    }
    
    
    public GroupsV2GroupV2 parentGroup;
    public GroupsV2GroupResponse withParentGroup(GroupsV2GroupV2 parentGroup) {
        this.parentGroup = parentGroup;
        return this;
    }
    
}
