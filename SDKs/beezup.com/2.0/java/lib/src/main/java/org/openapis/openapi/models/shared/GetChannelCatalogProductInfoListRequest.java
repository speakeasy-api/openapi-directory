/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetChannelCatalogProductInfoListRequest - The channel catalog product list filter
 */
public class GetChannelCatalogProductInfoListRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalogCategoryFilter")
    public BeezUPCommonCatalogCategoryFilter catalogCategoryFilter;

    public GetChannelCatalogProductInfoListRequest withCatalogCategoryFilter(BeezUPCommonCatalogCategoryFilter catalogCategoryFilter) {
        this.catalogCategoryFilter = catalogCategoryFilter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channelCategoryFilter")
    public BeezUPCommonChannelCategoryFilter channelCategoryFilter;

    public GetChannelCatalogProductInfoListRequest withChannelCategoryFilter(BeezUPCommonChannelCategoryFilter channelCategoryFilter) {
        this.channelCategoryFilter = channelCategoryFilter;
        return this;
    }
    
    @JsonProperty("criteria")
    public ProductSetVisibilityCriteria criteria;

    public GetChannelCatalogProductInfoListRequest withCriteria(ProductSetVisibilityCriteria criteria) {
        this.criteria = criteria;
        return this;
    }
    
    /**
     * Search overridden products. If null the filter will not be taken in account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overridden")
    public Boolean overridden;

    public GetChannelCatalogProductInfoListRequest withOverridden(Boolean overridden) {
        this.overridden = overridden;
        return this;
    }
    
    @JsonProperty("pageNumber")
    public Integer pageNumber;

    public GetChannelCatalogProductInfoListRequest withPageNumber(Integer pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }
    
    @JsonProperty("pageSize")
    public Integer pageSize;

    public GetChannelCatalogProductInfoListRequest withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productFilters")
    public ChannelCatalogProductFilters productFilters;

    public GetChannelCatalogProductInfoListRequest withProductFilters(ChannelCatalogProductFilters productFilters) {
        this.productFilters = productFilters;
        return this;
    }
    
    public GetChannelCatalogProductInfoListRequest(@JsonProperty("criteria") ProductSetVisibilityCriteria criteria, @JsonProperty("pageNumber") Integer pageNumber, @JsonProperty("pageSize") Integer pageSize) {
        this.criteria = criteria;
        this.pageNumber = pageNumber;
        this.pageSize = pageSize;
  }
}
