/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Algorithm } from "./algorithm";
import { Configuration } from "./configuration";
import { CostMatrix } from "./costmatrix";
import { Objective } from "./objective";
import { Service } from "./service";
import { Shipment } from "./shipment";
import { Vehicle } from "./vehicle";
import { VehicleType } from "./vehicletype";
import { Expose, Type } from "class-transformer";

/**
 * The request that contains the vehicle routing problem to be solved.
 */
export class Request extends SpeakeasyBase {
  /**
   * Use `objectives` instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "algorithm" })
  @Type(() => Algorithm)
  algorithm?: Algorithm;

  /**
   * Specifies general configurations that are taken into account when solving the vehicle routing problem.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  @Type(() => Configuration)
  configuration?: Configuration;

  /**
   * Specifies your own tranport time and distance matrices.
   */
  @SpeakeasyMetadata({ elemType: CostMatrix })
  @Expose({ name: "cost_matrices" })
  @Type(() => CostMatrix)
  costMatrices?: CostMatrix[];

  /**
   * Specifies an objective function. The vehicle routing problem is solved in such a way that this objective function is minimized.
   */
  @SpeakeasyMetadata({ elemType: Objective })
  @Expose({ name: "objectives" })
  @Type(() => Objective)
  objectives?: Objective[];

  /**
   * Defines additional relationships between orders.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relations" })
  relations?: any[];

  /**
   * Specifies the orders of the type "service". These are, for example, pick-ups, deliveries or other stops that are to be approached by the specified vehicles. Each of these orders contains only one location.
   */
  @SpeakeasyMetadata({ elemType: Service })
  @Expose({ name: "services" })
  @Type(() => Service)
  services?: Service[];

  /**
   * Specifies the available shipments. Each shipment contains a pickup and a delivery stop, which must be processed one after the other.
   */
  @SpeakeasyMetadata({ elemType: Shipment })
  @Expose({ name: "shipments" })
  @Type(() => Shipment)
  shipments?: Shipment[];

  /**
   * Specifies the available vehicle types. These types can be assigned to vehicles.
   */
  @SpeakeasyMetadata({ elemType: VehicleType })
  @Expose({ name: "vehicle_types" })
  @Type(() => VehicleType)
  vehicleTypes?: VehicleType[];

  /**
   * Specifies the available vehicles.
   */
  @SpeakeasyMetadata({ elemType: Vehicle })
  @Expose({ name: "vehicles" })
  @Type(() => Vehicle)
  vehicles?: Vehicle[];
}
