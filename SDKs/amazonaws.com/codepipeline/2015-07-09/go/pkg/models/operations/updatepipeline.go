// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdatePipelineXAmzTargetEnum
type UpdatePipelineXAmzTargetEnum string

const (
	UpdatePipelineXAmzTargetEnumCodePipeline20150709UpdatePipeline UpdatePipelineXAmzTargetEnum = "CodePipeline_20150709.UpdatePipeline"
)

func (e UpdatePipelineXAmzTargetEnum) ToPointer() *UpdatePipelineXAmzTargetEnum {
	return &e
}

func (e *UpdatePipelineXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodePipeline_20150709.UpdatePipeline":
		*e = UpdatePipelineXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdatePipelineXAmzTargetEnum: %v", v)
	}
}

type UpdatePipelineRequest struct {
	UpdatePipelineInput shared.UpdatePipelineInput   `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          UpdatePipelineXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdatePipelineResponse struct {
	ContentType string
	// InvalidActionDeclarationException
	InvalidActionDeclarationException interface{}
	// InvalidBlockerDeclarationException
	InvalidBlockerDeclarationException interface{}
	// InvalidStageDeclarationException
	InvalidStageDeclarationException interface{}
	// InvalidStructureException
	InvalidStructureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// Success
	UpdatePipelineOutput *shared.UpdatePipelineOutput
	// ValidationException
	ValidationException interface{}
}
