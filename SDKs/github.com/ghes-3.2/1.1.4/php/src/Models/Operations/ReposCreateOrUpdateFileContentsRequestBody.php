<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class ReposCreateOrUpdateFileContentsRequestBody
{
    /**
     * The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ReposCreateOrUpdateFileContentsRequestBodyAuthor $author
     */
	#[\JMS\Serializer\Annotation\SerializedName('author')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\ReposCreateOrUpdateFileContentsRequestBodyAuthor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReposCreateOrUpdateFileContentsRequestBodyAuthor $author = null;
    
    /**
     * The branch name. Default: the repositoryâ€™s default branch (usually `master`)
     * 
     * @var ?string $branch
     */
	#[\JMS\Serializer\Annotation\SerializedName('branch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $branch = null;
    
    /**
     * The person that committed the file. Default: the authenticated user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ReposCreateOrUpdateFileContentsRequestBodyCommitter $committer
     */
	#[\JMS\Serializer\Annotation\SerializedName('committer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\ReposCreateOrUpdateFileContentsRequestBodyCommitter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReposCreateOrUpdateFileContentsRequestBodyCommitter $committer = null;
    
    /**
     * The new file content, using Base64 encoding.
     * 
     * @var string $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $content;
    
    /**
     * The commit message.
     * 
     * @var string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $message;
    
    /**
     * **Required if you are updating a file**. The blob SHA of the file being replaced.
     * 
     * @var ?string $sha
     */
	#[\JMS\Serializer\Annotation\SerializedName('sha')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sha = null;
    
	public function __construct()
	{
		$this->author = null;
		$this->branch = null;
		$this->committer = null;
		$this->content = "";
		$this->message = "";
		$this->sha = null;
	}
}
