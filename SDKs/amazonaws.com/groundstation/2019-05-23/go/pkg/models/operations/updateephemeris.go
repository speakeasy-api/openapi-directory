// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateEphemerisPathParams struct {
	// The AWS Ground Station ephemeris ID.
	EphemerisID string `pathParam:"style=simple,explode=false,name=ephemerisId"`
}

type UpdateEphemerisHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateEphemerisRequestBody struct {
	// Whether the ephemeris is enabled or not. Changing this value will not require the ephemeris to be re-validated.
	Enabled bool `json:"enabled"`
	// A name string associated with the ephemeris. Used as a human-readable identifier for the ephemeris.
	Name *string `json:"name,omitempty"`
	// <p>Customer-provided priority score to establish the order in which overlapping ephemerides should be used.</p> <p>The default for customer-provided ephemeris priority is 1, and higher numbers take precedence.</p> <p>Priority must be 1 or greater</p>
	Priority *int64 `json:"priority,omitempty"`
}

type UpdateEphemerisRequest struct {
	PathParams UpdateEphemerisPathParams
	Headers    UpdateEphemerisHeaders
	Request    UpdateEphemerisRequestBody `request:"mediaType=application/json"`
}

type UpdateEphemerisResponse struct {
	ContentType string
	// DependencyException
	DependencyException interface{}
	// Success
	EphemerisIDResponse *shared.EphemerisIDResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
