/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PostV2ActivitiesCallsJsonRequestBody {
    /**
     * Action that this call is being logged for. This will validate that the action is still
     * valid before completing it. The same action can never be successfully passed twice to this endpoint. The
     * action must have a type of 'phone'.
     * 
     */
    @SpeakeasyMetadata("form:name=action_id")
    public Long actionId;

    public PostV2ActivitiesCallsJsonRequestBody withActionId(Long actionId) {
        this.actionId = actionId;
        return this;
    }
    
    /**
     * CRM specific parameters. Some parameters are required on a per-team basis. Consume the
     * CrmActivityFields endpoint to receive a list of valid parameters. The "field" property
     * is passed as the key of this object, and the value of this object is the value that you
     * would like to set.
     * 
     * If CrmActivityField has a non-null value, then that value must be submitted, or excluded
     * from API calls, as these values are automatically applied.
     * 
     */
    @SpeakeasyMetadata("form:name=crm_params,json")
    public java.util.Map<String, Object> crmParams;

    public PostV2ActivitiesCallsJsonRequestBody withCrmParams(java.util.Map<String, Object> crmParams) {
        this.crmParams = crmParams;
        return this;
    }
    
    /**
     * The disposition of the call. Can be required on a per-team basis. Must be present in the disposition list.
     */
    @SpeakeasyMetadata("form:name=disposition")
    public String disposition;

    public PostV2ActivitiesCallsJsonRequestBody withDisposition(String disposition) {
        this.disposition = disposition;
        return this;
    }
    
    /**
     * The length of the call, in seconds
     */
    @SpeakeasyMetadata("form:name=duration")
    public Long duration;

    public PostV2ActivitiesCallsJsonRequestBody withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * CallDataRecord associations that will become linked to the created call. It is possible to pass
     * multiple CallDataRecord ids in this field; this can be used to represent multiple phone calls
     * that made up a single call.
     * 
     * Any call data record that is used must not already be linked to a call. It is not possible
     * to link a call data record to multiple calls, and it is not possible to re-assign a call data
     * record to a different call.
     * 
     */
    @SpeakeasyMetadata("form:name=linked_call_data_record_ids")
    public Long[] linkedCallDataRecordIds;

    public PostV2ActivitiesCallsJsonRequestBody withLinkedCallDataRecordIds(Long[] linkedCallDataRecordIds) {
        this.linkedCallDataRecordIds = linkedCallDataRecordIds;
        return this;
    }
    
    /**
     * Notes to log for the call. This is similar to the notes endpoint, but ensures that the notes get synced to the user's CRM
     */
    @SpeakeasyMetadata("form:name=notes")
    public String notes;

    public PostV2ActivitiesCallsJsonRequestBody withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The ID of the person whom this call will be logged for
     */
    @SpeakeasyMetadata("form:name=person_id")
    public Long personId;

    public PostV2ActivitiesCallsJsonRequestBody withPersonId(Long personId) {
        this.personId = personId;
        return this;
    }
    
    /**
     * The sentiment of the call. Can be required on a per-team basis. Must be present in the sentiment list.
     */
    @SpeakeasyMetadata("form:name=sentiment")
    public String sentiment;

    public PostV2ActivitiesCallsJsonRequestBody withSentiment(String sentiment) {
        this.sentiment = sentiment;
        return this;
    }
    
    /**
     * The phone number that was called
     */
    @SpeakeasyMetadata("form:name=to")
    public String to;

    public PostV2ActivitiesCallsJsonRequestBody withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * Guid of the user whom this call should be logged for. Defaults to the authenticated user. Only team admins can pass another user's guid
     */
    @SpeakeasyMetadata("form:name=user_guid")
    public String userGuid;

    public PostV2ActivitiesCallsJsonRequestBody withUserGuid(String userGuid) {
        this.userGuid = userGuid;
        return this;
    }
    
    public PostV2ActivitiesCallsJsonRequestBody(@JsonProperty("person_id") Long personId) {
        this.personId = personId;
  }
}
