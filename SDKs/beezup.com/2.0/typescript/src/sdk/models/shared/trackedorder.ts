/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BeezUPCommonChannelBasicInfo } from "./beezupcommonchannelbasicinfo";
import { TrackedOrderProduct } from "./trackedorderproduct";
import { Expose, Transform, Type } from "class-transformer";

export class TrackedOrder extends SpeakeasyBase {
  /**
   * The basic info related to a channel
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  @Type(() => BeezUPCommonChannelBasicInfo)
  channel: BeezUPCommonChannelBasicInfo;

  /**
   * The currency code <a href="https://en.wikipedia.org/wiki/ISO_4217">(ISO 4217)</a>
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyCode" })
  currencyCode: string;

  /**
   * The merchant order identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantOrderId" })
  merchantOrderId: string;

  /**
   * Indicate if the payment of this order has been validated or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentValidated" })
  paymentValidated: boolean;

  /**
   * The product list of this order
   */
  @SpeakeasyMetadata({ elemType: TrackedOrderProduct })
  @Expose({ name: "products" })
  @Type(() => TrackedOrderProduct)
  products: TrackedOrderProduct[];

  /**
   * The total amount of the order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalAmount" })
  totalAmount: number;

  /**
   * The utc date of the order
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  utcDate: Date;
}
