"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import responsepolicygkecluster as shared_responsepolicygkecluster
from ..shared import responsepolicynetwork as shared_responsepolicynetwork
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResponsePolicy:
    r"""A Response Policy is a collection of selectors that apply to queries made against one or more Virtual Private Cloud networks."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""User-provided description for this Response Policy."""  
    gke_clusters: Optional[list[shared_responsepolicygkecluster.ResponsePolicyGKECluster]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gkeClusters'), 'exclude': lambda f: f is None }})
    r"""The list of Google Kubernetes Engine clusters to which this response policy is applied."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for the resource; defined by the server (output only)."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""User labels."""  
    networks: Optional[list[shared_responsepolicynetwork.ResponsePolicyNetwork]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networks'), 'exclude': lambda f: f is None }})
    r"""List of network names specifying networks to which this policy is applied."""  
    response_policy_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('responsePolicyName'), 'exclude': lambda f: f is None }})
    r"""User assigned name for this Response Policy."""  
    