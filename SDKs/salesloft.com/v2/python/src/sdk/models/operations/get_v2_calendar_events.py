"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetV2CalendarEventsRequest:
    
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_time', 'style': 'form', 'explode': True }})
    r"""Upper bound (exclusive) for a calendar event's start time to filter by.
    Must be in ISO 8601 format.
    
    Example: `2022-02-14T10:12:59+00:00`.
    """  
    include_paging_counts: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_paging_counts', 'style': 'form', 'explode': True }})
    r"""Whether to include total_pages and total_count in the metadata. Defaults to false"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""The current page to fetch results from. Defaults to 1"""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""How many records to show per page in the range [1, 100]. Defaults to 25"""  
    sort_by: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_by', 'style': 'form', 'explode': True }})
    r"""Key to sort on, must be one of: start_time. Defaults to start_time"""  
    sort_direction: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_direction', 'style': 'form', 'explode': True }})
    r"""Direction to sort in, must be one of: ASC, DESC. Defaults to DESC"""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_time', 'style': 'form', 'explode': True }})
    r"""Lower bound (inclusive) for a calendar event's end time to filter by.
    Must be in ISO 8601 format.
    
    Example: `2022-02-14T10:12:59+00:00`.
    """  
    user_guid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'user_guid', 'style': 'form', 'explode': True }})
    r"""user_guid of the user who created or included as a guest to the event."""  
    

@dataclasses.dataclass
class GetV2CalendarEventsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    