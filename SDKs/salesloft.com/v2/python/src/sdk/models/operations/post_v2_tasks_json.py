"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PostV2TasksJSONRequestBody:
    
    current_state: str = dataclasses.field(metadata={'form': { 'field_name': 'current_state' }})
    r"""Current state of the task, valid options are: scheduled"""  
    due_date: str = dataclasses.field(metadata={'form': { 'field_name': 'due_date' }})
    r"""Date of when the Task is due, ISO-8601 date format required"""  
    person_id: str = dataclasses.field(metadata={'form': { 'field_name': 'person_id' }})
    r"""ID of the person to be contacted"""  
    subject: str = dataclasses.field(metadata={'form': { 'field_name': 'subject' }})
    r"""Subject line of the task."""  
    task_type: str = dataclasses.field(metadata={'form': { 'field_name': 'task_type' }})
    r"""Task type, valid options are: call, email, general"""  
    user_id: int = dataclasses.field(metadata={'form': { 'field_name': 'user_id' }})
    r"""ID of the user linked to the task"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'description' }})
    r"""A description of the task recorded for person at completion time"""  
    idempotency_key: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'idempotency_key' }})
    r"""Establishes a unique identifier to prevent duplicates from being created"""  
    remind_at: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'remind_at' }})
    r"""Datetime of when the user will be reminded of the task, ISO-8601 datetime format required"""  
    

@dataclasses.dataclass
class PostV2TasksJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    