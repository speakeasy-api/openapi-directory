// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AdSlotCompatibilityEnum - Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.
type AdSlotCompatibilityEnum string

const (
	AdSlotCompatibilityEnumDisplay             AdSlotCompatibilityEnum = "DISPLAY"
	AdSlotCompatibilityEnumDisplayInterstitial AdSlotCompatibilityEnum = "DISPLAY_INTERSTITIAL"
	AdSlotCompatibilityEnumApp                 AdSlotCompatibilityEnum = "APP"
	AdSlotCompatibilityEnumAppInterstitial     AdSlotCompatibilityEnum = "APP_INTERSTITIAL"
	AdSlotCompatibilityEnumInStreamVideo       AdSlotCompatibilityEnum = "IN_STREAM_VIDEO"
	AdSlotCompatibilityEnumInStreamAudio       AdSlotCompatibilityEnum = "IN_STREAM_AUDIO"
)

func (e *AdSlotCompatibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DISPLAY":
		fallthrough
	case "DISPLAY_INTERSTITIAL":
		fallthrough
	case "APP":
		fallthrough
	case "APP_INTERSTITIAL":
		fallthrough
	case "IN_STREAM_VIDEO":
		fallthrough
	case "IN_STREAM_AUDIO":
		*e = AdSlotCompatibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AdSlotCompatibilityEnum: %s", s)
	}
}

// AdSlotPaymentSourceTypeEnum - Payment source type of this ad slot.
type AdSlotPaymentSourceTypeEnum string

const (
	AdSlotPaymentSourceTypeEnumPlanningPaymentSourceTypeAgencyPaid    AdSlotPaymentSourceTypeEnum = "PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID"
	AdSlotPaymentSourceTypeEnumPlanningPaymentSourceTypePublisherPaid AdSlotPaymentSourceTypeEnum = "PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID"
)

func (e *AdSlotPaymentSourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PLANNING_PAYMENT_SOURCE_TYPE_AGENCY_PAID":
		fallthrough
	case "PLANNING_PAYMENT_SOURCE_TYPE_PUBLISHER_PAID":
		*e = AdSlotPaymentSourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AdSlotPaymentSourceTypeEnum: %s", s)
	}
}

// AdSlot - Ad Slot
type AdSlot struct {
	// Comment for this ad slot.
	Comment *string `json:"comment,omitempty"`
	// Ad slot compatibility. DISPLAY and DISPLAY_INTERSTITIAL refer to rendering either on desktop, mobile devices or in mobile apps for regular or interstitial ads respectively. APP and APP_INTERSTITIAL are for rendering in mobile apps. IN_STREAM_VIDEO refers to rendering in in-stream video ads developed with the VAST standard.
	Compatibility *AdSlotCompatibilityEnum `json:"compatibility,omitempty"`
	// Height of this ad slot.
	Height *string `json:"height,omitempty"`
	// ID of the placement from an external platform that is linked to this ad slot.
	LinkedPlacementID *string `json:"linkedPlacementId,omitempty"`
	// Name of this ad slot.
	Name *string `json:"name,omitempty"`
	// Payment source type of this ad slot.
	PaymentSourceType *AdSlotPaymentSourceTypeEnum `json:"paymentSourceType,omitempty"`
	// Primary ad slot of a roadblock inventory item.
	Primary *bool `json:"primary,omitempty"`
	// Width of this ad slot.
	Width *string `json:"width,omitempty"`
}
