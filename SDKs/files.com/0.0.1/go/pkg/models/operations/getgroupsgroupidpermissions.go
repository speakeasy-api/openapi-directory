// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetGroupsGroupIDPermissionsPathParams struct {
	// DEPRECATED: Group ID.  If provided, will scope permissions to this group. Use `filter[group_id]` instead.`
	GroupID string `pathParam:"style=simple,explode=false,name=group_id"`
}

type GetGroupsGroupIDPermissionsQueryParams struct {
	// Used for pagination.  Send a cursor value to resume an existing list from the point at which you left off.  Get a cursor from an existing list via the X-Files-Cursor-Next header.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// If set, return records where the specifiied field is equal to the supplied value. Valid fields are `group_id`, `user_id` or `path`.
	Filter map[string]interface{} `queryParam:"style=form,explode=true,name=filter"`
	// If set, return records where the specifiied field is greater than the supplied value. Valid fields are `group_id`, `user_id` or `path`.
	FilterGt map[string]interface{} `queryParam:"style=form,explode=true,name=filter_gt"`
	// If set, return records where the specifiied field is greater than or equal to the supplied value. Valid fields are `group_id`, `user_id` or `path`.
	FilterGteq map[string]interface{} `queryParam:"style=form,explode=true,name=filter_gteq"`
	// If set, return records where the specifiied field is equal to the supplied value. Valid fields are `group_id`, `user_id` or `path`.
	FilterLike map[string]interface{} `queryParam:"style=form,explode=true,name=filter_like"`
	// If set, return records where the specifiied field is less than the supplied value. Valid fields are `group_id`, `user_id` or `path`.
	FilterLt map[string]interface{} `queryParam:"style=form,explode=true,name=filter_lt"`
	// If set, return records where the specifiied field is less than or equal to the supplied value. Valid fields are `group_id`, `user_id` or `path`.
	FilterLteq map[string]interface{} `queryParam:"style=form,explode=true,name=filter_lteq"`
	// If searching by user or group, also include user's permissions that are inherited from its groups?
	IncludeGroups *bool `queryParam:"style=form,explode=true,name=include_groups"`
	// DEPRECATED: Permission path.  If provided, will scope permissions to this path. Use `filter[path]` instead.
	Path *string `queryParam:"style=form,explode=true,name=path"`
	// Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// If set, sort records by the specified field in either 'asc' or 'desc' direction (e.g. sort_by[last_login_at]=desc). Valid fields are `group_id`, `path`, `user_id` or `permission`.
	SortBy map[string]interface{} `queryParam:"style=form,explode=true,name=sort_by"`
	// DEPRECATED: User ID.  If provided, will scope permissions to this user. Use `filter[user_id]` instead.`
	UserID *string `queryParam:"style=form,explode=true,name=user_id"`
}

type GetGroupsGroupIDPermissionsRequest struct {
	PathParams  GetGroupsGroupIDPermissionsPathParams
	QueryParams GetGroupsGroupIDPermissionsQueryParams
}

type GetGroupsGroupIDPermissionsResponse struct {
	ContentType string
	// A list of Permissions objects.
	PermissionEntities []shared.PermissionEntity
	StatusCode         int
	RawResponse        *http.Response
}
