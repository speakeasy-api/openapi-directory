// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisableDomainTransferLockXAmzTargetEnum
type DisableDomainTransferLockXAmzTargetEnum string

const (
	DisableDomainTransferLockXAmzTargetEnumRoute53DomainsV20140515DisableDomainTransferLock DisableDomainTransferLockXAmzTargetEnum = "Route53Domains_v20140515.DisableDomainTransferLock"
)

func (e *DisableDomainTransferLockXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Route53Domains_v20140515.DisableDomainTransferLock":
		*e = DisableDomainTransferLockXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisableDomainTransferLockXAmzTargetEnum: %s", s)
	}
}

type DisableDomainTransferLockRequest struct {
	DisableDomainTransferLockRequest shared.DisableDomainTransferLockRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       DisableDomainTransferLockXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisableDomainTransferLockResponse struct {
	ContentType string
	// Success
	DisableDomainTransferLockResponse *shared.DisableDomainTransferLockResponse
	// DuplicateRequest
	DuplicateRequest interface{}
	// InvalidInput
	InvalidInput interface{}
	// OperationLimitExceeded
	OperationLimitExceeded interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TLDRulesViolation
	TLDRulesViolation interface{}
	// UnsupportedTLD
	UnsupportedTLD interface{}
}
