"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import reportsconfiguration as shared_reportsconfiguration
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountAccountProfileEnum(str, Enum):
    r"""Profile for this account. This is a read-only field that can be left blank."""
    ACCOUNT_PROFILE_BASIC = 'ACCOUNT_PROFILE_BASIC'
    ACCOUNT_PROFILE_STANDARD = 'ACCOUNT_PROFILE_STANDARD'

class AccountActiveAdsLimitTierEnum(str, Enum):
    r"""Maximum number of active ads allowed for this account."""
    ACTIVE_ADS_TIER_40_K = 'ACTIVE_ADS_TIER_40K'
    ACTIVE_ADS_TIER_75_K = 'ACTIVE_ADS_TIER_75K'
    ACTIVE_ADS_TIER_100_K = 'ACTIVE_ADS_TIER_100K'
    ACTIVE_ADS_TIER_200_K = 'ACTIVE_ADS_TIER_200K'
    ACTIVE_ADS_TIER_300_K = 'ACTIVE_ADS_TIER_300K'
    ACTIVE_ADS_TIER_500_K = 'ACTIVE_ADS_TIER_500K'
    ACTIVE_ADS_TIER_750_K = 'ACTIVE_ADS_TIER_750K'
    ACTIVE_ADS_TIER_1_M = 'ACTIVE_ADS_TIER_1M'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Account:
    r"""Contains properties of a Campaign Manager account."""
    
    account_permission_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountPermissionIds'), 'exclude': lambda f: f is None }})
    r"""Account permissions assigned to this account."""  
    account_profile: Optional[AccountAccountProfileEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountProfile'), 'exclude': lambda f: f is None }})
    r"""Profile for this account. This is a read-only field that can be left blank."""  
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""Whether this account is active."""  
    active_ads_limit_tier: Optional[AccountActiveAdsLimitTierEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activeAdsLimitTier'), 'exclude': lambda f: f is None }})
    r"""Maximum number of active ads allowed for this account."""  
    active_view_opt_out: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activeViewOptOut'), 'exclude': lambda f: f is None }})
    r"""Whether to serve creatives with Active View tags. If disabled, viewability data will not be available for any impressions."""  
    available_permission_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availablePermissionIds'), 'exclude': lambda f: f is None }})
    r"""User role permissions available to the user roles of this account."""  
    country_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('countryId'), 'exclude': lambda f: f is None }})
    r"""ID of the country associated with this account."""  
    currency_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyId'), 'exclude': lambda f: f is None }})
    r"""ID of currency associated with this account. This is a required field. Acceptable values are: - \\"1\\" for USD - \\"2\\" for GBP - \\"3\\" for ESP - \\"4\\" for SEK - \\"5\\" for CAD - \\"6\\" for JPY - \\"7\\" for DEM - \\"8\\" for AUD - \\"9\\" for FRF - \\"10\\" for ITL - \\"11\\" for DKK - \\"12\\" for NOK - \\"13\\" for FIM - \\"14\\" for ZAR - \\"15\\" for IEP - \\"16\\" for NLG - \\"17\\" for EUR - \\"18\\" for KRW - \\"19\\" for TWD - \\"20\\" for SGD - \\"21\\" for CNY - \\"22\\" for HKD - \\"23\\" for NZD - \\"24\\" for MYR - \\"25\\" for BRL - \\"26\\" for PTE - \\"28\\" for CLP - \\"29\\" for TRY - \\"30\\" for ARS - \\"31\\" for PEN - \\"32\\" for ILS - \\"33\\" for CHF - \\"34\\" for VEF - \\"35\\" for COP - \\"36\\" for GTQ - \\"37\\" for PLN - \\"39\\" for INR - \\"40\\" for THB - \\"41\\" for IDR - \\"42\\" for CZK - \\"43\\" for RON - \\"44\\" for HUF - \\"45\\" for RUB - \\"46\\" for AED - \\"47\\" for BGN - \\"48\\" for HRK - \\"49\\" for MXN - \\"50\\" for NGN - \\"51\\" for EGP"""  
    default_creative_size_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultCreativeSizeId'), 'exclude': lambda f: f is None }})
    r"""Default placement dimensions for this account."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of this account."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of this account. This is a read-only, auto-generated field."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"dfareporting#account\\"."""  
    locale: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locale'), 'exclude': lambda f: f is None }})
    r"""Locale of this account. Acceptable values are: - \\"cs\\" (Czech) - \\"de\\" (German) - \\"en\\" (English) - \\"en-GB\\" (English United Kingdom) - \\"es\\" (Spanish) - \\"fr\\" (French) - \\"it\\" (Italian) - \\"ja\\" (Japanese) - \\"ko\\" (Korean) - \\"pl\\" (Polish) - \\"pt-BR\\" (Portuguese Brazil) - \\"ru\\" (Russian) - \\"sv\\" (Swedish) - \\"tr\\" (Turkish) - \\"zh-CN\\" (Chinese Simplified) - \\"zh-TW\\" (Chinese Traditional)"""  
    maximum_image_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maximumImageSize'), 'exclude': lambda f: f is None }})
    r"""Maximum image size allowed for this account, in kilobytes. Value must be greater than or equal to 1."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of this account. This is a required field, and must be less than 128 characters long and be globally unique."""  
    nielsen_ocr_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nielsenOcrEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether campaigns created in this account will be enabled for Nielsen OCR reach ratings by default."""  
    reports_configuration: Optional[shared_reportsconfiguration.ReportsConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportsConfiguration'), 'exclude': lambda f: f is None }})
    r"""Reporting Configuration"""  
    share_reports_with_twitter: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shareReportsWithTwitter'), 'exclude': lambda f: f is None }})
    r"""Share Path to Conversion reports with Twitter."""  
    teaser_size_limit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teaserSizeLimit'), 'exclude': lambda f: f is None }})
    r"""File size limit in kilobytes of Rich Media teaser creatives. Acceptable values are 1 to 10240, inclusive."""  
    