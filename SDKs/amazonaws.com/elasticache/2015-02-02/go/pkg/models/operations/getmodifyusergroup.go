// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyUserGroupActionEnum
type GETModifyUserGroupActionEnum string

const (
	GETModifyUserGroupActionEnumModifyUserGroup GETModifyUserGroupActionEnum = "ModifyUserGroup"
)

func (e *GETModifyUserGroupActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyUserGroup":
		*e = GETModifyUserGroupActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyUserGroupActionEnum: %s", s)
	}
}

// GETModifyUserGroupVersionEnum
type GETModifyUserGroupVersionEnum string

const (
	GETModifyUserGroupVersionEnumTwoThousandAndFifteen0202 GETModifyUserGroupVersionEnum = "2015-02-02"
)

func (e *GETModifyUserGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = GETModifyUserGroupVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyUserGroupVersionEnum: %s", s)
	}
}

type GETModifyUserGroupQueryParams struct {
	Action GETModifyUserGroupActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the user group.
	UserGroupID string `queryParam:"style=form,explode=true,name=UserGroupId"`
	// The list of user IDs to add to the user group.
	UserIdsToAdd []string `queryParam:"style=form,explode=true,name=UserIdsToAdd"`
	// The list of user IDs to remove from the user group.
	UserIdsToRemove []string                      `queryParam:"style=form,explode=true,name=UserIdsToRemove"`
	Version         GETModifyUserGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETModifyUserGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyUserGroupRequest struct {
	QueryParams GETModifyUserGroupQueryParams
	Headers     GETModifyUserGroupHeaders
}

type GETModifyUserGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
