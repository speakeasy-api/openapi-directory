// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QuerySchemaVersionMetadataXAmzTargetEnum
type QuerySchemaVersionMetadataXAmzTargetEnum string

const (
	QuerySchemaVersionMetadataXAmzTargetEnumAwsGlueQuerySchemaVersionMetadata QuerySchemaVersionMetadataXAmzTargetEnum = "AWSGlue.QuerySchemaVersionMetadata"
)

func (e QuerySchemaVersionMetadataXAmzTargetEnum) ToPointer() *QuerySchemaVersionMetadataXAmzTargetEnum {
	return &e
}

func (e *QuerySchemaVersionMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.QuerySchemaVersionMetadata":
		*e = QuerySchemaVersionMetadataXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QuerySchemaVersionMetadataXAmzTargetEnum: %v", v)
	}
}

type QuerySchemaVersionMetadataRequest struct {
	QuerySchemaVersionMetadataInput shared.QuerySchemaVersionMetadataInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      QuerySchemaVersionMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type QuerySchemaVersionMetadataResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	QuerySchemaVersionMetadataResponse *shared.QuerySchemaVersionMetadataResponse
	StatusCode                         int
	RawResponse                        *http.Response
}
