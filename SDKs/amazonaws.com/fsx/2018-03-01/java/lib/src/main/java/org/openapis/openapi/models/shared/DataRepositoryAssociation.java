/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DataRepositoryAssociation - &lt;p&gt;The configuration of a data repository association that links an Amazon FSx for Lustre file system to an Amazon S3 bucket or an Amazon File Cache resource to an Amazon S3 bucket or an NFS file system. The data repository association configuration object is returned in the response of the following operations:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;CreateDataRepositoryAssociation&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;UpdateDataRepositoryAssociation&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;DescribeDataRepositoryAssociations&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Data repository associations are supported on Amazon File Cache resources and all Amazon FSx for Lustre file systems excluding &lt;code&gt;Scratch_1&lt;/code&gt; deployment types.&lt;/p&gt;
 */
public class DataRepositoryAssociation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssociationId")
    public String associationId;

    public DataRepositoryAssociation withAssociationId(String associationId) {
        this.associationId = associationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BatchImportMetaDataOnCreate")
    public Boolean batchImportMetaDataOnCreate;

    public DataRepositoryAssociation withBatchImportMetaDataOnCreate(Boolean batchImportMetaDataOnCreate) {
        this.batchImportMetaDataOnCreate = batchImportMetaDataOnCreate;
        return this;
    }
    
    /**
     * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public DataRepositoryAssociation withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataRepositoryPath")
    public String dataRepositoryPath;

    public DataRepositoryAssociation withDataRepositoryPath(String dataRepositoryPath) {
        this.dataRepositoryPath = dataRepositoryPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataRepositorySubdirectories")
    public String[] dataRepositorySubdirectories;

    public DataRepositoryAssociation withDataRepositorySubdirectories(String[] dataRepositorySubdirectories) {
        this.dataRepositorySubdirectories = dataRepositorySubdirectories;
        return this;
    }
    
    /**
     * Provides detailed information about the data repository if its &lt;code&gt;Lifecycle&lt;/code&gt; is set to &lt;code&gt;MISCONFIGURED&lt;/code&gt; or &lt;code&gt;FAILED&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureDetails")
    public DataRepositoryFailureDetails failureDetails;

    public DataRepositoryAssociation withFailureDetails(DataRepositoryFailureDetails failureDetails) {
        this.failureDetails = failureDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileCacheId")
    public String fileCacheId;

    public DataRepositoryAssociation withFileCacheId(String fileCacheId) {
        this.fileCacheId = fileCacheId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileCachePath")
    public String fileCachePath;

    public DataRepositoryAssociation withFileCachePath(String fileCachePath) {
        this.fileCachePath = fileCachePath;
        return this;
    }
    
    /**
     * The globally unique ID of the file system, assigned by Amazon FSx.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileSystemId")
    public String fileSystemId;

    public DataRepositoryAssociation withFileSystemId(String fileSystemId) {
        this.fileSystemId = fileSystemId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileSystemPath")
    public String fileSystemPath;

    public DataRepositoryAssociation withFileSystemPath(String fileSystemPath) {
        this.fileSystemPath = fileSystemPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ImportedFileChunkSize")
    public Long importedFileChunkSize;

    public DataRepositoryAssociation withImportedFileChunkSize(Long importedFileChunkSize) {
        this.importedFileChunkSize = importedFileChunkSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Lifecycle")
    public DataRepositoryLifecycleEnum lifecycle;

    public DataRepositoryAssociation withLifecycle(DataRepositoryLifecycleEnum lifecycle) {
        this.lifecycle = lifecycle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NFS")
    public NFSDataRepositoryConfiguration nfs;

    public DataRepositoryAssociation withNfs(NFSDataRepositoryConfiguration nfs) {
        this.nfs = nfs;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"&gt;Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceARN")
    public String resourceARN;

    public DataRepositoryAssociation withResourceARN(String resourceARN) {
        this.resourceARN = resourceARN;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("S3")
    public S3DataRepositoryConfiguration s3;

    public DataRepositoryAssociation withS3(S3DataRepositoryConfiguration s3) {
        this.s3 = s3;
        return this;
    }
    
    /**
     * A list of &lt;code&gt;Tag&lt;/code&gt; values, with a maximum of 50 elements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;

    public DataRepositoryAssociation withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    public DataRepositoryAssociation(){}
}
