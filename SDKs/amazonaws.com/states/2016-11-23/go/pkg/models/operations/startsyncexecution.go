// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartSyncExecutionXAmzTargetEnum
type StartSyncExecutionXAmzTargetEnum string

const (
	StartSyncExecutionXAmzTargetEnumAwsStepFunctionsStartSyncExecution StartSyncExecutionXAmzTargetEnum = "AWSStepFunctions.StartSyncExecution"
)

func (e StartSyncExecutionXAmzTargetEnum) ToPointer() *StartSyncExecutionXAmzTargetEnum {
	return &e
}

func (e *StartSyncExecutionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSStepFunctions.StartSyncExecution":
		*e = StartSyncExecutionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSyncExecutionXAmzTargetEnum: %v", v)
	}
}

type StartSyncExecutionRequest struct {
	StartSyncExecutionInput shared.StartSyncExecutionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              StartSyncExecutionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartSyncExecutionResponse struct {
	ContentType string
	// InvalidArn
	InvalidArn interface{}
	// InvalidExecutionInput
	InvalidExecutionInput interface{}
	// InvalidName
	InvalidName interface{}
	// Success
	StartSyncExecutionOutput *shared.StartSyncExecutionOutput
	// StateMachineDeleting
	StateMachineDeleting interface{}
	// StateMachineDoesNotExist
	StateMachineDoesNotExist interface{}
	// StateMachineTypeNotSupported
	StateMachineTypeNotSupported interface{}
	StatusCode                   int
	RawResponse                  *http.Response
}
