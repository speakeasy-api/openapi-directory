/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Advertiser - Contains properties of a Campaign Manager advertiser.
 */
public class Advertiser {
    /**
     * Account ID of this advertiser.This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public Advertiser withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * ID of the advertiser group this advertiser belongs to. You can group advertisers for reporting purposes, allowing you to see aggregated information for all advertisers in each group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserGroupId")
    public String advertiserGroupId;
    public Advertiser withAdvertiserGroupId(String advertiserGroupId) {
        this.advertiserGroupId = advertiserGroupId;
        return this;
    }
    
    /**
     * Suffix added to click-through URL of ad creative associations under this advertiser. Must be less than 129 characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clickThroughUrlSuffix")
    public String clickThroughUrlSuffix;
    public Advertiser withClickThroughUrlSuffix(String clickThroughUrlSuffix) {
        this.clickThroughUrlSuffix = clickThroughUrlSuffix;
        return this;
    }
    
    /**
     * ID of the click-through event tag to apply by default to the landing pages of this advertiser's campaigns.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultClickThroughEventTagId")
    public String defaultClickThroughEventTagId;
    public Advertiser withDefaultClickThroughEventTagId(String defaultClickThroughEventTagId) {
        this.defaultClickThroughEventTagId = defaultClickThroughEventTagId;
        return this;
    }
    
    /**
     * Default email address used in sender field for tag emails.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultEmail")
    public String defaultEmail;
    public Advertiser withDefaultEmail(String defaultEmail) {
        this.defaultEmail = defaultEmail;
        return this;
    }
    
    /**
     * Floodlight configuration ID of this advertiser. The floodlight configuration ID will be created automatically, so on insert this field should be left blank. This field can be set to another advertiser's floodlight configuration ID in order to share that advertiser's floodlight configuration with this advertiser, so long as: - This advertiser's original floodlight configuration is not already associated with floodlight activities or floodlight activity groups. - This advertiser's original floodlight configuration is not already shared with another advertiser. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floodlightConfigurationId")
    public String floodlightConfigurationId;
    public Advertiser withFloodlightConfigurationId(String floodlightConfigurationId) {
        this.floodlightConfigurationId = floodlightConfigurationId;
        return this;
    }
    
    /**
     * Represents a DimensionValue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floodlightConfigurationIdDimensionValue")
    public DimensionValue floodlightConfigurationIdDimensionValue;
    public Advertiser withFloodlightConfigurationIdDimensionValue(DimensionValue floodlightConfigurationIdDimensionValue) {
        this.floodlightConfigurationIdDimensionValue = floodlightConfigurationIdDimensionValue;
        return this;
    }
    
    /**
     * ID of this advertiser. This is a read-only, auto-generated field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Advertiser withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Represents a DimensionValue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idDimensionValue")
    public DimensionValue idDimensionValue;
    public Advertiser withIdDimensionValue(DimensionValue idDimensionValue) {
        this.idDimensionValue = idDimensionValue;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#advertiser".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Advertiser withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measurementPartnerLink")
    public MeasurementPartnerAdvertiserLink measurementPartnerLink;
    public Advertiser withMeasurementPartnerLink(MeasurementPartnerAdvertiserLink measurementPartnerLink) {
        this.measurementPartnerLink = measurementPartnerLink;
        return this;
    }
    
    /**
     * Name of this advertiser. This is a required field and must be less than 256 characters long and unique among advertisers of the same account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Advertiser withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Original floodlight configuration before any sharing occurred. Set the floodlightConfigurationId of this advertiser to originalFloodlightConfigurationId to unshare the advertiser's current floodlight configuration. You cannot unshare an advertiser's floodlight configuration if the shared configuration has activities associated with any campaign or placement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalFloodlightConfigurationId")
    public String originalFloodlightConfigurationId;
    public Advertiser withOriginalFloodlightConfigurationId(String originalFloodlightConfigurationId) {
        this.originalFloodlightConfigurationId = originalFloodlightConfigurationId;
        return this;
    }
    
    /**
     * Status of this advertiser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public AdvertiserStatusEnum status;
    public Advertiser withStatus(AdvertiserStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Subaccount ID of this advertiser.This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subaccountId")
    public String subaccountId;
    public Advertiser withSubaccountId(String subaccountId) {
        this.subaccountId = subaccountId;
        return this;
    }
    
    /**
     * Suspension status of this advertiser.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspended")
    public Boolean suspended;
    public Advertiser withSuspended(Boolean suspended) {
        this.suspended = suspended;
        return this;
    }
    
}
