"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DetachLunRequest:
    r"""Message for detach specific LUN from an Instance."""
    
    lun: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lun'), 'exclude': lambda f: f is None }})
    r"""Required. Name of the Lun to detach."""  
    skip_reboot: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skipReboot'), 'exclude': lambda f: f is None }})
    r"""If true, performs lun unmapping without instance reboot."""  
    