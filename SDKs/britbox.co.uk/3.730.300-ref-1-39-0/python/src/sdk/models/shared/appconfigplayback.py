"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppConfigPlayback:
    
    chain_play_countdown: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chainPlayCountdown') }})
    r"""The number of seconds before autoplay of next video.
    
    If set to 0 there will be no autoplay.
    """  
    chain_play_squeezeback: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chainPlaySqueezeback') }})
    r"""The number of seconds before the end of playback when the current video
    should be minimized and user options are presented within the video player.
    
    If set to 0 there will be no squeezeback.
    """  
    chain_play_timeout: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chainPlayTimeout') }})
    r"""The number of minutes of user inactivity before autoplay is paused.
    
    If set to 0 there will be no autoplay timeout.
    """  
    heartbeat_frequency: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('heartbeatFrequency') }})
    r"""How often a heartbeat should be renewed during playback."""  
    view_event_points: list[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('viewEventPoints') }})
    r"""An array of percentage points in which to fire off plabyack view events.
    For example a value of 0.5 would indicate that an event should be
    fired when the user is half way through the video.
    Often known as quartiles when four equaly spread event points.
    """  
    