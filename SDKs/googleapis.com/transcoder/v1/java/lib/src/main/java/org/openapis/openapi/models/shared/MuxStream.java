/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MuxStream - Multiplexing settings for output stream.
 */
public class MuxStream {
    /**
     * The container format. The default is `mp4` Supported container formats: - `ts` - `fmp4`- the corresponding file extension is `.m4s` - `mp4` - `vtt` See also: [Supported input and output formats](https://cloud.google.com/transcoder/docs/concepts/supported-input-and-output-formats)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("container")
    public String container;
    public MuxStream withContainer(String container) {
        this.container = container;
        return this;
    }
    
    /**
     * List of `ElementaryStream.key`s multiplexed in this stream.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("elementaryStreams")
    public String[] elementaryStreams;
    public MuxStream withElementaryStreams(String[] elementaryStreams) {
        this.elementaryStreams = elementaryStreams;
        return this;
    }
    
    /**
     * The name of the generated file. The default is `MuxStream.key` with the extension suffix corresponding to the `MuxStream.container`. Individual segments also have an incremental 10-digit zero-padded suffix starting from 0 before the extension, such as `mux_stream0000000123.ts`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileName")
    public String fileName;
    public MuxStream withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    /**
     * A unique key for this multiplexed stream. HLS media manifests will be named `MuxStream.key` with the `.m3u8` extension suffix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;
    public MuxStream withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Segment settings for `ts`, `fmp4` and `vtt`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("segmentSettings")
    public SegmentSettings segmentSettings;
    public MuxStream withSegmentSettings(SegmentSettings segmentSettings) {
        this.segmentSettings = segmentSettings;
        return this;
    }
    
}
