/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NetworkAttachment - NetworkAttachments A network attachment resource ...
 */
public class NetworkAttachment {
    /**
     * [Output Only] An array of connections for all the producers connected to this network attachment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionEndpoints")
    public NetworkAttachmentConnectedEndpoint[] connectionEndpoints;

    public NetworkAttachment withConnectionEndpoints(NetworkAttachmentConnectedEndpoint[] connectionEndpoints) {
        this.connectionEndpoints = connectionEndpoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionPreference")
    public NetworkAttachmentConnectionPreferenceEnum connectionPreference;

    public NetworkAttachment withConnectionPreference(NetworkAttachmentConnectionPreferenceEnum connectionPreference) {
        this.connectionPreference = connectionPreference;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public NetworkAttachment withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public NetworkAttachment withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;

    public NetworkAttachment withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource type. The server generates this identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public NetworkAttachment withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public NetworkAttachment withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NetworkAttachment withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Output Only] The URL of the network which the Network Attachment belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public NetworkAttachment withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producerAcceptLists")
    public String[] producerAcceptLists;

    public NetworkAttachment withProducerAcceptLists(String[] producerAcceptLists) {
        this.producerAcceptLists = producerAcceptLists;
        return this;
    }
    
    /**
     * Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producerRejectLists")
    public String[] producerRejectLists;

    public NetworkAttachment withProducerRejectLists(String[] producerRejectLists) {
        this.producerRejectLists = producerRejectLists;
        return this;
    }
    
    /**
     * [Output Only] URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;

    public NetworkAttachment withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public NetworkAttachment withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource's resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;

    public NetworkAttachment withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetworks")
    public String[] subnetworks;

    public NetworkAttachment withSubnetworks(String[] subnetworks) {
        this.subnetworks = subnetworks;
        return this;
    }
    
    public NetworkAttachment(){}
}
