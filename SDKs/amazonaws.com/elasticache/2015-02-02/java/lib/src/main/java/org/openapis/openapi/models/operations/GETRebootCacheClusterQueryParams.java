/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETRebootCacheClusterQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETRebootCacheClusterActionEnum action;
    public GETRebootCacheClusterQueryParams withAction(GETRebootCacheClusterActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The cluster identifier. This parameter is stored as a lowercase string.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CacheClusterId")
    public String cacheClusterId;
    public GETRebootCacheClusterQueryParams withCacheClusterId(String cacheClusterId) {
        this.cacheClusterId = cacheClusterId;
        return this;
    }
    
    /**
     * A list of cache node IDs to reboot. A node ID is a numeric identifier (0001, 0002, etc.). To reboot an entire cluster, specify all of the cache node IDs.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CacheNodeIdsToReboot")
    public String[] cacheNodeIdsToReboot;
    public GETRebootCacheClusterQueryParams withCacheNodeIdsToReboot(String[] cacheNodeIdsToReboot) {
        this.cacheNodeIdsToReboot = cacheNodeIdsToReboot;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETRebootCacheClusterVersionEnum version;
    public GETRebootCacheClusterQueryParams withVersion(GETRebootCacheClusterVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
