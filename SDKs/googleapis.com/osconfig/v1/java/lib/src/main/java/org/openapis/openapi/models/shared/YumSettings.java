/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * YumSettings - Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.
 */
public class YumSettings {
    /**
     * List of packages to exclude from update. These packages are excluded by using the yum `--exclude` flag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludes")
    public String[] excludes;

    public YumSettings withExcludes(String[] excludes) {
        this.excludes = excludes;
        return this;
    }
    
    /**
     * An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exclusivePackages")
    public String[] exclusivePackages;

    public YumSettings withExclusivePackages(String[] exclusivePackages) {
        this.exclusivePackages = exclusivePackages;
        return this;
    }
    
    /**
     * Will cause patch to run `yum update-minimal` instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimal")
    public Boolean minimal;

    public YumSettings withMinimal(Boolean minimal) {
        this.minimal = minimal;
        return this;
    }
    
    /**
     * Adds the `--security` flag to `yum update`. Not supported on all platforms.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("security")
    public Boolean security;

    public YumSettings withSecurity(Boolean security) {
        this.security = security;
        return this;
    }
    
    public YumSettings(){}
}
