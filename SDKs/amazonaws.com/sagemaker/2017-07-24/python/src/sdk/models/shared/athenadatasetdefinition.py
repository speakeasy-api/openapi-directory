"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import athenaresultcompressiontype_enum as shared_athenaresultcompressiontype_enum
from ..shared import athenaresultformat_enum as shared_athenaresultformat_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AthenaDatasetDefinition:
    r"""Configuration for Athena Dataset Definition input."""
    
    catalog: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Catalog') }})
    r"""The name of the data catalog used in Athena query execution."""  
    database: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Database') }})
    r"""The name of the database used in the Athena query execution."""  
    output_format: shared_athenaresultformat_enum.AthenaResultFormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputFormat') }})
    r"""The data storage format for Athena query results."""  
    output_s3_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputS3Uri') }})  
    query_string: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QueryString') }})
    r"""The SQL query statements, to be executed."""  
    kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KmsKeyId'), 'exclude': lambda f: f is None }})  
    output_compression: Optional[shared_athenaresultcompressiontype_enum.AthenaResultCompressionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputCompression'), 'exclude': lambda f: f is None }})
    r"""The compression used for Athena query results."""  
    work_group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkGroup'), 'exclude': lambda f: f is None }})
    r"""The name of the workgroup in which the Athena query is being started."""  
    