"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import channelsettings as shared_channelsettings
from ..shared import imagesettings as shared_imagesettings
from ..shared import propertyvalue as shared_propertyvalue
from ..shared import watchsettings as shared_watchsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelBrandingSettings:
    r"""Branding properties of a YouTube channel."""
    
    channel: Optional[shared_channelsettings.ChannelSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel'), 'exclude': lambda f: f is None }})
    r"""Branding properties for the channel view."""  
    hints: Optional[list[shared_propertyvalue.PropertyValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hints'), 'exclude': lambda f: f is None }})
    r"""Additional experimental branding properties."""  
    image: Optional[shared_imagesettings.ImageSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Branding properties for images associated with the channel."""  
    watch: Optional[shared_watchsettings.WatchSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('watch'), 'exclude': lambda f: f is None }})
    r"""Branding properties for the watch. All deprecated."""  
    