"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import documentstarget as shared_documentstarget
from ..shared import querytarget as shared_querytarget
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Target:
    r"""A specification of a set of documents to listen to."""
    
    documents: Optional[shared_documentstarget.DocumentsTarget] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documents'), 'exclude': lambda f: f is None }})
    r"""A target specified by a set of documents names."""  
    once: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('once'), 'exclude': lambda f: f is None }})
    r"""If the target should be removed once it is current and consistent."""  
    query: Optional[shared_querytarget.QueryTarget] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""A target specified by a query."""  
    read_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readTime'), 'exclude': lambda f: f is None }})
    r"""Start listening after a specific `read_time`. The client must know the state of matching documents at this time."""  
    resume_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resumeToken'), 'exclude': lambda f: f is None }})
    r"""A resume token from a prior TargetChange for an identical target. Using a resume token with a different target is unsupported and may fail."""  
    target_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetId'), 'exclude': lambda f: f is None }})
    r"""The target ID that identifies the target on the stream. Must be a positive number and non-zero."""  
    