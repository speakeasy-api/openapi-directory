/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Message - Message object.
 */
public class Message {
    /**
     * The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients) of the publisher of this message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;
    public Message withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * The connection ID of the publisher of this message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionId")
    public String connectionId;
    public Message withConnectionId(String connectionId) {
        this.connectionId = connectionId;
        return this;
    }
    
    /**
     * The string encoded payload, with the encoding specified below.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public String data;
    public Message withData(String data) {
        this.data = data;
        return this;
    }
    
    /**
     * This will typically be empty as all messages received from Ably are automatically decoded client-side using this value. However, if the message encoding cannot be processed, this attribute will contain the remaining transformations not applied to the data payload.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encoding")
    public String encoding;
    public Message withEncoding(String encoding) {
        this.encoding = encoding;
        return this;
    }
    
    /**
     * Extras object. Currently only allows for [push](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example) extra.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extras")
    public Extras extras;
    public Message withExtras(Extras extras) {
        this.extras = extras;
        return this;
    }
    
    /**
     * A Unique ID that can be specified by the publisher for [idempotent publishing](https://www.ably.io/documentation/rest/messages#idempotent).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Message withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The event name, if provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Message withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Timestamp when the message was received by the Ably, as milliseconds since the epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public Long timestamp;
    public Message withTimestamp(Long timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
}
