/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomRoutingDestinationTrafficStateEnum } from "./customroutingdestinationtrafficstateenum";
import { IpAddressTypeEnum } from "./ipaddresstypeenum";
import { SocketAddress } from "./socketaddress";
import { Expose, Type } from "class-transformer";

/**
 * The port mappings for a specified endpoint IP address (destination).
 */
export class DestinationPortMapping extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AcceleratorArn" })
  acceleratorArn?: string;

  @SpeakeasyMetadata({ elemType: SocketAddress })
  @Expose({ name: "AcceleratorSocketAddresses" })
  @Type(() => SocketAddress)
  acceleratorSocketAddresses?: SocketAddress[];

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationSocketAddress" })
  @Type(() => SocketAddress)
  destinationSocketAddress?: SocketAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationTrafficState" })
  destinationTrafficState?: CustomRoutingDestinationTrafficStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointGroupArn" })
  endpointGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointGroupRegion" })
  endpointGroupRegion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointId" })
  endpointId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IpAddressType" })
  ipAddressType?: IpAddressTypeEnum;
}
