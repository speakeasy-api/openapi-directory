"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class PartyRolePartyRoleTypeEnum(str, Enum):
    r"""The party's role type."""
    DIRECTOR = 'Director'
    EMPLOYEE = 'Employee'
    MEMBER = 'Member'
    PARTNER = 'Partner'
    TRUSTEE = 'Trustee'

class PartyRoleRelatedPartyRoleTypeEnum(str, Enum):
    r"""The related party's role type."""
    ASSOCIATION = 'Association'
    COMPANY = 'Company'
    EMPLOYER = 'Employer'
    ORGANISATION = 'Organisation'
    PARTNERSHIP = 'Partnership'
    TRUST = 'Trust'

class PartyRoleRelationshipTypeEnum(str, Enum):
    r"""The relationship type."""
    DIRECTORSHIP = 'Directorship'
    EMPLOYMENT = 'Employment'
    MEMBERSHIP = 'Membership'
    PARTNERSHIP = 'Partnership'
    TRUSTEESHIP = 'Trusteeship'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PartyRoleInput:
    r"""The Party Role resource."""
    
    related_party_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedPartyId') }})
    r"""The related party's unique identifier."""  
    relationship_type: PartyRoleRelationshipTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relationshipType') }})
    r"""The relationship type."""  
    party_role_type: Optional[PartyRolePartyRoleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partyRoleType'), 'exclude': lambda f: f is None }})
    r"""The party's role type."""  
    related_party_role_type: Optional[PartyRoleRelatedPartyRoleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedPartyRoleType'), 'exclude': lambda f: f is None }})
    r"""The related party's role type."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PartyRole:
    r"""The Party Role resource."""
    
    related_party_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedPartyId') }})
    r"""The related party's unique identifier."""  
    relationship_type: PartyRoleRelationshipTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relationshipType') }})
    r"""The relationship type."""  
    from_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fromDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The resource's unique identifier."""  
    party_role_type: Optional[PartyRolePartyRoleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partyRoleType'), 'exclude': lambda f: f is None }})
    r"""The party's role type."""  
    related_party_role_type: Optional[PartyRoleRelatedPartyRoleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedPartyRoleType'), 'exclude': lambda f: f is None }})
    r"""The related party's role type."""  
    to_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)."""  
    