// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExtendedKeyUsageNameEnum string

const (
	ExtendedKeyUsageNameEnumTLSWebServerAuthentication ExtendedKeyUsageNameEnum = "TLS_WEB_SERVER_AUTHENTICATION"
	ExtendedKeyUsageNameEnumTLSWebClientAuthentication ExtendedKeyUsageNameEnum = "TLS_WEB_CLIENT_AUTHENTICATION"
	ExtendedKeyUsageNameEnumCodeSigning                ExtendedKeyUsageNameEnum = "CODE_SIGNING"
	ExtendedKeyUsageNameEnumEmailProtection            ExtendedKeyUsageNameEnum = "EMAIL_PROTECTION"
	ExtendedKeyUsageNameEnumTimeStamping               ExtendedKeyUsageNameEnum = "TIME_STAMPING"
	ExtendedKeyUsageNameEnumOcspSigning                ExtendedKeyUsageNameEnum = "OCSP_SIGNING"
	ExtendedKeyUsageNameEnumIpsecEndSystem             ExtendedKeyUsageNameEnum = "IPSEC_END_SYSTEM"
	ExtendedKeyUsageNameEnumIpsecTunnel                ExtendedKeyUsageNameEnum = "IPSEC_TUNNEL"
	ExtendedKeyUsageNameEnumIpsecUser                  ExtendedKeyUsageNameEnum = "IPSEC_USER"
	ExtendedKeyUsageNameEnumAny                        ExtendedKeyUsageNameEnum = "ANY"
	ExtendedKeyUsageNameEnumNone                       ExtendedKeyUsageNameEnum = "NONE"
	ExtendedKeyUsageNameEnumCustom                     ExtendedKeyUsageNameEnum = "CUSTOM"
)

func (e ExtendedKeyUsageNameEnum) ToPointer() *ExtendedKeyUsageNameEnum {
	return &e
}

func (e *ExtendedKeyUsageNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TLS_WEB_SERVER_AUTHENTICATION":
		fallthrough
	case "TLS_WEB_CLIENT_AUTHENTICATION":
		fallthrough
	case "CODE_SIGNING":
		fallthrough
	case "EMAIL_PROTECTION":
		fallthrough
	case "TIME_STAMPING":
		fallthrough
	case "OCSP_SIGNING":
		fallthrough
	case "IPSEC_END_SYSTEM":
		fallthrough
	case "IPSEC_TUNNEL":
		fallthrough
	case "IPSEC_USER":
		fallthrough
	case "ANY":
		fallthrough
	case "NONE":
		fallthrough
	case "CUSTOM":
		*e = ExtendedKeyUsageNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExtendedKeyUsageNameEnum: %v", v)
	}
}
