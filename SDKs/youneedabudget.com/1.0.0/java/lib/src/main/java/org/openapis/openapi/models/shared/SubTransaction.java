/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SubTransaction {
    /**
     * The subtransaction amount in milliunits format
     */
    @JsonProperty("amount")
    public Long amount;
    public SubTransaction withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category_id")
    public String categoryId;
    public SubTransaction withCategoryId(String categoryId) {
        this.categoryId = categoryId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category_name")
    public String categoryName;
    public SubTransaction withCategoryName(String categoryName) {
        this.categoryName = categoryName;
        return this;
    }
    
    /**
     * Whether or not the subtransaction has been deleted.  Deleted subtransactions will only be included in delta requests.
     */
    @JsonProperty("deleted")
    public Boolean deleted;
    public SubTransaction withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    @JsonProperty("id")
    public String id;
    public SubTransaction withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memo")
    public String memo;
    public SubTransaction withMemo(String memo) {
        this.memo = memo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payee_id")
    public String payeeId;
    public SubTransaction withPayeeId(String payeeId) {
        this.payeeId = payeeId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payee_name")
    public String payeeName;
    public SubTransaction withPayeeName(String payeeName) {
        this.payeeName = payeeName;
        return this;
    }
    
    @JsonProperty("transaction_id")
    public String transactionId;
    public SubTransaction withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    /**
     * If a transfer, the account_id which the subtransaction transfers to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transfer_account_id")
    public String transferAccountId;
    public SubTransaction withTransferAccountId(String transferAccountId) {
        this.transferAccountId = transferAccountId;
        return this;
    }
    
    /**
     * If a transfer, the id of transaction on the other side of the transfer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transfer_transaction_id")
    public String transferTransactionId;
    public SubTransaction withTransferTransactionId(String transferTransactionId) {
        this.transferTransactionId = transferTransactionId;
        return this;
    }
    
}
