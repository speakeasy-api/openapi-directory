/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetScoreCommentsQueryParams {
    /**
     * Sort direction
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=direction")
    public GetScoreCommentsDirectionEnum direction;
    public GetScoreCommentsQueryParams withDirection(GetScoreCommentsDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * This sharing key must be specified to access to a score or collection with a `privacy` mode set to `privateLink` and the current user is not a collaborator of the document.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sharingKey")
    public String sharingKey;
    public GetScoreCommentsQueryParams withSharingKey(String sharingKey) {
        this.sharingKey = sharingKey;
        return this;
    }
    
    /**
     * Sort
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public GetScoreCommentsSortEnum sort;
    public GetScoreCommentsQueryParams withSort(GetScoreCommentsSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Filter the comments by type
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type")
    public GetScoreCommentsTypeEnum type;
    public GetScoreCommentsQueryParams withType(GetScoreCommentsTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
