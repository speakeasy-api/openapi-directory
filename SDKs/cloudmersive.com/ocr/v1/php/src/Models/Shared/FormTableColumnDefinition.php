<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FormTableColumnDefinition - Definition of a column within a table for OCR data extraction from images
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FormTableColumnDefinition
{
    /**
     * Optional - set to false to block values that contain numeric digits, set to true to allow numeric digits
     * 
     * @var ?bool $allowNumericDigits
     */
	#[\JMS\Serializer\Annotation\SerializedName('AllowNumericDigits')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowNumericDigits = null;
    
    /**
     * Optional - the matching mode for the anchor.  Possible values are Complete (requires the entire anchor to match) and Partial (allows only part of the anchor to match).  Default is Partial.
     * 
     * @var ?string $anchorMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('AnchorMode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $anchorMode = null;
    
    /**
     * The identifier of the field; use this to identify which field is being referenced
     * 
     * @var ?string $columnID
     */
	#[\JMS\Serializer\Annotation\SerializedName('ColumnID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $columnID = null;
    
    /**
     * The data type of the field; possible values are INTEGER (Integer value), STRING (Arbitrary string value, spaces are permitted), DATE (Date in a structured format), DECIMAL (Decimal number), ALPHANUMERIC (Continuous alphanumeric string with no spaces), STRINGNOWHITESPACE (A string that contains no whitespace characters), SERIALNUMBER (A serial-number style string that contains letters and numbers, and certain symbols; must contain at least one number), ALPHAONLY (Alphabet characters only, no numbers or symbols or whitespace)
     * 
     * @var ?string $dataType
     */
	#[\JMS\Serializer\Annotation\SerializedName('DataType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dataType = null;
    
    /**
     * Optional - the target number of digits in the field; useful for fixed-length fields
     * 
     * @var ?int $minimumCharacterCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumCharacterCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minimumCharacterCount = null;
    
    /**
     * Optional - the top anchor of the column heading
     * 
     * @var ?string $topAnchor
     */
	#[\JMS\Serializer\Annotation\SerializedName('TopAnchor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $topAnchor = null;
    
	public function __construct()
	{
		$this->allowNumericDigits = null;
		$this->anchorMode = null;
		$this->columnID = null;
		$this->dataType = null;
		$this->minimumCharacterCount = null;
		$this->topAnchor = null;
	}
}
