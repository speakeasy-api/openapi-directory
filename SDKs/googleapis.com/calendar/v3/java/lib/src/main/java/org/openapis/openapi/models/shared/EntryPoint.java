/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EntryPoint {
    /**
     * The access code to access the conference. The maximum length is 128 characters.
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessCode")
    public String accessCode;

    public EntryPoint withAccessCode(String accessCode) {
        this.accessCode = accessCode;
        return this;
    }
    
    /**
     * Features of the entry point, such as being toll or toll-free. One entry point can have multiple features. However, toll and toll-free cannot be both set on the same entry point.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entryPointFeatures")
    public String[] entryPointFeatures;

    public EntryPoint withEntryPointFeatures(String[] entryPointFeatures) {
        this.entryPointFeatures = entryPointFeatures;
        return this;
    }
    
    /**
     * The type of the conference entry point.
     * Possible values are:  
     * - "video" - joining a conference over HTTP. A conference can have zero or one video entry point.
     * - "phone" - joining a conference by dialing a phone number. A conference can have zero or more phone entry points.
     * - "sip" - joining a conference over SIP. A conference can have zero or one sip entry point.
     * - "more" - further conference joining instructions, for example additional phone numbers. A conference can have zero or one more entry point. A conference with only a more entry point is not a valid conference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entryPointType")
    public String entryPointType;

    public EntryPoint withEntryPointType(String entryPointType) {
        this.entryPointType = entryPointType;
        return this;
    }
    
    /**
     * The label for the URI. Visible to end users. Not localized. The maximum length is 512 characters.
     * Examples:  
     * - for video: meet.google.com/aaa-bbbb-ccc
     * - for phone: +1 123 268 2601
     * - for sip: 12345678@altostrat.com
     * - for more: should not be filled  
     * Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;

    public EntryPoint withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * The meeting code to access the conference. The maximum length is 128 characters.
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meetingCode")
    public String meetingCode;

    public EntryPoint withMeetingCode(String meetingCode) {
        this.meetingCode = meetingCode;
        return this;
    }
    
    /**
     * The passcode to access the conference. The maximum length is 128 characters.
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passcode")
    public String passcode;

    public EntryPoint withPasscode(String passcode) {
        this.passcode = passcode;
        return this;
    }
    
    /**
     * The password to access the conference. The maximum length is 128 characters.
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;

    public EntryPoint withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * The PIN to access the conference. The maximum length is 128 characters.
     * When creating new conference data, populate only the subset of {meetingCode, accessCode, passcode, password, pin} fields that match the terminology that the conference provider uses. Only the populated fields should be displayed.
     * Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pin")
    public String pin;

    public EntryPoint withPin(String pin) {
        this.pin = pin;
        return this;
    }
    
    /**
     * The CLDR/ISO 3166 region code for the country associated with this phone access. Example: "SE" for Sweden.
     * Calendar backend will populate this field only for EntryPointType.PHONE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionCode")
    public String regionCode;

    public EntryPoint withRegionCode(String regionCode) {
        this.regionCode = regionCode;
        return this;
    }
    
    /**
     * The URI of the entry point. The maximum length is 1300 characters.
     * Format:  
     * - for video, http: or https: schema is required.
     * - for phone, tel: schema is required. The URI should include the entire dial sequence (e.g., tel:+12345678900,,,123456789;1234).
     * - for sip, sip: schema is required, e.g., sip:12345678@myprovider.com.
     * - for more, http: or https: schema is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uri")
    public String uri;

    public EntryPoint withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
    public EntryPoint(){}
}
