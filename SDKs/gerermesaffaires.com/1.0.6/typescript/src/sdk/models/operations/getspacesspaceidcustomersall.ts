/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSpacesSpaceIdCustomersAllRequest extends SpeakeasyBase {
  /**
   * CustomerNumber of the employee
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=CustomerNumber",
  })
  customerNumber?: string;

  /**
   * if present returns infos of the ContractingPartner too
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=WithContractingPartner",
  })
  withContractingPartner?: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class GetSpacesSpaceIdCustomersAllResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of customer folders
   */
  @SpeakeasyMetadata({ elemType: shared.Customer })
  getSpacesSpaceIdCustomersAll200ApplicationJSONAllOfs?: shared.Customer[];
}
