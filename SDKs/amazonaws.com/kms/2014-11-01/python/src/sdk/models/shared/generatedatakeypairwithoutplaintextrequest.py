"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datakeypairspec_enum as shared_datakeypairspec_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GenerateDataKeyPairWithoutPlaintextRequest:
    
    key_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyId') }})  
    key_pair_spec: shared_datakeypairspec_enum.DataKeyPairSpecEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyPairSpec') }})  
    encryption_context: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EncryptionContext'), 'exclude': lambda f: f is None }})  
    grant_tokens: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GrantTokens'), 'exclude': lambda f: f is None }})  
    