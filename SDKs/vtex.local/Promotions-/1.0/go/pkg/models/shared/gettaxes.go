// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GetTaxesScope - Scope of the tax.
type GetTaxesScope struct {
	// Determines if the tax applies to all products in the Catalog (`true`) or not (`false`).
	AllCatalog *bool `json:"allCatalog,omitempty"`
	// Quantity of brands which activate or deactivate the tax.
	Brands *float64 `json:"brands,omitempty"`
	// If set to `true`, this tax will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this tax not to be applied.
	BrandsAreInclusive *bool `json:"brandsAreInclusive,omitempty"`
	// Quantity of categories which activate or deactivate the tax.
	Categories *float64 `json:"categories,omitempty"`
	// If set to `true`, this tax will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this tax not to be applied.
	CategoriesAreInclusive *bool `json:"categoriesAreInclusive,omitempty"`
	// Quantity of collections which activate or deactivate the tax.
	Collections *float64 `json:"collections,omitempty"`
	// If set to `true`, this tax will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this tax not to be applied.
	CollectionsAreInclusive *bool `json:"collectionsAreInclusive,omitempty"`
	// Quantity of products which activate or deactivate the tax.
	Products *float64 `json:"products,omitempty"`
	// If set to `true`, this tax will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this tax not to be applied.
	ProductsAreInclusive *bool `json:"productsAreInclusive,omitempty"`
	// Quantity of sellers which activate or deactivate the tax.
	Sellers *float64 `json:"sellers,omitempty"`
	// If set to `true`, this tax will be applied to any seller present on the `sellers` field. If set to `false`, sellers present on that field will make this tax not to be applied.
	SellersAreInclusive *bool `json:"sellersAreInclusive,omitempty"`
	// Quantity of SKUs which activate or deactivate the tax.
	Skus *float64 `json:"skus,omitempty"`
	// If set to `true`, this tax will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this tax not to be applied.
	SkusAreInclusive *bool `json:"skusAreInclusive,omitempty"`
}

// GetTaxes - Object with information about a tax.
type GetTaxes struct {
	// Array with campaign audiences that activate this tax.
	Campaigns []string `json:"Campaigns,omitempty"`
	// If set as `true`, it activates gifts Multiplier.
	ActivateGiftsMultiplier *bool `json:"activateGiftsMultiplier,omitempty"`
	// If set to `false`, this tax will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this tax not to be applied.
	AreSalesChannelIdsExclusive *bool `json:"areSalesChannelIdsExclusive,omitempty"`
	// Tax start date (UTC).
	BeginDate *string `json:"beginDate,omitempty"`
	// Tax internal description.
	Description *string `json:"description,omitempty"`
	// Tax end date (UTC).
	EndDate *string `json:"endDate,omitempty"`
	// Defines if there is a maximum price per item.
	HasMaxPricePerItem *bool `json:"hasMaxPricePerItem,omitempty"`
	// Tax ID.
	IDCalculatorConfiguration *string `json:"idCalculatorConfiguration,omitempty"`
	// List of Trade Policies that activate this tax.
	IdsSalesChannel []string `json:"idsSalesChannel,omitempty"`
	// If set as `true` the tax is activated. If set as `false` the tax is deactivated.
	IsActive *bool `json:"isActive,omitempty"`
	// If set as `true` the tax is archived. If set as `false` the tax is not archived.
	IsArchived *bool `json:"isArchived,omitempty"`
	// Defines if it is a tax.
	IsTax *bool `json:"isTax,omitempty"`
	// Date and time when the tax was last modified (UTC).
	LastModifiedUtc *string `json:"lastModifiedUtc,omitempty"`
	// Defines how many times the tax can be used.
	MaxUsage *float64 `json:"maxUsage,omitempty"`
	// Tax name.
	Name *string `json:"name,omitempty"`
	// Percentual tax applied.
	PercentualTax *float64 `json:"percentualTax,omitempty"`
	// Scope of the tax.
	Scope *GetTaxesScope `json:"scope,omitempty"`
	// Status of the tax.
	Status *string `json:"status,omitempty"`
	// Defines the type of tax.
	Type *string `json:"type,omitempty"`
	// utmCampaign code.
	UtmCampain *string `json:"utmCampain,omitempty"`
	// utmSource code.
	UtmSource *string `json:"utmSource,omitempty"`
	// utmiCampaign code.
	UtmiCampaign *string `json:"utmiCampaign,omitempty"`
}
