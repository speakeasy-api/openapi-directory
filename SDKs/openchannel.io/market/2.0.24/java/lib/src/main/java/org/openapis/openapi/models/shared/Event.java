/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * Event - OK
 */
public class Event {
    /**
     * An app
     */
    
    public App app;
    public Event withApp(App app) {
        this.app = app;
        return this;
    }
    
    /**
     * The date (in millis) of when this event occurred
     */
    
    public Long createdDate;
    public Event withCreatedDate(Long createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * A description of the event
     */
    
    public String description;
    public Event withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A Developer
     */
    
    public Developer developer;
    public Event withDeveloper(Developer developer) {
        this.developer = developer;
        return this;
    }
    
    /**
     * The id of the event
     */
    
    public String eventId;
    public Event withEventId(String eventId) {
        this.eventId = eventId;
        return this;
    }
    
    /**
     * The current event type
     */
    
    public EventEventTypeEnum eventType;
    public Event withEventType(EventEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * The id of the marketplace that owns this event
     */
    
    public String marketplaceId;
    public Event withMarketplaceId(String marketplaceId) {
        this.marketplaceId = marketplaceId;
        return this;
    }
    
    
    public Ownership ownership;
    public Event withOwnership(Ownership ownership) {
        this.ownership = ownership;
        return this;
    }
    
    /**
     * A Review
     */
    
    public Review review;
    public Event withReview(Review review) {
        this.review = review;
        return this;
    }
    
    /**
     * A transaction for an app initiated by a user
     */
    
    public Transaction transaction;
    public Event withTransaction(Transaction transaction) {
        this.transaction = transaction;
        return this;
    }
    
    /**
     * A User
     */
    
    public User user;
    public Event withUser(User user) {
        this.user = user;
        return this;
    }
    
}
