// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QuantumTaskStatusEnum string

const (
	QuantumTaskStatusEnumCreated    QuantumTaskStatusEnum = "CREATED"
	QuantumTaskStatusEnumQueued     QuantumTaskStatusEnum = "QUEUED"
	QuantumTaskStatusEnumRunning    QuantumTaskStatusEnum = "RUNNING"
	QuantumTaskStatusEnumCompleted  QuantumTaskStatusEnum = "COMPLETED"
	QuantumTaskStatusEnumFailed     QuantumTaskStatusEnum = "FAILED"
	QuantumTaskStatusEnumCancelling QuantumTaskStatusEnum = "CANCELLING"
	QuantumTaskStatusEnumCancelled  QuantumTaskStatusEnum = "CANCELLED"
)

func (e *QuantumTaskStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATED":
		fallthrough
	case "QUEUED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		*e = QuantumTaskStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QuantumTaskStatusEnum: %s", s)
	}
}
