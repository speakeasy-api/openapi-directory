// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposRemoveStatusCheckContextsPathParams struct {
	// The name of the branch. Cannot contain wildcard characters. To use wildcard characters in branch names, use [the GraphQL API](https://docs.github.com/github-ae@latest/graphql).
	Branch string `pathParam:"style=simple,explode=false,name=branch"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposRemoveStatusCheckContextsRequestBody1 struct {
	// The name of the status checks
	Contexts []string `json:"contexts"`
}

type ReposRemoveStatusCheckContextsRequestBodyType string

const (
	ReposRemoveStatusCheckContextsRequestBodyTypeReposRemoveStatusCheckContextsRequestBody1 ReposRemoveStatusCheckContextsRequestBodyType = "repos/remove-status-check-contexts_requestBody_1"
	ReposRemoveStatusCheckContextsRequestBodyTypeArrayOfstr                                 ReposRemoveStatusCheckContextsRequestBodyType = "arrayOfstr"
)

type ReposRemoveStatusCheckContextsRequestBody struct {
	ReposRemoveStatusCheckContextsRequestBody1 *ReposRemoveStatusCheckContextsRequestBody1
	ArrayOfstr                                 []string

	Type ReposRemoveStatusCheckContextsRequestBodyType
}

func CreateReposRemoveStatusCheckContextsRequestBodyReposRemoveStatusCheckContextsRequestBody1(reposRemoveStatusCheckContextsRequestBody1 ReposRemoveStatusCheckContextsRequestBody1) ReposRemoveStatusCheckContextsRequestBody {
	typ := ReposRemoveStatusCheckContextsRequestBodyTypeReposRemoveStatusCheckContextsRequestBody1

	return ReposRemoveStatusCheckContextsRequestBody{
		ReposRemoveStatusCheckContextsRequestBody1: &reposRemoveStatusCheckContextsRequestBody1,
		Type: typ,
	}
}

func CreateReposRemoveStatusCheckContextsRequestBodyArrayOfstr(arrayOfstr []string) ReposRemoveStatusCheckContextsRequestBody {
	typ := ReposRemoveStatusCheckContextsRequestBodyTypeArrayOfstr

	return ReposRemoveStatusCheckContextsRequestBody{
		ArrayOfstr: arrayOfstr,
		Type:       typ,
	}
}

func (u *ReposRemoveStatusCheckContextsRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	reposRemoveStatusCheckContextsRequestBody1 := new(ReposRemoveStatusCheckContextsRequestBody1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&reposRemoveStatusCheckContextsRequestBody1); err == nil {
		u.ReposRemoveStatusCheckContextsRequestBody1 = reposRemoveStatusCheckContextsRequestBody1
		u.Type = ReposRemoveStatusCheckContextsRequestBodyTypeReposRemoveStatusCheckContextsRequestBody1
		return nil
	}

	arrayOfstr := []string{}
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&arrayOfstr); err == nil {
		u.ArrayOfstr = arrayOfstr
		u.Type = ReposRemoveStatusCheckContextsRequestBodyTypeArrayOfstr
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u ReposRemoveStatusCheckContextsRequestBody) MarshalJSON() ([]byte, error) {
	if u.ReposRemoveStatusCheckContextsRequestBody1 != nil {
		return json.Marshal(u.ReposRemoveStatusCheckContextsRequestBody1)
	}

	if u.ArrayOfstr != nil {
		return json.Marshal(u.ArrayOfstr)
	}

	return nil, nil
}

type ReposRemoveStatusCheckContextsRequest struct {
	PathParams ReposRemoveStatusCheckContextsPathParams
	Request    *ReposRemoveStatusCheckContextsRequestBody `request:"mediaType=application/json"`
}

type ReposRemoveStatusCheckContextsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	ReposRemoveStatusCheckContexts200ApplicationJSONStrings []string
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
