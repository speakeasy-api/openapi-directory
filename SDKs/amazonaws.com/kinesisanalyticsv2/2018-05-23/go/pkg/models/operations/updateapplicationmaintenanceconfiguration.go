// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateApplicationMaintenanceConfigurationXAmzTargetEnum
type UpdateApplicationMaintenanceConfigurationXAmzTargetEnum string

const (
	UpdateApplicationMaintenanceConfigurationXAmzTargetEnumKinesisAnalytics20180523UpdateApplicationMaintenanceConfiguration UpdateApplicationMaintenanceConfigurationXAmzTargetEnum = "KinesisAnalytics_20180523.UpdateApplicationMaintenanceConfiguration"
)

func (e *UpdateApplicationMaintenanceConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KinesisAnalytics_20180523.UpdateApplicationMaintenanceConfiguration":
		*e = UpdateApplicationMaintenanceConfigurationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApplicationMaintenanceConfigurationXAmzTargetEnum: %s", s)
	}
}

type UpdateApplicationMaintenanceConfigurationHeaders struct {
	XAmzAlgorithm     *string                                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateApplicationMaintenanceConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateApplicationMaintenanceConfigurationRequest struct {
	Headers UpdateApplicationMaintenanceConfigurationHeaders
	Request shared.UpdateApplicationMaintenanceConfigurationRequest `request:"mediaType=application/json"`
}

type UpdateApplicationMaintenanceConfigurationResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
	// Success
	UpdateApplicationMaintenanceConfigurationResponse *shared.UpdateApplicationMaintenanceConfigurationResponse
}
