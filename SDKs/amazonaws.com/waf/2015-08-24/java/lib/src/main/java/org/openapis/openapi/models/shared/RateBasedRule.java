/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RateBasedRule - &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html"&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html"&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;A &lt;code&gt;RateBasedRule&lt;/code&gt; is identical to a regular &lt;a&gt;Rule&lt;/a&gt;, with one addition: a &lt;code&gt;RateBasedRule&lt;/code&gt; counts the number of requests that arrive from a specified IP address every five minutes. For example, based on recent requests that you've seen from an attacker, you might create a &lt;code&gt;RateBasedRule&lt;/code&gt; that includes the following conditions: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The requests come from 192.0.2.44.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;They contain the value &lt;code&gt;BadBot&lt;/code&gt; in the &lt;code&gt;User-Agent&lt;/code&gt; header.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;In the rule, you also define the rate limit as 1,000.&lt;/p&gt; &lt;p&gt;Requests that meet both of these conditions and exceed 1,000 requests every five minutes trigger the rule's action (block or count), which is defined in the web ACL.&lt;/p&gt;
 */
public class RateBasedRule {
    @JsonProperty("MatchPredicates")
    public Predicate[] matchPredicates;
    public RateBasedRule withMatchPredicates(Predicate[] matchPredicates) {
        this.matchPredicates = matchPredicates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricName")
    public String metricName;
    public RateBasedRule withMetricName(String metricName) {
        this.metricName = metricName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public RateBasedRule withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("RateKey")
    public RateKeyEnum rateKey;
    public RateBasedRule withRateKey(RateKeyEnum rateKey) {
        this.rateKey = rateKey;
        return this;
    }
    
    @JsonProperty("RateLimit")
    public Long rateLimit;
    public RateBasedRule withRateLimit(Long rateLimit) {
        this.rateLimit = rateLimit;
        return this;
    }
    
    @JsonProperty("RuleId")
    public String ruleId;
    public RateBasedRule withRuleId(String ruleId) {
        this.ruleId = ruleId;
        return this;
    }
    
}
