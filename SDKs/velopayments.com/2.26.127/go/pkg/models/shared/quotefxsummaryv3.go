// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type QuoteFxSummaryV3FundingStatusEnum string

const (
	QuoteFxSummaryV3FundingStatusEnumUnfunded   QuoteFxSummaryV3FundingStatusEnum = "UNFUNDED"
	QuoteFxSummaryV3FundingStatusEnumInstructed QuoteFxSummaryV3FundingStatusEnum = "INSTRUCTED"
	QuoteFxSummaryV3FundingStatusEnumFunded     QuoteFxSummaryV3FundingStatusEnum = "FUNDED"
)

func (e *QuoteFxSummaryV3FundingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNFUNDED":
		fallthrough
	case "INSTRUCTED":
		fallthrough
	case "FUNDED":
		*e = QuoteFxSummaryV3FundingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QuoteFxSummaryV3FundingStatusEnum: %s", s)
	}
}

type QuoteFxSummaryV3StatusEnum string

const (
	QuoteFxSummaryV3StatusEnumUnquoted QuoteFxSummaryV3StatusEnum = "UNQUOTED"
	QuoteFxSummaryV3StatusEnumQuoted   QuoteFxSummaryV3StatusEnum = "QUOTED"
	QuoteFxSummaryV3StatusEnumExpired  QuoteFxSummaryV3StatusEnum = "EXPIRED"
	QuoteFxSummaryV3StatusEnumExecuted QuoteFxSummaryV3StatusEnum = "EXECUTED"
	QuoteFxSummaryV3StatusEnumRejected QuoteFxSummaryV3StatusEnum = "REJECTED"
)

func (e *QuoteFxSummaryV3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNQUOTED":
		fallthrough
	case "QUOTED":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "EXECUTED":
		fallthrough
	case "REJECTED":
		*e = QuoteFxSummaryV3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QuoteFxSummaryV3StatusEnum: %s", s)
	}
}

type QuoteFxSummaryV3 struct {
	CreationTime  time.Time                         `json:"creationTime"`
	ExpiryTime    *time.Time                        `json:"expiryTime,omitempty"`
	FundingStatus QuoteFxSummaryV3FundingStatusEnum `json:"fundingStatus"`
	InvertedRate  *float32                          `json:"invertedRate,omitempty"`
	// Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
	PaymentCurrency string  `json:"paymentCurrency"`
	QuoteID         string  `json:"quoteId"`
	Rate            float32 `json:"rate"`
	// Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
	SourceCurrency     string                     `json:"sourceCurrency"`
	Status             QuoteFxSummaryV3StatusEnum `json:"status"`
	TotalPaymentAmount int64                      `json:"totalPaymentAmount"`
	TotalSourceAmount  int64                      `json:"totalSourceAmount"`
}
