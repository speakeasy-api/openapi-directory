<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EnvVar - EnvVar represents an environment variable present in a Container.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EnvVar
{
    /**
     * Name of the environment variable. Must be a C_IDENTIFIER.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * (Optional) Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
    /**
     * EnvVarSource represents a source for the value of an EnvVar.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnvVarSource $valueFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueFrom')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnvVarSource')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnvVarSource $valueFrom = null;
    
	public function __construct()
	{
		$this->name = null;
		$this->value = null;
		$this->valueFrom = null;
	}
}
