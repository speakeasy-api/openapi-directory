/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { RegionInfo } from "./regioninfo";
import { ReplicationSetStatusEnum } from "./replicationsetstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * The set of Amazon Web Services Region that your Incident Manager data will be replicated to and the KMS key used to encrypt the data.
 */
export class ReplicationSet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deletionProtected" })
  deletionProtected: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedBy" })
  lastModifiedBy: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;

  @SpeakeasyMetadata({ elemType: RegionInfo })
  @Expose({ name: "regionMap" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, RegionInfo> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], RegionInfo);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  regionMap: Record<string, RegionInfo>;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ReplicationSetStatusEnum;
}
