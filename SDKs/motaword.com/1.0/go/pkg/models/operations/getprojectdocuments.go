// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetProjectDocumentsWithEnum string

const (
	GetProjectDocumentsWithEnumPreview GetProjectDocumentsWithEnum = "preview"
	GetProjectDocumentsWithEnumEditors GetProjectDocumentsWithEnum = "editors"
)

func (e GetProjectDocumentsWithEnum) ToPointer() *GetProjectDocumentsWithEnum {
	return &e
}

func (e *GetProjectDocumentsWithEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "preview":
		fallthrough
	case "editors":
		*e = GetProjectDocumentsWithEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProjectDocumentsWithEnum: %v", v)
	}
}

type GetProjectDocumentsRequest struct {
	// Project ID
	ProjectID int64 `pathParam:"style=simple,explode=false,name=projectId"`
	// Attach further information. Possible values 'preview' to fetch temporary preview URLs. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
	With []GetProjectDocumentsWithEnum `queryParam:"style=form,explode=true,name=with[]"`
}

type GetProjectDocumentsResponse struct {
	ContentType string
	// A list of document models
	DocumentList *shared.DocumentList
	// ProjectNotFound
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
