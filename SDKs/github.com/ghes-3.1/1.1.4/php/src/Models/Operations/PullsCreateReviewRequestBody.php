<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PullsCreateReviewRequestBody
{
    /**
     * **Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request review.
     * 
     * @var ?string $body
     */
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $body = null;
    
    /**
     * Use the following table to specify the location, destination, and contents of the draft review comment.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\PullsCreateReviewRequestBodyComments> $comments
     */
	#[\JMS\Serializer\Annotation\SerializedName('comments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\PullsCreateReviewRequestBodyComments>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $comments = null;
    
    /**
     * The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the `position`. Defaults to the most recent commit in the pull request when you do not specify a value.
     * 
     * @var ?string $commitId
     */
	#[\JMS\Serializer\Annotation\SerializedName('commit_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitId = null;
    
    /**
     * The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this blank, you set the review action state to `PENDING`, which means you will need to [submit the pull request review](https://docs.github.com/enterprise-server@3.1/rest/reference/pulls#submit-a-review-for-a-pull-request) when you are ready.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PullsCreateReviewRequestBodyEventEnum $event
     */
	#[\JMS\Serializer\Annotation\SerializedName('event')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PullsCreateReviewRequestBodyEventEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PullsCreateReviewRequestBodyEventEnum $event = null;
    
	public function __construct()
	{
		$this->body = null;
		$this->comments = null;
		$this->commitId = null;
		$this->event = null;
	}
}
