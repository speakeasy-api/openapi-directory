// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetOrganizationActionBatchesStatusEnum - Filter batches by status. Valid types are pending, completed, and failed.
type GetOrganizationActionBatchesStatusEnum string

const (
	GetOrganizationActionBatchesStatusEnumCompleted GetOrganizationActionBatchesStatusEnum = "completed"
	GetOrganizationActionBatchesStatusEnumFailed    GetOrganizationActionBatchesStatusEnum = "failed"
	GetOrganizationActionBatchesStatusEnumPending   GetOrganizationActionBatchesStatusEnum = "pending"
)

func (e GetOrganizationActionBatchesStatusEnum) ToPointer() *GetOrganizationActionBatchesStatusEnum {
	return &e
}

func (e *GetOrganizationActionBatchesStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "completed":
		fallthrough
	case "failed":
		fallthrough
	case "pending":
		*e = GetOrganizationActionBatchesStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationActionBatchesStatusEnum: %v", v)
	}
}

type GetOrganizationActionBatchesRequest struct {
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
	// Filter batches by status. Valid types are pending, completed, and failed.
	Status *GetOrganizationActionBatchesStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type GetOrganizationActionBatchesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationActionBatches200ApplicationJSONObjects []map[string]interface{}
}
