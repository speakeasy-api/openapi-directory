// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListTemplatesActionEnum
type GETListTemplatesActionEnum string

const (
	GETListTemplatesActionEnumListTemplates GETListTemplatesActionEnum = "ListTemplates"
)

func (e GETListTemplatesActionEnum) ToPointer() *GETListTemplatesActionEnum {
	return &e
}

func (e *GETListTemplatesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListTemplates":
		*e = GETListTemplatesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListTemplatesActionEnum: %v", v)
	}
}

// GETListTemplatesVersionEnum
type GETListTemplatesVersionEnum string

const (
	GETListTemplatesVersionEnumTwoThousandAndTen1201 GETListTemplatesVersionEnum = "2010-12-01"
)

func (e GETListTemplatesVersionEnum) ToPointer() *GETListTemplatesVersionEnum {
	return &e
}

func (e *GETListTemplatesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETListTemplatesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListTemplatesVersionEnum: %v", v)
	}
}

type GETListTemplatesRequest struct {
	Action GETListTemplatesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The maximum number of templates to return. This value must be at least 1 and less than or equal to 10. If you do not specify a value, or if you specify a value less than 1 or greater than 10, the operation will return up to 10 results.
	MaxItems *int64 `queryParam:"style=form,explode=true,name=MaxItems"`
	// A token returned from a previous call to <code>ListTemplates</code> to indicate the position in the list of email templates.
	NextToken         *string                     `queryParam:"style=form,explode=true,name=NextToken"`
	Version           GETListTemplatesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListTemplatesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
