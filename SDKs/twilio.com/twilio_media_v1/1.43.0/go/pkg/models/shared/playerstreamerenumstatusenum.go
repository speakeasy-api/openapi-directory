// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlayerStreamerEnumStatusEnum - Status to filter by, with possible values `created`, `started`, `ended`, or `failed`.
type PlayerStreamerEnumStatusEnum string

const (
	PlayerStreamerEnumStatusEnumCreated PlayerStreamerEnumStatusEnum = "created"
	PlayerStreamerEnumStatusEnumStarted PlayerStreamerEnumStatusEnum = "started"
	PlayerStreamerEnumStatusEnumEnded   PlayerStreamerEnumStatusEnum = "ended"
	PlayerStreamerEnumStatusEnumFailed  PlayerStreamerEnumStatusEnum = "failed"
)

func (e PlayerStreamerEnumStatusEnum) ToPointer() *PlayerStreamerEnumStatusEnum {
	return &e
}

func (e *PlayerStreamerEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "started":
		fallthrough
	case "ended":
		fallthrough
	case "failed":
		*e = PlayerStreamerEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerStreamerEnumStatusEnum: %v", v)
	}
}
