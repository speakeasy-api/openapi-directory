/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SensitiveDataDetections } from "./sensitivedatadetections";
import { Expose, Type } from "class-transformer";

/**
 * Contains a detected instance of sensitive data that are based on built-in identifiers.
 */
export class SensitiveDataResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Category" })
  category?: string;

  @SpeakeasyMetadata({ elemType: SensitiveDataDetections })
  @Expose({ name: "Detections" })
  @Type(() => SensitiveDataDetections)
  detections?: SensitiveDataDetections[];

  @SpeakeasyMetadata()
  @Expose({ name: "TotalCount" })
  totalCount?: number;
}
