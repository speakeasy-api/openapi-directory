"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fieldtransform as shared_fieldtransform
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentTransform:
    r"""A transformation of a document."""
    
    document: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document'), 'exclude': lambda f: f is None }})
    r"""The name of the document to transform."""  
    field_transforms: Optional[list[shared_fieldtransform.FieldTransform]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldTransforms'), 'exclude': lambda f: f is None }})
    r"""The list of transformations to apply to the fields of the document, in order. This must not be empty."""  
    