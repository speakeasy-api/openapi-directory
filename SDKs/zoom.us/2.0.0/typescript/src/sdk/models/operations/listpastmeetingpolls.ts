/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ListPastMeetingPollsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ListPastMeetingPollsRequest extends SpeakeasyBase {
  /**
   * The meeting ID or the meeting UUID.  If a meeting ID is provided in the request instead of a UUID, the response will be for the latest meeting instance.
   *
   * @remarks
   *
   * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=meetingId",
  })
  meetingId: string;
}

export class ListPastMeetingPolls200ApplicationXMLQuestionsQuestionDetails extends SpeakeasyBase {
  /**
   * Answer submitted by the user.
   */
  @SpeakeasyMetadata()
  answer?: string;

  /**
   * Date and time at which the answer to the poll was submitted.
   */
  @SpeakeasyMetadata()
  dateTime?: Date;

  /**
   * Unique identifier of the poll.
   */
  @SpeakeasyMetadata()
  pollingId?: string;

  /**
   * Question asked during the poll.
   */
  @SpeakeasyMetadata()
  question?: string;
}

export class ListPastMeetingPolls200ApplicationXMLQuestions extends SpeakeasyBase {
  /**
   * Email address of the user who submitted answers to the poll.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Name of the user who submitted answers to the poll. If "anonymous" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".
   */
  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata({
    elemType: ListPastMeetingPolls200ApplicationXMLQuestionsQuestionDetails,
  })
  questionDetails?: ListPastMeetingPolls200ApplicationXMLQuestionsQuestionDetails[];
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Polls returned successfully.
 */
export class ListPastMeetingPolls200ApplicationXML extends SpeakeasyBase {
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  @SpeakeasyMetadata()
  id?: number;

  @SpeakeasyMetadata({
    elemType: ListPastMeetingPolls200ApplicationXMLQuestions,
  })
  questions?: ListPastMeetingPolls200ApplicationXMLQuestions[];

  /**
   * The start time of the meeting.
   */
  @SpeakeasyMetadata()
  startTime?: Date;

  /**
   * Meeting UUID.
   */
  @SpeakeasyMetadata()
  uuid?: string;
}

export class ListPastMeetingPolls200ApplicationJSONQuestionsQuestionDetails extends SpeakeasyBase {
  /**
   * Answer submitted by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answer" })
  answer?: string;

  /**
   * Date and time at which the answer to the poll was submitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  /**
   * Unique identifier of the poll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "polling_id" })
  pollingId?: string;

  /**
   * Question asked during the poll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "question" })
  question?: string;
}

export class ListPastMeetingPolls200ApplicationJSONQuestions extends SpeakeasyBase {
  /**
   * Email address of the user who submitted answers to the poll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Name of the user who submitted answers to the poll. If "anonymous" option is enabled for a poll, the participant's polling information will be kept anonymous and the value of `name` field will be "Anonymous Attendee".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({
    elemType: ListPastMeetingPolls200ApplicationJSONQuestionsQuestionDetails,
  })
  @Expose({ name: "question_details" })
  @Type(() => ListPastMeetingPolls200ApplicationJSONQuestionsQuestionDetails)
  questionDetails?: ListPastMeetingPolls200ApplicationJSONQuestionsQuestionDetails[];
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Polls returned successfully.
 */
export class ListPastMeetingPolls200ApplicationJSON extends SpeakeasyBase {
  /**
   * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata({
    elemType: ListPastMeetingPolls200ApplicationJSONQuestions,
  })
  @Expose({ name: "questions" })
  @Type(() => ListPastMeetingPolls200ApplicationJSONQuestions)
  questions?: ListPastMeetingPolls200ApplicationJSONQuestions[];

  /**
   * The start time of the meeting.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * Meeting UUID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;
}

export class ListPastMeetingPollsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * Polls returned successfully.
   */
  @SpeakeasyMetadata()
  listPastMeetingPolls200ApplicationJSONObject?: ListPastMeetingPolls200ApplicationJSON;
}
