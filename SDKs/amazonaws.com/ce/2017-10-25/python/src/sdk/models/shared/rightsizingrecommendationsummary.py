"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RightsizingRecommendationSummary:
    r"""The summary of rightsizing recommendations"""
    
    estimated_total_monthly_savings_amount: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EstimatedTotalMonthlySavingsAmount'), 'exclude': lambda f: f is None }})  
    savings_currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SavingsCurrencyCode'), 'exclude': lambda f: f is None }})  
    savings_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SavingsPercentage'), 'exclude': lambda f: f is None }})  
    total_recommendation_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalRecommendationCount'), 'exclude': lambda f: f is None }})  
    