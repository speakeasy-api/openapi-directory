/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ItemInput - A single item of the form. `kind` defines which kind of item it is.
 */
public class ItemInput {
    /**
     * The description of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ItemInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * An item containing an image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageItem")
    public ImageItemInput imageItem;

    public ItemInput withImageItem(ImageItemInput imageItem) {
        this.imageItem = imageItem;
        return this;
    }
    
    /**
     * The item ID. On creation, it can be provided but the ID must not be already used in the form. If not provided, a new ID is assigned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemId")
    public String itemId;

    public ItemInput withItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }
    
    /**
     * A page break. The title and description of this item are shown at the top of the new page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageBreakItem")
    public java.util.Map<String, Object> pageBreakItem;

    public ItemInput withPageBreakItem(java.util.Map<String, Object> pageBreakItem) {
        this.pageBreakItem = pageBreakItem;
        return this;
    }
    
    /**
     * Defines a question that comprises multiple questions grouped together.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("questionGroupItem")
    public QuestionGroupItemInput questionGroupItem;

    public ItemInput withQuestionGroupItem(QuestionGroupItemInput questionGroupItem) {
        this.questionGroupItem = questionGroupItem;
        return this;
    }
    
    /**
     * A form item containing a single question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("questionItem")
    public QuestionItemInput questionItem;

    public ItemInput withQuestionItem(QuestionItemInput questionItem) {
        this.questionItem = questionItem;
        return this;
    }
    
    /**
     * A text item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textItem")
    public java.util.Map<String, Object> textItem;

    public ItemInput withTextItem(java.util.Map<String, Object> textItem) {
        this.textItem = textItem;
        return this;
    }
    
    /**
     * The title of the item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public ItemInput withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * An item containing a video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoItem")
    public VideoItem videoItem;

    public ItemInput withVideoItem(VideoItem videoItem) {
        this.videoItem = videoItem;
        return this;
    }
    
    public ItemInput(){}
}
