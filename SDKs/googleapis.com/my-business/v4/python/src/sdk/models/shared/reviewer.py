"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Reviewer:
    r"""Represents the author of the review."""
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The name of the reviewer. Only populated with the reviewer's real name if `is_anonymous` is false."""  
    is_anonymous: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isAnonymous'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the reviewer has opted to remain anonymous."""  
    profile_photo_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profilePhotoUrl'), 'exclude': lambda f: f is None }})
    r"""The profile photo link of the reviewer. Only populated if `is_anonymous` is false."""  
    