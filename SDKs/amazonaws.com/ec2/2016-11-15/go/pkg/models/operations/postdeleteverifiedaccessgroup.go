// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteVerifiedAccessGroupActionEnum
type POSTDeleteVerifiedAccessGroupActionEnum string

const (
	POSTDeleteVerifiedAccessGroupActionEnumDeleteVerifiedAccessGroup POSTDeleteVerifiedAccessGroupActionEnum = "DeleteVerifiedAccessGroup"
)

func (e POSTDeleteVerifiedAccessGroupActionEnum) ToPointer() *POSTDeleteVerifiedAccessGroupActionEnum {
	return &e
}

func (e *POSTDeleteVerifiedAccessGroupActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteVerifiedAccessGroup":
		*e = POSTDeleteVerifiedAccessGroupActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteVerifiedAccessGroupActionEnum: %v", v)
	}
}

// POSTDeleteVerifiedAccessGroupVersionEnum
type POSTDeleteVerifiedAccessGroupVersionEnum string

const (
	POSTDeleteVerifiedAccessGroupVersionEnumTwoThousandAndSixteen1115 POSTDeleteVerifiedAccessGroupVersionEnum = "2016-11-15"
)

func (e POSTDeleteVerifiedAccessGroupVersionEnum) ToPointer() *POSTDeleteVerifiedAccessGroupVersionEnum {
	return &e
}

func (e *POSTDeleteVerifiedAccessGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDeleteVerifiedAccessGroupVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteVerifiedAccessGroupVersionEnum: %v", v)
	}
}

type POSTDeleteVerifiedAccessGroupRequest struct {
	Action            POSTDeleteVerifiedAccessGroupActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                   `request:"mediaType=text/xml"`
	Version           POSTDeleteVerifiedAccessGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteVerifiedAccessGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
