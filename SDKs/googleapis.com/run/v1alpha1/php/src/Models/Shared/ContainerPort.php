<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ContainerPort - ContainerPort represents a network port in a single container.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ContainerPort
{
    /**
     * (Optional) Port number the container listens on. This must be a valid port number, 0 < x < 65536.
     * 
     * @var ?int $containerPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('containerPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $containerPort = null;
    
    /**
     * (Optional) If specified, used to specify which protocol to use. Allowed values are "http1" and "h2c".
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * (Optional) Protocol for port. Must be "TCP". Defaults to "TCP".
     * 
     * @var ?string $protocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $protocol = null;
    
	public function __construct()
	{
		$this->containerPort = null;
		$this->name = null;
		$this->protocol = null;
	}
}
