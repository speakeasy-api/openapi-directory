<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
/**
 * SchedulePlayParameters - POST parameters
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SchedulePlayParameters
{
    /**
     * Unique identifier of the call to play media into
     * 
     * @var string $callUUID
     */
	#[SpeakeasyMetadata('form:name=CallUUID')]
    public string $callUUID;
    
    /**
     * Call leg(s) for which the media will be played; `aleg` refers to the initial call leg, `bleg` refers to the bridged call leg, if applicable.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SchedulePlayParametersLegsEnum $legs
     */
	#[SpeakeasyMetadata('form:name=Legs')]
    public ?SchedulePlayParametersLegsEnum $legs = null;
    
    /**
     * Maximum amount of time (in seconds) to playback the media
     * 
     * @var ?int $length
     */
	#[SpeakeasyMetadata('form:name=Length')]
    public ?int $length = null;
    
    /**
     * Loops the media file(s) indefinitely
     * 
     * @var ?bool $loop
     */
	#[SpeakeasyMetadata('form:name=Loop')]
    public ?bool $loop = null;
    
    /**
     * Whether the media should be mixed with the call's audio stream
     * 
     * @var ?bool $mix
     */
	#[SpeakeasyMetadata('form:name=Mix')]
    public ?bool $mix = null;
    
    /**
     * Comma separated list of file paths/URIs to be played
     * 
     * @var string $sounds
     */
	#[SpeakeasyMetadata('form:name=Sounds')]
    public string $sounds;
    
    /**
     * Time (in seconds) after which the media will be playedback
     * 
     * @var int $time
     */
	#[SpeakeasyMetadata('form:name=Time')]
    public int $time;
    
	public function __construct()
	{
		$this->callUUID = "";
		$this->legs = null;
		$this->length = null;
		$this->loop = null;
		$this->mix = null;
		$this->sounds = "";
		$this->time = 0;
	}
}
