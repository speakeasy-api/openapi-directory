/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CharLengthSemanticsEnum } from "./charlengthsemanticsenum";
import { Expose } from "class-transformer";

/**
 * Provides information that defines an Oracle endpoint.
 */
export class OracleSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccessAlternateDirectly" })
  accessAlternateDirectly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AddSupplementalLogging" })
  addSupplementalLogging?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalArchivedLogDestId" })
  additionalArchivedLogDestId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AllowSelectNestedTables" })
  allowSelectNestedTables?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ArchivedLogDestId" })
  archivedLogDestId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ArchivedLogsOnly" })
  archivedLogsOnly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AsmPassword" })
  asmPassword?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AsmServer" })
  asmServer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AsmUser" })
  asmUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CharLengthSemantics" })
  charLengthSemantics?: CharLengthSemanticsEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ConvertTimestampWithZoneToUTC" })
  convertTimestampWithZoneToUTC?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseName" })
  databaseName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DirectPathNoLog" })
  directPathNoLog?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "DirectPathParallelLoad" })
  directPathParallelLoad?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableHomogenousTablespace" })
  enableHomogenousTablespace?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExtraArchivedLogDestIds" })
  extraArchivedLogDestIds?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "FailTasksOnLobTruncation" })
  failTasksOnLobTruncation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberDatatypeScale" })
  numberDatatypeScale?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "OraclePathPrefix" })
  oraclePathPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParallelAsmReadThreads" })
  parallelAsmReadThreads?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Password" })
  password?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Port" })
  port?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReadAheadBlocks" })
  readAheadBlocks?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReadTableSpaceName" })
  readTableSpaceName?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplacePathPrefix" })
  replacePathPrefix?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "RetryInterval" })
  retryInterval?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretsManagerAccessRoleArn" })
  secretsManagerAccessRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretsManagerOracleAsmAccessRoleArn" })
  secretsManagerOracleAsmAccessRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretsManagerOracleAsmSecretId" })
  secretsManagerOracleAsmSecretId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecretsManagerSecretId" })
  secretsManagerSecretId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityDbEncryption" })
  securityDbEncryption?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityDbEncryptionName" })
  securityDbEncryptionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerName" })
  serverName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SpatialDataOptionToGeoJsonFunctionName" })
  spatialDataOptionToGeoJsonFunctionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StandbyDelayTime" })
  standbyDelayTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TrimSpaceInChar" })
  trimSpaceInChar?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "UseAlternateFolderForOnline" })
  useAlternateFolderForOnline?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "UseBFile" })
  useBFile?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "UseDirectPathFullLoad" })
  useDirectPathFullLoad?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "UseLogminerReader" })
  useLogminerReader?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "UsePathPrefix" })
  usePathPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Username" })
  username?: string;
}
