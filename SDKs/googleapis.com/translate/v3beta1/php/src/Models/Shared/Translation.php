<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Translation - A single translation response.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Translation
{
    /**
     * The BCP-47 language code of source text in the initial request, detected automatically, if no source language was passed within the initial request. If the source language was passed, auto-detection of the language does not occur and this field is empty.
     * 
     * @var ?string $detectedLanguageCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('detectedLanguageCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $detectedLanguageCode = null;
    
    /**
     * Configures which glossary should be used for a specific target language, and defines options for applying that glossary.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TranslateTextGlossaryConfig $glossaryConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('glossaryConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TranslateTextGlossaryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TranslateTextGlossaryConfig $glossaryConfig = null;
    
    /**
     * Only present when `model` is present in the request. `model` here is normalized to have project number. For example: If the `model` requested in TranslationTextRequest is `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.
     * 
     * @var ?string $model
     */
	#[\JMS\Serializer\Annotation\SerializedName('model')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $model = null;
    
    /**
     * Text translated into the target language. If an error occurs during translation, this field might be excluded from the response.
     * 
     * @var ?string $translatedText
     */
	#[\JMS\Serializer\Annotation\SerializedName('translatedText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $translatedText = null;
    
	public function __construct()
	{
		$this->detectedLanguageCode = null;
		$this->glossaryConfig = null;
		$this->model = null;
		$this->translatedText = null;
	}
}
