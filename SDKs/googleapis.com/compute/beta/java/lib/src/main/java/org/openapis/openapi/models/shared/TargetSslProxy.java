/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TargetSslProxy - Represents a Target SSL Proxy resource. A target SSL proxy is a component of a SSL Proxy load balancer. Global forwarding rules reference a target SSL proxy, and the target proxy then references an external backend service. For more information, read Using Target Proxies.
 */
public class TargetSslProxy {
    /**
     * URL of a certificate map that identifies a certificate map associated with the given target proxy. This field can only be set for global target proxies. If set, sslCertificates will be ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificateMap")
    public String certificateMap;
    public TargetSslProxy withCertificateMap(String certificateMap) {
        this.certificateMap = certificateMap;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public TargetSslProxy withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public TargetSslProxy withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public TargetSslProxy withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#targetSslProxy for target SSL proxies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public TargetSslProxy withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public TargetSslProxy withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("proxyHeader")
    public TargetSslProxyProxyHeaderEnum proxyHeader;
    public TargetSslProxy withProxyHeader(TargetSslProxyProxyHeaderEnum proxyHeader) {
        this.proxyHeader = proxyHeader;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public TargetSslProxy withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * URL to the BackendService resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;
    public TargetSslProxy withService(String service) {
        this.service = service;
        return this;
    }
    
    /**
     * URLs to SslCertificate resources that are used to authenticate connections to Backends. At least one SSL certificate must be specified. Currently, you may specify up to 15 SSL certificates. sslCertificates do not apply when the load balancing scheme is set to INTERNAL_SELF_MANAGED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslCertificates")
    public String[] sslCertificates;
    public TargetSslProxy withSslCertificates(String[] sslCertificates) {
        this.sslCertificates = sslCertificates;
        return this;
    }
    
    /**
     * URL of SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the TargetSslProxy resource will not have any SSL policy configured.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslPolicy")
    public String sslPolicy;
    public TargetSslProxy withSslPolicy(String sslPolicy) {
        this.sslPolicy = sslPolicy;
        return this;
    }
    
}
