// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PatchNotificationsIDPathParams struct {
	// Notification ID.
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

type PatchNotificationsIDRequestBody struct {
	// If `true`, copying or moving resources into this path will trigger a notification, in addition to just uploads.
	NotifyOnCopy *bool `multipartForm:"name=notify_on_copy"`
	// If `true` actions initiated by the user will still result in a notification
	NotifyUserActions *bool `multipartForm:"name=notify_user_actions"`
	// If `true`, enable notifications for each subfolder in this path
	Recursive *bool `multipartForm:"name=recursive"`
	// The time interval that notifications are aggregated by.  Can be `five_minutes`, `fifteen_minutes`, `hourly`, or `daily`.
	SendInterval *string `multipartForm:"name=send_interval"`
}

type PatchNotificationsIDRequest struct {
	PathParams PatchNotificationsIDPathParams
	Request    *PatchNotificationsIDRequestBody `request:"mediaType=multipart/form-data"`
}

type PatchNotificationsIDResponse struct {
	ContentType string
	// The Notifications object.
	NotificationEntity *shared.NotificationEntity
	StatusCode         int
	RawResponse        *http.Response
}
