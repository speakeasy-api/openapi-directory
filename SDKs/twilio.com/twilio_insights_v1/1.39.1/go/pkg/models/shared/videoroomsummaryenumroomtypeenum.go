// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VideoRoomSummaryEnumRoomTypeEnum string

const (
	VideoRoomSummaryEnumRoomTypeEnumGo         VideoRoomSummaryEnumRoomTypeEnum = "go"
	VideoRoomSummaryEnumRoomTypeEnumPeerToPeer VideoRoomSummaryEnumRoomTypeEnum = "peer_to_peer"
	VideoRoomSummaryEnumRoomTypeEnumGroup      VideoRoomSummaryEnumRoomTypeEnum = "group"
	VideoRoomSummaryEnumRoomTypeEnumGroupSmall VideoRoomSummaryEnumRoomTypeEnum = "group_small"
)

func (e *VideoRoomSummaryEnumRoomTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "go":
		fallthrough
	case "peer_to_peer":
		fallthrough
	case "group":
		fallthrough
	case "group_small":
		*e = VideoRoomSummaryEnumRoomTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoRoomSummaryEnumRoomTypeEnum: %s", s)
	}
}
