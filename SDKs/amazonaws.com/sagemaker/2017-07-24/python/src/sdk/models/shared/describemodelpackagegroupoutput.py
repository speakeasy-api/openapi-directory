"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import modelpackagegroupstatus_enum as shared_modelpackagegroupstatus_enum
from ..shared import usercontext as shared_usercontext
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeModelPackageGroupOutput:
    r"""Success"""
    
    created_by: shared_usercontext.UserContext = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedBy') }})
    r"""Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card."""  
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    model_package_group_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelPackageGroupArn') }})  
    model_package_group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelPackageGroupName') }})  
    model_package_group_status: shared_modelpackagegroupstatus_enum.ModelPackageGroupStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelPackageGroupStatus') }})  
    model_package_group_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelPackageGroupDescription'), 'exclude': lambda f: f is None }})  
    