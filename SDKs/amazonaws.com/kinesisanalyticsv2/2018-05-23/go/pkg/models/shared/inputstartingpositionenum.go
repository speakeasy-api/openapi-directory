// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InputStartingPositionEnum string

const (
	InputStartingPositionEnumNow              InputStartingPositionEnum = "NOW"
	InputStartingPositionEnumTrimHorizon      InputStartingPositionEnum = "TRIM_HORIZON"
	InputStartingPositionEnumLastStoppedPoint InputStartingPositionEnum = "LAST_STOPPED_POINT"
)

func (e InputStartingPositionEnum) ToPointer() *InputStartingPositionEnum {
	return &e
}

func (e *InputStartingPositionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOW":
		fallthrough
	case "TRIM_HORIZON":
		fallthrough
	case "LAST_STOPPED_POINT":
		*e = InputStartingPositionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InputStartingPositionEnum: %v", v)
	}
}
