/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Whether the action relates to a schema that is incompatible or modified.
 */
export enum GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum {
  SchemaChangeUnspecified = "SCHEMA_CHANGE_UNSPECIFIED",
  Incompatible = "INCOMPATIBLE",
  Modified = "MODIFIED",
}

/**
 * Action details for incompatible schemas detected by discovery.
 */
export class GoogleCloudDataplexV1ActionIncompatibleDataSchema extends SpeakeasyBase {
  /**
   * The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "existingSchema" })
  existingSchema?: string;

  /**
   * The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newSchema" })
  newSchema?: string;

  /**
   * The list of data locations sampled and used for format/schema inference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sampledDataLocations" })
  sampledDataLocations?: string[];

  /**
   * Whether the action relates to a schema that is incompatible or modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemaChange" })
  schemaChange?: GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum;

  /**
   * The name of the table containing invalid data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "table" })
  table?: string;
}
