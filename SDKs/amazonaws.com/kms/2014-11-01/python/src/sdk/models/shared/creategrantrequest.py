"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grantconstraints as shared_grantconstraints
from ..shared import grantoperation_enum as shared_grantoperation_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateGrantRequest:
    
    grantee_principal: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GranteePrincipal') }})  
    key_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyId') }})  
    operations: list[shared_grantoperation_enum.GrantOperationEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Operations') }})  
    constraints: Optional[shared_grantconstraints.GrantConstraints] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Constraints'), 'exclude': lambda f: f is None }})  
    grant_tokens: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GrantTokens'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    retiring_principal: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RetiringPrincipal'), 'exclude': lambda f: f is None }})  
    