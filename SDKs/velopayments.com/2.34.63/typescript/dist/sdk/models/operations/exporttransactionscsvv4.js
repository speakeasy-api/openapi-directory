"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExportTransactionsCsvv4Response = exports.ExportTransactionsCsvv4Request = exports.ExportTransactionsCsvv4IncludeEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * <p>Mode to determine whether to include other Payor's data in the results.</p>
 *
 * @remarks
 * <p>May only be used if payorId is specified.</p>
 * <p>Can be omitted or set to 'payorOnly' or 'payorAndDescendants'.</p>
 * <p>payorOnly: Only include results for the specified Payor. This is the default if 'include' is omitted.</p>
 * <p>payorAndDescendants: Aggregate results for all descendant Payors of the specified Payor. Should only be used if the Payor with the specified payorId has at least one child Payor.</p>
 * <p>Note when a Payor requests the report and include=payorAndDescendants is used, the following additional columns are included in the CSV: Payor Name, Payor Id</p>
 *
 */
var ExportTransactionsCsvv4IncludeEnum;
(function (ExportTransactionsCsvv4IncludeEnum) {
    ExportTransactionsCsvv4IncludeEnum["PayorOnly"] = "payorOnly";
    ExportTransactionsCsvv4IncludeEnum["PayorAndDescendants"] = "payorAndDescendants";
})(ExportTransactionsCsvv4IncludeEnum = exports.ExportTransactionsCsvv4IncludeEnum || (exports.ExportTransactionsCsvv4IncludeEnum = {}));
var ExportTransactionsCsvv4Request = /** @class */ (function (_super) {
    __extends(ExportTransactionsCsvv4Request, _super);
    function ExportTransactionsCsvv4Request() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=endDate;dateTimeFormat=YYYY-MM-DD",
        }),
        __metadata("design:type", Date)
    ], ExportTransactionsCsvv4Request.prototype, "endDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=include",
        }),
        __metadata("design:type", String)
    ], ExportTransactionsCsvv4Request.prototype, "include", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=payorId",
        }),
        __metadata("design:type", String)
    ], ExportTransactionsCsvv4Request.prototype, "payorId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=startDate;dateTimeFormat=YYYY-MM-DD",
        }),
        __metadata("design:type", Date)
    ], ExportTransactionsCsvv4Request.prototype, "startDate", void 0);
    return ExportTransactionsCsvv4Request;
}(utils_1.SpeakeasyBase));
exports.ExportTransactionsCsvv4Request = ExportTransactionsCsvv4Request;
var ExportTransactionsCsvv4Response = /** @class */ (function (_super) {
    __extends(ExportTransactionsCsvv4Response, _super);
    function ExportTransactionsCsvv4Response() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], ExportTransactionsCsvv4Response.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ExportTransactionsCsvv4Response.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ExportTransactionsCsvv4Response.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ExportTransactionsCsvv4Response.prototype, "rawResponse", void 0);
    return ExportTransactionsCsvv4Response;
}(utils_1.SpeakeasyBase));
exports.ExportTransactionsCsvv4Response = ExportTransactionsCsvv4Response;
