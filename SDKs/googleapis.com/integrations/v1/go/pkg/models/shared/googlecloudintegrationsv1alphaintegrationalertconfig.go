// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum - The type of metric.
type GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum string

const (
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumMetricTypeUnspecified   GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "METRIC_TYPE_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumEventErrorRate          GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "EVENT_ERROR_RATE"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumEventWarningRate        GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "EVENT_WARNING_RATE"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumTaskErrorRate           GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "TASK_ERROR_RATE"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumTaskWarningRate         GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "TASK_WARNING_RATE"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumTaskRate                GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "TASK_RATE"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumEventRate               GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "EVENT_RATE"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumEventAverageDuration    GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "EVENT_AVERAGE_DURATION"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumEventPercentileDuration GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "EVENT_PERCENTILE_DURATION"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumTaskAverageDuration     GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "TASK_AVERAGE_DURATION"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnumTaskPercentileDuration  GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum = "TASK_PERCENTILE_DURATION"
)

func (e GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum) ToPointer() *GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum {
	return &e
}

func (e *GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "METRIC_TYPE_UNSPECIFIED":
		fallthrough
	case "EVENT_ERROR_RATE":
		fallthrough
	case "EVENT_WARNING_RATE":
		fallthrough
	case "TASK_ERROR_RATE":
		fallthrough
	case "TASK_WARNING_RATE":
		fallthrough
	case "TASK_RATE":
		fallthrough
	case "EVENT_RATE":
		fallthrough
	case "EVENT_AVERAGE_DURATION":
		fallthrough
	case "EVENT_PERCENTILE_DURATION":
		fallthrough
	case "TASK_AVERAGE_DURATION":
		fallthrough
	case "TASK_PERCENTILE_DURATION":
		*e = GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum: %v", v)
	}
}

// GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum - The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
type GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum string

const (
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnumThresholdTypeUnspecified GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum = "THRESHOLD_TYPE_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnumExpectedMin              GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum = "EXPECTED_MIN"
	GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnumExpectedMax              GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum = "EXPECTED_MAX"
)

func (e GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum) ToPointer() *GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum {
	return &e
}

func (e *GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "THRESHOLD_TYPE_UNSPECIFIED":
		fallthrough
	case "EXPECTED_MIN":
		fallthrough
	case "EXPECTED_MAX":
		*e = GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum: %v", v)
	}
}

// GoogleCloudIntegrationsV1alphaIntegrationAlertConfig - Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.
type GoogleCloudIntegrationsV1alphaIntegrationAlertConfig struct {
	// The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week). For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
	AggregationPeriod *string `json:"aggregationPeriod,omitempty"`
	// For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
	AlertThreshold *int `json:"alertThreshold,omitempty"`
	// Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this integration alert.
	DisableAlert *bool `json:"disableAlert,omitempty"`
	// Name of the alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the integration.
	DisplayName *string `json:"displayName,omitempty"`
	// Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
	DurationThreshold *string `json:"durationThreshold,omitempty"`
	// The type of metric.
	MetricType *GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum `json:"metricType,omitempty"`
	// For either events or tasks, depending on the type of alert, count only final attempts, not retries.
	OnlyFinalAttempt *bool `json:"onlyFinalAttempt,omitempty"`
	// The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
	ThresholdType *GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum `json:"thresholdType,omitempty"`
	// The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
	ThresholdValue *GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue `json:"thresholdValue,omitempty"`
}
