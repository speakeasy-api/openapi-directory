// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type InventoryperdockandwarehousePathParams struct {
	DockID      string `pathParam:"style=simple,explode=false,name=dockId"`
	SkuID       string `pathParam:"style=simple,explode=false,name=skuId"`
	WarehouseID string `pathParam:"style=simple,explode=false,name=warehouseId"`
}

type InventoryperdockandwarehouseHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type InventoryperdockandwarehouseRequest struct {
	PathParams InventoryperdockandwarehousePathParams
	Headers    InventoryperdockandwarehouseHeaders
}

type Inventoryperdockandwarehouse200ApplicationJSON struct {
	// Amount of items available for sale. Difference between total quantity and reserved quantity.
	AvailableQuantity *int64 `json:"availableQuantity,omitempty"`
	// Date of supply lot in UTC.
	DateOfSupplyUtc *string `json:"dateOfSupplyUtc,omitempty"`
	// List of delivery channels available.
	DeliveryChannel []string `json:"deliveryChannel,omitempty"`
	// Dock ID.
	DockID *string `json:"dockId,omitempty"`
	// Indicates whether the SKU's availability is unlimited ("infinite inventory").
	IsUnlimited *bool `json:"isUnlimited,omitempty"`
	// Indicates whether SKU can continue to be sold after the available quantity gets to 0.
	KeepSellingAfterExpiration *bool `json:"keepSellingAfterExpiration,omitempty"`
	// Reserved quantity of the SKU.
	ReservedQuantity *int64 `json:"reservedQuantity,omitempty"`
	// List of sales channels associated.
	SalesChannel []string `json:"salesChannel,omitempty"`
	// SKU ID.
	SkuID *string `json:"skuId,omitempty"`
	// Time to refill (deprecated).
	TimeToRefill *string `json:"timeToRefill,omitempty"`
	// Total quantity of SKU.
	TotalQuantity *int64 `json:"totalQuantity,omitempty"`
	// Transfer.
	Transfer *string `json:"transfer,omitempty"`
	// Warehouse ID.
	WarehouseID *string `json:"warehouseId,omitempty"`
}

type InventoryperdockandwarehouseResponse struct {
	ContentType string
	// OK
	Inventoryperdockandwarehouse200ApplicationJSONObjects []Inventoryperdockandwarehouse200ApplicationJSON
	StatusCode                                            int
	RawResponse                                           *http.Response
}
