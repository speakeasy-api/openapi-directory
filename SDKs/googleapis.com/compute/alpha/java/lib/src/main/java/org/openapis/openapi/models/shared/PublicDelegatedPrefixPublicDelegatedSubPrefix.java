/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PublicDelegatedPrefixPublicDelegatedSubPrefix - Represents a sub PublicDelegatedPrefix.
 */
public class PublicDelegatedPrefixPublicDelegatedSubPrefix {
    /**
     * Name of the project scoping this PublicDelegatedSubPrefix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delegateeProject")
    public String delegateeProject;
    public PublicDelegatedPrefixPublicDelegatedSubPrefix withDelegateeProject(String delegateeProject) {
        this.delegateeProject = delegateeProject;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PublicDelegatedPrefixPublicDelegatedSubPrefix withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The IPv4 address range, in CIDR format, represented by this sub public delegated prefix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipCidrRange")
    public String ipCidrRange;
    public PublicDelegatedPrefixPublicDelegatedSubPrefix withIpCidrRange(String ipCidrRange) {
        this.ipCidrRange = ipCidrRange;
        return this;
    }
    
    /**
     * Whether the sub prefix is delegated to create Address resources in the delegatee project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAddress")
    public Boolean isAddress;
    public PublicDelegatedPrefixPublicDelegatedSubPrefix withIsAddress(Boolean isAddress) {
        this.isAddress = isAddress;
        return this;
    }
    
    /**
     * The name of the sub public delegated prefix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PublicDelegatedPrefixPublicDelegatedSubPrefix withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Output Only] The region of the sub public delegated prefix if it is regional. If absent, the sub prefix is global.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;
    public PublicDelegatedPrefixPublicDelegatedSubPrefix withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] The status of the sub public delegated prefix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PublicDelegatedPrefixPublicDelegatedSubPrefixStatusEnum status;
    public PublicDelegatedPrefixPublicDelegatedSubPrefix withStatus(PublicDelegatedPrefixPublicDelegatedSubPrefixStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
