"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class ScheduleHangupResponseMessageEnum(str, Enum):
    r"""Response message"""
    SCHEDULE_HANGUP_EXECUTED = 'ScheduleHangup Executed'
    CALL_UUID_PARAMETER_MUST_BE_PRESENT = 'CallUUID Parameter must be present'
    TIME_PARAMETER_MUST_BE_PRESENT = 'Time Parameter must be present'
    TIME_PARAMETER_MUST_BE_GREATER_THAN_0_ = 'Time Parameter must be > 0!'
    SCHEDULE_HANGUP_FAILED_CALL_NOT_FOUND = 'ScheduleHangup Failed -- Call not found'
    SCHEDULE_HANGUP_FAILED = 'ScheduleHangup Failed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScheduleHangupResponse:
    r"""Response"""
    
    message: ScheduleHangupResponseMessageEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message') }})
    r"""Response message"""  
    sched_hangup_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SchedHangupId') }})
    r"""Unique identifier of the scheduled hangup request (UUIDv4)"""  
    success: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Success') }})
    r"""Whether the request was successful or not"""  
    