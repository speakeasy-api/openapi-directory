/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NetworkInterfaceSubInterface {
    /**
     * An IPv4 internal IP address to assign to the instance for this subinterface. If specified, ip_allocation_mode should be set to ALLOCATE_IP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipAddress")
    public String ipAddress;

    public NetworkInterfaceSubInterface withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipAllocationMode")
    public NetworkInterfaceSubInterfaceIpAllocationModeEnum ipAllocationMode;

    public NetworkInterfaceSubInterface withIpAllocationMode(NetworkInterfaceSubInterfaceIpAllocationModeEnum ipAllocationMode) {
        this.ipAllocationMode = ipAllocationMode;
        return this;
    }
    
    /**
     * If specified, this subnetwork must belong to the same network as that of the network interface. If not specified the subnet of network interface will be used. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /subnetworks/subnetwork - regions/region/subnetworks/subnetwork 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetwork")
    public String subnetwork;

    public NetworkInterfaceSubInterface withSubnetwork(String subnetwork) {
        this.subnetwork = subnetwork;
        return this;
    }
    
    /**
     * VLAN tag. Should match the VLAN(s) supported by the subnetwork to which this subinterface is connecting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public Integer vlan;

    public NetworkInterfaceSubInterface withVlan(Integer vlan) {
        this.vlan = vlan;
        return this;
    }
    
    public NetworkInterfaceSubInterface(){}
}
