/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDatacatalogV1beta1TagFieldEnumValue } from "./googleclouddatacatalogv1beta1tagfieldenumvalue";
import { Expose, Type } from "class-transformer";

/**
 * Contains the value and supporting information for a field within a Tag.
 */
export class GoogleCloudDatacatalogV1beta1TagField extends SpeakeasyBase {
  /**
   * Holds the value for a tag field with boolean type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boolValue" })
  boolValue?: boolean;

  /**
   * Output only. The display name of this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Holds the value for a tag field with double type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doubleValue" })
  doubleValue?: number;

  /**
   * Holds an enum value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enumValue" })
  @Type(() => GoogleCloudDatacatalogV1beta1TagFieldEnumValue)
  enumValue?: GoogleCloudDatacatalogV1beta1TagFieldEnumValue;

  /**
   * Output only. The order of this field with respect to other fields in this tag. It can be set in Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: number;

  /**
   * Holds the value for a tag field with string type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;

  /**
   * Holds the value for a tag field with timestamp type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampValue" })
  timestampValue?: string;
}

/**
 * Contains the value and supporting information for a field within a Tag.
 */
export class GoogleCloudDatacatalogV1beta1TagFieldInput extends SpeakeasyBase {
  /**
   * Holds the value for a tag field with boolean type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boolValue" })
  boolValue?: boolean;

  /**
   * Holds the value for a tag field with double type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doubleValue" })
  doubleValue?: number;

  /**
   * Holds an enum value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enumValue" })
  @Type(() => GoogleCloudDatacatalogV1beta1TagFieldEnumValue)
  enumValue?: GoogleCloudDatacatalogV1beta1TagFieldEnumValue;

  /**
   * Holds the value for a tag field with string type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;

  /**
   * Holds the value for a tag field with timestamp type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampValue" })
  timestampValue?: string;
}
