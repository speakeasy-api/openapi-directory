/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MissingCompleteSensorData } from "./missingcompletesensordata";
import { SensorsWithShortDateRange } from "./sensorswithshortdaterange";
import { Expose, Type } from "class-transformer";

/**
 *  Entity that comprises aggregated information on sensors having insufficient data.
 */
export class InsufficientSensorData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "MissingCompleteSensorData" })
  @Type(() => MissingCompleteSensorData)
  missingCompleteSensorData: MissingCompleteSensorData;

  @SpeakeasyMetadata()
  @Expose({ name: "SensorsWithShortDateRange" })
  @Type(() => SensorsWithShortDateRange)
  sensorsWithShortDateRange: SensorsWithShortDateRange;
}
