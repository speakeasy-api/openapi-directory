/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CertificateTemplate - A CertificateTemplate refers to a managed template for certificate issuance.
 */
public class CertificateTemplate {
    /**
     * Output only. The time at which this CertificateTemplate was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public CertificateTemplate withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Optional. A human-readable description of scenarios this template is intended for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CertificateTemplate withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Describes constraints on a Certificate's Subject and SubjectAltNames.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identityConstraints")
    public CertificateIdentityConstraints identityConstraints;

    public CertificateTemplate withIdentityConstraints(CertificateIdentityConstraints identityConstraints) {
        this.identityConstraints = identityConstraints;
        return this;
    }
    
    /**
     * Optional. Labels with user-defined metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public CertificateTemplate withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The resource name for this CertificateTemplate in the format `projects/* /locations/* /certificateTemplates/*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CertificateTemplate withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Describes a set of X.509 extensions that may be part of some certificate issuance controls.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passthroughExtensions")
    public CertificateExtensionConstraints passthroughExtensions;

    public CertificateTemplate withPassthroughExtensions(CertificateExtensionConstraints passthroughExtensions) {
        this.passthroughExtensions = passthroughExtensions;
        return this;
    }
    
    /**
     * An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("predefinedValues")
    public X509Parameters predefinedValues;

    public CertificateTemplate withPredefinedValues(X509Parameters predefinedValues) {
        this.predefinedValues = predefinedValues;
        return this;
    }
    
    /**
     * Output only. The time at which this CertificateTemplate was updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public CertificateTemplate withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public CertificateTemplate(){}
}
