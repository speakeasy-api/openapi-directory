"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class File:
    r"""File"""
    
    dollar_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('$id') }})
    r"""File ID."""  
    dollar_permissions: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('$permissions') }})
    r"""File permissions."""  
    date_created: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateCreated') }})
    r"""File creation date in Unix timestamp."""  
    mime_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mimeType') }})
    r"""File mime type."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""File name."""  
    signature: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signature') }})
    r"""File MD5 signature."""  
    size_original: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sizeOriginal') }})
    r"""File original size in bytes."""  
    