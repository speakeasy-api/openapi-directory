// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateConfigRequestBodyConfigData - <p>Object containing the parameters of a <code>Config</code>.</p> <p>See the subtype definitions for what each type of <code>Config</code> contains.</p>
type UpdateConfigRequestBodyConfigData struct {
	AntennaDownlinkConfig            *shared.AntennaDownlinkConfig            `json:"antennaDownlinkConfig,omitempty"`
	AntennaDownlinkDemodDecodeConfig *shared.AntennaDownlinkDemodDecodeConfig `json:"antennaDownlinkDemodDecodeConfig,omitempty"`
	AntennaUplinkConfig              *shared.AntennaUplinkConfig              `json:"antennaUplinkConfig,omitempty"`
	DataflowEndpointConfig           *shared.DataflowEndpointConfig           `json:"dataflowEndpointConfig,omitempty"`
	S3RecordingConfig                *shared.S3RecordingConfig                `json:"s3RecordingConfig,omitempty"`
	TrackingConfig                   *shared.TrackingConfig                   `json:"trackingConfig,omitempty"`
	UplinkEchoConfig                 *shared.UplinkEchoConfig                 `json:"uplinkEchoConfig,omitempty"`
}

type UpdateConfigRequestBody struct {
	// <p>Object containing the parameters of a <code>Config</code>.</p> <p>See the subtype definitions for what each type of <code>Config</code> contains.</p>
	ConfigData UpdateConfigRequestBodyConfigData `json:"configData"`
	// Name of a <code>Config</code>.
	Name string `json:"name"`
}

// UpdateConfigConfigTypeEnum - Type of a <code>Config</code>.
type UpdateConfigConfigTypeEnum string

const (
	UpdateConfigConfigTypeEnumAntennaDownlink            UpdateConfigConfigTypeEnum = "antenna-downlink"
	UpdateConfigConfigTypeEnumAntennaDownlinkDemodDecode UpdateConfigConfigTypeEnum = "antenna-downlink-demod-decode"
	UpdateConfigConfigTypeEnumAntennaUplink              UpdateConfigConfigTypeEnum = "antenna-uplink"
	UpdateConfigConfigTypeEnumDataflowEndpoint           UpdateConfigConfigTypeEnum = "dataflow-endpoint"
	UpdateConfigConfigTypeEnumTracking                   UpdateConfigConfigTypeEnum = "tracking"
	UpdateConfigConfigTypeEnumUplinkEcho                 UpdateConfigConfigTypeEnum = "uplink-echo"
	UpdateConfigConfigTypeEnumS3Recording                UpdateConfigConfigTypeEnum = "s3-recording"
)

func (e *UpdateConfigConfigTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "antenna-downlink":
		fallthrough
	case "antenna-downlink-demod-decode":
		fallthrough
	case "antenna-uplink":
		fallthrough
	case "dataflow-endpoint":
		fallthrough
	case "tracking":
		fallthrough
	case "uplink-echo":
		fallthrough
	case "s3-recording":
		*e = UpdateConfigConfigTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateConfigConfigTypeEnum: %s", s)
	}
}

type UpdateConfigRequest struct {
	RequestBody       UpdateConfigRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// UUID of a <code>Config</code>.
	ConfigID string `pathParam:"style=simple,explode=false,name=configId"`
	// Type of a <code>Config</code>.
	ConfigType UpdateConfigConfigTypeEnum `pathParam:"style=simple,explode=false,name=configType"`
}

type UpdateConfigResponse struct {
	// Success
	ConfigIDResponse *shared.ConfigIDResponse
	ContentType      string
	// DependencyException
	DependencyException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
