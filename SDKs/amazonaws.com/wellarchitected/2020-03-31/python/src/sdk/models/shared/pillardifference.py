"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import differencestatus_enum as shared_differencestatus_enum
from ..shared import questiondifference as shared_questiondifference
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PillarDifference:
    r"""A pillar difference return object."""
    
    difference_status: Optional[shared_differencestatus_enum.DifferenceStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DifferenceStatus'), 'exclude': lambda f: f is None }})  
    pillar_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PillarId'), 'exclude': lambda f: f is None }})
    r"""<p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>"""  
    pillar_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PillarName'), 'exclude': lambda f: f is None }})
    r"""The name of the pillar."""  
    question_differences: Optional[list[shared_questiondifference.QuestionDifference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('QuestionDifferences'), 'exclude': lambda f: f is None }})  
    