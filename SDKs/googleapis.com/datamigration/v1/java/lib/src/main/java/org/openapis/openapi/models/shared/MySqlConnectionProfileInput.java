/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MySqlConnectionProfileInput - Specifies connection parameters required specifically for MySQL databases.
 */
public class MySqlConnectionProfileInput {
    /**
     * If the source is a Cloud SQL database, use this field to provide the Cloud SQL instance ID of the source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudSqlId")
    public String cloudSqlId;
    public MySqlConnectionProfileInput withCloudSqlId(String cloudSqlId) {
        this.cloudSqlId = cloudSqlId;
        return this;
    }
    
    /**
     * Required. The IP or hostname of the source MySQL database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host")
    public String host;
    public MySqlConnectionProfileInput withHost(String host) {
        this.host = host;
        return this;
    }
    
    /**
     * Required. Input only. The password for the user that Database Migration Service will be using to connect to the database. This field is not returned on request, and the value is encrypted when stored in Database Migration Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public MySqlConnectionProfileInput withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Required. The network port of the source MySQL database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("port")
    public Integer port;
    public MySqlConnectionProfileInput withPort(Integer port) {
        this.port = port;
        return this;
    }
    
    /**
     * SSL configuration information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssl")
    public SslConfigInput ssl;
    public MySqlConnectionProfileInput withSsl(SslConfigInput ssl) {
        this.ssl = ssl;
        return this;
    }
    
    /**
     * Required. The username that Database Migration Service will use to connect to the database. The value is encrypted when stored in Database Migration Service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;
    public MySqlConnectionProfileInput withUsername(String username) {
        this.username = username;
        return this;
    }
    
}
