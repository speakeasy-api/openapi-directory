"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import httpretrypolicy as shared_httpretrypolicy
from ..shared import httprouteaction as shared_httprouteaction
from ..shared import httproutematch as shared_httproutematch
from ..shared import httptimeout as shared_httptimeout
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HTTPRoute:
    r"""An object that represents an HTTP or HTTP/2 route type."""
    
    action: shared_httprouteaction.HTTPRouteAction = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action') }})  
    match: shared_httproutematch.HTTPRouteMatch = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('match') }})  
    retry_policy: Optional[shared_httpretrypolicy.HTTPRetryPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retryPolicy'), 'exclude': lambda f: f is None }})  
    timeout: Optional[shared_httptimeout.HTTPTimeout] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeout'), 'exclude': lambda f: f is None }})  
    