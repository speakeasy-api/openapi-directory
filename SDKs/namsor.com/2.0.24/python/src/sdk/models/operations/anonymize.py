"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apikeyout as shared_apikeyout
from typing import Optional


@dataclasses.dataclass
class AnonymizeRequest:
    
    anonymized: bool = dataclasses.field(metadata={'path_param': { 'field_name': 'anonymized', 'style': 'simple', 'explode': False }})  
    source: str = dataclasses.field(metadata={'path_param': { 'field_name': 'source', 'style': 'simple', 'explode': False }})  
    token: str = dataclasses.field(metadata={'path_param': { 'field_name': 'token', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class AnonymizeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_key_out: Optional[shared_apikeyout.APIKeyOut] = dataclasses.field(default=None)
    r"""Anonymization of a source."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    