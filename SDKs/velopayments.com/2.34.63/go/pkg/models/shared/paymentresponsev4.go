// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// PaymentResponseV4 - 200 response, request completed okay
type PaymentResponseV4 struct {
	AccountName *string `json:"accountName,omitempty"`
	// The account number for the account which will receive the payment.
	AccountNumber *string `json:"accountNumber,omitempty"`
	// Populated with rejection reason code if the payment was withdrawn automatically at instruct time
	AutoWithdrawnReasonCode *string `json:"autoWithdrawnReasonCode,omitempty"`
	// The country code of the payment channel.
	CountryCode *string                `json:"countryCode,omitempty"`
	Events      []PaymentEventResponse `json:"events"`
	// ACH file payment was submitted in, if applicable
	FilenameReference *string `json:"filenameReference,omitempty"`
	// Current funding status of the payment. One of the following values: FUNDED, INSTRUCTED, UNFUNDED
	FundingStatus string `json:"fundingStatus"`
	// The iban for the payment.
	Iban *string `json:"iban,omitempty"`
	// Individual Identification Number assigned to the payment in the ACH file, if applicable
	IndividualIdentificationNumber *string `json:"individualIdentificationNumber,omitempty"`
	// The inverted FX rate for the payment, if FX was involved. **Note** that (depending on the role of the caller) this information may not be displayed
	InvertedRate        *float64 `json:"invertedRate,omitempty"`
	IsPaymentCcyBaseCcy *bool    `json:"isPaymentCcyBaseCcy,omitempty"`
	// The country code of the payee's address.
	PayeeAddressCountryCode *string `json:"payeeAddressCountryCode,omitempty"`
	// The id of the paymeee
	PayeeID string `json:"payeeId"`
	// The amount which the payee will receive
	PaymentAmount      int64   `json:"paymentAmount"`
	PaymentChannelID   *string `json:"paymentChannelId,omitempty"`
	PaymentChannelName *string `json:"paymentChannelName,omitempty"`
	// ISO-4217 3 character currency code
	PaymentCurrency *string `json:"paymentCurrency,omitempty"`
	// The id of the payment
	PaymentID string `json:"paymentId"`
	// The payment memo set by the payor
	PaymentMemo *string `json:"paymentMemo,omitempty"`
	// Metadata for the payment
	PaymentMetadata          *string `json:"paymentMetadata,omitempty"`
	PaymentScheme            *string `json:"paymentScheme,omitempty"`
	PaymentTrackingReference *string `json:"paymentTrackingReference,omitempty"`
	// The id of the payor
	PayorID string `json:"payorId"`
	// The name of the payor
	PayorName      *string                  `json:"payorName,omitempty"`
	PayorPaymentID *string                  `json:"payorPaymentId,omitempty"`
	Payout         *PaymentResponseV4Payout `json:"payout,omitempty"`
	// FX details relating to a payout that was executed or is still waiting to be executed
	PostInstructFxInfo *PostInstructFxInfo `json:"postInstructFxInfo,omitempty"`
	// The quote Id used for the FX
	QuoteID      string  `json:"quoteId"`
	RailsBatchID *string `json:"railsBatchId,omitempty"`
	// The rails ID. Default value is RAILS ID UNAVAILABLE when not populated.
	RailsID        string  `json:"railsId"`
	RailsPaymentID *string `json:"railsPaymentId,omitempty"`
	// The FX rate for the payment, if FX was involved. **Note** that (depending on the role of the caller) this information may not be displayed
	Rate            *float64 `json:"rate,omitempty"`
	RejectionReason *string  `json:"rejectionReason,omitempty"`
	// The remote id by which the payor refers to the payee. Only populated once payment is confirmed
	RemoteID *string `json:"remoteId,omitempty"`
	// The velo id of the remote system orchestrating the payment. Not populated for normal Velo payments.
	RemoteSystemID *string `json:"remoteSystemId,omitempty"`
	// The id of the payment in the remote system. Not populated for normal Velo payments.
	RemoteSystemPaymentID *string `json:"remoteSystemPaymentId,omitempty"`
	// The return cost if a returned payment.
	ReturnCost   *int64  `json:"returnCost,omitempty"`
	ReturnReason *string `json:"returnReason,omitempty"`
	// The routing number for the payment.
	RoutingNumber *string `json:"routingNumber,omitempty"`
	// Details relating to a payout that was executed via a schedule or is still waiting to be executed
	Schedule *PayoutSchedule `json:"schedule,omitempty"`
	// The id of the source account from which the payment was taken
	SourceAccountID string `json:"sourceAccountId"`
	// The name of the source account from which the payment was taken
	SourceAccountName *string `json:"sourceAccountName,omitempty"`
	// The source amount for the payment (amount debited to make the payment)
	SourceAmount *int64 `json:"sourceAmount,omitempty"`
	// ISO-4217 3 character currency code
	SourceCurrency *string `json:"sourceCurrency,omitempty"`
	// Current status of the payment. One of the following values: ACCEPTED, AWAITING_FUNDS, FUNDED, UNFUNDED, BANK_PAYMENT_REQUESTED, REJECTED, ACCEPTED_BY_RAILS, CONFIRMED, RETURNED, WITHDRAWN
	Status            string    `json:"status"`
	SubmittedDateTime time.Time `json:"submittedDateTime"`
	// Trace Number assigned to the payment in the ACH file, if applicable
	TraceNumber *string `json:"traceNumber,omitempty"`
	// The transmission type of the payment, e.g. ACH, SAME_DAY_ACH, WIRE, GACHO
	TransmissionType *string `json:"transmissionType,omitempty"`
	Withdrawable     *bool   `json:"withdrawable,omitempty"`
	WithdrawnReason  *string `json:"withdrawnReason,omitempty"`
}
