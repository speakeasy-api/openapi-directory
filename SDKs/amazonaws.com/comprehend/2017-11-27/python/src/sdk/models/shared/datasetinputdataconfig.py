"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasetaugmentedmanifestslistitem as shared_datasetaugmentedmanifestslistitem
from ..shared import datasetdataformat_enum as shared_datasetdataformat_enum
from ..shared import datasetdocumentclassifierinputdataconfig as shared_datasetdocumentclassifierinputdataconfig
from ..shared import datasetentityrecognizerinputdataconfig as shared_datasetentityrecognizerinputdataconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatasetInputDataConfig:
    r"""Specifies the format and location of the input data for the dataset."""
    
    augmented_manifests: Optional[list[shared_datasetaugmentedmanifestslistitem.DatasetAugmentedManifestsListItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AugmentedManifests'), 'exclude': lambda f: f is None }})  
    data_format: Optional[shared_datasetdataformat_enum.DatasetDataFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataFormat'), 'exclude': lambda f: f is None }})  
    document_classifier_input_data_config: Optional[shared_datasetdocumentclassifierinputdataconfig.DatasetDocumentClassifierInputDataConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentClassifierInputDataConfig'), 'exclude': lambda f: f is None }})  
    entity_recognizer_input_data_config: Optional[shared_datasetentityrecognizerinputdataconfig.DatasetEntityRecognizerInputDataConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EntityRecognizerInputDataConfig'), 'exclude': lambda f: f is None }})  
    