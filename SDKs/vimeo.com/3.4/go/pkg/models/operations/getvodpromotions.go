// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetVodPromotionsSecurity struct {
	Oauth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// GetVodPromotionsFilterEnum - The filter to apply to the results.
type GetVodPromotionsFilterEnum string

const (
	GetVodPromotionsFilterEnumBatch   GetVodPromotionsFilterEnum = "batch"
	GetVodPromotionsFilterEnumDefault GetVodPromotionsFilterEnum = "default"
	GetVodPromotionsFilterEnumSingle  GetVodPromotionsFilterEnum = "single"
	GetVodPromotionsFilterEnumVip     GetVodPromotionsFilterEnum = "vip"
)

func (e *GetVodPromotionsFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "batch":
		fallthrough
	case "default":
		fallthrough
	case "single":
		fallthrough
	case "vip":
		*e = GetVodPromotionsFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVodPromotionsFilterEnum: %s", s)
	}
}

type GetVodPromotionsRequest struct {
	// The filter to apply to the results.
	Filter GetVodPromotionsFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The ID of the On Demand.
	OndemandID float64 `pathParam:"style=simple,explode=false,name=ondemand_id"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
}

type GetVodPromotionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The filter is invalid.
	LegacyError *shared.LegacyError
	// The promotions were returned.
	OnDemandPromotion *shared.OnDemandPromotion
}
