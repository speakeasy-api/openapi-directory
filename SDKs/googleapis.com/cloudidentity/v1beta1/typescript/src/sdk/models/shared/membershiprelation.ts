/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntityKey } from "./entitykey";
import { MembershipRole } from "./membershiprole";
import { Expose, Type } from "class-transformer";

/**
 * Message containing membership relation.
 */
export class MembershipRelation extends SpeakeasyBase {
  /**
   * An extended description to help users determine the purpose of a `Group`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The display name of the `Group`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Group`. Shall be of the form `groups/{group_id}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group?: string;

  /**
   * A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupKey" })
  @Type(() => EntityKey)
  groupKey?: EntityKey;

  /**
   * One or more label entries that apply to the Group. Currently supported labels contain a key with an empty value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "membership" })
  membership?: string;

  /**
   * The `MembershipRole`s that apply to the `Membership`.
   */
  @SpeakeasyMetadata({ elemType: MembershipRole })
  @Expose({ name: "roles" })
  @Type(() => MembershipRole)
  roles?: MembershipRole[];
}
