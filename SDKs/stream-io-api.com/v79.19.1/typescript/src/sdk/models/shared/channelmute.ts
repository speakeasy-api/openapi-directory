/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ChannelMute extends SpeakeasyBase {
  /**
   * Represents channel in chat
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel?: Record<string, any>;

  /**
   * Date/time of creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Date/time of mute expiration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expires?: Date;

  /**
   * Date/time of the last update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * Represents chat user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: Record<string, any>;
}
