// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type BlogArticleAnnouncementTypeEnum string

const (
	BlogArticleAnnouncementTypeEnumArticle           BlogArticleAnnouncementTypeEnum = "article"
	BlogArticleAnnouncementTypeEnumCase              BlogArticleAnnouncementTypeEnum = "case"
	BlogArticleAnnouncementTypeEnumFamousTranslators BlogArticleAnnouncementTypeEnum = "famous-translators"
	BlogArticleAnnouncementTypeEnumSales             BlogArticleAnnouncementTypeEnum = "sales"
)

func (e *BlogArticleAnnouncementTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "article":
		fallthrough
	case "case":
		fallthrough
	case "famous-translators":
		fallthrough
	case "sales":
		*e = BlogArticleAnnouncementTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BlogArticleAnnouncementTypeEnum: %s", s)
	}
}

type BlogArticle struct {
	AnnouncementType *BlogArticleAnnouncementTypeEnum `json:"announcement_type,omitempty"`
	Author           *string                          `json:"author,omitempty"`
	// Article content
	Content *string `json:"content,omitempty"`
	// the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Article excerpt
	Excerpt *string `json:"excerpt,omitempty"`
	ID      *int64  `json:"id,omitempty"`
	// language code
	Language *string           `json:"language,omitempty"`
	Links    *BlogArticleLinks `json:"links,omitempty"`
	Slug     *string           `json:"slug,omitempty"`
	Title    *string           `json:"title,omitempty"`
	Topic    *string           `json:"topic,omitempty"`
}
