<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SoftwarePackage - Software package information of the operating system.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SoftwarePackage
{
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VersionedPackage $aptPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('aptPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VersionedPackage $aptPackage = null;
    
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VersionedPackage $cosPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('cosPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VersionedPackage $cosPackage = null;
    
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VersionedPackage $googetPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('googetPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VersionedPackage $googetPackage = null;
    
    /**
     * Information related to a Quick Fix Engineering package. Fields are taken from Windows QuickFixEngineering Interface and match the source names: https://docs.microsoft.com/en-us/windows/win32/cimwin32prov/win32-quickfixengineering
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WindowsQuickFixEngineeringPackage $qfePackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('qfePackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WindowsQuickFixEngineeringPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WindowsQuickFixEngineeringPackage $qfePackage = null;
    
    /**
     * Contains information about a Windows application that is retrieved from the Windows Registry. For more information about these fields, see: https://docs.microsoft.com/en-us/windows/win32/msi/uninstall-registry-key
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WindowsApplication $windowsApplication
     */
	#[\JMS\Serializer\Annotation\SerializedName('windowsApplication')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WindowsApplication')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WindowsApplication $windowsApplication = null;
    
    /**
     * Details related to a Windows Update package. Field data and names are taken from Windows Update API IUpdate Interface: https://docs.microsoft.com/en-us/windows/win32/api/_wua/ Descriptive fields like title, and description are localized based on the locale of the VM being updated.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WindowsUpdatePackage $wuaPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('wuaPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WindowsUpdatePackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WindowsUpdatePackage $wuaPackage = null;
    
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VersionedPackage $yumPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('yumPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VersionedPackage $yumPackage = null;
    
    /**
     * Information related to the a standard versioned package. This includes package info for APT, Yum, Zypper, and Googet package managers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VersionedPackage $zypperPackage
     */
	#[\JMS\Serializer\Annotation\SerializedName('zypperPackage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VersionedPackage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VersionedPackage $zypperPackage = null;
    
    /**
     * Details related to a Zypper Patch.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ZypperPatch $zypperPatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('zypperPatch')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ZypperPatch')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ZypperPatch $zypperPatch = null;
    
	public function __construct()
	{
		$this->aptPackage = null;
		$this->cosPackage = null;
		$this->googetPackage = null;
		$this->qfePackage = null;
		$this->windowsApplication = null;
		$this->wuaPackage = null;
		$this->yumPackage = null;
		$this->zypperPackage = null;
		$this->zypperPatch = null;
	}
}
