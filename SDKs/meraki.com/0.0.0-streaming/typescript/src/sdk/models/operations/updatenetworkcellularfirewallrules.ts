/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * 'allow' or 'deny' traffic specified by this rule
 */
export enum UpdateNetworkCellularFirewallRulesRequestBodyRulesPolicyEnum {
  Allow = "allow",
  Deny = "deny",
}

/**
 * The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
 */
export enum UpdateNetworkCellularFirewallRulesRequestBodyRulesProtocolEnum {
  Any = "any",
  Icmp = "icmp",
  Icmp6 = "icmp6",
  Tcp = "tcp",
  Udp = "udp",
}

export class UpdateNetworkCellularFirewallRulesRequestBodyRules extends SpeakeasyBase {
  /**
   * Description of the rule (optional)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * Comma-separated list of destination IP address(es) (in IP or CIDR notation), fully-qualified domain names (FQDN) or 'any'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destCidr" })
  destCidr: string;

  /**
   * Comma-separated list of destination port(s) (integer in the range 1-65535), or 'any'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destPort" })
  destPort?: string;

  /**
   * 'allow' or 'deny' traffic specified by this rule
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policy" })
  policy: UpdateNetworkCellularFirewallRulesRequestBodyRulesPolicyEnum;

  /**
   * The type of protocol (must be 'tcp', 'udp', 'icmp', 'icmp6' or 'any')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol: UpdateNetworkCellularFirewallRulesRequestBodyRulesProtocolEnum;

  /**
   * Comma-separated list of source IP address(es) (in IP or CIDR notation), or 'any' (note: FQDN not supported for source addresses)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "srcCidr" })
  srcCidr: string;

  /**
   * Comma-separated list of source port(s) (integer in the range 1-65535), or 'any'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "srcPort" })
  srcPort?: string;

  /**
   * Log this rule to syslog (true or false, boolean value) - only applicable if a syslog has been configured (optional)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syslogEnabled" })
  syslogEnabled?: boolean;
}

export class UpdateNetworkCellularFirewallRulesRequestBody extends SpeakeasyBase {
  /**
   * An ordered array of the firewall rules (not including the default rule)
   */
  @SpeakeasyMetadata({
    elemType: UpdateNetworkCellularFirewallRulesRequestBodyRules,
  })
  @Expose({ name: "rules" })
  @Type(() => UpdateNetworkCellularFirewallRulesRequestBodyRules)
  rules?: UpdateNetworkCellularFirewallRulesRequestBodyRules[];
}

export class UpdateNetworkCellularFirewallRulesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkCellularFirewallRulesRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class UpdateNetworkCellularFirewallRulesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkCellularFirewallRules200ApplicationJSONObjects?: Record<
    string,
    any
  >[];
}
