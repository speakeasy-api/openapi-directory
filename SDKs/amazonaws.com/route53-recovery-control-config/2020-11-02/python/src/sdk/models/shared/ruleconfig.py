"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ruletype_enum as shared_ruletype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RuleConfig:
    r"""The rule configuration for an assertion rule. That is, the criteria that you set for specific assertion controls (routing controls) that specify how many control states must be ON after a transaction completes."""
    
    inverted: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inverted') }})  
    threshold: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Threshold') }})  
    type: shared_ruletype_enum.RuleTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    