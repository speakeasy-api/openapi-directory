"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import accounttypeenum_enum as shared_accounttypeenum_enum
from ..shared import listaccountsresponse as shared_listaccountsresponse
from ..shared import ownershiptypeenum_enum as shared_ownershiptypeenum_enum
from typing import Optional


@dataclasses.dataclass
class GetAccountsRequest:
    
    filter_account_type: Optional[shared_accounttypeenum_enum.AccountTypeEnumEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[accountType]', 'style': 'form', 'explode': True }})
    r"""The type of account for which to return records. This
    can be used to filter Savers from spending accounts.
    """  
    filter_ownership_type: Optional[shared_ownershiptypeenum_enum.OwnershipTypeEnumEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[ownershipType]', 'style': 'form', 'explode': True }})
    r"""The account ownership structure for which to return
    records. This can be used to filter 2Up accounts from Up
    accounts.
    """  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page[size]', 'style': 'form', 'explode': True }})
    r"""The number of records to return in each page."""  
    

@dataclasses.dataclass
class GetAccountsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_accounts_response: Optional[shared_listaccountsresponse.ListAccountsResponse] = dataclasses.field(default=None)
    r"""Successful Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    