// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PivotMetricAggregationsEnum string

const (
	PivotMetricAggregationsEnumMetricAggregationUnspecified PivotMetricAggregationsEnum = "METRIC_AGGREGATION_UNSPECIFIED"
	PivotMetricAggregationsEnumTotal                        PivotMetricAggregationsEnum = "TOTAL"
	PivotMetricAggregationsEnumMinimum                      PivotMetricAggregationsEnum = "MINIMUM"
	PivotMetricAggregationsEnumMaximum                      PivotMetricAggregationsEnum = "MAXIMUM"
	PivotMetricAggregationsEnumCount                        PivotMetricAggregationsEnum = "COUNT"
)

func (e *PivotMetricAggregationsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METRIC_AGGREGATION_UNSPECIFIED":
		fallthrough
	case "TOTAL":
		fallthrough
	case "MINIMUM":
		fallthrough
	case "MAXIMUM":
		fallthrough
	case "COUNT":
		*e = PivotMetricAggregationsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PivotMetricAggregationsEnum: %s", s)
	}
}

// Pivot - Describes the visible dimension columns and rows in the report response.
type Pivot struct {
	// Dimension names for visible columns in the report response. Including "dateRange" produces a date range column; for each row in the response, dimension values in the date range column will indicate the corresponding date range from the request.
	FieldNames []string `json:"fieldNames,omitempty"`
	// The number of unique combinations of dimension values to return in this pivot. The `limit` parameter is required. A `limit` of 10,000 is common for single pivot requests. The product of the `limit` for each `pivot` in a `RunPivotReportRequest` must not exceed 100,000. For example, a two pivot request with `limit: 1000` in each pivot will fail because the product is `1,000,000`.
	Limit *string `json:"limit,omitempty"`
	// Aggregate the metrics by dimensions in this pivot using the specified metric_aggregations.
	MetricAggregations []PivotMetricAggregationsEnum `json:"metricAggregations,omitempty"`
	// The row count of the start row. The first row is counted as row 0.
	Offset *string `json:"offset,omitempty"`
	// Specifies how dimensions are ordered in the pivot. In the first Pivot, the OrderBys determine Row and PivotDimensionHeader ordering; in subsequent Pivots, the OrderBys determine only PivotDimensionHeader ordering. Dimensions specified in these OrderBys must be a subset of Pivot.field_names.
	OrderBys []OrderBy `json:"orderBys,omitempty"`
}
