/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CatalogEntry } from "./catalogentry";
import { LanguageEnum } from "./languageenum";
import { Location } from "./location";
import { MappingEntry } from "./mappingentry";
import { Expose, Type } from "class-transformer";

export class GetPlanRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalPlanOptionsMap" })
  additionalPlanOptionsMap?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Language" })
  language?: LanguageEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Location" })
  @Type(() => Location)
  location?: Location;

  @SpeakeasyMetadata({ elemType: MappingEntry })
  @Expose({ name: "Mapping" })
  @Type(() => MappingEntry)
  mapping: MappingEntry[];

  @SpeakeasyMetadata({ elemType: CatalogEntry })
  @Expose({ name: "Sinks" })
  @Type(() => CatalogEntry)
  sinks?: CatalogEntry[];

  @SpeakeasyMetadata()
  @Expose({ name: "Source" })
  @Type(() => CatalogEntry)
  source: CatalogEntry;
}
