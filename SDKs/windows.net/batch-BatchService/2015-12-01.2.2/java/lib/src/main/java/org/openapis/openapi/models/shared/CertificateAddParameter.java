/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CertificateAddParameter - A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine.
 */
public class CertificateAddParameter {
    /**
     * Gets or sets the format of the certificate data. This must be pfx.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificateFormat")
    public CertificateAddParameterCertificateFormatEnum certificateFormat;
    public CertificateAddParameter withCertificateFormat(CertificateAddParameterCertificateFormatEnum certificateFormat) {
        this.certificateFormat = certificateFormat;
        return this;
    }
    
    /**
     * Gets or sets the base64-encoded contents of the .pfx file containing the certificate. The maximum size is 10KB. This property is not populated by the Get Certificate operation.
     */
    @JsonProperty("data")
    public String data;
    public CertificateAddParameter withData(String data) {
        this.data = data;
        return this;
    }
    
    /**
     * Gets or sets the password to access the certificate's private key. This property is not populated by the Get Certificate operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public CertificateAddParameter withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Get or sets the X.509 thumbprint of the certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
     */
    @JsonProperty("thumbprint")
    public String thumbprint;
    public CertificateAddParameter withThumbprint(String thumbprint) {
        this.thumbprint = thumbprint;
        return this;
    }
    
    /**
     * Gets or sets the algorithm used to derive the thumbprint. This must be sha1.
     */
    @JsonProperty("thumbprintAlgorithm")
    public String thumbprintAlgorithm;
    public CertificateAddParameter withThumbprintAlgorithm(String thumbprintAlgorithm) {
        this.thumbprintAlgorithm = thumbprintAlgorithm;
        return this;
    }
    
}
