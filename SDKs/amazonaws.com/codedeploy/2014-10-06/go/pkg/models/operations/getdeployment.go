// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetDeploymentXAmzTargetEnum
type GetDeploymentXAmzTargetEnum string

const (
	GetDeploymentXAmzTargetEnumCodeDeploy20141006GetDeployment GetDeploymentXAmzTargetEnum = "CodeDeploy_20141006.GetDeployment"
)

func (e GetDeploymentXAmzTargetEnum) ToPointer() *GetDeploymentXAmzTargetEnum {
	return &e
}

func (e *GetDeploymentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeDeploy_20141006.GetDeployment":
		*e = GetDeploymentXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeploymentXAmzTargetEnum: %v", v)
	}
}

type GetDeploymentRequest struct {
	GetDeploymentInput shared.GetDeploymentInput   `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         GetDeploymentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetDeploymentResponse struct {
	ContentType string
	// DeploymentDoesNotExistException
	DeploymentDoesNotExistException interface{}
	// DeploymentIdRequiredException
	DeploymentIDRequiredException interface{}
	// Success
	GetDeploymentOutput *shared.GetDeploymentOutput
	// InvalidDeploymentIdException
	InvalidDeploymentIDException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
}
