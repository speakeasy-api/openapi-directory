// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateLogStreamXAmzTargetEnum
type CreateLogStreamXAmzTargetEnum string

const (
	CreateLogStreamXAmzTargetEnumLogs20140328CreateLogStream CreateLogStreamXAmzTargetEnum = "Logs_20140328.CreateLogStream"
)

func (e CreateLogStreamXAmzTargetEnum) ToPointer() *CreateLogStreamXAmzTargetEnum {
	return &e
}

func (e *CreateLogStreamXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Logs_20140328.CreateLogStream":
		*e = CreateLogStreamXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateLogStreamXAmzTargetEnum: %v", v)
	}
}

type CreateLogStreamRequest struct {
	CreateLogStreamRequest shared.CreateLogStreamRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             CreateLogStreamXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateLogStreamResponse struct {
	ContentType string
	// InvalidParameterException
	InvalidParameterException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
