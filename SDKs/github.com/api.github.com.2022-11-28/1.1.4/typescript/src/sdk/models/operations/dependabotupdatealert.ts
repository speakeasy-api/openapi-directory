/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * **Required when `state` is `dismissed`.** A reason for dismissing the alert.
 */
export enum DependabotUpdateAlertRequestBodyDismissedReasonEnum {
  FixStarted = "fix_started",
  Inaccurate = "inaccurate",
  NoBandwidth = "no_bandwidth",
  NotUsed = "not_used",
  TolerableRisk = "tolerable_risk",
}

/**
 * The state of the Dependabot alert.
 *
 * @remarks
 * A `dismissed_reason` must be provided when setting the state to `dismissed`.
 */
export enum DependabotUpdateAlertRequestBodyStateEnum {
  Dismissed = "dismissed",
  Open = "open",
}

export class DependabotUpdateAlertRequestBody extends SpeakeasyBase {
  /**
   * An optional comment associated with dismissing the alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_comment" })
  dismissedComment?: string;

  /**
   * **Required when `state` is `dismissed`.** A reason for dismissing the alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_reason" })
  dismissedReason?: DependabotUpdateAlertRequestBodyDismissedReasonEnum;

  /**
   * The state of the Dependabot alert.
   *
   * @remarks
   * A `dismissed_reason` must be provided when setting the state to `dismissed`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: DependabotUpdateAlertRequestBodyStateEnum;
}

export class DependabotUpdateAlertRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: DependabotUpdateAlertRequestBody;

  /**
   * The number that identifies a Dependabot alert in its repository.
   *
   * @remarks
   * You can find this at the end of the URL for a Dependabot alert within GitHub,
   * or in `number` fields in the response from the
   * `GET /repos/{owner}/{repo}/dependabot/alerts` operation.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=alert_number",
  })
  alertNumber: number;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class DependabotUpdateAlertResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  dependabotAlert?: shared.DependabotAlert;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  scimError?: shared.ScimError;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationErrorSimple?: shared.ValidationErrorSimple;
}
