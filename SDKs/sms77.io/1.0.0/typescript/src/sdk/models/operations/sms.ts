/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Disable message sending.
 */
export enum SmsDebugEnum {
  One = "1",
  Zero = "0",
}

/**
 * Attach message details to response.
 */
export enum SmsDetailsEnum {
  One = "1",
  Zero = "0",
}

/**
 * Send as flash.
 */
export enum SmsFlashEnum {
  One = "1",
  Zero = "0",
}

/**
 * Return a detailed JSON response.
 */
export enum SmsJSONEnum {
  One = "1",
  Zero = "0",
}

/**
 * Enable sending of duplicated messages within 180 seconds.
 */
export enum SmsNoReloadEnum {
  One = "1",
  Zero = "0",
}

/**
 * Enable performance tracking for found URLs.
 */
export enum SmsPerformanceTrackingEnum {
  One = "1",
  Zero = "0",
}

/**
 * Attach message ID to second row in a text response.
 */
export enum SmsReturnMsgIDEnum {
  One = "1",
  Zero = "0",
}

/**
 * Force unicode encoding. Reduces sms length to 70 chars.
 */
export enum SmsUnicodeEnum {
  One = "1",
  Zero = "0",
}

/**
 * Force UTF8 encoding.
 */
export enum SmsUtf8Enum {
  One = "1",
  Zero = "0",
}

export class SmsRequest extends SpeakeasyBase {
  /**
   * Disable message sending.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=debug" })
  debug?: SmsDebugEnum;

  /**
   * Date/Time for delayed dispatch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=delay" })
  delay?: string;

  /**
   * Attach message details to response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=details",
  })
  details?: SmsDetailsEnum;

  /**
   * Send as flash.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=flash" })
  flash?: SmsFlashEnum;

  /**
   * Identifier to return in callbacks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=foreign_id",
  })
  foreignId?: string;

  /**
   * Set a custom sender name.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=from" })
  from?: string;

  /**
   * Return a detailed JSON response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=json" })
  json?: SmsJSONEnum;

  /**
   * A custom label.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=label" })
  label?: string;

  /**
   * Enable sending of duplicated messages within 180 seconds.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=no_reload",
  })
  noReload?: SmsNoReloadEnum;

  /**
   * Enable performance tracking for found URLs.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=performance_tracking",
  })
  performanceTracking?: SmsPerformanceTrackingEnum;

  /**
   * Attach message ID to second row in a text response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=return_msg_id",
  })
  returnMsgId?: SmsReturnMsgIDEnum;

  /**
   * The actual text message to send.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=text" })
  text: string;

  /**
   * The recipient number or group name.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=to" })
  to: string;

  /**
   * A custom User Data Header.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=udh" })
  udh?: string;

  /**
   * Force unicode encoding. Reduces sms length to 70 chars.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=unicode",
  })
  unicode?: SmsUnicodeEnum;

  /**
   * Force UTF8 encoding.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=utf8" })
  utf8?: SmsUtf8Enum;
}

export class Sms200ApplicationJSONMessages extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "encoding" })
  encoding?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "error_text" })
  errorText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "messages" })
  messages?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "parts" })
  parts?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient" })
  recipient?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sender" })
  sender?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string;
}

export enum Sms200ApplicationJSONSmsTypeEnum {
  Economy = "economy",
  Direct = "direct",
}

/**
 * OK
 */
export class Sms200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "debug" })
  debug?: string;

  @SpeakeasyMetadata({ elemType: Sms200ApplicationJSONMessages })
  @Expose({ name: "messages" })
  @Type(() => Sms200ApplicationJSONMessages)
  messages?: Sms200ApplicationJSONMessages[];

  @SpeakeasyMetadata()
  @Expose({ name: "sms_type" })
  smsType?: Sms200ApplicationJSONSmsTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "total_price" })
  totalPrice?: number;
}

export class SmsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  sms200ApplicationJSONObject?: Sms200ApplicationJSON;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  sms200TextPlainObject?: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
