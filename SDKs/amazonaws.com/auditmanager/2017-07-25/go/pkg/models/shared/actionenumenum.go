// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionEnumEnum string

const (
	ActionEnumEnumCreate         ActionEnumEnum = "CREATE"
	ActionEnumEnumUpdateMetadata ActionEnumEnum = "UPDATE_METADATA"
	ActionEnumEnumActive         ActionEnumEnum = "ACTIVE"
	ActionEnumEnumInactive       ActionEnumEnum = "INACTIVE"
	ActionEnumEnumDelete         ActionEnumEnum = "DELETE"
	ActionEnumEnumUnderReview    ActionEnumEnum = "UNDER_REVIEW"
	ActionEnumEnumReviewed       ActionEnumEnum = "REVIEWED"
	ActionEnumEnumImportEvidence ActionEnumEnum = "IMPORT_EVIDENCE"
)

func (e ActionEnumEnum) ToPointer() *ActionEnumEnum {
	return &e
}

func (e *ActionEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATE":
		fallthrough
	case "UPDATE_METADATA":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "DELETE":
		fallthrough
	case "UNDER_REVIEW":
		fallthrough
	case "REVIEWED":
		fallthrough
	case "IMPORT_EVIDENCE":
		*e = ActionEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionEnumEnum: %v", v)
	}
}
