/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class AccountCallLogs200ApplicationJSONCallLogs {
    /**
     * GMT date and time at which the inbound call was answered. The value of this field is in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
     * 		
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("answer_start_time")
    public OffsetDateTime answerStartTime;
    public AccountCallLogs200ApplicationJSONCallLogs withAnswerStartTime(OffsetDateTime answerStartTime) {
        this.answerStartTime = answerStartTime;
        return this;
    }
    
    /**
     * Unique identifier of the phone call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_id")
    public String callId;
    public AccountCallLogs200ApplicationJSONCallLogs withCallId(String callId) {
        this.callId = callId;
        return this;
    }
    
    /**
     * The type of call:
     * *`voip` (Voice over IP)
     * *`pstn` (Public Switched Telephone Network)
     * *`tollfree`
     * *`international`
     * *`contactCenter`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_type")
    public AccountCallLogs200ApplicationJSONCallLogsCallTypeEnum callType;
    public AccountCallLogs200ApplicationJSONCallLogs withCallType(AccountCallLogs200ApplicationJSONCallLogsCallTypeEnum callType) {
        this.callType = callType;
        return this;
    }
    
    /**
     * Contact name of callee
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callee_name")
    public String calleeName;
    public AccountCallLogs200ApplicationJSONCallLogs withCalleeName(String calleeName) {
        this.calleeName = calleeName;
        return this;
    }
    
    /**
     * Number of callee
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callee_number")
    public String calleeNumber;
    public AccountCallLogs200ApplicationJSONCallLogs withCalleeNumber(String calleeNumber) {
        this.calleeNumber = calleeNumber;
        return this;
    }
    
    /**
     * Type of callee's number. 1 - internal | 2 - external
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callee_number_type")
    public String calleeNumberType;
    public AccountCallLogs200ApplicationJSONCallLogs withCalleeNumberType(String calleeNumberType) {
        this.calleeNumberType = calleeNumberType;
        return this;
    }
    
    /**
     * Contact name of caller
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caller_name")
    public String callerName;
    public AccountCallLogs200ApplicationJSONCallLogs withCallerName(String callerName) {
        this.callerName = callerName;
        return this;
    }
    
    /**
     * Number of caller
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caller_number")
    public String callerNumber;
    public AccountCallLogs200ApplicationJSONCallLogs withCallerNumber(String callerNumber) {
        this.callerNumber = callerNumber;
        return this;
    }
    
    /**
     * Type of caller's number. 1 - internal | 2 - external
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caller_number_type")
    public String callerNumberType;
    public AccountCallLogs200ApplicationJSONCallLogs withCallerNumberType(String callerNumberType) {
        this.callerNumberType = callerNumberType;
        return this;
    }
    
    /**
     * Billing charge for the call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("charge")
    public String charge;
    public AccountCallLogs200ApplicationJSONCallLogs withCharge(String charge) {
        this.charge = charge;
        return this;
    }
    
    /**
     * Client code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_code")
    public String clientCode;
    public AccountCallLogs200ApplicationJSONCallLogs withClientCode(String clientCode) {
        this.clientCode = clientCode;
        return this;
    }
    
    /**
     * Start time of the call
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_time")
    public String dateTime;
    public AccountCallLogs200ApplicationJSONCallLogs withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    /**
     * Direction of the call. "inbound" | "outbound"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public String direction;
    public AccountCallLogs200ApplicationJSONCallLogs withDirection(String direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Duration of the call in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;
    public AccountCallLogs200ApplicationJSONCallLogs withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Call Log ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public AccountCallLogs200ApplicationJSONCallLogs withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public AccountCallLogs200ApplicationJSONCallLogsOwner owner;
    public AccountCallLogs200ApplicationJSONCallLogs withOwner(AccountCallLogs200ApplicationJSONCallLogsOwner owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * Path of the call. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;
    public AccountCallLogs200ApplicationJSONCallLogs withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Billing rate for the call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rate")
    public String rate;
    public AccountCallLogs200ApplicationJSONCallLogs withRate(String rate) {
        this.rate = rate;
        return this;
    }
    
    /**
     * Unique identifier of the call recording.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_id")
    public String recordingId;
    public AccountCallLogs200ApplicationJSONCallLogs withRecordingId(String recordingId) {
        this.recordingId = recordingId;
        return this;
    }
    
    /**
     * Type of call recording:&lt;br&gt;
     * `1` OnDemand&lt;br&gt;
     * `2` Automatic
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording_type")
    public AccountCallLogs200ApplicationJSONCallLogsRecordingTypeEnum recordingType;
    public AccountCallLogs200ApplicationJSONCallLogs withRecordingType(AccountCallLogs200ApplicationJSONCallLogsRecordingTypeEnum recordingType) {
        this.recordingType = recordingType;
        return this;
    }
    
    /**
     * Result of the call. "call_connected" | "recorded" | "no_answer"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public String result;
    public AccountCallLogs200ApplicationJSONCallLogs withResult(String result) {
        this.result = result;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("site")
    public AccountCallLogs200ApplicationJSONCallLogsSite site;
    public AccountCallLogs200ApplicationJSONCallLogs withSite(AccountCallLogs200ApplicationJSONCallLogsSite site) {
        this.site = site;
        return this;
    }
    
    /**
     * User ID of the call log owner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public AccountCallLogs200ApplicationJSONCallLogs withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * Duration that a  **call queue member** takes to answer a call from the time it started ringing. The value of the duration is in seconds.
     * 			
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waiting_time")
    public String waitingTime;
    public AccountCallLogs200ApplicationJSONCallLogs withWaitingTime(String waitingTime) {
        this.waitingTime = waitingTime;
        return this;
    }
    
}
