/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FilterPair } from "./filterpair";
import { Options } from "./options";
import { Expose, Type } from "class-transformer";

/**
 * The type of the report. The type of the report will dictate what dimesions, filters, and metrics can be used.
 */
export enum ParametersTypeEnum {
  ReportTypeUnspecified = "REPORT_TYPE_UNSPECIFIED",
  Standard = "STANDARD",
  InventoryAvailability = "INVENTORY_AVAILABILITY",
  AudienceComposition = "AUDIENCE_COMPOSITION",
  Floodlight = "FLOODLIGHT",
  Youtube = "YOUTUBE",
  Grp = "GRP",
  YoutubeProgrammaticGuaranteed = "YOUTUBE_PROGRAMMATIC_GUARANTEED",
  Reach = "REACH",
  UniqueReachAudience = "UNIQUE_REACH_AUDIENCE",
  FullPath = "FULL_PATH",
  PathAttribution = "PATH_ATTRIBUTION",
}

/**
 * Parameters of a query or report.
 */
export class ParametersT extends SpeakeasyBase {
  /**
   * Filters used to match traffic data in your report.
   */
  @SpeakeasyMetadata({ elemType: FilterPair })
  @Expose({ name: "filters" })
  @Type(() => FilterPair)
  filters?: FilterPair[];

  /**
   * Data is grouped by the filters listed in this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupBys" })
  groupBys?: string[];

  /**
   * Metrics to include as columns in your report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metrics" })
  metrics?: string[];

  /**
   * Additional query options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  @Type(() => Options)
  options?: Options;

  /**
   * The type of the report. The type of the report will dictate what dimesions, filters, and metrics can be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ParametersTypeEnum;
}
