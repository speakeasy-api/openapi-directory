// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetImageCollectionSecurity struct {
	CustomerAccessCode string `security:"scheme,type=oauth2,name=Authorization"`
}

type GetImageCollectionEmbedEnum string

const (
	GetImageCollectionEmbedEnumShareCode GetImageCollectionEmbedEnum = "share_code"
	GetImageCollectionEmbedEnumShareURL  GetImageCollectionEmbedEnum = "share_url"
)

func (e *GetImageCollectionEmbedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "share_code":
		fallthrough
	case "share_url":
		*e = GetImageCollectionEmbedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetImageCollectionEmbedEnum: %s", s)
	}
}

type GetImageCollectionRequest struct {
	// Which sharing information to include in the response, such as a URL to the collection
	Embed []GetImageCollectionEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
	// Collection ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Code to retrieve a shared collection
	ShareCode *string `queryParam:"style=form,explode=true,name=share_code"`
}

type GetImageCollectionResponse struct {
	// OK
	Collection  *shared.Collection
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
