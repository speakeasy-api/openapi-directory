/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OpsAggregator } from "./opsaggregator";
import { OpsFilter } from "./opsfilter";
import { OpsResultAttribute } from "./opsresultattribute";
import { Expose, Type } from "class-transformer";

export class GetOpsSummaryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: OpsAggregator })
  @Expose({ name: "Aggregators" })
  @Type(() => OpsAggregator)
  aggregators?: OpsAggregator[];

  @SpeakeasyMetadata({ elemType: OpsFilter })
  @Expose({ name: "Filters" })
  @Type(() => OpsFilter)
  filters?: OpsFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: OpsResultAttribute })
  @Expose({ name: "ResultAttributes" })
  @Type(() => OpsResultAttribute)
  resultAttributes?: OpsResultAttribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "SyncName" })
  syncName?: string;
}
