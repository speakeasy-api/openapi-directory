/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostApiV1StatusesRequestBody {
    /**
     * ID of the status being replied to, if status is a reply
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("in_reply_to_id")
    public String inReplyToId;
    public PostApiV1StatusesRequestBody withInReplyToId(String inReplyToId) {
        this.inReplyToId = inReplyToId;
        return this;
    }
    
    /**
     * ISO 639 language code for this status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;
    public PostApiV1StatusesRequestBody withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * Array of Attachment ids to be attached as media. If provided, `status` becomes optional, and `poll` cannot be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media_ids")
    public String[] mediaIds;
    public PostApiV1StatusesRequestBody withMediaIds(String[] mediaIds) {
        this.mediaIds = mediaIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("poll")
    public java.util.Map<String, Object>[] poll;
    public PostApiV1StatusesRequestBody withPoll(java.util.Map<String, Object>[] poll) {
        this.poll = poll;
        return this;
    }
    
    /**
     * ISO 8601 Datetime at which to schedule a status. Providing this paramter will cause ScheduledStatus to be returned instead of Status. Must be at least 5 minutes in the future.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduled_at")
    public String scheduledAt;
    public PostApiV1StatusesRequestBody withScheduledAt(String scheduledAt) {
        this.scheduledAt = scheduledAt;
        return this;
    }
    
    /**
     * Mark status and attached media as sensitive?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sensitive")
    public Boolean sensitive;
    public PostApiV1StatusesRequestBody withSensitive(Boolean sensitive) {
        this.sensitive = sensitive;
        return this;
    }
    
    /**
     * Text to be shown as a warning or subject before the actual content. Statuses are generally collapsed behind this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spoiler_text")
    public String spoilerText;
    public PostApiV1StatusesRequestBody withSpoilerText(String spoilerText) {
        this.spoilerText = spoilerText;
        return this;
    }
    
    /**
     * Text content of the status. If `media_ids` is provided, this becomes optional. Attaching a `poll` is optional while `status` is provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public PostApiV1StatusesRequestBody withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Visibility of the posted status. Enumerable oneOf public, unlisted, private, direct.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visibility")
    public PostApiV1StatusesRequestBodyVisibilityEnum visibility;
    public PostApiV1StatusesRequestBody withVisibility(PostApiV1StatusesRequestBodyVisibilityEnum visibility) {
        this.visibility = visibility;
        return this;
    }
    
}
