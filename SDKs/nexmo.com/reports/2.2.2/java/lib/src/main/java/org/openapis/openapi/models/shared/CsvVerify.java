/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * CsvVerify - Verify
 */
public class CsvVerify {
    /**
     * The account ID (API key) you wish to search for. This can differ from the API key in the authorization header because some accounts can request reports for other accounts, e.g. a primary account owner wants to create a report for one of its subaccounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_id")
    public String accountId;
    public CsvVerify withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Country where the request was sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public CsvVerify withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Country name where the request was sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country_name")
    public String countryName;
    public CsvVerify withCountryName(String countryName) {
        this.countryName = countryName;
        return this;
    }
    
    /**
     * Currency of the price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;
    public CsvVerify withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Date when the request was finalized.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_finalized")
    public LocalDate dateFinalized;
    public CsvVerify withDateFinalized(LocalDate dateFinalized) {
        this.dateFinalized = dateFinalized;
        return this;
    }
    
    /**
     * Date of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date_received")
    public LocalDate dateReceived;
    public CsvVerify withDateReceived(LocalDate dateReceived) {
        this.dateReceived = dateReceived;
        return this;
    }
    
    /**
     * Estimated price of the verify request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimated_price")
    public String estimatedPrice;
    public CsvVerify withEstimatedPrice(String estimatedPrice) {
        this.estimatedPrice = estimatedPrice;
        return this;
    }
    
    /**
     * Date of the first verify event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("first_event_date")
    public LocalDate firstEventDate;
    public CsvVerify withFirstEventDate(LocalDate firstEventDate) {
        this.firstEventDate = firstEventDate;
        return this;
    }
    
    /**
     * Request from this number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;
    public CsvVerify withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Date of the last verify event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("last_event_date")
    public LocalDate lastEventDate;
    public CsvVerify withLastEventDate(LocalDate lastEventDate) {
        this.lastEventDate = lastEventDate;
        return this;
    }
    
    /**
     * Locale used for the TTS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    public String locale;
    public CsvVerify withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * Network used to send the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;
    public CsvVerify withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Name of the network used to send the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network_name")
    public String networkName;
    public CsvVerify withNetworkName(String networkName) {
        this.networkName = networkName;
        return this;
    }
    
    /**
     * Type of phone number to which requests are sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number_type")
    public String numberType;
    public CsvVerify withNumberType(String numberType) {
        this.numberType = numberType;
        return this;
    }
    
    /**
     * Price of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Double price;
    public CsvVerify withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * Pricing model used for this request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pricing_model")
    public String pricingModel;
    public CsvVerify withPricingModel(String pricingModel) {
        this.pricingModel = pricingModel;
        return this;
    }
    
    /**
     * UUID of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("request_id")
    public String requestId;
    public CsvVerify withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    /**
     * Number of sms sent for this verify request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sms_event_count")
    public Long smsEventCount;
    public CsvVerify withSmsEventCount(Long smsEventCount) {
        this.smsEventCount = smsEventCount;
        return this;
    }
    
    /**
     * Request to this number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;
    public CsvVerify withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * Number of tts sent for this verify request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tts_event_count")
    public Long ttsEventCount;
    public CsvVerify withTtsEventCount(Long ttsEventCount) {
        this.ttsEventCount = ttsEventCount;
        return this;
    }
    
    /**
     * Status of the verify request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verify_status")
    public String verifyStatus;
    public CsvVerify withVerifyStatus(String verifyStatus) {
        this.verifyStatus = verifyStatus;
        return this;
    }
    
}
