/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedCluster } from "./nestedcluster";
import { NestedClusterGroup } from "./nestedclustergroup";
import { NestedDeviceRole } from "./nesteddevicerole";
import { NestedPlatform } from "./nestedplatform";
import { NestedRegion } from "./nestedregion";
import { NestedSite } from "./nestedsite";
import { NestedTenant } from "./nestedtenant";
import { NestedTenantGroup } from "./nestedtenantgroup";
import { Expose, Type } from "class-transformer";

export class ConfigContext extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: NestedClusterGroup })
  @Expose({ name: "cluster_groups" })
  @Type(() => NestedClusterGroup)
  clusterGroups?: NestedClusterGroup[];

  @SpeakeasyMetadata({ elemType: NestedCluster })
  @Expose({ name: "clusters" })
  @Type(() => NestedCluster)
  clusters?: NestedCluster[];

  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_active" })
  isActive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: NestedPlatform })
  @Expose({ name: "platforms" })
  @Type(() => NestedPlatform)
  platforms?: NestedPlatform[];

  @SpeakeasyMetadata({ elemType: NestedRegion })
  @Expose({ name: "regions" })
  @Type(() => NestedRegion)
  regions?: NestedRegion[];

  @SpeakeasyMetadata({ elemType: NestedDeviceRole })
  @Expose({ name: "roles" })
  @Type(() => NestedDeviceRole)
  roles?: NestedDeviceRole[];

  @SpeakeasyMetadata({ elemType: NestedSite })
  @Expose({ name: "sites" })
  @Type(() => NestedSite)
  sites?: NestedSite[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata({ elemType: NestedTenantGroup })
  @Expose({ name: "tenant_groups" })
  @Type(() => NestedTenantGroup)
  tenantGroups?: NestedTenantGroup[];

  @SpeakeasyMetadata({ elemType: NestedTenant })
  @Expose({ name: "tenants" })
  @Type(() => NestedTenant)
  tenants?: NestedTenant[];

  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight?: number;
}
