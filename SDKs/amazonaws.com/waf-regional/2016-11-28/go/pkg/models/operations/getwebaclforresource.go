// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetWebACLForResourceXAmzTargetEnum
type GetWebACLForResourceXAmzTargetEnum string

const (
	GetWebACLForResourceXAmzTargetEnumAwswafRegional20161128GetWebACLForResource GetWebACLForResourceXAmzTargetEnum = "AWSWAF_Regional_20161128.GetWebACLForResource"
)

func (e GetWebACLForResourceXAmzTargetEnum) ToPointer() *GetWebACLForResourceXAmzTargetEnum {
	return &e
}

func (e *GetWebACLForResourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_Regional_20161128.GetWebACLForResource":
		*e = GetWebACLForResourceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWebACLForResourceXAmzTargetEnum: %v", v)
	}
}

type GetWebACLForResourceRequest struct {
	GetWebACLForResourceRequest shared.GetWebACLForResourceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  GetWebACLForResourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetWebACLForResourceResponse struct {
	ContentType string
	// Success
	GetWebACLForResourceResponse *shared.GetWebACLForResourceResponse
	StatusCode                   int
	RawResponse                  *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
	// WAFUnavailableEntityException
	WAFUnavailableEntityException interface{}
}
