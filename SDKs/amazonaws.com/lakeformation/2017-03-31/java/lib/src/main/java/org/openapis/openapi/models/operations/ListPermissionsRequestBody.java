/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListPermissionsRequestBody {
    /**
     * The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CatalogId")
    public String catalogId;

    public ListPermissionsRequestBody withCatalogId(String catalogId) {
        this.catalogId = catalogId;
        return this;
    }
    
    /**
     * Indicates that related permissions should be included in the results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IncludeRelated")
    public String includeRelated;

    public ListPermissionsRequestBody withIncludeRelated(String includeRelated) {
        this.includeRelated = includeRelated;
        return this;
    }
    
    /**
     * The maximum number of results to return.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxResults")
    public Long maxResults;

    public ListPermissionsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * A continuation token, if this is not the first call to retrieve this list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;

    public ListPermissionsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * The Lake Formation principal. Supported principals are IAM users or IAM roles.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Principal")
    public ListPermissionsRequestBodyPrincipal principal;

    public ListPermissionsRequestBody withPrincipal(ListPermissionsRequestBodyPrincipal principal) {
        this.principal = principal;
        return this;
    }
    
    /**
     * A structure for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Resource")
    public ListPermissionsRequestBodyResource resource;

    public ListPermissionsRequestBody withResource(ListPermissionsRequestBodyResource resource) {
        this.resource = resource;
        return this;
    }
    
    /**
     * Specifies a resource type to filter the permissions returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceType")
    public ListPermissionsRequestBodyResourceTypeEnum resourceType;

    public ListPermissionsRequestBody withResourceType(ListPermissionsRequestBodyResourceTypeEnum resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    public ListPermissionsRequestBody(){}
}
