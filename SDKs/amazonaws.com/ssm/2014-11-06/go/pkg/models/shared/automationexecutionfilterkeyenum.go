// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AutomationExecutionFilterKeyEnum string

const (
	AutomationExecutionFilterKeyEnumDocumentNamePrefix  AutomationExecutionFilterKeyEnum = "DocumentNamePrefix"
	AutomationExecutionFilterKeyEnumExecutionStatus     AutomationExecutionFilterKeyEnum = "ExecutionStatus"
	AutomationExecutionFilterKeyEnumExecutionID         AutomationExecutionFilterKeyEnum = "ExecutionId"
	AutomationExecutionFilterKeyEnumParentExecutionID   AutomationExecutionFilterKeyEnum = "ParentExecutionId"
	AutomationExecutionFilterKeyEnumCurrentAction       AutomationExecutionFilterKeyEnum = "CurrentAction"
	AutomationExecutionFilterKeyEnumStartTimeBefore     AutomationExecutionFilterKeyEnum = "StartTimeBefore"
	AutomationExecutionFilterKeyEnumStartTimeAfter      AutomationExecutionFilterKeyEnum = "StartTimeAfter"
	AutomationExecutionFilterKeyEnumAutomationType      AutomationExecutionFilterKeyEnum = "AutomationType"
	AutomationExecutionFilterKeyEnumTagKey              AutomationExecutionFilterKeyEnum = "TagKey"
	AutomationExecutionFilterKeyEnumTargetResourceGroup AutomationExecutionFilterKeyEnum = "TargetResourceGroup"
	AutomationExecutionFilterKeyEnumAutomationSubtype   AutomationExecutionFilterKeyEnum = "AutomationSubtype"
	AutomationExecutionFilterKeyEnumOpsItemID           AutomationExecutionFilterKeyEnum = "OpsItemId"
)

func (e AutomationExecutionFilterKeyEnum) ToPointer() *AutomationExecutionFilterKeyEnum {
	return &e
}

func (e *AutomationExecutionFilterKeyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DocumentNamePrefix":
		fallthrough
	case "ExecutionStatus":
		fallthrough
	case "ExecutionId":
		fallthrough
	case "ParentExecutionId":
		fallthrough
	case "CurrentAction":
		fallthrough
	case "StartTimeBefore":
		fallthrough
	case "StartTimeAfter":
		fallthrough
	case "AutomationType":
		fallthrough
	case "TagKey":
		fallthrough
	case "TargetResourceGroup":
		fallthrough
	case "AutomationSubtype":
		fallthrough
	case "OpsItemId":
		*e = AutomationExecutionFilterKeyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AutomationExecutionFilterKeyEnum: %v", v)
	}
}
