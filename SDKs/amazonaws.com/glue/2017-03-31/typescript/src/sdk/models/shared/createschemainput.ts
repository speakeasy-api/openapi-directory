/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompatibilityEnum } from "./compatibilityenum";
import { DataFormatEnum } from "./dataformatenum";
import { RegistryId } from "./registryid";
import { Expose, Type } from "class-transformer";

export class CreateSchemaInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Compatibility" })
  compatibility?: CompatibilityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DataFormat" })
  dataFormat: DataFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RegistryId" })
  @Type(() => RegistryId)
  registryId?: RegistryId;

  @SpeakeasyMetadata()
  @Expose({ name: "SchemaDefinition" })
  schemaDefinition?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SchemaName" })
  schemaName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
