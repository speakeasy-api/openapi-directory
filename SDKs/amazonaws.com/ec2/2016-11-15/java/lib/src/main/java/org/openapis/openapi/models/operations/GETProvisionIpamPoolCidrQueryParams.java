/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETProvisionIpamPoolCidrQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETProvisionIpamPoolCidrActionEnum action;
    public GETProvisionIpamPoolCidrQueryParams withAction(GETProvisionIpamPoolCidrActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The CIDR you want to assign to the IPAM pool. Either "NetmaskLength" or "Cidr" is required. This value will be null if you specify "NetmaskLength" and will be filled in during the provisioning process.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Cidr")
    public String cidr;
    public GETProvisionIpamPoolCidrQueryParams withCidr(String cidr) {
        this.cidr = cidr;
        return this;
    }
    
    /**
     * A signed document that proves that you are authorized to bring a specified IP address range to Amazon using BYOIP. This option applies to public pools only.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CidrAuthorizationContext")
    public GETProvisionIpamPoolCidrCidrAuthorizationContext cidrAuthorizationContext;
    public GETProvisionIpamPoolCidrQueryParams withCidrAuthorizationContext(GETProvisionIpamPoolCidrCidrAuthorizationContext cidrAuthorizationContext) {
        this.cidrAuthorizationContext = cidrAuthorizationContext;
        return this;
    }
    
    /**
     * A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html"&gt;Ensuring Idempotency&lt;/a&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientToken")
    public String clientToken;
    public GETProvisionIpamPoolCidrQueryParams withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETProvisionIpamPoolCidrQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The ID of the IPAM pool to which you want to assign a CIDR.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=IpamPoolId")
    public String ipamPoolId;
    public GETProvisionIpamPoolCidrQueryParams withIpamPoolId(String ipamPoolId) {
        this.ipamPoolId = ipamPoolId;
        return this;
    }
    
    /**
     * The netmask length of the CIDR you'd like to provision to a pool. Can be used for provisioning Amazon-provided IPv6 CIDRs to top-level pools and for provisioning CIDRs to pools with source pools. Cannot be used to provision BYOIP CIDRs to top-level pools. Either "NetmaskLength" or "Cidr" is required.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NetmaskLength")
    public Long netmaskLength;
    public GETProvisionIpamPoolCidrQueryParams withNetmaskLength(Long netmaskLength) {
        this.netmaskLength = netmaskLength;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETProvisionIpamPoolCidrVersionEnum version;
    public GETProvisionIpamPoolCidrQueryParams withVersion(GETProvisionIpamPoolCidrVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
