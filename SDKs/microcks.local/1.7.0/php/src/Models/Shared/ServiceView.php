<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ServiceView - Aggregate bean for grouping a Service an its messages pairs
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ServiceView
{
    /**
     * Map of messages for this Service. Keys are operation name, values are array of messages for this operation
     * 
     * @var array<string, array<mixed>> $messagesMap
     */
	#[\JMS\Serializer\Annotation\SerializedName('messagesMap')]
    #[\JMS\Serializer\Annotation\Type('array<string, array<mixed>>')]
    public array $messagesMap;
    
    /**
     * Represents a Service or API definition as registred into Microcks repository
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Service $service
     */
	#[\JMS\Serializer\Annotation\SerializedName('service')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Service')]
    public Service $service;
    
	public function __construct()
	{
		$this->messagesMap = [];
		$this->service = new \OpenAPI\OpenAPI\Models\Shared\Service();
	}
}
