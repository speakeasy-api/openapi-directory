// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type StoreStatsConversions struct {
	// Total add to cart conversions.
	AddedToCart *float32 `json:"added_to_cart,omitempty"`
	// Total checkout conversions.
	Checkout *float32 `json:"checkout,omitempty"`
	// Total paid conversions.
	Paid *float32 `json:"paid,omitempty"`
}

type StoreStatsNewVsReturningCustomers struct {
	// Global percentage of new vs returning customers.
	Global *int64 `json:"global,omitempty"`
	// Numbers of new and returning customers per day.
	PerDay []NewVsReturning `json:"per_day,omitempty"`
}

type StoreStatsNewVsReturningOrders struct {
	// Global percentage of new vs returning customers.
	Global *int64 `json:"global,omitempty"`
	// Numbers of new and returning customers per day.
	PerDay []NewVsReturning `json:"per_day,omitempty"`
}

type StoreStatsOrders struct {
	// Average order amount.
	Average *float32 `json:"average,omitempty"`
	// Total number of orders.
	Count *int64 `json:"count,omitempty"`
	// Orders data.
	Data []OrdersData `json:"data,omitempty"`
	// Total amount from all orders.
	Total *float32 `json:"total,omitempty"`
}

type StoreStatsRegionOrders struct {
	// Can be 'regions' when orders are specific of 1 country or 'auto'.
	DisplayMode *string `json:"display_mode,omitempty"`
	// Orders per country and region(inside the country).
	RegionsOrders []CountryOrders `json:"regions_orders,omitempty"`
}

type StoreStats struct {
	// Top 10 best sold products.
	BestSold    []BestSold             `json:"best_sold,omitempty"`
	Conversions *StoreStatsConversions `json:"conversions,omitempty"`
	// Store currency.
	Currency *string `json:"currency,omitempty"`
	// Visits per day.
	DailyVisits []DailyVisits `json:"daily_visits,omitempty"`
	// Statistics start date.
	From                    *string                            `json:"from,omitempty"`
	NewVsReturningCustomers *StoreStatsNewVsReturningCustomers `json:"new_vs_returning_customers,omitempty"`
	NewVsReturningOrders    *StoreStatsNewVsReturningOrders    `json:"new_vs_returning_orders,omitempty"`
	Orders                  *StoreStatsOrders                  `json:"orders,omitempty"`
	// Store payment methods and their frequency.
	PaymentMethods []PaymentMethodFreq `json:"payment_methods,omitempty"`
	// Top 10 referrer sources and their frequency.
	Referrers    []Referrer              `json:"referrers,omitempty"`
	RegionOrders *StoreStatsRegionOrders `json:"region_orders,omitempty"`
	// Number of times each search was conducted under the form of an aggregation query.
	SearchFrequenciesAll []interface{} `json:"search_frequencies_all,omitempty"`
	// Number of times each search with zero results was conducted under the form of an aggregation query.
	SearchFrequenciesWithoutResults []interface{} `json:"search_frequencies_without_results,omitempty"`
	// Store shipping methods and their frequency.
	ShippingMethods []ShippingMethodFreq `json:"shipping_methods,omitempty"`
	// Statistics end date.
	To *string `json:"to,omitempty"`
	// Type of store traffic and its frequency.
	TrafficType []TrafficType `json:"traffic_type,omitempty"`
	// Total number of visits.
	Visits *int64 `json:"visits,omitempty"`
}
