// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum - Specifies the network bandwidth tier for the NodePool for traffic to external/public IP addresses.
type NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum string

const (
	NetworkPerformanceConfigExternalIPEgressBandwidthTierEnumTierUnspecified NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum = "TIER_UNSPECIFIED"
	NetworkPerformanceConfigExternalIPEgressBandwidthTierEnumTier1           NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum = "TIER_1"
)

func (e NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum) ToPointer() *NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum {
	return &e
}

func (e *NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TIER_UNSPECIFIED":
		fallthrough
	case "TIER_1":
		*e = NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum: %v", v)
	}
}

// NetworkPerformanceConfigTotalEgressBandwidthTierEnum - Specifies the total network bandwidth tier for the NodePool.
type NetworkPerformanceConfigTotalEgressBandwidthTierEnum string

const (
	NetworkPerformanceConfigTotalEgressBandwidthTierEnumTierUnspecified NetworkPerformanceConfigTotalEgressBandwidthTierEnum = "TIER_UNSPECIFIED"
	NetworkPerformanceConfigTotalEgressBandwidthTierEnumTier1           NetworkPerformanceConfigTotalEgressBandwidthTierEnum = "TIER_1"
)

func (e NetworkPerformanceConfigTotalEgressBandwidthTierEnum) ToPointer() *NetworkPerformanceConfigTotalEgressBandwidthTierEnum {
	return &e
}

func (e *NetworkPerformanceConfigTotalEgressBandwidthTierEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TIER_UNSPECIFIED":
		fallthrough
	case "TIER_1":
		*e = NetworkPerformanceConfigTotalEgressBandwidthTierEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NetworkPerformanceConfigTotalEgressBandwidthTierEnum: %v", v)
	}
}

// NetworkPerformanceConfig - Configuration of all network bandwidth tiers
type NetworkPerformanceConfig struct {
	// Specifies the network bandwidth tier for the NodePool for traffic to external/public IP addresses.
	ExternalIPEgressBandwidthTier *NetworkPerformanceConfigExternalIPEgressBandwidthTierEnum `json:"externalIpEgressBandwidthTier,omitempty"`
	// Specifies the total network bandwidth tier for the NodePool.
	TotalEgressBandwidthTier *NetworkPerformanceConfigTotalEgressBandwidthTierEnum `json:"totalEgressBandwidthTier,omitempty"`
}
