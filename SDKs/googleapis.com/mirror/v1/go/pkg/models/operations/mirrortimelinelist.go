// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type MirrorTimelineListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type MirrorTimelineListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type MirrorTimelineListSecurity struct {
	Option1 *MirrorTimelineListSecurityOption1 `security:"option"`
	Option2 *MirrorTimelineListSecurityOption2 `security:"option"`
}

// MirrorTimelineListOrderByEnum - Controls the order in which timeline items are returned.
type MirrorTimelineListOrderByEnum string

const (
	MirrorTimelineListOrderByEnumDisplayTime MirrorTimelineListOrderByEnum = "displayTime"
	MirrorTimelineListOrderByEnumWriteTime   MirrorTimelineListOrderByEnum = "writeTime"
)

func (e *MirrorTimelineListOrderByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "displayTime":
		fallthrough
	case "writeTime":
		*e = MirrorTimelineListOrderByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MirrorTimelineListOrderByEnum: %s", s)
	}
}

type MirrorTimelineListRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// If provided, only items with the given bundleId will be returned.
	BundleID *string `queryParam:"style=form,explode=true,name=bundleId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// If true, tombstone records for deleted items will be returned.
	IncludeDeleted *bool `queryParam:"style=form,explode=true,name=includeDeleted"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The maximum number of items to include in the response, used for paging.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Controls the order in which timeline items are returned.
	OrderBy *MirrorTimelineListOrderByEnum `queryParam:"style=form,explode=true,name=orderBy"`
	// Token for the page of results to return.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// If true, only pinned items will be returned.
	PinnedOnly *bool `queryParam:"style=form,explode=true,name=pinnedOnly"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// If provided, only items with the given sourceItemId will be returned.
	SourceItemID *string `queryParam:"style=form,explode=true,name=sourceItemId"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type MirrorTimelineListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
