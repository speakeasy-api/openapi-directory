// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeImportImageTasksResultImportImageTasksBootModeEnum - The boot mode of the virtual machine.
type DescribeImportImageTasksResultImportImageTasksBootModeEnum string

const (
	DescribeImportImageTasksResultImportImageTasksBootModeEnumLegacyBios    DescribeImportImageTasksResultImportImageTasksBootModeEnum = "legacy-bios"
	DescribeImportImageTasksResultImportImageTasksBootModeEnumUefi          DescribeImportImageTasksResultImportImageTasksBootModeEnum = "uefi"
	DescribeImportImageTasksResultImportImageTasksBootModeEnumUefiPreferred DescribeImportImageTasksResultImportImageTasksBootModeEnum = "uefi-preferred"
)

func (e DescribeImportImageTasksResultImportImageTasksBootModeEnum) ToPointer() *DescribeImportImageTasksResultImportImageTasksBootModeEnum {
	return &e
}

func (e *DescribeImportImageTasksResultImportImageTasksBootModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "legacy-bios":
		fallthrough
	case "uefi":
		fallthrough
	case "uefi-preferred":
		*e = DescribeImportImageTasksResultImportImageTasksBootModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeImportImageTasksResultImportImageTasksBootModeEnum: %v", v)
	}
}

// DescribeImportImageTasksResultImportImageTasksLicenseSpecifications -  The response information for license configurations.
type DescribeImportImageTasksResultImportImageTasksLicenseSpecifications struct {
	LicenseConfigurationArn *string
}

// DescribeImportImageTasksResultImportImageTasksSnapshotDetailsUserBucket - The Amazon S3 bucket for the disk image.
type DescribeImportImageTasksResultImportImageTasksSnapshotDetailsUserBucket struct {
	S3Bucket *string
	S3Key    *string
}

// DescribeImportImageTasksResultImportImageTasksSnapshotDetails - Describes the snapshot created from the imported disk.
type DescribeImportImageTasksResultImportImageTasksSnapshotDetails struct {
	Description   *string
	DeviceName    *string
	DiskImageSize *float64
	Format        *string
	Progress      *string
	SnapshotID    *string
	Status        *string
	StatusMessage *string
	URL           *string
	UserBucket    *DescribeImportImageTasksResultImportImageTasksSnapshotDetailsUserBucket
}

// DescribeImportImageTasksResultImportImageTasksTags - Describes a tag.
type DescribeImportImageTasksResultImportImageTasksTags struct {
	Key   *string
	Value *string
}

// DescribeImportImageTasksResultImportImageTasks - Describes an import image task.
type DescribeImportImageTasksResultImportImageTasks struct {
	Architecture          *string
	BootMode              *DescribeImportImageTasksResultImportImageTasksBootModeEnum
	Description           *string
	Encrypted             *bool
	Hypervisor            *string
	ImageID               *string
	ImportTaskID          *string
	KmsKeyID              *string
	LicenseSpecifications []DescribeImportImageTasksResultImportImageTasksLicenseSpecifications
	LicenseType           *string
	Platform              *string
	Progress              *string
	SnapshotDetails       []DescribeImportImageTasksResultImportImageTasksSnapshotDetails
	Status                *string
	StatusMessage         *string
	Tags                  []DescribeImportImageTasksResultImportImageTasksTags
	UsageOperation        *string
}

// DescribeImportImageTasksResult - Success
type DescribeImportImageTasksResult struct {
	ImportImageTasks []DescribeImportImageTasksResultImportImageTasks
	NextToken        *string
}
