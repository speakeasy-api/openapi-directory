// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type ActivityEntryForAPIContractEditEventEnum string

const (
	ActivityEntryForAPIContractEditEventEnumCreated  ActivityEntryForAPIContractEditEventEnum = "Created"
	ActivityEntryForAPIContractEditEventEnumUpdated  ActivityEntryForAPIContractEditEventEnum = "Updated"
	ActivityEntryForAPIContractEditEventEnumDeleted  ActivityEntryForAPIContractEditEventEnum = "Deleted"
	ActivityEntryForAPIContractEditEventEnumRestored ActivityEntryForAPIContractEditEventEnum = "Restored"
)

func (e *ActivityEntryForAPIContractEditEventEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Created":
		fallthrough
	case "Updated":
		fallthrough
	case "Deleted":
		fallthrough
	case "Restored":
		*e = ActivityEntryForAPIContractEditEventEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivityEntryForAPIContractEditEventEnum: %s", s)
	}
}

type ActivityEntryForAPIContract struct {
	ArchivedVersion *ArchivedObjectVersionForAPIContract      `json:"archivedVersion,omitempty"`
	Author          *UserForAPIContract                       `json:"author,omitempty"`
	CreateDate      *time.Time                                `json:"createDate,omitempty"`
	EditEvent       *ActivityEntryForAPIContractEditEventEnum `json:"editEvent,omitempty"`
	Entry           *EntryForAPIContract                      `json:"entry,omitempty"`
}
