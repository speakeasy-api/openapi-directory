/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostPortfolioOptimizationMinimumUlcerIndexRequestBodyAssets extends SpeakeasyBase {
  /**
   * assetPrices[t] is the price of the asset at the time t
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetPrices" })
  assetPrices: number[];
}

export class PostPortfolioOptimizationMinimumUlcerIndexRequestBodyConstraints extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assetsGroups" })
  assetsGroups?: number[][];

  /**
   * assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsGroupsMatrix" })
  assetsGroupsMatrix?: number[][];

  /**
   * maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumAssetsGroupsWeights" })
  maximumAssetsGroupsWeights?: number[];

  /**
   * maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumAssetsWeights" })
  maximumAssetsWeights?: number[];

  /**
   * The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumPortfolioExposure" })
  maximumPortfolioExposure?: number;

  /**
   * minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumAssetsWeights" })
  minimumAssetsWeights?: number[];

  /**
   * The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumPortfolioExposure" })
  minimumPortfolioExposure?: number;
}

export class PostPortfolioOptimizationMinimumUlcerIndexRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: PostPortfolioOptimizationMinimumUlcerIndexRequestBodyAssets,
  })
  @Expose({ name: "assets" })
  @Type(() => PostPortfolioOptimizationMinimumUlcerIndexRequestBodyAssets)
  assets: PostPortfolioOptimizationMinimumUlcerIndexRequestBodyAssets[];

  @SpeakeasyMetadata()
  @Expose({ name: "constraints" })
  @Type(() => PostPortfolioOptimizationMinimumUlcerIndexRequestBodyConstraints)
  constraints?: PostPortfolioOptimizationMinimumUlcerIndexRequestBodyConstraints;
}

/**
 * OK
 */
export class PostPortfolioOptimizationMinimumUlcerIndex200ApplicationJSON extends SpeakeasyBase {
  /**
   * assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsWeights" })
  assetsWeights: number[];
}

export class PostPortfolioOptimizationMinimumUlcerIndexResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postPortfolioOptimizationMinimumUlcerIndex200ApplicationJSONObject?: PostPortfolioOptimizationMinimumUlcerIndex200ApplicationJSON;
}
