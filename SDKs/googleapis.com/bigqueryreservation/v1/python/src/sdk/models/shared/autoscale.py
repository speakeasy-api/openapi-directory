"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Autoscale:
    r"""Auto scaling settings."""
    
    current_slots: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentSlots'), 'exclude': lambda f: f is None }})
    r"""Output only. The slot capacity added to this reservation when autoscale happens. Will be between [0, max_slots]."""  
    max_slots: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxSlots'), 'exclude': lambda f: f is None }})
    r"""Number of slots to be scaled when needed."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoscaleInput:
    r"""Auto scaling settings."""
    
    max_slots: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxSlots'), 'exclude': lambda f: f is None }})
    r"""Number of slots to be scaled when needed."""  
    