"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttendancePeriodsResponseDataAttributes:
    
    break_: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('break') }})  
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment') }})  
    date_: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})  
    employee: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee') }})  
    end_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_time') }})  
    is_holiday: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_holiday') }})  
    is_on_time_off: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_on_time_off') }})  
    start_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_time') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttendancePeriodsResponseData:
    
    attributes: list[AttendancePeriodsResponseDataAttributes] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributes') }})  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttendancePeriodsResponse:
    
    data: list[AttendancePeriodsResponseData] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})  
    success: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success') }})  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limit'), 'exclude': lambda f: f is None }})  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offset'), 'exclude': lambda f: f is None }})  
    