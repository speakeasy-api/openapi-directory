// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum - Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
type GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum string

const (
	GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnumIntegratedSystemUnspecified GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum = "INTEGRATED_SYSTEM_UNSPECIFIED"
	GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnumBigquery                    GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum = "BIGQUERY"
	GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnumCloudPubsub                 GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum = "CLOUD_PUBSUB"
)

func (e *GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INTEGRATED_SYSTEM_UNSPECIFIED":
		fallthrough
	case "BIGQUERY":
		fallthrough
	case "CLOUD_PUBSUB":
		*e = GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum: %s", s)
	}
}

// GoogleCloudDatacatalogV1beta1EntryTypeEnum - The type of the entry. Only used for Entries with types in the EntryType enum.
type GoogleCloudDatacatalogV1beta1EntryTypeEnum string

const (
	GoogleCloudDatacatalogV1beta1EntryTypeEnumEntryTypeUnspecified GoogleCloudDatacatalogV1beta1EntryTypeEnum = "ENTRY_TYPE_UNSPECIFIED"
	GoogleCloudDatacatalogV1beta1EntryTypeEnumTable                GoogleCloudDatacatalogV1beta1EntryTypeEnum = "TABLE"
	GoogleCloudDatacatalogV1beta1EntryTypeEnumModel                GoogleCloudDatacatalogV1beta1EntryTypeEnum = "MODEL"
	GoogleCloudDatacatalogV1beta1EntryTypeEnumDataStream           GoogleCloudDatacatalogV1beta1EntryTypeEnum = "DATA_STREAM"
	GoogleCloudDatacatalogV1beta1EntryTypeEnumFileset              GoogleCloudDatacatalogV1beta1EntryTypeEnum = "FILESET"
)

func (e *GoogleCloudDatacatalogV1beta1EntryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENTRY_TYPE_UNSPECIFIED":
		fallthrough
	case "TABLE":
		fallthrough
	case "MODEL":
		fallthrough
	case "DATA_STREAM":
		fallthrough
	case "FILESET":
		*e = GoogleCloudDatacatalogV1beta1EntryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDatacatalogV1beta1EntryTypeEnum: %s", s)
	}
}

// GoogleCloudDatacatalogV1beta1Entry - Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.
type GoogleCloudDatacatalogV1beta1Entry struct {
	// Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding
	BigqueryDateShardedSpec *GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec `json:"bigqueryDateShardedSpec,omitempty"`
	// Describes a BigQuery table.
	BigqueryTableSpec *GoogleCloudDatacatalogV1beta1BigQueryTableSpec `json:"bigqueryTableSpec,omitempty"`
	// Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.
	Description *string `json:"description,omitempty"`
	// Display information such as title and description. A short name to identify the entry, for example, "Analytics Data - Jan 2011". Default value is an empty string.
	DisplayName *string `json:"displayName,omitempty"`
	// Describes a Cloud Storage fileset entry.
	GcsFilesetSpec *GoogleCloudDatacatalogV1beta1GcsFilesetSpec `json:"gcsFilesetSpec,omitempty"`
	// Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
	IntegratedSystem *GoogleCloudDatacatalogV1beta1EntryIntegratedSystemEnum `json:"integratedSystem,omitempty"`
	// The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.
	LinkedResource *string `json:"linkedResource,omitempty"`
	// Output only. The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name.
	Name *string `json:"name,omitempty"`
	// Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
	Schema *GoogleCloudDatacatalogV1beta1Schema `json:"schema,omitempty"`
	// Timestamps about this resource according to a particular system.
	SourceSystemTimestamps *GoogleCloudDatacatalogV1beta1SystemTimestamps `json:"sourceSystemTimestamps,omitempty"`
	// The type of the entry. Only used for Entries with types in the EntryType enum.
	Type *GoogleCloudDatacatalogV1beta1EntryTypeEnum `json:"type,omitempty"`
	// The set of all usage signals that we store in Data Catalog.
	UsageSignal *GoogleCloudDatacatalogV1beta1UsageSignal `json:"usageSignal,omitempty"`
	// This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
	UserSpecifiedSystem *string `json:"userSpecifiedSystem,omitempty"`
	// Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example "my_special_type". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`.
	UserSpecifiedType *string `json:"userSpecifiedType,omitempty"`
}

// GoogleCloudDatacatalogV1beta1EntryInput - Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.
type GoogleCloudDatacatalogV1beta1EntryInput struct {
	// Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.
	Description *string `json:"description,omitempty"`
	// Display information such as title and description. A short name to identify the entry, for example, "Analytics Data - Jan 2011". Default value is an empty string.
	DisplayName *string `json:"displayName,omitempty"`
	// Describes a Cloud Storage fileset entry.
	GcsFilesetSpec *GoogleCloudDatacatalogV1beta1GcsFilesetSpecInput `json:"gcsFilesetSpec,omitempty"`
	// The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string.
	LinkedResource *string `json:"linkedResource,omitempty"`
	// Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
	Schema *GoogleCloudDatacatalogV1beta1Schema `json:"schema,omitempty"`
	// Timestamps about this resource according to a particular system.
	SourceSystemTimestamps *GoogleCloudDatacatalogV1beta1SystemTimestampsInput `json:"sourceSystemTimestamps,omitempty"`
	// The type of the entry. Only used for Entries with types in the EntryType enum.
	Type *GoogleCloudDatacatalogV1beta1EntryTypeEnum `json:"type,omitempty"`
	// The set of all usage signals that we store in Data Catalog.
	UsageSignal *GoogleCloudDatacatalogV1beta1UsageSignal `json:"usageSignal,omitempty"`
	// This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
	UserSpecifiedSystem *string `json:"userSpecifiedSystem,omitempty"`
	// Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example "my_special_type". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`.
	UserSpecifiedType *string `json:"userSpecifiedType,omitempty"`
}
