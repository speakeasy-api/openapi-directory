// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type Area120tablesTablesRowsPatchSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type Area120tablesTablesRowsPatchSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type Area120tablesTablesRowsPatchSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type Area120tablesTablesRowsPatchSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type Area120tablesTablesRowsPatchSecurity struct {
	Option1 *Area120tablesTablesRowsPatchSecurityOption1 `security:"option"`
	Option2 *Area120tablesTablesRowsPatchSecurityOption2 `security:"option"`
	Option3 *Area120tablesTablesRowsPatchSecurityOption3 `security:"option"`
	Option4 *Area120tablesTablesRowsPatchSecurityOption4 `security:"option"`
}

// Area120tablesTablesRowsPatchViewEnum - Optional. Column key to use for values in the row. Defaults to user entered name.
type Area120tablesTablesRowsPatchViewEnum string

const (
	Area120tablesTablesRowsPatchViewEnumViewUnspecified Area120tablesTablesRowsPatchViewEnum = "VIEW_UNSPECIFIED"
	Area120tablesTablesRowsPatchViewEnumColumnIDView    Area120tablesTablesRowsPatchViewEnum = "COLUMN_ID_VIEW"
)

func (e *Area120tablesTablesRowsPatchViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VIEW_UNSPECIFIED":
		fallthrough
	case "COLUMN_ID_VIEW":
		*e = Area120tablesTablesRowsPatchViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for Area120tablesTablesRowsPatchViewEnum: %s", s)
	}
}

type Area120tablesTablesRowsPatchRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	Row         *shared.Row       `request:"mediaType=application/json"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row.
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The list of fields to update.
	UpdateMask *string `queryParam:"style=form,explode=true,name=updateMask"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Optional. Column key to use for values in the row. Defaults to user entered name.
	View *Area120tablesTablesRowsPatchViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type Area120tablesTablesRowsPatchResponse struct {
	ContentType string
	// Successful response
	Row         *shared.Row
	StatusCode  int
	RawResponse *http.Response
}
