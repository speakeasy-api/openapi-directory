<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateNetworkSwitchAccessPolicyRequestBodyRadiusCriticalAuth - Critical auth settings for when authentication is rejected by the RADIUS server
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateNetworkSwitchAccessPolicyRequestBodyRadiusCriticalAuth
{
    /**
     * VLAN that clients who use data will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
     * 
     * @var ?int $dataVlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataVlanId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dataVlanId = null;
    
    /**
     * Enable to suspend port bounce when RADIUS servers are unreachable
     * 
     * @var ?bool $suspendPortBounce
     */
	#[\JMS\Serializer\Annotation\SerializedName('suspendPortBounce')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $suspendPortBounce = null;
    
    /**
     * VLAN that clients who use voice will be placed on when RADIUS authentication fails. Will be null if hostMode is Multi-Auth
     * 
     * @var ?int $voiceVlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('voiceVlanId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $voiceVlanId = null;
    
	public function __construct()
	{
		$this->dataVlanId = null;
		$this->suspendPortBounce = null;
		$this->voiceVlanId = null;
	}
}
