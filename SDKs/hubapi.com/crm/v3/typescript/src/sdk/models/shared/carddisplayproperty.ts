/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DisplayOption } from "./displayoption";
import { Expose, Type } from "class-transformer";

/**
 * Type of data represented by this property.
 */
export enum CardDisplayPropertyDataTypeEnum {
  Boolean = "BOOLEAN",
  Currency = "CURRENCY",
  Date = "DATE",
  Datetime = "DATETIME",
  Email = "EMAIL",
  Link = "LINK",
  Numeric = "NUMERIC",
  String = "STRING",
  Status = "STATUS",
}

/**
 * Definition for a card display property.
 */
export class CardDisplayProperty extends SpeakeasyBase {
  /**
   * Type of data represented by this property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  dataType: CardDisplayPropertyDataTypeEnum;

  /**
   * The label for this property as you'd like it displayed to users.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: string;

  /**
   * An internal identifier for this property. This value must be unique TODO.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * An array of available options that can be displayed. Only used in when `dataType` is `STATUS`.
   */
  @SpeakeasyMetadata({ elemType: DisplayOption })
  @Expose({ name: "options" })
  @Type(() => DisplayOption)
  options: DisplayOption[];
}
