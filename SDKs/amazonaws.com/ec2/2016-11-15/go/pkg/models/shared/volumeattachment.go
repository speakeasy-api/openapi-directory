// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// VolumeAttachmentStateEnum - The attachment state of the volume.
type VolumeAttachmentStateEnum string

const (
	VolumeAttachmentStateEnumAttaching VolumeAttachmentStateEnum = "attaching"
	VolumeAttachmentStateEnumAttached  VolumeAttachmentStateEnum = "attached"
	VolumeAttachmentStateEnumDetaching VolumeAttachmentStateEnum = "detaching"
	VolumeAttachmentStateEnumDetached  VolumeAttachmentStateEnum = "detached"
	VolumeAttachmentStateEnumBusy      VolumeAttachmentStateEnum = "busy"
)

func (e VolumeAttachmentStateEnum) ToPointer() *VolumeAttachmentStateEnum {
	return &e
}

func (e *VolumeAttachmentStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "attaching":
		fallthrough
	case "attached":
		fallthrough
	case "detaching":
		fallthrough
	case "detached":
		fallthrough
	case "busy":
		*e = VolumeAttachmentStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VolumeAttachmentStateEnum: %v", v)
	}
}

// VolumeAttachment - Describes volume attachment details.
type VolumeAttachment struct {
	AttachTime          *time.Time
	DeleteOnTermination *bool
	Device              *string
	InstanceID          *string
	State               *VolumeAttachmentStateEnum
	VolumeID            *string
}
