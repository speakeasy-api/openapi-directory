/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleMapsPlayablelocationsV3Impression - Encapsulates impression event details.
 */
public class GoogleMapsPlayablelocationsV3Impression {
    /**
     * An arbitrary, developer-defined type identifier for each type of game object used in your game. Since players interact with differ types of game objects in different ways, this field allows you to segregate impression data by type for analysis. You should assign a unique `game_object_type` ID to represent a distinct type of game object in your game. For example, 1=monster location, 2=powerup location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gameObjectType")
    public Integer gameObjectType;

    public GoogleMapsPlayablelocationsV3Impression withGameObjectType(Integer gameObjectType) {
        this.gameObjectType = gameObjectType;
        return this;
    }
    
    /**
     * Required. The type of impression event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("impressionType")
    public GoogleMapsPlayablelocationsV3ImpressionImpressionTypeEnum impressionType;

    public GoogleMapsPlayablelocationsV3Impression withImpressionType(GoogleMapsPlayablelocationsV3ImpressionImpressionTypeEnum impressionType) {
        this.impressionType = impressionType;
        return this;
    }
    
    /**
     * Required. The name of the playable location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationName")
    public String locationName;

    public GoogleMapsPlayablelocationsV3Impression withLocationName(String locationName) {
        this.locationName = locationName;
        return this;
    }
    
    public GoogleMapsPlayablelocationsV3Impression(){}
}
