<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Webhook - Webhook is a user-defined callback, which can be maintained via API. CallFire will send POST request to a client's endpoint defined in webhook once one of assigned events is triggered. See [webhooks guide](https://developers.callfire.com/webhooks-guide.html) for more information about CallFire Webhooks API.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Webhook
{
    /**
     * URL that webhook will send POST to on resource event trigger
     * 
     * @var ?string $callback
     */
	#[\JMS\Serializer\Annotation\SerializedName('callback')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $callback = null;
    
    /**
     * A time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000
     * 
     * @var ?int $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAt = null;
    
    /**
     * A parameter which allows the webhook to send requests to unknown ssl endpoints (ssl certificate verification is disabled)
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * Comma separated list of events on resource that will trigger callbacks (ex: STARTED, STOPPED, FINISHED, etc...). 
     * 
     * @var ?array<string> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
    /**
     * ~
     * 
     * @var ?int $expiresAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiresAt')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $expiresAt = null;
    
    /**
     * A limit callback response to a particular fields
     * 
     * @var ?string $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fields = null;
    
    /**
     * An id of a webhook
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * A name of a webhook
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * A parameter which allows the webhook to send requests to unknown ssl endpoints (ssl certificate verification is disabled)
     * 
     * @var ?bool $nonStrictSsl
     */
	#[\JMS\Serializer\Annotation\SerializedName('nonStrictSsl')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $nonStrictSsl = null;
    
    /**
     * A resource name that webhook is watching events on. Use GET /webhooks/resources to determine resources and events available (ex: InboundCall, OutboundCall, InboundText, OutboundText, CallBroadcast, TextBroadcast, etc...)
     * 
     * @var ?string $resource
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resource = null;
    
    /**
     * Webhook secret token which is used as a signing key to HmacSHA1 hash of json payload which is returned in 'X-CallFire-Signature' header. This header can be used to verify callback POST is coming from CallFire. See [security guide](https://developers.callfire.com/security-guide.html)
     * 
     * @var ?string $secret
     */
	#[\JMS\Serializer\Annotation\SerializedName('secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secret = null;
    
    /**
     * If true is set then webhook triggers only once. Afterwards the webhook will be deleted
     * 
     * @var ?bool $singleUse
     */
	#[\JMS\Serializer\Annotation\SerializedName('singleUse')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $singleUse = null;
    
    /**
     * A time when the given resource was updated, formatted in unix time milliseconds (read only). Example: 1473781817000
     * 
     * @var ?int $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedAt')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $updatedAt = null;
    
	public function __construct()
	{
		$this->callback = null;
		$this->createdAt = null;
		$this->enabled = null;
		$this->events = null;
		$this->expiresAt = null;
		$this->fields = null;
		$this->id = null;
		$this->name = null;
		$this->nonStrictSsl = null;
		$this->resource = null;
		$this->secret = null;
		$this->singleUse = null;
		$this->updatedAt = null;
	}
}
