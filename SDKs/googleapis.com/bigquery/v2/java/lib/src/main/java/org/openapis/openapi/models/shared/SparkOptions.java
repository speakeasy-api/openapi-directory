/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SparkOptions - Options for a user-defined Spark routine.
 */
public class SparkOptions {
    /**
     * Archive files to be extracted into the working directory of each executor. For more information about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/index.html).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archiveUris")
    public String[] archiveUris;
    public SparkOptions withArchiveUris(String[] archiveUris) {
        this.archiveUris = archiveUris;
        return this;
    }
    
    /**
     * Fully qualified name of the user-provided Spark connection object. Format: ```"projects/{project_id}/locations/{location_id}/connections/{connection_id}"```
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connection")
    public String connection;
    public SparkOptions withConnection(String connection) {
        this.connection = connection;
        return this;
    }
    
    /**
     * Custom container image for the runtime environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerImage")
    public String containerImage;
    public SparkOptions withContainerImage(String containerImage) {
        this.containerImage = containerImage;
        return this;
    }
    
    /**
     * Files to be placed in the working directory of each executor. For more information about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/index.html).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileUris")
    public String[] fileUris;
    public SparkOptions withFileUris(String[] fileUris) {
        this.fileUris = fileUris;
        return this;
    }
    
    /**
     * JARs to include on the driver and executor CLASSPATH. For more information about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/index.html).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jarUris")
    public String[] jarUris;
    public SparkOptions withJarUris(String[] jarUris) {
        this.jarUris = jarUris;
        return this;
    }
    
    /**
     * The fully qualified name of a class in jar_uris, for example, com.example.wordcount. Exactly one of main_class and main_jar_uri field should be set for Java/Scala language type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mainClass")
    public String mainClass;
    public SparkOptions withMainClass(String mainClass) {
        this.mainClass = mainClass;
        return this;
    }
    
    /**
     * The main file/jar URI of the Spark application. Exactly one of the definition_body field and the main_file_uri field must be set for Python.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mainFileUri")
    public String mainFileUri;
    public SparkOptions withMainFileUri(String mainFileUri) {
        this.mainFileUri = mainFileUri;
        return this;
    }
    
    /**
     * Configuration properties as a set of key/value pairs, which will be passed on to the Spark application. For more information, see [Apache Spark](https://spark.apache.org/docs/latest/index.html) and the [procedure option list](https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language#procedure_option_list).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, String> properties;
    public SparkOptions withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * Python files to be placed on the PYTHONPATH for PySpark application. Supported file types: `.py`, `.egg`, and `.zip`. For more information about Apache Spark, see [Apache Spark](https://spark.apache.org/docs/latest/index.html).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pyFileUris")
    public String[] pyFileUris;
    public SparkOptions withPyFileUris(String[] pyFileUris) {
        this.pyFileUris = pyFileUris;
        return this;
    }
    
    /**
     * Runtime version. If not specified, the default runtime version is used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtimeVersion")
    public String runtimeVersion;
    public SparkOptions withRuntimeVersion(String runtimeVersion) {
        this.runtimeVersion = runtimeVersion;
        return this;
    }
    
}
