"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScheduleWorkPatternEvenWeeks:
    
    hours_friday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_friday'), 'exclude': lambda f: f is None }})  
    hours_monday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_monday'), 'exclude': lambda f: f is None }})  
    hours_saturday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_saturday'), 'exclude': lambda f: f is None }})  
    hours_sunday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_sunday'), 'exclude': lambda f: f is None }})  
    hours_thursday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_thursday'), 'exclude': lambda f: f is None }})  
    hours_tuesday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_tuesday'), 'exclude': lambda f: f is None }})  
    hours_wednesday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_wednesday'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScheduleWorkPatternOddWeeks:
    
    hours_friday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_friday'), 'exclude': lambda f: f is None }})  
    hours_monday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_monday'), 'exclude': lambda f: f is None }})  
    hours_saturday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_saturday'), 'exclude': lambda f: f is None }})  
    hours_sunday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_sunday'), 'exclude': lambda f: f is None }})  
    hours_thursday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_thursday'), 'exclude': lambda f: f is None }})  
    hours_tuesday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_tuesday'), 'exclude': lambda f: f is None }})  
    hours_wednesday: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours_wednesday'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScheduleWorkPattern:
    
    even_weeks: Optional[ScheduleWorkPatternEvenWeeks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('even_weeks'), 'exclude': lambda f: f is None }})  
    odd_weeks: Optional[ScheduleWorkPatternOddWeeks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('odd_weeks'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Schedule:
    
    end_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_date') }})
    r"""The end date, inclusive, of the schedule period."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""A unique identifier for an object."""  
    start_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date') }})
    r"""The start date, inclusive, of the schedule period."""  
    work_pattern: ScheduleWorkPattern = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('work_pattern') }})  
    