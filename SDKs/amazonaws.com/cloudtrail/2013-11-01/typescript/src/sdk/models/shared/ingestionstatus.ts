/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A table showing information about the most recent successful and failed attempts to ingest events.
 */
export class IngestionStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "LatestIngestionAttemptEventID" })
  latestIngestionAttemptEventID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestIngestionAttemptTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestIngestionAttemptTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestIngestionErrorCode" })
  latestIngestionErrorCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestIngestionSuccessEventID" })
  latestIngestionSuccessEventID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestIngestionSuccessTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  latestIngestionSuccessTime?: Date;
}
