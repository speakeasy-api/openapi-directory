// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountTokenRequestCookieTypeEnum - If you specify a cookie type then a content filter cookie will be returned
// along with the token(s). This is only intended for web based clients which
// need to pass the cookies to a server to render a page based on the user's
// content filters e.g subscription code.
//
// If type `Session` the cookie will be session based.
// If type `Persistent` the cookie will have a medium term lifespan.
// If undefined no cookies will be set.
type AccountTokenRequestCookieTypeEnum string

const (
	AccountTokenRequestCookieTypeEnumSession    AccountTokenRequestCookieTypeEnum = "Session"
	AccountTokenRequestCookieTypeEnumPersistent AccountTokenRequestCookieTypeEnum = "Persistent"
)

func (e *AccountTokenRequestCookieTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Session":
		fallthrough
	case "Persistent":
		*e = AccountTokenRequestCookieTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountTokenRequestCookieTypeEnum: %s", s)
	}
}

type AccountTokenRequestScopesEnum string

const (
	AccountTokenRequestScopesEnumCatalog  AccountTokenRequestScopesEnum = "Catalog"
	AccountTokenRequestScopesEnumCommerce AccountTokenRequestScopesEnum = "Commerce"
	AccountTokenRequestScopesEnumSettings AccountTokenRequestScopesEnum = "Settings"
	AccountTokenRequestScopesEnumPlayback AccountTokenRequestScopesEnum = "Playback"
)

func (e *AccountTokenRequestScopesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Catalog":
		fallthrough
	case "Commerce":
		fallthrough
	case "Settings":
		fallthrough
	case "Playback":
		*e = AccountTokenRequestScopesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountTokenRequestScopesEnum: %s", s)
	}
}

// AccountTokenRequest - The account credentials with requested token scope.
type AccountTokenRequest struct {
	// If you specify a cookie type then a content filter cookie will be returned
	// along with the token(s). This is only intended for web based clients which
	// need to pass the cookies to a server to render a page based on the user's
	// content filters e.g subscription code.
	//
	// If type `Session` the cookie will be session based.
	// If type `Persistent` the cookie will have a medium term lifespan.
	// If undefined no cookies will be set.
	//
	CookieType *AccountTokenRequestCookieTypeEnum `json:"cookieType,omitempty"`
	// The email associated with the account.
	Email string `json:"email"`
	// The password associated with the account.
	Password string `json:"password"`
	// The scope(s) of the tokens required.
	// For each scope listed an Account and Profile token of that scope will be returned
	//
	Scopes []AccountTokenRequestScopesEnum `json:"scopes"`
}
