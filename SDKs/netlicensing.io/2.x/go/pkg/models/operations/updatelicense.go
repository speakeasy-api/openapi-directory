// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type UpdateLicenseSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type UpdateLicenseRequestBody struct {
	Active *bool `form:"name=active"`
	// Specifies currency for the License price. Check data types to discover which currencies are supported. Read-only, set from License Template on creation
	Currency *string `form:"name=currency"`
	// If set to 'true', this License is not shown in NetLicensing Shop as purchased License. Set from License Template on creation, if not specified explicitly
	Hidden *bool `form:"name=hidden"`
	// Name for the Licensed item. Set from License Template on creation, if not specified explicitly.
	Name *string `form:"name=name"`
	// Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
	Number        *string `form:"name=number"`
	Parentfeature *string `form:"name=parentfeature"`
	// Price for the License. If > 0, it must always be accompanied by the currency specification. Read-only, set from License Template on creation
	Price *float64 `form:"name=price"`
	// Mandatory for 'Pay-per-Use' License Model.
	Quantity *string `form:"name=quantity"`
	// For 'TIMEVOLUME' License type
	StartDate *time.Time `form:"name=startDate"`
	// Mandatory for 'TIMEVOLUME' License Type.
	TimeVolume *string `form:"name=timeVolume"`
	// For 'TIMEVOLUME' License Type.
	TimeVolumePeriod *string `form:"name=timeVolumePeriod"`
	// Mandatory for 'Pay-per-Use' License Model.
	UsedQuantity *string `form:"name=usedQuantity"`
}

type UpdateLicenseRequest struct {
	RequestBody *UpdateLicenseRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
	// Unique number (across all Products/Licensees of a Vendor) that identifies the License. Vendor can assign this number when creating a License or let NetLicensing generate one. Read-only after corresponding creation Transaction status is set to closed.
	LicenseNumber string `pathParam:"style=simple,explode=false,name=licenseNumber"`
}

type UpdateLicenseResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful request
	Netlicensing *shared.Netlicensing
}
