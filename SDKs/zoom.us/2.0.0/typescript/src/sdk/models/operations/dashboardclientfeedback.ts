/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class DashboardClientFeedbackSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class DashboardClientFeedbackRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;
}

export class DashboardClientFeedback200ApplicationXMLClientFeedbacks extends SpeakeasyBase {
  /**
   * Feedback Id
   */
  @SpeakeasyMetadata()
  feedbackId?: string;

  /**
   * Feedback Name
   */
  @SpeakeasyMetadata()
  feedbackName?: string;

  /**
   * The number of participants that upvoted the feedback.
   */
  @SpeakeasyMetadata()
  participantsCount?: number;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Client Feedback details returned.
 */
export class DashboardClientFeedback200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DashboardClientFeedback200ApplicationXMLClientFeedbacks,
  })
  clientFeedbacks?: DashboardClientFeedback200ApplicationXMLClientFeedbacks[];

  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  from?: Date;

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  to?: Date;

  /**
   * The number of all records available across pages
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

export class DashboardClientFeedback200ApplicationJSONClientFeedbacks extends SpeakeasyBase {
  /**
   * Feedback Id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feedback_id" })
  feedbackId?: string;

  /**
   * Feedback Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feedback_name" })
  feedbackName?: string;

  /**
   * The number of participants that upvoted the feedback.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participants_count" })
  participantsCount?: number;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Client Feedback details returned.
 */
export class DashboardClientFeedback200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DashboardClientFeedback200ApplicationJSONClientFeedbacks,
  })
  @Expose({ name: "client_feedbacks" })
  @Type(() => DashboardClientFeedback200ApplicationJSONClientFeedbacks)
  clientFeedbacks?: DashboardClientFeedback200ApplicationJSONClientFeedbacks[];

  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;

  /**
   * The number of all records available across pages
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class DashboardClientFeedbackResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Client Feedback details returned.
   */
  @SpeakeasyMetadata()
  dashboardClientFeedback200ApplicationJSONObject?: DashboardClientFeedback200ApplicationJSON;
}
