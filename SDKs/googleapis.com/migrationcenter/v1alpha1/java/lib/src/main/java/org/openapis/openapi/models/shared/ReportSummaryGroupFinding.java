/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReportSummaryGroupFinding - Summary Findings for a specific Group.
 */
public class ReportSummaryGroupFinding {
    /**
     * Aggregate statistics for a collection of assets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetAggregateStats")
    public ReportSummaryAssetAggregateStats assetAggregateStats;

    public ReportSummaryGroupFinding withAssetAggregateStats(ReportSummaryAssetAggregateStats assetAggregateStats) {
        this.assetAggregateStats = assetAggregateStats;
        return this;
    }
    
    /**
     * Description for the Group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public ReportSummaryGroupFinding withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Display Name for the Group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public ReportSummaryGroupFinding withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Count of the number of assets in this group which are also included in another group within the same report.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overlappingAssetCount")
    public String overlappingAssetCount;

    public ReportSummaryGroupFinding withOverlappingAssetCount(String overlappingAssetCount) {
        this.overlappingAssetCount = overlappingAssetCount;
        return this;
    }
    
    /**
     * Findings for each of the PreferenceSets for this group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferenceSetFindings")
    public ReportSummaryGroupPreferenceSetFinding[] preferenceSetFindings;

    public ReportSummaryGroupFinding withPreferenceSetFindings(ReportSummaryGroupPreferenceSetFinding[] preferenceSetFindings) {
        this.preferenceSetFindings = preferenceSetFindings;
        return this;
    }
    
    public ReportSummaryGroupFinding(){}
}
