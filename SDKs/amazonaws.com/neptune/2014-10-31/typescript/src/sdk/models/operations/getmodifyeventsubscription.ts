/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETModifyEventSubscriptionActionEnum {
  ModifyEventSubscription = "ModifyEventSubscription",
}

export enum GETModifyEventSubscriptionVersionEnum {
  TwoThousandAndFourteen1031 = "2014-10-31",
}

export class GETModifyEventSubscriptionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyEventSubscriptionActionEnum;

  /**
   *  A Boolean value; set to <b>true</b> to activate the subscription.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Enabled",
  })
  enabled?: boolean;

  /**
   *  A list of event categories for a SourceType that you want to subscribe to. You can see a list of the categories for a given SourceType by using the <b>DescribeEventCategories</b> action.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EventCategories",
  })
  eventCategories?: string[];

  /**
   * The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SnsTopicArn",
  })
  snsTopicArn?: string;

  /**
   * <p>The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you would set this parameter to db-instance. if this value is not specified, all events are returned.</p> <p>Valid values: db-instance | db-parameter-group | db-security-group | db-snapshot</p>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SourceType",
  })
  sourceType?: string;

  /**
   * The name of the event notification subscription.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SubscriptionName",
  })
  subscriptionName: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyEventSubscriptionVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyEventSubscriptionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
