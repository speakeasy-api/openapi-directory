"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class TermsOfServiceAcceptanceInfoTypeEnum(str, Enum):
    r"""The type of Terms of Service."""
    ADYEN_ACCOUNT = 'adyenAccount'
    ADYEN_CAPITAL = 'adyenCapital'
    ADYEN_CARD = 'adyenCard'
    ADYEN_FOR_PLATFORMS_ADVANCED = 'adyenForPlatformsAdvanced'
    ADYEN_FOR_PLATFORMS_MANAGE = 'adyenForPlatformsManage'
    ADYEN_FRANCHISEE = 'adyenFranchisee'
    ADYEN_ISSUING = 'adyenIssuing'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TermsOfServiceAcceptanceInfo:
    
    accepted_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptedBy'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the user that accepted the Terms of Service."""  
    accepted_for: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptedFor'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the legal entity for which the Terms of Service are accepted."""  
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date when the Terms of Service were accepted."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""An Adyen-generated reference for the accepted Terms of Service."""  
    type: Optional[TermsOfServiceAcceptanceInfoTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of Terms of Service."""  
    