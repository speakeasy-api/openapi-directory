"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ewsavailabilityprovider as shared_ewsavailabilityprovider
from ..shared import lambdaavailabilityprovider as shared_lambdaavailabilityprovider
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestAvailabilityConfigurationRequest:
    
    organization_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrganizationId') }})  
    domain_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainName'), 'exclude': lambda f: f is None }})  
    ews_provider: Optional[shared_ewsavailabilityprovider.EwsAvailabilityProvider] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EwsProvider'), 'exclude': lambda f: f is None }})
    r"""Describes an EWS based availability provider. This is only used as input to the service."""  
    lambda_provider: Optional[shared_lambdaavailabilityprovider.LambdaAvailabilityProvider] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LambdaProvider'), 'exclude': lambda f: f is None }})
    r"""Describes a Lambda based availability provider."""  
    