"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import addresses as shared_addresses
from ..shared import detailedservice as shared_detailedservice
from ..shared import hours as shared_hours
from ..shared import operatingstatus as shared_operatingstatus
from ..shared import phone as shared_phone
from ..shared import satisfaction as shared_satisfaction
from ..shared import services as shared_services
from ..shared import waittimes as shared_waittimes
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FacilityAttributesActiveStatusEnum(str, Enum):
    r"""This field is deprecated and replaced with \\"operating_status\\"."""
    A = 'A'
    T = 'T'

class FacilityAttributesFacilityTypeEnum(str, Enum):
    VA_BENEFITS_FACILITY = 'va_benefits_facility'
    VA_CEMETERY = 'va_cemetery'
    VA_HEALTH_FACILITY = 'va_health_facility'
    VET_CENTER = 'vet_center'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FacilityAttributes:
    
    facility_type: FacilityAttributesFacilityTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('facility_type') }})  
    lat: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lat') }})
    r"""Facility latitude"""  
    long: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('long') }})
    r"""Facility longitude"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    operating_status: shared_operatingstatus.OperatingStatus = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operating_status') }})
    r"""Current status of facility operations. The overall status of the facility, which can be: Normal Hours and Services, Facility Notice, Limited Hours and/or Services, or Closed. This field replaces active_status."""  
    active_status: Optional[FacilityAttributesActiveStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active_status'), 'exclude': lambda f: f is None }})
    r"""This field is deprecated and replaced with \\"operating_status\\"."""  
    address: Optional[shared_addresses.Addresses] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    classification: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('classification'), 'exclude': lambda f: f is None }})  
    detailed_services: Optional[list[shared_detailedservice.DetailedService]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detailed_services'), 'exclude': lambda f: f is None }})  
    hours: Optional[shared_hours.Hours] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hours'), 'exclude': lambda f: f is None }})
    r"""Standard hours of operation. Currently formatted as descriptive text suitable for display, with no guarantee of a standard parseable format. Hours of operation may vary due to holidays or other events."""  
    mobile: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobile'), 'exclude': lambda f: f is None }})  
    operational_hours_special_instructions: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operational_hours_special_instructions'), 'exclude': lambda f: f is None }})  
    phone: Optional[shared_phone.Phone] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})  
    satisfaction: Optional[shared_satisfaction.Satisfaction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('satisfaction'), 'exclude': lambda f: f is None }})  
    services: Optional[shared_services.Services] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('services'), 'exclude': lambda f: f is None }})  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_zone'), 'exclude': lambda f: f is None }})
    r"""Facility time zone"""  
    visn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visn'), 'exclude': lambda f: f is None }})  
    wait_times: Optional[shared_waittimes.WaitTimes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wait_times'), 'exclude': lambda f: f is None }})  
    website: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('website'), 'exclude': lambda f: f is None }})  
    