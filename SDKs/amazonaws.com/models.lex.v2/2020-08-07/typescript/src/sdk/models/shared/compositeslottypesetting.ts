/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SubSlotTypeComposition } from "./subslottypecomposition";
import { Expose, Type } from "class-transformer";

/**
 * A composite slot is a combination of two or more slots that capture multiple pieces of information in a single user input.
 */
export class CompositeSlotTypeSetting extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: SubSlotTypeComposition })
  @Expose({ name: "subSlots" })
  @Type(() => SubSlotTypeComposition)
  subSlots?: SubSlotTypeComposition[];
}
