<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PersonalNameGeoSubclassificationOut - Classified names at sub country level (region or state)
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PersonalNameGeoSubclassificationOut
{
    /**
     * The input country ISO2 code
     * 
     * @var ?string $countryIso2
     */
	#[\JMS\Serializer\Annotation\SerializedName('countryIso2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryIso2 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The input name
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. 
     * 
     * @var ?float $probabilityAltCalibrated
     */
	#[\JMS\Serializer\Annotation\SerializedName('probabilityAltCalibrated')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $probabilityAltCalibrated = null;
    
    /**
     * The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. 
     * 
     * @var ?float $probabilityCalibrated
     */
	#[\JMS\Serializer\Annotation\SerializedName('probabilityCalibrated')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $probabilityCalibrated = null;
    
    /**
     * Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. 
     * 
     * @var ?float $score
     */
	#[\JMS\Serializer\Annotation\SerializedName('score')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $score = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('script')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $script = null;
    
    /**
     * Most likely subclassification ISO_3166-2 code
     * 
     * @var ?string $subClassification
     */
	#[\JMS\Serializer\Annotation\SerializedName('subClassification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subClassification = null;
    
    /**
     * Second best alternative : subclassification ISO_3166-2 code
     * 
     * @var ?string $subClassificationAlt
     */
	#[\JMS\Serializer\Annotation\SerializedName('subClassificationAlt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subClassificationAlt = null;
    
    /**
     * List subclassification ISO_3166-2 codes (top 10)
     * 
     * @var ?array<string> $subclassificationTop
     */
	#[\JMS\Serializer\Annotation\SerializedName('subclassificationTop')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subclassificationTop = null;
    
	public function __construct()
	{
		$this->countryIso2 = null;
		$this->id = null;
		$this->name = null;
		$this->probabilityAltCalibrated = null;
		$this->probabilityCalibrated = null;
		$this->score = null;
		$this->script = null;
		$this->subClassification = null;
		$this->subClassificationAlt = null;
		$this->subclassificationTop = null;
	}
}
