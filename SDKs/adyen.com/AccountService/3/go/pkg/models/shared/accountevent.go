// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// AccountEventEventEnum - The event.
// >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.
// For more information, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).
type AccountEventEventEnum string

const (
	AccountEventEventEnumInactivateAccount         AccountEventEventEnum = "InactivateAccount"
	AccountEventEventEnumRefundNotPaidOutTransfers AccountEventEventEnum = "RefundNotPaidOutTransfers"
)

func (e AccountEventEventEnum) ToPointer() *AccountEventEventEnum {
	return &e
}

func (e *AccountEventEventEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InactivateAccount":
		fallthrough
	case "RefundNotPaidOutTransfers":
		*e = AccountEventEventEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountEventEventEnum: %v", v)
	}
}

type AccountEvent struct {
	// The event.
	// >Permitted values: `InactivateAccount`, `RefundNotPaidOutTransfers`.
	// For more information, refer to [Verification checks](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process).
	Event *AccountEventEventEnum `json:"event,omitempty"`
	// The date on which the event will take place.
	ExecutionDate *time.Time `json:"executionDate,omitempty"`
	// The reason why this event has been created.
	Reason *string `json:"reason,omitempty"`
}
