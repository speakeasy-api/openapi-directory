/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { V1Money } from "./v1money";
import { V1PaymentDiscount } from "./v1paymentdiscount";
import { V1PaymentItemDetail } from "./v1paymentitemdetail";
import { V1PaymentModifier } from "./v1paymentmodifier";
import { V1PaymentTax } from "./v1paymenttax";
import { Expose, Type } from "class-transformer";

/**
 * Payment include an` itemizations` field that lists the items purchased,
 *
 * @remarks
 * along with associated fees, modifiers, and discounts. Each itemization has an
 * `itemization_type` field that indicates which of the following the itemization
 * represents:
 *
 * <ul>
 * <li>An item variation from the merchant's item library</li>
 * <li>A custom monetary amount</li>
 * <li>
 * An action performed on a Square gift card, such as activating or
 * reloading it.
 * </li>
 * </ul>
 *
 * *Note**: itemization information included in a `Payment` object reflects
 * details collected **at the time of the payment**. Details such as the name or
 * price of items might have changed since the payment was processed.
 */
export class V1PaymentItemization extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "discount_money" })
  @Type(() => V1Money)
  discountMoney?: V1Money;

  /**
   * All discounts applied to this itemization.
   */
  @SpeakeasyMetadata({ elemType: V1PaymentDiscount })
  @Expose({ name: "discounts" })
  @Type(() => V1PaymentDiscount)
  discounts?: V1PaymentDiscount[];

  @SpeakeasyMetadata()
  @Expose({ name: "gross_sales_money" })
  @Type(() => V1Money)
  grossSalesMoney?: V1Money;

  /**
   * V1PaymentItemDetail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "item_detail" })
  @Type(() => V1PaymentItemDetail)
  itemDetail?: V1PaymentItemDetail;

  /**
   * The name of the item variation purchased, if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "item_variation_name" })
  itemVariationName?: string;

  /**
   * The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemization_type" })
  itemizationType?: string;

  /**
   * All modifier options applied to this itemization.
   */
  @SpeakeasyMetadata({ elemType: V1PaymentModifier })
  @Expose({ name: "modifiers" })
  @Type(() => V1PaymentModifier)
  modifiers?: V1PaymentModifier[];

  /**
   * The item's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "net_sales_money" })
  @Type(() => V1Money)
  netSalesMoney?: V1Money;

  /**
   * Notes entered by the merchant about the item at the time of payment, if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * The quantity of the item purchased. This can be a decimal value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "single_quantity_money" })
  @Type(() => V1Money)
  singleQuantityMoney?: V1Money;

  /**
   * All taxes applied to this itemization.
   */
  @SpeakeasyMetadata({ elemType: V1PaymentTax })
  @Expose({ name: "taxes" })
  @Type(() => V1PaymentTax)
  taxes?: V1PaymentTax[];

  @SpeakeasyMetadata()
  @Expose({ name: "total_money" })
  @Type(() => V1Money)
  totalMoney?: V1Money;
}
