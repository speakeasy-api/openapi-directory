/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UsageLimit - The usage limit object.
 */
public class UsageLimit {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Long amount;
    public UsageLimit withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("breachAction")
    public UsageLimitBreachActionEnum breachAction;
    public UsageLimit withBreachAction(UsageLimitBreachActionEnum breachAction) {
        this.breachAction = breachAction;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("period")
    public UsageLimitPeriodEnum period;
    public UsageLimit withPeriod(UsageLimitPeriodEnum period) {
        this.period = period;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceArn")
    public String resourceArn;
    public UsageLimit withResourceArn(String resourceArn) {
        this.resourceArn = resourceArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usageLimitArn")
    public String usageLimitArn;
    public UsageLimit withUsageLimitArn(String usageLimitArn) {
        this.usageLimitArn = usageLimitArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usageLimitId")
    public String usageLimitId;
    public UsageLimit withUsageLimitId(String usageLimitId) {
        this.usageLimitId = usageLimitId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usageType")
    public UsageLimitUsageTypeEnum usageType;
    public UsageLimit withUsageType(UsageLimitUsageTypeEnum usageType) {
        this.usageType = usageType;
        return this;
    }
    
}
