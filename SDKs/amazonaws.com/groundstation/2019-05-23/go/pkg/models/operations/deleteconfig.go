// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteConfigConfigTypeEnum - Type of a <code>Config</code>.
type DeleteConfigConfigTypeEnum string

const (
	DeleteConfigConfigTypeEnumAntennaDownlink            DeleteConfigConfigTypeEnum = "antenna-downlink"
	DeleteConfigConfigTypeEnumAntennaDownlinkDemodDecode DeleteConfigConfigTypeEnum = "antenna-downlink-demod-decode"
	DeleteConfigConfigTypeEnumAntennaUplink              DeleteConfigConfigTypeEnum = "antenna-uplink"
	DeleteConfigConfigTypeEnumDataflowEndpoint           DeleteConfigConfigTypeEnum = "dataflow-endpoint"
	DeleteConfigConfigTypeEnumTracking                   DeleteConfigConfigTypeEnum = "tracking"
	DeleteConfigConfigTypeEnumUplinkEcho                 DeleteConfigConfigTypeEnum = "uplink-echo"
	DeleteConfigConfigTypeEnumS3Recording                DeleteConfigConfigTypeEnum = "s3-recording"
)

func (e DeleteConfigConfigTypeEnum) ToPointer() *DeleteConfigConfigTypeEnum {
	return &e
}

func (e *DeleteConfigConfigTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "antenna-downlink":
		fallthrough
	case "antenna-downlink-demod-decode":
		fallthrough
	case "antenna-uplink":
		fallthrough
	case "dataflow-endpoint":
		fallthrough
	case "tracking":
		fallthrough
	case "uplink-echo":
		fallthrough
	case "s3-recording":
		*e = DeleteConfigConfigTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteConfigConfigTypeEnum: %v", v)
	}
}

type DeleteConfigRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// UUID of a <code>Config</code>.
	ConfigID string `pathParam:"style=simple,explode=false,name=configId"`
	// Type of a <code>Config</code>.
	ConfigType DeleteConfigConfigTypeEnum `pathParam:"style=simple,explode=false,name=configType"`
}

type DeleteConfigResponse struct {
	// Success
	ConfigIDResponse *shared.ConfigIDResponse
	ContentType      string
	// DependencyException
	DependencyException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
