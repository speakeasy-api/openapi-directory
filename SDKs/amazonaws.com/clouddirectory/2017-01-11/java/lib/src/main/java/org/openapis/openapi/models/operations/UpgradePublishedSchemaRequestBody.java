/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpgradePublishedSchemaRequestBody {
    /**
     * The ARN of the development schema with the changes used for the upgrade.
     */
    @JsonProperty("DevelopmentSchemaArn")
    public String developmentSchemaArn;
    public UpgradePublishedSchemaRequestBody withDevelopmentSchemaArn(String developmentSchemaArn) {
        this.developmentSchemaArn = developmentSchemaArn;
        return this;
    }
    
    /**
     * Used for testing whether the Development schema provided is backwards compatible, or not, with the publish schema provided by the user to be upgraded. If schema compatibility fails, an exception would be thrown else the call would succeed. This parameter is optional and defaults to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DryRun")
    public Boolean dryRun;
    public UpgradePublishedSchemaRequestBody withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * Identifies the minor version of the published schema that will be created. This parameter is NOT optional.
     */
    @JsonProperty("MinorVersion")
    public String minorVersion;
    public UpgradePublishedSchemaRequestBody withMinorVersion(String minorVersion) {
        this.minorVersion = minorVersion;
        return this;
    }
    
    /**
     * The ARN of the published schema to be upgraded.
     */
    @JsonProperty("PublishedSchemaArn")
    public String publishedSchemaArn;
    public UpgradePublishedSchemaRequestBody withPublishedSchemaArn(String publishedSchemaArn) {
        this.publishedSchemaArn = publishedSchemaArn;
        return this;
    }
    
}
