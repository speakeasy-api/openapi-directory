<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SubscriptionResponse - Complete details for an event subscription.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SubscriptionResponse
{
    /**
     * Determines if the subscription is active or paused.
     * 
     * @var bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $active;
    
    /**
     * When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SubscriptionResponseEventTypeEnum $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SubscriptionResponseEventTypeEnum>')]
    public SubscriptionResponseEventTypeEnum $eventType;
    
    /**
     * The unique ID of the subscription.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The internal name of the property being monitored for changes. Only applies when `eventType` is `propertyChange`.
     * 
     * @var ?string $propertyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('propertyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $propertyName = null;
    
    /**
     * When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).
     * 
     * @var ?\DateTime $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	public function __construct()
	{
		$this->active = false;
		$this->createdAt = new \DateTime();
		$this->eventType = \OpenAPI\OpenAPI\Models\Shared\SubscriptionResponseEventTypeEnum::CONTACT_PROPERTY_CHANGE;
		$this->id = "";
		$this->propertyName = null;
		$this->updatedAt = null;
	}
}
