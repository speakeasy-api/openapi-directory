"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckTransfer = exports.CheckTransferTypeEnum = exports.CheckTransferCheckTransferSubmission = exports.CheckTransferCheckTransferStopPaymentRequest = exports.CheckTransferCheckTransferStopPaymentRequestTypeEnum = exports.CheckTransferStatusEnum = exports.CheckTransferReturnAddress = exports.CheckTransferCheckTransferDeposit = exports.CheckTransferCheckTransferDepositTypeEnum = exports.CheckTransferCurrencyEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
 */
var CheckTransferCurrencyEnum;
(function (CheckTransferCurrencyEnum) {
    CheckTransferCurrencyEnum["Cad"] = "CAD";
    CheckTransferCurrencyEnum["Chf"] = "CHF";
    CheckTransferCurrencyEnum["Eur"] = "EUR";
    CheckTransferCurrencyEnum["Gbp"] = "GBP";
    CheckTransferCurrencyEnum["Jpy"] = "JPY";
    CheckTransferCurrencyEnum["Usd"] = "USD";
})(CheckTransferCurrencyEnum = exports.CheckTransferCurrencyEnum || (exports.CheckTransferCurrencyEnum = {}));
/**
 * A constant representing the object's type. For this resource it will always be `check_transfer_deposit`.
 */
var CheckTransferCheckTransferDepositTypeEnum;
(function (CheckTransferCheckTransferDepositTypeEnum) {
    CheckTransferCheckTransferDepositTypeEnum["CheckTransferDeposit"] = "check_transfer_deposit";
})(CheckTransferCheckTransferDepositTypeEnum = exports.CheckTransferCheckTransferDepositTypeEnum || (exports.CheckTransferCheckTransferDepositTypeEnum = {}));
/**
 * After a check transfer is deposited, this will contain supplemental details.
 */
var CheckTransferCheckTransferDeposit = /** @class */ (function (_super) {
    __extends(CheckTransferCheckTransferDeposit, _super);
    function CheckTransferCheckTransferDeposit() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "back_image_file_id" }),
        __metadata("design:type", String)
    ], CheckTransferCheckTransferDeposit.prototype, "backImageFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "front_image_file_id" }),
        __metadata("design:type", String)
    ], CheckTransferCheckTransferDeposit.prototype, "frontImageFileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], CheckTransferCheckTransferDeposit.prototype, "type", void 0);
    return CheckTransferCheckTransferDeposit;
}(utils_1.SpeakeasyBase));
exports.CheckTransferCheckTransferDeposit = CheckTransferCheckTransferDeposit;
/**
 * The return address to be printed on the check.
 */
var CheckTransferReturnAddress = /** @class */ (function (_super) {
    __extends(CheckTransferReturnAddress, _super);
    function CheckTransferReturnAddress() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city" }),
        __metadata("design:type", String)
    ], CheckTransferReturnAddress.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line1" }),
        __metadata("design:type", String)
    ], CheckTransferReturnAddress.prototype, "line1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line2" }),
        __metadata("design:type", String)
    ], CheckTransferReturnAddress.prototype, "line2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], CheckTransferReturnAddress.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], CheckTransferReturnAddress.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "zip" }),
        __metadata("design:type", String)
    ], CheckTransferReturnAddress.prototype, "zip", void 0);
    return CheckTransferReturnAddress;
}(utils_1.SpeakeasyBase));
exports.CheckTransferReturnAddress = CheckTransferReturnAddress;
/**
 * The lifecycle status of the transfer.
 */
var CheckTransferStatusEnum;
(function (CheckTransferStatusEnum) {
    CheckTransferStatusEnum["PendingApproval"] = "pending_approval";
    CheckTransferStatusEnum["PendingSubmission"] = "pending_submission";
    CheckTransferStatusEnum["Submitting"] = "submitting";
    CheckTransferStatusEnum["Submitted"] = "submitted";
    CheckTransferStatusEnum["PendingMailing"] = "pending_mailing";
    CheckTransferStatusEnum["Mailed"] = "mailed";
    CheckTransferStatusEnum["Canceled"] = "canceled";
    CheckTransferStatusEnum["Deposited"] = "deposited";
    CheckTransferStatusEnum["Stopped"] = "stopped";
    CheckTransferStatusEnum["Returned"] = "returned";
    CheckTransferStatusEnum["Rejected"] = "rejected";
    CheckTransferStatusEnum["RequiresAttention"] = "requires_attention";
})(CheckTransferStatusEnum = exports.CheckTransferStatusEnum || (exports.CheckTransferStatusEnum = {}));
/**
 * A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.
 */
var CheckTransferCheckTransferStopPaymentRequestTypeEnum;
(function (CheckTransferCheckTransferStopPaymentRequestTypeEnum) {
    CheckTransferCheckTransferStopPaymentRequestTypeEnum["CheckTransferStopPaymentRequest"] = "check_transfer_stop_payment_request";
})(CheckTransferCheckTransferStopPaymentRequestTypeEnum = exports.CheckTransferCheckTransferStopPaymentRequestTypeEnum || (exports.CheckTransferCheckTransferStopPaymentRequestTypeEnum = {}));
/**
 * After a stop-payment is requested on the check, this will contain supplemental details.
 */
var CheckTransferCheckTransferStopPaymentRequest = /** @class */ (function (_super) {
    __extends(CheckTransferCheckTransferStopPaymentRequest, _super);
    function CheckTransferCheckTransferStopPaymentRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requested_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CheckTransferCheckTransferStopPaymentRequest.prototype, "requestedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], CheckTransferCheckTransferStopPaymentRequest.prototype, "transactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_id" }),
        __metadata("design:type", String)
    ], CheckTransferCheckTransferStopPaymentRequest.prototype, "transferId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], CheckTransferCheckTransferStopPaymentRequest.prototype, "type", void 0);
    return CheckTransferCheckTransferStopPaymentRequest;
}(utils_1.SpeakeasyBase));
exports.CheckTransferCheckTransferStopPaymentRequest = CheckTransferCheckTransferStopPaymentRequest;
/**
 * After the transfer is submitted, this will contain supplemental details.
 */
var CheckTransferCheckTransferSubmission = /** @class */ (function (_super) {
    __extends(CheckTransferCheckTransferSubmission, _super);
    function CheckTransferCheckTransferSubmission() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "check_number" }),
        __metadata("design:type", String)
    ], CheckTransferCheckTransferSubmission.prototype, "checkNumber", void 0);
    return CheckTransferCheckTransferSubmission;
}(utils_1.SpeakeasyBase));
exports.CheckTransferCheckTransferSubmission = CheckTransferCheckTransferSubmission;
/**
 * A constant representing the object's type. For this resource it will always be `check_transfer`.
 */
var CheckTransferTypeEnum;
(function (CheckTransferTypeEnum) {
    CheckTransferTypeEnum["CheckTransfer"] = "check_transfer";
})(CheckTransferTypeEnum = exports.CheckTransferTypeEnum || (exports.CheckTransferTypeEnum = {}));
/**
 * Check Transfers move funds from your Increase account by mailing a physical check.
 */
var CheckTransfer = /** @class */ (function (_super) {
    __extends(CheckTransfer, _super);
    function CheckTransfer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_id" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_city" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "addressCity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_line1" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "addressLine1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_line2" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "addressLine2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_state" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "addressState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_zip" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "addressZip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], CheckTransfer.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CheckTransfer.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deposit" }),
        (0, class_transformer_1.Type)(function () { return CheckTransferCheckTransferDeposit; }),
        __metadata("design:type", CheckTransferCheckTransferDeposit)
    ], CheckTransfer.prototype, "deposit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mailed_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CheckTransfer.prototype, "mailedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "message", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "note" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "note", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recipient_name" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "recipientName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "return_address" }),
        (0, class_transformer_1.Type)(function () { return CheckTransferReturnAddress; }),
        __metadata("design:type", CheckTransferReturnAddress)
    ], CheckTransfer.prototype, "returnAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stop_payment_request" }),
        (0, class_transformer_1.Type)(function () { return CheckTransferCheckTransferStopPaymentRequest; }),
        __metadata("design:type", CheckTransferCheckTransferStopPaymentRequest)
    ], CheckTransfer.prototype, "stopPaymentRequest", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submission" }),
        (0, class_transformer_1.Type)(function () { return CheckTransferCheckTransferSubmission; }),
        __metadata("design:type", CheckTransferCheckTransferSubmission)
    ], CheckTransfer.prototype, "submission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submitted_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CheckTransfer.prototype, "submittedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "template_id" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "templateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transaction_id" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "transactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], CheckTransfer.prototype, "type", void 0);
    return CheckTransfer;
}(utils_1.SpeakeasyBase));
exports.CheckTransfer = CheckTransfer;
